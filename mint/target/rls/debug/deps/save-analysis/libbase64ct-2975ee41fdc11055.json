{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2","program":"/Users/air/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","base64ct","--edition=2021","/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"alloc\"","-C","metadata=2975ee41fdc11055","-C","extra-filename=-2975ee41fdc11055","--out-dir","/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps","-L","dependency=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/air/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libbase64ct-2975ee41fdc11055.rmeta"},"prelude":{"crate_id":{"name":"base64ct","disambiguator":[3232063365765571919,0]},"crate_root":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src","external_crates":[{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[9994580471200982198,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[13944031075627487246,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[5133993387825513881,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[14116380118705386640,0]}}],"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":0,"byte_end":2678,"line_start":1,"line_end":103,"column_start":1,"column_end":33}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":389},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":2310,"byte_end":2322,"line_start":90,"line_end":90,"column_start":17,"column_end":29},"alias_span":null,"name":"Base64Bcrypt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":390},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":2310,"byte_end":2322,"line_start":90,"line_end":90,"column_start":17,"column_end":29},"alias_span":null,"name":"Base64Bcrypt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":402},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":2339,"byte_end":2350,"line_start":91,"line_end":91,"column_start":16,"column_end":27},"alias_span":null,"name":"Base64Crypt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":403},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":2339,"byte_end":2350,"line_start":91,"line_end":91,"column_start":16,"column_end":27},"alias_span":null,"name":"Base64Crypt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":415},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":2371,"byte_end":2377,"line_start":92,"line_end":92,"column_start":20,"column_end":26},"alias_span":null,"name":"Base64","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":416},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":2371,"byte_end":2377,"line_start":92,"line_end":92,"column_start":20,"column_end":26},"alias_span":null,"name":"Base64","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":428},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":2379,"byte_end":2393,"line_start":92,"line_end":92,"column_start":28,"column_end":42},"alias_span":null,"name":"Base64Unpadded","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":429},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":2379,"byte_end":2393,"line_start":92,"line_end":92,"column_start":28,"column_end":42},"alias_span":null,"name":"Base64Unpadded","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":441},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":2410,"byte_end":2419,"line_start":93,"line_end":93,"column_start":15,"column_end":24},"alias_span":null,"name":"Base64Url","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":442},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":2410,"byte_end":2419,"line_start":93,"line_end":93,"column_start":15,"column_end":24},"alias_span":null,"name":"Base64Url","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":454},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":2421,"byte_end":2438,"line_start":93,"line_end":93,"column_start":26,"column_end":43},"alias_span":null,"name":"Base64UrlUnpadded","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":455},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":2421,"byte_end":2438,"line_start":93,"line_end":93,"column_start":26,"column_end":43},"alias_span":null,"name":"Base64UrlUnpadded","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":492},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":2461,"byte_end":2468,"line_start":95,"line_end":95,"column_start":14,"column_end":21},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":220},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":2483,"byte_end":2490,"line_start":96,"line_end":96,"column_start":14,"column_end":21},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":278},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":2506,"byte_end":2514,"line_start":97,"line_end":97,"column_start":15,"column_end":23},"alias_span":null,"name":"Encoding","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":573},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":2529,"byte_end":2534,"line_start":98,"line_end":98,"column_start":14,"column_end":19},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":560},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":2536,"byte_end":2556,"line_start":98,"line_end":98,"column_start":21,"column_end":41},"alias_span":null,"name":"InvalidEncodingError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":561},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":2536,"byte_end":2556,"line_start":98,"line_end":98,"column_start":21,"column_end":41},"alias_span":null,"name":"InvalidEncodingError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":547},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":2558,"byte_end":2576,"line_start":98,"line_end":98,"column_start":43,"column_end":61},"alias_span":null,"name":"InvalidLengthError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":548},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":2558,"byte_end":2576,"line_start":98,"line_end":98,"column_start":43,"column_end":61},"alias_span":null,"name":"InvalidLengthError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":589},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":2596,"byte_end":2606,"line_start":99,"line_end":99,"column_start":18,"column_end":28},"alias_span":null,"name":"LineEnding","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":0,"byte_end":2678,"line_start":1,"line_end":103,"column_start":1,"column_end":33},"name":"","qualname":"::","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":107},{"krate":0,"index":192},{"krate":0,"index":252},{"krate":0,"index":318},{"krate":0,"index":336},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":366},{"krate":0,"index":369},{"krate":0,"index":372},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":385},{"krate":0,"index":388}],"decl_id":null,"docs":"# [RustCrypto]: Constant-Time Base64","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":0,"byte_end":10,"line_start":1,"line_end":1,"column_start":1,"column_end":11}},{"value":"warn(clippy :: integer_arithmetic, clippy :: panic, clippy ::\npanic_in_result_fn, clippy :: unwrap_used, missing_docs, rust_2018_idioms,\nunsafe_code, unused_lifetimes, unused_qualifications)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":286,"byte_end":510,"line_start":8,"line_end":18,"column_start":1,"column_end":3}},{"value":"/ # Usage","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":512,"byte_end":523,"line_start":20,"line_end":20,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":524,"byte_end":527,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ## Allocating (enable `alloc` crate feature)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":528,"byte_end":576,"line_start":22,"line_end":22,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":577,"byte_end":580,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":581,"byte_end":588,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(feature = \"alloc\")]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":589,"byte_end":620,"line_start":25,"line_end":25,"column_start":1,"column_end":32}},{"value":"/ # {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":621,"byte_end":628,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ use base64ct::{Base64, Encoding};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":629,"byte_end":666,"line_start":27,"line_end":27,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":667,"byte_end":670,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ let bytes = b\"example bytestring!\";","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":671,"byte_end":710,"line_start":29,"line_end":29,"column_start":1,"column_end":40}},{"value":"/ let encoded = Base64::encode_string(bytes);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":711,"byte_end":758,"line_start":30,"line_end":30,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(encoded, \"ZXhhbXBsZSBieXRlc3RyaW5nIQ==\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":759,"byte_end":815,"line_start":31,"line_end":31,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":816,"byte_end":819,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let decoded = Base64::decode_vec(&encoded).unwrap();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":820,"byte_end":876,"line_start":33,"line_end":33,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(decoded, bytes);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":877,"byte_end":908,"line_start":34,"line_end":34,"column_start":1,"column_end":32}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":909,"byte_end":916,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":917,"byte_end":924,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":925,"byte_end":928,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ## Heapless `no_std` usage","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":929,"byte_end":959,"line_start":38,"line_end":38,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":960,"byte_end":963,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":964,"byte_end":971,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ use base64ct::{Base64, Encoding};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":972,"byte_end":1009,"line_start":41,"line_end":41,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":1010,"byte_end":1013,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ const BUF_SIZE: usize = 128;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":1014,"byte_end":1046,"line_start":43,"line_end":43,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":1047,"byte_end":1050,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ let bytes = b\"example bytestring!\";","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":1051,"byte_end":1090,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"/ assert!(Base64::encoded_len(bytes) <= BUF_SIZE);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":1091,"byte_end":1143,"line_start":46,"line_end":46,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":1144,"byte_end":1147,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ let mut enc_buf = [0u8; BUF_SIZE];","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":1148,"byte_end":1186,"line_start":48,"line_end":48,"column_start":1,"column_end":39}},{"value":"/ let encoded = Base64::encode(bytes, &mut enc_buf).unwrap();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":1187,"byte_end":1250,"line_start":49,"line_end":49,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(encoded, \"ZXhhbXBsZSBieXRlc3RyaW5nIQ==\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":1251,"byte_end":1307,"line_start":50,"line_end":50,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":1308,"byte_end":1311,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ let mut dec_buf = [0u8; BUF_SIZE];","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":1312,"byte_end":1350,"line_start":52,"line_end":52,"column_start":1,"column_end":39}},{"value":"/ let decoded = Base64::decode(encoded, &mut dec_buf).unwrap();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":1351,"byte_end":1416,"line_start":53,"line_end":53,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(decoded, bytes);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":1417,"byte_end":1448,"line_start":54,"line_end":54,"column_start":1,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":1449,"byte_end":1456,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":1457,"byte_end":1460,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ # Implementation","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":1461,"byte_end":1481,"line_start":57,"line_end":57,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":1482,"byte_end":1485,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ Implemented using integer arithmetic alone without any lookup tables or","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":1486,"byte_end":1561,"line_start":59,"line_end":59,"column_start":1,"column_end":76}},{"value":"/ data-dependent branches, thereby providing portable \"best effort\"","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":1562,"byte_end":1631,"line_start":60,"line_end":60,"column_start":1,"column_end":70}},{"value":"/ constant-time operation.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":1632,"byte_end":1660,"line_start":61,"line_end":61,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":1661,"byte_end":1664,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ Not constant-time with respect to message length (only data).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":1665,"byte_end":1730,"line_start":63,"line_end":63,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":1731,"byte_end":1734,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Adapted from the following constant-time C++ implementation of Base64:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":1735,"byte_end":1809,"line_start":65,"line_end":65,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":1810,"byte_end":1813,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ <https://github.com/Sc00bz/ConstTimeEncoding/blob/master/base64.cpp>","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":1814,"byte_end":1886,"line_start":67,"line_end":67,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":1887,"byte_end":1890,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ Copyright (c) 2014 Steve \"Sc00bz\" Thomas (steve at tobtu dot com).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":1891,"byte_end":1961,"line_start":69,"line_end":69,"column_start":1,"column_end":71}},{"value":"/ Derived code is dual licensed MIT + Apache 2 (with permission from Sc00bz).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/lib.rs","byte_start":1962,"byte_end":2041,"line_start":70,"line_end":70,"column_start":1,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":389},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/bcrypt.rs","byte_start":6695,"byte_end":6707,"line_start":12,"line_end":12,"column_start":12,"column_end":24},"name":"Base64Bcrypt","qualname":"::alphabet::bcrypt::Base64Bcrypt","value":"","parent":null,"children":[],"decl_id":null,"docs":" bcrypt Base64 encoding.","sig":null,"attributes":[{"value":"/ bcrypt Base64 encoding.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/bcrypt.rs","byte_start":6498,"byte_end":6525,"line_start":5,"line_end":5,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/bcrypt.rs","byte_start":6526,"byte_end":6529,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/bcrypt.rs","byte_start":6530,"byte_end":6541,"line_start":7,"line_end":7,"column_start":1,"column_end":12}},{"value":"/ ./         [A-Z]      [a-z]     [0-9]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/bcrypt.rs","byte_start":6542,"byte_end":6583,"line_start":8,"line_end":8,"column_start":1,"column_end":42}},{"value":"/ 0x2e-0x2f, 0x41-0x5a, 0x61-0x7a, 0x30-0x39","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/bcrypt.rs","byte_start":6584,"byte_end":6630,"line_start":9,"line_end":9,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/bcrypt.rs","byte_start":6631,"byte_end":6638,"line_start":10,"line_end":10,"column_start":1,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":25},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/bcrypt.rs","byte_start":6753,"byte_end":6757,"line_start":15,"line_end":15,"column_start":11,"column_end":15},"name":"BASE","qualname":"::<alphabet::bcrypt::Base64Bcrypt as alphabet::Alphabet>::BASE","value":"u8","parent":{"krate":0,"index":24},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":26},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/bcrypt.rs","byte_start":6781,"byte_end":6788,"line_start":17,"line_end":17,"column_start":11,"column_end":18},"name":"DECODER","qualname":"::<alphabet::bcrypt::Base64Bcrypt as alphabet::Alphabet>::DECODER","value":"&'static [DecodeStep]","parent":{"krate":0,"index":24},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":27},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/bcrypt.rs","byte_start":7009,"byte_end":7016,"line_start":24,"line_end":24,"column_start":11,"column_end":18},"name":"ENCODER","qualname":"::<alphabet::bcrypt::Base64Bcrypt as alphabet::Alphabet>::ENCODER","value":"&'static [EncodeStep]","parent":{"krate":0,"index":24},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":28},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/bcrypt.rs","byte_start":7174,"byte_end":7180,"line_start":30,"line_end":30,"column_start":11,"column_end":17},"name":"PADDED","qualname":"::<alphabet::bcrypt::Base64Bcrypt as alphabet::Alphabet>::PADDED","value":"bool","parent":{"krate":0,"index":24},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":402},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/crypt.rs","byte_start":7487,"byte_end":7498,"line_start":12,"line_end":12,"column_start":12,"column_end":23},"name":"Base64Crypt","qualname":"::alphabet::crypt::Base64Crypt","value":"","parent":null,"children":[],"decl_id":null,"docs":" `crypt(3)` Base64 encoding.","sig":null,"attributes":[{"value":"/ `crypt(3)` Base64 encoding.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/crypt.rs","byte_start":7307,"byte_end":7338,"line_start":5,"line_end":5,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/crypt.rs","byte_start":7339,"byte_end":7342,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/crypt.rs","byte_start":7343,"byte_end":7354,"line_start":7,"line_end":7,"column_start":1,"column_end":12}},{"value":"/ [.-9]      [A-Z]      [a-z]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/crypt.rs","byte_start":7355,"byte_end":7386,"line_start":8,"line_end":8,"column_start":1,"column_end":32}},{"value":"/ 0x2e-0x39, 0x41-0x5a, 0x61-0x7a","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/crypt.rs","byte_start":7387,"byte_end":7422,"line_start":9,"line_end":9,"column_start":1,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/crypt.rs","byte_start":7423,"byte_end":7430,"line_start":10,"line_end":10,"column_start":1,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":42},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/crypt.rs","byte_start":7543,"byte_end":7547,"line_start":15,"line_end":15,"column_start":11,"column_end":15},"name":"BASE","qualname":"::<alphabet::crypt::Base64Crypt as alphabet::Alphabet>::BASE","value":"u8","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":43},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/crypt.rs","byte_start":7571,"byte_end":7578,"line_start":17,"line_end":17,"column_start":11,"column_end":18},"name":"DECODER","qualname":"::<alphabet::crypt::Base64Crypt as alphabet::Alphabet>::DECODER","value":"&'static [DecodeStep]","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":44},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/crypt.rs","byte_start":7757,"byte_end":7764,"line_start":23,"line_end":23,"column_start":11,"column_end":18},"name":"ENCODER","qualname":"::<alphabet::crypt::Base64Crypt as alphabet::Alphabet>::ENCODER","value":"&'static [EncodeStep]","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":45},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/crypt.rs","byte_start":7868,"byte_end":7874,"line_start":26,"line_end":26,"column_start":11,"column_end":17},"name":"PADDED","qualname":"::<alphabet::crypt::Base64Crypt as alphabet::Alphabet>::PADDED","value":"bool","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":415},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/standard.rs","byte_start":8219,"byte_end":8225,"line_start":12,"line_end":12,"column_start":12,"column_end":18},"name":"Base64","qualname":"::alphabet::standard::Base64","value":"","parent":null,"children":[],"decl_id":null,"docs":" Standard Base64 encoding with `=` padding.","sig":null,"attributes":[{"value":"/ Standard Base64 encoding with `=` padding.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/standard.rs","byte_start":7999,"byte_end":8045,"line_start":5,"line_end":5,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/standard.rs","byte_start":8046,"byte_end":8049,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/standard.rs","byte_start":8050,"byte_end":8061,"line_start":7,"line_end":7,"column_start":1,"column_end":12}},{"value":"/ [A-Z]      [a-z]      [0-9]      +     /","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/standard.rs","byte_start":8062,"byte_end":8106,"line_start":8,"line_end":8,"column_start":1,"column_end":45}},{"value":"/ 0x41-0x5a, 0x61-0x7a, 0x30-0x39, 0x2b, 0x2f","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/standard.rs","byte_start":8107,"byte_end":8154,"line_start":9,"line_end":9,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/standard.rs","byte_start":8155,"byte_end":8162,"line_start":10,"line_end":10,"column_start":1,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":59},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/standard.rs","byte_start":8265,"byte_end":8269,"line_start":15,"line_end":15,"column_start":11,"column_end":15},"name":"BASE","qualname":"::<alphabet::standard::Base64 as alphabet::Alphabet>::BASE","value":"u8","parent":{"krate":0,"index":58},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":60},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/standard.rs","byte_start":8292,"byte_end":8299,"line_start":16,"line_end":16,"column_start":11,"column_end":18},"name":"DECODER","qualname":"::<alphabet::standard::Base64 as alphabet::Alphabet>::DECODER","value":"&'static [DecodeStep]","parent":{"krate":0,"index":58},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":61},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/standard.rs","byte_start":8344,"byte_end":8351,"line_start":17,"line_end":17,"column_start":11,"column_end":18},"name":"ENCODER","qualname":"::<alphabet::standard::Base64 as alphabet::Alphabet>::ENCODER","value":"&'static [EncodeStep]","parent":{"krate":0,"index":58},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":62},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/standard.rs","byte_start":8396,"byte_end":8402,"line_start":18,"line_end":18,"column_start":11,"column_end":17},"name":"PADDED","qualname":"::<alphabet::standard::Base64 as alphabet::Alphabet>::PADDED","value":"bool","parent":{"krate":0,"index":58},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":428},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/standard.rs","byte_start":8677,"byte_end":8691,"line_start":29,"line_end":29,"column_start":12,"column_end":26},"name":"Base64Unpadded","qualname":"::alphabet::standard::Base64Unpadded","value":"","parent":null,"children":[],"decl_id":null,"docs":" Standard Base64 encoding *without* padding.","sig":null,"attributes":[{"value":"/ Standard Base64 encoding *without* padding.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/standard.rs","byte_start":8456,"byte_end":8503,"line_start":22,"line_end":22,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/standard.rs","byte_start":8504,"byte_end":8507,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/standard.rs","byte_start":8508,"byte_end":8519,"line_start":24,"line_end":24,"column_start":1,"column_end":12}},{"value":"/ [A-Z]      [a-z]      [0-9]      +     /","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/standard.rs","byte_start":8520,"byte_end":8564,"line_start":25,"line_end":25,"column_start":1,"column_end":45}},{"value":"/ 0x41-0x5a, 0x61-0x7a, 0x30-0x39, 0x2b, 0x2f","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/standard.rs","byte_start":8565,"byte_end":8612,"line_start":26,"line_end":26,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/standard.rs","byte_start":8613,"byte_end":8620,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":65},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/standard.rs","byte_start":8739,"byte_end":8743,"line_start":32,"line_end":32,"column_start":11,"column_end":15},"name":"BASE","qualname":"::<alphabet::standard::Base64Unpadded as alphabet::Alphabet>::BASE","value":"u8","parent":{"krate":0,"index":64},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":66},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/standard.rs","byte_start":8766,"byte_end":8773,"line_start":33,"line_end":33,"column_start":11,"column_end":18},"name":"DECODER","qualname":"::<alphabet::standard::Base64Unpadded as alphabet::Alphabet>::DECODER","value":"&'static [DecodeStep]","parent":{"krate":0,"index":64},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":67},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/standard.rs","byte_start":8818,"byte_end":8825,"line_start":34,"line_end":34,"column_start":11,"column_end":18},"name":"ENCODER","qualname":"::<alphabet::standard::Base64Unpadded as alphabet::Alphabet>::ENCODER","value":"&'static [EncodeStep]","parent":{"krate":0,"index":64},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":68},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/standard.rs","byte_start":8870,"byte_end":8876,"line_start":35,"line_end":35,"column_start":11,"column_end":17},"name":"PADDED","qualname":"::<alphabet::standard::Base64Unpadded as alphabet::Alphabet>::PADDED","value":"bool","parent":{"krate":0,"index":64},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":441},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/url.rs","byte_start":9696,"byte_end":9705,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"Base64Url","qualname":"::alphabet::url::Base64Url","value":"","parent":null,"children":[],"decl_id":null,"docs":" URL-safe Base64 encoding with `=` padding.","sig":null,"attributes":[{"value":"/ URL-safe Base64 encoding with `=` padding.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/url.rs","byte_start":9476,"byte_end":9522,"line_start":5,"line_end":5,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/url.rs","byte_start":9523,"byte_end":9526,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/url.rs","byte_start":9527,"byte_end":9538,"line_start":7,"line_end":7,"column_start":1,"column_end":12}},{"value":"/ [A-Z]      [a-z]      [0-9]      -     _","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/url.rs","byte_start":9539,"byte_end":9583,"line_start":8,"line_end":8,"column_start":1,"column_end":45}},{"value":"/ 0x41-0x5a, 0x61-0x7a, 0x30-0x39, 0x2d, 0x5f","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/url.rs","byte_start":9584,"byte_end":9631,"line_start":9,"line_end":9,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/url.rs","byte_start":9632,"byte_end":9639,"line_start":10,"line_end":10,"column_start":1,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":84},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/url.rs","byte_start":9748,"byte_end":9752,"line_start":15,"line_end":15,"column_start":11,"column_end":15},"name":"BASE","qualname":"::<alphabet::url::Base64Url as alphabet::Alphabet>::BASE","value":"u8","parent":{"krate":0,"index":83},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":85},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/url.rs","byte_start":9775,"byte_end":9782,"line_start":16,"line_end":16,"column_start":11,"column_end":18},"name":"DECODER","qualname":"::<alphabet::url::Base64Url as alphabet::Alphabet>::DECODER","value":"&'static [DecodeStep]","parent":{"krate":0,"index":83},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":86},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/url.rs","byte_start":9827,"byte_end":9834,"line_start":17,"line_end":17,"column_start":11,"column_end":18},"name":"ENCODER","qualname":"::<alphabet::url::Base64Url as alphabet::Alphabet>::ENCODER","value":"&'static [EncodeStep]","parent":{"krate":0,"index":83},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":87},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/url.rs","byte_start":9879,"byte_end":9885,"line_start":18,"line_end":18,"column_start":11,"column_end":17},"name":"PADDED","qualname":"::<alphabet::url::Base64Url as alphabet::Alphabet>::PADDED","value":"bool","parent":{"krate":0,"index":83},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":454},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/url.rs","byte_start":10163,"byte_end":10180,"line_start":29,"line_end":29,"column_start":12,"column_end":29},"name":"Base64UrlUnpadded","qualname":"::alphabet::url::Base64UrlUnpadded","value":"","parent":null,"children":[],"decl_id":null,"docs":" URL-safe Base64 encoding *without* padding.","sig":null,"attributes":[{"value":"/ URL-safe Base64 encoding *without* padding.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/url.rs","byte_start":9942,"byte_end":9989,"line_start":22,"line_end":22,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/url.rs","byte_start":9990,"byte_end":9993,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/url.rs","byte_start":9994,"byte_end":10005,"line_start":24,"line_end":24,"column_start":1,"column_end":12}},{"value":"/ [A-Z]      [a-z]      [0-9]      -     _","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/url.rs","byte_start":10006,"byte_end":10050,"line_start":25,"line_end":25,"column_start":1,"column_end":45}},{"value":"/ 0x41-0x5a, 0x61-0x7a, 0x30-0x39, 0x2d, 0x5f","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/url.rs","byte_start":10051,"byte_end":10098,"line_start":26,"line_end":26,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/url.rs","byte_start":10099,"byte_end":10106,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":90},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/url.rs","byte_start":10231,"byte_end":10235,"line_start":32,"line_end":32,"column_start":11,"column_end":15},"name":"BASE","qualname":"::<alphabet::url::Base64UrlUnpadded as alphabet::Alphabet>::BASE","value":"u8","parent":{"krate":0,"index":89},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":91},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/url.rs","byte_start":10258,"byte_end":10265,"line_start":33,"line_end":33,"column_start":11,"column_end":18},"name":"DECODER","qualname":"::<alphabet::url::Base64UrlUnpadded as alphabet::Alphabet>::DECODER","value":"&'static [DecodeStep]","parent":{"krate":0,"index":89},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":92},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/url.rs","byte_start":10310,"byte_end":10317,"line_start":34,"line_end":34,"column_start":11,"column_end":18},"name":"ENCODER","qualname":"::<alphabet::url::Base64UrlUnpadded as alphabet::Alphabet>::ENCODER","value":"&'static [EncodeStep]","parent":{"krate":0,"index":89},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":93},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/url.rs","byte_start":10362,"byte_end":10368,"line_start":35,"line_end":35,"column_start":11,"column_end":17},"name":"PADDED","qualname":"::<alphabet::url::Base64UrlUnpadded as alphabet::Alphabet>::PADDED","value":"bool","parent":{"krate":0,"index":89},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":97},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet.rs","byte_start":2978,"byte_end":2986,"line_start":14,"line_end":14,"column_start":11,"column_end":19},"name":"Alphabet","qualname":"::alphabet::Alphabet","value":"Alphabet: 'static + Copy + Debug + Eq + Send + Sized + Sync","parent":null,"children":[{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106}],"decl_id":null,"docs":" Core encoder/decoder functions for a particular Base64 alphabet.\n","sig":null,"attributes":[{"value":"/ Core encoder/decoder functions for a particular Base64 alphabet.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet.rs","byte_start":2899,"byte_end":2967,"line_start":13,"line_end":13,"column_start":1,"column_end":69}}]},{"kind":"Const","id":{"krate":0,"index":98},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet.rs","byte_start":3099,"byte_end":3103,"line_start":16,"line_end":16,"column_start":11,"column_end":15},"name":"BASE","qualname":"::alphabet::Alphabet::BASE","value":"u8","parent":{"krate":0,"index":97},"children":[],"decl_id":null,"docs":" First character in this Base64 alphabet.\n","sig":null,"attributes":[{"value":"/ First character in this Base64 alphabet.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet.rs","byte_start":3044,"byte_end":3088,"line_start":15,"line_end":15,"column_start":5,"column_end":49}}]},{"kind":"Const","id":{"krate":0,"index":99},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet.rs","byte_start":3143,"byte_end":3150,"line_start":19,"line_end":19,"column_start":11,"column_end":18},"name":"DECODER","qualname":"::alphabet::Alphabet::DECODER","value":"&'static [DecodeStep]","parent":{"krate":0,"index":97},"children":[],"decl_id":null,"docs":" Decoder passes\n","sig":null,"attributes":[{"value":"/ Decoder passes","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet.rs","byte_start":3114,"byte_end":3132,"line_start":18,"line_end":18,"column_start":5,"column_end":23}}]},{"kind":"Const","id":{"krate":0,"index":100},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet.rs","byte_start":3209,"byte_end":3216,"line_start":22,"line_end":22,"column_start":11,"column_end":18},"name":"ENCODER","qualname":"::alphabet::Alphabet::ENCODER","value":"&'static [EncodeStep]","parent":{"krate":0,"index":97},"children":[],"decl_id":null,"docs":" Encoder passes\n","sig":null,"attributes":[{"value":"/ Encoder passes","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet.rs","byte_start":3180,"byte_end":3198,"line_start":21,"line_end":21,"column_start":5,"column_end":23}}]},{"kind":"Const","id":{"krate":0,"index":101},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet.rs","byte_start":3285,"byte_end":3291,"line_start":25,"line_end":25,"column_start":11,"column_end":17},"name":"PADDED","qualname":"::alphabet::Alphabet::PADDED","value":"bool","parent":{"krate":0,"index":97},"children":[],"decl_id":null,"docs":" Is this encoding padded?\n","sig":null,"attributes":[{"value":"/ Is this encoding padded?","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet.rs","byte_start":3246,"byte_end":3274,"line_start":24,"line_end":24,"column_start":5,"column_end":33}}]},{"kind":"Type","id":{"krate":0,"index":102},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet.rs","byte_start":3441,"byte_end":3449,"line_start":30,"line_end":30,"column_start":10,"column_end":18},"name":"Unpadded","qualname":"::alphabet::Alphabet::Unpadded","value":"type Unpadded: Alphabet;","parent":{"krate":0,"index":97},"children":[],"decl_id":null,"docs":" Unpadded equivalent of this alphabet.","sig":null,"attributes":[{"value":"/ Unpadded equivalent of this alphabet.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet.rs","byte_start":3304,"byte_end":3345,"line_start":27,"line_end":27,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet.rs","byte_start":3350,"byte_end":3353,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ For alphabets that are unpadded to begin with, this should be `Self`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet.rs","byte_start":3358,"byte_end":3431,"line_start":29,"line_end":29,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet.rs","byte_start":3535,"byte_end":3548,"line_start":34,"line_end":34,"column_start":8,"column_end":21},"name":"decode_3bytes","qualname":"::alphabet::Alphabet::decode_3bytes","value":"fn decode_3bytes(&[u8], &mut [u8]) -> i16","parent":{"krate":0,"index":97},"children":[],"decl_id":null,"docs":" Decode 3 bytes of a Base64 message.\n","sig":null,"attributes":[{"value":"/ Decode 3 bytes of a Base64 message.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet.rs","byte_start":3466,"byte_end":3505,"line_start":32,"line_end":32,"column_start":5,"column_end":44}},{"value":"inline(always)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet.rs","byte_start":3510,"byte_end":3527,"line_start":33,"line_end":33,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet.rs","byte_start":4113,"byte_end":4125,"line_start":51,"line_end":51,"column_start":8,"column_end":20},"name":"decode_6bits","qualname":"::alphabet::Alphabet::decode_6bits","value":"fn decode_6bits(u8) -> i16","parent":{"krate":0,"index":97},"children":[],"decl_id":null,"docs":" Decode 6-bits of a Base64 message.\n","sig":null,"attributes":[{"value":"/ Decode 6-bits of a Base64 message.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet.rs","byte_start":4067,"byte_end":4105,"line_start":50,"line_end":50,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet.rs","byte_start":4954,"byte_end":4967,"line_start":75,"line_end":75,"column_start":8,"column_end":21},"name":"encode_3bytes","qualname":"::alphabet::Alphabet::encode_3bytes","value":"fn encode_3bytes(&[u8], &mut [u8])","parent":{"krate":0,"index":97},"children":[],"decl_id":null,"docs":" Encode 3-bytes of a Base64 message.\n","sig":null,"attributes":[{"value":"/ Encode 3-bytes of a Base64 message.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet.rs","byte_start":4885,"byte_end":4924,"line_start":73,"line_end":73,"column_start":5,"column_end":44}},{"value":"inline(always)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet.rs","byte_start":4929,"byte_end":4946,"line_start":74,"line_end":74,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet.rs","byte_start":5512,"byte_end":5524,"line_start":91,"line_end":91,"column_start":8,"column_end":20},"name":"encode_6bits","qualname":"::alphabet::Alphabet::encode_6bits","value":"fn encode_6bits(i16) -> u8","parent":{"krate":0,"index":97},"children":[],"decl_id":null,"docs":" Encode 6-bits of a Base64 message.\n","sig":null,"attributes":[{"value":"/ Encode 6-bits of a Base64 message.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet.rs","byte_start":5444,"byte_end":5482,"line_start":89,"line_end":89,"column_start":5,"column_end":43}},{"value":"inline(always)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet.rs","byte_start":5487,"byte_end":5504,"line_start":90,"line_end":90,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":468},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet.rs","byte_start":6049,"byte_end":6054,"line_start":109,"line_end":109,"column_start":5,"column_end":10},"name":"Range","qualname":"::alphabet::DecodeStep::Range","value":"DecodeStep::Range(Range<u8>, i16)","parent":{"krate":0,"index":467},"children":[],"decl_id":null,"docs":" Match the given range, offsetting the input on match.\n","sig":null,"attributes":[{"value":"/ Match the given range, offsetting the input on match.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet.rs","byte_start":5987,"byte_end":6044,"line_start":108,"line_end":108,"column_start":5,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":470},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet.rs","byte_start":6055,"byte_end":6064,"line_start":109,"line_end":109,"column_start":11,"column_end":20},"name":"0","qualname":"::alphabet::DecodeStep::Range::0","value":"core::ops::Range<u8>","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":471},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet.rs","byte_start":6066,"byte_end":6069,"line_start":109,"line_end":109,"column_start":22,"column_end":25},"name":"1","qualname":"::alphabet::DecodeStep::Range::1","value":"i16","parent":{"krate":0,"index":468},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":472},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet.rs","byte_start":6150,"byte_end":6152,"line_start":112,"line_end":112,"column_start":5,"column_end":7},"name":"Eq","qualname":"::alphabet::DecodeStep::Eq","value":"DecodeStep::Eq(u8, i16)","parent":{"krate":0,"index":467},"children":[],"decl_id":null,"docs":" Match the given value, returning the associated offset on match.\n","sig":null,"attributes":[{"value":"/ Match the given value, returning the associated offset on match.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet.rs","byte_start":6077,"byte_end":6145,"line_start":111,"line_end":111,"column_start":5,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":474},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet.rs","byte_start":6153,"byte_end":6155,"line_start":112,"line_end":112,"column_start":8,"column_end":10},"name":"0","qualname":"::alphabet::DecodeStep::Eq::0","value":"u8","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":475},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet.rs","byte_start":6157,"byte_end":6160,"line_start":112,"line_end":112,"column_start":12,"column_end":15},"name":"1","qualname":"::alphabet::DecodeStep::Eq::1","value":"i16","parent":{"krate":0,"index":472},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":467},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet.rs","byte_start":5970,"byte_end":5980,"line_start":107,"line_end":107,"column_start":10,"column_end":20},"name":"DecodeStep","qualname":"::alphabet::DecodeStep","value":"enum DecodeStep { Range(Range<u8>, i16), Eq(u8, i16), }","parent":null,"children":[{"krate":0,"index":468},{"krate":0,"index":472}],"decl_id":null,"docs":" Constant-time decoder step.\n","sig":null,"attributes":[{"value":"/ Constant-time decoder step.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet.rs","byte_start":5912,"byte_end":5943,"line_start":105,"line_end":105,"column_start":1,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":479},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet.rs","byte_start":6320,"byte_end":6325,"line_start":119,"line_end":119,"column_start":5,"column_end":10},"name":"Apply","qualname":"::alphabet::EncodeStep::Apply","value":"EncodeStep::Apply(u8, i16)","parent":{"krate":0,"index":478},"children":[],"decl_id":null,"docs":" Apply the given offset to the cumulative result on match.\n","sig":null,"attributes":[{"value":"/ Apply the given offset to the cumulative result on match.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet.rs","byte_start":6254,"byte_end":6315,"line_start":118,"line_end":118,"column_start":5,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":481},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet.rs","byte_start":6326,"byte_end":6328,"line_start":119,"line_end":119,"column_start":11,"column_end":13},"name":"0","qualname":"::alphabet::EncodeStep::Apply::0","value":"u8","parent":{"krate":0,"index":479},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":482},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet.rs","byte_start":6330,"byte_end":6333,"line_start":119,"line_end":119,"column_start":15,"column_end":18},"name":"1","qualname":"::alphabet::EncodeStep::Apply::1","value":"i16","parent":{"krate":0,"index":479},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":483},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet.rs","byte_start":6403,"byte_end":6407,"line_start":122,"line_end":122,"column_start":5,"column_end":9},"name":"Diff","qualname":"::alphabet::EncodeStep::Diff","value":"EncodeStep::Diff(u8, i16)","parent":{"krate":0,"index":478},"children":[],"decl_id":null,"docs":" Compute a difference using the given offset on match.\n","sig":null,"attributes":[{"value":"/ Compute a difference using the given offset on match.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet.rs","byte_start":6341,"byte_end":6398,"line_start":121,"line_end":121,"column_start":5,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":485},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet.rs","byte_start":6408,"byte_end":6410,"line_start":122,"line_end":122,"column_start":10,"column_end":12},"name":"0","qualname":"::alphabet::EncodeStep::Diff::0","value":"u8","parent":{"krate":0,"index":483},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":486},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet.rs","byte_start":6412,"byte_end":6415,"line_start":122,"line_end":122,"column_start":14,"column_end":17},"name":"1","qualname":"::alphabet::EncodeStep::Diff::1","value":"i16","parent":{"krate":0,"index":483},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":478},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet.rs","byte_start":6237,"byte_end":6247,"line_start":117,"line_end":117,"column_start":10,"column_end":20},"name":"EncodeStep","qualname":"::alphabet::EncodeStep","value":"enum EncodeStep { Apply(u8, i16), Diff(u8, i16), }","parent":null,"children":[{"krate":0,"index":479},{"krate":0,"index":483}],"decl_id":null,"docs":" Constant-time encoder step.\n","sig":null,"attributes":[{"value":"/ Constant-time encoder step.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet.rs","byte_start":6166,"byte_end":6197,"line_start":115,"line_end":115,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":492},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/decoder.rs","byte_start":11466,"byte_end":11473,"line_start":26,"line_end":26,"column_start":12,"column_end":19},"name":"Decoder","qualname":"::decoder::Decoder","value":"Decoder {  }","parent":null,"children":[{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499}],"decl_id":null,"docs":" Stateful Base64 decoder with support for buffered, incremental decoding.","sig":null,"attributes":[{"value":"/ Stateful Base64 decoder with support for buffered, incremental decoding.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/decoder.rs","byte_start":11243,"byte_end":11319,"line_start":21,"line_end":21,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/decoder.rs","byte_start":11320,"byte_end":11323,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The `E` type parameter can be any type which impls [`Encoding`] such as","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/decoder.rs","byte_start":11324,"byte_end":11399,"line_start":23,"line_end":23,"column_start":1,"column_end":76}},{"value":"/ [`Base64`] or [`Base64Unpadded`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/decoder.rs","byte_start":11400,"byte_end":11437,"line_start":24,"line_end":24,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/decoder.rs","byte_start":12185,"byte_end":12188,"line_start":50,"line_end":50,"column_start":12,"column_end":15},"name":"new","qualname":"<Decoder>::new","value":"fn new(&'i [u8]) -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder for a byte slice containing contiguous\n (non-newline-delimited) Base64-encoded data.","sig":null,"attributes":[{"value":"/ Create a new decoder for a byte slice containing contiguous","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/decoder.rs","byte_start":11927,"byte_end":11990,"line_start":44,"line_end":44,"column_start":5,"column_end":68}},{"value":"/ (non-newline-delimited) Base64-encoded data.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/decoder.rs","byte_start":11995,"byte_end":12043,"line_start":45,"line_end":45,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/decoder.rs","byte_start":12048,"byte_end":12051,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/decoder.rs","byte_start":12056,"byte_end":12069,"line_start":47,"line_end":47,"column_start":5,"column_end":18}},{"value":"/ - `Ok(decoder)` on success.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/decoder.rs","byte_start":12074,"byte_end":12105,"line_start":48,"line_end":48,"column_start":5,"column_end":36}},{"value":"/ - `Err(Error::InvalidLength)` if the input buffer is empty.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/decoder.rs","byte_start":12110,"byte_end":12173,"line_start":49,"line_end":49,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/decoder.rs","byte_start":13395,"byte_end":13406,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"new_wrapped","qualname":"<Decoder>::new_wrapped","value":"fn new_wrapped(&'i [u8], usize) -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder for a byte slice containing Base64 which\n line wraps at the given line length.","sig":null,"attributes":[{"value":"/ Create a new decoder for a byte slice containing Base64 which","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/decoder.rs","byte_start":12566,"byte_end":12631,"line_start":63,"line_end":63,"column_start":5,"column_end":70}},{"value":"/ line wraps at the given line length.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/decoder.rs","byte_start":12636,"byte_end":12676,"line_start":64,"line_end":64,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/decoder.rs","byte_start":12681,"byte_end":12684,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ Trailing newlines are not supported and must be removed in advance.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/decoder.rs","byte_start":12689,"byte_end":12760,"line_start":66,"line_end":66,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/decoder.rs","byte_start":12765,"byte_end":12768,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ Newlines are handled according to what are roughly [RFC7468] conventions:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/decoder.rs","byte_start":12773,"byte_end":12850,"line_start":68,"line_end":68,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/decoder.rs","byte_start":12855,"byte_end":12858,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/decoder.rs","byte_start":12863,"byte_end":12874,"line_start":70,"line_end":70,"column_start":5,"column_end":16}},{"value":"/ [parsers] MUST handle different newline conventions","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/decoder.rs","byte_start":12879,"byte_end":12934,"line_start":71,"line_end":71,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/decoder.rs","byte_start":12939,"byte_end":12946,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/decoder.rs","byte_start":12951,"byte_end":12954,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ RFC7468 allows any of the following as newlines, and allows a mixture","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/decoder.rs","byte_start":12959,"byte_end":13032,"line_start":74,"line_end":74,"column_start":5,"column_end":78}},{"value":"/ of different types of newlines:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/decoder.rs","byte_start":13037,"byte_end":13072,"line_start":75,"line_end":75,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/decoder.rs","byte_start":13077,"byte_end":13080,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/decoder.rs","byte_start":13085,"byte_end":13096,"line_start":77,"line_end":77,"column_start":5,"column_end":16}},{"value":"/ eol        = CRLF / CR / LF","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/decoder.rs","byte_start":13101,"byte_end":13132,"line_start":78,"line_end":78,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/decoder.rs","byte_start":13137,"byte_end":13144,"line_start":79,"line_end":79,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/decoder.rs","byte_start":13149,"byte_end":13152,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/decoder.rs","byte_start":13157,"byte_end":13170,"line_start":81,"line_end":81,"column_start":5,"column_end":18}},{"value":"/ - `Ok(decoder)` on success.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/decoder.rs","byte_start":13175,"byte_end":13206,"line_start":82,"line_end":82,"column_start":5,"column_end":36}},{"value":"/ - `Err(Error::InvalidLength)` if the input buffer is empty or the line","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/decoder.rs","byte_start":13211,"byte_end":13285,"line_start":83,"line_end":83,"column_start":5,"column_end":79}},{"value":"/   width is zero.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/decoder.rs","byte_start":13290,"byte_end":13310,"line_start":84,"line_end":84,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/decoder.rs","byte_start":13315,"byte_end":13318,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ [RFC7468]: https://datatracker.ietf.org/doc/html/rfc7468","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/decoder.rs","byte_start":13323,"byte_end":13383,"line_start":86,"line_end":86,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/decoder.rs","byte_start":14135,"byte_end":14141,"line_start":107,"line_end":107,"column_start":12,"column_end":18},"name":"decode","qualname":"<Decoder>::decode","value":"fn decode<'o>(&mut Self, &'o mut [u8]) -> Result<&'o [u8], Error>","parent":null,"children":[],"decl_id":null,"docs":" Fill the provided buffer with data decoded from Base64.","sig":null,"attributes":[{"value":"/ Fill the provided buffer with data decoded from Base64.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/decoder.rs","byte_start":13813,"byte_end":13872,"line_start":100,"line_end":100,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/decoder.rs","byte_start":13877,"byte_end":13880,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ Enough Base64 input data must remain to fill the entire buffer.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/decoder.rs","byte_start":13885,"byte_end":13952,"line_start":102,"line_end":102,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/decoder.rs","byte_start":13957,"byte_end":13960,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/decoder.rs","byte_start":13965,"byte_end":13978,"line_start":104,"line_end":104,"column_start":5,"column_end":18}},{"value":"/ - `Ok(bytes)` if the expected amount of data was read","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/decoder.rs","byte_start":13983,"byte_end":14040,"line_start":105,"line_end":105,"column_start":5,"column_end":62}},{"value":"/ - `Err(Error::InvalidLength)` if the exact amount of data couldn't be read","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/decoder.rs","byte_start":14045,"byte_end":14123,"line_start":106,"line_end":106,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/decoder.rs","byte_start":16747,"byte_end":16760,"line_start":170,"line_end":170,"column_start":12,"column_end":25},"name":"decode_to_end","qualname":"<Decoder>::decode_to_end","value":"fn decode_to_end<'o>(&mut Self, &'o mut Vec<u8>) -> Result<&'o [u8], Error>","parent":null,"children":[],"decl_id":null,"docs":" Decode all remaining Base64 data, placing the result into `buf`.","sig":null,"attributes":[{"value":"/ Decode all remaining Base64 data, placing the result into `buf`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/decoder.rs","byte_start":16473,"byte_end":16541,"line_start":164,"line_end":164,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/decoder.rs","byte_start":16546,"byte_end":16549,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ If successful, this function will return the total number of bytes","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/decoder.rs","byte_start":16554,"byte_end":16624,"line_start":166,"line_end":166,"column_start":5,"column_end":75}},{"value":"/ decoded into `buf`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/decoder.rs","byte_start":16629,"byte_end":16652,"line_start":167,"line_end":167,"column_start":5,"column_end":28}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/decoder.rs","byte_start":16657,"byte_end":16682,"line_start":168,"line_end":168,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/decoder.rs","byte_start":17459,"byte_end":17472,"line_start":188,"line_end":188,"column_start":12,"column_end":25},"name":"remaining_len","qualname":"<Decoder>::remaining_len","value":"fn remaining_len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the length of the remaining data after Base64 decoding.","sig":null,"attributes":[{"value":"/ Get the length of the remaining data after Base64 decoding.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/decoder.rs","byte_start":17330,"byte_end":17393,"line_start":185,"line_end":185,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/decoder.rs","byte_start":17398,"byte_end":17401,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ Decreases every time data is decoded.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/decoder.rs","byte_start":17406,"byte_end":17447,"line_start":187,"line_end":187,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/decoder.rs","byte_start":17584,"byte_end":17595,"line_start":193,"line_end":193,"column_start":12,"column_end":23},"name":"is_finished","qualname":"<Decoder>::is_finished","value":"fn is_finished(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Has all of the input data been decoded?\n","sig":null,"attributes":[{"value":"/ Has all of the input data been decoded?","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/decoder.rs","byte_start":17529,"byte_end":17572,"line_start":192,"line_end":192,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":220},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoder.rs","byte_start":31611,"byte_end":31618,"line_start":20,"line_end":20,"column_start":12,"column_end":19},"name":"Encoder","qualname":"::encoder::Encoder","value":"Encoder {  }","parent":null,"children":[{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227}],"decl_id":null,"docs":" Stateful Base64 encoder with support for buffered, incremental encoding.","sig":null,"attributes":[{"value":"/ Stateful Base64 encoder with support for buffered, incremental encoding.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoder.rs","byte_start":31405,"byte_end":31481,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoder.rs","byte_start":31482,"byte_end":31485,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The `E` type parameter can be any type which impls [`Encoding`] such as","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoder.rs","byte_start":31486,"byte_end":31561,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"/ [`Base64`] or [`Base64Unpadded`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoder.rs","byte_start":31562,"byte_end":31599,"line_start":19,"line_end":19,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoder.rs","byte_start":32258,"byte_end":32261,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"new","qualname":"<Encoder>::new","value":"fn new(&'o mut [u8]) -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder which writes output to the given byte slice.","sig":null,"attributes":[{"value":"/ Create a new encoder which writes output to the given byte slice.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoder.rs","byte_start":32103,"byte_end":32172,"line_start":39,"line_end":39,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoder.rs","byte_start":32177,"byte_end":32180,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ Output constructed using this method is not line-wrapped.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoder.rs","byte_start":32185,"byte_end":32246,"line_start":41,"line_end":41,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoder.rs","byte_start":32942,"byte_end":32953,"line_start":64,"line_end":64,"column_start":12,"column_end":23},"name":"new_wrapped","qualname":"<Encoder>::new_wrapped","value":"fn new_wrapped(&'o mut [u8], usize, LineEnding) -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder which writes line-wrapped output to the given byte\n slice.","sig":null,"attributes":[{"value":"/ Create a new encoder which writes line-wrapped output to the given byte","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoder.rs","byte_start":32592,"byte_end":32667,"line_start":56,"line_end":56,"column_start":5,"column_end":80}},{"value":"/ slice.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoder.rs","byte_start":32672,"byte_end":32682,"line_start":57,"line_end":57,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoder.rs","byte_start":32687,"byte_end":32690,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Output will be wrapped at the specified interval, using the provided","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoder.rs","byte_start":32695,"byte_end":32767,"line_start":59,"line_end":59,"column_start":5,"column_end":77}},{"value":"/ line ending. Use [`LineEnding::default()`] to use the conventional line","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoder.rs","byte_start":32772,"byte_end":32847,"line_start":60,"line_end":60,"column_start":5,"column_end":80}},{"value":"/ ending for the target OS.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoder.rs","byte_start":32852,"byte_end":32881,"line_start":61,"line_end":61,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoder.rs","byte_start":32886,"byte_end":32889,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ Minimum allowed line width is 4.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoder.rs","byte_start":32894,"byte_end":32930,"line_start":63,"line_end":63,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoder.rs","byte_start":33478,"byte_end":33484,"line_start":79,"line_end":79,"column_start":12,"column_end":18},"name":"encode","qualname":"<Encoder>::encode","value":"fn encode(&mut Self, &[u8]) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Encode the provided buffer as Base64, writing it to the output buffer.","sig":null,"attributes":[{"value":"/ Encode the provided buffer as Base64, writing it to the output buffer.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoder.rs","byte_start":33214,"byte_end":33288,"line_start":74,"line_end":74,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoder.rs","byte_start":33293,"byte_end":33296,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoder.rs","byte_start":33301,"byte_end":33314,"line_start":76,"line_end":76,"column_start":5,"column_end":18}},{"value":"/ - `Ok(bytes)` if the expected amount of data was read","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoder.rs","byte_start":33319,"byte_end":33376,"line_start":77,"line_end":77,"column_start":5,"column_end":62}},{"value":"/ - `Err(Error::InvalidLength)` if there is insufficient space in the output buffer","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoder.rs","byte_start":33381,"byte_end":33466,"line_start":78,"line_end":78,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoder.rs","byte_start":34760,"byte_end":34768,"line_start":114,"line_end":114,"column_start":12,"column_end":20},"name":"position","qualname":"<Encoder>::position","value":"fn position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the position inside of the output buffer where the write cursor\n is currently located.\n","sig":null,"attributes":[{"value":"/ Get the position inside of the output buffer where the write cursor","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoder.rs","byte_start":34647,"byte_end":34718,"line_start":112,"line_end":112,"column_start":5,"column_end":76}},{"value":"/ is currently located.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoder.rs","byte_start":34723,"byte_end":34748,"line_start":113,"line_end":113,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoder.rs","byte_start":34900,"byte_end":34906,"line_start":119,"line_end":119,"column_start":12,"column_end":18},"name":"finish","qualname":"<Encoder>::finish","value":"fn finish(Self) -> Result<&'o str, Error>","parent":null,"children":[],"decl_id":null,"docs":" Finish encoding data, returning the resulting Base64 as a `str`.\n","sig":null,"attributes":[{"value":"/ Finish encoding data, returning the resulting Base64 as a `str`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoder.rs","byte_start":34820,"byte_end":34888,"line_start":118,"line_end":118,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoder.rs","byte_start":35155,"byte_end":35176,"line_start":125,"line_end":125,"column_start":12,"column_end":33},"name":"finish_with_remaining","qualname":"<Encoder>::finish_with_remaining","value":"fn finish_with_remaining(Self) -> Result<(&'o str, &'o mut [u8]), Error>","parent":null,"children":[],"decl_id":null,"docs":" Finish encoding data, returning the resulting Base64 as a `str`\n along with the remaining space in the output buffer.\n","sig":null,"attributes":[{"value":"/ Finish encoding data, returning the resulting Base64 as a `str`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoder.rs","byte_start":35015,"byte_end":35082,"line_start":123,"line_end":123,"column_start":5,"column_end":72}},{"value":"/ along with the remaining space in the output buffer.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoder.rs","byte_start":35087,"byte_end":35143,"line_start":124,"line_end":124,"column_start":5,"column_end":61}}]},{"kind":"Trait","id":{"krate":0,"index":278},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoding.rs","byte_start":43542,"byte_end":43550,"line_start":31,"line_end":31,"column_start":11,"column_end":19},"name":"Encoding","qualname":"::encoding::Encoding","value":"Encoding: Alphabet","parent":null,"children":[{"krate":0,"index":279},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":285},{"krate":0,"index":286}],"decl_id":null,"docs":" Base64 encoding trait.","sig":null,"attributes":[{"value":"/ Base64 encoding trait.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoding.rs","byte_start":42982,"byte_end":43008,"line_start":18,"line_end":18,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoding.rs","byte_start":43009,"byte_end":43012,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This trait must be imported to make use of any Base64 alphabet defined","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoding.rs","byte_start":43013,"byte_end":43087,"line_start":20,"line_end":20,"column_start":1,"column_end":75}},{"value":"/ in this crate.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoding.rs","byte_start":43088,"byte_end":43106,"line_start":21,"line_end":21,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoding.rs","byte_start":43107,"byte_end":43110,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The following encoding types impl this trait:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoding.rs","byte_start":43111,"byte_end":43160,"line_start":23,"line_end":23,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoding.rs","byte_start":43161,"byte_end":43164,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ - [`Base64`]: standard Base64 encoding with `=` padding.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoding.rs","byte_start":43165,"byte_end":43225,"line_start":25,"line_end":25,"column_start":1,"column_end":61}},{"value":"/ - [`Base64Bcrypt`]: bcrypt Base64 encoding.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoding.rs","byte_start":43226,"byte_end":43273,"line_start":26,"line_end":26,"column_start":1,"column_end":48}},{"value":"/ - [`Base64Crypt`]: `crypt(3)` Base64 encoding.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoding.rs","byte_start":43274,"byte_end":43324,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/ - [`Base64Unpadded`]: standard Base64 encoding *without* padding.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoding.rs","byte_start":43325,"byte_end":43394,"line_start":28,"line_end":28,"column_start":1,"column_end":70}},{"value":"/ - [`Base64Url`]: URL-safe Base64 encoding with `=` padding.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoding.rs","byte_start":43395,"byte_end":43458,"line_start":29,"line_end":29,"column_start":1,"column_end":64}},{"value":"/ - [`Base64UrlUnpadded`]: URL-safe Base64 encoding *without* padding.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoding.rs","byte_start":43459,"byte_end":43531,"line_start":30,"line_end":30,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoding.rs","byte_start":43639,"byte_end":43645,"line_start":33,"line_end":33,"column_start":8,"column_end":14},"name":"decode","qualname":"::encoding::Encoding::decode","value":"fn decode<impl AsRef<[u8]>>(impl AsRef<[u8]>, &mut [u8])\n-> Result<&[u8], Error> where impl AsRef<[u8]>: AsRef<[u8]>","parent":{"krate":0,"index":278},"children":[],"decl_id":null,"docs":" Decode a Base64 string into the provided destination buffer.\n","sig":null,"attributes":[{"value":"/ Decode a Base64 string into the provided destination buffer.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoding.rs","byte_start":43567,"byte_end":43631,"line_start":32,"line_end":32,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoding.rs","byte_start":43894,"byte_end":43909,"line_start":39,"line_end":39,"column_start":8,"column_end":23},"name":"decode_in_place","qualname":"::encoding::Encoding::decode_in_place","value":"fn decode_in_place(&mut [u8]) -> Result<&[u8], InvalidEncodingError>","parent":{"krate":0,"index":278},"children":[],"decl_id":null,"docs":" Decode a Base64 string in-place.","sig":null,"attributes":[{"value":"/ Decode a Base64 string in-place.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoding.rs","byte_start":43715,"byte_end":43751,"line_start":35,"line_end":35,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoding.rs","byte_start":43756,"byte_end":43759,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ NOTE: this method does not (yet) validate that padding is well-formed,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoding.rs","byte_start":43764,"byte_end":43838,"line_start":37,"line_end":37,"column_start":5,"column_end":79}},{"value":"/ if the given Base64 encoding is padded.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoding.rs","byte_start":43843,"byte_end":43886,"line_start":38,"line_end":38,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoding.rs","byte_start":44108,"byte_end":44118,"line_start":44,"line_end":44,"column_start":8,"column_end":18},"name":"decode_vec","qualname":"::encoding::Encoding::decode_vec","value":"fn decode_vec(&str) -> Result<Vec<u8>, Error>","parent":{"krate":0,"index":278},"children":[],"decl_id":null,"docs":" Decode a Base64 string into a byte vector.\n","sig":null,"attributes":[{"value":"/ Decode a Base64 string into a byte vector.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoding.rs","byte_start":43971,"byte_end":44017,"line_start":41,"line_end":41,"column_start":5,"column_end":51}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoding.rs","byte_start":44022,"byte_end":44047,"line_start":42,"line_end":42,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoding.rs","byte_start":44341,"byte_end":44347,"line_start":50,"line_end":50,"column_start":8,"column_end":14},"name":"encode","qualname":"::encoding::Encoding::encode","value":"fn encode<'a>(&[u8], &'a mut [u8]) -> Result<&'a str, InvalidLengthError>","parent":{"krate":0,"index":278},"children":[],"decl_id":null,"docs":" Encode the input byte slice as Base64.","sig":null,"attributes":[{"value":"/ Encode the input byte slice as Base64.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoding.rs","byte_start":44164,"byte_end":44206,"line_start":46,"line_end":46,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoding.rs","byte_start":44211,"byte_end":44214,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Writes the result into the provided destination slice, returning an","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoding.rs","byte_start":44219,"byte_end":44290,"line_start":48,"line_end":48,"column_start":5,"column_end":76}},{"value":"/ ASCII-encoded Base64 string value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoding.rs","byte_start":44295,"byte_end":44333,"line_start":49,"line_end":49,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoding.rs","byte_start":44666,"byte_end":44679,"line_start":58,"line_end":58,"column_start":8,"column_end":21},"name":"encode_string","qualname":"::encoding::Encoding::encode_string","value":"fn encode_string(&[u8]) -> String","parent":{"krate":0,"index":278},"children":[],"decl_id":null,"docs":" Encode input byte slice into a [`String`] containing Base64.","sig":null,"attributes":[{"value":"/ Encode input byte slice into a [`String`] containing Base64.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoding.rs","byte_start":44428,"byte_end":44492,"line_start":52,"line_end":52,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoding.rs","byte_start":44497,"byte_end":44500,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoding.rs","byte_start":44505,"byte_end":44517,"line_start":54,"line_end":54,"column_start":5,"column_end":17}},{"value":"/ If `input` length is greater than `usize::MAX/4`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoding.rs","byte_start":44522,"byte_end":44575,"line_start":55,"line_end":55,"column_start":5,"column_end":58}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoding.rs","byte_start":44580,"byte_end":44605,"line_start":56,"line_end":56,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoding.rs","byte_start":44880,"byte_end":44891,"line_start":63,"line_end":63,"column_start":8,"column_end":19},"name":"encoded_len","qualname":"::encoding::Encoding::encoded_len","value":"fn encoded_len(&[u8]) -> usize","parent":{"krate":0,"index":278},"children":[],"decl_id":null,"docs":" Get the length of Base64 produced by encoding the given bytes.","sig":null,"attributes":[{"value":"/ Get the length of Base64 produced by encoding the given bytes.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoding.rs","byte_start":44710,"byte_end":44776,"line_start":60,"line_end":60,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoding.rs","byte_start":44781,"byte_end":44784,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ WARNING: this function will return `0` for lengths greater than `usize::MAX/4`!","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoding.rs","byte_start":44789,"byte_end":44872,"line_start":62,"line_end":62,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoding.rs","byte_start":44961,"byte_end":44967,"line_start":67,"line_end":67,"column_start":8,"column_end":14},"name":"decode","qualname":"<T as encoding::Encoding>::decode","value":"fn decode<impl AsRef<[u8]>>(impl AsRef<[u8]>, &mut [u8])\n-> Result<&[u8], Error> where impl AsRef<[u8]>: AsRef<[u8]>","parent":{"krate":0,"index":278},"children":[],"decl_id":{"krate":0,"index":279},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoding.rs","byte_start":46366,"byte_end":46381,"line_start":108,"line_end":108,"column_start":8,"column_end":23},"name":"decode_in_place","qualname":"<T as encoding::Encoding>::decode_in_place","value":"fn decode_in_place(&mut [u8]) -> Result<&[u8], InvalidEncodingError>","parent":{"krate":0,"index":278},"children":[],"decl_id":{"krate":0,"index":281},"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: integer_arithmetic)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoding.rs","byte_start":46322,"byte_end":46358,"line_start":107,"line_end":107,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoding.rs","byte_start":48819,"byte_end":48829,"line_start":175,"line_end":175,"column_start":8,"column_end":18},"name":"decode_vec","qualname":"<T as encoding::Encoding>::decode_vec","value":"fn decode_vec(&str) -> Result<Vec<u8>, Error>","parent":{"krate":0,"index":278},"children":[],"decl_id":{"krate":0,"index":282},"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoding.rs","byte_start":48786,"byte_end":48811,"line_start":174,"line_end":174,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoding.rs","byte_start":49162,"byte_end":49168,"line_start":187,"line_end":187,"column_start":8,"column_end":14},"name":"encode","qualname":"<T as encoding::Encoding>::encode","value":"fn encode<'a>(&[u8], &'a mut [u8]) -> Result<&'a str, InvalidLengthError>","parent":{"krate":0,"index":278},"children":[],"decl_id":{"krate":0,"index":283},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoding.rs","byte_start":50850,"byte_end":50863,"line_start":237,"line_end":237,"column_start":8,"column_end":21},"name":"encode_string","qualname":"<T as encoding::Encoding>::encode_string","value":"fn encode_string(&[u8]) -> String","parent":{"krate":0,"index":278},"children":[],"decl_id":{"krate":0,"index":285},"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoding.rs","byte_start":50817,"byte_end":50842,"line_start":236,"line_end":236,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoding.rs","byte_start":51393,"byte_end":51404,"line_start":252,"line_end":252,"column_start":8,"column_end":19},"name":"encoded_len","qualname":"<T as encoding::Encoding>::encoded_len","value":"fn encoded_len(&[u8]) -> usize","parent":{"krate":0,"index":278},"children":[],"decl_id":{"krate":0,"index":286},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":547},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/errors.rs","byte_start":55639,"byte_end":55657,"line_start":10,"line_end":10,"column_start":12,"column_end":30},"name":"InvalidLengthError","qualname":"::errors::InvalidLengthError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Insufficient output buffer length.\n","sig":null,"attributes":[{"value":"/ Insufficient output buffer length.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/errors.rs","byte_start":55544,"byte_end":55582,"line_start":8,"line_end":8,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/errors.rs","byte_start":55710,"byte_end":55713,"line_start":13,"line_end":13,"column_start":8,"column_end":11},"name":"fmt","qualname":"<InvalidLengthError as core::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> Result<(), fmt::Error>","parent":{"krate":1,"index":10117},"children":[],"decl_id":{"krate":1,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":560},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/errors.rs","byte_start":56004,"byte_end":56024,"line_start":23,"line_end":23,"column_start":12,"column_end":32},"name":"InvalidEncodingError","qualname":"::errors::InvalidEncodingError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Invalid encoding of provided Base64 string.\n","sig":null,"attributes":[{"value":"/ Invalid encoding of provided Base64 string.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/errors.rs","byte_start":55900,"byte_end":55947,"line_start":21,"line_end":21,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/errors.rs","byte_start":56079,"byte_end":56082,"line_start":26,"line_end":26,"column_start":8,"column_end":11},"name":"fmt","qualname":"<InvalidEncodingError as core::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> Result<(), fmt::Error>","parent":{"krate":1,"index":10117},"children":[],"decl_id":{"krate":1,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":574},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/errors.rs","byte_start":56472,"byte_end":56487,"line_start":38,"line_end":38,"column_start":5,"column_end":20},"name":"InvalidEncoding","qualname":"::errors::Error::InvalidEncoding","value":"Error::InvalidEncoding","parent":{"krate":0,"index":573},"children":[],"decl_id":null,"docs":" Invalid encoding of provided Base64 string.\n","sig":null,"attributes":[{"value":"/ Invalid encoding of provided Base64 string.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/errors.rs","byte_start":56420,"byte_end":56467,"line_start":37,"line_end":37,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":576},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/errors.rs","byte_start":56537,"byte_end":56550,"line_start":41,"line_end":41,"column_start":5,"column_end":18},"name":"InvalidLength","qualname":"::errors::Error::InvalidLength","value":"Error::InvalidLength","parent":{"krate":0,"index":573},"children":[],"decl_id":null,"docs":" Insufficient output buffer length.\n","sig":null,"attributes":[{"value":"/ Insufficient output buffer length.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/errors.rs","byte_start":56494,"byte_end":56532,"line_start":40,"line_end":40,"column_start":5,"column_end":43}}]},{"kind":"Enum","id":{"krate":0,"index":573},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/errors.rs","byte_start":56408,"byte_end":56413,"line_start":36,"line_end":36,"column_start":10,"column_end":15},"name":"Error","qualname":"::errors::Error","value":"enum Error { InvalidEncoding, InvalidLength, }","parent":null,"children":[{"krate":0,"index":574},{"krate":0,"index":576}],"decl_id":null,"docs":" Generic error, union of [`InvalidLengthError`] and [`InvalidEncodingError`].\n","sig":null,"attributes":[{"value":"/ Generic error, union of [`InvalidLengthError`] and [`InvalidEncodingError`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/errors.rs","byte_start":56273,"byte_end":56353,"line_start":34,"line_end":34,"column_start":1,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":329},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/errors.rs","byte_start":56592,"byte_end":56595,"line_start":45,"line_end":45,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Error as core::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> Result<(), fmt::Error>","parent":{"krate":1,"index":10117},"children":[],"decl_id":{"krate":1,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/errors.rs","byte_start":56910,"byte_end":56914,"line_start":56,"line_end":56,"column_start":8,"column_end":12},"name":"from","qualname":"<Error as core::convert::From>::from","value":"fn from(InvalidEncodingError) -> Error","parent":{"krate":1,"index":3085},"children":[],"decl_id":{"krate":1,"index":3087},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/errors.rs","byte_start":56893,"byte_end":56902,"line_start":55,"line_end":55,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/errors.rs","byte_start":57054,"byte_end":57058,"line_start":63,"line_end":63,"column_start":8,"column_end":12},"name":"from","qualname":"<Error as core::convert::From>::from","value":"fn from(InvalidLengthError) -> Error","parent":{"krate":1,"index":3085},"children":[],"decl_id":{"krate":1,"index":3087},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/errors.rs","byte_start":57037,"byte_end":57046,"line_start":62,"line_end":62,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/errors.rs","byte_start":57196,"byte_end":57200,"line_start":70,"line_end":70,"column_start":8,"column_end":12},"name":"from","qualname":"<Error as core::convert::From>::from","value":"fn from(core::str::Utf8Error) -> Error","parent":{"krate":1,"index":3085},"children":[],"decl_id":{"krate":1,"index":3087},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/errors.rs","byte_start":57179,"byte_end":57188,"line_start":69,"line_end":69,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":590},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/line_ending.rs","byte_start":58163,"byte_end":58165,"line_start":17,"line_end":17,"column_start":5,"column_end":7},"name":"CR","qualname":"::line_ending::LineEnding::CR","value":"LineEnding::CR","parent":{"krate":0,"index":589},"children":[],"decl_id":null,"docs":" Carriage return: `\\r` (Pre-OS X Macintosh)\n","sig":null,"attributes":[{"value":"/ Carriage return: `\\r` (Pre-OS X Macintosh)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/line_ending.rs","byte_start":58112,"byte_end":58158,"line_start":16,"line_end":16,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":592},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/line_ending.rs","byte_start":58208,"byte_end":58210,"line_start":20,"line_end":20,"column_start":5,"column_end":7},"name":"LF","qualname":"::line_ending::LineEnding::LF","value":"LineEnding::LF","parent":{"krate":0,"index":589},"children":[],"decl_id":null,"docs":" Line feed: `\\n` (Unix OSes)\n","sig":null,"attributes":[{"value":"/ Line feed: `\\n` (Unix OSes)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/line_ending.rs","byte_start":58172,"byte_end":58203,"line_start":19,"line_end":19,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":594},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/line_ending.rs","byte_start":58271,"byte_end":58275,"line_start":23,"line_end":23,"column_start":5,"column_end":9},"name":"CRLF","qualname":"::line_ending::LineEnding::CRLF","value":"LineEnding::CRLF","parent":{"krate":0,"index":589},"children":[],"decl_id":null,"docs":" Carriage return + line feed: `\\r\\n` (Windows)\n","sig":null,"attributes":[{"value":"/ Carriage return + line feed: `\\r\\n` (Windows)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/line_ending.rs","byte_start":58217,"byte_end":58266,"line_start":22,"line_end":22,"column_start":5,"column_end":54}}]},{"kind":"Enum","id":{"krate":0,"index":589},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/line_ending.rs","byte_start":58095,"byte_end":58105,"line_start":15,"line_end":15,"column_start":10,"column_end":20},"name":"LineEnding","qualname":"::line_ending::LineEnding","value":"enum LineEnding { CR, LF, CRLF, }","parent":null,"children":[{"krate":0,"index":590},{"krate":0,"index":592},{"krate":0,"index":594}],"decl_id":null,"docs":" Line endings: variants of newline characters that can be used with Base64.","sig":null,"attributes":[{"value":"/ Line endings: variants of newline characters that can be used with Base64.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/line_ending.rs","byte_start":57799,"byte_end":57877,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/line_ending.rs","byte_start":57878,"byte_end":57881,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Use [`LineEnding::default`] to get an appropriate line ending for the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/line_ending.rs","byte_start":57882,"byte_end":57955,"line_start":11,"line_end":11,"column_start":1,"column_end":74}},{"value":"/ current operating system.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/line_ending.rs","byte_start":57956,"byte_end":57985,"line_start":12,"line_end":12,"column_start":1,"column_end":30}},{"value":"allow(clippy :: upper_case_acronyms)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/line_ending.rs","byte_start":57986,"byte_end":58023,"line_start":13,"line_end":13,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/line_ending.rs","byte_start":58487,"byte_end":58494,"line_start":33,"line_end":33,"column_start":8,"column_end":15},"name":"default","qualname":"<LineEnding as core::default::Default>::default","value":"fn default() -> LineEnding","parent":{"krate":1,"index":3157},"children":[],"decl_id":{"krate":1,"index":3158},"docs":"","sig":null,"attributes":[{"value":"cfg(not(windows))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/line_ending.rs","byte_start":58459,"byte_end":58479,"line_start":32,"line_end":32,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":342},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/line_ending.rs","byte_start":58672,"byte_end":58680,"line_start":41,"line_end":41,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<LineEnding>::as_bytes","value":"fn as_bytes(Self) -> &'static [u8]","parent":null,"children":[],"decl_id":null,"docs":" Get the byte serialization of this [`LineEnding`].\n","sig":null,"attributes":[{"value":"/ Get the byte serialization of this [`LineEnding`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/line_ending.rs","byte_start":58606,"byte_end":58660,"line_start":40,"line_end":40,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/line_ending.rs","byte_start":58947,"byte_end":58950,"line_start":50,"line_end":50,"column_start":12,"column_end":15},"name":"len","qualname":"<LineEnding>::len","value":"fn len(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the encoded length of this [`LineEnding`].\n","sig":null,"attributes":[{"value":"/ Get the encoded length of this [`LineEnding`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/line_ending.rs","byte_start":58885,"byte_end":58935,"line_start":49,"line_end":49,"column_start":5,"column_end":55}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/bcrypt.rs","byte_start":6728,"byte_end":6740,"line_start":14,"line_end":14,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/crypt.rs","byte_start":7519,"byte_end":7530,"line_start":14,"line_end":14,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/standard.rs","byte_start":8246,"byte_end":8252,"line_start":14,"line_end":14,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/standard.rs","byte_start":8712,"byte_end":8726,"line_start":31,"line_end":31,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/url.rs","byte_start":9726,"byte_end":9735,"line_start":14,"line_end":14,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/url.rs","byte_start":10201,"byte_end":10218,"line_start":31,"line_end":31,"column_start":19,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/decoder.rs","byte_start":11906,"byte_end":11913,"line_start":43,"line_end":43,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":153},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":160},{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/decoder.rs","byte_start":20698,"byte_end":20709,"line_start":296,"line_end":296,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/decoder.rs","byte_start":22211,"byte_end":22215,"line_start":344,"line_end":344,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/decoder.rs","byte_start":22290,"byte_end":22294,"line_start":350,"line_end":350,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/decoder.rs","byte_start":23785,"byte_end":23795,"line_start":405,"line_end":405,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/decoder.rs","byte_start":27577,"byte_end":27587,"line_start":505,"line_end":505,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":190},{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoder.rs","byte_start":32082,"byte_end":32089,"line_start":38,"line_end":38,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoder.rs","byte_start":37359,"byte_end":37370,"line_start":194,"line_end":194,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":246},{"krate":0,"index":247}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoder.rs","byte_start":38759,"byte_end":38770,"line_start":241,"line_end":241,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoding.rs","byte_start":44950,"byte_end":44951,"line_start":66,"line_end":66,"column_start":32,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":289},{"krate":0,"index":293},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":305},{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/errors.rs","byte_start":55682,"byte_end":55700,"line_start":12,"line_end":12,"column_start":23,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":325}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/errors.rs","byte_start":56049,"byte_end":56069,"line_start":25,"line_end":25,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":327}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/errors.rs","byte_start":56577,"byte_end":56582,"line_start":44,"line_end":44,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":329}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/errors.rs","byte_start":56881,"byte_end":56886,"line_start":54,"line_end":54,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/errors.rs","byte_start":57025,"byte_end":57030,"line_start":61,"line_end":61,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":333}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/errors.rs","byte_start":57167,"byte_end":57172,"line_start":68,"line_end":68,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":335}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/line_ending.rs","byte_start":58297,"byte_end":58307,"line_start":26,"line_end":26,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/line_ending.rs","byte_start":58589,"byte_end":58599,"line_start":39,"line_end":39,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":342},{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/bcrypt.rs","byte_start":6728,"byte_end":6740,"line_start":14,"line_end":14,"column_start":19,"column_end":31},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":389},"to":{"krate":0,"index":97}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/crypt.rs","byte_start":7519,"byte_end":7530,"line_start":14,"line_end":14,"column_start":19,"column_end":30},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":402},"to":{"krate":0,"index":97}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/standard.rs","byte_start":8246,"byte_end":8252,"line_start":14,"line_end":14,"column_start":19,"column_end":25},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":415},"to":{"krate":0,"index":97}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/standard.rs","byte_start":8712,"byte_end":8726,"line_start":31,"line_end":31,"column_start":19,"column_end":33},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":428},"to":{"krate":0,"index":97}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/url.rs","byte_start":9726,"byte_end":9735,"line_start":14,"line_end":14,"column_start":19,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":441},"to":{"krate":0,"index":97}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet/url.rs","byte_start":10201,"byte_end":10218,"line_start":31,"line_end":31,"column_start":19,"column_end":36},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":454},"to":{"krate":0,"index":97}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet.rs","byte_start":2998,"byte_end":3002,"line_start":14,"line_end":14,"column_start":31,"column_end":35},"kind":"SuperTrait","from":{"krate":1,"index":3189},"to":{"krate":0,"index":97}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet.rs","byte_start":3005,"byte_end":3010,"line_start":14,"line_end":14,"column_start":38,"column_end":43},"kind":"SuperTrait","from":{"krate":1,"index":10110},"to":{"krate":0,"index":97}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet.rs","byte_start":3013,"byte_end":3015,"line_start":14,"line_end":14,"column_start":46,"column_end":48},"kind":"SuperTrait","from":{"krate":1,"index":2836},"to":{"krate":0,"index":97}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet.rs","byte_start":3018,"byte_end":3022,"line_start":14,"line_end":14,"column_start":51,"column_end":55},"kind":"SuperTrait","from":{"krate":1,"index":3179},"to":{"krate":0,"index":97}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet.rs","byte_start":3025,"byte_end":3030,"line_start":14,"line_end":14,"column_start":58,"column_end":63},"kind":"SuperTrait","from":{"krate":1,"index":3184},"to":{"krate":0,"index":97}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/alphabet.rs","byte_start":3033,"byte_end":3037,"line_start":14,"line_end":14,"column_start":66,"column_end":70},"kind":"SuperTrait","from":{"krate":1,"index":3191},"to":{"krate":0,"index":97}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/decoder.rs","byte_start":11906,"byte_end":11913,"line_start":43,"line_end":43,"column_start":23,"column_end":30},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":492},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/decoder.rs","byte_start":20698,"byte_end":20709,"line_start":296,"line_end":296,"column_start":6,"column_end":17},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":504},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/decoder.rs","byte_start":22211,"byte_end":22215,"line_start":344,"line_end":344,"column_start":22,"column_end":26},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":515},"to":{"krate":1,"index":3157}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/decoder.rs","byte_start":22290,"byte_end":22294,"line_start":350,"line_end":350,"column_start":10,"column_end":14},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":515},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/decoder.rs","byte_start":23785,"byte_end":23795,"line_start":405,"line_end":405,"column_start":10,"column_end":20},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":524},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/decoder.rs","byte_start":27577,"byte_end":27587,"line_start":505,"line_end":505,"column_start":23,"column_end":33},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":524},"to":{"krate":1,"index":8474}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoder.rs","byte_start":32082,"byte_end":32089,"line_start":38,"line_end":38,"column_start":23,"column_end":30},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":220},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoder.rs","byte_start":37359,"byte_end":37370,"line_start":194,"line_end":194,"column_start":6,"column_end":17},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":531},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoder.rs","byte_start":38759,"byte_end":38770,"line_start":241,"line_end":241,"column_start":6,"column_end":17},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":541},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoding.rs","byte_start":43552,"byte_end":43560,"line_start":31,"line_end":31,"column_start":21,"column_end":29},"kind":"SuperTrait","from":{"krate":0,"index":97},"to":{"krate":0,"index":278}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/encoding.rs","byte_start":44950,"byte_end":44951,"line_start":66,"line_end":66,"column_start":32,"column_end":33},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":288},"to":{"krate":0,"index":278}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/errors.rs","byte_start":55682,"byte_end":55700,"line_start":12,"line_end":12,"column_start":23,"column_end":41},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":547},"to":{"krate":1,"index":10117}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/errors.rs","byte_start":56049,"byte_end":56069,"line_start":25,"line_end":25,"column_start":23,"column_end":43},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":560},"to":{"krate":1,"index":10117}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/errors.rs","byte_start":56577,"byte_end":56582,"line_start":44,"line_end":44,"column_start":23,"column_end":28},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":573},"to":{"krate":1,"index":10117}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/errors.rs","byte_start":56881,"byte_end":56886,"line_start":54,"line_end":54,"column_start":37,"column_end":42},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":573},"to":{"krate":1,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/errors.rs","byte_start":57025,"byte_end":57030,"line_start":61,"line_end":61,"column_start":35,"column_end":40},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":573},"to":{"krate":1,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/errors.rs","byte_start":57167,"byte_end":57172,"line_start":68,"line_end":68,"column_start":37,"column_end":42},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":573},"to":{"krate":1,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/line_ending.rs","byte_start":58297,"byte_end":58307,"line_start":26,"line_end":26,"column_start":18,"column_end":28},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":589},"to":{"krate":1,"index":3157}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/base64ct-1.5.2/src/line_ending.rs","byte_start":58589,"byte_end":58599,"line_start":39,"line_end":39,"column_start":6,"column_end":16},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":589},"to":{"krate":4294967295,"index":4294967295}}]}