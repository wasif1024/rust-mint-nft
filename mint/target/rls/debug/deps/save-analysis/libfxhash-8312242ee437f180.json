{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1","program":"/Users/air/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","fxhash","/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=8312242ee437f180","-C","extra-filename=-8312242ee437f180","--out-dir","/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps","-L","dependency=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps","--extern","byteorder=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libbyteorder-09ce0c3ccad6fb6e.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/air/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libfxhash-8312242ee437f180.rmeta"},"prelude":{"crate_id":{"name":"fxhash","disambiguator":[15757250643897861550,0]},"crate_root":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1","external_crates":[{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","num":1,"id":{"name":"std","disambiguator":[4485569597606079733,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","num":2,"id":{"name":"core","disambiguator":[9994580471200982198,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13944031075627487246,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5133993387825513881,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[14116380118705386640,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6269322086078963025,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16152481959168563413,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7897074911849024150,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[7299104579826168146,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2669544452907545777,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","num":11,"id":{"name":"adler","disambiguator":[14288251452253695433,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[13943810077905921301,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[2237926517141734526,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[5541021343498733002,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[7188895526679788668,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[15555671723428220450,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","num":17,"id":{"name":"object","disambiguator":[13375000548276363576,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[8920282723255285566,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[2397004371161247654,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","num":20,"id":{"name":"byteorder","disambiguator":[4343033449561927691,0]}}],"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":467,"byte_end":8466,"line_start":11,"line_end":324,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":467,"byte_end":8466,"line_start":11,"line_end":324,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":46},{"krate":0,"index":86},{"krate":0,"index":88},{"krate":0,"index":90},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":92},{"krate":0,"index":94},{"krate":0,"index":96},{"krate":0,"index":50},{"krate":0,"index":52},{"krate":0,"index":98},{"krate":0,"index":100},{"krate":0,"index":102},{"krate":0,"index":60},{"krate":0,"index":62},{"krate":0,"index":104},{"krate":0,"index":106},{"krate":0,"index":108},{"krate":0,"index":70},{"krate":0,"index":72},{"krate":0,"index":80},{"krate":0,"index":82},{"krate":0,"index":84}],"decl_id":null,"docs":" # Fx Hash","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":467,"byte_end":489,"line_start":11,"line_end":11,"column_start":1,"column_end":23}},{"value":"/ # Fx Hash","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":491,"byte_end":504,"line_start":13,"line_end":13,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":505,"byte_end":508,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This hashing algorithm was extracted from the Rustc compiler.  This is the same hashing","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":509,"byte_end":600,"line_start":15,"line_end":15,"column_start":1,"column_end":92}},{"value":"/ algoirthm used for some internal operations in FireFox.  The strength of this algorithm","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":601,"byte_end":692,"line_start":16,"line_end":16,"column_start":1,"column_end":92}},{"value":"/ is in hashing 8 bytes at a time on 64-bit platforms, where the FNV algorithm works on one","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":693,"byte_end":786,"line_start":17,"line_end":17,"column_start":1,"column_end":94}},{"value":"/ byte at a time.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":787,"byte_end":806,"line_start":18,"line_end":18,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":807,"byte_end":810,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ## Disclaimer","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":811,"byte_end":828,"line_start":20,"line_end":20,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":829,"byte_end":832,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ It is **not a cryptographically secure** hash, so it is strongly recommended that you do","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":833,"byte_end":925,"line_start":22,"line_end":22,"column_start":1,"column_end":93}},{"value":"/ not use this hash for cryptographic purproses.  Furthermore, this hashing algorithm was","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":926,"byte_end":1017,"line_start":23,"line_end":23,"column_start":1,"column_end":92}},{"value":"/ not designed to prevent any attacks for determining collisions which could be used to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":1018,"byte_end":1107,"line_start":24,"line_end":24,"column_start":1,"column_end":90}},{"value":"/ potentially cause quadratic behavior in `HashMap`s.  So it is not recommended to expose","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":1108,"byte_end":1199,"line_start":25,"line_end":25,"column_start":1,"column_end":92}},{"value":"/ this hash in places where collissions or DDOS attacks may be a concern.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":1200,"byte_end":1275,"line_start":26,"line_end":26,"column_start":1,"column_end":76}}]},{"kind":"Type","id":{"krate":0,"index":34},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":1534,"byte_end":1547,"line_start":37,"line_end":37,"column_start":10,"column_end":23},"name":"FxBuildHasher","qualname":"::FxBuildHasher","value":"BuildHasherDefault<FxHasher>","parent":null,"children":[],"decl_id":null,"docs":" A builder for default Fx hashers.\n","sig":null,"attributes":[{"value":"/ A builder for default Fx hashers.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":1487,"byte_end":1524,"line_start":36,"line_end":36,"column_start":1,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":35},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":1633,"byte_end":1642,"line_start":40,"line_end":40,"column_start":10,"column_end":19},"name":"FxHashMap","qualname":"::FxHashMap","value":"HashMap<K, V, FxBuildHasher>","parent":null,"children":[],"decl_id":null,"docs":" A `HashMap` using a default Fx hasher.\n","sig":null,"attributes":[{"value":"/ A `HashMap` using a default Fx hasher.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":1581,"byte_end":1623,"line_start":39,"line_end":39,"column_start":1,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":38},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":1734,"byte_end":1743,"line_start":43,"line_end":43,"column_start":10,"column_end":19},"name":"FxHashSet","qualname":"::FxHashSet","value":"HashSet<V, FxBuildHasher>","parent":null,"children":[],"decl_id":null,"docs":" A `HashSet` using a default Fx hasher.\n","sig":null,"attributes":[{"value":"/ A `HashSet` using a default Fx hasher.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":1682,"byte_end":1724,"line_start":42,"line_end":42,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":92},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":3949,"byte_end":3957,"line_start":127,"line_end":127,"column_start":12,"column_end":20},"name":"FxHasher","qualname":"::FxHasher","value":"FxHasher {  }","parent":null,"children":[{"krate":0,"index":93}],"decl_id":null,"docs":" This hashing algorithm was extracted from the Rustc compiler.\n This is the same hashing algoirthm used for some internal operations in FireFox.\n The strength of this algorithm is in hashing 8 bytes at a time on 64-bit platforms,\n where the FNV algorithm works on one byte at a time.","sig":null,"attributes":[{"value":"/ This hashing algorithm was extracted from the Rustc compiler.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":3496,"byte_end":3561,"line_start":119,"line_end":119,"column_start":1,"column_end":66}},{"value":"/ This is the same hashing algoirthm used for some internal operations in FireFox.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":3562,"byte_end":3646,"line_start":120,"line_end":120,"column_start":1,"column_end":85}},{"value":"/ The strength of this algorithm is in hashing 8 bytes at a time on 64-bit platforms,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":3647,"byte_end":3734,"line_start":121,"line_end":121,"column_start":1,"column_end":88}},{"value":"/ where the FNV algorithm works on one byte at a time.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":3735,"byte_end":3791,"line_start":122,"line_end":122,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":3792,"byte_end":3795,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ This hashing algorithm should not be used for cryptographic, or in scenarios where","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":3796,"byte_end":3882,"line_start":124,"line_end":124,"column_start":1,"column_end":87}},{"value":"/ DOS attacks are a concern.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":3883,"byte_end":3913,"line_start":125,"line_end":125,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":4029,"byte_end":4036,"line_start":133,"line_end":133,"column_start":8,"column_end":15},"name":"default","qualname":"<FxHasher as std::default::Default>::default","value":"fn default() -> FxHasher","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":4012,"byte_end":4021,"line_start":132,"line_end":132,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":4139,"byte_end":4144,"line_start":140,"line_end":140,"column_start":8,"column_end":13},"name":"write","qualname":"<FxHasher as std::hash::Hasher>::write","value":"fn write(&mut Self, &[u8])","parent":{"krate":2,"index":10334},"children":[],"decl_id":{"krate":2,"index":10336},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":4122,"byte_end":4131,"line_start":139,"line_end":139,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":4245,"byte_end":4253,"line_start":145,"line_end":145,"column_start":8,"column_end":16},"name":"write_u8","qualname":"<FxHasher as std::hash::Hasher>::write_u8","value":"fn write_u8(&mut Self, u8)","parent":{"krate":2,"index":10334},"children":[],"decl_id":{"krate":2,"index":10337},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":4228,"byte_end":4237,"line_start":144,"line_end":144,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":4343,"byte_end":4352,"line_start":150,"line_end":150,"column_start":8,"column_end":17},"name":"write_u16","qualname":"<FxHasher as std::hash::Hasher>::write_u16","value":"fn write_u16(&mut Self, u16)","parent":{"krate":2,"index":10334},"children":[],"decl_id":{"krate":2,"index":10338},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":4326,"byte_end":4335,"line_start":149,"line_end":149,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":4443,"byte_end":4452,"line_start":155,"line_end":155,"column_start":8,"column_end":17},"name":"write_u32","qualname":"<FxHasher as std::hash::Hasher>::write_u32","value":"fn write_u32(&mut Self, u32)","parent":{"krate":2,"index":10334},"children":[],"decl_id":{"krate":2,"index":10339},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":4426,"byte_end":4435,"line_start":154,"line_end":154,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":4772,"byte_end":4781,"line_start":168,"line_end":168,"column_start":8,"column_end":17},"name":"write_u64","qualname":"<FxHasher as std::hash::Hasher>::write_u64","value":"fn write_u64(&mut Self, u64)","parent":{"krate":2,"index":10334},"children":[],"decl_id":{"krate":2,"index":10340},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":4715,"byte_end":4724,"line_start":166,"line_end":166,"column_start":5,"column_end":14}},{"value":"cfg(target_pointer_width = \"64\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":4729,"byte_end":4764,"line_start":167,"line_end":167,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":4872,"byte_end":4883,"line_start":173,"line_end":173,"column_start":8,"column_end":19},"name":"write_usize","qualname":"<FxHasher as std::hash::Hasher>::write_usize","value":"fn write_usize(&mut Self, usize)","parent":{"krate":2,"index":10334},"children":[],"decl_id":{"krate":2,"index":10342},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":4855,"byte_end":4864,"line_start":172,"line_end":172,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":4967,"byte_end":4973,"line_start":178,"line_end":178,"column_start":8,"column_end":14},"name":"finish","qualname":"<FxHasher as std::hash::Hasher>::finish","value":"fn finish(&Self) -> u64","parent":{"krate":2,"index":10334},"children":[],"decl_id":{"krate":2,"index":10335},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":4950,"byte_end":4959,"line_start":177,"line_end":177,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":98},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":5473,"byte_end":5483,"line_start":191,"line_end":191,"column_start":12,"column_end":22},"name":"FxHasher64","qualname":"::FxHasher64","value":"FxHasher64 {  }","parent":null,"children":[{"krate":0,"index":99}],"decl_id":null,"docs":" This hashing algorithm was extracted from the Rustc compiler.\n This is the same hashing algoirthm used for some internal operations in FireFox.\n The strength of this algorithm is in hashing 8 bytes at a time on any platform,\n where the FNV algorithm works on one byte at a time.","sig":null,"attributes":[{"value":"/ This hashing algorithm was extracted from the Rustc compiler.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":5024,"byte_end":5089,"line_start":183,"line_end":183,"column_start":1,"column_end":66}},{"value":"/ This is the same hashing algoirthm used for some internal operations in FireFox.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":5090,"byte_end":5174,"line_start":184,"line_end":184,"column_start":1,"column_end":85}},{"value":"/ The strength of this algorithm is in hashing 8 bytes at a time on any platform,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":5175,"byte_end":5258,"line_start":185,"line_end":185,"column_start":1,"column_end":84}},{"value":"/ where the FNV algorithm works on one byte at a time.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":5259,"byte_end":5315,"line_start":186,"line_end":186,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":5316,"byte_end":5319,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ This hashing algorithm should not be used for cryptographic, or in scenarios where","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":5320,"byte_end":5406,"line_start":188,"line_end":188,"column_start":1,"column_end":87}},{"value":"/ DOS attacks are a concern.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":5407,"byte_end":5437,"line_start":189,"line_end":189,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":5555,"byte_end":5562,"line_start":197,"line_end":197,"column_start":8,"column_end":15},"name":"default","qualname":"<FxHasher64 as std::default::Default>::default","value":"fn default() -> FxHasher64","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":5538,"byte_end":5547,"line_start":196,"line_end":196,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":5671,"byte_end":5676,"line_start":204,"line_end":204,"column_start":8,"column_end":13},"name":"write","qualname":"<FxHasher64 as std::hash::Hasher>::write","value":"fn write(&mut Self, &[u8])","parent":{"krate":2,"index":10334},"children":[],"decl_id":{"krate":2,"index":10336},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":5654,"byte_end":5663,"line_start":203,"line_end":203,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":5779,"byte_end":5787,"line_start":209,"line_end":209,"column_start":8,"column_end":16},"name":"write_u8","qualname":"<FxHasher64 as std::hash::Hasher>::write_u8","value":"fn write_u8(&mut Self, u8)","parent":{"krate":2,"index":10334},"children":[],"decl_id":{"krate":2,"index":10337},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":5762,"byte_end":5771,"line_start":208,"line_end":208,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":5875,"byte_end":5884,"line_start":214,"line_end":214,"column_start":8,"column_end":17},"name":"write_u16","qualname":"<FxHasher64 as std::hash::Hasher>::write_u16","value":"fn write_u16(&mut Self, u16)","parent":{"krate":2,"index":10334},"children":[],"decl_id":{"krate":2,"index":10338},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":5858,"byte_end":5867,"line_start":213,"line_end":213,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":5973,"byte_end":5982,"line_start":219,"line_end":219,"column_start":8,"column_end":17},"name":"write_u32","qualname":"<FxHasher64 as std::hash::Hasher>::write_u32","value":"fn write_u32(&mut Self, u32)","parent":{"krate":2,"index":10334},"children":[],"decl_id":{"krate":2,"index":10339},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":5956,"byte_end":5965,"line_start":218,"line_end":218,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":6057,"byte_end":6066,"line_start":223,"line_end":223,"column_start":8,"column_end":17},"name":"write_u64","qualname":"<FxHasher64 as std::hash::Hasher>::write_u64","value":"fn write_u64(&mut Self, u64)","parent":{"krate":2,"index":10334},"children":[],"decl_id":{"krate":2,"index":10340},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":6148,"byte_end":6159,"line_start":228,"line_end":228,"column_start":8,"column_end":19},"name":"write_usize","qualname":"<FxHasher64 as std::hash::Hasher>::write_usize","value":"fn write_usize(&mut Self, usize)","parent":{"krate":2,"index":10334},"children":[],"decl_id":{"krate":2,"index":10342},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":6131,"byte_end":6140,"line_start":227,"line_end":227,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":6250,"byte_end":6256,"line_start":233,"line_end":233,"column_start":8,"column_end":14},"name":"finish","qualname":"<FxHasher64 as std::hash::Hasher>::finish","value":"fn finish(&Self) -> u64","parent":{"krate":2,"index":10334},"children":[],"decl_id":{"krate":2,"index":10335},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":6233,"byte_end":6242,"line_start":232,"line_end":232,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":104},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":6749,"byte_end":6759,"line_start":246,"line_end":246,"column_start":12,"column_end":22},"name":"FxHasher32","qualname":"::FxHasher32","value":"FxHasher32 {  }","parent":null,"children":[{"krate":0,"index":105}],"decl_id":null,"docs":" This hashing algorithm was extracted from the Rustc compiler.\n This is the same hashing algoirthm used for some internal operations in FireFox.\n The strength of this algorithm is in hashing 4 bytes at a time on any platform,\n where the FNV algorithm works on one byte at a time.","sig":null,"attributes":[{"value":"/ This hashing algorithm was extracted from the Rustc compiler.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":6300,"byte_end":6365,"line_start":238,"line_end":238,"column_start":1,"column_end":66}},{"value":"/ This is the same hashing algoirthm used for some internal operations in FireFox.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":6366,"byte_end":6450,"line_start":239,"line_end":239,"column_start":1,"column_end":85}},{"value":"/ The strength of this algorithm is in hashing 4 bytes at a time on any platform,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":6451,"byte_end":6534,"line_start":240,"line_end":240,"column_start":1,"column_end":84}},{"value":"/ where the FNV algorithm works on one byte at a time.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":6535,"byte_end":6591,"line_start":241,"line_end":241,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":6592,"byte_end":6595,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/ This hashing algorithm should not be used for cryptographic, or in scenarios where","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":6596,"byte_end":6682,"line_start":243,"line_end":243,"column_start":1,"column_end":87}},{"value":"/ DOS attacks are a concern.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":6683,"byte_end":6713,"line_start":244,"line_end":244,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":6831,"byte_end":6838,"line_start":252,"line_end":252,"column_start":8,"column_end":15},"name":"default","qualname":"<FxHasher32 as std::default::Default>::default","value":"fn default() -> FxHasher32","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":6814,"byte_end":6823,"line_start":251,"line_end":251,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":6947,"byte_end":6952,"line_start":259,"line_end":259,"column_start":8,"column_end":13},"name":"write","qualname":"<FxHasher32 as std::hash::Hasher>::write","value":"fn write(&mut Self, &[u8])","parent":{"krate":2,"index":10334},"children":[],"decl_id":{"krate":2,"index":10336},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":6930,"byte_end":6939,"line_start":258,"line_end":258,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":7055,"byte_end":7063,"line_start":264,"line_end":264,"column_start":8,"column_end":16},"name":"write_u8","qualname":"<FxHasher32 as std::hash::Hasher>::write_u8","value":"fn write_u8(&mut Self, u8)","parent":{"krate":2,"index":10334},"children":[],"decl_id":{"krate":2,"index":10337},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":7038,"byte_end":7047,"line_start":263,"line_end":263,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":7151,"byte_end":7160,"line_start":269,"line_end":269,"column_start":8,"column_end":17},"name":"write_u16","qualname":"<FxHasher32 as std::hash::Hasher>::write_u16","value":"fn write_u16(&mut Self, u16)","parent":{"krate":2,"index":10334},"children":[],"decl_id":{"krate":2,"index":10338},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":7134,"byte_end":7143,"line_start":268,"line_end":268,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":7249,"byte_end":7258,"line_start":274,"line_end":274,"column_start":8,"column_end":17},"name":"write_u32","qualname":"<FxHasher32 as std::hash::Hasher>::write_u32","value":"fn write_u32(&mut Self, u32)","parent":{"krate":2,"index":10334},"children":[],"decl_id":{"krate":2,"index":10339},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":7232,"byte_end":7241,"line_start":273,"line_end":273,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":7340,"byte_end":7349,"line_start":279,"line_end":279,"column_start":8,"column_end":17},"name":"write_u64","qualname":"<FxHasher32 as std::hash::Hasher>::write_u64","value":"fn write_u64(&mut Self, u64)","parent":{"krate":2,"index":10334},"children":[],"decl_id":{"krate":2,"index":10340},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":7323,"byte_end":7332,"line_start":278,"line_end":278,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":7662,"byte_end":7673,"line_start":292,"line_end":292,"column_start":8,"column_end":19},"name":"write_usize","qualname":"<FxHasher32 as std::hash::Hasher>::write_usize","value":"fn write_usize(&mut Self, usize)","parent":{"krate":2,"index":10334},"children":[],"decl_id":{"krate":2,"index":10342},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":7605,"byte_end":7614,"line_start":290,"line_end":290,"column_start":5,"column_end":14}},{"value":"cfg(target_pointer_width = \"64\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":7619,"byte_end":7654,"line_start":291,"line_end":291,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":7759,"byte_end":7765,"line_start":297,"line_end":297,"column_start":8,"column_end":14},"name":"finish","qualname":"<FxHasher32 as std::hash::Hasher>::finish","value":"fn finish(&Self) -> u64","parent":{"krate":2,"index":10334},"children":[],"decl_id":{"krate":2,"index":10335},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":7742,"byte_end":7751,"line_start":296,"line_end":296,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":80},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":7899,"byte_end":7905,"line_start":304,"line_end":304,"column_start":8,"column_end":14},"name":"hash64","qualname":"::hash64","value":"fn hash64<T>(&T) -> u64 where T: Hash + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" A convenience function for when you need a quick 64-bit hash.\n","sig":null,"attributes":[{"value":"/ A convenience function for when you need a quick 64-bit hash.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":7816,"byte_end":7881,"line_start":302,"line_end":302,"column_start":1,"column_end":66}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":7882,"byte_end":7891,"line_start":303,"line_end":303,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":82},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":8112,"byte_end":8118,"line_start":312,"line_end":312,"column_start":8,"column_end":14},"name":"hash32","qualname":"::hash32","value":"fn hash32<T>(&T) -> u32 where T: Hash + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" A convenience function for when you need a quick 32-bit hash.\n","sig":null,"attributes":[{"value":"/ A convenience function for when you need a quick 32-bit hash.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":8029,"byte_end":8094,"line_start":310,"line_end":310,"column_start":1,"column_end":66}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":8095,"byte_end":8104,"line_start":311,"line_end":311,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":84},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":8331,"byte_end":8335,"line_start":320,"line_end":320,"column_start":8,"column_end":12},"name":"hash","qualname":"::hash","value":"fn hash<T>(&T) -> usize where T: Hash + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" A convenience function for when you need a quick usize hash.\n","sig":null,"attributes":[{"value":"/ A convenience function for when you need a quick usize hash.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":8249,"byte_end":8313,"line_start":318,"line_end":318,"column_start":1,"column_end":65}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":8314,"byte_end":8323,"line_start":319,"line_end":319,"column_start":1,"column_end":10}}]}],"impls":[{"id":3,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":3997,"byte_end":4005,"line_start":131,"line_end":131,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":51}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":4107,"byte_end":4115,"line_start":138,"line_end":138,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":5521,"byte_end":5531,"line_start":195,"line_end":195,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":5637,"byte_end":5647,"line_start":202,"line_end":202,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":6797,"byte_end":6807,"line_start":250,"line_end":250,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":6913,"byte_end":6923,"line_start":257,"line_end":257,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":3997,"byte_end":4005,"line_start":131,"line_end":131,"column_start":18,"column_end":26},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":92},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":4107,"byte_end":4115,"line_start":138,"line_end":138,"column_start":17,"column_end":25},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":92},"to":{"krate":2,"index":10334}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":5521,"byte_end":5531,"line_start":195,"line_end":195,"column_start":18,"column_end":28},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":98},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":5637,"byte_end":5647,"line_start":202,"line_end":202,"column_start":17,"column_end":27},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":98},"to":{"krate":2,"index":10334}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":6797,"byte_end":6807,"line_start":250,"line_end":250,"column_start":18,"column_end":28},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":104},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/fxhash-0.2.1/lib.rs","byte_start":6913,"byte_end":6923,"line_start":257,"line_end":257,"column_start":17,"column_end":27},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":104},"to":{"krate":2,"index":10334}}]}