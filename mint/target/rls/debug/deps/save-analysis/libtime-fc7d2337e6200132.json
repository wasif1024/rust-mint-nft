{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14","program":"/Users/air/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","time","--edition=2021","/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"default\"","--cfg","feature=\"formatting\"","--cfg","feature=\"itoa\"","--cfg","feature=\"macros\"","--cfg","feature=\"parsing\"","--cfg","feature=\"std\"","--cfg","feature=\"time-macros\"","-C","metadata=fc7d2337e6200132","-C","extra-filename=-fc7d2337e6200132","--out-dir","/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps","-L","dependency=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps","--extern","itoa=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libitoa-9582097d59c3d13a.rmeta","--extern","libc=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/liblibc-49d6f90793305e95.rmeta","--extern","num_threads=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libnum_threads-f2f89e3131b38f5d.rmeta","--extern","time_macros=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libtime_macros-a5b469ed5e111686.dylib","--cap-lints","allow","--error-format=json","--sysroot","/Users/air/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libtime-fc7d2337e6200132.rmeta"},"prelude":{"crate_id":{"name":"time","disambiguator":[18368210888677148260,0]},"crate_root":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src","external_crates":[{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[4485569597606079733,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","num":2,"id":{"name":"core","disambiguator":[9994580471200982198,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13944031075627487246,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5133993387825513881,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[14116380118705386640,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6269322086078963025,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16152481959168563413,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7897074911849024150,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[7299104579826168146,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2669544452907545777,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[14288251452253695433,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[13943810077905921301,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[2237926517141734526,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[5541021343498733002,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[7188895526679788668,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[15555671723428220450,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[13375000548276363576,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[8920282723255285566,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[2397004371161247654,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/macros.rs","num":20,"id":{"name":"time_macros","disambiguator":[3218385206617820158,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/formatting/mod.rs","num":21,"id":{"name":"itoa","disambiguator":[13453871069554125092,0]}}],"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":0,"byte_end":11046,"line_start":1,"line_end":332,"column_start":1,"column_end":53}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":2861},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/mod.rs","byte_start":84730,"byte_end":84744,"line_start":22,"line_end":22,"column_start":26,"column_end":40},"alias_span":null,"name":"ComponentRange","value":"","parent":{"krate":0,"index":326}},{"kind":"Use","ref_id":{"krate":0,"index":2882},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/mod.rs","byte_start":84772,"byte_end":84787,"line_start":23,"line_end":23,"column_start":27,"column_end":42},"alias_span":null,"name":"ConversionRange","value":"","parent":{"krate":0,"index":326}},{"kind":"Use","ref_id":{"krate":0,"index":2883},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/mod.rs","byte_start":84772,"byte_end":84787,"line_start":23,"line_end":23,"column_start":27,"column_end":42},"alias_span":null,"name":"ConversionRange","value":"","parent":{"krate":0,"index":326}},{"kind":"Use","ref_id":{"krate":0,"index":2895},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/mod.rs","byte_start":84816,"byte_end":84832,"line_start":24,"line_end":24,"column_start":28,"column_end":44},"alias_span":null,"name":"DifferentVariant","value":"","parent":{"krate":0,"index":326}},{"kind":"Use","ref_id":{"krate":0,"index":2896},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/mod.rs","byte_start":84816,"byte_end":84832,"line_start":24,"line_end":24,"column_start":28,"column_end":44},"alias_span":null,"name":"DifferentVariant","value":"","parent":{"krate":0,"index":326}},{"kind":"Use","ref_id":{"krate":0,"index":2908},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/mod.rs","byte_start":84881,"byte_end":84887,"line_start":26,"line_end":26,"column_start":17,"column_end":23},"alias_span":null,"name":"Format","value":"","parent":{"krate":0,"index":326}},{"kind":"Use","ref_id":{"krate":0,"index":2919},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/mod.rs","byte_start":85090,"byte_end":85114,"line_start":30,"line_end":30,"column_start":37,"column_end":61},"alias_span":null,"name":"InvalidFormatDescription","value":"","parent":{"krate":0,"index":326}},{"kind":"Use","ref_id":{"krate":0,"index":2941},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/mod.rs","byte_start":85141,"byte_end":85155,"line_start":31,"line_end":31,"column_start":26,"column_end":40},"alias_span":null,"name":"InvalidVariant","value":"","parent":{"krate":0,"index":326}},{"kind":"Use","ref_id":{"krate":0,"index":2942},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/mod.rs","byte_start":85141,"byte_end":85155,"line_start":31,"line_end":31,"column_start":26,"column_end":40},"alias_span":null,"name":"InvalidVariant","value":"","parent":{"krate":0,"index":326}},{"kind":"Use","ref_id":{"krate":0,"index":2954},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/mod.rs","byte_start":85200,"byte_end":85205,"line_start":33,"line_end":33,"column_start":16,"column_end":21},"alias_span":null,"name":"Parse","value":"","parent":{"krate":0,"index":326}},{"kind":"Use","ref_id":{"krate":0,"index":2975},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/mod.rs","byte_start":85267,"byte_end":85287,"line_start":35,"line_end":35,"column_start":33,"column_end":53},"alias_span":null,"name":"ParseFromDescription","value":"","parent":{"krate":0,"index":326}},{"kind":"Use","ref_id":{"krate":0,"index":2993},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/mod.rs","byte_start":85342,"byte_end":85355,"line_start":37,"line_end":37,"column_start":26,"column_end":39},"alias_span":null,"name":"TryFromParsed","value":"","parent":{"krate":0,"index":326}},{"kind":"Use","ref_id":{"krate":0,"index":3040},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","byte_start":115955,"byte_end":115964,"line_start":18,"line_end":18,"column_start":26,"column_end":35},"alias_span":null,"name":"Component","value":"","parent":{"krate":0,"index":596}},{"kind":"Use","ref_id":{"krate":0,"index":692},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","byte_start":116013,"byte_end":116018,"line_start":20,"line_end":20,"column_start":22,"column_end":27},"alias_span":null,"name":"parse","value":"","parent":{"krate":0,"index":596}},{"kind":"Use","ref_id":{"krate":0,"index":737},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":149341,"byte_end":149362,"line_start":7,"line_end":7,"column_start":26,"column_end":47},"alias_span":null,"name":"DoNotRelyOnWhatThisIs","value":"","parent":{"krate":0,"index":713}},{"kind":"Use","ref_id":{"krate":0,"index":738},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":149364,"byte_end":149377,"line_start":7,"line_end":7,"column_start":49,"column_end":62},"alias_span":null,"name":"EncodedConfig","value":"","parent":{"krate":0,"index":713}},{"kind":"Use","ref_id":{"krate":0,"index":3522},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","byte_start":116724,"byte_end":116731,"line_start":45,"line_end":45,"column_start":22,"column_end":29},"alias_span":null,"name":"Iso8601","value":"","parent":{"krate":0,"index":712}},{"kind":"Use","ref_id":{"krate":0,"index":3523},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","byte_start":116724,"byte_end":116731,"line_start":45,"line_end":45,"column_start":22,"column_end":29},"alias_span":null,"name":"Iso8601","value":"","parent":{"krate":0,"index":712}},{"kind":"Use","ref_id":{"krate":0,"index":3637},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","byte_start":116754,"byte_end":116761,"line_start":46,"line_end":46,"column_start":22,"column_end":29},"alias_span":null,"name":"Rfc2822","value":"","parent":{"krate":0,"index":712}},{"kind":"Use","ref_id":{"krate":0,"index":3638},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","byte_start":116754,"byte_end":116761,"line_start":46,"line_end":46,"column_start":22,"column_end":29},"alias_span":null,"name":"Rfc2822","value":"","parent":{"krate":0,"index":712}},{"kind":"Use","ref_id":{"krate":0,"index":3650},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","byte_start":116784,"byte_end":116791,"line_start":47,"line_end":47,"column_start":22,"column_end":29},"alias_span":null,"name":"Rfc3339","value":"","parent":{"krate":0,"index":712}},{"kind":"Use","ref_id":{"krate":0,"index":3651},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","byte_start":116784,"byte_end":116791,"line_start":47,"line_end":47,"column_start":22,"column_end":29},"alias_span":null,"name":"Rfc3339","value":"","parent":{"krate":0,"index":712}},{"kind":"Use","ref_id":{"krate":0,"index":870},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/formatting/mod.rs","byte_start":168701,"byte_end":168712,"line_start":9,"line_end":9,"column_start":28,"column_end":39},"alias_span":null,"name":"Formattable","value":"","parent":{"krate":0,"index":814}},{"kind":"Use","ref_id":{"krate":20,"index":846},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/macros.rs","byte_start":209793,"byte_end":209797,"line_start":22,"line_end":22,"column_start":22,"column_end":26},"alias_span":null,"name":"date","value":"","parent":{"krate":0,"index":1204}},{"kind":"Use","ref_id":{"krate":20,"index":850},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/macros.rs","byte_start":210945,"byte_end":210953,"line_start":51,"line_end":51,"column_start":22,"column_end":30},"alias_span":null,"name":"datetime","value":"","parent":{"krate":0,"index":1204}},{"kind":"Use","ref_id":{"krate":20,"index":619},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/macros.rs","byte_start":211956,"byte_end":211974,"line_start":74,"line_end":74,"column_start":22,"column_end":40},"alias_span":null,"name":"format_description","value":"","parent":{"krate":0,"index":1204}},{"kind":"Use","ref_id":{"krate":20,"index":854},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/macros.rs","byte_start":213114,"byte_end":213120,"line_start":97,"line_end":97,"column_start":22,"column_end":28},"alias_span":null,"name":"offset","value":"","parent":{"krate":0,"index":1204}},{"kind":"Use","ref_id":{"krate":20,"index":858},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/macros.rs","byte_start":214460,"byte_end":214464,"line_start":132,"line_end":132,"column_start":22,"column_end":26},"alias_span":null,"name":"time","value":"","parent":{"krate":0,"index":1204}},{"kind":"Use","ref_id":{"krate":0,"index":1855},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/mod.rs","byte_start":264391,"byte_end":264399,"line_start":10,"line_end":10,"column_start":25,"column_end":33},"alias_span":null,"name":"Parsable","value":"","parent":{"krate":0,"index":1433}},{"kind":"Use","ref_id":{"krate":0,"index":3830},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/mod.rs","byte_start":264423,"byte_end":264429,"line_start":11,"line_end":11,"column_start":23,"column_end":29},"alias_span":null,"name":"Parsed","value":"","parent":{"krate":0,"index":1433}},{"kind":"Use","ref_id":{"krate":0,"index":2682},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":10552,"byte_end":10556,"line_start":319,"line_end":319,"column_start":22,"column_end":26},"alias_span":null,"name":"Date","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2730},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":10583,"byte_end":10591,"line_start":320,"line_end":320,"column_start":26,"column_end":34},"alias_span":null,"name":"Duration","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3011},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":10615,"byte_end":10620,"line_start":321,"line_end":321,"column_start":23,"column_end":28},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3694},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":10670,"byte_end":10677,"line_start":323,"line_end":323,"column_start":25,"column_end":32},"alias_span":null,"name":"Instant","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3695},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":10670,"byte_end":10677,"line_start":323,"line_end":323,"column_start":25,"column_end":32},"alias_span":null,"name":"Instant","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3728},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":10701,"byte_end":10706,"line_start":324,"line_end":324,"column_start":23,"column_end":28},"alias_span":null,"name":"Month","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3779},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":10741,"byte_end":10755,"line_start":325,"line_end":325,"column_start":34,"column_end":48},"alias_span":null,"name":"OffsetDateTime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3934},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":10793,"byte_end":10810,"line_start":326,"line_end":326,"column_start":37,"column_end":54},"alias_span":null,"name":"PrimitiveDateTime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3983},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":10833,"byte_end":10837,"line_start":327,"line_end":327,"column_start":22,"column_end":26},"alias_span":null,"name":"Time","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4014},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":10866,"byte_end":10875,"line_start":328,"line_end":328,"column_start":28,"column_end":37},"alias_span":null,"name":"UtcOffset","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4037},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":10901,"byte_end":10908,"line_start":329,"line_end":329,"column_start":25,"column_end":32},"alias_span":null,"name":"Weekday","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":0,"byte_end":11046,"line_start":1,"line_end":332,"column_start":1,"column_end":53},"name":"","qualname":"::","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":144},{"krate":0,"index":326},{"krate":0,"index":530},{"krate":0,"index":596},{"krate":0,"index":814},{"krate":0,"index":1122},{"krate":0,"index":1204},{"krate":0,"index":1220},{"krate":0,"index":1248},{"krate":0,"index":1433},{"krate":0,"index":2346},{"krate":0,"index":2469},{"krate":0,"index":2470},{"krate":0,"index":2560},{"krate":0,"index":2607},{"krate":0,"index":2623},{"krate":0,"index":2650},{"krate":0,"index":2653},{"krate":0,"index":2656},{"krate":0,"index":2659},{"krate":0,"index":2660},{"krate":0,"index":2662},{"krate":0,"index":2665},{"krate":0,"index":2668},{"krate":0,"index":2671},{"krate":0,"index":2674},{"krate":0,"index":2677},{"krate":0,"index":2680}],"decl_id":null,"docs":" # Feature flags","sig":null,"attributes":[{"value":"/ # Feature flags","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":0,"byte_end":19,"line_start":1,"line_end":1,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":20,"byte_end":23,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This crate exposes a number of features. These can be enabled or disabled as shown","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":24,"byte_end":110,"line_start":3,"line_end":3,"column_start":1,"column_end":87}},{"value":"/ [in Cargo's documentation](https://doc.rust-lang.org/cargo/reference/features.html). Features","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":111,"byte_end":208,"line_start":4,"line_end":4,"column_start":1,"column_end":98}},{"value":"/ are _disabled_ by default unless otherwise noted.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":209,"byte_end":262,"line_start":5,"line_end":5,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":263,"byte_end":266,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Reliance on a given feature is always indicated alongside the item definition.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":267,"byte_end":349,"line_start":7,"line_end":7,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":350,"byte_end":353,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ - `std` (_enabled by default, implicitly enables `alloc`_)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":354,"byte_end":416,"line_start":9,"line_end":9,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":417,"byte_end":420,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/   This enables a number of features that depend on the standard library.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":421,"byte_end":497,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":498,"byte_end":501,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ - `alloc` (_enabled by default via `std`_)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":502,"byte_end":548,"line_start":13,"line_end":13,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":549,"byte_end":552,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/   Enables a number of features that require the ability to dynamically allocate memory.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":553,"byte_end":644,"line_start":15,"line_end":15,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":645,"byte_end":648,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ - `macros`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":649,"byte_end":663,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":664,"byte_end":667,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/   Enables macros that provide compile-time verification of values and intuitive syntax.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":668,"byte_end":759,"line_start":19,"line_end":19,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":760,"byte_end":763,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ - `formatting` (_implicitly enables `std`_)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":764,"byte_end":811,"line_start":21,"line_end":21,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":812,"byte_end":815,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/   Enables formatting of most structs.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":816,"byte_end":857,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":858,"byte_end":861,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ - `parsing`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":862,"byte_end":877,"line_start":25,"line_end":25,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":878,"byte_end":881,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/   Enables parsing of most structs.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":882,"byte_end":920,"line_start":27,"line_end":27,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":921,"byte_end":924,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ - `local-offset` (_implicitly enables `std`_)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":925,"byte_end":974,"line_start":29,"line_end":29,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":975,"byte_end":978,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/   This feature enables a number of methods that allow obtaining the system's UTC offset.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":979,"byte_end":1071,"line_start":31,"line_end":31,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":1072,"byte_end":1075,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ - `large-dates`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":1076,"byte_end":1095,"line_start":33,"line_end":33,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":1096,"byte_end":1099,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/   By default, only years within the ±9999 range (inclusive) are supported. If you need support","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":1100,"byte_end":1199,"line_start":35,"line_end":35,"column_start":1,"column_end":99}},{"value":"/   for years outside this range, consider enabling this feature; the supported range will be","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":1200,"byte_end":1295,"line_start":36,"line_end":36,"column_start":1,"column_end":96}},{"value":"/   increased to ±999,999.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":1296,"byte_end":1325,"line_start":37,"line_end":37,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":1326,"byte_end":1329,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/   Note that enabling this feature has some costs, as it means forgoing some optimizations.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":1330,"byte_end":1424,"line_start":39,"line_end":39,"column_start":1,"column_end":95}},{"value":"/   Ambiguities may be introduced when parsing that would not otherwise exist.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":1425,"byte_end":1505,"line_start":40,"line_end":40,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":1506,"byte_end":1509,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ - `serde`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":1510,"byte_end":1523,"line_start":42,"line_end":42,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":1524,"byte_end":1527,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/   Enables [serde](https://docs.rs/serde) support for all types except [`Instant`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":1528,"byte_end":1614,"line_start":44,"line_end":44,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":1615,"byte_end":1618,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ - `serde-human-readable` (_implicitly enables `serde`, `formatting`, and `parsing`_)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":1619,"byte_end":1707,"line_start":46,"line_end":46,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":1708,"byte_end":1711,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/   Allows serde representations to use a human-readable format. This is determined by the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":1712,"byte_end":1804,"line_start":48,"line_end":48,"column_start":1,"column_end":93}},{"value":"/   serializer, not the user. If this feature is not enabled or if the serializer requests a","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":1805,"byte_end":1899,"line_start":49,"line_end":49,"column_start":1,"column_end":95}},{"value":"/   non-human-readable format, a format optimized for binary representation will be used.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":1900,"byte_end":1991,"line_start":50,"line_end":50,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":1992,"byte_end":1995,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/   Libraries should never enable this feature, as the decision of what format to use should be up","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":1996,"byte_end":2096,"line_start":52,"line_end":52,"column_start":1,"column_end":101}},{"value":"/   to the user.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":2097,"byte_end":2115,"line_start":53,"line_end":53,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":2116,"byte_end":2119,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ - `serde-well-known` (_implicitly enables `serde/alloc`, `formatting`, and `parsing`_)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":2120,"byte_end":2210,"line_start":55,"line_end":55,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":2211,"byte_end":2214,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/   Enables support for serializing and deserializing well-known formats using serde's","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":2215,"byte_end":2303,"line_start":57,"line_end":57,"column_start":1,"column_end":89}},{"value":"/   [`#[with]` attribute](https://serde.rs/field-attrs.html#with).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":2304,"byte_end":2372,"line_start":58,"line_end":58,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":2373,"byte_end":2376,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ - `rand`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":2377,"byte_end":2389,"line_start":60,"line_end":60,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":2390,"byte_end":2393,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/   Enables [rand](https://docs.rs/rand) support for all types.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":2394,"byte_end":2459,"line_start":62,"line_end":62,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":2460,"byte_end":2463,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ - `quickcheck` (_implicitly enables `alloc`_)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":2464,"byte_end":2513,"line_start":64,"line_end":64,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":2514,"byte_end":2517,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/   Enables [quickcheck](https://docs.rs/quickcheck) support for all types except [`Instant`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":2518,"byte_end":2614,"line_start":66,"line_end":66,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":2615,"byte_end":2618,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ - `wasm-bindgen`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":2619,"byte_end":2639,"line_start":68,"line_end":68,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":2640,"byte_end":2643,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/   Enables [wasm-bindgen](https://github.com/rustwasm/wasm-bindgen) support for converting","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":2644,"byte_end":2737,"line_start":70,"line_end":70,"column_start":1,"column_end":94}},{"value":"/   [JavaScript dates](https://rustwasm.github.io/wasm-bindgen/api/js_sys/struct.Date.html), as","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":2738,"byte_end":2835,"line_start":71,"line_end":71,"column_start":1,"column_end":98}},{"value":"/   well as obtaining the UTC offset from JavaScript.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":2836,"byte_end":2891,"line_start":72,"line_end":72,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":2892,"byte_end":2895,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ One pseudo-feature flag that is only available to end users is the `unsound_local_offset` cfg.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":2896,"byte_end":2994,"line_start":74,"line_end":74,"column_start":1,"column_end":99}},{"value":"/ As the name indicates, using the feature is unsound, and [may cause unexpected segmentation","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":2995,"byte_end":3090,"line_start":75,"line_end":75,"column_start":1,"column_end":96}},{"value":"/ faults](https://github.com/time-rs/time/issues/293). Unlike other flags, this is deliberately","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":3091,"byte_end":3188,"line_start":76,"line_end":76,"column_start":1,"column_end":98}},{"value":"/ only available to end users; this is to ensure that a user doesn't have unsound behavior without","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":3189,"byte_end":3289,"line_start":77,"line_end":77,"column_start":1,"column_end":101}},{"value":"/ knowing it. To enable this behavior, you must use `RUSTFLAGS=\"--cfg unsound_local_offset\" cargo","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":3290,"byte_end":3389,"line_start":78,"line_end":78,"column_start":1,"column_end":100}},{"value":"/ build` or similar. Note: This flag is _not tested anywhere_, including in the regular test of","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":3390,"byte_end":3487,"line_start":79,"line_end":79,"column_start":1,"column_end":98}},{"value":"/ the powerset of all feature flags. Use at your own risk. Without this flag, any method that","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":3488,"byte_end":3583,"line_start":80,"line_end":80,"column_start":1,"column_end":96}},{"value":"/ requires the local offset will return the `Err` variant when otherwise unsound.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":3584,"byte_end":3667,"line_start":81,"line_end":81,"column_start":1,"column_end":84}},{"value":"deny(anonymous_parameters, clippy :: all, clippy ::\nundocumented_unsafe_blocks, const_err, illegal_floating_point_literal_pattern,\nlate_bound_lifetime_arguments, path_statements, patterns_in_fns_without_body,\nrust_2018_idioms, trivial_casts, trivial_numeric_casts, unreachable_pub,\nunsafe_op_in_unsafe_fn, unused_extern_crates)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":3964,"byte_end":4349,"line_start":90,"line_end":105,"column_start":1,"column_end":3}},{"value":"warn(clippy :: dbg_macro, clippy :: decimal_literal_representation, clippy\n:: get_unwrap, clippy :: missing_docs_in_private_items, clippy :: nursery,\nclippy :: print_stdout, clippy :: todo, clippy :: unimplemented, clippy ::\nunnested_or_patterns, clippy :: unwrap_in_result, clippy :: unwrap_used,\nclippy :: use_debug, deprecated_in_future, missing_copy_implementations,\nmissing_debug_implementations, unused_qualifications,\nvariant_size_differences)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":4350,"byte_end":4850,"line_start":106,"line_end":124,"column_start":1,"column_end":3}},{"value":"allow(clippy :: redundant_pub_crate)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":4851,"byte_end":4889,"line_start":125,"line_end":125,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":2682},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":12138,"byte_end":12142,"line_start":35,"line_end":35,"column_start":12,"column_end":16},"name":"Date","qualname":"::date::Date","value":"Date {  }","parent":null,"children":[{"krate":0,"index":2683}],"decl_id":null,"docs":" Date in the proleptic Gregorian calendar.","sig":null,"attributes":[{"value":"/ Date in the proleptic Gregorian calendar.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":11769,"byte_end":11814,"line_start":29,"line_end":29,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":11815,"byte_end":11818,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ By default, years between ±9999 inclusive are representable. This can be expanded to ±999,999","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":11819,"byte_end":11918,"line_start":31,"line_end":31,"column_start":1,"column_end":98}},{"value":"/ inclusive by enabling the `large-dates` crate feature. Doing so has performance implications","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":11919,"byte_end":12015,"line_start":32,"line_end":32,"column_start":1,"column_end":97}},{"value":"/ and introduces some ambiguities when parsing.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":12016,"byte_end":12065,"line_start":33,"line_end":33,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":12496,"byte_end":12499,"line_start":45,"line_end":45,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Date as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> Result<(), fmt::Error>","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":74},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":12856,"byte_end":12859,"line_start":57,"line_end":57,"column_start":15,"column_end":18},"name":"MIN","qualname":"::date::Date::MIN","value":"Self","parent":{"krate":0,"index":73},"children":[],"decl_id":null,"docs":" The minimum valid `Date`.","sig":null,"attributes":[{"value":"/ The minimum valid `Date`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":12729,"byte_end":12758,"line_start":54,"line_end":54,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":12763,"byte_end":12766,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ The value of this may vary depending on the feature flags enabled.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":12771,"byte_end":12841,"line_start":56,"line_end":56,"column_start":5,"column_end":75}}]},{"kind":"Const","id":{"krate":0,"index":75},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":13050,"byte_end":13053,"line_start":62,"line_end":62,"column_start":15,"column_end":18},"name":"MAX","qualname":"::date::Date::MAX","value":"Self","parent":{"krate":0,"index":73},"children":[],"decl_id":null,"docs":" The maximum valid `Date`.","sig":null,"attributes":[{"value":"/ The maximum valid `Date`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":12923,"byte_end":12952,"line_start":59,"line_end":59,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":12957,"byte_end":12960,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ The value of this may vary depending on the feature flags enabled.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":12965,"byte_end":13035,"line_start":61,"line_end":61,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":13323,"byte_end":13352,"line_start":68,"line_end":68,"column_start":18,"column_end":47},"name":"__from_ordinal_date_unchecked","qualname":"<Date>::__from_ordinal_date_unchecked","value":"const fn __from_ordinal_date_unchecked(i32, u16) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a `Date` from the year and ordinal values, the validity of which must be\n guaranteed by the caller.\n","sig":null,"attributes":[{"value":"/ Construct a `Date` from the year and ordinal values, the validity of which must be","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":13166,"byte_end":13252,"line_start":65,"line_end":65,"column_start":5,"column_end":91}},{"value":"/ guaranteed by the caller.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":13257,"byte_end":13286,"line_start":66,"line_end":66,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":14128,"byte_end":14146,"line_start":91,"line_end":91,"column_start":18,"column_end":36},"name":"from_calendar_date","qualname":"<Date>::from_calendar_date","value":"const fn from_calendar_date(i32, Month, u8)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a `Date` from the year, month, and day.","sig":null,"attributes":[{"value":"/ Attempt to create a `Date` from the year, month, and day.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":13647,"byte_end":13708,"line_start":79,"line_end":79,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":13713,"byte_end":13716,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":13721,"byte_end":13732,"line_start":81,"line_end":81,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, Month};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":13737,"byte_end":13767,"line_start":82,"line_end":82,"column_start":5,"column_end":35}},{"value":"/ assert!(Date::from_calendar_date(2019, Month::January, 1).is_ok());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":13772,"byte_end":13843,"line_start":83,"line_end":83,"column_start":5,"column_end":76}},{"value":"/ assert!(Date::from_calendar_date(2019, Month::December, 31).is_ok());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":13848,"byte_end":13921,"line_start":84,"line_end":84,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":13926,"byte_end":13933,"line_start":85,"line_end":85,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":13938,"byte_end":13941,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":13946,"byte_end":13957,"line_start":87,"line_end":87,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, Month};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":13962,"byte_end":13992,"line_start":88,"line_end":88,"column_start":5,"column_end":35}},{"value":"/ assert!(Date::from_calendar_date(2019, Month::February, 29).is_err()); // 2019 isn't a leap year.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":13997,"byte_end":14098,"line_start":89,"line_end":89,"column_start":5,"column_end":106}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":14103,"byte_end":14110,"line_start":90,"line_end":90,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":15337,"byte_end":15354,"line_start":124,"line_end":124,"column_start":18,"column_end":35},"name":"from_ordinal_date","qualname":"<Date>::from_ordinal_date","value":"const fn from_ordinal_date(i32, u16) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a `Date` from the year and ordinal day number.","sig":null,"attributes":[{"value":"/ Attempt to create a `Date` from the year and ordinal day number.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":14918,"byte_end":14986,"line_start":112,"line_end":112,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":14991,"byte_end":14994,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":14999,"byte_end":15010,"line_start":114,"line_end":114,"column_start":5,"column_end":16}},{"value":"/ # use time::Date;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":15015,"byte_end":15036,"line_start":115,"line_end":115,"column_start":5,"column_end":26}},{"value":"/ assert!(Date::from_ordinal_date(2019, 1).is_ok());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":15041,"byte_end":15095,"line_start":116,"line_end":116,"column_start":5,"column_end":59}},{"value":"/ assert!(Date::from_ordinal_date(2019, 365).is_ok());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":15100,"byte_end":15156,"line_start":117,"line_end":117,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":15161,"byte_end":15168,"line_start":118,"line_end":118,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":15173,"byte_end":15176,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":15181,"byte_end":15192,"line_start":120,"line_end":120,"column_start":5,"column_end":16}},{"value":"/ # use time::Date;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":15197,"byte_end":15218,"line_start":121,"line_end":121,"column_start":5,"column_end":26}},{"value":"/ assert!(Date::from_ordinal_date(2019, 366).is_err()); // 2019 isn't a leap year.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":15223,"byte_end":15307,"line_start":122,"line_end":122,"column_start":5,"column_end":89}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":15312,"byte_end":15319,"line_start":123,"line_end":123,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":16184,"byte_end":16202,"line_start":143,"line_end":143,"column_start":18,"column_end":36},"name":"from_iso_week_date","qualname":"<Date>::from_iso_week_date","value":"const fn from_iso_week_date(i32, u8, Weekday)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a `Date` from the ISO year, week, and weekday.","sig":null,"attributes":[{"value":"/ Attempt to create a `Date` from the ISO year, week, and weekday.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":15639,"byte_end":15707,"line_start":130,"line_end":130,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":15712,"byte_end":15715,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":15720,"byte_end":15731,"line_start":132,"line_end":132,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, Weekday::*};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":15736,"byte_end":15771,"line_start":133,"line_end":133,"column_start":5,"column_end":40}},{"value":"/ assert!(Date::from_iso_week_date(2019, 1, Monday).is_ok());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":15776,"byte_end":15839,"line_start":134,"line_end":134,"column_start":5,"column_end":68}},{"value":"/ assert!(Date::from_iso_week_date(2019, 1, Tuesday).is_ok());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":15844,"byte_end":15908,"line_start":135,"line_end":135,"column_start":5,"column_end":69}},{"value":"/ assert!(Date::from_iso_week_date(2020, 53, Friday).is_ok());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":15913,"byte_end":15977,"line_start":136,"line_end":136,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":15982,"byte_end":15989,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":15994,"byte_end":15997,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":16002,"byte_end":16013,"line_start":139,"line_end":139,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, Weekday::*};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":16018,"byte_end":16053,"line_start":140,"line_end":140,"column_start":5,"column_end":40}},{"value":"/ assert!(Date::from_iso_week_date(2019, 53, Monday).is_err()); // 2019 doesn't have 53 weeks.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":16058,"byte_end":16154,"line_start":141,"line_end":141,"column_start":5,"column_end":101}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":16159,"byte_end":16166,"line_start":142,"line_end":142,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":18077,"byte_end":18092,"line_start":190,"line_end":190,"column_start":18,"column_end":33},"name":"from_julian_day","qualname":"<Date>::from_julian_day","value":"const fn from_julian_day(i32) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Create a `Date` from the Julian day.","sig":null,"attributes":[{"value":"/ Create a `Date` from the Julian day.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":17377,"byte_end":17417,"line_start":177,"line_end":177,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":17422,"byte_end":17425,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ The algorithm to perform this conversion is derived from one provided by Peter Baum; it is","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":17430,"byte_end":17524,"line_start":179,"line_end":179,"column_start":5,"column_end":99}},{"value":"/ freely available [here](https://www.researchgate.net/publication/316558298_Date_Algorithms).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":17529,"byte_end":17625,"line_start":180,"line_end":180,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":17630,"byte_end":17633,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":17638,"byte_end":17649,"line_start":182,"line_end":182,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, macros::date};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":17654,"byte_end":17691,"line_start":183,"line_end":183,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(Date::from_julian_day(0), Ok(date!(-4713 - 11 - 24)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":17696,"byte_end":17765,"line_start":184,"line_end":184,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(Date::from_julian_day(2_451_545), Ok(date!(2000 - 01 - 01)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":17770,"byte_end":17846,"line_start":185,"line_end":185,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(Date::from_julian_day(2_458_485), Ok(date!(2019 - 01 - 01)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":17851,"byte_end":17927,"line_start":186,"line_end":186,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(Date::from_julian_day(2_458_849), Ok(date!(2019 - 12 - 31)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":17932,"byte_end":18008,"line_start":187,"line_end":187,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":18013,"byte_end":18020,"line_start":188,"line_end":188,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":20213,"byte_end":20217,"line_start":246,"line_end":246,"column_start":18,"column_end":22},"name":"year","qualname":"<Date>::year","value":"const fn year(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the year of the date.","sig":null,"attributes":[{"value":"/ Get the year of the date.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":19928,"byte_end":19957,"line_start":238,"line_end":238,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":19962,"byte_end":19965,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":19970,"byte_end":19981,"line_start":240,"line_end":240,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":19986,"byte_end":20015,"line_start":241,"line_end":241,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).year(), 2019);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":20020,"byte_end":20071,"line_start":242,"line_end":242,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(date!(2019 - 12 - 31).year(), 2019);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":20076,"byte_end":20127,"line_start":243,"line_end":243,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(date!(2020 - 01 - 01).year(), 2020);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":20132,"byte_end":20183,"line_start":244,"line_end":244,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":20188,"byte_end":20195,"line_start":245,"line_end":245,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":20518,"byte_end":20523,"line_start":257,"line_end":257,"column_start":18,"column_end":23},"name":"month","qualname":"<Date>::month","value":"const fn month(Self) -> Month","parent":null,"children":[],"decl_id":null,"docs":" Get the month.","sig":null,"attributes":[{"value":"/ Get the month.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":20268,"byte_end":20286,"line_start":250,"line_end":250,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":20291,"byte_end":20294,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":20299,"byte_end":20310,"line_start":252,"line_end":252,"column_start":5,"column_end":16}},{"value":"/ # use time::{macros::date, Month};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":20315,"byte_end":20353,"line_start":253,"line_end":253,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).month(), Month::January);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":20358,"byte_end":20420,"line_start":254,"line_end":254,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(date!(2019 - 12 - 31).month(), Month::December);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":20425,"byte_end":20488,"line_start":255,"line_end":255,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":20493,"byte_end":20500,"line_start":256,"line_end":256,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":20874,"byte_end":20877,"line_start":270,"line_end":270,"column_start":18,"column_end":21},"name":"day","qualname":"<Date>::day","value":"const fn day(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the day of the month.","sig":null,"attributes":[{"value":"/ Get the day of the month.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":20579,"byte_end":20608,"line_start":261,"line_end":261,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":20613,"byte_end":20616,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=31`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":20621,"byte_end":20681,"line_start":263,"line_end":263,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":20686,"byte_end":20689,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":20694,"byte_end":20705,"line_start":265,"line_end":265,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":20710,"byte_end":20739,"line_start":266,"line_end":266,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).day(), 1);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":20744,"byte_end":20791,"line_start":267,"line_end":267,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(date!(2019 - 12 - 31).day(), 31);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":20796,"byte_end":20844,"line_start":268,"line_end":268,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":20849,"byte_end":20856,"line_start":269,"line_end":269,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":23122,"byte_end":23129,"line_start":324,"line_end":324,"column_start":18,"column_end":25},"name":"ordinal","qualname":"<Date>::ordinal","value":"const fn ordinal(Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the day of the year.","sig":null,"attributes":[{"value":"/ Get the day of the year.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":22789,"byte_end":22817,"line_start":315,"line_end":315,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":22822,"byte_end":22825,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=366` (`1..=365` for common years).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":22830,"byte_end":22920,"line_start":317,"line_end":317,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":22925,"byte_end":22928,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":22933,"byte_end":22944,"line_start":319,"line_end":319,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":22949,"byte_end":22978,"line_start":320,"line_end":320,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).ordinal(), 1);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":22983,"byte_end":23034,"line_start":321,"line_end":321,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(date!(2019 - 12 - 31).ordinal(), 365);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":23039,"byte_end":23092,"line_start":322,"line_end":322,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":23097,"byte_end":23104,"line_start":323,"line_end":323,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":24082,"byte_end":24090,"line_start":351,"line_end":351,"column_start":18,"column_end":26},"name":"iso_week","qualname":"<Date>::iso_week","value":"const fn iso_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the ISO week number.","sig":null,"attributes":[{"value":"/ Get the ISO week number.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":23605,"byte_end":23633,"line_start":339,"line_end":339,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":23638,"byte_end":23641,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=53`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":23646,"byte_end":23706,"line_start":341,"line_end":341,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":23711,"byte_end":23714,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":23719,"byte_end":23730,"line_start":343,"line_end":343,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":23735,"byte_end":23764,"line_start":344,"line_end":344,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).iso_week(), 1);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":23769,"byte_end":23821,"line_start":345,"line_end":345,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(date!(2019 - 10 - 04).iso_week(), 40);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":23826,"byte_end":23879,"line_start":346,"line_end":346,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(date!(2020 - 01 - 01).iso_week(), 1);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":23884,"byte_end":23936,"line_start":347,"line_end":347,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(date!(2020 - 12 - 31).iso_week(), 53);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":23941,"byte_end":23994,"line_start":348,"line_end":348,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(date!(2021 - 01 - 01).iso_week(), 53);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":23999,"byte_end":24052,"line_start":349,"line_end":349,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":24057,"byte_end":24064,"line_start":350,"line_end":350,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":24637,"byte_end":24654,"line_start":366,"line_end":366,"column_start":18,"column_end":35},"name":"sunday_based_week","qualname":"<Date>::sunday_based_week","value":"const fn sunday_based_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the week number where week 1 begins on the first Sunday.","sig":null,"attributes":[{"value":"/ Get the week number where week 1 begins on the first Sunday.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":24147,"byte_end":24211,"line_start":355,"line_end":355,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":24216,"byte_end":24219,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..=53`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":24224,"byte_end":24284,"line_start":357,"line_end":357,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":24289,"byte_end":24292,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":24297,"byte_end":24308,"line_start":359,"line_end":359,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":24313,"byte_end":24342,"line_start":360,"line_end":360,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).sunday_based_week(), 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":24347,"byte_end":24408,"line_start":361,"line_end":361,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(date!(2020 - 01 - 01).sunday_based_week(), 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":24413,"byte_end":24474,"line_start":362,"line_end":362,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(date!(2020 - 12 - 31).sunday_based_week(), 52);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":24479,"byte_end":24541,"line_start":363,"line_end":363,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(date!(2021 - 01 - 01).sunday_based_week(), 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":24546,"byte_end":24607,"line_start":364,"line_end":364,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":24612,"byte_end":24619,"line_start":365,"line_end":365,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":25267,"byte_end":25284,"line_start":381,"line_end":381,"column_start":18,"column_end":35},"name":"monday_based_week","qualname":"<Date>::monday_based_week","value":"const fn monday_based_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the week number where week 1 begins on the first Monday.","sig":null,"attributes":[{"value":"/ Get the week number where week 1 begins on the first Monday.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":24777,"byte_end":24841,"line_start":370,"line_end":370,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":24846,"byte_end":24849,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..=53`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":24854,"byte_end":24914,"line_start":372,"line_end":372,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":24919,"byte_end":24922,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":24927,"byte_end":24938,"line_start":374,"line_end":374,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":24943,"byte_end":24972,"line_start":375,"line_end":375,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).monday_based_week(), 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":24977,"byte_end":25038,"line_start":376,"line_end":376,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(date!(2020 - 01 - 01).monday_based_week(), 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":25043,"byte_end":25104,"line_start":377,"line_end":377,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(date!(2020 - 12 - 31).monday_based_week(), 52);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":25109,"byte_end":25171,"line_start":378,"line_end":378,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(date!(2021 - 01 - 01).monday_based_week(), 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":25176,"byte_end":25237,"line_start":379,"line_end":379,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":25242,"byte_end":25249,"line_start":380,"line_end":380,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":25660,"byte_end":25676,"line_start":394,"line_end":394,"column_start":18,"column_end":34},"name":"to_calendar_date","qualname":"<Date>::to_calendar_date","value":"const fn to_calendar_date(Self) -> (i32, Month, u8)","parent":null,"children":[],"decl_id":null,"docs":" Get the year, month, and day.","sig":null,"attributes":[{"value":"/ Get the year, month, and day.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":25407,"byte_end":25440,"line_start":385,"line_end":385,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":25445,"byte_end":25448,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":25453,"byte_end":25464,"line_start":387,"line_end":387,"column_start":5,"column_end":16}},{"value":"/ # use time::{macros::date, Month};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":25469,"byte_end":25507,"line_start":388,"line_end":388,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":25512,"byte_end":25527,"line_start":389,"line_end":389,"column_start":5,"column_end":20}},{"value":"/     date!(2019 - 01 - 01).to_calendar_date(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":25532,"byte_end":25581,"line_start":390,"line_end":390,"column_start":5,"column_end":54}},{"value":"/     (2019, Month::January, 1)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":25586,"byte_end":25619,"line_start":391,"line_end":391,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":25624,"byte_end":25630,"line_start":392,"line_end":392,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":25635,"byte_end":25642,"line_start":393,"line_end":393,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":25995,"byte_end":26010,"line_start":405,"line_end":405,"column_start":18,"column_end":33},"name":"to_ordinal_date","qualname":"<Date>::to_ordinal_date","value":"const fn to_ordinal_date(Self) -> (i32, u16)","parent":null,"children":[],"decl_id":null,"docs":" Get the year and ordinal day number.","sig":null,"attributes":[{"value":"/ Get the year and ordinal day number.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":25795,"byte_end":25835,"line_start":399,"line_end":399,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":25840,"byte_end":25843,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":25848,"byte_end":25859,"line_start":401,"line_end":401,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":25864,"byte_end":25893,"line_start":402,"line_end":402,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).to_ordinal_date(), (2019, 1));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":25898,"byte_end":25965,"line_start":403,"line_end":403,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":25970,"byte_end":25977,"line_start":404,"line_end":404,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":26718,"byte_end":26734,"line_start":425,"line_end":425,"column_start":18,"column_end":34},"name":"to_iso_week_date","qualname":"<Date>::to_iso_week_date","value":"const fn to_iso_week_date(Self) -> (i32, u8, Weekday)","parent":null,"children":[],"decl_id":null,"docs":" Get the ISO 8601 year, week number, and weekday.","sig":null,"attributes":[{"value":"/ Get the ISO 8601 year, week number, and weekday.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":26082,"byte_end":26134,"line_start":409,"line_end":409,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":26139,"byte_end":26142,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":26147,"byte_end":26158,"line_start":411,"line_end":411,"column_start":5,"column_end":16}},{"value":"/ # use time::{Weekday::*, macros::date};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":26163,"byte_end":26206,"line_start":412,"line_end":412,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).to_iso_week_date(), (2019, 1, Tuesday));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":26211,"byte_end":26288,"line_start":413,"line_end":413,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(date!(2019 - 10 - 04).to_iso_week_date(), (2019, 40, Friday));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":26293,"byte_end":26370,"line_start":414,"line_end":414,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":26375,"byte_end":26390,"line_start":415,"line_end":415,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 01 - 01).to_iso_week_date(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":26395,"byte_end":26444,"line_start":416,"line_end":416,"column_start":5,"column_end":54}},{"value":"/     (2020, 1, Wednesday)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":26449,"byte_end":26477,"line_start":417,"line_end":417,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":26482,"byte_end":26488,"line_start":418,"line_end":418,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":26493,"byte_end":26508,"line_start":419,"line_end":419,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).to_iso_week_date(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":26513,"byte_end":26562,"line_start":420,"line_end":420,"column_start":5,"column_end":54}},{"value":"/     (2020, 53, Thursday)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":26567,"byte_end":26595,"line_start":421,"line_end":421,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":26600,"byte_end":26606,"line_start":422,"line_end":422,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(date!(2021 - 01 - 01).to_iso_week_date(), (2020, 53, Friday));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":26611,"byte_end":26688,"line_start":423,"line_end":423,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":26693,"byte_end":26700,"line_start":424,"line_end":424,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":28006,"byte_end":28013,"line_start":453,"line_end":453,"column_start":18,"column_end":25},"name":"weekday","qualname":"<Date>::weekday","value":"const fn weekday(Self) -> Weekday","parent":null,"children":[],"decl_id":null,"docs":" Get the weekday.","sig":null,"attributes":[{"value":"/ Get the weekday.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":27143,"byte_end":27163,"line_start":436,"line_end":436,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":27168,"byte_end":27171,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":27176,"byte_end":27187,"line_start":438,"line_end":438,"column_start":5,"column_end":16}},{"value":"/ # use time::{Weekday::*, macros::date};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":27192,"byte_end":27235,"line_start":439,"line_end":439,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).weekday(), Tuesday);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":27240,"byte_end":27297,"line_start":440,"line_end":440,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(date!(2019 - 02 - 01).weekday(), Friday);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":27302,"byte_end":27358,"line_start":441,"line_end":441,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(date!(2019 - 03 - 01).weekday(), Friday);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":27363,"byte_end":27419,"line_start":442,"line_end":442,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(date!(2019 - 04 - 01).weekday(), Monday);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":27424,"byte_end":27480,"line_start":443,"line_end":443,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(date!(2019 - 05 - 01).weekday(), Wednesday);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":27485,"byte_end":27544,"line_start":444,"line_end":444,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(date!(2019 - 06 - 01).weekday(), Saturday);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":27549,"byte_end":27607,"line_start":445,"line_end":445,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(date!(2019 - 07 - 01).weekday(), Monday);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":27612,"byte_end":27668,"line_start":446,"line_end":446,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(date!(2019 - 08 - 01).weekday(), Thursday);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":27673,"byte_end":27731,"line_start":447,"line_end":447,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(date!(2019 - 09 - 01).weekday(), Sunday);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":27736,"byte_end":27792,"line_start":448,"line_end":448,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(date!(2019 - 10 - 01).weekday(), Tuesday);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":27797,"byte_end":27854,"line_start":449,"line_end":449,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(date!(2019 - 11 - 01).weekday(), Friday);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":27859,"byte_end":27915,"line_start":450,"line_end":450,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(date!(2019 - 12 - 01).weekday(), Sunday);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":27920,"byte_end":27976,"line_start":451,"line_end":451,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":27981,"byte_end":27988,"line_start":452,"line_end":452,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":28971,"byte_end":28979,"line_start":486,"line_end":486,"column_start":18,"column_end":26},"name":"next_day","qualname":"<Date>::next_day","value":"const fn next_day(Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Get the next calendar date.","sig":null,"attributes":[{"value":"/ Get the next calendar date.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":28445,"byte_end":28476,"line_start":468,"line_end":468,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":28481,"byte_end":28484,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":28489,"byte_end":28500,"line_start":470,"line_end":470,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, macros::date};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":28505,"byte_end":28542,"line_start":471,"line_end":471,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":28547,"byte_end":28562,"line_start":472,"line_end":472,"column_start":5,"column_end":20}},{"value":"/     date!(2019 - 01 - 01).next_day(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":28567,"byte_end":28608,"line_start":473,"line_end":473,"column_start":5,"column_end":46}},{"value":"/     Some(date!(2019 - 01 - 02))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":28613,"byte_end":28648,"line_start":474,"line_end":474,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":28653,"byte_end":28659,"line_start":475,"line_end":475,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":28664,"byte_end":28679,"line_start":476,"line_end":476,"column_start":5,"column_end":20}},{"value":"/     date!(2019 - 01 - 31).next_day(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":28684,"byte_end":28725,"line_start":477,"line_end":477,"column_start":5,"column_end":46}},{"value":"/     Some(date!(2019 - 02 - 01))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":28730,"byte_end":28765,"line_start":478,"line_end":478,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":28770,"byte_end":28776,"line_start":479,"line_end":479,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":28781,"byte_end":28796,"line_start":480,"line_end":480,"column_start":5,"column_end":20}},{"value":"/     date!(2019 - 12 - 31).next_day(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":28801,"byte_end":28842,"line_start":481,"line_end":481,"column_start":5,"column_end":46}},{"value":"/     Some(date!(2020 - 01 - 01))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":28847,"byte_end":28882,"line_start":482,"line_end":482,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":28887,"byte_end":28893,"line_start":483,"line_end":483,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(Date::MAX.next_day(), None);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":28898,"byte_end":28941,"line_start":484,"line_end":484,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":28946,"byte_end":28953,"line_start":485,"line_end":485,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":29939,"byte_end":29951,"line_start":518,"line_end":518,"column_start":18,"column_end":30},"name":"previous_day","qualname":"<Date>::previous_day","value":"const fn previous_day(Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Get the previous calendar date.","sig":null,"attributes":[{"value":"/ Get the previous calendar date.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":29393,"byte_end":29428,"line_start":500,"line_end":500,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":29433,"byte_end":29436,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":29441,"byte_end":29452,"line_start":502,"line_end":502,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, macros::date};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":29457,"byte_end":29494,"line_start":503,"line_end":503,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":29499,"byte_end":29514,"line_start":504,"line_end":504,"column_start":5,"column_end":20}},{"value":"/     date!(2019 - 01 - 02).previous_day(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":29519,"byte_end":29564,"line_start":505,"line_end":505,"column_start":5,"column_end":50}},{"value":"/     Some(date!(2019 - 01 - 01))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":29569,"byte_end":29604,"line_start":506,"line_end":506,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":29609,"byte_end":29615,"line_start":507,"line_end":507,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":29620,"byte_end":29635,"line_start":508,"line_end":508,"column_start":5,"column_end":20}},{"value":"/     date!(2019 - 02 - 01).previous_day(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":29640,"byte_end":29685,"line_start":509,"line_end":509,"column_start":5,"column_end":50}},{"value":"/     Some(date!(2019 - 01 - 31))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":29690,"byte_end":29725,"line_start":510,"line_end":510,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":29730,"byte_end":29736,"line_start":511,"line_end":511,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":29741,"byte_end":29756,"line_start":512,"line_end":512,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 01 - 01).previous_day(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":29761,"byte_end":29806,"line_start":513,"line_end":513,"column_start":5,"column_end":50}},{"value":"/     Some(date!(2019 - 12 - 31))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":29811,"byte_end":29846,"line_start":514,"line_end":514,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":29851,"byte_end":29857,"line_start":515,"line_end":515,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(Date::MIN.previous_day(), None);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":29862,"byte_end":29909,"line_start":516,"line_end":516,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":29914,"byte_end":29921,"line_start":517,"line_end":517,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":30946,"byte_end":30959,"line_start":545,"line_end":545,"column_start":18,"column_end":31},"name":"to_julian_day","qualname":"<Date>::to_julian_day","value":"const fn to_julian_day(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the Julian day for the date.","sig":null,"attributes":[{"value":"/ Get the Julian day for the date.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":30341,"byte_end":30377,"line_start":533,"line_end":533,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":30382,"byte_end":30385,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ The algorithm to perform this conversion is derived from one provided by Peter Baum; it is","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":30390,"byte_end":30484,"line_start":535,"line_end":535,"column_start":5,"column_end":99}},{"value":"/ freely available [here](https://www.researchgate.net/publication/316558298_Date_Algorithms).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":30489,"byte_end":30585,"line_start":536,"line_end":536,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":30590,"byte_end":30593,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":30598,"byte_end":30609,"line_start":538,"line_end":538,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":30614,"byte_end":30643,"line_start":539,"line_end":539,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(date!(-4713 - 11 - 24).to_julian_day(), 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":30648,"byte_end":30706,"line_start":540,"line_end":540,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(date!(2000 - 01 - 01).to_julian_day(), 2_451_545);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":30711,"byte_end":30776,"line_start":541,"line_end":541,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).to_julian_day(), 2_458_485);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":30781,"byte_end":30846,"line_start":542,"line_end":542,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(date!(2019 - 12 - 31).to_julian_day(), 2_458_849);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":30851,"byte_end":30916,"line_start":543,"line_end":543,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":30921,"byte_end":30928,"line_start":544,"line_end":544,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":32302,"byte_end":32313,"line_start":585,"line_end":585,"column_start":18,"column_end":29},"name":"checked_add","qualname":"<Date>::checked_add","value":"const fn checked_add(Self, Duration) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self + duration`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self + duration`, returning `None` if an overflow occurred.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":31262,"byte_end":31335,"line_start":556,"line_end":556,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":31340,"byte_end":31343,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":31348,"byte_end":31359,"line_start":558,"line_end":558,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, ext::NumericalDuration, macros::date};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":31364,"byte_end":31425,"line_start":559,"line_end":559,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(Date::MAX.checked_add(1.days()), None);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":31430,"byte_end":31484,"line_start":560,"line_end":560,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(Date::MIN.checked_add((-2).days()), None);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":31489,"byte_end":31546,"line_start":561,"line_end":561,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":31551,"byte_end":31566,"line_start":562,"line_end":562,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).checked_add(2.days()),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":31571,"byte_end":31623,"line_start":563,"line_end":563,"column_start":5,"column_end":57}},{"value":"/     Some(date!(2021 - 01 - 02))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":31628,"byte_end":31663,"line_start":564,"line_end":564,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":31668,"byte_end":31674,"line_start":565,"line_end":565,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":31679,"byte_end":31686,"line_start":566,"line_end":566,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":31691,"byte_end":31694,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":31699,"byte_end":31709,"line_start":568,"line_end":568,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":31714,"byte_end":31717,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ This function only takes whole days into account.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":31722,"byte_end":31775,"line_start":570,"line_end":570,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":31780,"byte_end":31783,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":31788,"byte_end":31799,"line_start":572,"line_end":572,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, ext::NumericalDuration, macros::date};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":31804,"byte_end":31865,"line_start":573,"line_end":573,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(Date::MAX.checked_add(23.hours()), Some(Date::MAX));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":31870,"byte_end":31937,"line_start":574,"line_end":574,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(Date::MIN.checked_add((-23).hours()), Some(Date::MIN));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":31942,"byte_end":32012,"line_start":575,"line_end":575,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":32017,"byte_end":32032,"line_start":576,"line_end":576,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).checked_add(23.hours()),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":32037,"byte_end":32091,"line_start":577,"line_end":577,"column_start":5,"column_end":59}},{"value":"/     Some(date!(2020 - 12 - 31))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":32096,"byte_end":32131,"line_start":578,"line_end":578,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":32136,"byte_end":32142,"line_start":579,"line_end":579,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":32147,"byte_end":32162,"line_start":580,"line_end":580,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).checked_add(47.hours()),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":32167,"byte_end":32221,"line_start":581,"line_end":581,"column_start":5,"column_end":59}},{"value":"/     Some(date!(2021 - 01 - 01))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":32226,"byte_end":32261,"line_start":582,"line_end":582,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":32266,"byte_end":32272,"line_start":583,"line_end":583,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":32277,"byte_end":32284,"line_start":584,"line_end":584,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":33780,"byte_end":33791,"line_start":628,"line_end":628,"column_start":18,"column_end":29},"name":"checked_sub","qualname":"<Date>::checked_sub","value":"const fn checked_sub(Self, Duration) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self - duration`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self - duration`, returning `None` if an overflow occurred.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":32748,"byte_end":32821,"line_start":599,"line_end":599,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":32826,"byte_end":32829,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":32834,"byte_end":32841,"line_start":601,"line_end":601,"column_start":5,"column_end":12}},{"value":"/ # use time::{Date, ext::NumericalDuration, macros::date};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":32846,"byte_end":32907,"line_start":602,"line_end":602,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(Date::MAX.checked_sub((-2).days()), None);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":32912,"byte_end":32969,"line_start":603,"line_end":603,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(Date::MIN.checked_sub(1.days()), None);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":32974,"byte_end":33028,"line_start":604,"line_end":604,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":33033,"byte_end":33048,"line_start":605,"line_end":605,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).checked_sub(2.days()),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":33053,"byte_end":33105,"line_start":606,"line_end":606,"column_start":5,"column_end":57}},{"value":"/     Some(date!(2020 - 12 - 29))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":33110,"byte_end":33145,"line_start":607,"line_end":607,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":33150,"byte_end":33156,"line_start":608,"line_end":608,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":33161,"byte_end":33168,"line_start":609,"line_end":609,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":33173,"byte_end":33176,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":33181,"byte_end":33191,"line_start":611,"line_end":611,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":33196,"byte_end":33199,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ This function only takes whole days into account.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":33204,"byte_end":33257,"line_start":613,"line_end":613,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":33262,"byte_end":33265,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":33270,"byte_end":33277,"line_start":615,"line_end":615,"column_start":5,"column_end":12}},{"value":"/ # use time::{Date, ext::NumericalDuration, macros::date};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":33282,"byte_end":33343,"line_start":616,"line_end":616,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(Date::MAX.checked_sub((-23).hours()), Some(Date::MAX));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":33348,"byte_end":33418,"line_start":617,"line_end":617,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(Date::MIN.checked_sub(23.hours()), Some(Date::MIN));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":33423,"byte_end":33490,"line_start":618,"line_end":618,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":33495,"byte_end":33510,"line_start":619,"line_end":619,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).checked_sub(23.hours()),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":33515,"byte_end":33569,"line_start":620,"line_end":620,"column_start":5,"column_end":59}},{"value":"/     Some(date!(2020 - 12 - 31))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":33574,"byte_end":33609,"line_start":621,"line_end":621,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":33614,"byte_end":33620,"line_start":622,"line_end":622,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":33625,"byte_end":33640,"line_start":623,"line_end":623,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).checked_sub(47.hours()),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":33645,"byte_end":33699,"line_start":624,"line_end":624,"column_start":5,"column_end":59}},{"value":"/     Some(date!(2020 - 12 - 30))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":33704,"byte_end":33739,"line_start":625,"line_end":625,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":33744,"byte_end":33750,"line_start":626,"line_end":626,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":33755,"byte_end":33762,"line_start":627,"line_end":627,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":35182,"byte_end":35196,"line_start":671,"line_end":671,"column_start":18,"column_end":32},"name":"saturating_add","qualname":"<Date>::saturating_add","value":"const fn saturating_add(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self + duration`, saturating value on overflow.","sig":null,"attributes":[{"value":"/ Computes `self + duration`, saturating value on overflow.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":34300,"byte_end":34361,"line_start":644,"line_end":644,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":34366,"byte_end":34369,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":34374,"byte_end":34385,"line_start":646,"line_end":646,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, ext::NumericalDuration, macros::date};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":34390,"byte_end":34451,"line_start":647,"line_end":647,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(Date::MAX.saturating_add(1.days()), Date::MAX);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":34456,"byte_end":34518,"line_start":648,"line_end":648,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(Date::MIN.saturating_add((-2).days()), Date::MIN);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":34523,"byte_end":34588,"line_start":649,"line_end":649,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":34593,"byte_end":34608,"line_start":650,"line_end":650,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).saturating_add(2.days()),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":34613,"byte_end":34668,"line_start":651,"line_end":651,"column_start":5,"column_end":60}},{"value":"/     date!(2021 - 01 - 02)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":34673,"byte_end":34702,"line_start":652,"line_end":652,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":34707,"byte_end":34713,"line_start":653,"line_end":653,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":34718,"byte_end":34725,"line_start":654,"line_end":654,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":34730,"byte_end":34733,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":34738,"byte_end":34748,"line_start":656,"line_end":656,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":34753,"byte_end":34756,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ This function only takes whole days into account.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":34761,"byte_end":34814,"line_start":658,"line_end":658,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":34819,"byte_end":34822,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":34827,"byte_end":34838,"line_start":660,"line_end":660,"column_start":5,"column_end":16}},{"value":"/ # use time::{ext::NumericalDuration, macros::date};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":34843,"byte_end":34898,"line_start":661,"line_end":661,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":34903,"byte_end":34918,"line_start":662,"line_end":662,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).saturating_add(23.hours()),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":34923,"byte_end":34980,"line_start":663,"line_end":663,"column_start":5,"column_end":62}},{"value":"/     date!(2020 - 12 - 31)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":34985,"byte_end":35014,"line_start":664,"line_end":664,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":35019,"byte_end":35025,"line_start":665,"line_end":665,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":35030,"byte_end":35045,"line_start":666,"line_end":666,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).saturating_add(47.hours()),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":35050,"byte_end":35107,"line_start":667,"line_end":667,"column_start":5,"column_end":62}},{"value":"/     date!(2021 - 01 - 01)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":35112,"byte_end":35141,"line_start":668,"line_end":668,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":35146,"byte_end":35152,"line_start":669,"line_end":669,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":35157,"byte_end":35164,"line_start":670,"line_end":670,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":36365,"byte_end":36379,"line_start":709,"line_end":709,"column_start":18,"column_end":32},"name":"saturating_sub","qualname":"<Date>::saturating_sub","value":"const fn saturating_sub(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self - duration`, saturating value on overflow.","sig":null,"attributes":[{"value":"/ Computes `self - duration`, saturating value on overflow.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":35491,"byte_end":35552,"line_start":682,"line_end":682,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":35557,"byte_end":35560,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":35565,"byte_end":35572,"line_start":684,"line_end":684,"column_start":5,"column_end":12}},{"value":"/ # use time::{Date, ext::NumericalDuration, macros::date};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":35577,"byte_end":35638,"line_start":685,"line_end":685,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(Date::MAX.saturating_sub((-2).days()), Date::MAX);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":35643,"byte_end":35708,"line_start":686,"line_end":686,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(Date::MIN.saturating_sub(1.days()), Date::MIN);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":35713,"byte_end":35775,"line_start":687,"line_end":687,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":35780,"byte_end":35795,"line_start":688,"line_end":688,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).saturating_sub(2.days()),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":35800,"byte_end":35855,"line_start":689,"line_end":689,"column_start":5,"column_end":60}},{"value":"/     date!(2020 - 12 - 29)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":35860,"byte_end":35889,"line_start":690,"line_end":690,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":35894,"byte_end":35900,"line_start":691,"line_end":691,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":35905,"byte_end":35912,"line_start":692,"line_end":692,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":35917,"byte_end":35920,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":35925,"byte_end":35935,"line_start":694,"line_end":694,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":35940,"byte_end":35943,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ This function only takes whole days into account.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":35948,"byte_end":36001,"line_start":696,"line_end":696,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":36006,"byte_end":36009,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":36014,"byte_end":36021,"line_start":698,"line_end":698,"column_start":5,"column_end":12}},{"value":"/ # use time::{ext::NumericalDuration, macros::date};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":36026,"byte_end":36081,"line_start":699,"line_end":699,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":36086,"byte_end":36101,"line_start":700,"line_end":700,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).saturating_sub(23.hours()),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":36106,"byte_end":36163,"line_start":701,"line_end":701,"column_start":5,"column_end":62}},{"value":"/     date!(2020 - 12 - 31)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":36168,"byte_end":36197,"line_start":702,"line_end":702,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":36202,"byte_end":36208,"line_start":703,"line_end":703,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":36213,"byte_end":36228,"line_start":704,"line_end":704,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).saturating_sub(47.hours()),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":36233,"byte_end":36290,"line_start":705,"line_end":705,"column_start":5,"column_end":62}},{"value":"/     date!(2020 - 12 - 30)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":36295,"byte_end":36324,"line_start":706,"line_end":706,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":36329,"byte_end":36335,"line_start":707,"line_end":707,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":36340,"byte_end":36347,"line_start":708,"line_end":708,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":37304,"byte_end":37316,"line_start":734,"line_end":734,"column_start":18,"column_end":30},"name":"replace_year","qualname":"<Date>::replace_year","value":"const fn replace_year(Self, i32) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the year. The month and day will be unchanged.","sig":null,"attributes":[{"value":"/ Replace the year. The month and day will be unchanged.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":36738,"byte_end":36796,"line_start":722,"line_end":722,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":36801,"byte_end":36804,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":36809,"byte_end":36820,"line_start":724,"line_end":724,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":36825,"byte_end":36854,"line_start":725,"line_end":725,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":36859,"byte_end":36874,"line_start":726,"line_end":726,"column_start":5,"column_end":20}},{"value":"/     date!(2022 - 02 - 18).replace_year(2019),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":36879,"byte_end":36928,"line_start":727,"line_end":727,"column_start":5,"column_end":54}},{"value":"/     Ok(date!(2019 - 02 - 18))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":36933,"byte_end":36966,"line_start":728,"line_end":728,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":36971,"byte_end":36977,"line_start":729,"line_end":729,"column_start":5,"column_end":11}},{"value":"/ assert!(date!(2022 - 02 - 18).replace_year(-1_000_000_000).is_err()); // -1_000_000_000 isn't a valid year","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":36982,"byte_end":37092,"line_start":730,"line_end":730,"column_start":5,"column_end":115}},{"value":"/ assert!(date!(2022 - 02 - 18).replace_year(1_000_000_000).is_err()); // 1_000_000_000 isn't a valid year","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":37097,"byte_end":37205,"line_start":731,"line_end":731,"column_start":5,"column_end":113}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":37210,"byte_end":37217,"line_start":732,"line_end":732,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Date`.\"","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":37222,"byte_end":37286,"line_start":733,"line_end":733,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":39097,"byte_end":39110,"line_start":779,"line_end":779,"column_start":18,"column_end":31},"name":"replace_month","qualname":"<Date>::replace_month","value":"const fn replace_month(Self, Month) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the month of the year.","sig":null,"attributes":[{"value":"/ Replace the month of the year.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":38573,"byte_end":38607,"line_start":763,"line_end":763,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":38612,"byte_end":38615,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":38620,"byte_end":38631,"line_start":765,"line_end":765,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":38636,"byte_end":38665,"line_start":766,"line_end":766,"column_start":5,"column_end":34}},{"value":"/ # use time::Month;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":38670,"byte_end":38692,"line_start":767,"line_end":767,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":38697,"byte_end":38712,"line_start":768,"line_end":768,"column_start":5,"column_end":20}},{"value":"/     date!(2022 - 02 - 18).replace_month(Month::January),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":38717,"byte_end":38777,"line_start":769,"line_end":769,"column_start":5,"column_end":65}},{"value":"/     Ok(date!(2022 - 01 - 18))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":38782,"byte_end":38815,"line_start":770,"line_end":770,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":38820,"byte_end":38826,"line_start":771,"line_end":771,"column_start":5,"column_end":11}},{"value":"/ assert!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":38831,"byte_end":38843,"line_start":772,"line_end":772,"column_start":5,"column_end":17}},{"value":"/     date!(2022 - 01 - 30)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":38848,"byte_end":38877,"line_start":773,"line_end":773,"column_start":5,"column_end":34}},{"value":"/         .replace_month(Month::February)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":38882,"byte_end":38925,"line_start":774,"line_end":774,"column_start":5,"column_end":48}},{"value":"/         .is_err()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":38930,"byte_end":38951,"line_start":775,"line_end":775,"column_start":5,"column_end":26}},{"value":"/ ); // 30 isn't a valid day in February","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":38956,"byte_end":38998,"line_start":776,"line_end":776,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":39003,"byte_end":39010,"line_start":777,"line_end":777,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Date`.\"","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":39015,"byte_end":39079,"line_start":778,"line_end":778,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":39785,"byte_end":39796,"line_start":796,"line_end":796,"column_start":18,"column_end":29},"name":"replace_day","qualname":"<Date>::replace_day","value":"const fn replace_day(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the day of the month.","sig":null,"attributes":[{"value":"/ Replace the day of the month.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":39288,"byte_end":39321,"line_start":784,"line_end":784,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":39326,"byte_end":39329,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":39334,"byte_end":39345,"line_start":786,"line_end":786,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":39350,"byte_end":39379,"line_start":787,"line_end":787,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":39384,"byte_end":39399,"line_start":788,"line_end":788,"column_start":5,"column_end":20}},{"value":"/     date!(2022 - 02 - 18).replace_day(1),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":39404,"byte_end":39449,"line_start":789,"line_end":789,"column_start":5,"column_end":50}},{"value":"/     Ok(date!(2022 - 02 - 01))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":39454,"byte_end":39487,"line_start":790,"line_end":790,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":39492,"byte_end":39498,"line_start":791,"line_end":791,"column_start":5,"column_end":11}},{"value":"/ assert!(date!(2022 - 02 - 18).replace_day(0).is_err()); // 0 isn't a valid day","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":39503,"byte_end":39585,"line_start":792,"line_end":792,"column_start":5,"column_end":87}},{"value":"/ assert!(date!(2022 - 02 - 18).replace_day(30).is_err()); // 30 isn't a valid day in February","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":39590,"byte_end":39686,"line_start":793,"line_end":793,"column_start":5,"column_end":101}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":39691,"byte_end":39698,"line_start":794,"line_end":794,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Date`.\"","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":39703,"byte_end":39767,"line_start":795,"line_end":795,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":40720,"byte_end":40728,"line_start":822,"line_end":822,"column_start":18,"column_end":26},"name":"midnight","qualname":"<Date>::midnight","value":"const fn midnight(Self) -> PrimitiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Create a [`PrimitiveDateTime`] using the existing date. The [`Time`] component will be set\n to midnight.","sig":null,"attributes":[{"value":"/ Create a [`PrimitiveDateTime`] using the existing date. The [`Time`] component will be set","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":40427,"byte_end":40521,"line_start":815,"line_end":815,"column_start":5,"column_end":99}},{"value":"/ to midnight.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":40526,"byte_end":40542,"line_start":816,"line_end":816,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":40547,"byte_end":40550,"line_start":817,"line_end":817,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":40555,"byte_end":40566,"line_start":818,"line_end":818,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{date, datetime};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":40571,"byte_end":40612,"line_start":819,"line_end":819,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(date!(1970-01-01).midnight(), datetime!(1970-01-01 0:00));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":40617,"byte_end":40690,"line_start":820,"line_end":820,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":40695,"byte_end":40702,"line_start":821,"line_end":821,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":41138,"byte_end":41147,"line_start":835,"line_end":835,"column_start":18,"column_end":27},"name":"with_time","qualname":"<Date>::with_time","value":"const fn with_time(Self, Time) -> PrimitiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Create a [`PrimitiveDateTime`] using the existing date and the provided [`Time`].","sig":null,"attributes":[{"value":"/ Create a [`PrimitiveDateTime`] using the existing date and the provided [`Time`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":40822,"byte_end":40907,"line_start":826,"line_end":826,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":40912,"byte_end":40915,"line_start":827,"line_end":827,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":40920,"byte_end":40931,"line_start":828,"line_end":828,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{date, datetime, time};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":40936,"byte_end":40983,"line_start":829,"line_end":829,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":40988,"byte_end":41003,"line_start":830,"line_end":830,"column_start":5,"column_end":20}},{"value":"/     date!(1970-01-01).with_time(time!(0:00)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":41008,"byte_end":41057,"line_start":831,"line_end":831,"column_start":5,"column_end":54}},{"value":"/     datetime!(1970-01-01 0:00),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":41062,"byte_end":41097,"line_start":832,"line_end":832,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":41102,"byte_end":41108,"line_start":833,"line_end":833,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":41113,"byte_end":41120,"line_start":834,"line_end":834,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":41557,"byte_end":41565,"line_start":846,"line_end":846,"column_start":18,"column_end":26},"name":"with_hms","qualname":"<Date>::with_hms","value":"const fn with_hms(Self, u8, u8, u8)\n-> Result<PrimitiveDateTime, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","sig":null,"attributes":[{"value":"/ Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":41243,"byte_end":41335,"line_start":839,"line_end":839,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":41340,"byte_end":41343,"line_start":840,"line_end":840,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":41348,"byte_end":41359,"line_start":841,"line_end":841,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":41364,"byte_end":41393,"line_start":842,"line_end":842,"column_start":5,"column_end":34}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms(0, 0, 0).is_ok());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":41398,"byte_end":41459,"line_start":843,"line_end":843,"column_start":5,"column_end":66}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms(24, 0, 0).is_err());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":41464,"byte_end":41527,"line_start":844,"line_end":844,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":41532,"byte_end":41539,"line_start":845,"line_end":845,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":42168,"byte_end":42182,"line_start":865,"line_end":865,"column_start":18,"column_end":32},"name":"with_hms_milli","qualname":"<Date>::with_hms_milli","value":"const fn with_hms_milli(Self, u8, u8, u8, u16)\n-> Result<PrimitiveDateTime, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","sig":null,"attributes":[{"value":"/ Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":41836,"byte_end":41928,"line_start":858,"line_end":858,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":41933,"byte_end":41936,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":41941,"byte_end":41952,"line_start":860,"line_end":860,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":41957,"byte_end":41986,"line_start":861,"line_end":861,"column_start":5,"column_end":34}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms_milli(0, 0, 0, 0).is_ok());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":41991,"byte_end":42061,"line_start":862,"line_end":862,"column_start":5,"column_end":75}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms_milli(24, 0, 0, 0).is_err());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":42066,"byte_end":42138,"line_start":863,"line_end":863,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":42143,"byte_end":42150,"line_start":864,"line_end":864,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":42830,"byte_end":42844,"line_start":885,"line_end":885,"column_start":18,"column_end":32},"name":"with_hms_micro","qualname":"<Date>::with_hms_micro","value":"const fn with_hms_micro(Self, u8, u8, u8, u32)\n-> Result<PrimitiveDateTime, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","sig":null,"attributes":[{"value":"/ Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":42498,"byte_end":42590,"line_start":878,"line_end":878,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":42595,"byte_end":42598,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":42603,"byte_end":42614,"line_start":880,"line_end":880,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":42619,"byte_end":42648,"line_start":881,"line_end":881,"column_start":5,"column_end":34}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms_micro(0, 0, 0, 0).is_ok());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":42653,"byte_end":42723,"line_start":882,"line_end":882,"column_start":5,"column_end":75}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms_micro(24, 0, 0, 0).is_err());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":42728,"byte_end":42800,"line_start":883,"line_end":883,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":42805,"byte_end":42812,"line_start":884,"line_end":884,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":43490,"byte_end":43503,"line_start":905,"line_end":905,"column_start":18,"column_end":31},"name":"with_hms_nano","qualname":"<Date>::with_hms_nano","value":"const fn with_hms_nano(Self, u8, u8, u8, u32)\n-> Result<PrimitiveDateTime, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","sig":null,"attributes":[{"value":"/ Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":43160,"byte_end":43252,"line_start":898,"line_end":898,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":43257,"byte_end":43260,"line_start":899,"line_end":899,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":43265,"byte_end":43276,"line_start":900,"line_end":900,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::date;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":43281,"byte_end":43310,"line_start":901,"line_end":901,"column_start":5,"column_end":34}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms_nano(0, 0, 0, 0).is_ok());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":43315,"byte_end":43384,"line_start":902,"line_end":902,"column_start":5,"column_end":74}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms_nano(24, 0, 0, 0).is_err());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":43389,"byte_end":43460,"line_start":903,"line_end":903,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":43465,"byte_end":43472,"line_start":904,"line_end":904,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":44019,"byte_end":44030,"line_start":924,"line_end":924,"column_start":12,"column_end":23},"name":"format_into","qualname":"<Date>::format_into","value":"fn format_into<impl io::Write,\nimpl Formattable + ?Sized>(Self, &mut impl io::Write,\n&impl Formattable + ?Sized) -> Result<usize, error::Format> where\nimpl io::Write: io::Write, impl Formattable + ?Sized: Formattable + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Format the `Date` using the provided [format description](crate::format_description).\n","sig":null,"attributes":[{"value":"/ Format the `Date` using the provided [format description](crate::format_description).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":43918,"byte_end":44007,"line_start":923,"line_end":923,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":44614,"byte_end":44620,"line_start":940,"line_end":940,"column_start":12,"column_end":18},"name":"format","qualname":"<Date>::format","value":"fn format<impl Formattable + ?Sized>(Self, &impl Formattable + ?Sized)\n-> Result<String, error::Format> where\nimpl Formattable + ?Sized: Formattable + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Format the `Date` using the provided [format description](crate::format_description).","sig":null,"attributes":[{"value":"/ Format the `Date` using the provided [format description](crate::format_description).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":44239,"byte_end":44328,"line_start":932,"line_end":932,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":44333,"byte_end":44336,"line_start":933,"line_end":933,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":44341,"byte_end":44352,"line_start":934,"line_end":934,"column_start":5,"column_end":16}},{"value":"/ # use time::{format_description, macros::date};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":44357,"byte_end":44408,"line_start":935,"line_end":935,"column_start":5,"column_end":56}},{"value":"/ let format = format_description::parse(\"[year]-[month]-[day]\")?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":44413,"byte_end":44481,"line_start":936,"line_end":936,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(date!(2020 - 01 - 02).format(&format)?, \"2020-01-02\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":44486,"byte_end":44555,"line_start":937,"line_end":937,"column_start":5,"column_end":74}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":44560,"byte_end":44590,"line_start":938,"line_end":938,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":44595,"byte_end":44602,"line_start":939,"line_end":939,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":45206,"byte_end":45211,"line_start":956,"line_end":956,"column_start":12,"column_end":17},"name":"parse","qualname":"<Date>::parse","value":"fn parse<impl Parsable + ?Sized>(&str, &impl Parsable + ?Sized)\n-> Result<Self, error::Parse> where impl Parsable + ?Sized: Parsable + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Parse a `Date` from the input using the provided [format\n description](crate::format_description).","sig":null,"attributes":[{"value":"/ Parse a `Date` from the input using the provided [format","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":44799,"byte_end":44859,"line_start":947,"line_end":947,"column_start":5,"column_end":65}},{"value":"/ description](crate::format_description).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":44864,"byte_end":44908,"line_start":948,"line_end":948,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":44913,"byte_end":44916,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":44921,"byte_end":44932,"line_start":950,"line_end":950,"column_start":5,"column_end":16}},{"value":"/ # use time::{format_description, macros::date, Date};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":44937,"byte_end":44994,"line_start":951,"line_end":951,"column_start":5,"column_end":62}},{"value":"/ let format = format_description::parse(\"[year]-[month]-[day]\")?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":44999,"byte_end":45067,"line_start":952,"line_end":952,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(Date::parse(\"2020-01-02\", &format)?, date!(2020 - 01 - 02));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":45072,"byte_end":45147,"line_start":953,"line_end":953,"column_start":5,"column_end":80}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":45152,"byte_end":45182,"line_start":954,"line_end":954,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":45187,"byte_end":45194,"line_start":955,"line_end":955,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":45414,"byte_end":45417,"line_start":965,"line_end":965,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Date as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10117},"children":[],"decl_id":{"krate":2,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":46123,"byte_end":46126,"line_start":992,"line_end":992,"column_start":8,"column_end":11},"name":"add","qualname":"<Date as std::ops::Add>::add","value":"fn add(Self, Duration) -> Self::Output","parent":{"krate":2,"index":3247},"children":[],"decl_id":{"krate":2,"index":3250},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":46336,"byte_end":46339,"line_start":1001,"line_end":1001,"column_start":8,"column_end":11},"name":"add","qualname":"<Date as std::ops::Add>::add","value":"fn add(Self, StdDuration) -> Self::Output","parent":{"krate":2,"index":3247},"children":[],"decl_id":{"krate":2,"index":3250},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":46653,"byte_end":46656,"line_start":1012,"line_end":1012,"column_start":8,"column_end":11},"name":"sub","qualname":"<Date as std::ops::Sub>::sub","value":"fn sub(Self, Duration) -> Self::Output","parent":{"krate":2,"index":3252},"children":[],"decl_id":{"krate":2,"index":3255},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":46873,"byte_end":46876,"line_start":1021,"line_end":1021,"column_start":8,"column_end":11},"name":"sub","qualname":"<Date as std::ops::Sub>::sub","value":"fn sub(Self, StdDuration) -> Self::Output","parent":{"krate":2,"index":3252},"children":[],"decl_id":{"krate":2,"index":3255},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":47191,"byte_end":47194,"line_start":1032,"line_end":1032,"column_start":8,"column_end":11},"name":"sub","qualname":"<Date as std::ops::Sub>::sub","value":"fn sub(Self, Self) -> Self::Output","parent":{"krate":2,"index":3252},"children":[],"decl_id":{"krate":2,"index":3255},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2730},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":48363,"byte_end":48371,"line_start":35,"line_end":35,"column_start":12,"column_end":20},"name":"Duration","qualname":"::duration::Duration","value":"Duration {  }","parent":null,"children":[{"krate":0,"index":2731},{"krate":0,"index":2732},{"krate":0,"index":2733}],"decl_id":null,"docs":" A span of time with nanosecond precision.","sig":null,"attributes":[{"value":"/ A span of time with nanosecond precision.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":48025,"byte_end":48070,"line_start":28,"line_end":28,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":48071,"byte_end":48074,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Each `Duration` is composed of a whole number of seconds and a fractional part represented in","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":48075,"byte_end":48172,"line_start":30,"line_end":30,"column_start":1,"column_end":98}},{"value":"/ nanoseconds.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":48173,"byte_end":48189,"line_start":31,"line_end":31,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":48190,"byte_end":48193,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This implementation allows for negative durations, unlike [`core::time::Duration`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":48194,"byte_end":48281,"line_start":33,"line_end":33,"column_start":1,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":48693,"byte_end":48696,"line_start":45,"line_end":45,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Duration as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":190},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":49146,"byte_end":49150,"line_start":61,"line_end":61,"column_start":15,"column_end":19},"name":"ZERO","qualname":"::duration::Duration::ZERO","value":"Self","parent":{"krate":0,"index":189},"children":[],"decl_id":null,"docs":" Equivalent to `0.seconds()`.","sig":null,"attributes":[{"value":"/ Equivalent to `0.seconds()`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":48958,"byte_end":48990,"line_start":55,"line_end":55,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":48995,"byte_end":48998,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":49003,"byte_end":49014,"line_start":57,"line_end":57,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":49019,"byte_end":49070,"line_start":58,"line_end":58,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::ZERO, 0.seconds());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":49075,"byte_end":49119,"line_start":59,"line_end":59,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":49124,"byte_end":49131,"line_start":60,"line_end":60,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":191},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":49384,"byte_end":49394,"line_start":69,"line_end":69,"column_start":15,"column_end":25},"name":"NANOSECOND","qualname":"::duration::Duration::NANOSECOND","value":"Self","parent":{"krate":0,"index":189},"children":[],"decl_id":null,"docs":" Equivalent to `1.nanoseconds()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.nanoseconds()`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":49182,"byte_end":49218,"line_start":63,"line_end":63,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":49223,"byte_end":49226,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":49231,"byte_end":49242,"line_start":65,"line_end":65,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":49247,"byte_end":49298,"line_start":66,"line_end":66,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::NANOSECOND, 1.nanoseconds());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":49303,"byte_end":49357,"line_start":67,"line_end":67,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":49362,"byte_end":49369,"line_start":68,"line_end":68,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":192},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":49635,"byte_end":49646,"line_start":77,"line_end":77,"column_start":15,"column_end":26},"name":"MICROSECOND","qualname":"::duration::Duration::MICROSECOND","value":"Self","parent":{"krate":0,"index":189},"children":[],"decl_id":null,"docs":" Equivalent to `1.microseconds()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.microseconds()`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":49430,"byte_end":49467,"line_start":71,"line_end":71,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":49472,"byte_end":49475,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":49480,"byte_end":49491,"line_start":73,"line_end":73,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":49496,"byte_end":49547,"line_start":74,"line_end":74,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::MICROSECOND, 1.microseconds());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":49552,"byte_end":49608,"line_start":75,"line_end":75,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":49613,"byte_end":49620,"line_start":76,"line_end":76,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":193},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":49888,"byte_end":49899,"line_start":85,"line_end":85,"column_start":15,"column_end":26},"name":"MILLISECOND","qualname":"::duration::Duration::MILLISECOND","value":"Self","parent":{"krate":0,"index":189},"children":[],"decl_id":null,"docs":" Equivalent to `1.milliseconds()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.milliseconds()`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":49683,"byte_end":49720,"line_start":79,"line_end":79,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":49725,"byte_end":49728,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":49733,"byte_end":49744,"line_start":81,"line_end":81,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":49749,"byte_end":49800,"line_start":82,"line_end":82,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::MILLISECOND, 1.milliseconds());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":49805,"byte_end":49861,"line_start":83,"line_end":83,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":49866,"byte_end":49873,"line_start":84,"line_end":84,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":194},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":50126,"byte_end":50132,"line_start":93,"line_end":93,"column_start":15,"column_end":21},"name":"SECOND","qualname":"::duration::Duration::SECOND","value":"Self","parent":{"krate":0,"index":189},"children":[],"decl_id":null,"docs":" Equivalent to `1.seconds()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.seconds()`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":49936,"byte_end":49968,"line_start":87,"line_end":87,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":49973,"byte_end":49976,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":49981,"byte_end":49992,"line_start":89,"line_end":89,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":49997,"byte_end":50048,"line_start":90,"line_end":90,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::SECOND, 1.seconds());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":50053,"byte_end":50099,"line_start":91,"line_end":91,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":50104,"byte_end":50111,"line_start":92,"line_end":92,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":195},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":50354,"byte_end":50360,"line_start":101,"line_end":101,"column_start":15,"column_end":21},"name":"MINUTE","qualname":"::duration::Duration::MINUTE","value":"Self","parent":{"krate":0,"index":189},"children":[],"decl_id":null,"docs":" Equivalent to `1.minutes()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.minutes()`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":50164,"byte_end":50196,"line_start":95,"line_end":95,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":50201,"byte_end":50204,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":50209,"byte_end":50220,"line_start":97,"line_end":97,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":50225,"byte_end":50276,"line_start":98,"line_end":98,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::MINUTE, 1.minutes());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":50281,"byte_end":50327,"line_start":99,"line_end":99,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":50332,"byte_end":50339,"line_start":100,"line_end":100,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":196},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":50576,"byte_end":50580,"line_start":109,"line_end":109,"column_start":15,"column_end":19},"name":"HOUR","qualname":"::duration::Duration::HOUR","value":"Self","parent":{"krate":0,"index":189},"children":[],"decl_id":null,"docs":" Equivalent to `1.hours()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.hours()`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":50392,"byte_end":50422,"line_start":103,"line_end":103,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":50427,"byte_end":50430,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":50435,"byte_end":50446,"line_start":105,"line_end":105,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":50451,"byte_end":50502,"line_start":106,"line_end":106,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::HOUR, 1.hours());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":50507,"byte_end":50549,"line_start":107,"line_end":107,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":50554,"byte_end":50561,"line_start":108,"line_end":108,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":197},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":50791,"byte_end":50794,"line_start":117,"line_end":117,"column_start":15,"column_end":18},"name":"DAY","qualname":"::duration::Duration::DAY","value":"Self","parent":{"krate":0,"index":189},"children":[],"decl_id":null,"docs":" Equivalent to `1.days()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.days()`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":50610,"byte_end":50639,"line_start":111,"line_end":111,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":50644,"byte_end":50647,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":50652,"byte_end":50663,"line_start":113,"line_end":113,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":50668,"byte_end":50719,"line_start":114,"line_end":114,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::DAY, 1.days());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":50724,"byte_end":50764,"line_start":115,"line_end":115,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":50769,"byte_end":50776,"line_start":116,"line_end":116,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":198},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":51007,"byte_end":51011,"line_start":125,"line_end":125,"column_start":15,"column_end":19},"name":"WEEK","qualname":"::duration::Duration::WEEK","value":"Self","parent":{"krate":0,"index":189},"children":[],"decl_id":null,"docs":" Equivalent to `1.weeks()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.weeks()`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":50823,"byte_end":50853,"line_start":119,"line_end":119,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":50858,"byte_end":50861,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":50866,"byte_end":50877,"line_start":121,"line_end":121,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":50882,"byte_end":50933,"line_start":122,"line_end":122,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::WEEK, 1.weeks());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":50938,"byte_end":50980,"line_start":123,"line_end":123,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":50985,"byte_end":50992,"line_start":124,"line_end":124,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":199},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":51151,"byte_end":51154,"line_start":128,"line_end":128,"column_start":15,"column_end":18},"name":"MIN","qualname":"::duration::Duration::MIN","value":"Self","parent":{"krate":0,"index":189},"children":[],"decl_id":null,"docs":" The minimum possible duration. Adding any negative duration to this will cause an overflow.\n","sig":null,"attributes":[{"value":"/ The minimum possible duration. Adding any negative duration to this will cause an overflow.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":51041,"byte_end":51136,"line_start":127,"line_end":127,"column_start":5,"column_end":100}}]},{"kind":"Const","id":{"krate":0,"index":200},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":51323,"byte_end":51326,"line_start":131,"line_end":131,"column_start":15,"column_end":18},"name":"MAX","qualname":"::duration::Duration::MAX","value":"Self","parent":{"krate":0,"index":189},"children":[],"decl_id":null,"docs":" The maximum possible duration. Adding any positive duration to this will cause an overflow.\n","sig":null,"attributes":[{"value":"/ The maximum possible duration. Adding any positive duration to this will cause an overflow.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":51213,"byte_end":51308,"line_start":130,"line_end":130,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":51659,"byte_end":51666,"line_start":142,"line_end":142,"column_start":18,"column_end":25},"name":"is_zero","qualname":"<Duration>::is_zero","value":"const fn is_zero(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a duration is exactly zero.","sig":null,"attributes":[{"value":"/ Check if a duration is exactly zero.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":51436,"byte_end":51476,"line_start":135,"line_end":135,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":51481,"byte_end":51484,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":51489,"byte_end":51500,"line_start":137,"line_end":137,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":51505,"byte_end":51544,"line_start":138,"line_end":138,"column_start":5,"column_end":44}},{"value":"/ assert!(0.seconds().is_zero());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":51549,"byte_end":51584,"line_start":139,"line_end":139,"column_start":5,"column_end":40}},{"value":"/ assert!(!1.nanoseconds().is_zero());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":51589,"byte_end":51629,"line_start":140,"line_end":140,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":51634,"byte_end":51641,"line_start":141,"line_end":141,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":52016,"byte_end":52027,"line_start":154,"line_end":154,"column_start":18,"column_end":29},"name":"is_negative","qualname":"<Duration>::is_negative","value":"const fn is_negative(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a duration is negative.","sig":null,"attributes":[{"value":"/ Check if a duration is negative.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":51745,"byte_end":51781,"line_start":146,"line_end":146,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":51786,"byte_end":51789,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":51794,"byte_end":51805,"line_start":148,"line_end":148,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":51810,"byte_end":51849,"line_start":149,"line_end":149,"column_start":5,"column_end":44}},{"value":"/ assert!((-1).seconds().is_negative());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":51854,"byte_end":51896,"line_start":150,"line_end":150,"column_start":5,"column_end":47}},{"value":"/ assert!(!0.seconds().is_negative());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":51901,"byte_end":51941,"line_start":151,"line_end":151,"column_start":5,"column_end":45}},{"value":"/ assert!(!1.seconds().is_negative());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":51946,"byte_end":51986,"line_start":152,"line_end":152,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":51991,"byte_end":51998,"line_start":153,"line_end":153,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":52375,"byte_end":52386,"line_start":166,"line_end":166,"column_start":18,"column_end":29},"name":"is_positive","qualname":"<Duration>::is_positive","value":"const fn is_positive(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a duration is positive.","sig":null,"attributes":[{"value":"/ Check if a duration is positive.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":52104,"byte_end":52140,"line_start":158,"line_end":158,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":52145,"byte_end":52148,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":52153,"byte_end":52164,"line_start":160,"line_end":160,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":52169,"byte_end":52208,"line_start":161,"line_end":161,"column_start":5,"column_end":44}},{"value":"/ assert!(1.seconds().is_positive());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":52213,"byte_end":52252,"line_start":162,"line_end":162,"column_start":5,"column_end":44}},{"value":"/ assert!(!0.seconds().is_positive());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":52257,"byte_end":52297,"line_start":163,"line_end":163,"column_start":5,"column_end":45}},{"value":"/ assert!(!(-1).seconds().is_positive());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":52302,"byte_end":52345,"line_start":164,"line_end":164,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":52350,"byte_end":52357,"line_start":165,"line_end":165,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":52898,"byte_end":52901,"line_start":182,"line_end":182,"column_start":18,"column_end":21},"name":"abs","qualname":"<Duration>::abs","value":"const fn abs(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the absolute value of the duration.","sig":null,"attributes":[{"value":"/ Get the absolute value of the duration.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":52509,"byte_end":52552,"line_start":172,"line_end":172,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":52557,"byte_end":52560,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ This method saturates the returned value if it would otherwise overflow.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":52565,"byte_end":52641,"line_start":174,"line_end":174,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":52646,"byte_end":52649,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":52654,"byte_end":52665,"line_start":176,"line_end":176,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":52670,"byte_end":52709,"line_start":177,"line_end":177,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.seconds().abs(), 1.seconds());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":52714,"byte_end":52761,"line_start":178,"line_end":178,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(0.seconds().abs(), 0.seconds());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":52766,"byte_end":52813,"line_start":179,"line_end":179,"column_start":5,"column_end":52}},{"value":"/ assert_eq!((-1).seconds().abs(), 1.seconds());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":52818,"byte_end":52868,"line_start":180,"line_end":180,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":52873,"byte_end":52880,"line_start":181,"line_end":181,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":53524,"byte_end":53536,"line_start":195,"line_end":195,"column_start":18,"column_end":30},"name":"unsigned_abs","qualname":"<Duration>::unsigned_abs","value":"const fn unsigned_abs(Self) -> StdDuration","parent":null,"children":[],"decl_id":null,"docs":" Convert the existing `Duration` to a `std::time::Duration` and its sign. This returns a\n [`std::time::Duration`] and does not saturate the returned value (unlike [`Duration::abs`]).","sig":null,"attributes":[{"value":"/ Convert the existing `Duration` to a `std::time::Duration` and its sign. This returns a","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":53012,"byte_end":53103,"line_start":186,"line_end":186,"column_start":5,"column_end":96}},{"value":"/ [`std::time::Duration`] and does not saturate the returned value (unlike [`Duration::abs`]).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":53108,"byte_end":53204,"line_start":187,"line_end":187,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":53209,"byte_end":53212,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":53217,"byte_end":53228,"line_start":189,"line_end":189,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::{NumericalDuration, NumericalStdDuration};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":53233,"byte_end":53296,"line_start":190,"line_end":190,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(1.seconds().unsigned_abs(), 1.std_seconds());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":53301,"byte_end":53361,"line_start":191,"line_end":191,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(0.seconds().unsigned_abs(), 0.std_seconds());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":53366,"byte_end":53426,"line_start":192,"line_end":192,"column_start":5,"column_end":65}},{"value":"/ assert_eq!((-1).seconds().unsigned_abs(), 1.std_seconds());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":53431,"byte_end":53494,"line_start":193,"line_end":193,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":53499,"byte_end":53506,"line_start":194,"line_end":194,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":54795,"byte_end":54798,"line_start":229,"line_end":229,"column_start":18,"column_end":21},"name":"new","qualname":"<Duration>::new","value":"const fn new(i64, i32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the provided seconds and nanoseconds. If nanoseconds is at\n least ±10<sup>9</sup>, it will wrap to the number of seconds.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the provided seconds and nanoseconds. If nanoseconds is at","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":54345,"byte_end":54436,"line_start":220,"line_end":220,"column_start":5,"column_end":96}},{"value":"/ least ±10<sup>9</sup>, it will wrap to the number of seconds.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":54441,"byte_end":54507,"line_start":221,"line_end":221,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":54512,"byte_end":54515,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":54520,"byte_end":54531,"line_start":223,"line_end":223,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":54536,"byte_end":54587,"line_start":224,"line_end":224,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::new(1, 0), 1.seconds());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":54592,"byte_end":54641,"line_start":225,"line_end":225,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(Duration::new(-1, 0), (-1).seconds());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":54646,"byte_end":54699,"line_start":226,"line_end":226,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(Duration::new(1, 2_000_000_000), 3.seconds());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":54704,"byte_end":54765,"line_start":227,"line_end":227,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":54770,"byte_end":54777,"line_start":228,"line_end":228,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":55534,"byte_end":55539,"line_start":251,"line_end":251,"column_start":18,"column_end":23},"name":"weeks","qualname":"<Duration>::weeks","value":"const fn weeks(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of weeks. Equivalent to\n `Duration::seconds(weeks * 604_800)`.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of weeks. Equivalent to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":55246,"byte_end":55319,"line_start":244,"line_end":244,"column_start":5,"column_end":78}},{"value":"/ `Duration::seconds(weeks * 604_800)`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":55324,"byte_end":55365,"line_start":245,"line_end":245,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":55370,"byte_end":55373,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":55378,"byte_end":55389,"line_start":247,"line_end":247,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":55394,"byte_end":55445,"line_start":248,"line_end":248,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::weeks(1), 604_800.seconds());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":55450,"byte_end":55504,"line_start":249,"line_end":249,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":55509,"byte_end":55516,"line_start":250,"line_end":250,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":55895,"byte_end":55899,"line_start":262,"line_end":262,"column_start":18,"column_end":22},"name":"days","qualname":"<Duration>::days","value":"const fn days(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of days. Equivalent to\n `Duration::seconds(days * 86_400)`.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of days. Equivalent to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":55612,"byte_end":55684,"line_start":255,"line_end":255,"column_start":5,"column_end":77}},{"value":"/ `Duration::seconds(days * 86_400)`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":55689,"byte_end":55728,"line_start":256,"line_end":256,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":55733,"byte_end":55736,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":55741,"byte_end":55752,"line_start":258,"line_end":258,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":55757,"byte_end":55808,"line_start":259,"line_end":259,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::days(1), 86_400.seconds());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":55813,"byte_end":55865,"line_start":260,"line_end":260,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":55870,"byte_end":55877,"line_start":261,"line_end":261,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":56253,"byte_end":56258,"line_start":273,"line_end":273,"column_start":18,"column_end":23},"name":"hours","qualname":"<Duration>::hours","value":"const fn hours(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of hours. Equivalent to\n `Duration::seconds(hours * 3_600)`.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of hours. Equivalent to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":55969,"byte_end":56042,"line_start":266,"line_end":266,"column_start":5,"column_end":78}},{"value":"/ `Duration::seconds(hours * 3_600)`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":56047,"byte_end":56086,"line_start":267,"line_end":267,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":56091,"byte_end":56094,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":56099,"byte_end":56110,"line_start":269,"line_end":269,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":56115,"byte_end":56166,"line_start":270,"line_end":270,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::hours(1), 3_600.seconds());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":56171,"byte_end":56223,"line_start":271,"line_end":271,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":56228,"byte_end":56235,"line_start":272,"line_end":272,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":56613,"byte_end":56620,"line_start":284,"line_end":284,"column_start":18,"column_end":25},"name":"minutes","qualname":"<Duration>::minutes","value":"const fn minutes(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of minutes. Equivalent to\n `Duration::seconds(minutes * 60)`.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of minutes. Equivalent to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":56329,"byte_end":56404,"line_start":277,"line_end":277,"column_start":5,"column_end":80}},{"value":"/ `Duration::seconds(minutes * 60)`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":56409,"byte_end":56447,"line_start":278,"line_end":278,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":56452,"byte_end":56455,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":56460,"byte_end":56471,"line_start":280,"line_end":280,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":56476,"byte_end":56527,"line_start":281,"line_end":281,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::minutes(1), 60.seconds());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":56532,"byte_end":56583,"line_start":282,"line_end":282,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":56588,"byte_end":56595,"line_start":283,"line_end":283,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":56927,"byte_end":56934,"line_start":294,"line_end":294,"column_start":18,"column_end":25},"name":"seconds","qualname":"<Duration>::seconds","value":"const fn seconds(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of seconds.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of seconds.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":56692,"byte_end":56753,"line_start":288,"line_end":288,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":56758,"byte_end":56761,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":56766,"byte_end":56777,"line_start":290,"line_end":290,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":56782,"byte_end":56833,"line_start":291,"line_end":291,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::seconds(1), 1_000.milliseconds());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":56838,"byte_end":56897,"line_start":292,"line_end":292,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":56902,"byte_end":56909,"line_start":293,"line_end":293,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":57329,"byte_end":57340,"line_start":305,"line_end":305,"column_start":12,"column_end":23},"name":"seconds_f64","qualname":"<Duration>::seconds_f64","value":"fn seconds_f64(f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Duration` from the specified number of seconds represented as `f64`.","sig":null,"attributes":[{"value":"/ Creates a new `Duration` from the specified number of seconds represented as `f64`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":57010,"byte_end":57097,"line_start":298,"line_end":298,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":57102,"byte_end":57105,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":57110,"byte_end":57121,"line_start":300,"line_end":300,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":57126,"byte_end":57177,"line_start":301,"line_end":301,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::seconds_f64(0.5), 0.5.seconds());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":57182,"byte_end":57240,"line_start":302,"line_end":302,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(Duration::seconds_f64(-0.5), -0.5.seconds());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":57245,"byte_end":57305,"line_start":303,"line_end":303,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":57310,"byte_end":57317,"line_start":304,"line_end":304,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":57779,"byte_end":57790,"line_start":316,"line_end":316,"column_start":12,"column_end":23},"name":"seconds_f32","qualname":"<Duration>::seconds_f32","value":"fn seconds_f32(f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Duration` from the specified number of seconds represented as `f32`.","sig":null,"attributes":[{"value":"/ Creates a new `Duration` from the specified number of seconds represented as `f32`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":57458,"byte_end":57545,"line_start":309,"line_end":309,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":57550,"byte_end":57553,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":57558,"byte_end":57569,"line_start":311,"line_end":311,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":57574,"byte_end":57625,"line_start":312,"line_end":312,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::seconds_f32(0.5), 0.5.seconds());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":57630,"byte_end":57688,"line_start":313,"line_end":313,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(Duration::seconds_f32(-0.5), (-0.5).seconds());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":57693,"byte_end":57755,"line_start":314,"line_end":314,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":57760,"byte_end":57767,"line_start":315,"line_end":315,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":58226,"byte_end":58238,"line_start":327,"line_end":327,"column_start":18,"column_end":30},"name":"milliseconds","qualname":"<Duration>::milliseconds","value":"const fn milliseconds(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of milliseconds.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of milliseconds.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":57908,"byte_end":57974,"line_start":320,"line_end":320,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":57979,"byte_end":57982,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":57987,"byte_end":57998,"line_start":322,"line_end":322,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":58003,"byte_end":58054,"line_start":323,"line_end":323,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::milliseconds(1), 1_000.microseconds());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":58059,"byte_end":58123,"line_start":324,"line_end":324,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(Duration::milliseconds(-1), (-1_000).microseconds());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":58128,"byte_end":58196,"line_start":325,"line_end":325,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":58201,"byte_end":58208,"line_start":326,"line_end":326,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":58723,"byte_end":58735,"line_start":341,"line_end":341,"column_start":18,"column_end":30},"name":"microseconds","qualname":"<Duration>::microseconds","value":"const fn microseconds(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of microseconds.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of microseconds.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":58407,"byte_end":58473,"line_start":334,"line_end":334,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":58478,"byte_end":58481,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":58486,"byte_end":58497,"line_start":336,"line_end":336,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":58502,"byte_end":58553,"line_start":337,"line_end":337,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::microseconds(1), 1_000.nanoseconds());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":58558,"byte_end":58621,"line_start":338,"line_end":338,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(Duration::microseconds(-1), (-1_000).nanoseconds());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":58626,"byte_end":58693,"line_start":339,"line_end":339,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":58698,"byte_end":58705,"line_start":340,"line_end":340,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":59231,"byte_end":59242,"line_start":355,"line_end":355,"column_start":18,"column_end":29},"name":"nanoseconds","qualname":"<Duration>::nanoseconds","value":"const fn nanoseconds(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of nanoseconds.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of nanoseconds.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":58908,"byte_end":58973,"line_start":348,"line_end":348,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":58978,"byte_end":58981,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":58986,"byte_end":58997,"line_start":350,"line_end":350,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":59002,"byte_end":59053,"line_start":351,"line_end":351,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::nanoseconds(1), 1.microseconds() / 1_000);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":59058,"byte_end":59125,"line_start":352,"line_end":352,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(Duration::nanoseconds(-1), (-1).microseconds() / 1_000);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":59130,"byte_end":59201,"line_start":353,"line_end":353,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":59206,"byte_end":59213,"line_start":354,"line_end":354,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":60241,"byte_end":60252,"line_start":384,"line_end":384,"column_start":18,"column_end":29},"name":"whole_weeks","qualname":"<Duration>::whole_weeks","value":"const fn whole_weeks(Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Get the number of whole weeks in the duration.","sig":null,"attributes":[{"value":"/ Get the number of whole weeks in the duration.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":59896,"byte_end":59946,"line_start":375,"line_end":375,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":59951,"byte_end":59954,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":59959,"byte_end":59970,"line_start":377,"line_end":377,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":59975,"byte_end":60014,"line_start":378,"line_end":378,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.weeks().whole_weeks(), 1);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":60019,"byte_end":60062,"line_start":379,"line_end":379,"column_start":5,"column_end":48}},{"value":"/ assert_eq!((-1).weeks().whole_weeks(), -1);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":60067,"byte_end":60114,"line_start":380,"line_end":380,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(6.days().whole_weeks(), 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":60119,"byte_end":60161,"line_start":381,"line_end":381,"column_start":5,"column_end":47}},{"value":"/ assert_eq!((-6).days().whole_weeks(), 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":60166,"byte_end":60211,"line_start":382,"line_end":382,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":60216,"byte_end":60223,"line_start":383,"line_end":383,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":60660,"byte_end":60670,"line_start":397,"line_end":397,"column_start":18,"column_end":28},"name":"whole_days","qualname":"<Duration>::whole_days","value":"const fn whole_days(Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Get the number of whole days in the duration.","sig":null,"attributes":[{"value":"/ Get the number of whole days in the duration.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":60318,"byte_end":60367,"line_start":388,"line_end":388,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":60372,"byte_end":60375,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":60380,"byte_end":60391,"line_start":390,"line_end":390,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":60396,"byte_end":60435,"line_start":391,"line_end":391,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.days().whole_days(), 1);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":60440,"byte_end":60481,"line_start":392,"line_end":392,"column_start":5,"column_end":46}},{"value":"/ assert_eq!((-1).days().whole_days(), -1);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":60486,"byte_end":60531,"line_start":393,"line_end":393,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(23.hours().whole_days(), 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":60536,"byte_end":60579,"line_start":394,"line_end":394,"column_start":5,"column_end":48}},{"value":"/ assert_eq!((-23).hours().whole_days(), 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":60584,"byte_end":60630,"line_start":395,"line_end":395,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":60635,"byte_end":60642,"line_start":396,"line_end":396,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":61088,"byte_end":61099,"line_start":410,"line_end":410,"column_start":18,"column_end":29},"name":"whole_hours","qualname":"<Duration>::whole_hours","value":"const fn whole_hours(Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Get the number of whole hours in the duration.","sig":null,"attributes":[{"value":"/ Get the number of whole hours in the duration.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":60735,"byte_end":60785,"line_start":401,"line_end":401,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":60790,"byte_end":60793,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":60798,"byte_end":60809,"line_start":403,"line_end":403,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":60814,"byte_end":60853,"line_start":404,"line_end":404,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.hours().whole_hours(), 1);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":60858,"byte_end":60901,"line_start":405,"line_end":405,"column_start":5,"column_end":48}},{"value":"/ assert_eq!((-1).hours().whole_hours(), -1);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":60906,"byte_end":60953,"line_start":406,"line_end":406,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(59.minutes().whole_hours(), 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":60958,"byte_end":61004,"line_start":407,"line_end":407,"column_start":5,"column_end":51}},{"value":"/ assert_eq!((-59).minutes().whole_hours(), 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":61009,"byte_end":61058,"line_start":408,"line_end":408,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":61063,"byte_end":61070,"line_start":409,"line_end":409,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":61530,"byte_end":61543,"line_start":423,"line_end":423,"column_start":18,"column_end":31},"name":"whole_minutes","qualname":"<Duration>::whole_minutes","value":"const fn whole_minutes(Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Get the number of whole minutes in the duration.","sig":null,"attributes":[{"value":"/ Get the number of whole minutes in the duration.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":61163,"byte_end":61215,"line_start":414,"line_end":414,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":61220,"byte_end":61223,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":61228,"byte_end":61239,"line_start":416,"line_end":416,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":61244,"byte_end":61283,"line_start":417,"line_end":417,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.minutes().whole_minutes(), 1);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":61288,"byte_end":61335,"line_start":418,"line_end":418,"column_start":5,"column_end":52}},{"value":"/ assert_eq!((-1).minutes().whole_minutes(), -1);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":61340,"byte_end":61391,"line_start":419,"line_end":419,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(59.seconds().whole_minutes(), 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":61396,"byte_end":61444,"line_start":420,"line_end":420,"column_start":5,"column_end":53}},{"value":"/ assert_eq!((-59).seconds().whole_minutes(), 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":61449,"byte_end":61500,"line_start":421,"line_end":421,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":61505,"byte_end":61512,"line_start":422,"line_end":422,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":61972,"byte_end":61985,"line_start":436,"line_end":436,"column_start":18,"column_end":31},"name":"whole_seconds","qualname":"<Duration>::whole_seconds","value":"const fn whole_seconds(Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Get the number of whole seconds in the duration.","sig":null,"attributes":[{"value":"/ Get the number of whole seconds in the duration.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":61604,"byte_end":61656,"line_start":427,"line_end":427,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":61661,"byte_end":61664,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":61669,"byte_end":61680,"line_start":429,"line_end":429,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":61685,"byte_end":61724,"line_start":430,"line_end":430,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.seconds().whole_seconds(), 1);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":61729,"byte_end":61776,"line_start":431,"line_end":431,"column_start":5,"column_end":52}},{"value":"/ assert_eq!((-1).seconds().whole_seconds(), -1);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":61781,"byte_end":61832,"line_start":432,"line_end":432,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(1.minutes().whole_seconds(), 60);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":61837,"byte_end":61885,"line_start":433,"line_end":433,"column_start":5,"column_end":53}},{"value":"/ assert_eq!((-1).minutes().whole_seconds(), -60);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":61890,"byte_end":61942,"line_start":434,"line_end":434,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":61947,"byte_end":61954,"line_start":435,"line_end":435,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":62300,"byte_end":62314,"line_start":447,"line_end":447,"column_start":12,"column_end":26},"name":"as_seconds_f64","qualname":"<Duration>::as_seconds_f64","value":"fn as_seconds_f64(Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Get the number of fractional seconds in the duration.","sig":null,"attributes":[{"value":"/ Get the number of fractional seconds in the duration.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":62033,"byte_end":62090,"line_start":440,"line_end":440,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":62095,"byte_end":62098,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":62103,"byte_end":62114,"line_start":442,"line_end":442,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":62119,"byte_end":62158,"line_start":443,"line_end":443,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.5.seconds().as_seconds_f64(), 1.5);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":62163,"byte_end":62215,"line_start":444,"line_end":444,"column_start":5,"column_end":57}},{"value":"/ assert_eq!((-1.5).seconds().as_seconds_f64(), -1.5);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":62220,"byte_end":62276,"line_start":445,"line_end":445,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":62281,"byte_end":62288,"line_start":446,"line_end":446,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":62679,"byte_end":62693,"line_start":458,"line_end":458,"column_start":12,"column_end":26},"name":"as_seconds_f32","qualname":"<Duration>::as_seconds_f32","value":"fn as_seconds_f32(Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Get the number of fractional seconds in the duration.","sig":null,"attributes":[{"value":"/ Get the number of fractional seconds in the duration.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":62412,"byte_end":62469,"line_start":451,"line_end":451,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":62474,"byte_end":62477,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":62482,"byte_end":62493,"line_start":453,"line_end":453,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":62498,"byte_end":62537,"line_start":454,"line_end":454,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.5.seconds().as_seconds_f32(), 1.5);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":62542,"byte_end":62594,"line_start":455,"line_end":455,"column_start":5,"column_end":57}},{"value":"/ assert_eq!((-1.5).seconds().as_seconds_f32(), -1.5);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":62599,"byte_end":62655,"line_start":456,"line_end":456,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":62660,"byte_end":62667,"line_start":457,"line_end":457,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":63200,"byte_end":63218,"line_start":471,"line_end":471,"column_start":18,"column_end":36},"name":"whole_milliseconds","qualname":"<Duration>::whole_milliseconds","value":"const fn whole_milliseconds(Self) -> i128","parent":null,"children":[],"decl_id":null,"docs":" Get the number of whole milliseconds in the duration.","sig":null,"attributes":[{"value":"/ Get the number of whole milliseconds in the duration.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":62791,"byte_end":62848,"line_start":462,"line_end":462,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":62853,"byte_end":62856,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":62861,"byte_end":62872,"line_start":464,"line_end":464,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":62877,"byte_end":62916,"line_start":465,"line_end":465,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.seconds().whole_milliseconds(), 1_000);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":62921,"byte_end":62977,"line_start":466,"line_end":466,"column_start":5,"column_end":61}},{"value":"/ assert_eq!((-1).seconds().whole_milliseconds(), -1_000);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":62982,"byte_end":63042,"line_start":467,"line_end":467,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(1.milliseconds().whole_milliseconds(), 1);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":63047,"byte_end":63104,"line_start":468,"line_end":468,"column_start":5,"column_end":62}},{"value":"/ assert_eq!((-1).milliseconds().whole_milliseconds(), -1);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":63109,"byte_end":63170,"line_start":469,"line_end":469,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":63175,"byte_end":63182,"line_start":470,"line_end":470,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":63741,"byte_end":63760,"line_start":485,"line_end":485,"column_start":18,"column_end":37},"name":"subsec_milliseconds","qualname":"<Duration>::subsec_milliseconds","value":"const fn subsec_milliseconds(Self) -> i16","parent":null,"children":[],"decl_id":null,"docs":" Get the number of milliseconds past the number of whole seconds.","sig":null,"attributes":[{"value":"/ Get the number of milliseconds past the number of whole seconds.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":63322,"byte_end":63390,"line_start":475,"line_end":475,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":63395,"byte_end":63398,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ Always in the range `-1_000..1_000`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":63403,"byte_end":63443,"line_start":477,"line_end":477,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":63448,"byte_end":63451,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":63456,"byte_end":63467,"line_start":479,"line_end":479,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":63472,"byte_end":63511,"line_start":480,"line_end":480,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.4.seconds().subsec_milliseconds(), 400);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":63516,"byte_end":63573,"line_start":481,"line_end":481,"column_start":5,"column_end":62}},{"value":"/ assert_eq!((-1.4).seconds().subsec_milliseconds(), -400);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":63578,"byte_end":63639,"line_start":482,"line_end":482,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":63644,"byte_end":63651,"line_start":483,"line_end":483,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":64250,"byte_end":64268,"line_start":498,"line_end":498,"column_start":18,"column_end":36},"name":"whole_microseconds","qualname":"<Duration>::whole_microseconds","value":"const fn whole_microseconds(Self) -> i128","parent":null,"children":[],"decl_id":null,"docs":" Get the number of whole microseconds in the duration.","sig":null,"attributes":[{"value":"/ Get the number of whole microseconds in the duration.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":63831,"byte_end":63888,"line_start":489,"line_end":489,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":63893,"byte_end":63896,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":63901,"byte_end":63912,"line_start":491,"line_end":491,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":63917,"byte_end":63956,"line_start":492,"line_end":492,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.milliseconds().whole_microseconds(), 1_000);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":63961,"byte_end":64022,"line_start":493,"line_end":493,"column_start":5,"column_end":66}},{"value":"/ assert_eq!((-1).milliseconds().whole_microseconds(), -1_000);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":64027,"byte_end":64092,"line_start":494,"line_end":494,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(1.microseconds().whole_microseconds(), 1);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":64097,"byte_end":64154,"line_start":495,"line_end":495,"column_start":5,"column_end":62}},{"value":"/ assert_eq!((-1).microseconds().whole_microseconds(), -1);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":64159,"byte_end":64220,"line_start":496,"line_end":496,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":64225,"byte_end":64232,"line_start":497,"line_end":497,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":64733,"byte_end":64752,"line_start":511,"line_end":511,"column_start":18,"column_end":37},"name":"subsec_microseconds","qualname":"<Duration>::subsec_microseconds","value":"const fn subsec_microseconds(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the number of microseconds past the number of whole seconds.","sig":null,"attributes":[{"value":"/ Get the number of microseconds past the number of whole seconds.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":64372,"byte_end":64440,"line_start":502,"line_end":502,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":64445,"byte_end":64448,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ Always in the range `-1_000_000..1_000_000`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":64453,"byte_end":64501,"line_start":504,"line_end":504,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":64506,"byte_end":64509,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":64514,"byte_end":64525,"line_start":506,"line_end":506,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":64530,"byte_end":64569,"line_start":507,"line_end":507,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.0004.seconds().subsec_microseconds(), 400);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":64574,"byte_end":64634,"line_start":508,"line_end":508,"column_start":5,"column_end":65}},{"value":"/ assert_eq!((-1.0004).seconds().subsec_microseconds(), -400);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":64639,"byte_end":64703,"line_start":509,"line_end":509,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":64708,"byte_end":64715,"line_start":510,"line_end":510,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":65218,"byte_end":65235,"line_start":524,"line_end":524,"column_start":18,"column_end":35},"name":"whole_nanoseconds","qualname":"<Duration>::whole_nanoseconds","value":"const fn whole_nanoseconds(Self) -> i128","parent":null,"children":[],"decl_id":null,"docs":" Get the number of nanoseconds in the duration.","sig":null,"attributes":[{"value":"/ Get the number of nanoseconds in the duration.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":64812,"byte_end":64862,"line_start":515,"line_end":515,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":64867,"byte_end":64870,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":64875,"byte_end":64886,"line_start":517,"line_end":517,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":64891,"byte_end":64930,"line_start":518,"line_end":518,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.microseconds().whole_nanoseconds(), 1_000);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":64935,"byte_end":64995,"line_start":519,"line_end":519,"column_start":5,"column_end":65}},{"value":"/ assert_eq!((-1).microseconds().whole_nanoseconds(), -1_000);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":65000,"byte_end":65064,"line_start":520,"line_end":520,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(1.nanoseconds().whole_nanoseconds(), 1);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":65069,"byte_end":65124,"line_start":521,"line_end":521,"column_start":5,"column_end":60}},{"value":"/ assert_eq!((-1).nanoseconds().whole_nanoseconds(), -1);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":65129,"byte_end":65188,"line_start":522,"line_end":522,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":65193,"byte_end":65200,"line_start":523,"line_end":523,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":65742,"byte_end":65760,"line_start":537,"line_end":537,"column_start":18,"column_end":36},"name":"subsec_nanoseconds","qualname":"<Duration>::subsec_nanoseconds","value":"const fn subsec_nanoseconds(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the number of nanoseconds past the number of whole seconds.","sig":null,"attributes":[{"value":"/ Get the number of nanoseconds past the number of whole seconds.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":65335,"byte_end":65402,"line_start":528,"line_end":528,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":65407,"byte_end":65410,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `-1_000_000_000..1_000_000_000`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":65415,"byte_end":65498,"line_start":530,"line_end":530,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":65503,"byte_end":65506,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":65511,"byte_end":65522,"line_start":532,"line_end":532,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":65527,"byte_end":65566,"line_start":533,"line_end":533,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.000_000_400.seconds().subsec_nanoseconds(), 400);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":65571,"byte_end":65637,"line_start":534,"line_end":534,"column_start":5,"column_end":71}},{"value":"/ assert_eq!((-1.000_000_400).seconds().subsec_nanoseconds(), -400);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":65642,"byte_end":65712,"line_start":535,"line_end":535,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":65717,"byte_end":65724,"line_start":536,"line_end":536,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":66277,"byte_end":66288,"line_start":551,"line_end":551,"column_start":18,"column_end":29},"name":"checked_add","qualname":"<Duration>::checked_add","value":"const fn checked_add(Self, Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self + rhs`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self + rhs`, returning `None` if an overflow occurred.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":65871,"byte_end":65939,"line_start":543,"line_end":543,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":65944,"byte_end":65947,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":65952,"byte_end":65963,"line_start":545,"line_end":545,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":65968,"byte_end":66019,"line_start":546,"line_end":546,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(5.seconds().checked_add(5.seconds()), Some(10.seconds()));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":66024,"byte_end":66097,"line_start":547,"line_end":547,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(Duration::MAX.checked_add(1.nanoseconds()), None);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":66102,"byte_end":66167,"line_start":548,"line_end":548,"column_start":5,"column_end":70}},{"value":"/ assert_eq!((-5).seconds().checked_add(5.seconds()), Some(0.seconds()));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":66172,"byte_end":66247,"line_start":549,"line_end":549,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":66252,"byte_end":66259,"line_start":550,"line_end":550,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":67327,"byte_end":67338,"line_start":574,"line_end":574,"column_start":18,"column_end":29},"name":"checked_sub","qualname":"<Duration>::checked_sub","value":"const fn checked_sub(Self, Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self - rhs`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self - rhs`, returning `None` if an overflow occurred.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":66918,"byte_end":66986,"line_start":566,"line_end":566,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":66991,"byte_end":66994,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":66999,"byte_end":67010,"line_start":568,"line_end":568,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":67015,"byte_end":67066,"line_start":569,"line_end":569,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(5.seconds().checked_sub(5.seconds()), Some(Duration::ZERO));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":67071,"byte_end":67146,"line_start":570,"line_end":570,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(Duration::MIN.checked_sub(1.nanoseconds()), None);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":67151,"byte_end":67216,"line_start":571,"line_end":571,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(5.seconds().checked_sub(10.seconds()), Some((-5).seconds()));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":67221,"byte_end":67297,"line_start":572,"line_end":572,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":67302,"byte_end":67309,"line_start":573,"line_end":573,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":68465,"byte_end":68476,"line_start":599,"line_end":599,"column_start":18,"column_end":29},"name":"checked_mul","qualname":"<Duration>::checked_mul","value":"const fn checked_mul(Self, i32) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self * rhs`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self * rhs`, returning `None` if an overflow occurred.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":67968,"byte_end":68036,"line_start":589,"line_end":589,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":68041,"byte_end":68044,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":68049,"byte_end":68060,"line_start":591,"line_end":591,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":68065,"byte_end":68116,"line_start":592,"line_end":592,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(5.seconds().checked_mul(2), Some(10.seconds()));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":68121,"byte_end":68184,"line_start":593,"line_end":593,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(5.seconds().checked_mul(-2), Some((-10).seconds()));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":68189,"byte_end":68256,"line_start":594,"line_end":594,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(5.seconds().checked_mul(0), Some(0.seconds()));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":68261,"byte_end":68323,"line_start":595,"line_end":595,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(Duration::MAX.checked_mul(2), None);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":68328,"byte_end":68379,"line_start":596,"line_end":596,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::MIN.checked_mul(2), None);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":68384,"byte_end":68435,"line_start":597,"line_end":597,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":68440,"byte_end":68447,"line_start":598,"line_end":598,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":69354,"byte_end":69365,"line_start":619,"line_end":619,"column_start":18,"column_end":29},"name":"checked_div","qualname":"<Duration>::checked_div","value":"const fn checked_div(Self, i32) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self / rhs`, returning `None` if `rhs == 0` or if the result would overflow.","sig":null,"attributes":[{"value":"/ Computes `self / rhs`, returning `None` if `rhs == 0` or if the result would overflow.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":68972,"byte_end":69062,"line_start":611,"line_end":611,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":69067,"byte_end":69070,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":69075,"byte_end":69086,"line_start":613,"line_end":613,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":69091,"byte_end":69130,"line_start":614,"line_end":614,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(10.seconds().checked_div(2), Some(5.seconds()));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":69135,"byte_end":69198,"line_start":615,"line_end":615,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(10.seconds().checked_div(-2), Some((-5).seconds()));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":69203,"byte_end":69270,"line_start":616,"line_end":616,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(1.seconds().checked_div(0), None);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":69275,"byte_end":69324,"line_start":617,"line_end":617,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":69329,"byte_end":69336,"line_start":618,"line_end":618,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":70395,"byte_end":70409,"line_start":642,"line_end":642,"column_start":18,"column_end":32},"name":"saturating_add","qualname":"<Duration>::saturating_add","value":"const fn saturating_add(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self + rhs`, saturating if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self + rhs`, saturating if an overflow occurred.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":69867,"byte_end":69929,"line_start":630,"line_end":630,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":69934,"byte_end":69937,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":69942,"byte_end":69953,"line_start":632,"line_end":632,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":69958,"byte_end":70009,"line_start":633,"line_end":633,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(5.seconds().saturating_add(5.seconds()), 10.seconds());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":70014,"byte_end":70084,"line_start":634,"line_end":634,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(Duration::MAX.saturating_add(1.nanoseconds()), Duration::MAX);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":70089,"byte_end":70166,"line_start":635,"line_end":635,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":70171,"byte_end":70186,"line_start":636,"line_end":636,"column_start":5,"column_end":20}},{"value":"/     Duration::MIN.saturating_add((-1).nanoseconds()),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":70191,"byte_end":70248,"line_start":637,"line_end":637,"column_start":5,"column_end":62}},{"value":"/     Duration::MIN","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":70253,"byte_end":70274,"line_start":638,"line_end":638,"column_start":5,"column_end":26}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":70279,"byte_end":70285,"line_start":639,"line_end":639,"column_start":5,"column_end":11}},{"value":"/ assert_eq!((-5).seconds().saturating_add(5.seconds()), Duration::ZERO);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":70290,"byte_end":70365,"line_start":640,"line_end":640,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":70370,"byte_end":70377,"line_start":641,"line_end":641,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":71877,"byte_end":71891,"line_start":681,"line_end":681,"column_start":18,"column_end":32},"name":"saturating_sub","qualname":"<Duration>::saturating_sub","value":"const fn saturating_sub(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self - rhs`, saturating if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self - rhs`, saturating if an overflow occurred.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":71349,"byte_end":71411,"line_start":669,"line_end":669,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":71416,"byte_end":71419,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":71424,"byte_end":71435,"line_start":671,"line_end":671,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":71440,"byte_end":71491,"line_start":672,"line_end":672,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(5.seconds().saturating_sub(5.seconds()), Duration::ZERO);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":71496,"byte_end":71568,"line_start":673,"line_end":673,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(Duration::MIN.saturating_sub(1.nanoseconds()), Duration::MIN);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":71573,"byte_end":71650,"line_start":674,"line_end":674,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":71655,"byte_end":71670,"line_start":675,"line_end":675,"column_start":5,"column_end":20}},{"value":"/     Duration::MAX.saturating_sub((-1).nanoseconds()),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":71675,"byte_end":71732,"line_start":676,"line_end":676,"column_start":5,"column_end":62}},{"value":"/     Duration::MAX","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":71737,"byte_end":71758,"line_start":677,"line_end":677,"column_start":5,"column_end":26}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":71763,"byte_end":71769,"line_start":678,"line_end":678,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(5.seconds().saturating_sub(10.seconds()), (-5).seconds());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":71774,"byte_end":71847,"line_start":679,"line_end":679,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":71852,"byte_end":71859,"line_start":680,"line_end":680,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":73478,"byte_end":73492,"line_start":720,"line_end":720,"column_start":18,"column_end":32},"name":"saturating_mul","qualname":"<Duration>::saturating_mul","value":"const fn saturating_mul(Self, i32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self * rhs`, saturating if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self * rhs`, saturating if an overflow occurred.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":72831,"byte_end":72893,"line_start":708,"line_end":708,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":72898,"byte_end":72901,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":72906,"byte_end":72917,"line_start":710,"line_end":710,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":72922,"byte_end":72973,"line_start":711,"line_end":711,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(5.seconds().saturating_mul(2), 10.seconds());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":72978,"byte_end":73038,"line_start":712,"line_end":712,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(5.seconds().saturating_mul(-2), (-10).seconds());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":73043,"byte_end":73107,"line_start":713,"line_end":713,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(5.seconds().saturating_mul(0), Duration::ZERO);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":73112,"byte_end":73174,"line_start":714,"line_end":714,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(Duration::MAX.saturating_mul(2), Duration::MAX);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":73179,"byte_end":73242,"line_start":715,"line_end":715,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(Duration::MIN.saturating_mul(2), Duration::MIN);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":73247,"byte_end":73310,"line_start":716,"line_end":716,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(Duration::MAX.saturating_mul(-2), Duration::MIN);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":73315,"byte_end":73379,"line_start":717,"line_end":717,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(Duration::MIN.saturating_mul(-2), Duration::MAX);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":73384,"byte_end":73448,"line_start":718,"line_end":718,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":73453,"byte_end":73460,"line_start":719,"line_end":719,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":74558,"byte_end":74565,"line_start":747,"line_end":747,"column_start":12,"column_end":19},"name":"time_fn","qualname":"<Duration>::time_fn","value":"fn time_fn<T, impl FnOnce() -> T>(impl FnOnce() -> T) -> (Self, T) where\nimpl FnOnce() -> T: FnOnce() -> T","parent":null,"children":[],"decl_id":null,"docs":" Runs a closure, returning the duration of time it took to run. The return value of the\n closure is provided in the second part of the tuple.\n","sig":null,"attributes":[{"value":"/ Runs a closure, returning the duration of time it took to run. The return value of the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":74367,"byte_end":74457,"line_start":744,"line_end":744,"column_start":5,"column_end":95}},{"value":"/ closure is provided in the second part of the tuple.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":74462,"byte_end":74518,"line_start":745,"line_end":745,"column_start":5,"column_end":61}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":74523,"byte_end":74546,"line_start":746,"line_end":746,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":75327,"byte_end":75330,"line_start":772,"line_end":772,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Duration as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10117},"children":[],"decl_id":{"krate":2,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":77643,"byte_end":77651,"line_start":841,"line_end":841,"column_start":8,"column_end":16},"name":"try_from","qualname":"<Duration as std::convert::TryFrom>::try_from","value":"fn try_from(StdDuration) -> Result<Self, error::ConversionRange>","parent":{"krate":2,"index":3092},"children":[],"decl_id":{"krate":2,"index":3095},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":78022,"byte_end":78030,"line_start":855,"line_end":855,"column_start":8,"column_end":16},"name":"try_from","qualname":"<StdDuration as std::convert::TryFrom>::try_from","value":"fn try_from(Duration) -> Result<Self, error::ConversionRange>","parent":{"krate":2,"index":3092},"children":[],"decl_id":{"krate":2,"index":3095},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":78453,"byte_end":78456,"line_start":872,"line_end":872,"column_start":8,"column_end":11},"name":"add","qualname":"<Duration as std::ops::Add>::add","value":"fn add(Self, Self) -> Self::Output","parent":{"krate":2,"index":3247},"children":[],"decl_id":{"krate":2,"index":3250},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":78654,"byte_end":78657,"line_start":881,"line_end":881,"column_start":8,"column_end":11},"name":"add","qualname":"<Duration as std::ops::Add>::add","value":"fn add(Self, StdDuration) -> Self::Output","parent":{"krate":2,"index":3247},"children":[],"decl_id":{"krate":2,"index":3250},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":78920,"byte_end":78923,"line_start":890,"line_end":890,"column_start":8,"column_end":11},"name":"add","qualname":"<StdDuration as std::ops::Add>::add","value":"fn add(Self, Duration) -> Self::Output","parent":{"krate":2,"index":3247},"children":[],"decl_id":{"krate":2,"index":3250},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":79089,"byte_end":79099,"line_start":898,"line_end":898,"column_start":8,"column_end":18},"name":"add_assign","qualname":"<StdDuration as std::ops::AddAssign>::add_assign","value":"fn add_assign(&mut Self, Duration)","parent":{"krate":2,"index":3278},"children":[],"decl_id":{"krate":2,"index":3280},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":79381,"byte_end":79384,"line_start":909,"line_end":909,"column_start":8,"column_end":11},"name":"neg","qualname":"<Duration as std::ops::Neg>::neg","value":"fn neg(Self) -> Self::Output","parent":{"krate":2,"index":3274},"children":[],"decl_id":{"krate":2,"index":3276},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":79536,"byte_end":79539,"line_start":917,"line_end":917,"column_start":8,"column_end":11},"name":"sub","qualname":"<Duration as std::ops::Sub>::sub","value":"fn sub(Self, Self) -> Self::Output","parent":{"krate":2,"index":3252},"children":[],"decl_id":{"krate":2,"index":3255},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":79742,"byte_end":79745,"line_start":926,"line_end":926,"column_start":8,"column_end":11},"name":"sub","qualname":"<Duration as std::ops::Sub>::sub","value":"fn sub(Self, StdDuration) -> Self::Output","parent":{"krate":2,"index":3252},"children":[],"decl_id":{"krate":2,"index":3255},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":79990,"byte_end":79993,"line_start":935,"line_end":935,"column_start":8,"column_end":11},"name":"sub","qualname":"<StdDuration as std::ops::Sub>::sub","value":"fn sub(Self, Duration) -> Self::Output","parent":{"krate":2,"index":3252},"children":[],"decl_id":{"krate":2,"index":3255},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":80276,"byte_end":80286,"line_start":945,"line_end":945,"column_start":8,"column_end":18},"name":"sub_assign","qualname":"<StdDuration as std::ops::SubAssign>::sub_assign","value":"fn sub_assign(&mut Self, Duration)","parent":{"krate":2,"index":3282},"children":[],"decl_id":{"krate":2,"index":3284},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":81565,"byte_end":81568,"line_start":990,"line_end":990,"column_start":8,"column_end":11},"name":"mul","qualname":"<Duration as std::ops::Mul>::mul","value":"fn mul(Self, f32) -> Self::Output","parent":{"krate":2,"index":3257},"children":[],"decl_id":{"krate":2,"index":3260},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":81732,"byte_end":81735,"line_start":998,"line_end":998,"column_start":8,"column_end":11},"name":"mul","qualname":"<f32 as std::ops::Mul>::mul","value":"fn mul(Self, Duration) -> Self::Output","parent":{"krate":2,"index":3257},"children":[],"decl_id":{"krate":2,"index":3260},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":81864,"byte_end":81867,"line_start":1006,"line_end":1006,"column_start":8,"column_end":11},"name":"mul","qualname":"<Duration as std::ops::Mul>::mul","value":"fn mul(Self, f64) -> Self::Output","parent":{"krate":2,"index":3257},"children":[],"decl_id":{"krate":2,"index":3260},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":82031,"byte_end":82034,"line_start":1014,"line_end":1014,"column_start":8,"column_end":11},"name":"mul","qualname":"<f64 as std::ops::Mul>::mul","value":"fn mul(Self, Duration) -> Self::Output","parent":{"krate":2,"index":3257},"children":[],"decl_id":{"krate":2,"index":3260},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":82230,"byte_end":82233,"line_start":1024,"line_end":1024,"column_start":8,"column_end":11},"name":"div","qualname":"<Duration as std::ops::Div>::div","value":"fn div(Self, f32) -> Self::Output","parent":{"krate":2,"index":3262},"children":[],"decl_id":{"krate":2,"index":3265},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":82393,"byte_end":82396,"line_start":1032,"line_end":1032,"column_start":8,"column_end":11},"name":"div","qualname":"<Duration as std::ops::Div>::div","value":"fn div(Self, f64) -> Self::Output","parent":{"krate":2,"index":3262},"children":[],"decl_id":{"krate":2,"index":3265},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":82617,"byte_end":82620,"line_start":1042,"line_end":1042,"column_start":8,"column_end":11},"name":"div","qualname":"<Duration as std::ops::Div>::div","value":"fn div(Self, Self) -> Self::Output","parent":{"krate":2,"index":3262},"children":[],"decl_id":{"krate":2,"index":3265},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":82786,"byte_end":82789,"line_start":1050,"line_end":1050,"column_start":8,"column_end":11},"name":"div","qualname":"<Duration as std::ops::Div>::div","value":"fn div(Self, StdDuration) -> Self::Output","parent":{"krate":2,"index":3262},"children":[],"decl_id":{"krate":2,"index":3265},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":82959,"byte_end":82962,"line_start":1058,"line_end":1058,"column_start":8,"column_end":11},"name":"div","qualname":"<StdDuration as std::ops::Div>::div","value":"fn div(Self, Duration) -> Self::Output","parent":{"krate":2,"index":3262},"children":[],"decl_id":{"krate":2,"index":3265},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":83111,"byte_end":83113,"line_start":1064,"line_end":1064,"column_start":8,"column_end":10},"name":"eq","qualname":"<Duration as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &StdDuration) -> bool","parent":{"krate":2,"index":2831},"children":[],"decl_id":{"krate":2,"index":2833},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":83251,"byte_end":83253,"line_start":1070,"line_end":1070,"column_start":8,"column_end":10},"name":"eq","qualname":"<StdDuration as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &Duration) -> bool","parent":{"krate":2,"index":2831},"children":[],"decl_id":{"krate":2,"index":2833},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":83367,"byte_end":83378,"line_start":1076,"line_end":1076,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<Duration as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp(&Self, &StdDuration) -> Option<Ordering>","parent":{"krate":2,"index":2877},"children":[],"decl_id":{"krate":2,"index":2879},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":83756,"byte_end":83767,"line_start":1090,"line_end":1090,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<StdDuration as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp(&Self, &Duration) -> Option<Ordering>","parent":{"krate":2,"index":2877},"children":[],"decl_id":{"krate":2,"index":2879},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":83906,"byte_end":83909,"line_start":1096,"line_end":1096,"column_start":8,"column_end":11},"name":"sum","qualname":"<Duration as std::iter::Sum>::sum","value":"fn sum<I>(I) -> Self where I: Iterator<Item = Self>","parent":{"krate":2,"index":8238},"children":[],"decl_id":{"krate":2,"index":8240},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":84063,"byte_end":84066,"line_start":1102,"line_end":1102,"column_start":8,"column_end":11},"name":"sum","qualname":"<Duration as std::iter::Sum>::sum","value":"fn sum<I>(I) -> Self where I: Iterator<Item = &'a Self>","parent":{"krate":2,"index":8238},"children":[],"decl_id":{"krate":2,"index":8240},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":326},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/mod.rs","parent":null,"children":[{"krate":0,"index":327},{"krate":0,"index":345},{"krate":0,"index":360},{"krate":0,"index":372},{"krate":0,"index":396},{"krate":0,"index":415},{"krate":0,"index":427},{"krate":0,"index":460},{"krate":0,"index":475},{"krate":0,"index":496},{"krate":0,"index":499},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":508},{"krate":0,"index":511},{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":517},{"krate":0,"index":520},{"krate":0,"index":523},{"krate":0,"index":3011},{"krate":0,"index":3038},{"krate":0,"index":526},{"krate":0,"index":528}],"decl_id":null,"docs":" Various error types returned by methods in the time crate.\n","sig":null,"attributes":[{"value":"/ Various error types returned by methods in the time crate.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/mod.rs","byte_start":84178,"byte_end":84240,"line_start":1,"line_end":1,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":2861},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/component_range.rs","byte_start":88801,"byte_end":88815,"line_start":11,"line_end":11,"column_start":12,"column_end":26},"name":"ComponentRange","qualname":"::error::component_range::ComponentRange","value":"ComponentRange {  }","parent":null,"children":[{"krate":0,"index":2862},{"krate":0,"index":2863},{"krate":0,"index":2864},{"krate":0,"index":2865},{"krate":0,"index":2866}],"decl_id":null,"docs":" An error type indicating that a component provided to a method was out of range, causing a\n failure.\n","sig":null,"attributes":[{"value":"/ An error type indicating that a component provided to a method was out of range, causing a","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/component_range.rs","byte_start":88532,"byte_end":88626,"line_start":7,"line_end":7,"column_start":1,"column_end":95}},{"value":"/ failure.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/component_range.rs","byte_start":88627,"byte_end":88639,"line_start":8,"line_end":8,"column_start":1,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/component_range.rs","byte_start":89337,"byte_end":89341,"line_start":27,"line_end":27,"column_start":18,"column_end":22},"name":"name","qualname":"<ComponentRange>::name","value":"const fn name(Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Obtain the name of the component whose value was out of range.\n","sig":null,"attributes":[{"value":"/ Obtain the name of the component whose value was out of range.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/component_range.rs","byte_start":89253,"byte_end":89319,"line_start":26,"line_end":26,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":336},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/component_range.rs","byte_start":89585,"byte_end":89599,"line_start":33,"line_end":33,"column_start":18,"column_end":32},"name":"is_conditional","qualname":"<ComponentRange>::is_conditional","value":"const fn is_conditional(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the value's permitted range is conditional, i.e. whether an input with this\n value could have succeeded if the values of other components were different.\n","sig":null,"attributes":[{"value":"/ Whether the value's permitted range is conditional, i.e. whether an input with this","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/component_range.rs","byte_start":89395,"byte_end":89482,"line_start":31,"line_end":31,"column_start":5,"column_end":92}},{"value":"/ value could have succeeded if the values of other components were different.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/component_range.rs","byte_start":89487,"byte_end":89567,"line_start":32,"line_end":32,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":338},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/component_range.rs","byte_start":89702,"byte_end":89705,"line_start":39,"line_end":39,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ComponentRange as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10117},"children":[],"decl_id":{"krate":2,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/component_range.rs","byte_start":90086,"byte_end":90090,"line_start":55,"line_end":55,"column_start":8,"column_end":12},"name":"from","qualname":"<crate::Error as std::convert::From>::from","value":"fn from(ComponentRange) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/component_range.rs","byte_start":90273,"byte_end":90281,"line_start":63,"line_end":63,"column_start":8,"column_end":16},"name":"try_from","qualname":"<ComponentRange as std::convert::TryFrom>::try_from","value":"fn try_from(crate::Error) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3092},"children":[],"decl_id":{"krate":2,"index":3095},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2882},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/conversion_range.rs","byte_start":91400,"byte_end":91415,"line_start":10,"line_end":10,"column_start":12,"column_end":27},"name":"ConversionRange","qualname":"::error::conversion_range::ConversionRange","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error type indicating that a conversion failed because the target type could not store the\n initial value.\n","sig":null,"attributes":[{"value":"/ An error type indicating that a conversion failed because the target type could not store the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/conversion_range.rs","byte_start":91227,"byte_end":91324,"line_start":7,"line_end":7,"column_start":1,"column_end":98}},{"value":"/ initial value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/conversion_range.rs","byte_start":91325,"byte_end":91343,"line_start":8,"line_end":8,"column_start":1,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/conversion_range.rs","byte_start":91465,"byte_end":91468,"line_start":13,"line_end":13,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ConversionRange as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10117},"children":[],"decl_id":{"krate":2,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/conversion_range.rs","byte_start":91726,"byte_end":91730,"line_start":22,"line_end":22,"column_start":8,"column_end":12},"name":"from","qualname":"<crate::Error as std::convert::From>::from","value":"fn from(ConversionRange) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/conversion_range.rs","byte_start":91906,"byte_end":91914,"line_start":30,"line_end":30,"column_start":8,"column_end":16},"name":"try_from","qualname":"<ConversionRange as std::convert::TryFrom>::try_from","value":"fn try_from(crate::Error) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3092},"children":[],"decl_id":{"krate":2,"index":3095},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2895},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/different_variant.rs","byte_start":92354,"byte_end":92370,"line_start":8,"line_end":8,"column_start":12,"column_end":28},"name":"DifferentVariant","qualname":"::error::different_variant::DifferentVariant","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error type indicating that a [`TryFrom`](core::convert::TryFrom) call failed because the\n original value was of a different variant.\n","sig":null,"attributes":[{"value":"/ An error type indicating that a [`TryFrom`](core::convert::TryFrom) call failed because the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/different_variant.rs","byte_start":92155,"byte_end":92250,"line_start":5,"line_end":5,"column_start":1,"column_end":96}},{"value":"/ original value was of a different variant.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/different_variant.rs","byte_start":92251,"byte_end":92297,"line_start":6,"line_end":6,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/different_variant.rs","byte_start":92421,"byte_end":92424,"line_start":11,"line_end":11,"column_start":8,"column_end":11},"name":"fmt","qualname":"<DifferentVariant as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10117},"children":[],"decl_id":{"krate":2,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/different_variant.rs","byte_start":92680,"byte_end":92684,"line_start":20,"line_end":20,"column_start":8,"column_end":12},"name":"from","qualname":"<crate::Error as std::convert::From>::from","value":"fn from(DifferentVariant) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/different_variant.rs","byte_start":92844,"byte_end":92852,"line_start":28,"line_end":28,"column_start":8,"column_end":16},"name":"try_from","qualname":"<DifferentVariant as std::convert::TryFrom>::try_from","value":"fn try_from(crate::Error) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3092},"children":[],"decl_id":{"krate":2,"index":3095},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2909},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/format.rs","byte_start":93424,"byte_end":93451,"line_start":16,"line_end":16,"column_start":5,"column_end":32},"name":"InsufficientTypeInformation","qualname":"::error::format::Format::InsufficientTypeInformation","value":"Format::InsufficientTypeInformation","parent":{"krate":0,"index":2908},"children":[],"decl_id":null,"docs":" The type being formatted does not contain sufficient information to format a component.\n","sig":null,"attributes":[{"value":"/ The type being formatted does not contain sufficient information to format a component.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/format.rs","byte_start":93306,"byte_end":93397,"line_start":14,"line_end":14,"column_start":5,"column_end":96}},{"value":"non_exhaustive","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/format.rs","byte_start":93402,"byte_end":93419,"line_start":15,"line_end":15,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2911},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/format.rs","byte_start":93626,"byte_end":93642,"line_start":20,"line_end":20,"column_start":5,"column_end":21},"name":"InvalidComponent","qualname":"::error::format::Format::InvalidComponent","value":"Format::InvalidComponent(&'static str)","parent":{"krate":0,"index":2908},"children":[],"decl_id":null,"docs":" The component named has a value that cannot be formatted into the requested format.","sig":null,"attributes":[{"value":"/ The component named has a value that cannot be formatted into the requested format.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/format.rs","byte_start":93457,"byte_end":93544,"line_start":17,"line_end":17,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/format.rs","byte_start":93549,"byte_end":93552,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This variant is only returned when using well-known formats.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/format.rs","byte_start":93557,"byte_end":93621,"line_start":19,"line_end":19,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":2913},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/format.rs","byte_start":93643,"byte_end":93655,"line_start":20,"line_end":20,"column_start":22,"column_end":34},"name":"0","qualname":"::error::format::Format::InvalidComponent::0","value":"&'static str","parent":{"krate":0,"index":2911},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2914},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/format.rs","byte_start":93723,"byte_end":93728,"line_start":22,"line_end":22,"column_start":5,"column_end":10},"name":"StdIo","qualname":"::error::format::Format::StdIo","value":"Format::StdIo(io::Error)","parent":{"krate":0,"index":2908},"children":[],"decl_id":null,"docs":" A value of `std::io::Error` was returned internally.\n","sig":null,"attributes":[{"value":"/ A value of `std::io::Error` was returned internally.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/format.rs","byte_start":93662,"byte_end":93718,"line_start":21,"line_end":21,"column_start":5,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":2916},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/format.rs","byte_start":93729,"byte_end":93738,"line_start":22,"line_end":22,"column_start":11,"column_end":20},"name":"0","qualname":"::error::format::Format::StdIo::0","value":"std::io::Error","parent":{"krate":0,"index":2914},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2908},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/format.rs","byte_start":93293,"byte_end":93299,"line_start":13,"line_end":13,"column_start":10,"column_end":16},"name":"Format","qualname":"::error::format::Format","value":"enum Format {\n    InsufficientTypeInformation,\n    InvalidComponent(&'static str),\n    StdIo(io::Error),\n}","parent":null,"children":[{"krate":0,"index":2909},{"krate":0,"index":2911},{"krate":0,"index":2914}],"decl_id":null,"docs":" An error occurred when formatting.\n","sig":null,"attributes":[{"value":"/ An error occurred when formatting.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/format.rs","byte_start":93109,"byte_end":93147,"line_start":8,"line_end":8,"column_start":1,"column_end":39}},{"value":"non_exhaustive","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/format.rs","byte_start":93148,"byte_end":93165,"line_start":9,"line_end":9,"column_start":1,"column_end":18}},{"value":"allow(missing_copy_implementations)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/format.rs","byte_start":93166,"byte_end":93204,"line_start":10,"line_end":10,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/format.rs","byte_start":93782,"byte_end":93785,"line_start":26,"line_end":26,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Format as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10117},"children":[],"decl_id":{"krate":2,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/format.rs","byte_start":94348,"byte_end":94352,"line_start":42,"line_end":42,"column_start":8,"column_end":12},"name":"from","qualname":"<Format as std::convert::From>::from","value":"fn from(io::Error) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/format.rs","byte_start":94500,"byte_end":94508,"line_start":50,"line_end":50,"column_start":8,"column_end":16},"name":"try_from","qualname":"<io::Error as std::convert::TryFrom>::try_from","value":"fn try_from(Format) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3092},"children":[],"decl_id":{"krate":2,"index":3095},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/format.rs","byte_start":94749,"byte_end":94755,"line_start":60,"line_end":60,"column_start":8,"column_end":14},"name":"source","qualname":"<Format as std::error::Error>::source","value":"fn source(&Self) -> Option<&dyn std::error::Error + 'static>","parent":{"krate":1,"index":2569},"children":[],"decl_id":{"krate":1,"index":2570},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/format.rs","byte_start":95088,"byte_end":95092,"line_start":70,"line_end":70,"column_start":8,"column_end":12},"name":"from","qualname":"<crate::Error as std::convert::From>::from","value":"fn from(Format) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/format.rs","byte_start":95313,"byte_end":95321,"line_start":79,"line_end":79,"column_start":8,"column_end":16},"name":"try_from","qualname":"<Format as std::convert::TryFrom>::try_from","value":"fn try_from(crate::Error) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3092},"children":[],"decl_id":{"krate":2,"index":3095},"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2920},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/invalid_format_description.rs","byte_start":96270,"byte_end":96292,"line_start":18,"line_end":18,"column_start":5,"column_end":27},"name":"UnclosedOpeningBracket","qualname":"::error::invalid_format_description::InvalidFormatDescription::UnclosedOpeningBracket","value":"InvalidFormatDescription::UnclosedOpeningBracket { index }","parent":{"krate":0,"index":2919},"children":[],"decl_id":null,"docs":" There was a bracket pair that was opened but not closed.\n","sig":null,"attributes":[{"value":"/ There was a bracket pair that was opened but not closed.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/invalid_format_description.rs","byte_start":96183,"byte_end":96243,"line_start":16,"line_end":16,"column_start":5,"column_end":65}},{"value":"non_exhaustive","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/invalid_format_description.rs","byte_start":96248,"byte_end":96265,"line_start":17,"line_end":17,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":2921},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/invalid_format_description.rs","byte_start":96360,"byte_end":96365,"line_start":20,"line_end":20,"column_start":9,"column_end":14},"name":"index","qualname":"::error::invalid_format_description::InvalidFormatDescription::UnclosedOpeningBracket::index","value":"usize","parent":{"krate":0,"index":2920},"children":[],"decl_id":null,"docs":" The zero-based index of the opening bracket.\n","sig":null,"attributes":[{"value":"/ The zero-based index of the opening bracket.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/invalid_format_description.rs","byte_start":96303,"byte_end":96351,"line_start":19,"line_end":19,"column_start":9,"column_end":57}}]},{"kind":"StructVariant","id":{"krate":0,"index":2922},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/invalid_format_description.rs","byte_start":96446,"byte_end":96466,"line_start":24,"line_end":24,"column_start":5,"column_end":25},"name":"InvalidComponentName","qualname":"::error::invalid_format_description::InvalidFormatDescription::InvalidComponentName","value":"InvalidFormatDescription::InvalidComponentName { name, index }","parent":{"krate":0,"index":2919},"children":[],"decl_id":null,"docs":" A component name is not valid.\n","sig":null,"attributes":[{"value":"/ A component name is not valid.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/invalid_format_description.rs","byte_start":96385,"byte_end":96419,"line_start":22,"line_end":22,"column_start":5,"column_end":39}},{"value":"non_exhaustive","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/invalid_format_description.rs","byte_start":96424,"byte_end":96441,"line_start":23,"line_end":23,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":2923},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/invalid_format_description.rs","byte_start":96529,"byte_end":96533,"line_start":26,"line_end":26,"column_start":9,"column_end":13},"name":"name","qualname":"::error::invalid_format_description::InvalidFormatDescription::InvalidComponentName::name","value":"std::string::String","parent":{"krate":0,"index":2922},"children":[],"decl_id":null,"docs":" The name of the invalid component name.\n","sig":null,"attributes":[{"value":"/ The name of the invalid component name.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/invalid_format_description.rs","byte_start":96477,"byte_end":96520,"line_start":25,"line_end":25,"column_start":9,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2924},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/invalid_format_description.rs","byte_start":96614,"byte_end":96619,"line_start":28,"line_end":28,"column_start":9,"column_end":14},"name":"index","qualname":"::error::invalid_format_description::InvalidFormatDescription::InvalidComponentName::index","value":"usize","parent":{"krate":0,"index":2922},"children":[],"decl_id":null,"docs":" The zero-based index the component name starts at.\n","sig":null,"attributes":[{"value":"/ The zero-based index the component name starts at.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/invalid_format_description.rs","byte_start":96551,"byte_end":96605,"line_start":27,"line_end":27,"column_start":9,"column_end":63}}]},{"kind":"StructVariant","id":{"krate":0,"index":2925},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/invalid_format_description.rs","byte_start":96694,"byte_end":96709,"line_start":32,"line_end":32,"column_start":5,"column_end":20},"name":"InvalidModifier","qualname":"::error::invalid_format_description::InvalidFormatDescription::InvalidModifier","value":"InvalidFormatDescription::InvalidModifier { value, index }","parent":{"krate":0,"index":2919},"children":[],"decl_id":null,"docs":" A modifier is not valid.\n","sig":null,"attributes":[{"value":"/ A modifier is not valid.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/invalid_format_description.rs","byte_start":96639,"byte_end":96667,"line_start":30,"line_end":30,"column_start":5,"column_end":33}},{"value":"non_exhaustive","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/invalid_format_description.rs","byte_start":96672,"byte_end":96689,"line_start":31,"line_end":31,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":2926},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/invalid_format_description.rs","byte_start":96767,"byte_end":96772,"line_start":34,"line_end":34,"column_start":9,"column_end":14},"name":"value","qualname":"::error::invalid_format_description::InvalidFormatDescription::InvalidModifier::value","value":"std::string::String","parent":{"krate":0,"index":2925},"children":[],"decl_id":null,"docs":" The value of the invalid modifier.\n","sig":null,"attributes":[{"value":"/ The value of the invalid modifier.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/invalid_format_description.rs","byte_start":96720,"byte_end":96758,"line_start":33,"line_end":33,"column_start":9,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":2927},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/invalid_format_description.rs","byte_start":96847,"byte_end":96852,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"name":"index","qualname":"::error::invalid_format_description::InvalidFormatDescription::InvalidModifier::index","value":"usize","parent":{"krate":0,"index":2925},"children":[],"decl_id":null,"docs":" The zero-based index the modifier starts at.\n","sig":null,"attributes":[{"value":"/ The zero-based index the modifier starts at.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/invalid_format_description.rs","byte_start":96790,"byte_end":96838,"line_start":35,"line_end":35,"column_start":9,"column_end":57}}]},{"kind":"StructVariant","id":{"krate":0,"index":2928},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/invalid_format_description.rs","byte_start":96931,"byte_end":96951,"line_start":40,"line_end":40,"column_start":5,"column_end":25},"name":"MissingComponentName","qualname":"::error::invalid_format_description::InvalidFormatDescription::MissingComponentName","value":"InvalidFormatDescription::MissingComponentName { index }","parent":{"krate":0,"index":2919},"children":[],"decl_id":null,"docs":" A component name is missing.\n","sig":null,"attributes":[{"value":"/ A component name is missing.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/invalid_format_description.rs","byte_start":96872,"byte_end":96904,"line_start":38,"line_end":38,"column_start":5,"column_end":37}},{"value":"non_exhaustive","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/invalid_format_description.rs","byte_start":96909,"byte_end":96926,"line_start":39,"line_end":39,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":2929},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/invalid_format_description.rs","byte_start":97034,"byte_end":97039,"line_start":42,"line_end":42,"column_start":9,"column_end":14},"name":"index","qualname":"::error::invalid_format_description::InvalidFormatDescription::MissingComponentName::index","value":"usize","parent":{"krate":0,"index":2928},"children":[],"decl_id":null,"docs":" The zero-based index where the component name should start.\n","sig":null,"attributes":[{"value":"/ The zero-based index where the component name should start.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/invalid_format_description.rs","byte_start":96962,"byte_end":97025,"line_start":41,"line_end":41,"column_start":9,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":2919},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/invalid_format_description.rs","byte_start":96152,"byte_end":96176,"line_start":15,"line_end":15,"column_start":10,"column_end":34},"name":"InvalidFormatDescription","qualname":"::error::invalid_format_description::InvalidFormatDescription","value":"enum InvalidFormatDescription {\n    UnclosedOpeningBracket {\n            index: usize,\n        },\n    InvalidComponentName {\n            name: String,\n            index: usize,\n        },\n    InvalidModifier {\n            value: String,\n            index: usize,\n        },\n    MissingComponentName {\n            index: usize,\n        },\n}","parent":null,"children":[{"krate":0,"index":2920},{"krate":0,"index":2922},{"krate":0,"index":2925},{"krate":0,"index":2928}],"decl_id":null,"docs":" The format description provided was not valid.\n","sig":null,"attributes":[{"value":"/ The format description provided was not valid.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/invalid_format_description.rs","byte_start":95913,"byte_end":95963,"line_start":8,"line_end":8,"column_start":1,"column_end":51}},{"value":"non_exhaustive","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/invalid_format_description.rs","byte_start":96086,"byte_end":96103,"line_start":13,"line_end":13,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/invalid_format_description.rs","byte_start":97242,"byte_end":97246,"line_start":51,"line_end":51,"column_start":8,"column_end":12},"name":"from","qualname":"<crate::Error as std::convert::From>::from","value":"fn from(InvalidFormatDescription) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/invalid_format_description.rs","byte_start":97581,"byte_end":97589,"line_start":63,"line_end":63,"column_start":8,"column_end":16},"name":"try_from","qualname":"<InvalidFormatDescription as std::convert::TryFrom>::try_from","value":"fn try_from(crate::Error) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3092},"children":[],"decl_id":{"krate":2,"index":3095},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":412},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/invalid_format_description.rs","byte_start":97850,"byte_end":97853,"line_start":72,"line_end":72,"column_start":8,"column_end":11},"name":"fmt","qualname":"<InvalidFormatDescription as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10117},"children":[],"decl_id":{"krate":2,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2941},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/invalid_variant.rs","byte_start":98862,"byte_end":98876,"line_start":8,"line_end":8,"column_start":12,"column_end":26},"name":"InvalidVariant","qualname":"::error::invalid_variant::InvalidVariant","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error type indicating that a [`FromStr`](core::str::FromStr) call failed because the value\n was not a valid variant.\n","sig":null,"attributes":[{"value":"/ An error type indicating that a [`FromStr`](core::str::FromStr) call failed because the value","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/invalid_variant.rs","byte_start":98679,"byte_end":98776,"line_start":5,"line_end":5,"column_start":1,"column_end":98}},{"value":"/ was not a valid variant.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/invalid_variant.rs","byte_start":98777,"byte_end":98805,"line_start":6,"line_end":6,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":420},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/invalid_variant.rs","byte_start":98925,"byte_end":98928,"line_start":11,"line_end":11,"column_start":8,"column_end":11},"name":"fmt","qualname":"<InvalidVariant as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10117},"children":[],"decl_id":{"krate":2,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":423},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/invalid_variant.rs","byte_start":99163,"byte_end":99167,"line_start":20,"line_end":20,"column_start":8,"column_end":12},"name":"from","qualname":"<crate::Error as std::convert::From>::from","value":"fn from(InvalidVariant) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/invalid_variant.rs","byte_start":99347,"byte_end":99355,"line_start":28,"line_end":28,"column_start":8,"column_end":16},"name":"try_from","qualname":"<InvalidVariant as std::convert::TryFrom>::try_from","value":"fn try_from(crate::Error) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3092},"children":[],"decl_id":{"krate":2,"index":3095},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2955},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/parse.rs","byte_start":99970,"byte_end":99983,"line_start":14,"line_end":14,"column_start":5,"column_end":18},"name":"TryFromParsed","qualname":"::error::parse::Parse::TryFromParsed","value":"Parse::TryFromParsed(TryFromParsed)","parent":{"krate":0,"index":2954},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/parse.rs","byte_start":99918,"byte_end":99965,"line_start":13,"line_end":13,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2957},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/parse.rs","byte_start":99984,"byte_end":99997,"line_start":14,"line_end":14,"column_start":19,"column_end":32},"name":"0","qualname":"::error::parse::Parse::TryFromParsed::0","value":"error::try_from_parsed::TryFromParsed","parent":{"krate":0,"index":2955},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2958},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/parse.rs","byte_start":100056,"byte_end":100076,"line_start":16,"line_end":16,"column_start":5,"column_end":25},"name":"ParseFromDescription","qualname":"::error::parse::Parse::ParseFromDescription","value":"Parse::ParseFromDescription(ParseFromDescription)","parent":{"krate":0,"index":2954},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/parse.rs","byte_start":100004,"byte_end":100051,"line_start":15,"line_end":15,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2960},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/parse.rs","byte_start":100077,"byte_end":100097,"line_start":16,"line_end":16,"column_start":26,"column_end":46},"name":"0","qualname":"::error::parse::Parse::ParseFromDescription::0","value":"error::parse_from_description::ParseFromDescription","parent":{"krate":0,"index":2958},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2961},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/parse.rs","byte_start":100200,"byte_end":100228,"line_start":19,"line_end":19,"column_start":5,"column_end":33},"name":"UnexpectedTrailingCharacters","qualname":"::error::parse::Parse::UnexpectedTrailingCharacters","value":"Parse::UnexpectedTrailingCharacters","parent":{"krate":0,"index":2954},"children":[],"decl_id":null,"docs":" The input should have ended, but there were characters remaining.\n","sig":null,"attributes":[{"value":"/ The input should have ended, but there were characters remaining.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/parse.rs","byte_start":100104,"byte_end":100173,"line_start":17,"line_end":17,"column_start":5,"column_end":74}},{"value":"non_exhaustive","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/parse.rs","byte_start":100178,"byte_end":100195,"line_start":18,"line_end":18,"column_start":5,"column_end":22}}]},{"kind":"Enum","id":{"krate":0,"index":2954},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/parse.rs","byte_start":99906,"byte_end":99911,"line_start":12,"line_end":12,"column_start":10,"column_end":15},"name":"Parse","qualname":"::error::parse::Parse","value":"enum Parse {\n    TryFromParsed(TryFromParsed),\n    ParseFromDescription(ParseFromDescription),\n    UnexpectedTrailingCharacters,\n}","parent":null,"children":[{"krate":0,"index":2955},{"krate":0,"index":2958},{"krate":0,"index":2961}],"decl_id":null,"docs":" An error that occurred at some stage of parsing.\n","sig":null,"attributes":[{"value":"/ An error that occurred at some stage of parsing.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/parse.rs","byte_start":99687,"byte_end":99739,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"allow(variant_size_differences)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/parse.rs","byte_start":99799,"byte_end":99833,"line_start":9,"line_end":9,"column_start":1,"column_end":35}},{"value":"non_exhaustive","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/parse.rs","byte_start":99834,"byte_end":99851,"line_start":10,"line_end":10,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":442},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/parse.rs","byte_start":100270,"byte_end":100273,"line_start":23,"line_end":23,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Parse as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10117},"children":[],"decl_id":{"krate":2,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":444},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/parse.rs","byte_start":100640,"byte_end":100646,"line_start":34,"line_end":34,"column_start":8,"column_end":14},"name":"source","qualname":"<Parse as std::error::Error>::source","value":"fn source(&Self) -> Option<&dyn std::error::Error + 'static>","parent":{"krate":1,"index":2569},"children":[],"decl_id":{"krate":1,"index":2570},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":446},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/parse.rs","byte_start":101010,"byte_end":101014,"line_start":45,"line_end":45,"column_start":8,"column_end":12},"name":"from","qualname":"<Parse as std::convert::From>::from","value":"fn from(TryFromParsed) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":449},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/parse.rs","byte_start":101236,"byte_end":101244,"line_start":54,"line_end":54,"column_start":8,"column_end":16},"name":"try_from","qualname":"<TryFromParsed as std::convert::TryFrom>::try_from","value":"fn try_from(Parse) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3092},"children":[],"decl_id":{"krate":2,"index":3095},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":451},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/parse.rs","byte_start":101534,"byte_end":101538,"line_start":64,"line_end":64,"column_start":8,"column_end":12},"name":"from","qualname":"<Parse as std::convert::From>::from","value":"fn from(ParseFromDescription) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/parse.rs","byte_start":101781,"byte_end":101789,"line_start":73,"line_end":73,"column_start":8,"column_end":16},"name":"try_from","qualname":"<ParseFromDescription as std::convert::TryFrom>::try_from","value":"fn try_from(Parse) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3092},"children":[],"decl_id":{"krate":2,"index":3095},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/parse.rs","byte_start":102078,"byte_end":102082,"line_start":83,"line_end":83,"column_start":8,"column_end":12},"name":"from","qualname":"<crate::Error as std::convert::From>::from","value":"fn from(Parse) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/parse.rs","byte_start":102527,"byte_end":102535,"line_start":96,"line_end":96,"column_start":8,"column_end":16},"name":"try_from","qualname":"<Parse as std::convert::TryFrom>::try_from","value":"fn try_from(crate::Error) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3092},"children":[],"decl_id":{"krate":2,"index":3095},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2976},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/parse_from_description.rs","byte_start":103385,"byte_end":103399,"line_start":14,"line_end":14,"column_start":5,"column_end":19},"name":"InvalidLiteral","qualname":"::error::parse_from_description::ParseFromDescription::InvalidLiteral","value":"ParseFromDescription::InvalidLiteral","parent":{"krate":0,"index":2975},"children":[],"decl_id":null,"docs":" A string literal was not what was expected.\n","sig":null,"attributes":[{"value":"/ A string literal was not what was expected.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/parse_from_description.rs","byte_start":103311,"byte_end":103358,"line_start":12,"line_end":12,"column_start":5,"column_end":52}},{"value":"non_exhaustive","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/parse_from_description.rs","byte_start":103363,"byte_end":103380,"line_start":13,"line_end":13,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2978},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/parse_from_description.rs","byte_start":103448,"byte_end":103464,"line_start":16,"line_end":16,"column_start":5,"column_end":21},"name":"InvalidComponent","qualname":"::error::parse_from_description::ParseFromDescription::InvalidComponent","value":"ParseFromDescription::InvalidComponent(&'static str)","parent":{"krate":0,"index":2975},"children":[],"decl_id":null,"docs":" A dynamic component was not valid.\n","sig":null,"attributes":[{"value":"/ A dynamic component was not valid.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/parse_from_description.rs","byte_start":103405,"byte_end":103443,"line_start":15,"line_end":15,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":2980},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/parse_from_description.rs","byte_start":103465,"byte_end":103477,"line_start":16,"line_end":16,"column_start":22,"column_end":34},"name":"0","qualname":"::error::parse_from_description::ParseFromDescription::InvalidComponent::0","value":"&'static str","parent":{"krate":0,"index":2978},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2975},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/parse_from_description.rs","byte_start":103284,"byte_end":103304,"line_start":11,"line_end":11,"column_start":10,"column_end":30},"name":"ParseFromDescription","qualname":"::error::parse_from_description::ParseFromDescription","value":"enum ParseFromDescription { InvalidLiteral, InvalidComponent(&'static str), }","parent":null,"children":[{"krate":0,"index":2976},{"krate":0,"index":2978}],"decl_id":null,"docs":" An error that occurred while parsing the input into a [`Parsed`](crate::parsing::Parsed) struct.\n","sig":null,"attributes":[{"value":"/ An error that occurred while parsing the input into a [`Parsed`](crate::parsing::Parsed) struct.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/parse_from_description.rs","byte_start":103052,"byte_end":103152,"line_start":7,"line_end":7,"column_start":1,"column_end":101}},{"value":"non_exhaustive","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/parse_from_description.rs","byte_start":103212,"byte_end":103229,"line_start":9,"line_end":9,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/parse_from_description.rs","byte_start":103535,"byte_end":103538,"line_start":20,"line_end":20,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ParseFromDescription as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10117},"children":[],"decl_id":{"krate":2,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/parse_from_description.rs","byte_start":104042,"byte_end":104046,"line_start":35,"line_end":35,"column_start":8,"column_end":12},"name":"from","qualname":"<crate::Error as std::convert::From>::from","value":"fn from(ParseFromDescription) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/parse_from_description.rs","byte_start":104306,"byte_end":104314,"line_start":44,"line_end":44,"column_start":8,"column_end":16},"name":"try_from","qualname":"<ParseFromDescription as std::convert::TryFrom>::try_from","value":"fn try_from(crate::Error) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3092},"children":[],"decl_id":{"krate":2,"index":3095},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2994},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/try_from_parsed.rs","byte_start":104993,"byte_end":105016,"line_start":14,"line_end":14,"column_start":5,"column_end":28},"name":"InsufficientInformation","qualname":"::error::try_from_parsed::TryFromParsed::InsufficientInformation","value":"TryFromParsed::InsufficientInformation","parent":{"krate":0,"index":2993},"children":[],"decl_id":null,"docs":" The [`Parsed`](crate::parsing::Parsed) did not include enough information to construct the\n type.\n","sig":null,"attributes":[{"value":"/ The [`Parsed`](crate::parsing::Parsed) did not include enough information to construct the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/try_from_parsed.rs","byte_start":104880,"byte_end":104974,"line_start":12,"line_end":12,"column_start":5,"column_end":99}},{"value":"/ type.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/try_from_parsed.rs","byte_start":104979,"byte_end":104988,"line_start":13,"line_end":13,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2996},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/try_from_parsed.rs","byte_start":105086,"byte_end":105100,"line_start":16,"line_end":16,"column_start":5,"column_end":19},"name":"ComponentRange","qualname":"::error::try_from_parsed::TryFromParsed::ComponentRange","value":"TryFromParsed::ComponentRange(error::ComponentRange)","parent":{"krate":0,"index":2993},"children":[],"decl_id":null,"docs":" Some component contained an invalid value for the type.\n","sig":null,"attributes":[{"value":"/ Some component contained an invalid value for the type.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/try_from_parsed.rs","byte_start":105022,"byte_end":105081,"line_start":15,"line_end":15,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":2998},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/try_from_parsed.rs","byte_start":105101,"byte_end":105122,"line_start":16,"line_end":16,"column_start":20,"column_end":41},"name":"0","qualname":"::error::try_from_parsed::TryFromParsed::ComponentRange::0","value":"error::component_range::ComponentRange","parent":{"krate":0,"index":2996},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2993},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/try_from_parsed.rs","byte_start":104860,"byte_end":104873,"line_start":11,"line_end":11,"column_start":10,"column_end":23},"name":"TryFromParsed","qualname":"::error::try_from_parsed::TryFromParsed","value":"enum TryFromParsed {\n    InsufficientInformation,\n    ComponentRange(error::ComponentRange),\n}","parent":null,"children":[{"krate":0,"index":2994},{"krate":0,"index":2996}],"decl_id":null,"docs":" An error that occurred when converting a [`Parsed`](crate::parsing::Parsed) to another type.\n","sig":null,"attributes":[{"value":"/ An error that occurred when converting a [`Parsed`](crate::parsing::Parsed) to another type.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/try_from_parsed.rs","byte_start":104632,"byte_end":104728,"line_start":7,"line_end":7,"column_start":1,"column_end":97}},{"value":"non_exhaustive","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/try_from_parsed.rs","byte_start":104729,"byte_end":104746,"line_start":8,"line_end":8,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":483},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/try_from_parsed.rs","byte_start":105173,"byte_end":105176,"line_start":20,"line_end":20,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TryFromParsed as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10117},"children":[],"decl_id":{"krate":2,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/try_from_parsed.rs","byte_start":105551,"byte_end":105555,"line_start":31,"line_end":31,"column_start":8,"column_end":12},"name":"from","qualname":"<TryFromParsed as std::convert::From>::from","value":"fn from(error::ComponentRange) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/try_from_parsed.rs","byte_start":105739,"byte_end":105747,"line_start":39,"line_end":39,"column_start":8,"column_end":16},"name":"try_from","qualname":"<error::ComponentRange as std::convert::TryFrom>::try_from","value":"fn try_from(TryFromParsed) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3092},"children":[],"decl_id":{"krate":2,"index":3095},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/try_from_parsed.rs","byte_start":106018,"byte_end":106024,"line_start":49,"line_end":49,"column_start":8,"column_end":14},"name":"source","qualname":"<TryFromParsed as std::error::Error>::source","value":"fn source(&Self) -> Option<&dyn std::error::Error + 'static>","parent":{"krate":1,"index":2569},"children":[],"decl_id":{"krate":1,"index":2570},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/try_from_parsed.rs","byte_start":106333,"byte_end":106337,"line_start":59,"line_end":59,"column_start":8,"column_end":12},"name":"from","qualname":"<crate::Error as std::convert::From>::from","value":"fn from(TryFromParsed) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/try_from_parsed.rs","byte_start":106576,"byte_end":106584,"line_start":68,"line_end":68,"column_start":8,"column_end":16},"name":"try_from","qualname":"<TryFromParsed as std::convert::TryFrom>::try_from","value":"fn try_from(crate::Error) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3092},"children":[],"decl_id":{"krate":2,"index":3095},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3012},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/mod.rs","byte_start":85813,"byte_end":85828,"line_start":48,"line_end":48,"column_start":5,"column_end":20},"name":"ConversionRange","qualname":"::error::Error::ConversionRange","value":"Error::ConversionRange(ConversionRange)","parent":{"krate":0,"index":3011},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3014},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/mod.rs","byte_start":85829,"byte_end":85844,"line_start":48,"line_end":48,"column_start":21,"column_end":36},"name":"0","qualname":"::error::Error::ConversionRange::0","value":"error::conversion_range::ConversionRange","parent":{"krate":0,"index":3012},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3015},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/mod.rs","byte_start":85851,"byte_end":85865,"line_start":49,"line_end":49,"column_start":5,"column_end":19},"name":"ComponentRange","qualname":"::error::Error::ComponentRange","value":"Error::ComponentRange(ComponentRange)","parent":{"krate":0,"index":3011},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3017},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/mod.rs","byte_start":85866,"byte_end":85880,"line_start":49,"line_end":49,"column_start":20,"column_end":34},"name":"0","qualname":"::error::Error::ComponentRange::0","value":"error::component_range::ComponentRange","parent":{"krate":0,"index":3015},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3018},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/mod.rs","byte_start":86005,"byte_end":86011,"line_start":53,"line_end":53,"column_start":5,"column_end":11},"name":"Format","qualname":"::error::Error::Format","value":"Error::Format(Format)","parent":{"krate":0,"index":3011},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"formatting\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/mod.rs","byte_start":85970,"byte_end":86000,"line_start":52,"line_end":52,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":3020},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/mod.rs","byte_start":86012,"byte_end":86018,"line_start":53,"line_end":53,"column_start":12,"column_end":18},"name":"0","qualname":"::error::Error::Format::0","value":"error::format::Format","parent":{"krate":0,"index":3018},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3021},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/mod.rs","byte_start":86057,"byte_end":86077,"line_start":55,"line_end":55,"column_start":5,"column_end":25},"name":"ParseFromDescription","qualname":"::error::Error::ParseFromDescription","value":"Error::ParseFromDescription(ParseFromDescription)","parent":{"krate":0,"index":3011},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/mod.rs","byte_start":86025,"byte_end":86052,"line_start":54,"line_end":54,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":3023},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/mod.rs","byte_start":86078,"byte_end":86098,"line_start":55,"line_end":55,"column_start":26,"column_end":46},"name":"0","qualname":"::error::Error::ParseFromDescription::0","value":"error::parse_from_description::ParseFromDescription","parent":{"krate":0,"index":3021},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3024},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/mod.rs","byte_start":86159,"byte_end":86187,"line_start":58,"line_end":58,"column_start":5,"column_end":33},"name":"UnexpectedTrailingCharacters","qualname":"::error::Error::UnexpectedTrailingCharacters","value":"Error::UnexpectedTrailingCharacters","parent":{"krate":0,"index":3011},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/mod.rs","byte_start":86105,"byte_end":86132,"line_start":56,"line_end":56,"column_start":5,"column_end":32}},{"value":"non_exhaustive","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/mod.rs","byte_start":86137,"byte_end":86154,"line_start":57,"line_end":57,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3026},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/mod.rs","byte_start":86225,"byte_end":86238,"line_start":60,"line_end":60,"column_start":5,"column_end":18},"name":"TryFromParsed","qualname":"::error::Error::TryFromParsed","value":"Error::TryFromParsed(TryFromParsed)","parent":{"krate":0,"index":3011},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/mod.rs","byte_start":86193,"byte_end":86220,"line_start":59,"line_end":59,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":3028},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/mod.rs","byte_start":86239,"byte_end":86252,"line_start":60,"line_end":60,"column_start":19,"column_end":32},"name":"0","qualname":"::error::Error::TryFromParsed::0","value":"error::try_from_parsed::TryFromParsed","parent":{"krate":0,"index":3026},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3029},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/mod.rs","byte_start":86344,"byte_end":86368,"line_start":62,"line_end":62,"column_start":5,"column_end":29},"name":"InvalidFormatDescription","qualname":"::error::Error::InvalidFormatDescription","value":"Error::InvalidFormatDescription(InvalidFormatDescription)","parent":{"krate":0,"index":3011},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(all(any(feature = \"formatting\", feature = \"parsing\"), feature =\n\"alloc\"))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/mod.rs","byte_start":86259,"byte_end":86339,"line_start":61,"line_end":61,"column_start":5,"column_end":85}}]},{"kind":"Field","id":{"krate":0,"index":3031},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/mod.rs","byte_start":86369,"byte_end":86393,"line_start":62,"line_end":62,"column_start":30,"column_end":54},"name":"0","qualname":"::error::Error::InvalidFormatDescription::0","value":"error::invalid_format_description::InvalidFormatDescription","parent":{"krate":0,"index":3029},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3032},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/mod.rs","byte_start":86400,"byte_end":86416,"line_start":63,"line_end":63,"column_start":5,"column_end":21},"name":"DifferentVariant","qualname":"::error::Error::DifferentVariant","value":"Error::DifferentVariant(DifferentVariant)","parent":{"krate":0,"index":3011},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3034},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/mod.rs","byte_start":86417,"byte_end":86433,"line_start":63,"line_end":63,"column_start":22,"column_end":38},"name":"0","qualname":"::error::Error::DifferentVariant::0","value":"error::different_variant::DifferentVariant","parent":{"krate":0,"index":3032},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3035},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/mod.rs","byte_start":86440,"byte_end":86454,"line_start":64,"line_end":64,"column_start":5,"column_end":19},"name":"InvalidVariant","qualname":"::error::Error::InvalidVariant","value":"Error::InvalidVariant(InvalidVariant)","parent":{"krate":0,"index":3011},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3037},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/mod.rs","byte_start":86455,"byte_end":86469,"line_start":64,"line_end":64,"column_start":20,"column_end":34},"name":"0","qualname":"::error::Error::InvalidVariant::0","value":"error::invalid_variant::InvalidVariant","parent":{"krate":0,"index":3035},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3011},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/mod.rs","byte_start":85801,"byte_end":85806,"line_start":47,"line_end":47,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"enum Error {\n    ConversionRange(ConversionRange),\n    ComponentRange(ComponentRange),\n    Format(Format),\n    ParseFromDescription(ParseFromDescription),\n    UnexpectedTrailingCharacters,\n    TryFromParsed(TryFromParsed),\n    InvalidFormatDescription(InvalidFormatDescription),\n    DifferentVariant(DifferentVariant),\n    InvalidVariant(InvalidVariant),\n}","parent":null,"children":[{"krate":0,"index":3012},{"krate":0,"index":3015},{"krate":0,"index":3018},{"krate":0,"index":3021},{"krate":0,"index":3024},{"krate":0,"index":3026},{"krate":0,"index":3029},{"krate":0,"index":3032},{"krate":0,"index":3035}],"decl_id":null,"docs":" A unified error type for anything returned by a method in the time crate.","sig":null,"attributes":[{"value":"/ A unified error type for anything returned by a method in the time crate.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/mod.rs","byte_start":85358,"byte_end":85435,"line_start":39,"line_end":39,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/mod.rs","byte_start":85436,"byte_end":85439,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ This can be used when you either don't know or don't care about the exact error returned.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/mod.rs","byte_start":85440,"byte_end":85533,"line_start":41,"line_end":41,"column_start":1,"column_end":94}},{"value":"/ `Result<_, time::Error>` (or its alias `time::Result<_>`) will work in these situations.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/mod.rs","byte_start":85534,"byte_end":85626,"line_start":42,"line_end":42,"column_start":1,"column_end":93}},{"value":"allow(missing_copy_implementations, variant_size_differences)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/mod.rs","byte_start":85627,"byte_end":85691,"line_start":43,"line_end":43,"column_start":1,"column_end":65}},{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/mod.rs","byte_start":85692,"byte_end":85739,"line_start":44,"line_end":44,"column_start":1,"column_end":48}},{"value":"non_exhaustive","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/mod.rs","byte_start":85757,"byte_end":85774,"line_start":45,"line_end":45,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":527},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/mod.rs","byte_start":86512,"byte_end":86515,"line_start":68,"line_end":68,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Error as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10117},"children":[],"decl_id":{"krate":2,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":529},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/mod.rs","byte_start":87528,"byte_end":87534,"line_start":92,"line_end":92,"column_start":8,"column_end":14},"name":"source","qualname":"<Error as std::error::Error>::source","value":"fn source(&Self) -> Option<&dyn std::error::Error + 'static>","parent":{"krate":1,"index":2569},"children":[],"decl_id":{"krate":1,"index":2570},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":530},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ext","qualname":"::ext","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","parent":null,"children":[{"krate":0,"index":531},{"krate":0,"index":534},{"krate":0,"index":537},{"krate":0,"index":542},{"krate":0,"index":551},{"krate":0,"index":560},{"krate":0,"index":569},{"krate":0,"index":578},{"krate":0,"index":587}],"decl_id":null,"docs":" Extension traits.\n","sig":null,"attributes":[{"value":"/ Extension traits.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":106778,"byte_end":106799,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":538},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":107012,"byte_end":107018,"line_start":10,"line_end":10,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::ext::sealed::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":" A trait that cannot be implemented by downstream users.\n","sig":null,"attributes":[{"value":"/ A trait that cannot be implemented by downstream users.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":106938,"byte_end":106997,"line_start":9,"line_end":9,"column_start":5,"column_end":64}}]},{"kind":"Trait","id":{"krate":0,"index":542},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":108817,"byte_end":108834,"line_start":60,"line_end":60,"column_start":11,"column_end":28},"name":"NumericalDuration","qualname":"::ext::NumericalDuration","value":"NumericalDuration: sealed::Sealed","parent":null,"children":[{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":550}],"decl_id":null,"docs":" Create [`Duration`]s from numeric literals.","sig":null,"attributes":[{"value":"/ Create [`Duration`]s from numeric literals.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":107135,"byte_end":107182,"line_start":17,"line_end":17,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":107183,"byte_end":107186,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":107187,"byte_end":107201,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":107202,"byte_end":107205,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Basic construction of [`Duration`]s.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":107206,"byte_end":107246,"line_start":21,"line_end":21,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":107247,"byte_end":107250,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":107251,"byte_end":107262,"line_start":23,"line_end":23,"column_start":1,"column_end":12}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":107263,"byte_end":107314,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(5.nanoseconds(), Duration::nanoseconds(5));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":107315,"byte_end":107373,"line_start":25,"line_end":25,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(5.microseconds(), Duration::microseconds(5));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":107374,"byte_end":107434,"line_start":26,"line_end":26,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(5.milliseconds(), Duration::milliseconds(5));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":107435,"byte_end":107495,"line_start":27,"line_end":27,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(5.seconds(), Duration::seconds(5));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":107496,"byte_end":107546,"line_start":28,"line_end":28,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(5.minutes(), Duration::minutes(5));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":107547,"byte_end":107597,"line_start":29,"line_end":29,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(5.hours(), Duration::hours(5));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":107598,"byte_end":107644,"line_start":30,"line_end":30,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(5.days(), Duration::days(5));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":107645,"byte_end":107689,"line_start":31,"line_end":31,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(5.weeks(), Duration::weeks(5));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":107690,"byte_end":107736,"line_start":32,"line_end":32,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":107737,"byte_end":107744,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":107745,"byte_end":107748,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Signed integers work as well!","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":107749,"byte_end":107782,"line_start":35,"line_end":35,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":107783,"byte_end":107786,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":107787,"byte_end":107798,"line_start":37,"line_end":37,"column_start":1,"column_end":12}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":107799,"byte_end":107850,"line_start":38,"line_end":38,"column_start":1,"column_end":52}},{"value":"/ assert_eq!((-5).nanoseconds(), Duration::nanoseconds(-5));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":107851,"byte_end":107913,"line_start":39,"line_end":39,"column_start":1,"column_end":63}},{"value":"/ assert_eq!((-5).microseconds(), Duration::microseconds(-5));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":107914,"byte_end":107978,"line_start":40,"line_end":40,"column_start":1,"column_end":65}},{"value":"/ assert_eq!((-5).milliseconds(), Duration::milliseconds(-5));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":107979,"byte_end":108043,"line_start":41,"line_end":41,"column_start":1,"column_end":65}},{"value":"/ assert_eq!((-5).seconds(), Duration::seconds(-5));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":108044,"byte_end":108098,"line_start":42,"line_end":42,"column_start":1,"column_end":55}},{"value":"/ assert_eq!((-5).minutes(), Duration::minutes(-5));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":108099,"byte_end":108153,"line_start":43,"line_end":43,"column_start":1,"column_end":55}},{"value":"/ assert_eq!((-5).hours(), Duration::hours(-5));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":108154,"byte_end":108204,"line_start":44,"line_end":44,"column_start":1,"column_end":51}},{"value":"/ assert_eq!((-5).days(), Duration::days(-5));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":108205,"byte_end":108253,"line_start":45,"line_end":45,"column_start":1,"column_end":49}},{"value":"/ assert_eq!((-5).weeks(), Duration::weeks(-5));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":108254,"byte_end":108304,"line_start":46,"line_end":46,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":108305,"byte_end":108312,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":108313,"byte_end":108316,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ Just like any other [`Duration`], they can be added, subtracted, etc.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":108317,"byte_end":108390,"line_start":49,"line_end":49,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":108391,"byte_end":108394,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":108395,"byte_end":108406,"line_start":51,"line_end":51,"column_start":1,"column_end":12}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":108407,"byte_end":108446,"line_start":52,"line_end":52,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(2.seconds() + 500.milliseconds(), 2_500.milliseconds());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":108447,"byte_end":108518,"line_start":53,"line_end":53,"column_start":1,"column_end":72}},{"value":"/ assert_eq!(2.seconds() - 500.milliseconds(), 1_500.milliseconds());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":108519,"byte_end":108590,"line_start":54,"line_end":54,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":108591,"byte_end":108598,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":108599,"byte_end":108602,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ When called on floating point values, any remainder of the floating point value will be","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":108603,"byte_end":108694,"line_start":57,"line_end":57,"column_start":1,"column_end":92}},{"value":"/ truncated. Keep in mind that floating point numbers are inherently imprecise and have limited","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":108695,"byte_end":108792,"line_start":58,"line_end":58,"column_start":1,"column_end":98}},{"value":"/ capacity.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":108793,"byte_end":108806,"line_start":59,"line_end":59,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":543},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":108922,"byte_end":108933,"line_start":62,"line_end":62,"column_start":8,"column_end":19},"name":"nanoseconds","qualname":"::ext::NumericalDuration::nanoseconds","value":"fn nanoseconds(Self) -> Duration","parent":{"krate":0,"index":542},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of nanoseconds.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of nanoseconds.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":108857,"byte_end":108914,"line_start":61,"line_end":61,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":544},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":109023,"byte_end":109035,"line_start":64,"line_end":64,"column_start":8,"column_end":20},"name":"microseconds","qualname":"::ext::NumericalDuration::microseconds","value":"fn microseconds(Self) -> Duration","parent":{"krate":0,"index":542},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of microseconds.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of microseconds.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":108957,"byte_end":109015,"line_start":63,"line_end":63,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":545},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":109125,"byte_end":109137,"line_start":66,"line_end":66,"column_start":8,"column_end":20},"name":"milliseconds","qualname":"::ext::NumericalDuration::milliseconds","value":"fn milliseconds(Self) -> Duration","parent":{"krate":0,"index":542},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of milliseconds.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of milliseconds.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":109059,"byte_end":109117,"line_start":65,"line_end":65,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":546},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":109222,"byte_end":109229,"line_start":68,"line_end":68,"column_start":8,"column_end":15},"name":"seconds","qualname":"::ext::NumericalDuration::seconds","value":"fn seconds(Self) -> Duration","parent":{"krate":0,"index":542},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of seconds.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of seconds.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":109161,"byte_end":109214,"line_start":67,"line_end":67,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":547},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":109314,"byte_end":109321,"line_start":70,"line_end":70,"column_start":8,"column_end":15},"name":"minutes","qualname":"::ext::NumericalDuration::minutes","value":"fn minutes(Self) -> Duration","parent":{"krate":0,"index":542},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of minutes.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of minutes.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":109253,"byte_end":109306,"line_start":69,"line_end":69,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":548},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":109404,"byte_end":109409,"line_start":72,"line_end":72,"column_start":8,"column_end":13},"name":"hours","qualname":"::ext::NumericalDuration::hours","value":"fn hours(Self) -> Duration","parent":{"krate":0,"index":542},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of hours.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of hours.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":109345,"byte_end":109396,"line_start":71,"line_end":71,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":549},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":109491,"byte_end":109495,"line_start":74,"line_end":74,"column_start":8,"column_end":12},"name":"days","qualname":"::ext::NumericalDuration::days","value":"fn days(Self) -> Duration","parent":{"krate":0,"index":542},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of days.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of days.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":109433,"byte_end":109483,"line_start":73,"line_end":73,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":109578,"byte_end":109583,"line_start":76,"line_end":76,"column_start":8,"column_end":13},"name":"weeks","qualname":"::ext::NumericalDuration::weeks","value":"fn weeks(Self) -> Duration","parent":{"krate":0,"index":542},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of weeks.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of weeks.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":109519,"byte_end":109570,"line_start":75,"line_end":75,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":552},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":109646,"byte_end":109657,"line_start":80,"line_end":80,"column_start":8,"column_end":19},"name":"nanoseconds","qualname":"<i64 as ext::NumericalDuration>::nanoseconds","value":"fn nanoseconds(Self) -> Duration","parent":{"krate":0,"index":542},"children":[],"decl_id":{"krate":0,"index":543},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":553},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":109728,"byte_end":109740,"line_start":84,"line_end":84,"column_start":8,"column_end":20},"name":"microseconds","qualname":"<i64 as ext::NumericalDuration>::microseconds","value":"fn microseconds(Self) -> Duration","parent":{"krate":0,"index":542},"children":[],"decl_id":{"krate":0,"index":544},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":554},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":109812,"byte_end":109824,"line_start":88,"line_end":88,"column_start":8,"column_end":20},"name":"milliseconds","qualname":"<i64 as ext::NumericalDuration>::milliseconds","value":"fn milliseconds(Self) -> Duration","parent":{"krate":0,"index":542},"children":[],"decl_id":{"krate":0,"index":545},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":555},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":109896,"byte_end":109903,"line_start":92,"line_end":92,"column_start":8,"column_end":15},"name":"seconds","qualname":"<i64 as ext::NumericalDuration>::seconds","value":"fn seconds(Self) -> Duration","parent":{"krate":0,"index":542},"children":[],"decl_id":{"krate":0,"index":546},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":556},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":109970,"byte_end":109977,"line_start":96,"line_end":96,"column_start":8,"column_end":15},"name":"minutes","qualname":"<i64 as ext::NumericalDuration>::minutes","value":"fn minutes(Self) -> Duration","parent":{"krate":0,"index":542},"children":[],"decl_id":{"krate":0,"index":547},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":557},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":110044,"byte_end":110049,"line_start":100,"line_end":100,"column_start":8,"column_end":13},"name":"hours","qualname":"<i64 as ext::NumericalDuration>::hours","value":"fn hours(Self) -> Duration","parent":{"krate":0,"index":542},"children":[],"decl_id":{"krate":0,"index":548},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":558},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":110114,"byte_end":110118,"line_start":104,"line_end":104,"column_start":8,"column_end":12},"name":"days","qualname":"<i64 as ext::NumericalDuration>::days","value":"fn days(Self) -> Duration","parent":{"krate":0,"index":542},"children":[],"decl_id":{"krate":0,"index":549},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":559},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":110182,"byte_end":110187,"line_start":108,"line_end":108,"column_start":8,"column_end":13},"name":"weeks","qualname":"<i64 as ext::NumericalDuration>::weeks","value":"fn weeks(Self) -> Duration","parent":{"krate":0,"index":542},"children":[],"decl_id":{"krate":0,"index":550},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":561},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":110287,"byte_end":110298,"line_start":114,"line_end":114,"column_start":8,"column_end":19},"name":"nanoseconds","qualname":"<f64 as ext::NumericalDuration>::nanoseconds","value":"fn nanoseconds(Self) -> Duration","parent":{"krate":0,"index":542},"children":[],"decl_id":{"krate":0,"index":543},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":562},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":110374,"byte_end":110386,"line_start":118,"line_end":118,"column_start":8,"column_end":20},"name":"microseconds","qualname":"<f64 as ext::NumericalDuration>::microseconds","value":"fn microseconds(Self) -> Duration","parent":{"krate":0,"index":542},"children":[],"decl_id":{"krate":0,"index":544},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":563},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":110473,"byte_end":110485,"line_start":122,"line_end":122,"column_start":8,"column_end":20},"name":"milliseconds","qualname":"<f64 as ext::NumericalDuration>::milliseconds","value":"fn milliseconds(Self) -> Duration","parent":{"krate":0,"index":542},"children":[],"decl_id":{"krate":0,"index":545},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":110576,"byte_end":110583,"line_start":126,"line_end":126,"column_start":8,"column_end":15},"name":"seconds","qualname":"<f64 as ext::NumericalDuration>::seconds","value":"fn seconds(Self) -> Duration","parent":{"krate":0,"index":542},"children":[],"decl_id":{"krate":0,"index":546},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":110678,"byte_end":110685,"line_start":130,"line_end":130,"column_start":8,"column_end":15},"name":"minutes","qualname":"<f64 as ext::NumericalDuration>::minutes","value":"fn minutes(Self) -> Duration","parent":{"krate":0,"index":542},"children":[],"decl_id":{"krate":0,"index":547},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":110781,"byte_end":110786,"line_start":134,"line_end":134,"column_start":8,"column_end":13},"name":"hours","qualname":"<f64 as ext::NumericalDuration>::hours","value":"fn hours(Self) -> Duration","parent":{"krate":0,"index":542},"children":[],"decl_id":{"krate":0,"index":548},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":567},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":110885,"byte_end":110889,"line_start":138,"line_end":138,"column_start":8,"column_end":12},"name":"days","qualname":"<f64 as ext::NumericalDuration>::days","value":"fn days(Self) -> Duration","parent":{"krate":0,"index":542},"children":[],"decl_id":{"krate":0,"index":549},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":568},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":110989,"byte_end":110994,"line_start":142,"line_end":142,"column_start":8,"column_end":13},"name":"weeks","qualname":"<f64 as ext::NumericalDuration>::weeks","value":"fn weeks(Self) -> Duration","parent":{"krate":0,"index":542},"children":[],"decl_id":{"krate":0,"index":550},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":569},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":112472,"byte_end":112492,"line_start":185,"line_end":185,"column_start":11,"column_end":31},"name":"NumericalStdDuration","qualname":"::ext::NumericalStdDuration","value":"NumericalStdDuration: sealed::Sealed","parent":null,"children":[{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":577}],"decl_id":null,"docs":" Create [`std::time::Duration`]s from numeric literals.","sig":null,"attributes":[{"value":"/ Create [`std::time::Duration`]s from numeric literals.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":111153,"byte_end":111211,"line_start":149,"line_end":149,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":111212,"byte_end":111215,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":111216,"byte_end":111230,"line_start":151,"line_end":151,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":111231,"byte_end":111234,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ Basic construction of [`std::time::Duration`]s.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":111235,"byte_end":111286,"line_start":153,"line_end":153,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":111287,"byte_end":111290,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":111291,"byte_end":111302,"line_start":155,"line_end":155,"column_start":1,"column_end":12}},{"value":"/ # use time::ext::NumericalStdDuration;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":111303,"byte_end":111345,"line_start":156,"line_end":156,"column_start":1,"column_end":43}},{"value":"/ # use core::time::Duration;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":111346,"byte_end":111377,"line_start":157,"line_end":157,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(5.std_nanoseconds(), Duration::from_nanos(5));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":111378,"byte_end":111439,"line_start":158,"line_end":158,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(5.std_microseconds(), Duration::from_micros(5));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":111440,"byte_end":111503,"line_start":159,"line_end":159,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(5.std_milliseconds(), Duration::from_millis(5));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":111504,"byte_end":111567,"line_start":160,"line_end":160,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(5.std_seconds(), Duration::from_secs(5));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":111568,"byte_end":111624,"line_start":161,"line_end":161,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(5.std_minutes(), Duration::from_secs(5 * 60));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":111625,"byte_end":111686,"line_start":162,"line_end":162,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(5.std_hours(), Duration::from_secs(5 * 3_600));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":111687,"byte_end":111749,"line_start":163,"line_end":163,"column_start":1,"column_end":63}},{"value":"/ assert_eq!(5.std_days(), Duration::from_secs(5 * 86_400));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":111750,"byte_end":111812,"line_start":164,"line_end":164,"column_start":1,"column_end":63}},{"value":"/ assert_eq!(5.std_weeks(), Duration::from_secs(5 * 604_800));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":111813,"byte_end":111877,"line_start":165,"line_end":165,"column_start":1,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":111878,"byte_end":111885,"line_start":166,"line_end":166,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":111886,"byte_end":111889,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ Just like any other [`std::time::Duration`], they can be added, subtracted, etc.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":111890,"byte_end":111974,"line_start":168,"line_end":168,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":111975,"byte_end":111978,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":111979,"byte_end":111990,"line_start":170,"line_end":170,"column_start":1,"column_end":12}},{"value":"/ # use time::ext::NumericalStdDuration;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":111991,"byte_end":112033,"line_start":171,"line_end":171,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":112034,"byte_end":112049,"line_start":172,"line_end":172,"column_start":1,"column_end":16}},{"value":"/     2.std_seconds() + 500.std_milliseconds(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":112050,"byte_end":112099,"line_start":173,"line_end":173,"column_start":1,"column_end":50}},{"value":"/     2_500.std_milliseconds()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":112100,"byte_end":112132,"line_start":174,"line_end":174,"column_start":1,"column_end":33}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":112133,"byte_end":112139,"line_start":175,"line_end":175,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":112140,"byte_end":112155,"line_start":176,"line_end":176,"column_start":1,"column_end":16}},{"value":"/     2.std_seconds() - 500.std_milliseconds(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":112156,"byte_end":112205,"line_start":177,"line_end":177,"column_start":1,"column_end":50}},{"value":"/     1_500.std_milliseconds()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":112206,"byte_end":112238,"line_start":178,"line_end":178,"column_start":1,"column_end":33}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":112239,"byte_end":112245,"line_start":179,"line_end":179,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":112246,"byte_end":112253,"line_start":180,"line_end":180,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":112254,"byte_end":112257,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ When called on floating point values, any remainder of the floating point value will be","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":112258,"byte_end":112349,"line_start":182,"line_end":182,"column_start":1,"column_end":92}},{"value":"/ truncated. Keep in mind that floating point numbers are inherently imprecise and have limited","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":112350,"byte_end":112447,"line_start":183,"line_end":183,"column_start":1,"column_end":98}},{"value":"/ capacity.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":112448,"byte_end":112461,"line_start":184,"line_end":184,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":570},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":112591,"byte_end":112606,"line_start":187,"line_end":187,"column_start":8,"column_end":23},"name":"std_nanoseconds","qualname":"::ext::NumericalStdDuration::std_nanoseconds","value":"fn std_nanoseconds(Self) -> StdDuration","parent":{"krate":0,"index":569},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of nanoseconds.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of nanoseconds.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":112515,"byte_end":112583,"line_start":186,"line_end":186,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":571},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":112710,"byte_end":112726,"line_start":189,"line_end":189,"column_start":8,"column_end":24},"name":"std_microseconds","qualname":"::ext::NumericalStdDuration::std_microseconds","value":"fn std_microseconds(Self) -> StdDuration","parent":{"krate":0,"index":569},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of microseconds.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of microseconds.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":112633,"byte_end":112702,"line_start":188,"line_end":188,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":112830,"byte_end":112846,"line_start":191,"line_end":191,"column_start":8,"column_end":24},"name":"std_milliseconds","qualname":"::ext::NumericalStdDuration::std_milliseconds","value":"fn std_milliseconds(Self) -> StdDuration","parent":{"krate":0,"index":569},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of milliseconds.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of milliseconds.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":112753,"byte_end":112822,"line_start":190,"line_end":190,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":573},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":112945,"byte_end":112956,"line_start":193,"line_end":193,"column_start":8,"column_end":19},"name":"std_seconds","qualname":"::ext::NumericalStdDuration::std_seconds","value":"fn std_seconds(Self) -> StdDuration","parent":{"krate":0,"index":569},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of seconds.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of seconds.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":112873,"byte_end":112937,"line_start":192,"line_end":192,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":574},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":113055,"byte_end":113066,"line_start":195,"line_end":195,"column_start":8,"column_end":19},"name":"std_minutes","qualname":"::ext::NumericalStdDuration::std_minutes","value":"fn std_minutes(Self) -> StdDuration","parent":{"krate":0,"index":569},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of minutes.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of minutes.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":112983,"byte_end":113047,"line_start":194,"line_end":194,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":575},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":113163,"byte_end":113172,"line_start":197,"line_end":197,"column_start":8,"column_end":17},"name":"std_hours","qualname":"::ext::NumericalStdDuration::std_hours","value":"fn std_hours(Self) -> StdDuration","parent":{"krate":0,"index":569},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of hours.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of hours.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":113093,"byte_end":113155,"line_start":196,"line_end":196,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":576},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":113268,"byte_end":113276,"line_start":199,"line_end":199,"column_start":8,"column_end":16},"name":"std_days","qualname":"::ext::NumericalStdDuration::std_days","value":"fn std_days(Self) -> StdDuration","parent":{"krate":0,"index":569},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of days.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of days.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":113199,"byte_end":113260,"line_start":198,"line_end":198,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":577},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":113373,"byte_end":113382,"line_start":201,"line_end":201,"column_start":8,"column_end":17},"name":"std_weeks","qualname":"::ext::NumericalStdDuration::std_weeks","value":"fn std_weeks(Self) -> StdDuration","parent":{"krate":0,"index":569},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of weeks.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of weeks.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":113303,"byte_end":113365,"line_start":200,"line_end":200,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":579},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":113451,"byte_end":113466,"line_start":205,"line_end":205,"column_start":8,"column_end":23},"name":"std_nanoseconds","qualname":"<u64 as ext::NumericalStdDuration>::std_nanoseconds","value":"fn std_nanoseconds(Self) -> StdDuration","parent":{"krate":0,"index":569},"children":[],"decl_id":{"krate":0,"index":570},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":580},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":113542,"byte_end":113558,"line_start":209,"line_end":209,"column_start":8,"column_end":24},"name":"std_microseconds","qualname":"<u64 as ext::NumericalStdDuration>::std_microseconds","value":"fn std_microseconds(Self) -> StdDuration","parent":{"krate":0,"index":569},"children":[],"decl_id":{"krate":0,"index":571},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":113635,"byte_end":113651,"line_start":213,"line_end":213,"column_start":8,"column_end":24},"name":"std_milliseconds","qualname":"<u64 as ext::NumericalStdDuration>::std_milliseconds","value":"fn std_milliseconds(Self) -> StdDuration","parent":{"krate":0,"index":569},"children":[],"decl_id":{"krate":0,"index":572},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":582},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":113728,"byte_end":113739,"line_start":217,"line_end":217,"column_start":8,"column_end":19},"name":"std_seconds","qualname":"<u64 as ext::NumericalStdDuration>::std_seconds","value":"fn std_seconds(Self) -> StdDuration","parent":{"krate":0,"index":569},"children":[],"decl_id":{"krate":0,"index":573},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":583},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":113814,"byte_end":113825,"line_start":221,"line_end":221,"column_start":8,"column_end":19},"name":"std_minutes","qualname":"<u64 as ext::NumericalStdDuration>::std_minutes","value":"fn std_minutes(Self) -> StdDuration","parent":{"krate":0,"index":569},"children":[],"decl_id":{"krate":0,"index":574},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":584},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":113905,"byte_end":113914,"line_start":225,"line_end":225,"column_start":8,"column_end":17},"name":"std_hours","qualname":"<u64 as ext::NumericalStdDuration>::std_hours","value":"fn std_hours(Self) -> StdDuration","parent":{"krate":0,"index":569},"children":[],"decl_id":{"krate":0,"index":575},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":113997,"byte_end":114005,"line_start":229,"line_end":229,"column_start":8,"column_end":16},"name":"std_days","qualname":"<u64 as ext::NumericalStdDuration>::std_days","value":"fn std_days(Self) -> StdDuration","parent":{"krate":0,"index":569},"children":[],"decl_id":{"krate":0,"index":576},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":586},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":114089,"byte_end":114098,"line_start":233,"line_end":233,"column_start":8,"column_end":17},"name":"std_weeks","qualname":"<u64 as ext::NumericalStdDuration>::std_weeks","value":"fn std_weeks(Self) -> StdDuration","parent":{"krate":0,"index":569},"children":[],"decl_id":{"krate":0,"index":577},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":588},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":114221,"byte_end":114236,"line_start":239,"line_end":239,"column_start":8,"column_end":23},"name":"std_nanoseconds","qualname":"<f64 as ext::NumericalStdDuration>::std_nanoseconds","value":"fn std_nanoseconds(Self) -> StdDuration","parent":{"krate":0,"index":569},"children":[],"decl_id":{"krate":0,"index":570},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":589},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":114346,"byte_end":114362,"line_start":244,"line_end":244,"column_start":8,"column_end":24},"name":"std_microseconds","qualname":"<f64 as ext::NumericalStdDuration>::std_microseconds","value":"fn std_microseconds(Self) -> StdDuration","parent":{"krate":0,"index":569},"children":[],"decl_id":{"krate":0,"index":571},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":114483,"byte_end":114499,"line_start":249,"line_end":249,"column_start":8,"column_end":24},"name":"std_milliseconds","qualname":"<f64 as ext::NumericalStdDuration>::std_milliseconds","value":"fn std_milliseconds(Self) -> StdDuration","parent":{"krate":0,"index":569},"children":[],"decl_id":{"krate":0,"index":572},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":591},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":114624,"byte_end":114635,"line_start":254,"line_end":254,"column_start":8,"column_end":19},"name":"std_seconds","qualname":"<f64 as ext::NumericalStdDuration>::std_seconds","value":"fn std_seconds(Self) -> StdDuration","parent":{"krate":0,"index":569},"children":[],"decl_id":{"krate":0,"index":573},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":114764,"byte_end":114775,"line_start":259,"line_end":259,"column_start":8,"column_end":19},"name":"std_minutes","qualname":"<f64 as ext::NumericalStdDuration>::std_minutes","value":"fn std_minutes(Self) -> StdDuration","parent":{"krate":0,"index":569},"children":[],"decl_id":{"krate":0,"index":574},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":593},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":114905,"byte_end":114914,"line_start":264,"line_end":264,"column_start":8,"column_end":17},"name":"std_hours","qualname":"<f64 as ext::NumericalStdDuration>::std_hours","value":"fn std_hours(Self) -> StdDuration","parent":{"krate":0,"index":569},"children":[],"decl_id":{"krate":0,"index":575},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":594},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":115047,"byte_end":115055,"line_start":269,"line_end":269,"column_start":8,"column_end":16},"name":"std_days","qualname":"<f64 as ext::NumericalStdDuration>::std_days","value":"fn std_days(Self) -> StdDuration","parent":{"krate":0,"index":569},"children":[],"decl_id":{"krate":0,"index":576},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":595},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":115189,"byte_end":115198,"line_start":274,"line_end":274,"column_start":8,"column_end":17},"name":"std_weeks","qualname":"<f64 as ext::NumericalStdDuration>::std_weeks","value":"fn std_weeks(Self) -> StdDuration","parent":{"krate":0,"index":569},"children":[],"decl_id":{"krate":0,"index":577},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":596},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"format_description","qualname":"::format_description","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","parent":null,"children":[{"krate":0,"index":597},{"krate":0,"index":643},{"krate":0,"index":661},{"krate":0,"index":693},{"krate":0,"index":696},{"krate":0,"index":699},{"krate":0,"index":702},{"krate":0,"index":705},{"krate":0,"index":708},{"krate":0,"index":712},{"krate":0,"index":3663},{"krate":0,"index":3680},{"krate":0,"index":3683},{"krate":0,"index":3685},{"krate":0,"index":3689},{"krate":0,"index":3691},{"krate":0,"index":792},{"krate":0,"index":794},{"krate":0,"index":796},{"krate":0,"index":799},{"krate":0,"index":802},{"krate":0,"index":806},{"krate":0,"index":808},{"krate":0,"index":810},{"krate":0,"index":812}],"decl_id":null,"docs":" Description of how types should be formatted and parsed.","sig":null,"attributes":[{"value":"cfg(any(feature = \"formatting\", feature = \"parsing\"))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":9757,"byte_end":9813,"line_start":288,"line_end":288,"column_start":1,"column_end":57}},{"value":"/ Description of how types should be formatted and parsed.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","byte_start":115362,"byte_end":115422,"line_start":1,"line_end":1,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","byte_start":115423,"byte_end":115426,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The formatted value will be output to the provided writer. Format descriptions can be","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","byte_start":115427,"byte_end":115516,"line_start":3,"line_end":3,"column_start":1,"column_end":90}},{"value":"/ [well-known](crate::format_description::well_known) or obtained by using the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","byte_start":115517,"byte_end":115597,"line_start":4,"line_end":4,"column_start":1,"column_end":81}},{"value":"/ [`format_description!`](crate::macros::format_description) macro, the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","byte_start":115598,"byte_end":115671,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/ [`format_description::parse`](crate::format_description::parse()) function.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","byte_start":115672,"byte_end":115751,"line_start":6,"line_end":6,"column_start":1,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3041},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/component.rs","byte_start":120447,"byte_end":120450,"line_start":15,"line_end":15,"column_start":5,"column_end":8},"name":"Day","qualname":"::format_description::component::Component::Day","value":"Component::Day(modifier::Day)","parent":{"krate":0,"index":3040},"children":[],"decl_id":null,"docs":" Day of the month.\n","sig":null,"attributes":[{"value":"/ Day of the month.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/component.rs","byte_start":120421,"byte_end":120442,"line_start":14,"line_end":14,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":3043},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/component.rs","byte_start":120451,"byte_end":120464,"line_start":15,"line_end":15,"column_start":9,"column_end":22},"name":"0","qualname":"::format_description::component::Component::Day::0","value":"format_description::modifier::Day","parent":{"krate":0,"index":3041},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3044},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/component.rs","byte_start":120498,"byte_end":120503,"line_start":17,"line_end":17,"column_start":5,"column_end":10},"name":"Month","qualname":"::format_description::component::Component::Month","value":"Component::Month(modifier::Month)","parent":{"krate":0,"index":3040},"children":[],"decl_id":null,"docs":" Month of the year.\n","sig":null,"attributes":[{"value":"/ Month of the year.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/component.rs","byte_start":120471,"byte_end":120493,"line_start":16,"line_end":16,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":3046},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/component.rs","byte_start":120504,"byte_end":120519,"line_start":17,"line_end":17,"column_start":11,"column_end":26},"name":"0","qualname":"::format_description::component::Component::Month::0","value":"format_description::modifier::Month","parent":{"krate":0,"index":3044},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3047},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/component.rs","byte_start":120559,"byte_end":120566,"line_start":19,"line_end":19,"column_start":5,"column_end":12},"name":"Ordinal","qualname":"::format_description::component::Component::Ordinal","value":"Component::Ordinal(modifier::Ordinal)","parent":{"krate":0,"index":3040},"children":[],"decl_id":null,"docs":" Ordinal day of the year.\n","sig":null,"attributes":[{"value":"/ Ordinal day of the year.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/component.rs","byte_start":120526,"byte_end":120554,"line_start":18,"line_end":18,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":3049},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/component.rs","byte_start":120567,"byte_end":120584,"line_start":19,"line_end":19,"column_start":13,"column_end":30},"name":"0","qualname":"::format_description::component::Component::Ordinal::0","value":"format_description::modifier::Ordinal","parent":{"krate":0,"index":3047},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3050},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/component.rs","byte_start":120616,"byte_end":120623,"line_start":21,"line_end":21,"column_start":5,"column_end":12},"name":"Weekday","qualname":"::format_description::component::Component::Weekday","value":"Component::Weekday(modifier::Weekday)","parent":{"krate":0,"index":3040},"children":[],"decl_id":null,"docs":" Day of the week.\n","sig":null,"attributes":[{"value":"/ Day of the week.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/component.rs","byte_start":120591,"byte_end":120611,"line_start":20,"line_end":20,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":3052},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/component.rs","byte_start":120624,"byte_end":120641,"line_start":21,"line_end":21,"column_start":13,"column_end":30},"name":"0","qualname":"::format_description::component::Component::Weekday::0","value":"format_description::modifier::Weekday","parent":{"krate":0,"index":3050},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3053},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/component.rs","byte_start":120678,"byte_end":120688,"line_start":23,"line_end":23,"column_start":5,"column_end":15},"name":"WeekNumber","qualname":"::format_description::component::Component::WeekNumber","value":"Component::WeekNumber(modifier::WeekNumber)","parent":{"krate":0,"index":3040},"children":[],"decl_id":null,"docs":" Week within the year.\n","sig":null,"attributes":[{"value":"/ Week within the year.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/component.rs","byte_start":120648,"byte_end":120673,"line_start":22,"line_end":22,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":3055},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/component.rs","byte_start":120689,"byte_end":120709,"line_start":23,"line_end":23,"column_start":16,"column_end":36},"name":"0","qualname":"::format_description::component::Component::WeekNumber::0","value":"format_description::modifier::WeekNumber","parent":{"krate":0,"index":3053},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3056},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/component.rs","byte_start":120742,"byte_end":120746,"line_start":25,"line_end":25,"column_start":5,"column_end":9},"name":"Year","qualname":"::format_description::component::Component::Year","value":"Component::Year(modifier::Year)","parent":{"krate":0,"index":3040},"children":[],"decl_id":null,"docs":" Year of the date.\n","sig":null,"attributes":[{"value":"/ Year of the date.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/component.rs","byte_start":120716,"byte_end":120737,"line_start":24,"line_end":24,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":3058},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/component.rs","byte_start":120747,"byte_end":120761,"line_start":25,"line_end":25,"column_start":10,"column_end":24},"name":"0","qualname":"::format_description::component::Component::Year::0","value":"format_description::modifier::Year","parent":{"krate":0,"index":3056},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3059},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/component.rs","byte_start":120793,"byte_end":120797,"line_start":27,"line_end":27,"column_start":5,"column_end":9},"name":"Hour","qualname":"::format_description::component::Component::Hour","value":"Component::Hour(modifier::Hour)","parent":{"krate":0,"index":3040},"children":[],"decl_id":null,"docs":" Hour of the day.\n","sig":null,"attributes":[{"value":"/ Hour of the day.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/component.rs","byte_start":120768,"byte_end":120788,"line_start":26,"line_end":26,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":3061},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/component.rs","byte_start":120798,"byte_end":120812,"line_start":27,"line_end":27,"column_start":10,"column_end":24},"name":"0","qualname":"::format_description::component::Component::Hour::0","value":"format_description::modifier::Hour","parent":{"krate":0,"index":3059},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3062},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/component.rs","byte_start":120851,"byte_end":120857,"line_start":29,"line_end":29,"column_start":5,"column_end":11},"name":"Minute","qualname":"::format_description::component::Component::Minute","value":"Component::Minute(modifier::Minute)","parent":{"krate":0,"index":3040},"children":[],"decl_id":null,"docs":" Minute within the hour.\n","sig":null,"attributes":[{"value":"/ Minute within the hour.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/component.rs","byte_start":120819,"byte_end":120846,"line_start":28,"line_end":28,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":3064},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/component.rs","byte_start":120858,"byte_end":120874,"line_start":29,"line_end":29,"column_start":12,"column_end":28},"name":"0","qualname":"::format_description::component::Component::Minute::0","value":"format_description::modifier::Minute","parent":{"krate":0,"index":3062},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3065},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/component.rs","byte_start":120913,"byte_end":120919,"line_start":31,"line_end":31,"column_start":5,"column_end":11},"name":"Period","qualname":"::format_description::component::Component::Period","value":"Component::Period(modifier::Period)","parent":{"krate":0,"index":3040},"children":[],"decl_id":null,"docs":" AM/PM part of the time.\n","sig":null,"attributes":[{"value":"/ AM/PM part of the time.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/component.rs","byte_start":120881,"byte_end":120908,"line_start":30,"line_end":30,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":3067},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/component.rs","byte_start":120920,"byte_end":120936,"line_start":31,"line_end":31,"column_start":12,"column_end":28},"name":"0","qualname":"::format_description::component::Component::Period::0","value":"format_description::modifier::Period","parent":{"krate":0,"index":3065},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3068},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/component.rs","byte_start":120977,"byte_end":120983,"line_start":33,"line_end":33,"column_start":5,"column_end":11},"name":"Second","qualname":"::format_description::component::Component::Second","value":"Component::Second(modifier::Second)","parent":{"krate":0,"index":3040},"children":[],"decl_id":null,"docs":" Second within the minute.\n","sig":null,"attributes":[{"value":"/ Second within the minute.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/component.rs","byte_start":120943,"byte_end":120972,"line_start":32,"line_end":32,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":3070},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/component.rs","byte_start":120984,"byte_end":121000,"line_start":33,"line_end":33,"column_start":12,"column_end":28},"name":"0","qualname":"::format_description::component::Component::Second::0","value":"format_description::modifier::Second","parent":{"krate":0,"index":3068},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3071},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/component.rs","byte_start":121044,"byte_end":121053,"line_start":35,"line_end":35,"column_start":5,"column_end":14},"name":"Subsecond","qualname":"::format_description::component::Component::Subsecond","value":"Component::Subsecond(modifier::Subsecond)","parent":{"krate":0,"index":3040},"children":[],"decl_id":null,"docs":" Subsecond within the second.\n","sig":null,"attributes":[{"value":"/ Subsecond within the second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/component.rs","byte_start":121007,"byte_end":121039,"line_start":34,"line_end":34,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":3073},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/component.rs","byte_start":121054,"byte_end":121073,"line_start":35,"line_end":35,"column_start":15,"column_end":34},"name":"0","qualname":"::format_description::component::Component::Subsecond::0","value":"format_description::modifier::Subsecond","parent":{"krate":0,"index":3071},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3074},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/component.rs","byte_start":121112,"byte_end":121122,"line_start":37,"line_end":37,"column_start":5,"column_end":15},"name":"OffsetHour","qualname":"::format_description::component::Component::OffsetHour","value":"Component::OffsetHour(modifier::OffsetHour)","parent":{"krate":0,"index":3040},"children":[],"decl_id":null,"docs":" Hour of the UTC offset.\n","sig":null,"attributes":[{"value":"/ Hour of the UTC offset.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/component.rs","byte_start":121080,"byte_end":121107,"line_start":36,"line_end":36,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":3076},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/component.rs","byte_start":121123,"byte_end":121143,"line_start":37,"line_end":37,"column_start":16,"column_end":36},"name":"0","qualname":"::format_description::component::Component::OffsetHour::0","value":"format_description::modifier::OffsetHour","parent":{"krate":0,"index":3074},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3077},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/component.rs","byte_start":121200,"byte_end":121212,"line_start":39,"line_end":39,"column_start":5,"column_end":17},"name":"OffsetMinute","qualname":"::format_description::component::Component::OffsetMinute","value":"Component::OffsetMinute(modifier::OffsetMinute)","parent":{"krate":0,"index":3040},"children":[],"decl_id":null,"docs":" Minute within the hour of the UTC offset.\n","sig":null,"attributes":[{"value":"/ Minute within the hour of the UTC offset.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/component.rs","byte_start":121150,"byte_end":121195,"line_start":38,"line_end":38,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":3079},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/component.rs","byte_start":121213,"byte_end":121235,"line_start":39,"line_end":39,"column_start":18,"column_end":40},"name":"0","qualname":"::format_description::component::Component::OffsetMinute::0","value":"format_description::modifier::OffsetMinute","parent":{"krate":0,"index":3077},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3080},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/component.rs","byte_start":121294,"byte_end":121306,"line_start":41,"line_end":41,"column_start":5,"column_end":17},"name":"OffsetSecond","qualname":"::format_description::component::Component::OffsetSecond","value":"Component::OffsetSecond(modifier::OffsetSecond)","parent":{"krate":0,"index":3040},"children":[],"decl_id":null,"docs":" Second within the minute of the UTC offset.\n","sig":null,"attributes":[{"value":"/ Second within the minute of the UTC offset.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/component.rs","byte_start":121242,"byte_end":121289,"line_start":40,"line_end":40,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3082},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/component.rs","byte_start":121307,"byte_end":121329,"line_start":41,"line_end":41,"column_start":18,"column_end":40},"name":"0","qualname":"::format_description::component::Component::OffsetSecond::0","value":"format_description::modifier::OffsetSecond","parent":{"krate":0,"index":3080},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3040},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/component.rs","byte_start":120405,"byte_end":120414,"line_start":13,"line_end":13,"column_start":10,"column_end":19},"name":"Component","qualname":"::format_description::component::Component","value":"enum Component {\n    Day(modifier::Day),\n    Month(modifier::Month),\n    Ordinal(modifier::Ordinal),\n    Weekday(modifier::Weekday),\n    WeekNumber(modifier::WeekNumber),\n    Year(modifier::Year),\n    Hour(modifier::Hour),\n    Minute(modifier::Minute),\n    Period(modifier::Period),\n    Second(modifier::Second),\n    Subsecond(modifier::Subsecond),\n    OffsetHour(modifier::OffsetHour),\n    OffsetMinute(modifier::OffsetMinute),\n    OffsetSecond(modifier::OffsetSecond),\n}","parent":null,"children":[{"krate":0,"index":3041},{"krate":0,"index":3044},{"krate":0,"index":3047},{"krate":0,"index":3050},{"krate":0,"index":3053},{"krate":0,"index":3056},{"krate":0,"index":3059},{"krate":0,"index":3062},{"krate":0,"index":3065},{"krate":0,"index":3068},{"krate":0,"index":3071},{"krate":0,"index":3074},{"krate":0,"index":3077},{"krate":0,"index":3080}],"decl_id":null,"docs":" A component of a larger format description.\n","sig":null,"attributes":[{"value":"/ A component of a larger format description.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/component.rs","byte_start":120285,"byte_end":120332,"line_start":10,"line_end":10,"column_start":1,"column_end":48}},{"value":"non_exhaustive","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/component.rs","byte_start":120333,"byte_end":120350,"line_start":11,"line_end":11,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":643},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"modifier","qualname":"::format_description::modifier","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","parent":null,"children":[{"krate":0,"index":644},{"krate":0,"index":647},{"krate":0,"index":650},{"krate":0,"index":651},{"krate":0,"index":654},{"krate":0,"index":3095},{"krate":0,"index":3097},{"krate":0,"index":3099},{"krate":0,"index":3101},{"krate":0,"index":3102},{"krate":0,"index":3103},{"krate":0,"index":3106},{"krate":0,"index":3107},{"krate":0,"index":3109},{"krate":0,"index":3116},{"krate":0,"index":3118},{"krate":0,"index":3120},{"krate":0,"index":3121},{"krate":0,"index":3122},{"krate":0,"index":3124},{"krate":0,"index":3125},{"krate":0,"index":3127},{"krate":0,"index":3131},{"krate":0,"index":3133},{"krate":0,"index":3135},{"krate":0,"index":3136},{"krate":0,"index":3137},{"krate":0,"index":3140},{"krate":0,"index":3141},{"krate":0,"index":3143},{"krate":0,"index":3145},{"krate":0,"index":3147},{"krate":0,"index":3149},{"krate":0,"index":3150},{"krate":0,"index":3151},{"krate":0,"index":3154},{"krate":0,"index":3155},{"krate":0,"index":3157},{"krate":0,"index":3166},{"krate":0,"index":3168},{"krate":0,"index":3170},{"krate":0,"index":3171},{"krate":0,"index":3172},{"krate":0,"index":3174},{"krate":0,"index":3175},{"krate":0,"index":3177},{"krate":0,"index":3181},{"krate":0,"index":3183},{"krate":0,"index":3185},{"krate":0,"index":3186},{"krate":0,"index":3187},{"krate":0,"index":3190},{"krate":0,"index":3191},{"krate":0,"index":3193},{"krate":0,"index":3200},{"krate":0,"index":3202},{"krate":0,"index":3204},{"krate":0,"index":3205},{"krate":0,"index":3206},{"krate":0,"index":3208},{"krate":0,"index":3209},{"krate":0,"index":3211},{"krate":0,"index":3214},{"krate":0,"index":3216},{"krate":0,"index":3218},{"krate":0,"index":3219},{"krate":0,"index":3220},{"krate":0,"index":3223},{"krate":0,"index":3224},{"krate":0,"index":3226},{"krate":0,"index":3231},{"krate":0,"index":3233},{"krate":0,"index":3235},{"krate":0,"index":3236},{"krate":0,"index":3237},{"krate":0,"index":3239},{"krate":0,"index":3240},{"krate":0,"index":3242},{"krate":0,"index":3247},{"krate":0,"index":3249},{"krate":0,"index":3251},{"krate":0,"index":3252},{"krate":0,"index":3253},{"krate":0,"index":3256},{"krate":0,"index":3257},{"krate":0,"index":3259},{"krate":0,"index":3262},{"krate":0,"index":3264},{"krate":0,"index":3266},{"krate":0,"index":3267},{"krate":0,"index":3268},{"krate":0,"index":3271},{"krate":0,"index":3272},{"krate":0,"index":3274},{"krate":0,"index":3276},{"krate":0,"index":3278},{"krate":0,"index":3280},{"krate":0,"index":3281},{"krate":0,"index":3282},{"krate":0,"index":3285},{"krate":0,"index":3286},{"krate":0,"index":3288},{"krate":0,"index":3291},{"krate":0,"index":3293},{"krate":0,"index":3295},{"krate":0,"index":3296},{"krate":0,"index":3297},{"krate":0,"index":3300},{"krate":0,"index":3301},{"krate":0,"index":3303},{"krate":0,"index":3305},{"krate":0,"index":3307},{"krate":0,"index":3309},{"krate":0,"index":3310},{"krate":0,"index":3311},{"krate":0,"index":3314},{"krate":0,"index":3315},{"krate":0,"index":3317},{"krate":0,"index":3338},{"krate":0,"index":3340},{"krate":0,"index":3342},{"krate":0,"index":3343},{"krate":0,"index":3344},{"krate":0,"index":3346},{"krate":0,"index":3347},{"krate":0,"index":3349},{"krate":0,"index":3351},{"krate":0,"index":3353},{"krate":0,"index":3355},{"krate":0,"index":3356},{"krate":0,"index":3357},{"krate":0,"index":3360},{"krate":0,"index":3361},{"krate":0,"index":3363},{"krate":0,"index":3366},{"krate":0,"index":3368},{"krate":0,"index":3370},{"krate":0,"index":3371},{"krate":0,"index":3372},{"krate":0,"index":3375},{"krate":0,"index":3376},{"krate":0,"index":3378},{"krate":0,"index":3380},{"krate":0,"index":3382},{"krate":0,"index":3384},{"krate":0,"index":3385},{"krate":0,"index":3386},{"krate":0,"index":3389},{"krate":0,"index":3390},{"krate":0,"index":3392},{"krate":0,"index":3394},{"krate":0,"index":3396},{"krate":0,"index":3398},{"krate":0,"index":3399},{"krate":0,"index":3400},{"krate":0,"index":3403},{"krate":0,"index":3404},{"krate":0,"index":3406},{"krate":0,"index":3413},{"krate":0,"index":3415},{"krate":0,"index":3417},{"krate":0,"index":3418},{"krate":0,"index":3419},{"krate":0,"index":3421},{"krate":0,"index":3422},{"krate":0,"index":657},{"krate":0,"index":658},{"krate":0,"index":3424},{"krate":0,"index":3425},{"krate":0,"index":3427},{"krate":0,"index":3428},{"krate":0,"index":3430},{"krate":0,"index":3431},{"krate":0,"index":3433},{"krate":0,"index":3434},{"krate":0,"index":3436},{"krate":0,"index":3437},{"krate":0,"index":3439},{"krate":0,"index":3440},{"krate":0,"index":3442},{"krate":0,"index":3443},{"krate":0,"index":3445},{"krate":0,"index":3446},{"krate":0,"index":3448},{"krate":0,"index":3449},{"krate":0,"index":3451},{"krate":0,"index":3452},{"krate":0,"index":3454},{"krate":0,"index":3455},{"krate":0,"index":3457},{"krate":0,"index":3458},{"krate":0,"index":3460},{"krate":0,"index":3461},{"krate":0,"index":3463},{"krate":0,"index":3464},{"krate":0,"index":3466},{"krate":0,"index":3467},{"krate":0,"index":3469},{"krate":0,"index":3470},{"krate":0,"index":3472},{"krate":0,"index":3473},{"krate":0,"index":3475},{"krate":0,"index":3476},{"krate":0,"index":3478},{"krate":0,"index":3479},{"krate":0,"index":3481},{"krate":0,"index":3482},{"krate":0,"index":3498},{"krate":0,"index":3511},{"krate":0,"index":3513},{"krate":0,"index":659}],"decl_id":null,"docs":" Various modifiers for components.\n","sig":null,"attributes":[{"value":"/ Various modifiers for components.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":126483,"byte_end":126520,"line_start":1,"line_end":1,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":3095},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":126840,"byte_end":126843,"line_start":15,"line_end":15,"column_start":12,"column_end":15},"name":"Day","qualname":"::format_description::modifier::Day","value":"Day { padding }","parent":null,"children":[{"krate":0,"index":3096}],"decl_id":null,"docs":" Day of the month.\n","sig":null,"attributes":[{"value":"/ Day of the month.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":126744,"byte_end":126765,"line_start":12,"line_end":12,"column_start":1,"column_end":22}},{"value":"non_exhaustive","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":126766,"byte_end":126783,"line_start":13,"line_end":13,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":3096},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":126903,"byte_end":126910,"line_start":17,"line_end":17,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::Day::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":3095},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":126850,"byte_end":126894,"line_start":16,"line_end":16,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3110},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":127111,"byte_end":127120,"line_start":25,"line_end":25,"column_start":5,"column_end":14},"name":"Numerical","qualname":"::format_description::modifier::MonthRepr::Numerical","value":"MonthRepr::Numerical","parent":{"krate":0,"index":3109},"children":[],"decl_id":null,"docs":" The number of the month (January is 1, December is 12).\n","sig":null,"attributes":[{"value":"/ The number of the month (January is 1, December is 12).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":127047,"byte_end":127106,"line_start":24,"line_end":24,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3112},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":127184,"byte_end":127188,"line_start":27,"line_end":27,"column_start":5,"column_end":9},"name":"Long","qualname":"::format_description::modifier::MonthRepr::Long","value":"MonthRepr::Long","parent":{"krate":0,"index":3109},"children":[],"decl_id":null,"docs":" The long form of the month name (e.g. \"January\").\n","sig":null,"attributes":[{"value":"/ The long form of the month name (e.g. \"January\").","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":127126,"byte_end":127179,"line_start":26,"line_end":26,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3114},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":127249,"byte_end":127254,"line_start":29,"line_end":29,"column_start":5,"column_end":10},"name":"Short","qualname":"::format_description::modifier::MonthRepr::Short","value":"MonthRepr::Short","parent":{"krate":0,"index":3109},"children":[],"decl_id":null,"docs":" The short form of the month name (e.g. \"Jan\").\n","sig":null,"attributes":[{"value":"/ The short form of the month name (e.g. \"Jan\").","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":127194,"byte_end":127244,"line_start":28,"line_end":28,"column_start":5,"column_end":55}}]},{"kind":"Enum","id":{"krate":0,"index":3109},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":127031,"byte_end":127040,"line_start":23,"line_end":23,"column_start":10,"column_end":19},"name":"MonthRepr","qualname":"::format_description::modifier::MonthRepr","value":"enum MonthRepr { Numerical, Long, Short, }","parent":null,"children":[{"krate":0,"index":3110},{"krate":0,"index":3112},{"krate":0,"index":3114}],"decl_id":null,"docs":" The representation of a month.\n","sig":null,"attributes":[{"value":"/ The representation of a month.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":126924,"byte_end":126958,"line_start":20,"line_end":20,"column_start":1,"column_end":35}},{"value":"non_exhaustive","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":126959,"byte_end":126976,"line_start":21,"line_end":21,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":3127},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":127356,"byte_end":127361,"line_start":35,"line_end":35,"column_start":12,"column_end":17},"name":"Month","qualname":"::format_description::modifier::Month","value":"Month { padding, repr, case_sensitive }","parent":null,"children":[{"krate":0,"index":3128},{"krate":0,"index":3129},{"krate":0,"index":3130}],"decl_id":null,"docs":" Month of the year.\n","sig":null,"attributes":[{"value":"/ Month of the year.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":127259,"byte_end":127281,"line_start":32,"line_end":32,"column_start":1,"column_end":23}},{"value":"non_exhaustive","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":127282,"byte_end":127299,"line_start":33,"line_end":33,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":3128},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":127421,"byte_end":127428,"line_start":37,"line_end":37,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::Month::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":3127},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":127368,"byte_end":127412,"line_start":36,"line_end":36,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":3129},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":127499,"byte_end":127503,"line_start":39,"line_end":39,"column_start":9,"column_end":13},"name":"repr","qualname":"::format_description::modifier::Month::repr","value":"format_description::modifier::MonthRepr","parent":{"krate":0,"index":3127},"children":[],"decl_id":null,"docs":" What form of representation should be used?\n","sig":null,"attributes":[{"value":"/ What form of representation should be used?","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":127443,"byte_end":127490,"line_start":38,"line_end":38,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3130},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":127574,"byte_end":127588,"line_start":41,"line_end":41,"column_start":9,"column_end":23},"name":"case_sensitive","qualname":"::format_description::modifier::Month::case_sensitive","value":"bool","parent":{"krate":0,"index":3127},"children":[],"decl_id":null,"docs":" Is the value case sensitive when parsing?\n","sig":null,"attributes":[{"value":"/ Is the value case sensitive when parsing?","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":127520,"byte_end":127565,"line_start":40,"line_end":40,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":3143},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":127702,"byte_end":127709,"line_start":47,"line_end":47,"column_start":12,"column_end":19},"name":"Ordinal","qualname":"::format_description::modifier::Ordinal","value":"Ordinal { padding }","parent":null,"children":[{"krate":0,"index":3144}],"decl_id":null,"docs":" Ordinal day of the year.\n","sig":null,"attributes":[{"value":"/ Ordinal day of the year.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":127599,"byte_end":127627,"line_start":44,"line_end":44,"column_start":1,"column_end":29}},{"value":"non_exhaustive","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":127628,"byte_end":127645,"line_start":45,"line_end":45,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":3144},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":127769,"byte_end":127776,"line_start":49,"line_end":49,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::Ordinal::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":3143},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":127716,"byte_end":127760,"line_start":48,"line_end":48,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3158},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":127985,"byte_end":127990,"line_start":57,"line_end":57,"column_start":5,"column_end":10},"name":"Short","qualname":"::format_description::modifier::WeekdayRepr::Short","value":"WeekdayRepr::Short","parent":{"krate":0,"index":3157},"children":[],"decl_id":null,"docs":" The short form of the weekday (e.g. \"Mon\").\n","sig":null,"attributes":[{"value":"/ The short form of the weekday (e.g. \"Mon\").","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":127933,"byte_end":127980,"line_start":56,"line_end":56,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3160},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":128050,"byte_end":128054,"line_start":59,"line_end":59,"column_start":5,"column_end":9},"name":"Long","qualname":"::format_description::modifier::WeekdayRepr::Long","value":"WeekdayRepr::Long","parent":{"krate":0,"index":3157},"children":[],"decl_id":null,"docs":" The long form of the weekday (e.g. \"Monday\").\n","sig":null,"attributes":[{"value":"/ The long form of the weekday (e.g. \"Monday\").","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":127996,"byte_end":128045,"line_start":58,"line_end":58,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3162},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":128220,"byte_end":128226,"line_start":63,"line_end":63,"column_start":5,"column_end":11},"name":"Sunday","qualname":"::format_description::modifier::WeekdayRepr::Sunday","value":"WeekdayRepr::Sunday","parent":{"krate":0,"index":3157},"children":[],"decl_id":null,"docs":" A numerical representation using Sunday as the first day of the week.","sig":null,"attributes":[{"value":"/ A numerical representation using Sunday as the first day of the week.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":128060,"byte_end":128133,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":128138,"byte_end":128141,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ Sunday is either 0 or 1, depending on the other modifier's value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":128146,"byte_end":128215,"line_start":62,"line_end":62,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3164},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":128392,"byte_end":128398,"line_start":67,"line_end":67,"column_start":5,"column_end":11},"name":"Monday","qualname":"::format_description::modifier::WeekdayRepr::Monday","value":"WeekdayRepr::Monday","parent":{"krate":0,"index":3157},"children":[],"decl_id":null,"docs":" A numerical representation using Monday as the first day of the week.","sig":null,"attributes":[{"value":"/ A numerical representation using Monday as the first day of the week.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":128232,"byte_end":128305,"line_start":64,"line_end":64,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":128310,"byte_end":128313,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ Monday is either 0 or 1, depending on the other modifier's value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":128318,"byte_end":128387,"line_start":66,"line_end":66,"column_start":5,"column_end":74}}]},{"kind":"Enum","id":{"krate":0,"index":3157},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":127915,"byte_end":127926,"line_start":55,"line_end":55,"column_start":10,"column_end":21},"name":"WeekdayRepr","qualname":"::format_description::modifier::WeekdayRepr","value":"enum WeekdayRepr { Short, Long, Sunday, Monday, }","parent":null,"children":[{"krate":0,"index":3158},{"krate":0,"index":3160},{"krate":0,"index":3162},{"krate":0,"index":3164}],"decl_id":null,"docs":" The representation used for the day of the week.\n","sig":null,"attributes":[{"value":"/ The representation used for the day of the week.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":127790,"byte_end":127842,"line_start":52,"line_end":52,"column_start":1,"column_end":53}},{"value":"non_exhaustive","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":127843,"byte_end":127860,"line_start":53,"line_end":53,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":3177},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":128498,"byte_end":128505,"line_start":73,"line_end":73,"column_start":12,"column_end":19},"name":"Weekday","qualname":"::format_description::modifier::Weekday","value":"Weekday { repr, one_indexed, case_sensitive }","parent":null,"children":[{"krate":0,"index":3178},{"krate":0,"index":3179},{"krate":0,"index":3180}],"decl_id":null,"docs":" Day of the week.\n","sig":null,"attributes":[{"value":"/ Day of the week.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":128403,"byte_end":128423,"line_start":70,"line_end":70,"column_start":1,"column_end":21}},{"value":"non_exhaustive","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":128424,"byte_end":128441,"line_start":71,"line_end":71,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":3178},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":128568,"byte_end":128572,"line_start":75,"line_end":75,"column_start":9,"column_end":13},"name":"repr","qualname":"::format_description::modifier::Weekday::repr","value":"format_description::modifier::WeekdayRepr","parent":{"krate":0,"index":3177},"children":[],"decl_id":null,"docs":" What form of representation should be used?\n","sig":null,"attributes":[{"value":"/ What form of representation should be used?","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":128512,"byte_end":128559,"line_start":74,"line_end":74,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3179},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":128676,"byte_end":128687,"line_start":77,"line_end":77,"column_start":9,"column_end":20},"name":"one_indexed","qualname":"::format_description::modifier::Weekday::one_indexed","value":"bool","parent":{"krate":0,"index":3177},"children":[],"decl_id":null,"docs":" When using a numerical representation, should it be zero or one-indexed?\n","sig":null,"attributes":[{"value":"/ When using a numerical representation, should it be zero or one-indexed?","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":128591,"byte_end":128667,"line_start":76,"line_end":76,"column_start":5,"column_end":81}}]},{"kind":"Field","id":{"krate":0,"index":3180},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":128753,"byte_end":128767,"line_start":79,"line_end":79,"column_start":9,"column_end":23},"name":"case_sensitive","qualname":"::format_description::modifier::Weekday::case_sensitive","value":"bool","parent":{"krate":0,"index":3177},"children":[],"decl_id":null,"docs":" Is the value case sensitive when parsing?\n","sig":null,"attributes":[{"value":"/ Is the value case sensitive when parsing?","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":128699,"byte_end":128744,"line_start":78,"line_end":78,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3194},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":128972,"byte_end":128975,"line_start":87,"line_end":87,"column_start":5,"column_end":8},"name":"Iso","qualname":"::format_description::modifier::WeekNumberRepr::Iso","value":"WeekNumberRepr::Iso","parent":{"krate":0,"index":3193},"children":[],"decl_id":null,"docs":" Week 1 is the week that contains January 4.\n","sig":null,"attributes":[{"value":"/ Week 1 is the week that contains January 4.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":128920,"byte_end":128967,"line_start":86,"line_end":86,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3196},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":129045,"byte_end":129051,"line_start":89,"line_end":89,"column_start":5,"column_end":11},"name":"Sunday","qualname":"::format_description::modifier::WeekNumberRepr::Sunday","value":"WeekNumberRepr::Sunday","parent":{"krate":0,"index":3193},"children":[],"decl_id":null,"docs":" Week 1 begins on the first Sunday of the calendar year.\n","sig":null,"attributes":[{"value":"/ Week 1 begins on the first Sunday of the calendar year.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":128981,"byte_end":129040,"line_start":88,"line_end":88,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3198},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":129121,"byte_end":129127,"line_start":91,"line_end":91,"column_start":5,"column_end":11},"name":"Monday","qualname":"::format_description::modifier::WeekNumberRepr::Monday","value":"WeekNumberRepr::Monday","parent":{"krate":0,"index":3193},"children":[],"decl_id":null,"docs":" Week 1 begins on the first Monday of the calendar year.\n","sig":null,"attributes":[{"value":"/ Week 1 begins on the first Monday of the calendar year.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":129057,"byte_end":129116,"line_start":90,"line_end":90,"column_start":5,"column_end":64}}]},{"kind":"Enum","id":{"krate":0,"index":3193},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":128899,"byte_end":128913,"line_start":85,"line_end":85,"column_start":10,"column_end":24},"name":"WeekNumberRepr","qualname":"::format_description::modifier::WeekNumberRepr","value":"enum WeekNumberRepr { Iso, Sunday, Monday, }","parent":null,"children":[{"krate":0,"index":3194},{"krate":0,"index":3196},{"krate":0,"index":3198}],"decl_id":null,"docs":" The representation used for the week number.\n","sig":null,"attributes":[{"value":"/ The representation used for the week number.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":128778,"byte_end":128826,"line_start":82,"line_end":82,"column_start":1,"column_end":49}},{"value":"non_exhaustive","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":128827,"byte_end":128844,"line_start":83,"line_end":83,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":3211},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":129232,"byte_end":129242,"line_start":97,"line_end":97,"column_start":12,"column_end":22},"name":"WeekNumber","qualname":"::format_description::modifier::WeekNumber","value":"WeekNumber { padding, repr }","parent":null,"children":[{"krate":0,"index":3212},{"krate":0,"index":3213}],"decl_id":null,"docs":" Week within the year.\n","sig":null,"attributes":[{"value":"/ Week within the year.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":129132,"byte_end":129157,"line_start":94,"line_end":94,"column_start":1,"column_end":26}},{"value":"non_exhaustive","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":129158,"byte_end":129175,"line_start":95,"line_end":95,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":3212},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":129302,"byte_end":129309,"line_start":99,"line_end":99,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::WeekNumber::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":3211},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":129249,"byte_end":129293,"line_start":98,"line_end":98,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":3213},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":129380,"byte_end":129384,"line_start":101,"line_end":101,"column_start":9,"column_end":13},"name":"repr","qualname":"::format_description::modifier::WeekNumber::repr","value":"format_description::modifier::WeekNumberRepr","parent":{"krate":0,"index":3211},"children":[],"decl_id":null,"docs":" What kind of representation should be used?\n","sig":null,"attributes":[{"value":"/ What kind of representation should be used?","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":129324,"byte_end":129371,"line_start":100,"line_end":100,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3227},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":129574,"byte_end":129578,"line_start":109,"line_end":109,"column_start":5,"column_end":9},"name":"Full","qualname":"::format_description::modifier::YearRepr::Full","value":"YearRepr::Full","parent":{"krate":0,"index":3226},"children":[],"decl_id":null,"docs":" The full value of the year.\n","sig":null,"attributes":[{"value":"/ The full value of the year.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":129538,"byte_end":129569,"line_start":108,"line_end":108,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3229},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":129630,"byte_end":129637,"line_start":111,"line_end":111,"column_start":5,"column_end":12},"name":"LastTwo","qualname":"::format_description::modifier::YearRepr::LastTwo","value":"YearRepr::LastTwo","parent":{"krate":0,"index":3226},"children":[],"decl_id":null,"docs":" Only the last two digits of the year.\n","sig":null,"attributes":[{"value":"/ Only the last two digits of the year.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":129584,"byte_end":129625,"line_start":110,"line_end":110,"column_start":5,"column_end":46}}]},{"kind":"Enum","id":{"krate":0,"index":3226},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":129523,"byte_end":129531,"line_start":107,"line_end":107,"column_start":10,"column_end":18},"name":"YearRepr","qualname":"::format_description::modifier::YearRepr","value":"enum YearRepr { Full, LastTwo, }","parent":null,"children":[{"krate":0,"index":3227},{"krate":0,"index":3229}],"decl_id":null,"docs":" The representation used for a year value.\n","sig":null,"attributes":[{"value":"/ The representation used for a year value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":129405,"byte_end":129450,"line_start":104,"line_end":104,"column_start":1,"column_end":46}},{"value":"non_exhaustive","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":129451,"byte_end":129468,"line_start":105,"line_end":105,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":3242},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":129738,"byte_end":129742,"line_start":117,"line_end":117,"column_start":12,"column_end":16},"name":"Year","qualname":"::format_description::modifier::Year","value":"Year { padding, repr, iso_week_based, sign_is_mandatory }","parent":null,"children":[{"krate":0,"index":3243},{"krate":0,"index":3244},{"krate":0,"index":3245},{"krate":0,"index":3246}],"decl_id":null,"docs":" Year of the date.\n","sig":null,"attributes":[{"value":"/ Year of the date.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":129642,"byte_end":129663,"line_start":114,"line_end":114,"column_start":1,"column_end":22}},{"value":"non_exhaustive","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":129664,"byte_end":129681,"line_start":115,"line_end":115,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":3243},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":129802,"byte_end":129809,"line_start":119,"line_end":119,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::Year::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":3242},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":129749,"byte_end":129793,"line_start":118,"line_end":118,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":3244},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":129880,"byte_end":129884,"line_start":121,"line_end":121,"column_start":9,"column_end":13},"name":"repr","qualname":"::format_description::modifier::Year::repr","value":"format_description::modifier::YearRepr","parent":{"krate":0,"index":3242},"children":[],"decl_id":null,"docs":" What kind of representation should be used?\n","sig":null,"attributes":[{"value":"/ What kind of representation should be used?","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":129824,"byte_end":129871,"line_start":120,"line_end":120,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3245},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":129989,"byte_end":130003,"line_start":123,"line_end":123,"column_start":9,"column_end":23},"name":"iso_week_based","qualname":"::format_description::modifier::Year::iso_week_based","value":"bool","parent":{"krate":0,"index":3242},"children":[],"decl_id":null,"docs":" Whether the value is based on the ISO week number or the Gregorian calendar.\n","sig":null,"attributes":[{"value":"/ Whether the value is based on the ISO week number or the Gregorian calendar.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":129900,"byte_end":129980,"line_start":122,"line_end":122,"column_start":5,"column_end":85}}]},{"kind":"Field","id":{"krate":0,"index":3246},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":130113,"byte_end":130130,"line_start":125,"line_end":125,"column_start":9,"column_end":26},"name":"sign_is_mandatory","qualname":"::format_description::modifier::Year::sign_is_mandatory","value":"bool","parent":{"krate":0,"index":3242},"children":[],"decl_id":null,"docs":" Whether the `+` sign is present when a positive year contains fewer than five digits.\n","sig":null,"attributes":[{"value":"/ Whether the `+` sign is present when a positive year contains fewer than five digits.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":130015,"byte_end":130104,"line_start":124,"line_end":124,"column_start":5,"column_end":94}}]},{"kind":"Struct","id":{"krate":0,"index":3259},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":130290,"byte_end":130294,"line_start":133,"line_end":133,"column_start":12,"column_end":16},"name":"Hour","qualname":"::format_description::modifier::Hour","value":"Hour { padding, is_12_hour_clock }","parent":null,"children":[{"krate":0,"index":3260},{"krate":0,"index":3261}],"decl_id":null,"docs":" Hour of the day.\n","sig":null,"attributes":[{"value":"/ Hour of the day.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":130195,"byte_end":130215,"line_start":130,"line_end":130,"column_start":1,"column_end":21}},{"value":"non_exhaustive","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":130216,"byte_end":130233,"line_start":131,"line_end":131,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":3260},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":130354,"byte_end":130361,"line_start":135,"line_end":135,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::Hour::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":3259},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":130301,"byte_end":130345,"line_start":134,"line_end":134,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":3261},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":130439,"byte_end":130455,"line_start":137,"line_end":137,"column_start":9,"column_end":25},"name":"is_12_hour_clock","qualname":"::format_description::modifier::Hour::is_12_hour_clock","value":"bool","parent":{"krate":0,"index":3259},"children":[],"decl_id":null,"docs":" Is the hour displayed using a 12 or 24-hour clock?\n","sig":null,"attributes":[{"value":"/ Is the hour displayed using a 12 or 24-hour clock?","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":130376,"byte_end":130430,"line_start":136,"line_end":136,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":3274},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":130568,"byte_end":130574,"line_start":143,"line_end":143,"column_start":12,"column_end":18},"name":"Minute","qualname":"::format_description::modifier::Minute","value":"Minute { padding }","parent":null,"children":[{"krate":0,"index":3275}],"decl_id":null,"docs":" Minute within the hour.\n","sig":null,"attributes":[{"value":"/ Minute within the hour.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":130466,"byte_end":130493,"line_start":140,"line_end":140,"column_start":1,"column_end":28}},{"value":"non_exhaustive","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":130494,"byte_end":130511,"line_start":141,"line_end":141,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":3275},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":130634,"byte_end":130641,"line_start":145,"line_end":145,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::Minute::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":3274},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":130581,"byte_end":130625,"line_start":144,"line_end":144,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":3288},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":130757,"byte_end":130763,"line_start":151,"line_end":151,"column_start":12,"column_end":18},"name":"Period","qualname":"::format_description::modifier::Period","value":"Period { is_uppercase, case_sensitive }","parent":null,"children":[{"krate":0,"index":3289},{"krate":0,"index":3290}],"decl_id":null,"docs":" AM/PM part of the time.\n","sig":null,"attributes":[{"value":"/ AM/PM part of the time.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":130655,"byte_end":130682,"line_start":148,"line_end":148,"column_start":1,"column_end":28}},{"value":"non_exhaustive","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":130683,"byte_end":130700,"line_start":149,"line_end":149,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":3289},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":130820,"byte_end":130832,"line_start":153,"line_end":153,"column_start":9,"column_end":21},"name":"is_uppercase","qualname":"::format_description::modifier::Period::is_uppercase","value":"bool","parent":{"krate":0,"index":3288},"children":[],"decl_id":null,"docs":" Is the period uppercase or lowercase?\n","sig":null,"attributes":[{"value":"/ Is the period uppercase or lowercase?","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":130770,"byte_end":130811,"line_start":152,"line_end":152,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":3290},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":130998,"byte_end":131012,"line_start":157,"line_end":157,"column_start":9,"column_end":23},"name":"case_sensitive","qualname":"::format_description::modifier::Period::case_sensitive","value":"bool","parent":{"krate":0,"index":3288},"children":[],"decl_id":null,"docs":" Is the value case sensitive when parsing?","sig":null,"attributes":[{"value":"/ Is the value case sensitive when parsing?","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":130844,"byte_end":130889,"line_start":154,"line_end":154,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":130894,"byte_end":130897,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ Note that when `false`, the `is_uppercase` field has no effect on parsing behavior.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":130902,"byte_end":130989,"line_start":156,"line_end":156,"column_start":5,"column_end":92}}]},{"kind":"Struct","id":{"krate":0,"index":3303},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":131127,"byte_end":131133,"line_start":163,"line_end":163,"column_start":12,"column_end":18},"name":"Second","qualname":"::format_description::modifier::Second","value":"Second { padding }","parent":null,"children":[{"krate":0,"index":3304}],"decl_id":null,"docs":" Second within the minute.\n","sig":null,"attributes":[{"value":"/ Second within the minute.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":131023,"byte_end":131052,"line_start":160,"line_end":160,"column_start":1,"column_end":30}},{"value":"non_exhaustive","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":131053,"byte_end":131070,"line_start":161,"line_end":161,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":3304},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":131193,"byte_end":131200,"line_start":165,"line_end":165,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::Second::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":3303},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":131140,"byte_end":131184,"line_start":164,"line_end":164,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3318},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":131399,"byte_end":131402,"line_start":173,"line_end":173,"column_start":5,"column_end":8},"name":"One","qualname":"::format_description::modifier::SubsecondDigits::One","value":"SubsecondDigits::One","parent":{"krate":0,"index":3317},"children":[],"decl_id":null,"docs":" Exactly one digit.\n","sig":null,"attributes":[{"value":"/ Exactly one digit.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":131372,"byte_end":131394,"line_start":172,"line_end":172,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3320},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":131436,"byte_end":131439,"line_start":175,"line_end":175,"column_start":5,"column_end":8},"name":"Two","qualname":"::format_description::modifier::SubsecondDigits::Two","value":"SubsecondDigits::Two","parent":{"krate":0,"index":3317},"children":[],"decl_id":null,"docs":" Exactly two digits.\n","sig":null,"attributes":[{"value":"/ Exactly two digits.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":131408,"byte_end":131431,"line_start":174,"line_end":174,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3322},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":131475,"byte_end":131480,"line_start":177,"line_end":177,"column_start":5,"column_end":10},"name":"Three","qualname":"::format_description::modifier::SubsecondDigits::Three","value":"SubsecondDigits::Three","parent":{"krate":0,"index":3317},"children":[],"decl_id":null,"docs":" Exactly three digits.\n","sig":null,"attributes":[{"value":"/ Exactly three digits.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":131445,"byte_end":131470,"line_start":176,"line_end":176,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3324},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":131515,"byte_end":131519,"line_start":179,"line_end":179,"column_start":5,"column_end":9},"name":"Four","qualname":"::format_description::modifier::SubsecondDigits::Four","value":"SubsecondDigits::Four","parent":{"krate":0,"index":3317},"children":[],"decl_id":null,"docs":" Exactly four digits.\n","sig":null,"attributes":[{"value":"/ Exactly four digits.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":131486,"byte_end":131510,"line_start":178,"line_end":178,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3326},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":131554,"byte_end":131558,"line_start":181,"line_end":181,"column_start":5,"column_end":9},"name":"Five","qualname":"::format_description::modifier::SubsecondDigits::Five","value":"SubsecondDigits::Five","parent":{"krate":0,"index":3317},"children":[],"decl_id":null,"docs":" Exactly five digits.\n","sig":null,"attributes":[{"value":"/ Exactly five digits.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":131525,"byte_end":131549,"line_start":180,"line_end":180,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3328},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":131592,"byte_end":131595,"line_start":183,"line_end":183,"column_start":5,"column_end":8},"name":"Six","qualname":"::format_description::modifier::SubsecondDigits::Six","value":"SubsecondDigits::Six","parent":{"krate":0,"index":3317},"children":[],"decl_id":null,"docs":" Exactly six digits.\n","sig":null,"attributes":[{"value":"/ Exactly six digits.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":131564,"byte_end":131587,"line_start":182,"line_end":182,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3330},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":131631,"byte_end":131636,"line_start":185,"line_end":185,"column_start":5,"column_end":10},"name":"Seven","qualname":"::format_description::modifier::SubsecondDigits::Seven","value":"SubsecondDigits::Seven","parent":{"krate":0,"index":3317},"children":[],"decl_id":null,"docs":" Exactly seven digits.\n","sig":null,"attributes":[{"value":"/ Exactly seven digits.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":131601,"byte_end":131626,"line_start":184,"line_end":184,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3332},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":131672,"byte_end":131677,"line_start":187,"line_end":187,"column_start":5,"column_end":10},"name":"Eight","qualname":"::format_description::modifier::SubsecondDigits::Eight","value":"SubsecondDigits::Eight","parent":{"krate":0,"index":3317},"children":[],"decl_id":null,"docs":" Exactly eight digits.\n","sig":null,"attributes":[{"value":"/ Exactly eight digits.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":131642,"byte_end":131667,"line_start":186,"line_end":186,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3334},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":131712,"byte_end":131716,"line_start":189,"line_end":189,"column_start":5,"column_end":9},"name":"Nine","qualname":"::format_description::modifier::SubsecondDigits::Nine","value":"SubsecondDigits::Nine","parent":{"krate":0,"index":3317},"children":[],"decl_id":null,"docs":" Exactly nine digits.\n","sig":null,"attributes":[{"value":"/ Exactly nine digits.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":131683,"byte_end":131707,"line_start":188,"line_end":188,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3336},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":131854,"byte_end":131863,"line_start":192,"line_end":192,"column_start":5,"column_end":14},"name":"OneOrMore","qualname":"::format_description::modifier::SubsecondDigits::OneOrMore","value":"SubsecondDigits::OneOrMore","parent":{"krate":0,"index":3317},"children":[],"decl_id":null,"docs":" Any number of digits (up to nine) that is at least one. When formatting, the minimum digits\n necessary will be used.\n","sig":null,"attributes":[{"value":"/ Any number of digits (up to nine) that is at least one. When formatting, the minimum digits","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":131722,"byte_end":131817,"line_start":190,"line_end":190,"column_start":5,"column_end":100}},{"value":"/ necessary will be used.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":131822,"byte_end":131849,"line_start":191,"line_end":191,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":3317},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":131350,"byte_end":131365,"line_start":171,"line_end":171,"column_start":10,"column_end":25},"name":"SubsecondDigits","qualname":"::format_description::modifier::SubsecondDigits","value":"enum SubsecondDigits {\n    One,\n    Two,\n    Three,\n    Four,\n    Five,\n    Six,\n    Seven,\n    Eight,\n    Nine,\n    OneOrMore,\n}","parent":null,"children":[{"krate":0,"index":3318},{"krate":0,"index":3320},{"krate":0,"index":3322},{"krate":0,"index":3324},{"krate":0,"index":3326},{"krate":0,"index":3328},{"krate":0,"index":3330},{"krate":0,"index":3332},{"krate":0,"index":3334},{"krate":0,"index":3336}],"decl_id":null,"docs":" The number of digits present in a subsecond representation.\n","sig":null,"attributes":[{"value":"/ The number of digits present in a subsecond representation.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":131214,"byte_end":131277,"line_start":168,"line_end":168,"column_start":1,"column_end":64}},{"value":"non_exhaustive","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":131278,"byte_end":131295,"line_start":169,"line_end":169,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":3349},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":131975,"byte_end":131984,"line_start":198,"line_end":198,"column_start":12,"column_end":21},"name":"Subsecond","qualname":"::format_description::modifier::Subsecond","value":"Subsecond { digits }","parent":null,"children":[{"krate":0,"index":3350}],"decl_id":null,"docs":" Subsecond within the second.\n","sig":null,"attributes":[{"value":"/ Subsecond within the second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":131868,"byte_end":131900,"line_start":195,"line_end":195,"column_start":1,"column_end":33}},{"value":"non_exhaustive","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":131901,"byte_end":131918,"line_start":196,"line_end":196,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":3350},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":132049,"byte_end":132055,"line_start":200,"line_end":200,"column_start":9,"column_end":15},"name":"digits","qualname":"::format_description::modifier::Subsecond::digits","value":"format_description::modifier::SubsecondDigits","parent":{"krate":0,"index":3349},"children":[],"decl_id":null,"docs":" How many digits are present in the component?\n","sig":null,"attributes":[{"value":"/ How many digits are present in the component?","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":131991,"byte_end":132040,"line_start":199,"line_end":199,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":3363},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":132235,"byte_end":132245,"line_start":208,"line_end":208,"column_start":12,"column_end":22},"name":"OffsetHour","qualname":"::format_description::modifier::OffsetHour","value":"OffsetHour { sign_is_mandatory, padding }","parent":null,"children":[{"krate":0,"index":3364},{"krate":0,"index":3365}],"decl_id":null,"docs":" Hour of the UTC offset.\n","sig":null,"attributes":[{"value":"/ Hour of the UTC offset.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":132133,"byte_end":132160,"line_start":205,"line_end":205,"column_start":1,"column_end":28}},{"value":"non_exhaustive","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":132161,"byte_end":132178,"line_start":206,"line_end":206,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":3364},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":132316,"byte_end":132333,"line_start":210,"line_end":210,"column_start":9,"column_end":26},"name":"sign_is_mandatory","qualname":"::format_description::modifier::OffsetHour::sign_is_mandatory","value":"bool","parent":{"krate":0,"index":3363},"children":[],"decl_id":null,"docs":" Whether the `+` sign is present on positive values.\n","sig":null,"attributes":[{"value":"/ Whether the `+` sign is present on positive values.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":132252,"byte_end":132307,"line_start":209,"line_end":209,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":3365},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":132398,"byte_end":132405,"line_start":212,"line_end":212,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::OffsetHour::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":3363},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":132345,"byte_end":132389,"line_start":211,"line_end":211,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":3378},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":132539,"byte_end":132551,"line_start":218,"line_end":218,"column_start":12,"column_end":24},"name":"OffsetMinute","qualname":"::format_description::modifier::OffsetMinute","value":"OffsetMinute { padding }","parent":null,"children":[{"krate":0,"index":3379}],"decl_id":null,"docs":" Minute within the hour of the UTC offset.\n","sig":null,"attributes":[{"value":"/ Minute within the hour of the UTC offset.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":132419,"byte_end":132464,"line_start":215,"line_end":215,"column_start":1,"column_end":46}},{"value":"non_exhaustive","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":132465,"byte_end":132482,"line_start":216,"line_end":216,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":3379},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":132611,"byte_end":132618,"line_start":220,"line_end":220,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::OffsetMinute::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":3378},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":132558,"byte_end":132602,"line_start":219,"line_end":219,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":3392},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":132754,"byte_end":132766,"line_start":226,"line_end":226,"column_start":12,"column_end":24},"name":"OffsetSecond","qualname":"::format_description::modifier::OffsetSecond","value":"OffsetSecond { padding }","parent":null,"children":[{"krate":0,"index":3393}],"decl_id":null,"docs":" Second within the minute of the UTC offset.\n","sig":null,"attributes":[{"value":"/ Second within the minute of the UTC offset.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":132632,"byte_end":132679,"line_start":223,"line_end":223,"column_start":1,"column_end":48}},{"value":"non_exhaustive","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":132680,"byte_end":132697,"line_start":224,"line_end":224,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":3393},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":132826,"byte_end":132833,"line_start":228,"line_end":228,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::OffsetSecond::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":3392},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":132773,"byte_end":132817,"line_start":227,"line_end":227,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3407},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":133069,"byte_end":133074,"line_start":237,"line_end":237,"column_start":5,"column_end":10},"name":"Space","qualname":"::format_description::modifier::Padding::Space","value":"Padding::Space","parent":{"krate":0,"index":3406},"children":[],"decl_id":null,"docs":" A space character (` `) should be used as padding.\n","sig":null,"attributes":[{"value":"/ A space character (` `) should be used as padding.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":133010,"byte_end":133064,"line_start":236,"line_end":236,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3409},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":133138,"byte_end":133142,"line_start":239,"line_end":239,"column_start":5,"column_end":9},"name":"Zero","qualname":"::format_description::modifier::Padding::Zero","value":"Padding::Zero","parent":{"krate":0,"index":3406},"children":[],"decl_id":null,"docs":" A zero character (`0`) should be used as padding.\n","sig":null,"attributes":[{"value":"/ A zero character (`0`) should be used as padding.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":133080,"byte_end":133133,"line_start":238,"line_end":238,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3411},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":133262,"byte_end":133266,"line_start":242,"line_end":242,"column_start":5,"column_end":9},"name":"None","qualname":"::format_description::modifier::Padding::None","value":"Padding::None","parent":{"krate":0,"index":3406},"children":[],"decl_id":null,"docs":" There is no padding. This can result in a width below the otherwise minimum number of\n characters.\n","sig":null,"attributes":[{"value":"/ There is no padding. This can result in a width below the otherwise minimum number of","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":133148,"byte_end":133237,"line_start":240,"line_end":240,"column_start":5,"column_end":94}},{"value":"/ characters.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":133242,"byte_end":133257,"line_start":241,"line_end":241,"column_start":5,"column_end":20}}]},{"kind":"Enum","id":{"krate":0,"index":3406},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":132996,"byte_end":133003,"line_start":235,"line_end":235,"column_start":10,"column_end":17},"name":"Padding","qualname":"::format_description::modifier::Padding","value":"enum Padding { Space, Zero, None, }","parent":null,"children":[{"krate":0,"index":3407},{"krate":0,"index":3409},{"krate":0,"index":3411}],"decl_id":null,"docs":" Type of padding to ensure a minimum width.\n","sig":null,"attributes":[{"value":"/ Type of padding to ensure a minimum width.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":132877,"byte_end":132923,"line_start":232,"line_end":232,"column_start":1,"column_end":47}},{"value":"non_exhaustive","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":132924,"byte_end":132941,"line_start":233,"line_end":233,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":692},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/parse.rs","byte_start":148897,"byte_end":148902,"line_start":84,"line_end":84,"column_start":8,"column_end":13},"name":"parse","qualname":"::format_description::parse::parse","value":"fn parse(&str) -> Result<Vec<FormatItem>, InvalidFormatDescription>","parent":null,"children":[],"decl_id":null,"docs":" Parse a sequence of items from the format description.","sig":null,"attributes":[{"value":"/ Parse a sequence of items from the format description.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/parse.rs","byte_start":148636,"byte_end":148694,"line_start":79,"line_end":79,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/parse.rs","byte_start":148695,"byte_end":148698,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ The syntax for the format description can be found in [the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/parse.rs","byte_start":148699,"byte_end":148761,"line_start":81,"line_end":81,"column_start":1,"column_end":63}},{"value":"/ book](https://time-rs.github.io/book/api/format-description.html).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/parse.rs","byte_start":148762,"byte_end":148832,"line_start":82,"line_end":82,"column_start":1,"column_end":71}}]},{"kind":"Mod","id":{"krate":0,"index":712},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","byte_start":116615,"byte_end":116625,"line_start":39,"line_end":39,"column_start":9,"column_end":19},"name":"well_known","qualname":"::format_description::well_known","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","parent":null,"children":[{"krate":0,"index":713},{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":783},{"krate":0,"index":784},{"krate":0,"index":786},{"krate":0,"index":787},{"krate":0,"index":789},{"krate":0,"index":790}],"decl_id":null,"docs":" Well-known formats, typically standards.\n","sig":null,"attributes":[{"value":"/ Well-known formats, typically standards.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","byte_start":116562,"byte_end":116606,"line_start":38,"line_end":38,"column_start":1,"column_end":45}}]},{"kind":"Mod","id":{"krate":0,"index":713},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"iso8601","qualname":"::format_description::well_known::iso8601","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","parent":null,"children":[{"krate":0,"index":714},{"krate":0,"index":754},{"krate":0,"index":757},{"krate":0,"index":758},{"krate":0,"index":761},{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":3522},{"krate":0,"index":3526},{"krate":0,"index":3531},{"krate":0,"index":3534},{"krate":0,"index":3537},{"krate":0,"index":3542},{"krate":0,"index":3545},{"krate":0,"index":766},{"krate":0,"index":769},{"krate":0,"index":771},{"krate":0,"index":3549},{"krate":0,"index":3564},{"krate":0,"index":3566},{"krate":0,"index":3568},{"krate":0,"index":3569},{"krate":0,"index":3570},{"krate":0,"index":3572},{"krate":0,"index":3573},{"krate":0,"index":3575},{"krate":0,"index":3582},{"krate":0,"index":3584},{"krate":0,"index":3586},{"krate":0,"index":3587},{"krate":0,"index":3588},{"krate":0,"index":3590},{"krate":0,"index":3591},{"krate":0,"index":3593},{"krate":0,"index":3600},{"krate":0,"index":3602},{"krate":0,"index":3604},{"krate":0,"index":3605},{"krate":0,"index":3606},{"krate":0,"index":3609},{"krate":0,"index":3610},{"krate":0,"index":3612},{"krate":0,"index":3617},{"krate":0,"index":3619},{"krate":0,"index":3621},{"krate":0,"index":3622},{"krate":0,"index":3623},{"krate":0,"index":3625},{"krate":0,"index":3626},{"krate":0,"index":3628},{"krate":0,"index":3635},{"krate":0,"index":773}],"decl_id":null,"docs":" The format described in ISO 8601.\n","sig":null,"attributes":[{"value":"/ The format described in ISO 8601.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":149235,"byte_end":149272,"line_start":1,"line_end":1,"column_start":1,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":737},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601/adt_hack.rs","byte_start":157536,"byte_end":157557,"line_start":12,"line_end":12,"column_start":10,"column_end":31},"name":"DoNotRelyOnWhatThisIs","qualname":"::format_description::well_known::iso8601::adt_hack::DoNotRelyOnWhatThisIs","value":"u128","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":738},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601/adt_hack.rs","byte_start":157766,"byte_end":157779,"line_start":18,"line_end":18,"column_start":10,"column_end":23},"name":"EncodedConfig","qualname":"::format_description::well_known::iso8601::adt_hack::EncodedConfig","value":"DoNotRelyOnWhatThisIs","parent":null,"children":[],"decl_id":null,"docs":" An encoded [`Config`] that can be used as a const parameter to [`Iso8601`].","sig":null,"attributes":[{"value":"/ An encoded [`Config`] that can be used as a const parameter to [`Iso8601`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601/adt_hack.rs","byte_start":157567,"byte_end":157646,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601/adt_hack.rs","byte_start":157647,"byte_end":157650,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The type this is aliased to must not be relied upon. It can change in any release without","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601/adt_hack.rs","byte_start":157651,"byte_end":157744,"line_start":16,"line_end":16,"column_start":1,"column_end":94}},{"value":"/ notice.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601/adt_hack.rs","byte_start":157745,"byte_end":157756,"line_start":17,"line_end":17,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":751},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601/adt_hack.rs","byte_start":159574,"byte_end":159580,"line_start":56,"line_end":56,"column_start":18,"column_end":24},"name":"encode","qualname":"<Config>::encode","value":"const fn encode(&Self) -> EncodedConfig","parent":null,"children":[],"decl_id":null,"docs":" Encode the configuration, permitting it to be used as a const parameter of [`Iso8601`].","sig":null,"attributes":[{"value":"/ Encode the configuration, permitting it to be used as a const parameter of [`Iso8601`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601/adt_hack.rs","byte_start":159311,"byte_end":159402,"line_start":52,"line_end":52,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601/adt_hack.rs","byte_start":159407,"byte_end":159410,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ The value returned by this method must only be used as a const parameter to [`Iso8601`]. Any","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601/adt_hack.rs","byte_start":159415,"byte_end":159511,"line_start":54,"line_end":54,"column_start":5,"column_end":101}},{"value":"/ other usage is unspecified behavior.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601/adt_hack.rs","byte_start":159516,"byte_end":159556,"line_start":55,"line_end":55,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":3522},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":150639,"byte_end":150646,"line_start":46,"line_end":46,"column_start":12,"column_end":19},"name":"Iso8601","qualname":"::format_description::well_known::iso8601::Iso8601","value":"","parent":null,"children":[],"decl_id":null,"docs":" The format described in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html).","sig":null,"attributes":[{"value":"/ The format described in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":149883,"byte_end":149978,"line_start":25,"line_end":25,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":149979,"byte_end":149982,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ This implementation is of ISO 8601-1:2019. It may not be compatible with other versions.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":149983,"byte_end":150075,"line_start":27,"line_end":27,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":150076,"byte_end":150079,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The const parameter `CONFIG` **must** be a value that was returned by [`Config::encode`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":150080,"byte_end":150173,"line_start":29,"line_end":29,"column_start":1,"column_end":94}},{"value":"/ Passing any other value is **unspecified behavior**.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":150174,"byte_end":150230,"line_start":30,"line_end":30,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":150231,"byte_end":150234,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Example: 1997-11-21T09:55:06.000000000-06:00","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":150235,"byte_end":150283,"line_start":32,"line_end":32,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":150284,"byte_end":150287,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":150288,"byte_end":150302,"line_start":34,"line_end":34,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":150303,"byte_end":150306,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":150307,"byte_end":150318,"line_start":36,"line_end":36,"column_start":1,"column_end":12}},{"value":"/ # use time::format_description::well_known::Iso8601;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":150319,"byte_end":150375,"line_start":37,"line_end":37,"column_start":1,"column_end":57}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":150376,"byte_end":150409,"line_start":38,"line_end":38,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":150410,"byte_end":150425,"line_start":39,"line_end":39,"column_start":1,"column_end":16}},{"value":"/     datetime!(1997-11-12 9:55:06 -6:00).format(&Iso8601::DEFAULT)?,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":150426,"byte_end":150497,"line_start":40,"line_end":40,"column_start":1,"column_end":72}},{"value":"/     \"1997-11-12T09:55:06.000000000-06:00\"","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":150498,"byte_end":150543,"line_start":41,"line_end":41,"column_start":1,"column_end":46}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":150544,"byte_end":150550,"line_start":42,"line_end":42,"column_start":1,"column_end":7}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":150551,"byte_end":150581,"line_start":43,"line_end":43,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":150582,"byte_end":150589,"line_start":44,"line_end":44,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":768},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":150775,"byte_end":150778,"line_start":49,"line_end":49,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Iso8601<CONFIG> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut core::fmt::Formatter) -> core::fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":770},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":151713,"byte_end":151720,"line_start":71,"line_end":71,"column_start":15,"column_end":22},"name":"DEFAULT","qualname":"::format_description::well_known::iso8601::Iso8601::<DEFAULT_CONFIG>::DEFAULT","value":"Self","parent":{"krate":0,"index":769},"children":[],"decl_id":null,"docs":" An [`Iso8601`] with the default configuration.","sig":null,"attributes":[{"value":"/ An [`Iso8601`] with the default configuration.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":150997,"byte_end":151047,"line_start":57,"line_end":57,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":151052,"byte_end":151055,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ The following is the default behavior:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":151060,"byte_end":151102,"line_start":59,"line_end":59,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":151107,"byte_end":151110,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ - The configuration can be used for both formatting and parsing.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":151115,"byte_end":151183,"line_start":61,"line_end":61,"column_start":5,"column_end":73}},{"value":"/ - The date, time, and UTC offset are all formatted.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":151188,"byte_end":151243,"line_start":62,"line_end":62,"column_start":5,"column_end":60}},{"value":"/ - Separators (such as `-` and `:`) are included.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":151248,"byte_end":151300,"line_start":63,"line_end":63,"column_start":5,"column_end":57}},{"value":"/ - The year contains four digits, such that the year must be between 0 and 9999.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":151305,"byte_end":151388,"line_start":64,"line_end":64,"column_start":5,"column_end":88}},{"value":"/ - The date uses the calendar format.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":151393,"byte_end":151433,"line_start":65,"line_end":65,"column_start":5,"column_end":45}},{"value":"/ - The time has precision to the second and nine decimal digits.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":151438,"byte_end":151505,"line_start":66,"line_end":66,"column_start":5,"column_end":72}},{"value":"/ - The UTC offset has precision to the minute.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":151510,"byte_end":151559,"line_start":67,"line_end":67,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":151564,"byte_end":151567,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ If you need different behavior, use [`Config::DEFAULT`] and [`Config`]'s methods to create","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":151572,"byte_end":151666,"line_start":69,"line_end":69,"column_start":5,"column_end":99}},{"value":"/ a custom configuration.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":151671,"byte_end":151698,"line_start":70,"line_end":70,"column_start":5,"column_end":32}}]},{"kind":"Const","id":{"krate":0,"index":772},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":151901,"byte_end":151908,"line_start":77,"line_end":77,"column_start":15,"column_end":22},"name":"PARSING","qualname":"::format_description::well_known::iso8601::Iso8601::<PARSING_ONLY>::PARSING","value":"Self","parent":{"krate":0,"index":771},"children":[],"decl_id":null,"docs":" An [`Iso8601`] that can only be used for parsing. Using this to format a value is\n unspecified behavior.\n","sig":null,"attributes":[{"value":"/ An [`Iso8601`] that can only be used for parsing. Using this to format a value is","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":151771,"byte_end":151856,"line_start":75,"line_end":75,"column_start":5,"column_end":90}},{"value":"/ unspecified behavior.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":151861,"byte_end":151886,"line_start":76,"line_end":76,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3550},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":152156,"byte_end":152160,"line_start":85,"line_end":85,"column_start":5,"column_end":9},"name":"None","qualname":"::format_description::well_known::iso8601::FormattedComponents::None","value":"FormattedComponents::None","parent":{"krate":0,"index":3549},"children":[],"decl_id":null,"docs":" The configuration can only be used for parsing. Using this to format a value is\n unspecified behavior.\n","sig":null,"attributes":[{"value":"/ The configuration can only be used for parsing. Using this to format a value is","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":152038,"byte_end":152121,"line_start":83,"line_end":83,"column_start":5,"column_end":88}},{"value":"/ unspecified behavior.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":152126,"byte_end":152151,"line_start":84,"line_end":84,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3552},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":152196,"byte_end":152200,"line_start":87,"line_end":87,"column_start":5,"column_end":9},"name":"Date","qualname":"::format_description::well_known::iso8601::FormattedComponents::Date","value":"FormattedComponents::Date","parent":{"krate":0,"index":3549},"children":[],"decl_id":null,"docs":" Format only the date.\n","sig":null,"attributes":[{"value":"/ Format only the date.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":152166,"byte_end":152191,"line_start":86,"line_end":86,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3554},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":152236,"byte_end":152240,"line_start":89,"line_end":89,"column_start":5,"column_end":9},"name":"Time","qualname":"::format_description::well_known::iso8601::FormattedComponents::Time","value":"FormattedComponents::Time","parent":{"krate":0,"index":3549},"children":[],"decl_id":null,"docs":" Format only the time.\n","sig":null,"attributes":[{"value":"/ Format only the time.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":152206,"byte_end":152231,"line_start":88,"line_end":88,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3556},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":152282,"byte_end":152288,"line_start":91,"line_end":91,"column_start":5,"column_end":11},"name":"Offset","qualname":"::format_description::well_known::iso8601::FormattedComponents::Offset","value":"FormattedComponents::Offset","parent":{"krate":0,"index":3549},"children":[],"decl_id":null,"docs":" Format only the UTC offset.\n","sig":null,"attributes":[{"value":"/ Format only the UTC offset.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":152246,"byte_end":152277,"line_start":90,"line_end":90,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3558},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":152328,"byte_end":152336,"line_start":93,"line_end":93,"column_start":5,"column_end":13},"name":"DateTime","qualname":"::format_description::well_known::iso8601::FormattedComponents::DateTime","value":"FormattedComponents::DateTime","parent":{"krate":0,"index":3549},"children":[],"decl_id":null,"docs":" Format the date and time.\n","sig":null,"attributes":[{"value":"/ Format the date and time.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":152294,"byte_end":152323,"line_start":92,"line_end":92,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3560},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":152389,"byte_end":152403,"line_start":95,"line_end":95,"column_start":5,"column_end":19},"name":"DateTimeOffset","qualname":"::format_description::well_known::iso8601::FormattedComponents::DateTimeOffset","value":"FormattedComponents::DateTimeOffset","parent":{"krate":0,"index":3549},"children":[],"decl_id":null,"docs":" Format the date, time, and UTC offset.\n","sig":null,"attributes":[{"value":"/ Format the date, time, and UTC offset.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":152342,"byte_end":152384,"line_start":94,"line_end":94,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3562},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":152449,"byte_end":152459,"line_start":97,"line_end":97,"column_start":5,"column_end":15},"name":"TimeOffset","qualname":"::format_description::well_known::iso8601::FormattedComponents::TimeOffset","value":"FormattedComponents::TimeOffset","parent":{"krate":0,"index":3549},"children":[],"decl_id":null,"docs":" Format the time and UTC offset.\n","sig":null,"attributes":[{"value":"/ Format the time and UTC offset.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":152409,"byte_end":152444,"line_start":96,"line_end":96,"column_start":5,"column_end":40}}]},{"kind":"Enum","id":{"krate":0,"index":3549},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":152012,"byte_end":152031,"line_start":82,"line_end":82,"column_start":10,"column_end":29},"name":"FormattedComponents","qualname":"::format_description::well_known::iso8601::FormattedComponents","value":"enum FormattedComponents {\n    None,\n    Date,\n    Time,\n    Offset,\n    DateTime,\n    DateTimeOffset,\n    TimeOffset,\n}","parent":null,"children":[{"krate":0,"index":3550},{"krate":0,"index":3552},{"krate":0,"index":3554},{"krate":0,"index":3556},{"krate":0,"index":3558},{"krate":0,"index":3560},{"krate":0,"index":3562}],"decl_id":null,"docs":" Which components to format.\n","sig":null,"attributes":[{"value":"/ Which components to format.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":151926,"byte_end":151957,"line_start":80,"line_end":80,"column_start":1,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3576},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":152610,"byte_end":152618,"line_start":104,"line_end":104,"column_start":5,"column_end":13},"name":"Calendar","qualname":"::format_description::well_known::iso8601::DateKind::Calendar","value":"DateKind::Calendar","parent":{"krate":0,"index":3575},"children":[],"decl_id":null,"docs":" Use the year-month-day format.\n","sig":null,"attributes":[{"value":"/ Use the year-month-day format.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":152571,"byte_end":152605,"line_start":103,"line_end":103,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3578},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":152666,"byte_end":152670,"line_start":106,"line_end":106,"column_start":5,"column_end":9},"name":"Week","qualname":"::format_description::well_known::iso8601::DateKind::Week","value":"DateKind::Week","parent":{"krate":0,"index":3575},"children":[],"decl_id":null,"docs":" Use the year-week-weekday format.\n","sig":null,"attributes":[{"value":"/ Use the year-week-weekday format.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":152624,"byte_end":152661,"line_start":105,"line_end":105,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3580},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":152713,"byte_end":152720,"line_start":108,"line_end":108,"column_start":5,"column_end":12},"name":"Ordinal","qualname":"::format_description::well_known::iso8601::DateKind::Ordinal","value":"DateKind::Ordinal","parent":{"krate":0,"index":3575},"children":[],"decl_id":null,"docs":" Use the week-ordinal format.\n","sig":null,"attributes":[{"value":"/ Use the week-ordinal format.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":152676,"byte_end":152708,"line_start":107,"line_end":107,"column_start":5,"column_end":37}}]},{"kind":"Enum","id":{"krate":0,"index":3575},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":152556,"byte_end":152564,"line_start":102,"line_end":102,"column_start":10,"column_end":18},"name":"DateKind","qualname":"::format_description::well_known::iso8601::DateKind","value":"enum DateKind { Calendar, Week, Ordinal, }","parent":null,"children":[{"krate":0,"index":3576},{"krate":0,"index":3578},{"krate":0,"index":3580}],"decl_id":null,"docs":" Which format to use for the date.\n","sig":null,"attributes":[{"value":"/ Which format to use for the date.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":152464,"byte_end":152501,"line_start":100,"line_end":100,"column_start":1,"column_end":38}}]},{"kind":"StructVariant","id":{"krate":0,"index":3594},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":153013,"byte_end":153017,"line_start":116,"line_end":116,"column_start":5,"column_end":9},"name":"Hour","qualname":"::format_description::well_known::iso8601::TimePrecision::Hour","value":"TimePrecision::Hour { decimal_digits }","parent":{"krate":0,"index":3593},"children":[],"decl_id":null,"docs":" Format the hour only. Minutes, seconds, and nanoseconds will be represented with the\n specified number of decimal digits, if any.\n","sig":null,"attributes":[{"value":"/ Format the hour only. Minutes, seconds, and nanoseconds will be represented with the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":152868,"byte_end":152956,"line_start":114,"line_end":114,"column_start":5,"column_end":93}},{"value":"/ specified number of decimal digits, if any.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":152961,"byte_end":153008,"line_start":115,"line_end":115,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3595},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":153084,"byte_end":153098,"line_start":118,"line_end":118,"column_start":9,"column_end":23},"name":"decimal_digits","qualname":"::format_description::well_known::iso8601::TimePrecision::Hour::decimal_digits","value":"std::option::Option<std::num::NonZeroU8>","parent":{"krate":0,"index":3594},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":153028,"byte_end":153075,"line_start":117,"line_end":117,"column_start":9,"column_end":56}}]},{"kind":"StructVariant","id":{"krate":0,"index":3596},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":153271,"byte_end":153277,"line_start":122,"line_end":122,"column_start":5,"column_end":11},"name":"Minute","qualname":"::format_description::well_known::iso8601::TimePrecision::Minute","value":"TimePrecision::Minute { decimal_digits }","parent":{"krate":0,"index":3593},"children":[],"decl_id":null,"docs":" Format the hour and minute. Seconds and nanoseconds will be represented with the specified\n number of decimal digits, if any.\n","sig":null,"attributes":[{"value":"/ Format the hour and minute. Seconds and nanoseconds will be represented with the specified","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":153130,"byte_end":153224,"line_start":120,"line_end":120,"column_start":5,"column_end":99}},{"value":"/ number of decimal digits, if any.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":153229,"byte_end":153266,"line_start":121,"line_end":121,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":3597},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":153344,"byte_end":153358,"line_start":124,"line_end":124,"column_start":9,"column_end":23},"name":"decimal_digits","qualname":"::format_description::well_known::iso8601::TimePrecision::Minute::decimal_digits","value":"std::option::Option<std::num::NonZeroU8>","parent":{"krate":0,"index":3596},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":153288,"byte_end":153335,"line_start":123,"line_end":123,"column_start":9,"column_end":56}}]},{"kind":"StructVariant","id":{"krate":0,"index":3598},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":153528,"byte_end":153534,"line_start":128,"line_end":128,"column_start":5,"column_end":11},"name":"Second","qualname":"::format_description::well_known::iso8601::TimePrecision::Second","value":"TimePrecision::Second { decimal_digits }","parent":{"krate":0,"index":3593},"children":[],"decl_id":null,"docs":" Format the hour, minute, and second. Nanoseconds will be represented with the specified\n number of decimal digits, if any.\n","sig":null,"attributes":[{"value":"/ Format the hour, minute, and second. Nanoseconds will be represented with the specified","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":153390,"byte_end":153481,"line_start":126,"line_end":126,"column_start":5,"column_end":96}},{"value":"/ number of decimal digits, if any.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":153486,"byte_end":153523,"line_start":127,"line_end":127,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":3599},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":153601,"byte_end":153615,"line_start":130,"line_end":130,"column_start":9,"column_end":23},"name":"decimal_digits","qualname":"::format_description::well_known::iso8601::TimePrecision::Second::decimal_digits","value":"std::option::Option<std::num::NonZeroU8>","parent":{"krate":0,"index":3598},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":153545,"byte_end":153592,"line_start":129,"line_end":129,"column_start":9,"column_end":56}}]},{"kind":"Enum","id":{"krate":0,"index":3593},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":152848,"byte_end":152861,"line_start":113,"line_end":113,"column_start":10,"column_end":23},"name":"TimePrecision","qualname":"::format_description::well_known::iso8601::TimePrecision","value":"enum TimePrecision {\n    Hour {\n            decimal_digits: Option<NonZeroU8>,\n        },\n    Minute {\n            decimal_digits: Option<NonZeroU8>,\n        },\n    Second {\n            decimal_digits: Option<NonZeroU8>,\n        },\n}","parent":null,"children":[{"krate":0,"index":3594},{"krate":0,"index":3596},{"krate":0,"index":3598}],"decl_id":null,"docs":" The precision and number of decimal digits present for the time.\n","sig":null,"attributes":[{"value":"/ The precision and number of decimal digits present for the time.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":152725,"byte_end":152793,"line_start":111,"line_end":111,"column_start":1,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3613},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":153836,"byte_end":153840,"line_start":138,"line_end":138,"column_start":5,"column_end":9},"name":"Hour","qualname":"::format_description::well_known::iso8601::OffsetPrecision::Hour","value":"OffsetPrecision::Hour","parent":{"krate":0,"index":3612},"children":[],"decl_id":null,"docs":" Format only the offset hour. Requires the offset minute to be zero.\n","sig":null,"attributes":[{"value":"/ Format only the offset hour. Requires the offset minute to be zero.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":153760,"byte_end":153831,"line_start":137,"line_end":137,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3615},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":153894,"byte_end":153900,"line_start":140,"line_end":140,"column_start":5,"column_end":11},"name":"Minute","qualname":"::format_description::well_known::iso8601::OffsetPrecision::Minute","value":"OffsetPrecision::Minute","parent":{"krate":0,"index":3612},"children":[],"decl_id":null,"docs":" Format both the offset hour and minute.\n","sig":null,"attributes":[{"value":"/ Format both the offset hour and minute.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":153846,"byte_end":153889,"line_start":139,"line_end":139,"column_start":5,"column_end":48}}]},{"kind":"Enum","id":{"krate":0,"index":3612},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":153738,"byte_end":153753,"line_start":136,"line_end":136,"column_start":10,"column_end":25},"name":"OffsetPrecision","qualname":"::format_description::well_known::iso8601::OffsetPrecision","value":"enum OffsetPrecision { Hour, Minute, }","parent":null,"children":[{"krate":0,"index":3613},{"krate":0,"index":3615}],"decl_id":null,"docs":" The precision for the UTC offset.\n","sig":null,"attributes":[{"value":"/ The precision for the UTC offset.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":153646,"byte_end":153683,"line_start":134,"line_end":134,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":3628},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":154214,"byte_end":154220,"line_start":149,"line_end":149,"column_start":12,"column_end":18},"name":"Config","qualname":"::format_description::well_known::iso8601::Config","value":"Config {  }","parent":null,"children":[{"krate":0,"index":3629},{"krate":0,"index":3630},{"krate":0,"index":3631},{"krate":0,"index":3632},{"krate":0,"index":3633},{"krate":0,"index":3634}],"decl_id":null,"docs":" Configuration for [`Iso8601`].\n","sig":null,"attributes":[{"value":"/ Configuration for [`Iso8601`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":153905,"byte_end":153939,"line_start":143,"line_end":143,"column_start":1,"column_end":35}},{"value":"allow(missing_copy_implementations)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":154046,"byte_end":154084,"line_start":146,"line_end":146,"column_start":1,"column_end":39}}]},{"kind":"Const","id":{"krate":0,"index":774},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":155488,"byte_end":155495,"line_start":178,"line_end":178,"column_start":15,"column_end":22},"name":"DEFAULT","qualname":"::format_description::well_known::iso8601::Config::DEFAULT","value":"Self","parent":{"krate":0,"index":773},"children":[],"decl_id":null,"docs":" A configuration for the [`Iso8601`] format.","sig":null,"attributes":[{"value":"/ A configuration for the [`Iso8601`] format.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":154827,"byte_end":154874,"line_start":165,"line_end":165,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":154879,"byte_end":154882,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ The following is the default behavior:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":154887,"byte_end":154929,"line_start":167,"line_end":167,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":154934,"byte_end":154937,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ - The configuration can be used for both formatting and parsing.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":154942,"byte_end":155010,"line_start":169,"line_end":169,"column_start":5,"column_end":73}},{"value":"/ - The date, time, and UTC offset are all formatted.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":155015,"byte_end":155070,"line_start":170,"line_end":170,"column_start":5,"column_end":60}},{"value":"/ - Separators (such as `-` and `:`) are included.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":155075,"byte_end":155127,"line_start":171,"line_end":171,"column_start":5,"column_end":57}},{"value":"/ - The year contains four digits, such that the year must be between 0 and 9999.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":155132,"byte_end":155215,"line_start":172,"line_end":172,"column_start":5,"column_end":88}},{"value":"/ - The date uses the calendar format.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":155220,"byte_end":155260,"line_start":173,"line_end":173,"column_start":5,"column_end":45}},{"value":"/ - The time has precision to the second and nine decimal digits.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":155265,"byte_end":155332,"line_start":174,"line_end":174,"column_start":5,"column_end":72}},{"value":"/ - The UTC offset has precision to the minute.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":155337,"byte_end":155386,"line_start":175,"line_end":175,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":155391,"byte_end":155394,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ If you need different behavior, use the setter methods on this struct.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":155399,"byte_end":155473,"line_start":177,"line_end":177,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":775},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":155930,"byte_end":155954,"line_start":190,"line_end":190,"column_start":18,"column_end":42},"name":"set_formatted_components","qualname":"<Config>::set_formatted_components","value":"const fn set_formatted_components(Self, FormattedComponents) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether the format the date, time, and/or UTC offset.\n","sig":null,"attributes":[{"value":"/ Set whether the format the date, time, and/or UTC offset.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":155851,"byte_end":155912,"line_start":189,"line_end":189,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":776},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":156189,"byte_end":156207,"line_start":198,"line_end":198,"column_start":18,"column_end":36},"name":"set_use_separators","qualname":"<Config>::set_use_separators","value":"const fn set_use_separators(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether the format contains separators (such as `-` or `:`).\n","sig":null,"attributes":[{"value":"/ Set whether the format contains separators (such as `-` or `:`).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":156103,"byte_end":156171,"line_start":197,"line_end":197,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":777},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":156386,"byte_end":156408,"line_start":206,"line_end":206,"column_start":18,"column_end":40},"name":"set_year_is_six_digits","qualname":"<Config>::set_year_is_six_digits","value":"const fn set_year_is_six_digits(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether the year is six digits.\n","sig":null,"attributes":[{"value":"/ Set whether the year is six digits.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":156329,"byte_end":156368,"line_start":205,"line_end":205,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":778},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":156593,"byte_end":156606,"line_start":214,"line_end":214,"column_start":18,"column_end":31},"name":"set_date_kind","qualname":"<Config>::set_date_kind","value":"const fn set_date_kind(Self, DateKind) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the format used for the date.\n","sig":null,"attributes":[{"value":"/ Set the format used for the date.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":156538,"byte_end":156575,"line_start":213,"line_end":213,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":779},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":156780,"byte_end":156798,"line_start":219,"line_end":219,"column_start":18,"column_end":36},"name":"set_time_precision","qualname":"<Config>::set_time_precision","value":"const fn set_time_precision(Self, TimePrecision) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the precision and number of decimal digits present for the time.\n","sig":null,"attributes":[{"value":"/ Set the precision and number of decimal digits present for the time.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":156690,"byte_end":156762,"line_start":218,"line_end":218,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":780},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":156988,"byte_end":157008,"line_start":227,"line_end":227,"column_start":18,"column_end":38},"name":"set_offset_precision","qualname":"<Config>::set_offset_precision","value":"const fn set_offset_precision(Self, OffsetPrecision) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the precision for the UTC offset.\n","sig":null,"attributes":[{"value":"/ Set the precision for the UTC offset.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":156929,"byte_end":156970,"line_start":226,"line_end":226,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":3637},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/rfc2822.rs","byte_start":167740,"byte_end":167747,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"Rfc2822","qualname":"::format_description::well_known::rfc2822::Rfc2822","value":"","parent":null,"children":[],"decl_id":null,"docs":" The format described in [RFC 2822](https://tools.ietf.org/html/rfc2822#section-3.3).","sig":null,"attributes":[{"value":"/ The format described in [RFC 2822](https://tools.ietf.org/html/rfc2822#section-3.3).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/rfc2822.rs","byte_start":166973,"byte_end":167061,"line_start":3,"line_end":3,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/rfc2822.rs","byte_start":167062,"byte_end":167065,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Example: Fri, 21 Nov 1997 09:55:06 -0600","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/rfc2822.rs","byte_start":167066,"byte_end":167110,"line_start":5,"line_end":5,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/rfc2822.rs","byte_start":167111,"byte_end":167114,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/rfc2822.rs","byte_start":167115,"byte_end":167129,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/rfc2822.rs","byte_start":167130,"byte_end":167133,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/rfc2822.rs","byte_start":167134,"byte_end":167145,"line_start":9,"line_end":9,"column_start":1,"column_end":12}},{"value":"/ # use time::{format_description::well_known::Rfc2822, macros::datetime, OffsetDateTime};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/rfc2822.rs","byte_start":167146,"byte_end":167238,"line_start":10,"line_end":10,"column_start":1,"column_end":93}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/rfc2822.rs","byte_start":167239,"byte_end":167254,"line_start":11,"line_end":11,"column_start":1,"column_end":16}},{"value":"/     OffsetDateTime::parse(\"Sat, 12 Jun 1993 13:25:19 GMT\", &Rfc2822)?,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/rfc2822.rs","byte_start":167255,"byte_end":167329,"line_start":12,"line_end":12,"column_start":1,"column_end":75}},{"value":"/     datetime!(1993-06-12 13:25:19 +00:00)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/rfc2822.rs","byte_start":167330,"byte_end":167375,"line_start":13,"line_end":13,"column_start":1,"column_end":46}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/rfc2822.rs","byte_start":167376,"byte_end":167382,"line_start":14,"line_end":14,"column_start":1,"column_end":7}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/rfc2822.rs","byte_start":167383,"byte_end":167413,"line_start":15,"line_end":15,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/rfc2822.rs","byte_start":167414,"byte_end":167421,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/rfc2822.rs","byte_start":167422,"byte_end":167425,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/rfc2822.rs","byte_start":167426,"byte_end":167437,"line_start":18,"line_end":18,"column_start":1,"column_end":12}},{"value":"/ # use time::{format_description::well_known::Rfc2822, macros::datetime};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/rfc2822.rs","byte_start":167438,"byte_end":167514,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/rfc2822.rs","byte_start":167515,"byte_end":167530,"line_start":20,"line_end":20,"column_start":1,"column_end":16}},{"value":"/     datetime!(1997-11-21 09:55:06 -06:00).format(&Rfc2822)?,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/rfc2822.rs","byte_start":167531,"byte_end":167595,"line_start":21,"line_end":21,"column_start":1,"column_end":65}},{"value":"/     \"Fri, 21 Nov 1997 09:55:06 -0600\"","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/rfc2822.rs","byte_start":167596,"byte_end":167637,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/rfc2822.rs","byte_start":167638,"byte_end":167644,"line_start":23,"line_end":23,"column_start":1,"column_end":7}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/rfc2822.rs","byte_start":167645,"byte_end":167675,"line_start":24,"line_end":24,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/rfc2822.rs","byte_start":167676,"byte_end":167683,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":3650},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/rfc3339.rs","byte_start":168547,"byte_end":168554,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"Rfc3339","qualname":"::format_description::well_known::rfc3339::Rfc3339","value":"","parent":null,"children":[],"decl_id":null,"docs":" The format described in [RFC 3339](https://tools.ietf.org/html/rfc3339#section-5.6).","sig":null,"attributes":[{"value":"/ The format described in [RFC 3339](https://tools.ietf.org/html/rfc3339#section-5.6).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/rfc3339.rs","byte_start":167789,"byte_end":167877,"line_start":3,"line_end":3,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/rfc3339.rs","byte_start":167878,"byte_end":167881,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Format example: 1985-04-12T23:20:50.52Z","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/rfc3339.rs","byte_start":167882,"byte_end":167925,"line_start":5,"line_end":5,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/rfc3339.rs","byte_start":167926,"byte_end":167929,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/rfc3339.rs","byte_start":167930,"byte_end":167944,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/rfc3339.rs","byte_start":167945,"byte_end":167948,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/rfc3339.rs","byte_start":167949,"byte_end":167960,"line_start":9,"line_end":9,"column_start":1,"column_end":12}},{"value":"/ # use time::{format_description::well_known::Rfc3339, macros::datetime, OffsetDateTime};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/rfc3339.rs","byte_start":167961,"byte_end":168053,"line_start":10,"line_end":10,"column_start":1,"column_end":93}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/rfc3339.rs","byte_start":168054,"byte_end":168069,"line_start":11,"line_end":11,"column_start":1,"column_end":16}},{"value":"/     OffsetDateTime::parse(\"1985-04-12T23:20:50.52Z\", &Rfc3339)?,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/rfc3339.rs","byte_start":168070,"byte_end":168138,"line_start":12,"line_end":12,"column_start":1,"column_end":69}},{"value":"/     datetime!(1985-04-12 23:20:50.52 +00:00)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/rfc3339.rs","byte_start":168139,"byte_end":168187,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/rfc3339.rs","byte_start":168188,"byte_end":168194,"line_start":14,"line_end":14,"column_start":1,"column_end":7}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/rfc3339.rs","byte_start":168195,"byte_end":168225,"line_start":15,"line_end":15,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/rfc3339.rs","byte_start":168226,"byte_end":168233,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/rfc3339.rs","byte_start":168234,"byte_end":168237,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/rfc3339.rs","byte_start":168238,"byte_end":168249,"line_start":18,"line_end":18,"column_start":1,"column_end":12}},{"value":"/ # use time::{format_description::well_known::Rfc3339, macros::datetime};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/rfc3339.rs","byte_start":168250,"byte_end":168326,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/rfc3339.rs","byte_start":168327,"byte_end":168342,"line_start":20,"line_end":20,"column_start":1,"column_end":16}},{"value":"/     datetime!(1985-04-12 23:20:50.52 +00:00).format(&Rfc3339)?,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/rfc3339.rs","byte_start":168343,"byte_end":168410,"line_start":21,"line_end":21,"column_start":1,"column_end":68}},{"value":"/     \"1985-04-12T23:20:50.52Z\"","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/rfc3339.rs","byte_start":168411,"byte_end":168444,"line_start":22,"line_end":22,"column_start":1,"column_end":34}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/rfc3339.rs","byte_start":168445,"byte_end":168451,"line_start":23,"line_end":23,"column_start":1,"column_end":7}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/rfc3339.rs","byte_start":168452,"byte_end":168482,"line_start":24,"line_end":24,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/rfc3339.rs","byte_start":168483,"byte_end":168490,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3665},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","byte_start":117182,"byte_end":117189,"line_start":59,"line_end":59,"column_start":5,"column_end":12},"name":"Literal","qualname":"::format_description::FormatItem::Literal","value":"FormatItem::Literal(&'a [u8])","parent":{"krate":0,"index":3663},"children":[],"decl_id":null,"docs":" Bytes that are formatted as-is.","sig":null,"attributes":[{"value":"/ Bytes that are formatted as-is.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","byte_start":116989,"byte_end":117024,"line_start":55,"line_end":55,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","byte_start":117029,"byte_end":117032,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ **Note**: If you call the `format` method that returns a `String`, these bytes will be","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","byte_start":117037,"byte_end":117127,"line_start":57,"line_end":57,"column_start":5,"column_end":95}},{"value":"/ passed through `String::from_utf8_lossy`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","byte_start":117132,"byte_end":117177,"line_start":58,"line_end":58,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":3667},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","byte_start":117190,"byte_end":117198,"line_start":59,"line_end":59,"column_start":13,"column_end":21},"name":"0","qualname":"::format_description::FormatItem::Literal::0","value":"&'a [u8]","parent":{"krate":0,"index":3665},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3668},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","byte_start":117268,"byte_end":117277,"line_start":61,"line_end":61,"column_start":5,"column_end":14},"name":"Component","qualname":"::format_description::FormatItem::Component","value":"FormatItem::Component(Component)","parent":{"krate":0,"index":3663},"children":[],"decl_id":null,"docs":" A minimal representation of a single non-literal item.\n","sig":null,"attributes":[{"value":"/ A minimal representation of a single non-literal item.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","byte_start":117205,"byte_end":117263,"line_start":60,"line_end":60,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":3670},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","byte_start":117278,"byte_end":117287,"line_start":61,"line_end":61,"column_start":15,"column_end":24},"name":"0","qualname":"::format_description::FormatItem::Component::0","value":"format_description::component::Component","parent":{"krate":0,"index":3668},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3671},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","byte_start":117403,"byte_end":117411,"line_start":64,"line_end":64,"column_start":5,"column_end":13},"name":"Compound","qualname":"::format_description::FormatItem::Compound","value":"FormatItem::Compound(&'a [Self])","parent":{"krate":0,"index":3663},"children":[],"decl_id":null,"docs":" A series of literals or components that collectively form a partial or complete\n description.\n","sig":null,"attributes":[{"value":"/ A series of literals or components that collectively form a partial or complete","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","byte_start":117294,"byte_end":117377,"line_start":62,"line_end":62,"column_start":5,"column_end":88}},{"value":"/ description.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","byte_start":117382,"byte_end":117398,"line_start":63,"line_end":63,"column_start":5,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":3673},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","byte_start":117412,"byte_end":117422,"line_start":64,"line_end":64,"column_start":14,"column_end":24},"name":"0","qualname":"::format_description::FormatItem::Compound::0","value":"&'a [format_description::FormatItem<'a>]","parent":{"krate":0,"index":3671},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3674},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","byte_start":117674,"byte_end":117682,"line_start":69,"line_end":69,"column_start":5,"column_end":13},"name":"Optional","qualname":"::format_description::FormatItem::Optional","value":"FormatItem::Optional(&'a Self)","parent":{"krate":0,"index":3663},"children":[],"decl_id":null,"docs":" A `FormatItem` that may or may not be present when parsing. If parsing fails, there will be\n no effect on the resulting `struct`.","sig":null,"attributes":[{"value":"/ A `FormatItem` that may or may not be present when parsing. If parsing fails, there will be","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","byte_start":117429,"byte_end":117524,"line_start":65,"line_end":65,"column_start":5,"column_end":100}},{"value":"/ no effect on the resulting `struct`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","byte_start":117529,"byte_end":117569,"line_start":66,"line_end":66,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","byte_start":117574,"byte_end":117577,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ This variant has no effect on formatting, as the value is guaranteed to be present.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","byte_start":117582,"byte_end":117669,"line_start":68,"line_end":68,"column_start":5,"column_end":92}}]},{"kind":"Field","id":{"krate":0,"index":3676},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","byte_start":117683,"byte_end":117691,"line_start":69,"line_end":69,"column_start":14,"column_end":22},"name":"0","qualname":"::format_description::FormatItem::Optional::0","value":"&'a format_description::FormatItem<'a>","parent":{"krate":0,"index":3674},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3677},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","byte_start":117917,"byte_end":117922,"line_start":73,"line_end":73,"column_start":5,"column_end":10},"name":"First","qualname":"::format_description::FormatItem::First","value":"FormatItem::First(&'a [Self])","parent":{"krate":0,"index":3663},"children":[],"decl_id":null,"docs":" A series of `FormatItem`s where, when parsing, the first successful parse is used. When\n formatting, the first element of the slice is used.  An empty slice is a no-op when\n formatting or parsing.\n","sig":null,"attributes":[{"value":"/ A series of `FormatItem`s where, when parsing, the first successful parse is used. When","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","byte_start":117698,"byte_end":117789,"line_start":70,"line_end":70,"column_start":5,"column_end":96}},{"value":"/ formatting, the first element of the slice is used.  An empty slice is a no-op when","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","byte_start":117794,"byte_end":117881,"line_start":71,"line_end":71,"column_start":5,"column_end":92}},{"value":"/ formatting or parsing.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","byte_start":117886,"byte_end":117912,"line_start":72,"line_end":72,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":3679},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","byte_start":117923,"byte_end":117933,"line_start":73,"line_end":73,"column_start":11,"column_end":21},"name":"0","qualname":"::format_description::FormatItem::First::0","value":"&'a [format_description::FormatItem<'a>]","parent":{"krate":0,"index":3677},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3663},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","byte_start":116968,"byte_end":116978,"line_start":54,"line_end":54,"column_start":10,"column_end":20},"name":"FormatItem","qualname":"::format_description::FormatItem","value":"enum FormatItem<'a> {\n    Literal(&'a [u8]),\n    Component(Component),\n    Compound(&'a [Self]),\n    Optional(&'a Self),\n    First(&'a [Self]),\n}","parent":null,"children":[{"krate":0,"index":3665},{"krate":0,"index":3668},{"krate":0,"index":3671},{"krate":0,"index":3674},{"krate":0,"index":3677}],"decl_id":null,"docs":" A complete description of how to format and parse a type.\n","sig":null,"attributes":[{"value":"/ A complete description of how to format and parse a type.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","byte_start":116796,"byte_end":116857,"line_start":50,"line_end":50,"column_start":1,"column_end":62}},{"value":"non_exhaustive","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","byte_start":116858,"byte_end":116875,"line_start":51,"line_end":51,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":793},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","byte_start":118009,"byte_end":118012,"line_start":78,"line_end":78,"column_start":8,"column_end":11},"name":"fmt","qualname":"<FormatItem as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":795},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","byte_start":118551,"byte_end":118555,"line_start":90,"line_end":90,"column_start":8,"column_end":12},"name":"from","qualname":"<FormatItem as std::convert::From>::from","value":"fn from(Component) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":798},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","byte_start":118727,"byte_end":118735,"line_start":98,"line_end":98,"column_start":8,"column_end":16},"name":"try_from","qualname":"<Component as std::convert::TryFrom>::try_from","value":"fn try_from(FormatItem) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3092},"children":[],"decl_id":{"krate":2,"index":3095},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":801},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","byte_start":119005,"byte_end":119009,"line_start":107,"line_end":107,"column_start":8,"column_end":12},"name":"from","qualname":"<FormatItem as std::convert::From>::from","value":"fn from(&'a [FormatItem]) -> FormatItem","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":805},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","byte_start":119211,"byte_end":119219,"line_start":115,"line_end":115,"column_start":8,"column_end":16},"name":"try_from","qualname":"<&'_ [FormatItem] as std::convert::TryFrom>::try_from","value":"fn try_from(FormatItem) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3092},"children":[],"decl_id":{"krate":2,"index":3095},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":807},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","byte_start":119470,"byte_end":119472,"line_start":124,"line_end":124,"column_start":8,"column_end":10},"name":"eq","qualname":"<FormatItem as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &Component) -> bool","parent":{"krate":2,"index":2831},"children":[],"decl_id":{"krate":2,"index":2833},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":809},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","byte_start":119647,"byte_end":119649,"line_start":130,"line_end":130,"column_start":8,"column_end":10},"name":"eq","qualname":"<Component as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &FormatItem) -> bool","parent":{"krate":2,"index":2831},"children":[],"decl_id":{"krate":2,"index":2833},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":811},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","byte_start":119780,"byte_end":119782,"line_start":136,"line_end":136,"column_start":8,"column_end":10},"name":"eq","qualname":"<FormatItem as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &&[FormatItem]) -> bool","parent":{"krate":2,"index":2831},"children":[],"decl_id":{"krate":2,"index":2833},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":813},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","byte_start":119970,"byte_end":119972,"line_start":142,"line_end":142,"column_start":8,"column_end":10},"name":"eq","qualname":"<&'_ [FormatItem] as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &FormatItem) -> bool","parent":{"krate":2,"index":2831},"children":[],"decl_id":{"krate":2,"index":2833},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":814},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/formatting/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"formatting","qualname":"::formatting","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/formatting/mod.rs","parent":null,"children":[{"krate":0,"index":815},{"krate":0,"index":931},{"krate":0,"index":1005},{"krate":0,"index":1008},{"krate":0,"index":1011},{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1018},{"krate":0,"index":1021},{"krate":0,"index":1022},{"krate":0,"index":1025},{"krate":0,"index":1028},{"krate":0,"index":1031},{"krate":0,"index":1034},{"krate":0,"index":1036},{"krate":0,"index":1038},{"krate":0,"index":1040},{"krate":0,"index":1042},{"krate":0,"index":1044},{"krate":0,"index":1047},{"krate":0,"index":1049},{"krate":0,"index":1051},{"krate":0,"index":1053},{"krate":0,"index":1055},{"krate":0,"index":1059},{"krate":0,"index":1063},{"krate":0,"index":1067},{"krate":0,"index":1070},{"krate":0,"index":1073},{"krate":0,"index":1076},{"krate":0,"index":1079},{"krate":0,"index":1083},{"krate":0,"index":1086},{"krate":0,"index":1090},{"krate":0,"index":1093},{"krate":0,"index":1096},{"krate":0,"index":1098},{"krate":0,"index":1101},{"krate":0,"index":1113},{"krate":0,"index":1116},{"krate":0,"index":1119}],"decl_id":null,"docs":" Formatting for various types.\n","sig":null,"attributes":[{"value":"cfg(feature = \"formatting\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":9842,"byte_end":9872,"line_start":290,"line_end":290,"column_start":1,"column_end":31}},{"value":"/ Formatting for various types.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/formatting/mod.rs","byte_start":168557,"byte_end":168590,"line_start":1,"line_end":1,"column_start":1,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":870},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/formatting/formattable.rs","byte_start":185911,"byte_end":185922,"line_start":16,"line_end":16,"column_start":11,"column_end":22},"name":"Formattable","qualname":"::formatting::formattable::Formattable","value":"Formattable: sealed::Sealed","parent":null,"children":[],"decl_id":null,"docs":" A type that can be formatted.\n","sig":null,"attributes":[{"value":"/ A type that can be formatted.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/formatting/formattable.rs","byte_start":185819,"byte_end":185852,"line_start":14,"line_end":14,"column_start":1,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":881},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/formatting/formattable.rs","byte_start":186542,"byte_end":186548,"line_start":31,"line_end":31,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::formatting::formattable::sealed::Sealed","value":"Sealed","parent":null,"children":[{"krate":0,"index":882},{"krate":0,"index":884}],"decl_id":null,"docs":" Format the item using a format description, the intended output, and the various components.\n","sig":null,"attributes":[{"value":"/ Format the item using a format description, the intended output, and the various components.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/formatting/formattable.rs","byte_start":186365,"byte_end":186461,"line_start":29,"line_end":29,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":882},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/formatting/formattable.rs","byte_start":186655,"byte_end":186666,"line_start":33,"line_end":33,"column_start":12,"column_end":23},"name":"format_into","qualname":"::formatting::formattable::sealed::Sealed::format_into","value":"fn format_into<impl io::Write>(&Self, &mut impl io::Write, Option<Date>,\nOption<Time>, Option<UtcOffset>) -> Result<usize, error::Format> where\nimpl io::Write: io::Write","parent":{"krate":0,"index":881},"children":[],"decl_id":null,"docs":" Format the item into the provided output, returning the number of bytes written.\n","sig":null,"attributes":[{"value":"/ Format the item into the provided output, returning the number of bytes written.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/formatting/formattable.rs","byte_start":186559,"byte_end":186643,"line_start":32,"line_end":32,"column_start":9,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":884},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/formatting/formattable.rs","byte_start":186938,"byte_end":186944,"line_start":42,"line_end":42,"column_start":12,"column_end":18},"name":"format","qualname":"::formatting::formattable::sealed::Sealed::format","value":"fn format(&Self, Option<Date>, Option<Time>, Option<UtcOffset>)\n-> Result<String, error::Format>","parent":{"krate":0,"index":881},"children":[],"decl_id":null,"docs":" Format the item directly to a `String`.\n","sig":null,"attributes":[{"value":"/ Format the item directly to a `String`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/formatting/formattable.rs","byte_start":186883,"byte_end":186926,"line_start":41,"line_end":41,"column_start":9,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":887},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/formatting/formattable.rs","byte_start":187368,"byte_end":187379,"line_start":57,"line_end":57,"column_start":8,"column_end":19},"name":"format_into","qualname":"<FormatItem as formatting::formattable::sealed::Sealed>::format_into","value":"fn format_into<impl io::Write>(&Self, &mut impl io::Write, Option<Date>,\nOption<Time>, Option<UtcOffset>) -> Result<usize, error::Format> where\nimpl io::Write: io::Write","parent":{"krate":0,"index":881},"children":[],"decl_id":{"krate":0,"index":882},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":891},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/formatting/formattable.rs","byte_start":188159,"byte_end":188170,"line_start":78,"line_end":78,"column_start":8,"column_end":19},"name":"format_into","qualname":"<[FormatItem] as formatting::formattable::sealed::Sealed>::format_into","value":"fn format_into<impl io::Write>(&Self, &mut impl io::Write, Option<Date>,\nOption<Time>, Option<UtcOffset>) -> Result<usize, error::Format> where\nimpl io::Write: io::Write","parent":{"krate":0,"index":881},"children":[],"decl_id":{"krate":0,"index":882},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":895},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/formatting/formattable.rs","byte_start":188603,"byte_end":188614,"line_start":97,"line_end":97,"column_start":8,"column_end":19},"name":"format_into","qualname":"<T as formatting::formattable::sealed::Sealed>::format_into","value":"fn format_into<impl io::Write>(&Self, &mut impl io::Write, Option<Date>,\nOption<Time>, Option<UtcOffset>) -> Result<usize, error::Format> where\nimpl io::Write: io::Write","parent":{"krate":0,"index":881},"children":[],"decl_id":{"krate":0,"index":882},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":898},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/formatting/formattable.rs","byte_start":188968,"byte_end":188979,"line_start":111,"line_end":111,"column_start":8,"column_end":19},"name":"format_into","qualname":"<Rfc2822 as formatting::formattable::sealed::Sealed>::format_into","value":"fn format_into<impl io::Write>(&Self, &mut impl io::Write, Option<Date>,\nOption<Time>, Option<UtcOffset>) -> Result<usize, error::Format> where\nimpl io::Write: io::Write","parent":{"krate":0,"index":881},"children":[],"decl_id":{"krate":0,"index":882},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":908},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/formatting/formattable.rs","byte_start":190932,"byte_end":190943,"line_start":160,"line_end":160,"column_start":8,"column_end":19},"name":"format_into","qualname":"<Rfc3339 as formatting::formattable::sealed::Sealed>::format_into","value":"fn format_into<impl io::Write>(&Self, &mut impl io::Write, Option<Date>,\nOption<Time>, Option<UtcOffset>) -> Result<usize, error::Format> where\nimpl io::Write: io::Write","parent":{"krate":0,"index":881},"children":[],"decl_id":{"krate":0,"index":882},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":929},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/formatting/formattable.rs","byte_start":194152,"byte_end":194163,"line_start":235,"line_end":235,"column_start":8,"column_end":19},"name":"format_into","qualname":"<Iso8601<CONFIG> as formatting::formattable::sealed::Sealed>::format_into","value":"fn format_into<impl io::Write>(&Self, &mut impl io::Write, Option<Date>,\nOption<Time>, Option<UtcOffset>) -> Result<usize, error::Format> where\nimpl io::Write: io::Write","parent":{"krate":0,"index":881},"children":[],"decl_id":{"krate":0,"index":882},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3694},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":202706,"byte_end":202713,"line_start":31,"line_end":31,"column_start":12,"column_end":19},"name":"Instant","qualname":"::instant::Instant","value":"","parent":null,"children":[],"decl_id":null,"docs":" A measurement of a monotonically non-decreasing clock. Opaque and useful only with [`Duration`].","sig":null,"attributes":[{"value":"/ A measurement of a monotonically non-decreasing clock. Opaque and useful only with [`Duration`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":201532,"byte_end":201632,"line_start":11,"line_end":11,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":201633,"byte_end":201636,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Instants are always guaranteed to be no less than any previously measured instant when created,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":201637,"byte_end":201736,"line_start":13,"line_end":13,"column_start":1,"column_end":100}},{"value":"/ and are often useful for tasks such as measuring benchmarks or timing how long an operation","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":201737,"byte_end":201832,"line_start":14,"line_end":14,"column_start":1,"column_end":96}},{"value":"/ takes.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":201833,"byte_end":201843,"line_start":15,"line_end":15,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":201844,"byte_end":201847,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Note, however, that instants are not guaranteed to be **steady**. In other words, each tick of","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":201848,"byte_end":201946,"line_start":17,"line_end":17,"column_start":1,"column_end":99}},{"value":"/ the underlying clock may not be the same length (e.g. some seconds may be longer than others).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":201947,"byte_end":202045,"line_start":18,"line_end":18,"column_start":1,"column_end":99}},{"value":"/ An instant may jump forwards or experience time dilation (slow down or speed up), but it will","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":202046,"byte_end":202143,"line_start":19,"line_end":19,"column_start":1,"column_end":98}},{"value":"/ never go backwards.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":202144,"byte_end":202167,"line_start":20,"line_end":20,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":202168,"byte_end":202171,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Instants are opaque types that can only be compared to one another. There is no method to get","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":202172,"byte_end":202269,"line_start":22,"line_end":22,"column_start":1,"column_end":98}},{"value":"/ \"the number of seconds\" from an instant. Instead, it only allows measuring the duration between","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":202270,"byte_end":202369,"line_start":23,"line_end":23,"column_start":1,"column_end":100}},{"value":"/ two instants (or comparing two instants).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":202370,"byte_end":202415,"line_start":24,"line_end":24,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":202416,"byte_end":202419,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This implementation allows for operations with signed [`Duration`]s, but is otherwise identical","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":202420,"byte_end":202519,"line_start":26,"line_end":26,"column_start":1,"column_end":100}},{"value":"/ to [`std::time::Instant`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":202520,"byte_end":202550,"line_start":27,"line_end":27,"column_start":1,"column_end":31}},{"value":"repr(transparent)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":202606,"byte_end":202626,"line_start":29,"line_end":29,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":3696},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":202714,"byte_end":202728,"line_start":31,"line_end":31,"column_start":20,"column_end":34},"name":"0","qualname":"::instant::Instant::0","value":"std::time::Instant","parent":{"krate":0,"index":3694},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1156},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":202944,"byte_end":202947,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"now","qualname":"<Instant>::now","value":"fn now() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an `Instant` corresponding to \"now\".","sig":null,"attributes":[{"value":"/ Returns an `Instant` corresponding to \"now\".","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":202777,"byte_end":202825,"line_start":35,"line_end":35,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":202830,"byte_end":202833,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":202838,"byte_end":202849,"line_start":37,"line_end":37,"column_start":5,"column_end":16}},{"value":"/ # use time::Instant;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":202854,"byte_end":202878,"line_start":38,"line_end":38,"column_start":5,"column_end":29}},{"value":"/ println!(\"{:?}\", Instant::now());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":202883,"byte_end":202920,"line_start":39,"line_end":39,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":202925,"byte_end":202932,"line_start":40,"line_end":40,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1157},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":203459,"byte_end":203466,"line_start":55,"line_end":55,"column_start":12,"column_end":19},"name":"elapsed","qualname":"<Instant>::elapsed","value":"fn elapsed(Self) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed since this instant was created. The duration will always\n be nonnegative if the instant is not synthetically created.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed since this instant was created. The duration will always","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":203003,"byte_end":203098,"line_start":45,"line_end":45,"column_start":5,"column_end":100}},{"value":"/ be nonnegative if the instant is not synthetically created.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":203103,"byte_end":203166,"line_start":46,"line_end":46,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":203171,"byte_end":203174,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":203179,"byte_end":203190,"line_start":48,"line_end":48,"column_start":5,"column_end":16}},{"value":"/ # use time::{Instant, ext::{NumericalStdDuration, NumericalDuration}};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":203195,"byte_end":203269,"line_start":49,"line_end":49,"column_start":5,"column_end":79}},{"value":"/ # use std::thread;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":203274,"byte_end":203296,"line_start":50,"line_end":50,"column_start":5,"column_end":27}},{"value":"/ let instant = Instant::now();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":203301,"byte_end":203334,"line_start":51,"line_end":51,"column_start":5,"column_end":38}},{"value":"/ thread::sleep(1.std_milliseconds());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":203339,"byte_end":203379,"line_start":52,"line_end":52,"column_start":5,"column_end":45}},{"value":"/ assert!(instant.elapsed() >= 1.milliseconds());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":203384,"byte_end":203435,"line_start":53,"line_end":53,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":203440,"byte_end":203447,"line_start":54,"line_end":54,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1158},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":204085,"byte_end":204096,"line_start":71,"line_end":71,"column_start":12,"column_end":23},"name":"checked_add","qualname":"<Instant>::checked_add","value":"fn checked_add(Self, Duration) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self + duration` if `t` can be represented as\n `Instant` (which means it's inside the bounds of the underlying data structure), `None`\n otherwise.","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self + duration` if `t` can be represented as","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":203587,"byte_end":203677,"line_start":61,"line_end":61,"column_start":5,"column_end":95}},{"value":"/ `Instant` (which means it's inside the bounds of the underlying data structure), `None`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":203682,"byte_end":203773,"line_start":62,"line_end":62,"column_start":5,"column_end":96}},{"value":"/ otherwise.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":203778,"byte_end":203792,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":203797,"byte_end":203800,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":203805,"byte_end":203816,"line_start":65,"line_end":65,"column_start":5,"column_end":16}},{"value":"/ # use time::{Instant, ext::NumericalDuration};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":203821,"byte_end":203871,"line_start":66,"line_end":66,"column_start":5,"column_end":55}},{"value":"/ let now = Instant::now();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":203876,"byte_end":203905,"line_start":67,"line_end":67,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(now.checked_add(5.seconds()), Some(now + 5.seconds()));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":203910,"byte_end":203980,"line_start":68,"line_end":68,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(now.checked_add((-5).seconds()), Some(now + (-5).seconds()));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":203985,"byte_end":204061,"line_start":69,"line_end":69,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":204066,"byte_end":204073,"line_start":70,"line_end":70,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1159},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":204958,"byte_end":204969,"line_start":92,"line_end":92,"column_start":12,"column_end":23},"name":"checked_sub","qualname":"<Instant>::checked_sub","value":"fn checked_sub(Self, Duration) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self - duration` if `t` can be represented as\n `Instant` (which means it's inside the bounds of the underlying data structure), `None`\n otherwise.","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self - duration` if `t` can be represented as","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":204460,"byte_end":204550,"line_start":82,"line_end":82,"column_start":5,"column_end":95}},{"value":"/ `Instant` (which means it's inside the bounds of the underlying data structure), `None`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":204555,"byte_end":204646,"line_start":83,"line_end":83,"column_start":5,"column_end":96}},{"value":"/ otherwise.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":204651,"byte_end":204665,"line_start":84,"line_end":84,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":204670,"byte_end":204673,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":204678,"byte_end":204689,"line_start":86,"line_end":86,"column_start":5,"column_end":16}},{"value":"/ # use time::{Instant, ext::NumericalDuration};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":204694,"byte_end":204744,"line_start":87,"line_end":87,"column_start":5,"column_end":55}},{"value":"/ let now = Instant::now();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":204749,"byte_end":204778,"line_start":88,"line_end":88,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(now.checked_sub(5.seconds()), Some(now - 5.seconds()));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":204783,"byte_end":204853,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(now.checked_sub((-5).seconds()), Some(now - (-5).seconds()));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":204858,"byte_end":204934,"line_start":90,"line_end":90,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":204939,"byte_end":204946,"line_start":91,"line_end":91,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1160},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":205575,"byte_end":205585,"line_start":111,"line_end":111,"column_start":18,"column_end":28},"name":"into_inner","qualname":"<Instant>::into_inner","value":"const fn into_inner(Self) -> StdInstant","parent":null,"children":[],"decl_id":null,"docs":" Obtain the inner [`std::time::Instant`].","sig":null,"attributes":[{"value":"/ Obtain the inner [`std::time::Instant`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":205369,"byte_end":205413,"line_start":104,"line_end":104,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":205418,"byte_end":205421,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":205426,"byte_end":205437,"line_start":106,"line_end":106,"column_start":5,"column_end":16}},{"value":"/ # use time::Instant;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":205442,"byte_end":205466,"line_start":107,"line_end":107,"column_start":5,"column_end":29}},{"value":"/ let now = Instant::now();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":205471,"byte_end":205500,"line_start":108,"line_end":108,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(now.into_inner(), now.0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":205505,"byte_end":205545,"line_start":109,"line_end":109,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":205550,"byte_end":205557,"line_start":110,"line_end":110,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1162},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":205698,"byte_end":205702,"line_start":118,"line_end":118,"column_start":8,"column_end":12},"name":"from","qualname":"<Instant as std::convert::From>::from","value":"fn from(StdInstant) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1164},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":205808,"byte_end":205812,"line_start":124,"line_end":124,"column_start":8,"column_end":12},"name":"from","qualname":"<StdInstant as std::convert::From>::from","value":"fn from(Instant) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1167},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":205927,"byte_end":205930,"line_start":132,"line_end":132,"column_start":8,"column_end":11},"name":"sub","qualname":"<Instant as std::ops::Sub>::sub","value":"fn sub(Self, Self) -> Self::Output","parent":{"krate":2,"index":3252},"children":[],"decl_id":{"krate":2,"index":3255},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1170},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":206470,"byte_end":206473,"line_start":147,"line_end":147,"column_start":8,"column_end":11},"name":"sub","qualname":"<Instant as std::ops::Sub>::sub","value":"fn sub(Self, StdInstant) -> Self::Output","parent":{"krate":2,"index":3252},"children":[],"decl_id":{"krate":2,"index":3255},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1173},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":206624,"byte_end":206627,"line_start":155,"line_end":155,"column_start":8,"column_end":11},"name":"sub","qualname":"<StdInstant as std::ops::Sub>::sub","value":"fn sub(Self, Instant) -> Self::Output","parent":{"krate":2,"index":3252},"children":[],"decl_id":{"krate":2,"index":3255},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1176},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":206772,"byte_end":206775,"line_start":163,"line_end":163,"column_start":8,"column_end":11},"name":"add","qualname":"<Instant as std::ops::Add>::add","value":"fn add(Self, Duration) -> Self::Output","parent":{"krate":2,"index":3247},"children":[],"decl_id":{"krate":2,"index":3250},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1179},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":207169,"byte_end":207172,"line_start":178,"line_end":178,"column_start":8,"column_end":11},"name":"add","qualname":"<StdInstant as std::ops::Add>::add","value":"fn add(Self, Duration) -> Self::Output","parent":{"krate":2,"index":3247},"children":[],"decl_id":{"krate":2,"index":3250},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1182},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":207331,"byte_end":207334,"line_start":186,"line_end":186,"column_start":8,"column_end":11},"name":"add","qualname":"<Instant as std::ops::Add>::add","value":"fn add(Self, StdDuration) -> Self::Output","parent":{"krate":2,"index":3247},"children":[],"decl_id":{"krate":2,"index":3250},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1185},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":207579,"byte_end":207582,"line_start":197,"line_end":197,"column_start":8,"column_end":11},"name":"sub","qualname":"<Instant as std::ops::Sub>::sub","value":"fn sub(Self, Duration) -> Self::Output","parent":{"krate":2,"index":3252},"children":[],"decl_id":{"krate":2,"index":3255},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1188},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":207976,"byte_end":207979,"line_start":212,"line_end":212,"column_start":8,"column_end":11},"name":"sub","qualname":"<StdInstant as std::ops::Sub>::sub","value":"fn sub(Self, Duration) -> Self::Output","parent":{"krate":2,"index":3252},"children":[],"decl_id":{"krate":2,"index":3255},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1191},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":208138,"byte_end":208141,"line_start":220,"line_end":220,"column_start":8,"column_end":11},"name":"sub","qualname":"<Instant as std::ops::Sub>::sub","value":"fn sub(Self, StdDuration) -> Self::Output","parent":{"krate":2,"index":3252},"children":[],"decl_id":{"krate":2,"index":3255},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1193},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":208369,"byte_end":208371,"line_start":229,"line_end":229,"column_start":8,"column_end":10},"name":"eq","qualname":"<Instant as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &StdInstant) -> bool","parent":{"krate":2,"index":2831},"children":[],"decl_id":{"krate":2,"index":2833},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1195},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":208487,"byte_end":208489,"line_start":235,"line_end":235,"column_start":8,"column_end":10},"name":"eq","qualname":"<StdInstant as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &Instant) -> bool","parent":{"krate":2,"index":2831},"children":[],"decl_id":{"krate":2,"index":2833},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1197},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":208604,"byte_end":208615,"line_start":241,"line_end":241,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<Instant as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp(&Self, &StdInstant) -> Option<Ordering>","parent":{"krate":2,"index":2877},"children":[],"decl_id":{"krate":2,"index":2879},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1199},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":208753,"byte_end":208764,"line_start":247,"line_end":247,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<StdInstant as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp(&Self, &Instant) -> Option<Ordering>","parent":{"krate":2,"index":2877},"children":[],"decl_id":{"krate":2,"index":2879},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1201},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":208895,"byte_end":208901,"line_start":253,"line_end":253,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<Instant as std::convert::AsRef>::as_ref","value":"fn as_ref(&Self) -> &StdInstant","parent":{"krate":2,"index":3076},"children":[],"decl_id":{"krate":2,"index":3078},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1203},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":208996,"byte_end":209002,"line_start":259,"line_end":259,"column_start":8,"column_end":14},"name":"borrow","qualname":"<Instant as std::borrow::Borrow>::borrow","value":"fn borrow(&Self) -> &StdInstant","parent":{"krate":2,"index":2776},"children":[],"decl_id":{"krate":2,"index":2778},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1204},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/macros.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"macros","qualname":"::macros","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/macros.rs","parent":null,"children":[{"krate":0,"index":1205},{"krate":0,"index":1208},{"krate":0,"index":1211},{"krate":0,"index":1214},{"krate":0,"index":1217}],"decl_id":null,"docs":" Macros to construct statically known values.\n","sig":null,"attributes":[{"value":"cfg(feature = \"macros\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":9930,"byte_end":9956,"line_start":294,"line_end":294,"column_start":1,"column_end":27}},{"value":"/ Macros to construct statically known values.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/macros.rs","byte_start":209077,"byte_end":209125,"line_start":1,"line_end":1,"column_start":1,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3729},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/month.rs","byte_start":214790,"byte_end":214797,"line_start":15,"line_end":15,"column_start":5,"column_end":12},"name":"January","qualname":"::month::Month::January","value":"Month::January","parent":{"krate":0,"index":3728},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3732},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/month.rs","byte_start":214807,"byte_end":214815,"line_start":16,"line_end":16,"column_start":5,"column_end":13},"name":"February","qualname":"::month::Month::February","value":"Month::February","parent":{"krate":0,"index":3728},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3735},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/month.rs","byte_start":214825,"byte_end":214830,"line_start":17,"line_end":17,"column_start":5,"column_end":10},"name":"March","qualname":"::month::Month::March","value":"Month::March","parent":{"krate":0,"index":3728},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3738},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/month.rs","byte_start":214840,"byte_end":214845,"line_start":18,"line_end":18,"column_start":5,"column_end":10},"name":"April","qualname":"::month::Month::April","value":"Month::April","parent":{"krate":0,"index":3728},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3741},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/month.rs","byte_start":214855,"byte_end":214858,"line_start":19,"line_end":19,"column_start":5,"column_end":8},"name":"May","qualname":"::month::Month::May","value":"Month::May","parent":{"krate":0,"index":3728},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3744},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/month.rs","byte_start":214868,"byte_end":214872,"line_start":20,"line_end":20,"column_start":5,"column_end":9},"name":"June","qualname":"::month::Month::June","value":"Month::June","parent":{"krate":0,"index":3728},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3747},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/month.rs","byte_start":214882,"byte_end":214886,"line_start":21,"line_end":21,"column_start":5,"column_end":9},"name":"July","qualname":"::month::Month::July","value":"Month::July","parent":{"krate":0,"index":3728},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3750},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/month.rs","byte_start":214896,"byte_end":214902,"line_start":22,"line_end":22,"column_start":5,"column_end":11},"name":"August","qualname":"::month::Month::August","value":"Month::August","parent":{"krate":0,"index":3728},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3753},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/month.rs","byte_start":214912,"byte_end":214921,"line_start":23,"line_end":23,"column_start":5,"column_end":14},"name":"September","qualname":"::month::Month::September","value":"Month::September","parent":{"krate":0,"index":3728},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3756},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/month.rs","byte_start":214931,"byte_end":214938,"line_start":24,"line_end":24,"column_start":5,"column_end":12},"name":"October","qualname":"::month::Month::October","value":"Month::October","parent":{"krate":0,"index":3728},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3759},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/month.rs","byte_start":214949,"byte_end":214957,"line_start":25,"line_end":25,"column_start":5,"column_end":13},"name":"November","qualname":"::month::Month::November","value":"Month::November","parent":{"krate":0,"index":3728},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3762},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/month.rs","byte_start":214968,"byte_end":214976,"line_start":26,"line_end":26,"column_start":5,"column_end":13},"name":"December","qualname":"::month::Month::December","value":"Month::December","parent":{"krate":0,"index":3728},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3728},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/month.rs","byte_start":214778,"byte_end":214783,"line_start":14,"line_end":14,"column_start":10,"column_end":15},"name":"Month","qualname":"::month::Month","value":"enum Month {\n    January = ,\n    February = ,\n    March = ,\n    April = ,\n    May = ,\n    June = ,\n    July = ,\n    August = ,\n    September = ,\n    October = ,\n    November = ,\n    December = ,\n}","parent":null,"children":[{"krate":0,"index":3729},{"krate":0,"index":3732},{"krate":0,"index":3735},{"krate":0,"index":3738},{"krate":0,"index":3741},{"krate":0,"index":3744},{"krate":0,"index":3747},{"krate":0,"index":3750},{"krate":0,"index":3753},{"krate":0,"index":3756},{"krate":0,"index":3759},{"krate":0,"index":3762}],"decl_id":null,"docs":" Months of the year.\n","sig":null,"attributes":[{"value":"/ Months of the year.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/month.rs","byte_start":214622,"byte_end":214645,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/month.rs","byte_start":214646,"byte_end":214693,"line_start":11,"line_end":11,"column_start":1,"column_end":48}},{"value":"repr(u8)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/month.rs","byte_start":214706,"byte_end":214717,"line_start":12,"line_end":12,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1236},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/month.rs","byte_start":215933,"byte_end":215941,"line_start":61,"line_end":61,"column_start":18,"column_end":26},"name":"previous","qualname":"<Month>::previous","value":"const fn previous(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the previous month.","sig":null,"attributes":[{"value":"/ Get the previous month.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/month.rs","byte_start":215761,"byte_end":215788,"line_start":55,"line_end":55,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/month.rs","byte_start":215793,"byte_end":215796,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/month.rs","byte_start":215801,"byte_end":215812,"line_start":57,"line_end":57,"column_start":5,"column_end":16}},{"value":"/ # use time::Month;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/month.rs","byte_start":215817,"byte_end":215839,"line_start":58,"line_end":58,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(Month::January.previous(), Month::December);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/month.rs","byte_start":215844,"byte_end":215903,"line_start":59,"line_end":59,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/month.rs","byte_start":215908,"byte_end":215915,"line_start":60,"line_end":60,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1237},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/month.rs","byte_start":216528,"byte_end":216532,"line_start":84,"line_end":84,"column_start":18,"column_end":22},"name":"next","qualname":"<Month>::next","value":"const fn next(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the next month.","sig":null,"attributes":[{"value":"/ Get the next month.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/month.rs","byte_start":216364,"byte_end":216387,"line_start":78,"line_end":78,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/month.rs","byte_start":216392,"byte_end":216395,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/month.rs","byte_start":216400,"byte_end":216411,"line_start":80,"line_end":80,"column_start":5,"column_end":16}},{"value":"/ # use time::Month;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/month.rs","byte_start":216416,"byte_end":216438,"line_start":81,"line_end":81,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(Month::January.next(), Month::February);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/month.rs","byte_start":216443,"byte_end":216498,"line_start":82,"line_end":82,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/month.rs","byte_start":216503,"byte_end":216510,"line_start":83,"line_end":83,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1239},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/month.rs","byte_start":216990,"byte_end":216993,"line_start":103,"line_end":103,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Month as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10117},"children":[],"decl_id":{"krate":2,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1242},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/month.rs","byte_start":217558,"byte_end":217566,"line_start":124,"line_end":124,"column_start":8,"column_end":16},"name":"from_str","qualname":"<Month as std::str::FromStr>::from_str","value":"fn from_str(&str) -> Result<Self, Self::Err>","parent":{"krate":2,"index":12767},"children":[],"decl_id":{"krate":2,"index":12769},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1244},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/month.rs","byte_start":218156,"byte_end":218160,"line_start":144,"line_end":144,"column_start":8,"column_end":12},"name":"from","qualname":"<u8 as std::convert::From>::from","value":"fn from(Month) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1247},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/month.rs","byte_start":218290,"byte_end":218298,"line_start":152,"line_end":152,"column_start":8,"column_end":16},"name":"try_from","qualname":"<Month as std::convert::TryFrom>::try_from","value":"fn try_from(u8) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3092},"children":[],"decl_id":{"krate":2,"index":3095},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3779},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":219606,"byte_end":219620,"line_start":31,"line_end":31,"column_start":12,"column_end":26},"name":"OffsetDateTime","qualname":"::offset_date_time::OffsetDateTime","value":"OffsetDateTime {  }","parent":null,"children":[{"krate":0,"index":3780},{"krate":0,"index":3781}],"decl_id":null,"docs":" A [`PrimitiveDateTime`] with a [`UtcOffset`].","sig":null,"attributes":[{"value":"/ A [`PrimitiveDateTime`] with a [`UtcOffset`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":219453,"byte_end":219502,"line_start":27,"line_end":27,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":219503,"byte_end":219506,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ All comparisons are performed using the UTC time.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":219507,"byte_end":219560,"line_start":29,"line_end":29,"column_start":1,"column_end":54}}]},{"kind":"Const","id":{"krate":0,"index":1324},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":220125,"byte_end":220135,"line_start":45,"line_end":45,"column_start":15,"column_end":25},"name":"UNIX_EPOCH","qualname":"::offset_date_time::OffsetDateTime::UNIX_EPOCH","value":"Self","parent":{"krate":0,"index":1323},"children":[],"decl_id":null,"docs":" Midnight, 1 January, 1970 (UTC).","sig":null,"attributes":[{"value":"/ Midnight, 1 January, 1970 (UTC).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":219901,"byte_end":219937,"line_start":39,"line_end":39,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":219942,"byte_end":219945,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":219950,"byte_end":219961,"line_start":41,"line_end":41,"column_start":5,"column_end":16}},{"value":"/ # use time::{OffsetDateTime, macros::datetime};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":219966,"byte_end":220017,"line_start":42,"line_end":42,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(OffsetDateTime::UNIX_EPOCH, datetime!(1970-01-01 0:00 UTC),);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":220022,"byte_end":220098,"line_start":43,"line_end":43,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":220103,"byte_end":220110,"line_start":44,"line_end":44,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1325},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":220646,"byte_end":220653,"line_start":59,"line_end":59,"column_start":12,"column_end":19},"name":"now_utc","qualname":"<OffsetDateTime>::now_utc","value":"fn now_utc() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `OffsetDateTime` with the current date and time in UTC.","sig":null,"attributes":[{"value":"/ Create a new `OffsetDateTime` with the current date and time in UTC.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":220256,"byte_end":220328,"line_start":50,"line_end":50,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":220333,"byte_end":220336,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":220341,"byte_end":220352,"line_start":52,"line_end":52,"column_start":5,"column_end":16}},{"value":"/ # use time::{OffsetDateTime, macros::offset};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":220357,"byte_end":220406,"line_start":53,"line_end":53,"column_start":5,"column_end":54}},{"value":"/ assert!(OffsetDateTime::now_utc().year() >= 2019);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":220411,"byte_end":220465,"line_start":54,"line_end":54,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(OffsetDateTime::now_utc().offset(), offset!(UTC));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":220470,"byte_end":220535,"line_start":55,"line_end":55,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":220540,"byte_end":220547,"line_start":56,"line_end":56,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":220552,"byte_end":220575,"line_start":57,"line_end":57,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1326},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":222678,"byte_end":222687,"line_start":119,"line_end":119,"column_start":18,"column_end":27},"name":"to_offset","qualname":"<OffsetDateTime>::to_offset","value":"const fn to_offset(Self, UtcOffset) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert the `OffsetDateTime` from the current [`UtcOffset`] to the provided [`UtcOffset`].","sig":null,"attributes":[{"value":"/ Convert the `OffsetDateTime` from the current [`UtcOffset`] to the provided [`UtcOffset`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":221738,"byte_end":221832,"line_start":94,"line_end":94,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":221837,"byte_end":221840,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":221845,"byte_end":221856,"line_start":96,"line_end":96,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":221861,"byte_end":221904,"line_start":97,"line_end":97,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":221909,"byte_end":221924,"line_start":98,"line_end":98,"column_start":5,"column_end":20}},{"value":"/     datetime!(2000-01-01 0:00 UTC)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":221929,"byte_end":221967,"line_start":99,"line_end":99,"column_start":5,"column_end":43}},{"value":"/         .to_offset(offset!(-1))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":221972,"byte_end":222007,"line_start":100,"line_end":100,"column_start":5,"column_end":40}},{"value":"/         .year(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":222012,"byte_end":222032,"line_start":101,"line_end":101,"column_start":5,"column_end":25}},{"value":"/     1999,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":222037,"byte_end":222050,"line_start":102,"line_end":102,"column_start":5,"column_end":18}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":222055,"byte_end":222061,"line_start":103,"line_end":103,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":222066,"byte_end":222069,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ // Let's see what time Sydney's new year's celebration is in New York // and Los Angeles.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":222074,"byte_end":222167,"line_start":105,"line_end":105,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":222172,"byte_end":222175,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ // Construct midnight on new year's in Sydney.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":222180,"byte_end":222230,"line_start":107,"line_end":107,"column_start":5,"column_end":55}},{"value":"/ let sydney = datetime!(2000-01-01 0:00 +11);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":222235,"byte_end":222283,"line_start":108,"line_end":108,"column_start":5,"column_end":53}},{"value":"/ let new_york = sydney.to_offset(offset!(-5));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":222288,"byte_end":222337,"line_start":109,"line_end":109,"column_start":5,"column_end":54}},{"value":"/ let los_angeles = sydney.to_offset(offset!(-8));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":222342,"byte_end":222394,"line_start":110,"line_end":110,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(sydney.hour(), 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":222399,"byte_end":222432,"line_start":111,"line_end":111,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(new_york.hour(), 8);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":222437,"byte_end":222472,"line_start":112,"line_end":112,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(los_angeles.hour(), 5);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":222477,"byte_end":222515,"line_start":113,"line_end":113,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":222520,"byte_end":222527,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":222532,"byte_end":222535,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":222540,"byte_end":222552,"line_start":116,"line_end":116,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":222557,"byte_end":222560,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ This method panics if the local date-time in the new offset is outside the supported range.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":222565,"byte_end":222660,"line_start":118,"line_end":118,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":1328},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":226033,"byte_end":226052,"line_start":208,"line_end":208,"column_start":18,"column_end":37},"name":"from_unix_timestamp","qualname":"<OffsetDateTime>::from_unix_timestamp","value":"const fn from_unix_timestamp(i64) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Create an `OffsetDateTime` from the provided Unix timestamp. Calling `.offset()` on the\n resulting value is guaranteed to return UTC.","sig":null,"attributes":[{"value":"/ Create an `OffsetDateTime` from the provided Unix timestamp. Calling `.offset()` on the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":225016,"byte_end":225107,"line_start":181,"line_end":181,"column_start":5,"column_end":96}},{"value":"/ resulting value is guaranteed to return UTC.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":225112,"byte_end":225160,"line_start":182,"line_end":182,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":225165,"byte_end":225168,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":225173,"byte_end":225184,"line_start":184,"line_end":184,"column_start":5,"column_end":16}},{"value":"/ # use time::{OffsetDateTime, macros::datetime};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":225189,"byte_end":225240,"line_start":185,"line_end":185,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":225245,"byte_end":225260,"line_start":186,"line_end":186,"column_start":5,"column_end":20}},{"value":"/     OffsetDateTime::from_unix_timestamp(0),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":225265,"byte_end":225312,"line_start":187,"line_end":187,"column_start":5,"column_end":52}},{"value":"/     Ok(OffsetDateTime::UNIX_EPOCH),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":225317,"byte_end":225356,"line_start":188,"line_end":188,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":225361,"byte_end":225367,"line_start":189,"line_end":189,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":225372,"byte_end":225387,"line_start":190,"line_end":190,"column_start":5,"column_end":20}},{"value":"/     OffsetDateTime::from_unix_timestamp(1_546_300_800),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":225392,"byte_end":225451,"line_start":191,"line_end":191,"column_start":5,"column_end":64}},{"value":"/     Ok(datetime!(2019-01-01 0:00 UTC)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":225456,"byte_end":225499,"line_start":192,"line_end":192,"column_start":5,"column_end":48}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":225504,"byte_end":225510,"line_start":193,"line_end":193,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":225515,"byte_end":225522,"line_start":194,"line_end":194,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":225527,"byte_end":225530,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ If you have a timestamp-nanosecond pair, you can use something along the lines of the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":225535,"byte_end":225624,"line_start":196,"line_end":196,"column_start":5,"column_end":94}},{"value":"/ following:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":225629,"byte_end":225643,"line_start":197,"line_end":197,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":225648,"byte_end":225651,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":225656,"byte_end":225667,"line_start":199,"line_end":199,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, OffsetDateTime, ext::NumericalDuration};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":225672,"byte_end":225739,"line_start":200,"line_end":200,"column_start":5,"column_end":72}},{"value":"/ let (timestamp, nanos) = (1, 500_000_000);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":225744,"byte_end":225790,"line_start":201,"line_end":201,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":225795,"byte_end":225810,"line_start":202,"line_end":202,"column_start":5,"column_end":20}},{"value":"/     OffsetDateTime::from_unix_timestamp(timestamp)? + Duration::nanoseconds(nanos),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":225815,"byte_end":225902,"line_start":203,"line_end":203,"column_start":5,"column_end":92}},{"value":"/     OffsetDateTime::UNIX_EPOCH + 1.5.seconds()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":225907,"byte_end":225957,"line_start":204,"line_end":204,"column_start":5,"column_end":55}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":225962,"byte_end":225968,"line_start":205,"line_end":205,"column_start":5,"column_end":11}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":225973,"byte_end":226003,"line_start":206,"line_end":206,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":226008,"byte_end":226015,"line_start":207,"line_end":207,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1331},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":227728,"byte_end":227753,"line_start":249,"line_end":249,"column_start":18,"column_end":43},"name":"from_unix_timestamp_nanos","qualname":"<OffsetDateTime>::from_unix_timestamp_nanos","value":"const fn from_unix_timestamp_nanos(i128)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Construct an `OffsetDateTime` from the provided Unix timestamp (in nanoseconds). Calling\n `.offset()` on the resulting value is guaranteed to return UTC.","sig":null,"attributes":[{"value":"/ Construct an `OffsetDateTime` from the provided Unix timestamp (in nanoseconds). Calling","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":227160,"byte_end":227252,"line_start":235,"line_end":235,"column_start":5,"column_end":97}},{"value":"/ `.offset()` on the resulting value is guaranteed to return UTC.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":227257,"byte_end":227324,"line_start":236,"line_end":236,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":227329,"byte_end":227332,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":227337,"byte_end":227348,"line_start":238,"line_end":238,"column_start":5,"column_end":16}},{"value":"/ # use time::{OffsetDateTime, macros::datetime};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":227353,"byte_end":227404,"line_start":239,"line_end":239,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":227409,"byte_end":227424,"line_start":240,"line_end":240,"column_start":5,"column_end":20}},{"value":"/     OffsetDateTime::from_unix_timestamp_nanos(0),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":227429,"byte_end":227482,"line_start":241,"line_end":241,"column_start":5,"column_end":58}},{"value":"/     Ok(OffsetDateTime::UNIX_EPOCH),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":227487,"byte_end":227526,"line_start":242,"line_end":242,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":227531,"byte_end":227537,"line_start":243,"line_end":243,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":227542,"byte_end":227557,"line_start":244,"line_end":244,"column_start":5,"column_end":20}},{"value":"/     OffsetDateTime::from_unix_timestamp_nanos(1_546_300_800_000_000_000),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":227562,"byte_end":227639,"line_start":245,"line_end":245,"column_start":5,"column_end":82}},{"value":"/     Ok(datetime!(2019-01-01 0:00 UTC)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":227644,"byte_end":227687,"line_start":246,"line_end":246,"column_start":5,"column_end":48}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":227692,"byte_end":227698,"line_start":247,"line_end":247,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":227703,"byte_end":227710,"line_start":248,"line_end":248,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1332},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":228640,"byte_end":228646,"line_start":274,"line_end":274,"column_start":18,"column_end":24},"name":"offset","qualname":"<OffsetDateTime>::offset","value":"const fn offset(Self) -> UtcOffset","parent":null,"children":[],"decl_id":null,"docs":" Get the [`UtcOffset`].","sig":null,"attributes":[{"value":"/ Get the [`UtcOffset`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":228364,"byte_end":228390,"line_start":267,"line_end":267,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":228395,"byte_end":228398,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":228403,"byte_end":228414,"line_start":269,"line_end":269,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":228419,"byte_end":228462,"line_start":270,"line_end":270,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).offset(), offset!(UTC));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":228467,"byte_end":228537,"line_start":271,"line_end":271,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 +1).offset(), offset!(+1));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":228542,"byte_end":228610,"line_start":272,"line_end":272,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":228615,"byte_end":228622,"line_start":273,"line_end":273,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1333},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":229008,"byte_end":229022,"line_start":285,"line_end":285,"column_start":18,"column_end":32},"name":"unix_timestamp","qualname":"<OffsetDateTime>::unix_timestamp","value":"const fn unix_timestamp(Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Get the [Unix timestamp](https://en.wikipedia.org/wiki/Unix_time).","sig":null,"attributes":[{"value":"/ Get the [Unix timestamp](https://en.wikipedia.org/wiki/Unix_time).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":228699,"byte_end":228769,"line_start":278,"line_end":278,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":228774,"byte_end":228777,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":228782,"byte_end":228793,"line_start":280,"line_end":280,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":228798,"byte_end":228831,"line_start":281,"line_end":281,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(1970-01-01 0:00 UTC).unix_timestamp(), 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":228836,"byte_end":228903,"line_start":282,"line_end":282,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(datetime!(1970-01-01 0:00 -1).unix_timestamp(), 3_600);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":228908,"byte_end":228978,"line_start":283,"line_end":283,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":228983,"byte_end":228990,"line_start":284,"line_end":284,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1334},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":229798,"byte_end":229818,"line_start":306,"line_end":306,"column_start":18,"column_end":38},"name":"unix_timestamp_nanos","qualname":"<OffsetDateTime>::unix_timestamp_nanos","value":"const fn unix_timestamp_nanos(Self) -> i128","parent":null,"children":[],"decl_id":null,"docs":" Get the Unix timestamp in nanoseconds.","sig":null,"attributes":[{"value":"/ Get the Unix timestamp in nanoseconds.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":229460,"byte_end":229502,"line_start":296,"line_end":296,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":229507,"byte_end":229510,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":229515,"byte_end":229526,"line_start":298,"line_end":298,"column_start":5,"column_end":16}},{"value":"/ use time::macros::datetime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":229531,"byte_end":229562,"line_start":299,"line_end":299,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(datetime!(1970-01-01 0:00 UTC).unix_timestamp_nanos(), 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":229567,"byte_end":229640,"line_start":300,"line_end":300,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":229645,"byte_end":229660,"line_start":301,"line_end":301,"column_start":5,"column_end":20}},{"value":"/     datetime!(1970-01-01 0:00 -1).unix_timestamp_nanos(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":229665,"byte_end":229726,"line_start":302,"line_end":302,"column_start":5,"column_end":66}},{"value":"/     3_600_000_000_000,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":229731,"byte_end":229757,"line_start":303,"line_end":303,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":229762,"byte_end":229768,"line_start":304,"line_end":304,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":229773,"byte_end":229780,"line_start":305,"line_end":305,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1335},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":230326,"byte_end":230330,"line_start":322,"line_end":322,"column_start":18,"column_end":22},"name":"date","qualname":"<OffsetDateTime>::date","value":"const fn date(Self) -> Date","parent":null,"children":[],"decl_id":null,"docs":" Get the [`Date`] in the stored offset.","sig":null,"attributes":[{"value":"/ Get the [`Date`] in the stored offset.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":229928,"byte_end":229970,"line_start":310,"line_end":310,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":229975,"byte_end":229978,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":229983,"byte_end":229994,"line_start":312,"line_end":312,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{date, datetime, offset};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":229999,"byte_end":230048,"line_start":313,"line_end":313,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).date(), date!(2019-01-01));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":230053,"byte_end":230126,"line_start":314,"line_end":314,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":230131,"byte_end":230146,"line_start":315,"line_end":315,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00 UTC)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":230151,"byte_end":230189,"line_start":316,"line_end":316,"column_start":5,"column_end":43}},{"value":"/         .to_offset(offset!(-1))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":230194,"byte_end":230229,"line_start":317,"line_end":317,"column_start":5,"column_end":40}},{"value":"/         .date(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":230234,"byte_end":230254,"line_start":318,"line_end":318,"column_start":5,"column_end":25}},{"value":"/     date!(2018-12-31),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":230259,"byte_end":230285,"line_start":319,"line_end":319,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":230290,"byte_end":230296,"line_start":320,"line_end":320,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":230301,"byte_end":230308,"line_start":321,"line_end":321,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1336},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":230779,"byte_end":230783,"line_start":338,"line_end":338,"column_start":18,"column_end":22},"name":"time","qualname":"<OffsetDateTime>::time","value":"const fn time(Self) -> Time","parent":null,"children":[],"decl_id":null,"docs":" Get the [`Time`] in the stored offset.","sig":null,"attributes":[{"value":"/ Get the [`Time`] in the stored offset.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":230393,"byte_end":230435,"line_start":326,"line_end":326,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":230440,"byte_end":230443,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":230448,"byte_end":230459,"line_start":328,"line_end":328,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset, time};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":230464,"byte_end":230513,"line_start":329,"line_end":329,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).time(), time!(0:00));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":230518,"byte_end":230585,"line_start":330,"line_end":330,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":230590,"byte_end":230605,"line_start":331,"line_end":331,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00 UTC)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":230610,"byte_end":230648,"line_start":332,"line_end":332,"column_start":5,"column_end":43}},{"value":"/         .to_offset(offset!(-1))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":230653,"byte_end":230688,"line_start":333,"line_end":333,"column_start":5,"column_end":40}},{"value":"/         .time(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":230693,"byte_end":230713,"line_start":334,"line_end":334,"column_start":5,"column_end":25}},{"value":"/     time!(23:00)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":230718,"byte_end":230738,"line_start":335,"line_end":335,"column_start":5,"column_end":25}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":230743,"byte_end":230749,"line_start":336,"line_end":336,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":230754,"byte_end":230761,"line_start":337,"line_end":337,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1337},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":231314,"byte_end":231318,"line_start":356,"line_end":356,"column_start":18,"column_end":22},"name":"year","qualname":"<OffsetDateTime>::year","value":"const fn year(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the year of the date in the stored offset.","sig":null,"attributes":[{"value":"/ Get the year of the date in the stored offset.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":230874,"byte_end":230924,"line_start":343,"line_end":343,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":230929,"byte_end":230932,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":230937,"byte_end":230948,"line_start":345,"line_end":345,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":230953,"byte_end":230996,"line_start":346,"line_end":346,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).year(), 2019);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":231001,"byte_end":231061,"line_start":347,"line_end":347,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":231066,"byte_end":231081,"line_start":348,"line_end":348,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-12-31 23:00 UTC)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":231086,"byte_end":231125,"line_start":349,"line_end":349,"column_start":5,"column_end":44}},{"value":"/         .to_offset(offset!(+1))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":231130,"byte_end":231165,"line_start":350,"line_end":350,"column_start":5,"column_end":40}},{"value":"/         .year(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":231170,"byte_end":231190,"line_start":351,"line_end":351,"column_start":5,"column_end":25}},{"value":"/     2020,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":231195,"byte_end":231208,"line_start":352,"line_end":352,"column_start":5,"column_end":18}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":231213,"byte_end":231219,"line_start":353,"line_end":353,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00 UTC).year(), 2020);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":231224,"byte_end":231284,"line_start":354,"line_end":354,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":231289,"byte_end":231296,"line_start":355,"line_end":355,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1338},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":231797,"byte_end":231802,"line_start":373,"line_end":373,"column_start":18,"column_end":23},"name":"month","qualname":"<OffsetDateTime>::month","value":"const fn month(Self) -> Month","parent":null,"children":[],"decl_id":null,"docs":" Get the month of the date in the stored offset.","sig":null,"attributes":[{"value":"/ Get the month of the date in the stored offset.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":231372,"byte_end":231423,"line_start":360,"line_end":360,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":231428,"byte_end":231431,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":231436,"byte_end":231447,"line_start":362,"line_end":362,"column_start":5,"column_end":16}},{"value":"/ # use time::Month;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":231452,"byte_end":231474,"line_start":363,"line_end":363,"column_start":5,"column_end":27}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":231479,"byte_end":231522,"line_start":364,"line_end":364,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).month(), Month::January);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":231527,"byte_end":231598,"line_start":365,"line_end":365,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":231603,"byte_end":231618,"line_start":366,"line_end":366,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-12-31 23:00 UTC)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":231623,"byte_end":231662,"line_start":367,"line_end":367,"column_start":5,"column_end":44}},{"value":"/         .to_offset(offset!(+1))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":231667,"byte_end":231702,"line_start":368,"line_end":368,"column_start":5,"column_end":40}},{"value":"/         .month(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":231707,"byte_end":231728,"line_start":369,"line_end":369,"column_start":5,"column_end":26}},{"value":"/     Month::January,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":231733,"byte_end":231756,"line_start":370,"line_end":370,"column_start":5,"column_end":28}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":231761,"byte_end":231767,"line_start":371,"line_end":371,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":231772,"byte_end":231779,"line_start":372,"line_end":372,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1339},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":232298,"byte_end":232301,"line_start":391,"line_end":391,"column_start":18,"column_end":21},"name":"day","qualname":"<OffsetDateTime>::day","value":"const fn day(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the day of the date in the stored offset.","sig":null,"attributes":[{"value":"/ Get the day of the date in the stored offset.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":231859,"byte_end":231908,"line_start":377,"line_end":377,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":231913,"byte_end":231916,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=31`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":231921,"byte_end":231981,"line_start":379,"line_end":379,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":231986,"byte_end":231989,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":231994,"byte_end":232005,"line_start":381,"line_end":381,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":232010,"byte_end":232053,"line_start":382,"line_end":382,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).day(), 1);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":232058,"byte_end":232114,"line_start":383,"line_end":383,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":232119,"byte_end":232134,"line_start":384,"line_end":384,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-12-31 23:00 UTC)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":232139,"byte_end":232178,"line_start":385,"line_end":385,"column_start":5,"column_end":44}},{"value":"/         .to_offset(offset!(+1))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":232183,"byte_end":232218,"line_start":386,"line_end":386,"column_start":5,"column_end":40}},{"value":"/         .day(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":232223,"byte_end":232242,"line_start":387,"line_end":387,"column_start":5,"column_end":24}},{"value":"/     1,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":232247,"byte_end":232257,"line_start":388,"line_end":388,"column_start":5,"column_end":15}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":232262,"byte_end":232268,"line_start":389,"line_end":389,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":232273,"byte_end":232280,"line_start":390,"line_end":390,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1340},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":232813,"byte_end":232820,"line_start":409,"line_end":409,"column_start":18,"column_end":25},"name":"ordinal","qualname":"<OffsetDateTime>::ordinal","value":"const fn ordinal(Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the day of the year of the date in the stored offset.","sig":null,"attributes":[{"value":"/ Get the day of the year of the date in the stored offset.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":232353,"byte_end":232414,"line_start":395,"line_end":395,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":232419,"byte_end":232422,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=366`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":232427,"byte_end":232488,"line_start":397,"line_end":397,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":232493,"byte_end":232496,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":232501,"byte_end":232512,"line_start":399,"line_end":399,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":232517,"byte_end":232560,"line_start":400,"line_end":400,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).ordinal(), 1);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":232565,"byte_end":232625,"line_start":401,"line_end":401,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":232630,"byte_end":232645,"line_start":402,"line_end":402,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-12-31 23:00 UTC)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":232650,"byte_end":232689,"line_start":403,"line_end":403,"column_start":5,"column_end":44}},{"value":"/         .to_offset(offset!(+1))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":232694,"byte_end":232729,"line_start":404,"line_end":404,"column_start":5,"column_end":40}},{"value":"/         .ordinal(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":232734,"byte_end":232757,"line_start":405,"line_end":405,"column_start":5,"column_end":28}},{"value":"/     1,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":232762,"byte_end":232772,"line_start":406,"line_end":406,"column_start":5,"column_end":15}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":232777,"byte_end":232783,"line_start":407,"line_end":407,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":232788,"byte_end":232795,"line_start":408,"line_end":408,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1341},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":233369,"byte_end":233377,"line_start":424,"line_end":424,"column_start":18,"column_end":26},"name":"iso_week","qualname":"<OffsetDateTime>::iso_week","value":"const fn iso_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the ISO week number of the date in the stored offset.","sig":null,"attributes":[{"value":"/ Get the ISO week number of the date in the stored offset.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":232877,"byte_end":232938,"line_start":413,"line_end":413,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":232943,"byte_end":232946,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=53`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":232951,"byte_end":233011,"line_start":415,"line_end":415,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":233016,"byte_end":233019,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":233024,"byte_end":233035,"line_start":417,"line_end":417,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":233040,"byte_end":233073,"line_start":418,"line_end":418,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).iso_week(), 1);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":233078,"byte_end":233139,"line_start":419,"line_end":419,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00 UTC).iso_week(), 1);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":233144,"byte_end":233205,"line_start":420,"line_end":420,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2020-12-31 0:00 UTC).iso_week(), 53);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":233210,"byte_end":233272,"line_start":421,"line_end":421,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(datetime!(2021-01-01 0:00 UTC).iso_week(), 53);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":233277,"byte_end":233339,"line_start":422,"line_end":422,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":233344,"byte_end":233351,"line_start":423,"line_end":423,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1342},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":233964,"byte_end":233981,"line_start":439,"line_end":439,"column_start":18,"column_end":35},"name":"sunday_based_week","qualname":"<OffsetDateTime>::sunday_based_week","value":"const fn sunday_based_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the week number where week 1 begins on the first Sunday.","sig":null,"attributes":[{"value":"/ Get the week number where week 1 begins on the first Sunday.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":233434,"byte_end":233498,"line_start":428,"line_end":428,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":233503,"byte_end":233506,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..=53`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":233511,"byte_end":233571,"line_start":430,"line_end":430,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":233576,"byte_end":233579,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":233584,"byte_end":233595,"line_start":432,"line_end":432,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":233600,"byte_end":233633,"line_start":433,"line_end":433,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).sunday_based_week(), 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":233638,"byte_end":233708,"line_start":434,"line_end":434,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00 UTC).sunday_based_week(), 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":233713,"byte_end":233783,"line_start":435,"line_end":435,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2020-12-31 0:00 UTC).sunday_based_week(), 52);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":233788,"byte_end":233859,"line_start":436,"line_end":436,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(datetime!(2021-01-01 0:00 UTC).sunday_based_week(), 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":233864,"byte_end":233934,"line_start":437,"line_end":437,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":233939,"byte_end":233946,"line_start":438,"line_end":438,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1343},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":234577,"byte_end":234594,"line_start":454,"line_end":454,"column_start":18,"column_end":35},"name":"monday_based_week","qualname":"<OffsetDateTime>::monday_based_week","value":"const fn monday_based_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the week number where week 1 begins on the first Monday.","sig":null,"attributes":[{"value":"/ Get the week number where week 1 begins on the first Monday.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":234047,"byte_end":234111,"line_start":443,"line_end":443,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":234116,"byte_end":234119,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..=53`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":234124,"byte_end":234184,"line_start":445,"line_end":445,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":234189,"byte_end":234192,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":234197,"byte_end":234208,"line_start":447,"line_end":447,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":234213,"byte_end":234246,"line_start":448,"line_end":448,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).monday_based_week(), 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":234251,"byte_end":234321,"line_start":449,"line_end":449,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00 UTC).monday_based_week(), 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":234326,"byte_end":234396,"line_start":450,"line_end":450,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2020-12-31 0:00 UTC).monday_based_week(), 52);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":234401,"byte_end":234472,"line_start":451,"line_end":451,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(datetime!(2021-01-01 0:00 UTC).monday_based_week(), 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":234477,"byte_end":234547,"line_start":452,"line_end":452,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":234552,"byte_end":234559,"line_start":453,"line_end":453,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1344},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":234926,"byte_end":234942,"line_start":467,"line_end":467,"column_start":18,"column_end":34},"name":"to_calendar_date","qualname":"<OffsetDateTime>::to_calendar_date","value":"const fn to_calendar_date(Self) -> (i32, Month, u8)","parent":null,"children":[],"decl_id":null,"docs":" Get the year, month, and day.","sig":null,"attributes":[{"value":"/ Get the year, month, and day.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":234660,"byte_end":234693,"line_start":458,"line_end":458,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":234698,"byte_end":234701,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":234706,"byte_end":234717,"line_start":460,"line_end":460,"column_start":5,"column_end":16}},{"value":"/ # use time::{macros::datetime, Month};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":234722,"byte_end":234764,"line_start":461,"line_end":461,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":234769,"byte_end":234784,"line_start":462,"line_end":462,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00 UTC).to_calendar_date(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":234789,"byte_end":234847,"line_start":463,"line_end":463,"column_start":5,"column_end":63}},{"value":"/     (2019, Month::January, 1)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":234852,"byte_end":234885,"line_start":464,"line_end":464,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":234890,"byte_end":234896,"line_start":465,"line_end":465,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":234901,"byte_end":234908,"line_start":466,"line_end":466,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1345},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":235268,"byte_end":235283,"line_start":480,"line_end":480,"column_start":18,"column_end":33},"name":"to_ordinal_date","qualname":"<OffsetDateTime>::to_ordinal_date","value":"const fn to_ordinal_date(Self) -> (i32, u16)","parent":null,"children":[],"decl_id":null,"docs":" Get the year and ordinal day number.","sig":null,"attributes":[{"value":"/ Get the year and ordinal day number.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":235021,"byte_end":235061,"line_start":471,"line_end":471,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":235066,"byte_end":235069,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":235074,"byte_end":235085,"line_start":473,"line_end":473,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":235090,"byte_end":235123,"line_start":474,"line_end":474,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":235128,"byte_end":235143,"line_start":475,"line_end":475,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00 UTC).to_ordinal_date(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":235148,"byte_end":235205,"line_start":476,"line_end":476,"column_start":5,"column_end":62}},{"value":"/     (2019, 1)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":235210,"byte_end":235227,"line_start":477,"line_end":477,"column_start":5,"column_end":22}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":235232,"byte_end":235238,"line_start":478,"line_end":478,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":235243,"byte_end":235250,"line_start":479,"line_end":479,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1346},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":236142,"byte_end":236158,"line_start":509,"line_end":509,"column_start":18,"column_end":34},"name":"to_iso_week_date","qualname":"<OffsetDateTime>::to_iso_week_date","value":"const fn to_iso_week_date(Self) -> (i32, u8, Weekday)","parent":null,"children":[],"decl_id":null,"docs":" Get the ISO 8601 year, week number, and weekday.","sig":null,"attributes":[{"value":"/ Get the ISO 8601 year, week number, and weekday.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":235355,"byte_end":235407,"line_start":484,"line_end":484,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":235412,"byte_end":235415,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":235420,"byte_end":235431,"line_start":486,"line_end":486,"column_start":5,"column_end":16}},{"value":"/ # use time::{Weekday::*, macros::datetime};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":235436,"byte_end":235483,"line_start":487,"line_end":487,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":235488,"byte_end":235503,"line_start":488,"line_end":488,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00 UTC).to_iso_week_date(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":235508,"byte_end":235566,"line_start":489,"line_end":489,"column_start":5,"column_end":63}},{"value":"/     (2019, 1, Tuesday)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":235571,"byte_end":235597,"line_start":490,"line_end":490,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":235602,"byte_end":235608,"line_start":491,"line_end":491,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":235613,"byte_end":235628,"line_start":492,"line_end":492,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-10-04 0:00 UTC).to_iso_week_date(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":235633,"byte_end":235691,"line_start":493,"line_end":493,"column_start":5,"column_end":63}},{"value":"/     (2019, 40, Friday)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":235696,"byte_end":235722,"line_start":494,"line_end":494,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":235727,"byte_end":235733,"line_start":495,"line_end":495,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":235738,"byte_end":235753,"line_start":496,"line_end":496,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00 UTC).to_iso_week_date(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":235758,"byte_end":235816,"line_start":497,"line_end":497,"column_start":5,"column_end":63}},{"value":"/     (2020, 1, Wednesday)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":235821,"byte_end":235849,"line_start":498,"line_end":498,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":235854,"byte_end":235860,"line_start":499,"line_end":499,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":235865,"byte_end":235880,"line_start":500,"line_end":500,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-12-31 0:00 UTC).to_iso_week_date(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":235885,"byte_end":235943,"line_start":501,"line_end":501,"column_start":5,"column_end":63}},{"value":"/     (2020, 53, Thursday)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":235948,"byte_end":235976,"line_start":502,"line_end":502,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":235981,"byte_end":235987,"line_start":503,"line_end":503,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":235992,"byte_end":236007,"line_start":504,"line_end":504,"column_start":5,"column_end":20}},{"value":"/     datetime!(2021-01-01 0:00 UTC).to_iso_week_date(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":236012,"byte_end":236070,"line_start":505,"line_end":505,"column_start":5,"column_end":63}},{"value":"/     (2020, 53, Friday)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":236075,"byte_end":236101,"line_start":506,"line_end":506,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":236106,"byte_end":236112,"line_start":507,"line_end":507,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":236117,"byte_end":236124,"line_start":508,"line_end":508,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1347},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":236609,"byte_end":236616,"line_start":521,"line_end":521,"column_start":18,"column_end":25},"name":"weekday","qualname":"<OffsetDateTime>::weekday","value":"const fn weekday(Self) -> Weekday","parent":null,"children":[],"decl_id":null,"docs":" Get the weekday of the date in the stored offset.","sig":null,"attributes":[{"value":"/ Get the weekday of the date in the stored offset.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":236239,"byte_end":236292,"line_start":513,"line_end":513,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":236297,"byte_end":236300,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":236305,"byte_end":236316,"line_start":515,"line_end":515,"column_start":5,"column_end":16}},{"value":"/ # use time::{Weekday::*, macros::datetime};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":236321,"byte_end":236368,"line_start":516,"line_end":516,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).weekday(), Tuesday);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":236373,"byte_end":236439,"line_start":517,"line_end":517,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(datetime!(2019-02-01 0:00 UTC).weekday(), Friday);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":236444,"byte_end":236509,"line_start":518,"line_end":518,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(datetime!(2019-03-01 0:00 UTC).weekday(), Friday);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":236514,"byte_end":236579,"line_start":519,"line_end":519,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":236584,"byte_end":236591,"line_start":520,"line_end":520,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1348},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":237379,"byte_end":237392,"line_start":537,"line_end":537,"column_start":18,"column_end":31},"name":"to_julian_day","qualname":"<OffsetDateTime>::to_julian_day","value":"const fn to_julian_day(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the Julian day for the date. The time is not taken into account for this calculation.","sig":null,"attributes":[{"value":"/ Get the Julian day for the date. The time is not taken into account for this calculation.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":236677,"byte_end":236770,"line_start":525,"line_end":525,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":236775,"byte_end":236778,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ The algorithm to perform this conversion is derived from one provided by Peter Baum; it is","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":236783,"byte_end":236877,"line_start":527,"line_end":527,"column_start":5,"column_end":99}},{"value":"/ freely available [here](https://www.researchgate.net/publication/316558298_Date_Algorithms).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":236882,"byte_end":236978,"line_start":528,"line_end":528,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":236983,"byte_end":236986,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":236991,"byte_end":237002,"line_start":530,"line_end":530,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":237007,"byte_end":237040,"line_start":531,"line_end":531,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(-4713-11-24 0:00 UTC).to_julian_day(), 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":237045,"byte_end":237112,"line_start":532,"line_end":532,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(datetime!(2000-01-01 0:00 UTC).to_julian_day(), 2_451_545);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":237117,"byte_end":237191,"line_start":533,"line_end":533,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).to_julian_day(), 2_458_485);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":237196,"byte_end":237270,"line_start":534,"line_end":534,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(datetime!(2019-12-31 0:00 UTC).to_julian_day(), 2_458_849);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":237275,"byte_end":237349,"line_start":535,"line_end":535,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":237354,"byte_end":237361,"line_start":536,"line_end":536,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1349},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":237802,"byte_end":237808,"line_start":550,"line_end":550,"column_start":18,"column_end":24},"name":"to_hms","qualname":"<OffsetDateTime>::to_hms","value":"const fn to_hms(Self) -> (u8, u8, u8)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, and second.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, and second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":237513,"byte_end":237556,"line_start":543,"line_end":543,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":237561,"byte_end":237564,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":237569,"byte_end":237580,"line_start":545,"line_end":545,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":237585,"byte_end":237618,"line_start":546,"line_end":546,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00:00 UTC).to_hms(), (0, 0, 0));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":237623,"byte_end":237693,"line_start":547,"line_end":547,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2020-01-01 23:59:59 UTC).to_hms(), (23, 59, 59));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":237698,"byte_end":237772,"line_start":548,"line_end":548,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":237777,"byte_end":237784,"line_start":549,"line_end":549,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1350},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":238267,"byte_end":238279,"line_start":567,"line_end":567,"column_start":18,"column_end":30},"name":"to_hms_milli","qualname":"<OffsetDateTime>::to_hms_milli","value":"const fn to_hms_milli(Self) -> (u8, u8, u8, u16)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and millisecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and millisecond.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":237873,"byte_end":237929,"line_start":554,"line_end":554,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":237934,"byte_end":237937,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":237942,"byte_end":237953,"line_start":556,"line_end":556,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":237958,"byte_end":237991,"line_start":557,"line_end":557,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":237996,"byte_end":238011,"line_start":558,"line_end":558,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00:00 UTC).to_hms_milli(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":238016,"byte_end":238073,"line_start":559,"line_end":559,"column_start":5,"column_end":62}},{"value":"/     (0, 0, 0, 0)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":238078,"byte_end":238098,"line_start":560,"line_end":560,"column_start":5,"column_end":25}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":238103,"byte_end":238109,"line_start":561,"line_end":561,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":238114,"byte_end":238129,"line_start":562,"line_end":562,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 23:59:59.999 UTC).to_hms_milli(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":238134,"byte_end":238196,"line_start":563,"line_end":563,"column_start":5,"column_end":67}},{"value":"/     (23, 59, 59, 999)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":238201,"byte_end":238226,"line_start":564,"line_end":564,"column_start":5,"column_end":30}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":238231,"byte_end":238237,"line_start":565,"line_end":565,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":238242,"byte_end":238249,"line_start":566,"line_end":566,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1351},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":238757,"byte_end":238769,"line_start":584,"line_end":584,"column_start":18,"column_end":30},"name":"to_hms_micro","qualname":"<OffsetDateTime>::to_hms_micro","value":"const fn to_hms_micro(Self) -> (u8, u8, u8, u32)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and microsecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and microsecond.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":238355,"byte_end":238411,"line_start":571,"line_end":571,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":238416,"byte_end":238419,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":238424,"byte_end":238435,"line_start":573,"line_end":573,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":238440,"byte_end":238473,"line_start":574,"line_end":574,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":238478,"byte_end":238493,"line_start":575,"line_end":575,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00:00 UTC).to_hms_micro(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":238498,"byte_end":238555,"line_start":576,"line_end":576,"column_start":5,"column_end":62}},{"value":"/     (0, 0, 0, 0)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":238560,"byte_end":238580,"line_start":577,"line_end":577,"column_start":5,"column_end":25}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":238585,"byte_end":238591,"line_start":578,"line_end":578,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":238596,"byte_end":238611,"line_start":579,"line_end":579,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 23:59:59.999_999 UTC).to_hms_micro(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":238616,"byte_end":238682,"line_start":580,"line_end":580,"column_start":5,"column_end":71}},{"value":"/     (23, 59, 59, 999_999)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":238687,"byte_end":238716,"line_start":581,"line_end":581,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":238721,"byte_end":238727,"line_start":582,"line_end":582,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":238732,"byte_end":238739,"line_start":583,"line_end":583,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1352},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":239252,"byte_end":239263,"line_start":601,"line_end":601,"column_start":18,"column_end":29},"name":"to_hms_nano","qualname":"<OffsetDateTime>::to_hms_nano","value":"const fn to_hms_nano(Self) -> (u8, u8, u8, u32)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and nanosecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and nanosecond.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":238845,"byte_end":238900,"line_start":588,"line_end":588,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":238905,"byte_end":238908,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":238913,"byte_end":238924,"line_start":590,"line_end":590,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":238929,"byte_end":238962,"line_start":591,"line_end":591,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":238967,"byte_end":238982,"line_start":592,"line_end":592,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00:00 UTC).to_hms_nano(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":238987,"byte_end":239043,"line_start":593,"line_end":593,"column_start":5,"column_end":61}},{"value":"/     (0, 0, 0, 0)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":239048,"byte_end":239068,"line_start":594,"line_end":594,"column_start":5,"column_end":25}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":239073,"byte_end":239079,"line_start":595,"line_end":595,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":239084,"byte_end":239099,"line_start":596,"line_end":596,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 23:59:59.999_999_999 UTC).to_hms_nano(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":239104,"byte_end":239173,"line_start":597,"line_end":597,"column_start":5,"column_end":74}},{"value":"/     (23, 59, 59, 999_999_999)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":239178,"byte_end":239211,"line_start":598,"line_end":598,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":239216,"byte_end":239222,"line_start":599,"line_end":599,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":239227,"byte_end":239234,"line_start":600,"line_end":600,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1353},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":239777,"byte_end":239781,"line_start":619,"line_end":619,"column_start":18,"column_end":22},"name":"hour","qualname":"<OffsetDateTime>::hour","value":"const fn hour(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour in the stored offset.","sig":null,"attributes":[{"value":"/ Get the clock hour in the stored offset.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":239338,"byte_end":239382,"line_start":605,"line_end":605,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":239387,"byte_end":239390,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..24`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":239395,"byte_end":239454,"line_start":607,"line_end":607,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":239459,"byte_end":239462,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":239467,"byte_end":239478,"line_start":609,"line_end":609,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":239483,"byte_end":239526,"line_start":610,"line_end":610,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).hour(), 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":239531,"byte_end":239588,"line_start":611,"line_end":611,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":239593,"byte_end":239608,"line_start":612,"line_end":612,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 23:59:59 UTC)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":239613,"byte_end":239655,"line_start":613,"line_end":613,"column_start":5,"column_end":47}},{"value":"/         .to_offset(offset!(-2))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":239660,"byte_end":239695,"line_start":614,"line_end":614,"column_start":5,"column_end":40}},{"value":"/         .hour(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":239700,"byte_end":239720,"line_start":615,"line_end":615,"column_start":5,"column_end":25}},{"value":"/     21,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":239725,"byte_end":239736,"line_start":616,"line_end":616,"column_start":5,"column_end":16}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":239741,"byte_end":239747,"line_start":617,"line_end":617,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":239752,"byte_end":239759,"line_start":618,"line_end":618,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1354},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":240292,"byte_end":240298,"line_start":637,"line_end":637,"column_start":18,"column_end":24},"name":"minute","qualname":"<OffsetDateTime>::minute","value":"const fn minute(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the minute within the hour in the stored offset.","sig":null,"attributes":[{"value":"/ Get the minute within the hour in the stored offset.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":239834,"byte_end":239890,"line_start":623,"line_end":623,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":239895,"byte_end":239898,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..60`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":239903,"byte_end":239962,"line_start":625,"line_end":625,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":239967,"byte_end":239970,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":239975,"byte_end":239986,"line_start":627,"line_end":627,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":239991,"byte_end":240034,"line_start":628,"line_end":628,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).minute(), 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":240039,"byte_end":240098,"line_start":629,"line_end":629,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":240103,"byte_end":240118,"line_start":630,"line_end":630,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 23:59:59 UTC)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":240123,"byte_end":240165,"line_start":631,"line_end":631,"column_start":5,"column_end":47}},{"value":"/         .to_offset(offset!(+0:30))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":240170,"byte_end":240208,"line_start":632,"line_end":632,"column_start":5,"column_end":43}},{"value":"/         .minute(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":240213,"byte_end":240235,"line_start":633,"line_end":633,"column_start":5,"column_end":27}},{"value":"/     29,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":240240,"byte_end":240251,"line_start":634,"line_end":634,"column_start":5,"column_end":16}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":240256,"byte_end":240262,"line_start":635,"line_end":635,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":240267,"byte_end":240274,"line_start":636,"line_end":636,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1355},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":240816,"byte_end":240822,"line_start":655,"line_end":655,"column_start":18,"column_end":24},"name":"second","qualname":"<OffsetDateTime>::second","value":"const fn second(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the second within the minute in the stored offset.","sig":null,"attributes":[{"value":"/ Get the second within the minute in the stored offset.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":240353,"byte_end":240411,"line_start":641,"line_end":641,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":240416,"byte_end":240419,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..60`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":240424,"byte_end":240483,"line_start":643,"line_end":643,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":240488,"byte_end":240491,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":240496,"byte_end":240507,"line_start":645,"line_end":645,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":240512,"byte_end":240555,"line_start":646,"line_end":646,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).second(), 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":240560,"byte_end":240619,"line_start":647,"line_end":647,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":240624,"byte_end":240639,"line_start":648,"line_end":648,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 23:59:59 UTC)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":240644,"byte_end":240686,"line_start":649,"line_end":649,"column_start":5,"column_end":47}},{"value":"/         .to_offset(offset!(+0:00:30))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":240691,"byte_end":240732,"line_start":650,"line_end":650,"column_start":5,"column_end":46}},{"value":"/         .second(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":240737,"byte_end":240759,"line_start":651,"line_end":651,"column_start":5,"column_end":27}},{"value":"/     29,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":240764,"byte_end":240775,"line_start":652,"line_end":652,"column_start":5,"column_end":16}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":240780,"byte_end":240786,"line_start":653,"line_end":653,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":240791,"byte_end":240798,"line_start":654,"line_end":654,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1356},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":241400,"byte_end":241411,"line_start":671,"line_end":671,"column_start":18,"column_end":29},"name":"millisecond","qualname":"<OffsetDateTime>::millisecond","value":"const fn millisecond(Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the milliseconds within the second in the stored offset.","sig":null,"attributes":[{"value":"/ Get the milliseconds within the second in the stored offset.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":241021,"byte_end":241085,"line_start":662,"line_end":662,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":241090,"byte_end":241093,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":241098,"byte_end":241160,"line_start":664,"line_end":664,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":241165,"byte_end":241168,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":241173,"byte_end":241184,"line_start":666,"line_end":666,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":241189,"byte_end":241222,"line_start":667,"line_end":667,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).millisecond(), 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":241227,"byte_end":241291,"line_start":668,"line_end":668,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(datetime!(2019-01-01 23:59:59.999 UTC).millisecond(), 999);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":241296,"byte_end":241370,"line_start":669,"line_end":669,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":241375,"byte_end":241382,"line_start":670,"line_end":670,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1357},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":241898,"byte_end":241909,"line_start":687,"line_end":687,"column_start":18,"column_end":29},"name":"microsecond","qualname":"<OffsetDateTime>::microsecond","value":"const fn microsecond(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the microseconds within the second in the stored offset.","sig":null,"attributes":[{"value":"/ Get the microseconds within the second in the stored offset.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":241472,"byte_end":241536,"line_start":675,"line_end":675,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":241541,"byte_end":241544,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000_000`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":241549,"byte_end":241615,"line_start":677,"line_end":677,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":241620,"byte_end":241623,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":241628,"byte_end":241639,"line_start":679,"line_end":679,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":241644,"byte_end":241677,"line_start":680,"line_end":680,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).microsecond(), 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":241682,"byte_end":241746,"line_start":681,"line_end":681,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":241751,"byte_end":241766,"line_start":682,"line_end":682,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 23:59:59.999_999 UTC).microsecond(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":241771,"byte_end":241836,"line_start":683,"line_end":683,"column_start":5,"column_end":70}},{"value":"/     999_999,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":241841,"byte_end":241857,"line_start":684,"line_end":684,"column_start":5,"column_end":21}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":241862,"byte_end":241868,"line_start":685,"line_end":685,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":241873,"byte_end":241880,"line_start":686,"line_end":686,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1358},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":242405,"byte_end":242415,"line_start":703,"line_end":703,"column_start":18,"column_end":28},"name":"nanosecond","qualname":"<OffsetDateTime>::nanosecond","value":"const fn nanosecond(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the nanoseconds within the second in the stored offset.","sig":null,"attributes":[{"value":"/ Get the nanoseconds within the second in the stored offset.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":241970,"byte_end":242033,"line_start":691,"line_end":691,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":242038,"byte_end":242041,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000_000_000`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":242046,"byte_end":242116,"line_start":693,"line_end":693,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":242121,"byte_end":242124,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":242129,"byte_end":242140,"line_start":695,"line_end":695,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":242145,"byte_end":242178,"line_start":696,"line_end":696,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).nanosecond(), 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":242183,"byte_end":242246,"line_start":697,"line_end":697,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":242251,"byte_end":242266,"line_start":698,"line_end":698,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 23:59:59.999_999_999 UTC).nanosecond(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":242271,"byte_end":242339,"line_start":699,"line_end":699,"column_start":5,"column_end":73}},{"value":"/     999_999_999,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":242344,"byte_end":242364,"line_start":700,"line_end":700,"column_start":5,"column_end":25}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":242369,"byte_end":242375,"line_start":701,"line_end":701,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":242380,"byte_end":242387,"line_start":702,"line_end":702,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1359},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":243226,"byte_end":243237,"line_start":726,"line_end":726,"column_start":18,"column_end":29},"name":"checked_add","qualname":"<OffsetDateTime>::checked_add","value":"const fn checked_add(Self, Duration) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self + duration`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self + duration`, returning `None` if an overflow occurred.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":242564,"byte_end":242637,"line_start":710,"line_end":710,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":242642,"byte_end":242645,"line_start":711,"line_end":711,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":242650,"byte_end":242657,"line_start":712,"line_end":712,"column_start":5,"column_end":12}},{"value":"/ # use time::{Date, ext::NumericalDuration};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":242662,"byte_end":242709,"line_start":713,"line_end":713,"column_start":5,"column_end":52}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":242714,"byte_end":242757,"line_start":714,"line_end":714,"column_start":5,"column_end":48}},{"value":"/ let datetime = Date::MIN.midnight().assume_offset(offset!(+10));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":242762,"byte_end":242830,"line_start":715,"line_end":715,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(datetime.checked_add((-2).days()), None);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":242835,"byte_end":242891,"line_start":716,"line_end":716,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":242896,"byte_end":242899,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ let datetime = Date::MAX.midnight().assume_offset(offset!(+10));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":242904,"byte_end":242972,"line_start":718,"line_end":718,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(datetime.checked_add(2.days()), None);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":242977,"byte_end":243030,"line_start":719,"line_end":719,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":243035,"byte_end":243038,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":243043,"byte_end":243058,"line_start":721,"line_end":721,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019 - 11 - 25 15:30 +10).checked_add(27.hours()),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":243063,"byte_end":243131,"line_start":722,"line_end":722,"column_start":5,"column_end":73}},{"value":"/     Some(datetime!(2019 - 11 - 26 18:30 +10))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":243136,"byte_end":243185,"line_start":723,"line_end":723,"column_start":5,"column_end":54}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":243190,"byte_end":243196,"line_start":724,"line_end":724,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":243201,"byte_end":243208,"line_start":725,"line_end":725,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1360},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":244054,"byte_end":244065,"line_start":746,"line_end":746,"column_start":18,"column_end":29},"name":"checked_sub","qualname":"<OffsetDateTime>::checked_sub","value":"const fn checked_sub(Self, Duration) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self - duration`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self - duration`, returning `None` if an overflow occurred.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":243392,"byte_end":243465,"line_start":730,"line_end":730,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":243470,"byte_end":243473,"line_start":731,"line_end":731,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":243478,"byte_end":243485,"line_start":732,"line_end":732,"column_start":5,"column_end":12}},{"value":"/ # use time::{Date, ext::NumericalDuration};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":243490,"byte_end":243537,"line_start":733,"line_end":733,"column_start":5,"column_end":52}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":243542,"byte_end":243585,"line_start":734,"line_end":734,"column_start":5,"column_end":48}},{"value":"/ let datetime = Date::MIN.midnight().assume_offset(offset!(+10));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":243590,"byte_end":243658,"line_start":735,"line_end":735,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(datetime.checked_sub(2.days()), None);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":243663,"byte_end":243716,"line_start":736,"line_end":736,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":243721,"byte_end":243724,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ let datetime = Date::MAX.midnight().assume_offset(offset!(+10));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":243729,"byte_end":243797,"line_start":738,"line_end":738,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(datetime.checked_sub((-2).days()), None);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":243802,"byte_end":243858,"line_start":739,"line_end":739,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":243863,"byte_end":243866,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":243871,"byte_end":243886,"line_start":741,"line_end":741,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019 - 11 - 25 15:30 +10).checked_sub(27.hours()),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":243891,"byte_end":243959,"line_start":742,"line_end":742,"column_start":5,"column_end":73}},{"value":"/     Some(datetime!(2019 - 11 - 24 12:30 +10))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":243964,"byte_end":244013,"line_start":743,"line_end":743,"column_start":5,"column_end":54}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":244018,"byte_end":244024,"line_start":744,"line_end":744,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":244029,"byte_end":244036,"line_start":745,"line_end":745,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1361},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":245007,"byte_end":245021,"line_start":772,"line_end":772,"column_start":18,"column_end":32},"name":"saturating_add","qualname":"<OffsetDateTime>::saturating_add","value":"const fn saturating_add(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self + duration`, saturating value on overflow.","sig":null,"attributes":[{"value":"/ Computes `self + duration`, saturating value on overflow.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":244294,"byte_end":244355,"line_start":752,"line_end":752,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":244360,"byte_end":244363,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":244368,"byte_end":244375,"line_start":754,"line_end":754,"column_start":5,"column_end":12}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":244380,"byte_end":244419,"line_start":755,"line_end":755,"column_start":5,"column_end":44}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":244424,"byte_end":244457,"line_start":756,"line_end":756,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":244462,"byte_end":244477,"line_start":757,"line_end":757,"column_start":5,"column_end":20}},{"value":"/     datetime!(-999999 - 01 - 01 0:00 +10).saturating_add((-2).days()),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":244482,"byte_end":244556,"line_start":758,"line_end":758,"column_start":5,"column_end":79}},{"value":"/     datetime!(-999999 - 01 - 01 0:00 +10)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":244561,"byte_end":244606,"line_start":759,"line_end":759,"column_start":5,"column_end":50}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":244611,"byte_end":244617,"line_start":760,"line_end":760,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":244622,"byte_end":244625,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":244630,"byte_end":244645,"line_start":762,"line_end":762,"column_start":5,"column_end":20}},{"value":"/     datetime!(+999999 - 12 - 31 23:59:59.999_999_999 +10).saturating_add(2.days()),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":244650,"byte_end":244737,"line_start":763,"line_end":763,"column_start":5,"column_end":92}},{"value":"/     datetime!(+999999 - 12 - 31 23:59:59.999_999_999 +10)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":244742,"byte_end":244803,"line_start":764,"line_end":764,"column_start":5,"column_end":66}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":244808,"byte_end":244814,"line_start":765,"line_end":765,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":244819,"byte_end":244822,"line_start":766,"line_end":766,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":244827,"byte_end":244842,"line_start":767,"line_end":767,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019 - 11 - 25 15:30 +10).saturating_add(27.hours()),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":244847,"byte_end":244918,"line_start":768,"line_end":768,"column_start":5,"column_end":76}},{"value":"/     datetime!(2019 - 11 - 26 18:30 +10)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":244923,"byte_end":244966,"line_start":769,"line_end":769,"column_start":5,"column_end":48}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":244971,"byte_end":244977,"line_start":770,"line_end":770,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":244982,"byte_end":244989,"line_start":771,"line_end":771,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1362},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":246109,"byte_end":246123,"line_start":803,"line_end":803,"column_start":18,"column_end":32},"name":"saturating_sub","qualname":"<OffsetDateTime>::saturating_sub","value":"const fn saturating_sub(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self - duration`, saturating value on overflow.","sig":null,"attributes":[{"value":"/ Computes `self - duration`, saturating value on overflow.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":245396,"byte_end":245457,"line_start":783,"line_end":783,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":245462,"byte_end":245465,"line_start":784,"line_end":784,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":245470,"byte_end":245477,"line_start":785,"line_end":785,"column_start":5,"column_end":12}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":245482,"byte_end":245521,"line_start":786,"line_end":786,"column_start":5,"column_end":44}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":245526,"byte_end":245559,"line_start":787,"line_end":787,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":245564,"byte_end":245579,"line_start":788,"line_end":788,"column_start":5,"column_end":20}},{"value":"/     datetime!(-999999 - 01 - 01 0:00 +10).saturating_sub(2.days()),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":245584,"byte_end":245655,"line_start":789,"line_end":789,"column_start":5,"column_end":76}},{"value":"/     datetime!(-999999 - 01 - 01 0:00 +10)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":245660,"byte_end":245705,"line_start":790,"line_end":790,"column_start":5,"column_end":50}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":245710,"byte_end":245716,"line_start":791,"line_end":791,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":245721,"byte_end":245724,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":245729,"byte_end":245744,"line_start":793,"line_end":793,"column_start":5,"column_end":20}},{"value":"/     datetime!(+999999 - 12 - 31 23:59:59.999_999_999 +10).saturating_sub((-2).days()),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":245749,"byte_end":245839,"line_start":794,"line_end":794,"column_start":5,"column_end":95}},{"value":"/     datetime!(+999999 - 12 - 31 23:59:59.999_999_999 +10)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":245844,"byte_end":245905,"line_start":795,"line_end":795,"column_start":5,"column_end":66}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":245910,"byte_end":245916,"line_start":796,"line_end":796,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":245921,"byte_end":245924,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":245929,"byte_end":245944,"line_start":798,"line_end":798,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019 - 11 - 25 15:30 +10).saturating_sub(27.hours()),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":245949,"byte_end":246020,"line_start":799,"line_end":799,"column_start":5,"column_end":76}},{"value":"/     datetime!(2019 - 11 - 24 12:30 +10)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":246025,"byte_end":246068,"line_start":800,"line_end":800,"column_start":5,"column_end":48}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":246073,"byte_end":246079,"line_start":801,"line_end":801,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":246084,"byte_end":246091,"line_start":802,"line_end":802,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1364},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":247372,"byte_end":247384,"line_start":838,"line_end":838,"column_start":18,"column_end":30},"name":"replace_time","qualname":"<OffsetDateTime>::replace_time","value":"const fn replace_time(Self, Time) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Replace the time, which is assumed to be in the stored offset. The date and offset\n components are unchanged.","sig":null,"attributes":[{"value":"/ Replace the time, which is assumed to be in the stored offset. The date and offset","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":246640,"byte_end":246726,"line_start":819,"line_end":819,"column_start":5,"column_end":91}},{"value":"/ components are unchanged.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":246731,"byte_end":246760,"line_start":820,"line_end":820,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":246765,"byte_end":246768,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":246773,"byte_end":246784,"line_start":822,"line_end":822,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, time};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":246789,"byte_end":246830,"line_start":823,"line_end":823,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":246835,"byte_end":246850,"line_start":824,"line_end":824,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 5:00 UTC).replace_time(time!(12:00)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":246855,"byte_end":246921,"line_start":825,"line_end":825,"column_start":5,"column_end":71}},{"value":"/     datetime!(2020-01-01 12:00 UTC)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":246926,"byte_end":246965,"line_start":826,"line_end":826,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":246970,"byte_end":246976,"line_start":827,"line_end":827,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":246981,"byte_end":246996,"line_start":828,"line_end":828,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 12:00 -5).replace_time(time!(7:00)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":247001,"byte_end":247066,"line_start":829,"line_end":829,"column_start":5,"column_end":70}},{"value":"/     datetime!(2020-01-01 7:00 -5)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":247071,"byte_end":247108,"line_start":830,"line_end":830,"column_start":5,"column_end":42}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":247113,"byte_end":247119,"line_start":831,"line_end":831,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":247124,"byte_end":247139,"line_start":832,"line_end":832,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00 +1).replace_time(time!(12:00)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":247144,"byte_end":247209,"line_start":833,"line_end":833,"column_start":5,"column_end":70}},{"value":"/     datetime!(2020-01-01 12:00 +1)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":247214,"byte_end":247252,"line_start":834,"line_end":834,"column_start":5,"column_end":43}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":247257,"byte_end":247263,"line_start":835,"line_end":835,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":247268,"byte_end":247275,"line_start":836,"line_end":836,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `OffsetDateTime`.\"","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":247280,"byte_end":247354,"line_start":837,"line_end":837,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1365},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":248123,"byte_end":248135,"line_start":859,"line_end":859,"column_start":18,"column_end":30},"name":"replace_date","qualname":"<OffsetDateTime>::replace_date","value":"const fn replace_date(Self, Date) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Replace the date, which is assumed to be in the stored offset. The time and offset\n components are unchanged.","sig":null,"attributes":[{"value":"/ Replace the date, which is assumed to be in the stored offset. The time and offset","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":247524,"byte_end":247610,"line_start":844,"line_end":844,"column_start":5,"column_end":91}},{"value":"/ components are unchanged.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":247615,"byte_end":247644,"line_start":845,"line_end":845,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":247649,"byte_end":247652,"line_start":846,"line_end":846,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":247657,"byte_end":247668,"line_start":847,"line_end":847,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, date};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":247673,"byte_end":247714,"line_start":848,"line_end":848,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":247719,"byte_end":247734,"line_start":849,"line_end":849,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 12:00 UTC).replace_date(date!(2020-01-30)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":247739,"byte_end":247811,"line_start":850,"line_end":850,"column_start":5,"column_end":77}},{"value":"/     datetime!(2020-01-30 12:00 UTC)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":247816,"byte_end":247855,"line_start":851,"line_end":851,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":247860,"byte_end":247866,"line_start":852,"line_end":852,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":247871,"byte_end":247886,"line_start":853,"line_end":853,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00 +1).replace_date(date!(2020-01-30)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":247891,"byte_end":247961,"line_start":854,"line_end":854,"column_start":5,"column_end":75}},{"value":"/     datetime!(2020-01-30 0:00 +1)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":247966,"byte_end":248003,"line_start":855,"line_end":855,"column_start":5,"column_end":42}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":248008,"byte_end":248014,"line_start":856,"line_end":856,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":248019,"byte_end":248026,"line_start":857,"line_end":857,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `OffsetDateTime`.\"","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":248031,"byte_end":248105,"line_start":858,"line_end":858,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1366},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":248900,"byte_end":248917,"line_start":880,"line_end":880,"column_start":18,"column_end":35},"name":"replace_date_time","qualname":"<OffsetDateTime>::replace_date_time","value":"const fn replace_date_time(Self, PrimitiveDateTime) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Replace the date and time, which are assumed to be in the stored offset. The offset\n component remains unchanged.","sig":null,"attributes":[{"value":"/ Replace the date and time, which are assumed to be in the stored offset. The offset","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":248275,"byte_end":248362,"line_start":865,"line_end":865,"column_start":5,"column_end":92}},{"value":"/ component remains unchanged.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":248367,"byte_end":248399,"line_start":866,"line_end":866,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":248404,"byte_end":248407,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":248412,"byte_end":248423,"line_start":868,"line_end":868,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":248428,"byte_end":248461,"line_start":869,"line_end":869,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":248466,"byte_end":248481,"line_start":870,"line_end":870,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 12:00 UTC).replace_date_time(datetime!(2020-01-30 16:00)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":248486,"byte_end":248573,"line_start":871,"line_end":871,"column_start":5,"column_end":92}},{"value":"/     datetime!(2020-01-30 16:00 UTC)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":248578,"byte_end":248617,"line_start":872,"line_end":872,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":248622,"byte_end":248628,"line_start":873,"line_end":873,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":248633,"byte_end":248648,"line_start":874,"line_end":874,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 12:00 +1).replace_date_time(datetime!(2020-01-30 0:00)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":248653,"byte_end":248738,"line_start":875,"line_end":875,"column_start":5,"column_end":90}},{"value":"/     datetime!(2020-01-30 0:00 +1)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":248743,"byte_end":248780,"line_start":876,"line_end":876,"column_start":5,"column_end":42}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":248785,"byte_end":248791,"line_start":877,"line_end":877,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":248796,"byte_end":248803,"line_start":878,"line_end":878,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `OffsetDateTime`.\"","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":248808,"byte_end":248882,"line_start":879,"line_end":879,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1367},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":249416,"byte_end":249430,"line_start":894,"line_end":894,"column_start":18,"column_end":32},"name":"replace_offset","qualname":"<OffsetDateTime>::replace_offset","value":"const fn replace_offset(Self, UtcOffset) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Replace the offset. The date and time components remain unchanged.","sig":null,"attributes":[{"value":"/ Replace the offset. The date and time components remain unchanged.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":249020,"byte_end":249090,"line_start":884,"line_end":884,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":249095,"byte_end":249098,"line_start":885,"line_end":885,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":249103,"byte_end":249114,"line_start":886,"line_end":886,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":249119,"byte_end":249162,"line_start":887,"line_end":887,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":249167,"byte_end":249182,"line_start":888,"line_end":888,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00 UTC).replace_offset(offset!(-5)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":249187,"byte_end":249254,"line_start":889,"line_end":889,"column_start":5,"column_end":72}},{"value":"/     datetime!(2020-01-01 0:00 -5)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":249259,"byte_end":249296,"line_start":890,"line_end":890,"column_start":5,"column_end":42}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":249301,"byte_end":249307,"line_start":891,"line_end":891,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":249312,"byte_end":249319,"line_start":892,"line_end":892,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `OffsetDateTime`.\"","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":249324,"byte_end":249398,"line_start":893,"line_end":893,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1368},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":250084,"byte_end":250096,"line_start":909,"line_end":909,"column_start":18,"column_end":30},"name":"replace_year","qualname":"<OffsetDateTime>::replace_year","value":"const fn replace_year(Self, i32) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the year. The month and day will be unchanged.","sig":null,"attributes":[{"value":"/ Replace the year. The month and day will be unchanged.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":249527,"byte_end":249585,"line_start":898,"line_end":898,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":249590,"byte_end":249593,"line_start":899,"line_end":899,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":249598,"byte_end":249609,"line_start":900,"line_end":900,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":249614,"byte_end":249647,"line_start":901,"line_end":901,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":249652,"byte_end":249667,"line_start":902,"line_end":902,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 12:00 +01).replace_year(2019),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":249672,"byte_end":249735,"line_start":903,"line_end":903,"column_start":5,"column_end":68}},{"value":"/     Ok(datetime!(2019 - 02 - 18 12:00 +01))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":249740,"byte_end":249787,"line_start":904,"line_end":904,"column_start":5,"column_end":52}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":249792,"byte_end":249798,"line_start":905,"line_end":905,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 12:00 +01).replace_year(-1_000_000_000).is_err()); // -1_000_000_000 isn't a valid year","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":249803,"byte_end":249927,"line_start":906,"line_end":906,"column_start":5,"column_end":129}},{"value":"/ assert!(datetime!(2022 - 02 - 18 12:00 +01).replace_year(1_000_000_000).is_err()); // 1_000_000_000 isn't a valid year","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":249932,"byte_end":250054,"line_start":907,"line_end":907,"column_start":5,"column_end":127}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":250059,"byte_end":250066,"line_start":908,"line_end":908,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1369},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":250701,"byte_end":250714,"line_start":924,"line_end":924,"column_start":18,"column_end":31},"name":"replace_month","qualname":"<OffsetDateTime>::replace_month","value":"const fn replace_month(Self, Month) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the month of the year.","sig":null,"attributes":[{"value":"/ Replace the month of the year.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":250256,"byte_end":250290,"line_start":913,"line_end":913,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":250295,"byte_end":250298,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":250303,"byte_end":250314,"line_start":915,"line_end":915,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":250319,"byte_end":250352,"line_start":916,"line_end":916,"column_start":5,"column_end":38}},{"value":"/ # use time::Month;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":250357,"byte_end":250379,"line_start":917,"line_end":917,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":250384,"byte_end":250399,"line_start":918,"line_end":918,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 12:00 +01).replace_month(Month::January),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":250404,"byte_end":250478,"line_start":919,"line_end":919,"column_start":5,"column_end":79}},{"value":"/     Ok(datetime!(2022 - 01 - 18 12:00 +01))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":250483,"byte_end":250530,"line_start":920,"line_end":920,"column_start":5,"column_end":52}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":250535,"byte_end":250541,"line_start":921,"line_end":921,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 01 - 30 12:00 +01).replace_month(Month::February).is_err()); // 30 isn't a valid day in February","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":250546,"byte_end":250671,"line_start":922,"line_end":922,"column_start":5,"column_end":130}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":250676,"byte_end":250683,"line_start":923,"line_end":923,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1370},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":251368,"byte_end":251379,"line_start":939,"line_end":939,"column_start":18,"column_end":29},"name":"replace_day","qualname":"<OffsetDateTime>::replace_day","value":"const fn replace_day(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the day of the month.","sig":null,"attributes":[{"value":"/ Replace the day of the month.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":250879,"byte_end":250912,"line_start":928,"line_end":928,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":250917,"byte_end":250920,"line_start":929,"line_end":929,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":250925,"byte_end":250936,"line_start":930,"line_end":930,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":250941,"byte_end":250974,"line_start":931,"line_end":931,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":250979,"byte_end":250994,"line_start":932,"line_end":932,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 12:00 +01).replace_day(1),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":250999,"byte_end":251058,"line_start":933,"line_end":933,"column_start":5,"column_end":64}},{"value":"/     Ok(datetime!(2022 - 02 - 01 12:00 +01))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":251063,"byte_end":251110,"line_start":934,"line_end":934,"column_start":5,"column_end":52}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":251115,"byte_end":251121,"line_start":935,"line_end":935,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 12:00 +01).replace_day(0).is_err()); // 00 isn't a valid day","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":251126,"byte_end":251223,"line_start":936,"line_end":936,"column_start":5,"column_end":102}},{"value":"/ assert!(datetime!(2022 - 02 - 18 12:00 +01).replace_day(30).is_err()); // 30 isn't a valid day in February","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":251228,"byte_end":251338,"line_start":937,"line_end":937,"column_start":5,"column_end":115}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":251343,"byte_end":251350,"line_start":938,"line_end":938,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1371},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":251952,"byte_end":251964,"line_start":953,"line_end":953,"column_start":18,"column_end":30},"name":"replace_hour","qualname":"<OffsetDateTime>::replace_hour","value":"const fn replace_hour(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the clock hour.","sig":null,"attributes":[{"value":"/ Replace the clock hour.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":251535,"byte_end":251562,"line_start":943,"line_end":943,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":251567,"byte_end":251570,"line_start":944,"line_end":944,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":251575,"byte_end":251586,"line_start":945,"line_end":945,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":251591,"byte_end":251624,"line_start":946,"line_end":946,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":251629,"byte_end":251644,"line_start":947,"line_end":947,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_hour(7),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":251649,"byte_end":251724,"line_start":948,"line_end":948,"column_start":5,"column_end":80}},{"value":"/     Ok(datetime!(2022 - 02 - 18 07:02:03.004_005_006 +01))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":251729,"byte_end":251791,"line_start":949,"line_end":949,"column_start":5,"column_end":67}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":251796,"byte_end":251802,"line_start":950,"line_end":950,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_hour(24).is_err()); // 24 isn't a valid hour","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":251807,"byte_end":251922,"line_start":951,"line_end":951,"column_start":5,"column_end":120}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":251927,"byte_end":251934,"line_start":952,"line_end":952,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1372},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":252559,"byte_end":252573,"line_start":967,"line_end":967,"column_start":18,"column_end":32},"name":"replace_minute","qualname":"<OffsetDateTime>::replace_minute","value":"const fn replace_minute(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the minutes within the hour.","sig":null,"attributes":[{"value":"/ Replace the minutes within the hour.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":252123,"byte_end":252163,"line_start":957,"line_end":957,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":252168,"byte_end":252171,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":252176,"byte_end":252187,"line_start":959,"line_end":959,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":252192,"byte_end":252225,"line_start":960,"line_end":960,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":252230,"byte_end":252245,"line_start":961,"line_end":961,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_minute(7),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":252250,"byte_end":252327,"line_start":962,"line_end":962,"column_start":5,"column_end":82}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:07:03.004_005_006 +01))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":252332,"byte_end":252394,"line_start":963,"line_end":963,"column_start":5,"column_end":67}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":252399,"byte_end":252405,"line_start":964,"line_end":964,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_minute(60).is_err()); // 60 isn't a valid minute","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":252410,"byte_end":252529,"line_start":965,"line_end":965,"column_start":5,"column_end":124}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":252534,"byte_end":252541,"line_start":966,"line_end":966,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1373},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":253176,"byte_end":253190,"line_start":981,"line_end":981,"column_start":18,"column_end":32},"name":"replace_second","qualname":"<OffsetDateTime>::replace_second","value":"const fn replace_second(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the seconds within the minute.","sig":null,"attributes":[{"value":"/ Replace the seconds within the minute.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":252738,"byte_end":252780,"line_start":971,"line_end":971,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":252785,"byte_end":252788,"line_start":972,"line_end":972,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":252793,"byte_end":252804,"line_start":973,"line_end":973,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":252809,"byte_end":252842,"line_start":974,"line_end":974,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":252847,"byte_end":252862,"line_start":975,"line_end":975,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_second(7),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":252867,"byte_end":252944,"line_start":976,"line_end":976,"column_start":5,"column_end":82}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:02:07.004_005_006 +01))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":252949,"byte_end":253011,"line_start":977,"line_end":977,"column_start":5,"column_end":67}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":253016,"byte_end":253022,"line_start":978,"line_end":978,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_second(60).is_err()); // 60 isn't a valid second","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":253027,"byte_end":253146,"line_start":979,"line_end":979,"column_start":5,"column_end":124}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":253151,"byte_end":253158,"line_start":980,"line_end":980,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1374},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":253811,"byte_end":253830,"line_start":995,"line_end":995,"column_start":18,"column_end":37},"name":"replace_millisecond","qualname":"<OffsetDateTime>::replace_millisecond","value":"const fn replace_millisecond(Self, u16) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the milliseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the milliseconds within the second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":253355,"byte_end":253402,"line_start":985,"line_end":985,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":253407,"byte_end":253410,"line_start":986,"line_end":986,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":253415,"byte_end":253426,"line_start":987,"line_end":987,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":253431,"byte_end":253464,"line_start":988,"line_end":988,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":253469,"byte_end":253484,"line_start":989,"line_end":989,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_millisecond(7),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":253489,"byte_end":253571,"line_start":990,"line_end":990,"column_start":5,"column_end":87}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:02:03.007 +01))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":253576,"byte_end":253630,"line_start":991,"line_end":991,"column_start":5,"column_end":59}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":253635,"byte_end":253641,"line_start":992,"line_end":992,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_millisecond(1_000).is_err()); // 1_000 isn't a valid millisecond","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":253646,"byte_end":253781,"line_start":993,"line_end":993,"column_start":5,"column_end":140}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":253786,"byte_end":253793,"line_start":994,"line_end":994,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1375},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":254546,"byte_end":254565,"line_start":1015,"line_end":1015,"column_start":18,"column_end":37},"name":"replace_microsecond","qualname":"<OffsetDateTime>::replace_microsecond","value":"const fn replace_microsecond(Self, u32) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the microseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the microseconds within the second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":254074,"byte_end":254121,"line_start":1005,"line_end":1005,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":254126,"byte_end":254129,"line_start":1006,"line_end":1006,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":254134,"byte_end":254145,"line_start":1007,"line_end":1007,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":254150,"byte_end":254183,"line_start":1008,"line_end":1008,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":254188,"byte_end":254203,"line_start":1009,"line_end":1009,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_microsecond(7_008),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":254208,"byte_end":254294,"line_start":1010,"line_end":1010,"column_start":5,"column_end":91}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:02:03.007_008 +01))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":254299,"byte_end":254357,"line_start":1011,"line_end":1011,"column_start":5,"column_end":63}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":254362,"byte_end":254368,"line_start":1012,"line_end":1012,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_microsecond(1_000_000).is_err()); // 1_000_000 isn't a valid microsecond","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":254373,"byte_end":254516,"line_start":1013,"line_end":1013,"column_start":5,"column_end":148}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":254521,"byte_end":254528,"line_start":1014,"line_end":1014,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1376},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":255293,"byte_end":255311,"line_start":1035,"line_end":1035,"column_start":18,"column_end":36},"name":"replace_nanosecond","qualname":"<OffsetDateTime>::replace_nanosecond","value":"const fn replace_nanosecond(Self, u32) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the nanoseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the nanoseconds within the second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":254809,"byte_end":254855,"line_start":1025,"line_end":1025,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":254860,"byte_end":254863,"line_start":1026,"line_end":1026,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":254868,"byte_end":254879,"line_start":1027,"line_end":1027,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":254884,"byte_end":254917,"line_start":1028,"line_end":1028,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":254922,"byte_end":254937,"line_start":1029,"line_end":1029,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_nanosecond(7_008_009),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":254942,"byte_end":255031,"line_start":1030,"line_end":1030,"column_start":5,"column_end":94}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:02:03.007_008_009 +01))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":255036,"byte_end":255098,"line_start":1031,"line_end":1031,"column_start":5,"column_end":67}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":255103,"byte_end":255109,"line_start":1032,"line_end":1032,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_nanosecond(1_000_000_000).is_err()); // 1_000_000_000 isn't a valid nanosecond","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":255114,"byte_end":255263,"line_start":1033,"line_end":1033,"column_start":5,"column_end":154}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":255268,"byte_end":255275,"line_start":1034,"line_end":1034,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1378},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":255760,"byte_end":255771,"line_start":1049,"line_end":1049,"column_start":12,"column_end":23},"name":"format_into","qualname":"<OffsetDateTime>::format_into","value":"fn format_into<impl io::Write,\nimpl Formattable + ?Sized>(Self, &mut impl io::Write,\n&impl Formattable + ?Sized) -> Result<usize, error::Format> where\nimpl io::Write: io::Write, impl Formattable + ?Sized: Formattable + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Format the `OffsetDateTime` using the provided [format\n description](crate::format_description).\n","sig":null,"attributes":[{"value":"/ Format the `OffsetDateTime` using the provided [format","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":255641,"byte_end":255699,"line_start":1047,"line_end":1047,"column_start":5,"column_end":63}},{"value":"/ description](crate::format_description).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":255704,"byte_end":255748,"line_start":1048,"line_end":1048,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1381},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":256669,"byte_end":256675,"line_start":1077,"line_end":1077,"column_start":12,"column_end":18},"name":"format","qualname":"<OffsetDateTime>::format","value":"fn format<impl Formattable + ?Sized>(Self, &impl Formattable + ?Sized)\n-> Result<String, error::Format> where\nimpl Formattable + ?Sized: Formattable + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Format the `OffsetDateTime` using the provided [format\n description](crate::format_description).","sig":null,"attributes":[{"value":"/ Format the `OffsetDateTime` using the provided [format","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":256072,"byte_end":256130,"line_start":1062,"line_end":1062,"column_start":5,"column_end":63}},{"value":"/ description](crate::format_description).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":256135,"byte_end":256179,"line_start":1063,"line_end":1063,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":256184,"byte_end":256187,"line_start":1064,"line_end":1064,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":256192,"byte_end":256203,"line_start":1065,"line_end":1065,"column_start":5,"column_end":16}},{"value":"/ # use time::{format_description, macros::datetime};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":256208,"byte_end":256263,"line_start":1066,"line_end":1066,"column_start":5,"column_end":60}},{"value":"/ let format = format_description::parse(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":256268,"byte_end":256311,"line_start":1067,"line_end":1067,"column_start":5,"column_end":48}},{"value":"/     \"[year]-[month]-[day] [hour]:[minute]:[second] [offset_hour \\","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":256316,"byte_end":256385,"line_start":1068,"line_end":1068,"column_start":5,"column_end":74}},{"value":"/          sign:mandatory]:[offset_minute]:[offset_second]\",","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":256390,"byte_end":256452,"line_start":1069,"line_end":1069,"column_start":5,"column_end":67}},{"value":"/ )?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":256457,"byte_end":256464,"line_start":1070,"line_end":1070,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":256469,"byte_end":256484,"line_start":1071,"line_end":1071,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-02 03:04:05 +06:07:08).format(&format)?,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":256489,"byte_end":256555,"line_start":1072,"line_end":1072,"column_start":5,"column_end":71}},{"value":"/     \"2020-01-02 03:04:05 +06:07:08\"","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":256560,"byte_end":256599,"line_start":1073,"line_end":1073,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":256604,"byte_end":256610,"line_start":1074,"line_end":1074,"column_start":5,"column_end":11}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":256615,"byte_end":256645,"line_start":1075,"line_end":1075,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":256650,"byte_end":256657,"line_start":1076,"line_end":1076,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1384},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":257539,"byte_end":257544,"line_start":1099,"line_end":1099,"column_start":12,"column_end":17},"name":"parse","qualname":"<OffsetDateTime>::parse","value":"fn parse<impl Parsable + ?Sized>(&str, &impl Parsable + ?Sized)\n-> Result<Self, error::Parse> where impl Parsable + ?Sized: Parsable + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Parse an `OffsetDateTime` from the input using the provided [format\n description](crate::format_description).","sig":null,"attributes":[{"value":"/ Parse an `OffsetDateTime` from the input using the provided [format","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":256897,"byte_end":256968,"line_start":1084,"line_end":1084,"column_start":5,"column_end":76}},{"value":"/ description](crate::format_description).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":256973,"byte_end":257017,"line_start":1085,"line_end":1085,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":257022,"byte_end":257025,"line_start":1086,"line_end":1086,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":257030,"byte_end":257041,"line_start":1087,"line_end":1087,"column_start":5,"column_end":16}},{"value":"/ # use time::{format_description, macros::datetime, OffsetDateTime};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":257046,"byte_end":257117,"line_start":1088,"line_end":1088,"column_start":5,"column_end":76}},{"value":"/ let format = format_description::parse(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":257122,"byte_end":257165,"line_start":1089,"line_end":1089,"column_start":5,"column_end":48}},{"value":"/     \"[year]-[month]-[day] [hour]:[minute]:[second] [offset_hour \\","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":257170,"byte_end":257239,"line_start":1090,"line_end":1090,"column_start":5,"column_end":74}},{"value":"/          sign:mandatory]:[offset_minute]:[offset_second]\",","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":257244,"byte_end":257306,"line_start":1091,"line_end":1091,"column_start":5,"column_end":67}},{"value":"/ )?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":257311,"byte_end":257318,"line_start":1092,"line_end":1092,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":257323,"byte_end":257338,"line_start":1093,"line_end":1093,"column_start":5,"column_end":20}},{"value":"/     OffsetDateTime::parse(\"2020-01-02 03:04:05 +06:07:08\", &format)?,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":257343,"byte_end":257416,"line_start":1094,"line_end":1094,"column_start":5,"column_end":78}},{"value":"/     datetime!(2020-01-02 03:04:05 +06:07:08)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":257421,"byte_end":257469,"line_start":1095,"line_end":1095,"column_start":5,"column_end":53}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":257474,"byte_end":257480,"line_start":1096,"line_end":1096,"column_start":5,"column_end":11}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":257485,"byte_end":257515,"line_start":1097,"line_end":1097,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":257520,"byte_end":257527,"line_start":1098,"line_end":1098,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1388},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":258695,"byte_end":258698,"line_start":1131,"line_end":1131,"column_start":8,"column_end":11},"name":"fmt","qualname":"<OffsetDateTime as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10117},"children":[],"decl_id":{"krate":2,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1390},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":258929,"byte_end":258931,"line_start":1139,"line_end":1139,"column_start":8,"column_end":10},"name":"eq","qualname":"<OffsetDateTime as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &Self) -> bool","parent":{"krate":2,"index":2831},"children":[],"decl_id":{"krate":2,"index":2833},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1392},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":259094,"byte_end":259105,"line_start":1145,"line_end":1145,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<OffsetDateTime as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp(&Self, &Self) -> Option<Ordering>","parent":{"krate":2,"index":2877},"children":[],"decl_id":{"krate":2,"index":2879},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1394},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":259221,"byte_end":259224,"line_start":1151,"line_end":1151,"column_start":8,"column_end":11},"name":"cmp","qualname":"<OffsetDateTime as std::cmp::Ord>::cmp","value":"fn cmp(&Self, &Self) -> Ordering","parent":{"krate":2,"index":2867},"children":[],"decl_id":{"krate":2,"index":2868},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1396},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":259401,"byte_end":259405,"line_start":1158,"line_end":1158,"column_start":8,"column_end":12},"name":"hash","qualname":"<OffsetDateTime as std::hash::Hash>::hash","value":"fn hash<H>(&Self, &mut H) where H: Hasher","parent":{"krate":2,"index":10324},"children":[],"decl_id":{"krate":2,"index":10325},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1401},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":259781,"byte_end":259784,"line_start":1171,"line_end":1171,"column_start":8,"column_end":11},"name":"add","qualname":"<OffsetDateTime as std::ops::Add>::add","value":"fn add(Self, T) -> Self::Output","parent":{"krate":2,"index":3247},"children":[],"decl_id":{"krate":2,"index":3250},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1405},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":260080,"byte_end":260083,"line_start":1184,"line_end":1184,"column_start":8,"column_end":11},"name":"sub","qualname":"<OffsetDateTime as std::ops::Sub>::sub","value":"fn sub(Self, T) -> Self::Output","parent":{"krate":2,"index":3252},"children":[],"decl_id":{"krate":2,"index":3255},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1408},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":260312,"byte_end":260315,"line_start":1194,"line_end":1194,"column_start":8,"column_end":11},"name":"sub","qualname":"<OffsetDateTime as std::ops::Sub>::sub","value":"fn sub(Self, Self) -> Self::Output","parent":{"krate":2,"index":3252},"children":[],"decl_id":{"krate":2,"index":3255},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1411},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":260637,"byte_end":260640,"line_start":1205,"line_end":1205,"column_start":8,"column_end":11},"name":"add","qualname":"<SystemTime as std::ops::Add>::add","value":"fn add(Self, Duration) -> Self::Output","parent":{"krate":2,"index":3247},"children":[],"decl_id":{"krate":2,"index":3250},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1414},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":261107,"byte_end":261110,"line_start":1223,"line_end":1223,"column_start":8,"column_end":11},"name":"sub","qualname":"<SystemTime as std::ops::Sub>::sub","value":"fn sub(Self, Duration) -> Self::Output","parent":{"krate":2,"index":3252},"children":[],"decl_id":{"krate":2,"index":3255},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1417},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":261386,"byte_end":261389,"line_start":1234,"line_end":1234,"column_start":8,"column_end":11},"name":"sub","qualname":"<OffsetDateTime as std::ops::Sub>::sub","value":"fn sub(Self, SystemTime) -> Self::Output","parent":{"krate":2,"index":3252},"children":[],"decl_id":{"krate":2,"index":3255},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1420},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":261573,"byte_end":261576,"line_start":1243,"line_end":1243,"column_start":8,"column_end":11},"name":"sub","qualname":"<SystemTime as std::ops::Sub>::sub","value":"fn sub(Self, OffsetDateTime) -> Self::Output","parent":{"krate":2,"index":3252},"children":[],"decl_id":{"krate":2,"index":3255},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1422},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":261751,"byte_end":261753,"line_start":1250,"line_end":1250,"column_start":8,"column_end":10},"name":"eq","qualname":"<OffsetDateTime as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &SystemTime) -> bool","parent":{"krate":2,"index":2831},"children":[],"decl_id":{"krate":2,"index":2833},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1424},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":261911,"byte_end":261913,"line_start":1257,"line_end":1257,"column_start":8,"column_end":10},"name":"eq","qualname":"<SystemTime as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &OffsetDateTime) -> bool","parent":{"krate":2,"index":2831},"children":[],"decl_id":{"krate":2,"index":2833},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1426},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":262086,"byte_end":262097,"line_start":1264,"line_end":1264,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<OffsetDateTime as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp(&Self, &SystemTime) -> Option<Ordering>","parent":{"krate":2,"index":2877},"children":[],"decl_id":{"krate":2,"index":2879},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1428},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":262282,"byte_end":262293,"line_start":1271,"line_end":1271,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<SystemTime as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp(&Self, &OffsetDateTime) -> Option<Ordering>","parent":{"krate":2,"index":2877},"children":[],"decl_id":{"krate":2,"index":2879},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1430},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":262485,"byte_end":262489,"line_start":1278,"line_end":1278,"column_start":8,"column_end":12},"name":"from","qualname":"<OffsetDateTime as std::convert::From>::from","value":"fn from(SystemTime) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1432},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":262867,"byte_end":262871,"line_start":1289,"line_end":1289,"column_start":8,"column_end":12},"name":"from","qualname":"<SystemTime as std::convert::From>::from","value":"fn from(OffsetDateTime) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1433},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"parsing","qualname":"::parsing","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/mod.rs","parent":null,"children":[{"krate":0,"index":1434},{"krate":0,"index":1618},{"krate":0,"index":1708},{"krate":0,"index":1800},{"krate":0,"index":2120},{"krate":0,"index":2312},{"krate":0,"index":2323},{"krate":0,"index":2326},{"krate":0,"index":3924},{"krate":0,"index":3930},{"krate":0,"index":2329},{"krate":0,"index":2340},{"krate":0,"index":2343}],"decl_id":null,"docs":" Parsing for various types.\n","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":10006,"byte_end":10033,"line_start":298,"line_end":298,"column_start":1,"column_end":28}},{"value":"/ Parsing for various types.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/mod.rs","byte_start":264210,"byte_end":264240,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":1855},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsable.rs","byte_start":307029,"byte_end":307037,"line_start":14,"line_end":14,"column_start":11,"column_end":19},"name":"Parsable","qualname":"::parsing::parsable::Parsable","value":"Parsable: sealed::Sealed","parent":null,"children":[],"decl_id":null,"docs":" A type that can be parsed.\n","sig":null,"attributes":[{"value":"/ A type that can be parsed.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsable.rs","byte_start":306940,"byte_end":306970,"line_start":12,"line_end":12,"column_start":1,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":1866},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsable.rs","byte_start":307653,"byte_end":307659,"line_start":31,"line_end":31,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::parsing::parsable::sealed::Sealed","value":"Sealed","parent":null,"children":[{"krate":0,"index":1867},{"krate":0,"index":1869},{"krate":0,"index":1870},{"krate":0,"index":1871},{"krate":0,"index":1872},{"krate":0,"index":1873},{"krate":0,"index":1874}],"decl_id":null,"docs":" Parse the item using a format description and an input.\n","sig":null,"attributes":[{"value":"/ Parse the item using a format description and an input.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsable.rs","byte_start":307516,"byte_end":307575,"line_start":29,"line_end":29,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1867},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsable.rs","byte_start":307845,"byte_end":307855,"line_start":35,"line_end":35,"column_start":12,"column_end":22},"name":"parse_into","qualname":"::parsing::parsable::sealed::Sealed::parse_into","value":"fn parse_into<'a>(&Self, &'a [u8], &mut Parsed)\n-> Result<&'a [u8], error::Parse>","parent":{"krate":0,"index":1866},"children":[],"decl_id":null,"docs":" Parse the item into the provided [`Parsed`] struct.","sig":null,"attributes":[{"value":"/ Parse the item into the provided [`Parsed`] struct.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsable.rs","byte_start":307670,"byte_end":307725,"line_start":32,"line_end":32,"column_start":9,"column_end":64}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsable.rs","byte_start":307734,"byte_end":307737,"line_start":33,"line_end":33,"column_start":9,"column_end":12}},{"value":"/ This method can be used to parse a single component without parsing the full value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsable.rs","byte_start":307746,"byte_end":307833,"line_start":34,"line_end":34,"column_start":9,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":1869},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsable.rs","byte_start":308225,"byte_end":308230,"line_start":45,"line_end":45,"column_start":12,"column_end":17},"name":"parse","qualname":"::parsing::parsable::sealed::Sealed::parse","value":"fn parse(&Self, &[u8]) -> Result<Parsed, error::Parse>","parent":{"krate":0,"index":1866},"children":[],"decl_id":null,"docs":" Parse the item into a new [`Parsed`] struct.","sig":null,"attributes":[{"value":"/ Parse the item into a new [`Parsed`] struct.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsable.rs","byte_start":307996,"byte_end":308044,"line_start":41,"line_end":41,"column_start":9,"column_end":57}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsable.rs","byte_start":308053,"byte_end":308056,"line_start":42,"line_end":42,"column_start":9,"column_end":12}},{"value":"/ This method can only be used to parse a complete value of a type. If any characters","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsable.rs","byte_start":308065,"byte_end":308152,"line_start":43,"line_end":43,"column_start":9,"column_end":96}},{"value":"/ remain after parsing, an error will be returned.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsable.rs","byte_start":308161,"byte_end":308213,"line_start":44,"line_end":44,"column_start":9,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1870},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsable.rs","byte_start":308601,"byte_end":308611,"line_start":55,"line_end":55,"column_start":12,"column_end":22},"name":"parse_date","qualname":"::parsing::parsable::sealed::Sealed::parse_date","value":"fn parse_date(&Self, &[u8]) -> Result<Date, error::Parse>","parent":{"krate":0,"index":1866},"children":[],"decl_id":null,"docs":" Parse a [`Date`] from the format description.\n","sig":null,"attributes":[{"value":"/ Parse a [`Date`] from the format description.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsable.rs","byte_start":308540,"byte_end":308589,"line_start":54,"line_end":54,"column_start":9,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1871},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsable.rs","byte_start":308792,"byte_end":308802,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"name":"parse_time","qualname":"::parsing::parsable::sealed::Sealed::parse_time","value":"fn parse_time(&Self, &[u8]) -> Result<Time, error::Parse>","parent":{"krate":0,"index":1866},"children":[],"decl_id":null,"docs":" Parse a [`Time`] from the format description.\n","sig":null,"attributes":[{"value":"/ Parse a [`Time`] from the format description.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsable.rs","byte_start":308731,"byte_end":308780,"line_start":59,"line_end":59,"column_start":9,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1872},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsable.rs","byte_start":308988,"byte_end":309000,"line_start":65,"line_end":65,"column_start":12,"column_end":24},"name":"parse_offset","qualname":"::parsing::parsable::sealed::Sealed::parse_offset","value":"fn parse_offset(&Self, &[u8]) -> Result<UtcOffset, error::Parse>","parent":{"krate":0,"index":1866},"children":[],"decl_id":null,"docs":" Parse a [`UtcOffset`] from the format description.\n","sig":null,"attributes":[{"value":"/ Parse a [`UtcOffset`] from the format description.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsable.rs","byte_start":308922,"byte_end":308976,"line_start":64,"line_end":64,"column_start":9,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1873},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsable.rs","byte_start":309199,"byte_end":309214,"line_start":70,"line_end":70,"column_start":12,"column_end":27},"name":"parse_date_time","qualname":"::parsing::parsable::sealed::Sealed::parse_date_time","value":"fn parse_date_time(&Self, &[u8]) -> Result<PrimitiveDateTime, error::Parse>","parent":{"krate":0,"index":1866},"children":[],"decl_id":null,"docs":" Parse a [`PrimitiveDateTime`] from the format description.\n","sig":null,"attributes":[{"value":"/ Parse a [`PrimitiveDateTime`] from the format description.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsable.rs","byte_start":309125,"byte_end":309187,"line_start":69,"line_end":69,"column_start":9,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1874},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsable.rs","byte_start":309418,"byte_end":309440,"line_start":75,"line_end":75,"column_start":12,"column_end":34},"name":"parse_offset_date_time","qualname":"::parsing::parsable::sealed::Sealed::parse_offset_date_time","value":"fn parse_offset_date_time(&Self, &[u8])\n-> Result<OffsetDateTime, error::Parse>","parent":{"krate":0,"index":1866},"children":[],"decl_id":null,"docs":" Parse a [`OffsetDateTime`] from the format description.\n","sig":null,"attributes":[{"value":"/ Parse a [`OffsetDateTime`] from the format description.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsable.rs","byte_start":309347,"byte_end":309406,"line_start":74,"line_end":74,"column_start":9,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1876},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsable.rs","byte_start":309644,"byte_end":309654,"line_start":83,"line_end":83,"column_start":8,"column_end":18},"name":"parse_into","qualname":"<FormatItem as parsing::parsable::sealed::Sealed>::parse_into","value":"fn parse_into<'a>(&Self, &'a [u8], &mut Parsed)\n-> Result<&'a [u8], error::Parse>","parent":{"krate":0,"index":1866},"children":[],"decl_id":{"krate":0,"index":1867},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1879},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsable.rs","byte_start":309874,"byte_end":309884,"line_start":93,"line_end":93,"column_start":8,"column_end":18},"name":"parse_into","qualname":"<[FormatItem] as parsing::parsable::sealed::Sealed>::parse_into","value":"fn parse_into<'a>(&Self, &'a [u8], &mut Parsed)\n-> Result<&'a [u8], error::Parse>","parent":{"krate":0,"index":1866},"children":[],"decl_id":{"krate":0,"index":1867},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1883},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsable.rs","byte_start":310137,"byte_end":310147,"line_start":106,"line_end":106,"column_start":8,"column_end":18},"name":"parse_into","qualname":"<T as parsing::parsable::sealed::Sealed>::parse_into","value":"fn parse_into<'a>(&Self, &'a [u8], &mut Parsed)\n-> Result<&'a [u8], error::Parse>","parent":{"krate":0,"index":1866},"children":[],"decl_id":{"krate":0,"index":1867},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1886},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsable.rs","byte_start":310419,"byte_end":310429,"line_start":118,"line_end":118,"column_start":8,"column_end":18},"name":"parse_into","qualname":"<Rfc2822 as parsing::parsable::sealed::Sealed>::parse_into","value":"fn parse_into<'a>(&Self, &'a [u8], &mut Parsed)\n-> Result<&'a [u8], error::Parse>","parent":{"krate":0,"index":1866},"children":[],"decl_id":{"krate":0,"index":1867},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1958},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsable.rs","byte_start":317163,"byte_end":317185,"line_start":275,"line_end":275,"column_start":8,"column_end":30},"name":"parse_offset_date_time","qualname":"<Rfc2822 as parsing::parsable::sealed::Sealed>::parse_offset_date_time","value":"fn parse_offset_date_time(&Self, &[u8])\n-> Result<OffsetDateTime, error::Parse>","parent":{"krate":0,"index":1866},"children":[],"decl_id":{"krate":0,"index":1874},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2011},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsable.rs","byte_start":324192,"byte_end":324202,"line_start":445,"line_end":445,"column_start":8,"column_end":18},"name":"parse_into","qualname":"<Rfc3339 as parsing::parsable::sealed::Sealed>::parse_into","value":"fn parse_into<'a>(&Self, &'a [u8], &mut Parsed)\n-> Result<&'a [u8], error::Parse>","parent":{"krate":0,"index":1866},"children":[],"decl_id":{"krate":0,"index":1867},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2070},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsable.rs","byte_start":328648,"byte_end":328670,"line_start":550,"line_end":550,"column_start":8,"column_end":30},"name":"parse_offset_date_time","qualname":"<Rfc3339 as parsing::parsable::sealed::Sealed>::parse_offset_date_time","value":"fn parse_offset_date_time(&Self, &[u8])\n-> Result<OffsetDateTime, error::Parse>","parent":{"krate":0,"index":1866},"children":[],"decl_id":{"krate":0,"index":1874},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2115},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsable.rs","byte_start":333867,"byte_end":333877,"line_start":671,"line_end":671,"column_start":8,"column_end":18},"name":"parse_into","qualname":"<Iso8601<CONFIG> as parsing::parsable::sealed::Sealed>::parse_into","value":"fn parse_into<'a>(&Self, &'a [u8], &mut Parsed)\n-> Result<&'a [u8], error::Parse>","parent":{"krate":0,"index":1866},"children":[],"decl_id":{"krate":0,"index":1867},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3830},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":336701,"byte_end":336707,"line_start":24,"line_end":24,"column_start":12,"column_end":18},"name":"Parsed","qualname":"::parsing::parsed::Parsed","value":"Parsed {  }","parent":null,"children":[{"krate":0,"index":3831},{"krate":0,"index":3832},{"krate":0,"index":3833},{"krate":0,"index":3834},{"krate":0,"index":3835},{"krate":0,"index":3836},{"krate":0,"index":3837},{"krate":0,"index":3838},{"krate":0,"index":3839},{"krate":0,"index":3840},{"krate":0,"index":3841},{"krate":0,"index":3842},{"krate":0,"index":3843},{"krate":0,"index":3844},{"krate":0,"index":3845},{"krate":0,"index":3846},{"krate":0,"index":3847},{"krate":0,"index":3848},{"krate":0,"index":3849},{"krate":0,"index":3850},{"krate":0,"index":3851}],"decl_id":null,"docs":" All information parsed.","sig":null,"attributes":[{"value":"/ All information parsed.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":336375,"byte_end":336402,"line_start":17,"line_end":17,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":336403,"byte_end":336406,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This information is directly used to construct the final values.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":336407,"byte_end":336475,"line_start":19,"line_end":19,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":336476,"byte_end":336479,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Most users will not need think about this struct in any way. It is public to allow for manual","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":336480,"byte_end":336577,"line_start":21,"line_end":21,"column_start":1,"column_end":98}},{"value":"/ control over values, in the instance that the default parser is insufficient.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":336578,"byte_end":336659,"line_start":22,"line_end":22,"column_start":1,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2238},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":339450,"byte_end":339453,"line_start":92,"line_end":92,"column_start":18,"column_end":21},"name":"new","qualname":"<Parsed>::new","value":"const fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance of `Parsed` with no information known.\n","sig":null,"attributes":[{"value":"/ Create a new instance of `Parsed` with no information known.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":339368,"byte_end":339432,"line_start":91,"line_end":91,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2239},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":340631,"byte_end":340641,"line_start":123,"line_end":123,"column_start":12,"column_end":22},"name":"parse_item","qualname":"<Parsed>::parse_item","value":"fn parse_item<'a>(&mut Self, &'a [u8], &FormatItem)\n-> Result<&'a [u8], error::ParseFromDescription>","parent":null,"children":[],"decl_id":null,"docs":" Parse a single [`FormatItem`], mutating the struct. The remaining input is returned as the\n `Ok` value.","sig":null,"attributes":[{"value":"/ Parse a single [`FormatItem`], mutating the struct. The remaining input is returned as the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":340345,"byte_end":340439,"line_start":118,"line_end":118,"column_start":5,"column_end":99}},{"value":"/ `Ok` value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":340444,"byte_end":340459,"line_start":119,"line_end":119,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":340464,"byte_end":340467,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ If a [`FormatItem::Optional`] is passed, parsing will not fail; the input will be returned","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":340472,"byte_end":340566,"line_start":121,"line_end":121,"column_start":5,"column_end":99}},{"value":"/ as-is if the expected format is not present.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":340571,"byte_end":340619,"line_start":122,"line_end":122,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2241},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":342204,"byte_end":342215,"line_start":159,"line_end":159,"column_start":12,"column_end":23},"name":"parse_items","qualname":"<Parsed>::parse_items","value":"fn parse_items<'a>(&mut Self, &'a [u8], &[FormatItem])\n-> Result<&'a [u8], error::ParseFromDescription>","parent":null,"children":[],"decl_id":null,"docs":" Parse a sequence of [`FormatItem`]s, mutating the struct. The remaining input is returned as\n the `Ok` value.","sig":null,"attributes":[{"value":"/ Parse a sequence of [`FormatItem`]s, mutating the struct. The remaining input is returned as","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":341926,"byte_end":342022,"line_start":154,"line_end":154,"column_start":5,"column_end":101}},{"value":"/ the `Ok` value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":342027,"byte_end":342046,"line_start":155,"line_end":155,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":342051,"byte_end":342054,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This method will fail if any of the contained [`FormatItem`]s fail to parse. `self` will not","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":342059,"byte_end":342155,"line_start":157,"line_end":157,"column_start":5,"column_end":101}},{"value":"/ be mutated in this instance.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":342160,"byte_end":342192,"line_start":158,"line_end":158,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2243},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":342744,"byte_end":342757,"line_start":175,"line_end":175,"column_start":12,"column_end":25},"name":"parse_literal","qualname":"<Parsed>::parse_literal","value":"fn parse_literal<'a>(&'a [u8], &[u8])\n-> Result<&'a [u8], error::ParseFromDescription>","parent":null,"children":[],"decl_id":null,"docs":" Parse a literal byte sequence. The remaining input is returned as the `Ok` value.\n","sig":null,"attributes":[{"value":"/ Parse a literal byte sequence. The remaining input is returned as the `Ok` value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":342647,"byte_end":342732,"line_start":174,"line_end":174,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":2245},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":343114,"byte_end":343129,"line_start":186,"line_end":186,"column_start":12,"column_end":27},"name":"parse_component","qualname":"<Parsed>::parse_component","value":"fn parse_component<'a>(&mut Self, &'a [u8], Component)\n-> Result<&'a [u8], error::ParseFromDescription>","parent":null,"children":[],"decl_id":null,"docs":" Parse a single component, mutating the struct. The remaining input is returned as the `Ok`\n value.\n","sig":null,"attributes":[{"value":"/ Parse a single component, mutating the struct. The remaining input is returned as the `Ok`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":342993,"byte_end":343087,"line_start":184,"line_end":184,"column_start":5,"column_end":99}},{"value":"/ value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":343092,"byte_end":343102,"line_start":185,"line_end":185,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":3857},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":348639,"byte_end":348643,"line_start":300,"line_end":300,"column_start":20,"column_end":24},"name":"year","qualname":"<Parsed>::year","value":"const fn year(&Self) -> Option<i32>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":348230,"byte_end":348261,"line_start":285,"line_end":285,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3858},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":348678,"byte_end":348691,"line_start":301,"line_end":301,"column_start":29,"column_end":42},"name":"year_last_two","qualname":"<Parsed>::year_last_two","value":"const fn year_last_two(&Self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":348230,"byte_end":348261,"line_start":285,"line_end":285,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3859},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":348720,"byte_end":348728,"line_start":302,"line_end":302,"column_start":24,"column_end":32},"name":"iso_year","qualname":"<Parsed>::iso_year","value":"const fn iso_year(&Self) -> Option<i32>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":348230,"byte_end":348261,"line_start":285,"line_end":285,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3860},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":348767,"byte_end":348784,"line_start":303,"line_end":303,"column_start":33,"column_end":50},"name":"iso_year_last_two","qualname":"<Parsed>::iso_year_last_two","value":"const fn iso_year_last_two(&Self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":348230,"byte_end":348261,"line_start":285,"line_end":285,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3861},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":348798,"byte_end":348803,"line_start":304,"line_end":304,"column_start":9,"column_end":14},"name":"month","qualname":"<Parsed>::month","value":"const fn month(&Self) -> Option<Month>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":348052,"byte_end":348083,"line_start":279,"line_end":279,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3862},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":348845,"byte_end":348863,"line_start":305,"line_end":305,"column_start":34,"column_end":52},"name":"sunday_week_number","qualname":"<Parsed>::sunday_week_number","value":"const fn sunday_week_number(&Self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":348230,"byte_end":348261,"line_start":285,"line_end":285,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3863},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":348902,"byte_end":348920,"line_start":306,"line_end":306,"column_start":34,"column_end":52},"name":"monday_week_number","qualname":"<Parsed>::monday_week_number","value":"const fn monday_week_number(&Self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":348230,"byte_end":348261,"line_start":285,"line_end":285,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3864},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":348934,"byte_end":348949,"line_start":307,"line_end":307,"column_start":9,"column_end":24},"name":"iso_week_number","qualname":"<Parsed>::iso_week_number","value":"const fn iso_week_number(&Self) -> Option<NonZeroU8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":348052,"byte_end":348083,"line_start":279,"line_end":279,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3865},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":348970,"byte_end":348977,"line_start":308,"line_end":308,"column_start":9,"column_end":16},"name":"weekday","qualname":"<Parsed>::weekday","value":"const fn weekday(&Self) -> Option<Weekday>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":348052,"byte_end":348083,"line_start":279,"line_end":279,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3866},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":348996,"byte_end":349003,"line_start":309,"line_end":309,"column_start":9,"column_end":16},"name":"ordinal","qualname":"<Parsed>::ordinal","value":"const fn ordinal(&Self) -> Option<NonZeroU16>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":348052,"byte_end":348083,"line_start":279,"line_end":279,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3867},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":349025,"byte_end":349028,"line_start":310,"line_end":310,"column_start":9,"column_end":12},"name":"day","qualname":"<Parsed>::day","value":"const fn day(&Self) -> Option<NonZeroU8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":348052,"byte_end":348083,"line_start":279,"line_end":279,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3868},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":349063,"byte_end":349070,"line_start":311,"line_end":311,"column_start":23,"column_end":30},"name":"hour_24","qualname":"<Parsed>::hour_24","value":"const fn hour_24(&Self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":348230,"byte_end":348261,"line_start":285,"line_end":285,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3869},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":349084,"byte_end":349091,"line_start":312,"line_end":312,"column_start":9,"column_end":16},"name":"hour_12","qualname":"<Parsed>::hour_12","value":"const fn hour_12(&Self) -> Option<NonZeroU8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":348052,"byte_end":348083,"line_start":279,"line_end":279,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3870},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":349112,"byte_end":349125,"line_start":313,"line_end":313,"column_start":9,"column_end":22},"name":"hour_12_is_pm","qualname":"<Parsed>::hour_12_is_pm","value":"const fn hour_12_is_pm(&Self) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":348052,"byte_end":348083,"line_start":279,"line_end":279,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3871},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":349154,"byte_end":349160,"line_start":314,"line_end":314,"column_start":22,"column_end":28},"name":"minute","qualname":"<Parsed>::minute","value":"const fn minute(&Self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":348230,"byte_end":348261,"line_start":285,"line_end":285,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3872},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":349187,"byte_end":349193,"line_start":315,"line_end":315,"column_start":22,"column_end":28},"name":"second","qualname":"<Parsed>::second","value":"const fn second(&Self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":348230,"byte_end":348261,"line_start":285,"line_end":285,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3873},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":349223,"byte_end":349232,"line_start":316,"line_end":316,"column_start":25,"column_end":34},"name":"subsecond","qualname":"<Parsed>::subsecond","value":"const fn subsecond(&Self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":348230,"byte_end":348261,"line_start":285,"line_end":285,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3874},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":349265,"byte_end":349276,"line_start":317,"line_end":317,"column_start":27,"column_end":38},"name":"offset_hour","qualname":"<Parsed>::offset_hour","value":"const fn offset_hour(&Self) -> Option<i8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":348230,"byte_end":348261,"line_start":285,"line_end":285,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2276},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":349451,"byte_end":349464,"line_start":322,"line_end":322,"column_start":18,"column_end":31},"name":"offset_minute","qualname":"<Parsed>::offset_minute","value":"const fn offset_minute(&Self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the absolute value of the offset minute.\n","sig":null,"attributes":[{"value":"/ Obtain the absolute value of the offset minute.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":349293,"byte_end":349344,"line_start":320,"line_end":320,"column_start":5,"column_end":56}},{"value":"deprecated(since = \"0.3.8\", note =\n\"use `parsed.offset_minute_signed()` instead\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":349349,"byte_end":349433,"line_start":321,"line_end":321,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":2277},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":349630,"byte_end":349650,"line_start":327,"line_end":327,"column_start":18,"column_end":38},"name":"offset_minute_signed","qualname":"<Parsed>::offset_minute_signed","value":"const fn offset_minute_signed(&Self) -> Option<i8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the offset minute as an `i8`.\n","sig":null,"attributes":[{"value":"/ Obtain the offset minute as an `i8`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":349572,"byte_end":349612,"line_start":326,"line_end":326,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2278},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":350092,"byte_end":350105,"line_start":338,"line_end":338,"column_start":18,"column_end":31},"name":"offset_second","qualname":"<Parsed>::offset_second","value":"const fn offset_second(&Self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the absolute value of the offset second.\n","sig":null,"attributes":[{"value":"/ Obtain the absolute value of the offset second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":349934,"byte_end":349985,"line_start":336,"line_end":336,"column_start":5,"column_end":56}},{"value":"deprecated(since = \"0.3.8\", note =\n\"use `parsed.offset_second_signed()` instead\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":349990,"byte_end":350074,"line_start":337,"line_end":337,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":2279},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":350271,"byte_end":350291,"line_start":343,"line_end":343,"column_start":18,"column_end":38},"name":"offset_second_signed","qualname":"<Parsed>::offset_second_signed","value":"const fn offset_second_signed(&Self) -> Option<i8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the offset second as an `i8`.\n","sig":null,"attributes":[{"value":"/ Obtain the offset second as an `i8`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":350213,"byte_end":350253,"line_start":342,"line_end":342,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3875},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":351898,"byte_end":351906,"line_start":388,"line_end":388,"column_start":20,"column_end":28},"name":"set_year","qualname":"<Parsed>::set_year","value":"fn set_year(&mut Self, i32) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":351420,"byte_end":351448,"line_start":373,"line_end":373,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3876},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":351946,"byte_end":351963,"line_start":389,"line_end":389,"column_start":29,"column_end":46},"name":"set_year_last_two","qualname":"<Parsed>::set_year_last_two","value":"fn set_year_last_two(&mut Self, u8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":351420,"byte_end":351448,"line_start":373,"line_end":373,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3877},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":352006,"byte_end":352018,"line_start":390,"line_end":390,"column_start":24,"column_end":36},"name":"set_iso_year","qualname":"<Parsed>::set_iso_year","value":"fn set_iso_year(&mut Self, i32) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":351420,"byte_end":351448,"line_start":373,"line_end":373,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3878},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":352066,"byte_end":352087,"line_start":391,"line_end":391,"column_start":33,"column_end":54},"name":"set_iso_year_last_two","qualname":"<Parsed>::set_iso_year_last_two","value":"fn set_iso_year_last_two(&mut Self, u8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":351420,"byte_end":351448,"line_start":373,"line_end":373,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3879},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":352119,"byte_end":352128,"line_start":392,"line_end":392,"column_start":9,"column_end":18},"name":"set_month","qualname":"<Parsed>::set_month","value":"fn set_month(&mut Self, Month) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":351174,"byte_end":351202,"line_start":366,"line_end":366,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3880},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":352176,"byte_end":352198,"line_start":393,"line_end":393,"column_start":34,"column_end":56},"name":"set_sunday_week_number","qualname":"<Parsed>::set_sunday_week_number","value":"fn set_sunday_week_number(&mut Self, u8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":351420,"byte_end":351448,"line_start":373,"line_end":373,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3881},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":352256,"byte_end":352278,"line_start":394,"line_end":394,"column_start":34,"column_end":56},"name":"set_monday_week_number","qualname":"<Parsed>::set_monday_week_number","value":"fn set_monday_week_number(&mut Self, u8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":351420,"byte_end":351448,"line_start":373,"line_end":373,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3882},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":352311,"byte_end":352330,"line_start":395,"line_end":395,"column_start":9,"column_end":28},"name":"set_iso_week_number","qualname":"<Parsed>::set_iso_week_number","value":"fn set_iso_week_number(&mut Self, NonZeroU8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":351174,"byte_end":351202,"line_start":366,"line_end":366,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3883},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":352367,"byte_end":352378,"line_start":396,"line_end":396,"column_start":9,"column_end":20},"name":"set_weekday","qualname":"<Parsed>::set_weekday","value":"fn set_weekday(&mut Self, Weekday) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":351174,"byte_end":351202,"line_start":366,"line_end":366,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3884},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":352405,"byte_end":352416,"line_start":397,"line_end":397,"column_start":9,"column_end":20},"name":"set_ordinal","qualname":"<Parsed>::set_ordinal","value":"fn set_ordinal(&mut Self, NonZeroU16) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":351174,"byte_end":351202,"line_start":366,"line_end":366,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3885},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":352446,"byte_end":352453,"line_start":398,"line_end":398,"column_start":9,"column_end":16},"name":"set_day","qualname":"<Parsed>::set_day","value":"fn set_day(&mut Self, NonZeroU8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":351174,"byte_end":351202,"line_start":366,"line_end":366,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3886},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":352492,"byte_end":352503,"line_start":399,"line_end":399,"column_start":23,"column_end":34},"name":"set_hour_24","qualname":"<Parsed>::set_hour_24","value":"fn set_hour_24(&mut Self, u8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":351420,"byte_end":351448,"line_start":373,"line_end":373,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3887},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":352525,"byte_end":352536,"line_start":400,"line_end":400,"column_start":9,"column_end":20},"name":"set_hour_12","qualname":"<Parsed>::set_hour_12","value":"fn set_hour_12(&mut Self, NonZeroU8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":351174,"byte_end":351202,"line_start":366,"line_end":366,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3888},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":352565,"byte_end":352582,"line_start":401,"line_end":401,"column_start":9,"column_end":26},"name":"set_hour_12_is_pm","qualname":"<Parsed>::set_hour_12_is_pm","value":"fn set_hour_12_is_pm(&mut Self, bool) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":351174,"byte_end":351202,"line_start":366,"line_end":366,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3889},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":352625,"byte_end":352635,"line_start":402,"line_end":402,"column_start":22,"column_end":32},"name":"set_minute","qualname":"<Parsed>::set_minute","value":"fn set_minute(&mut Self, u8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":351420,"byte_end":351448,"line_start":373,"line_end":373,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3890},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":352669,"byte_end":352679,"line_start":403,"line_end":403,"column_start":22,"column_end":32},"name":"set_second","qualname":"<Parsed>::set_second","value":"fn set_second(&mut Self, u8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":351420,"byte_end":351448,"line_start":373,"line_end":373,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3891},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":352716,"byte_end":352729,"line_start":404,"line_end":404,"column_start":25,"column_end":38},"name":"set_subsecond","qualname":"<Parsed>::set_subsecond","value":"fn set_subsecond(&mut Self, u32) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":351420,"byte_end":351448,"line_start":373,"line_end":373,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3892},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":352772,"byte_end":352787,"line_start":405,"line_end":405,"column_start":27,"column_end":42},"name":"set_offset_hour","qualname":"<Parsed>::set_offset_hour","value":"fn set_offset_hour(&mut Self, i8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":351420,"byte_end":351448,"line_start":373,"line_end":373,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2283},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":352971,"byte_end":352988,"line_start":413,"line_end":413,"column_start":12,"column_end":29},"name":"set_offset_minute","qualname":"<Parsed>::set_offset_minute","value":"fn set_offset_minute(&mut Self, u8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":352816,"byte_end":352844,"line_start":408,"line_end":408,"column_start":5,"column_end":33}},{"value":"deprecated(since = \"0.3.8\", note =\n\"use `parsed.set_offset_minute_signed()` instead\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":352849,"byte_end":352959,"line_start":409,"line_end":412,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":2284},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":353221,"byte_end":353245,"line_start":422,"line_end":422,"column_start":12,"column_end":36},"name":"set_offset_minute_signed","qualname":"<Parsed>::set_offset_minute_signed","value":"fn set_offset_minute_signed(&mut Self, i8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the `offset_minute` component.\n","sig":null,"attributes":[{"value":"/ Set the `offset_minute` component.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":353171,"byte_end":353209,"line_start":421,"line_end":421,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2285},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":353569,"byte_end":353586,"line_start":433,"line_end":433,"column_start":12,"column_end":29},"name":"set_offset_second","qualname":"<Parsed>::set_offset_second","value":"fn set_offset_second(&mut Self, u8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":353414,"byte_end":353442,"line_start":428,"line_end":428,"column_start":5,"column_end":33}},{"value":"deprecated(since = \"0.3.8\", note =\n\"use `parsed.set_offset_second_signed()` instead\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":353447,"byte_end":353557,"line_start":429,"line_end":432,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":2286},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":353819,"byte_end":353843,"line_start":442,"line_end":442,"column_start":12,"column_end":36},"name":"set_offset_second_signed","qualname":"<Parsed>::set_offset_second_signed","value":"fn set_offset_second_signed(&mut Self, i8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the `offset_second` component.\n","sig":null,"attributes":[{"value":"/ Set the `offset_second` component.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":353769,"byte_end":353807,"line_start":441,"line_end":441,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3893},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":355476,"byte_end":355485,"line_start":488,"line_end":488,"column_start":20,"column_end":29},"name":"with_year","qualname":"<Parsed>::with_year","value":"const fn with_year(Self, i32) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":354950,"byte_end":354996,"line_start":473,"line_end":473,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3894},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":355525,"byte_end":355543,"line_start":489,"line_end":489,"column_start":29,"column_end":47},"name":"with_year_last_two","qualname":"<Parsed>::with_year_last_two","value":"const fn with_year_last_two(Self, u8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":354950,"byte_end":354996,"line_start":473,"line_end":473,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3895},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":355586,"byte_end":355599,"line_start":490,"line_end":490,"column_start":24,"column_end":37},"name":"with_iso_year","qualname":"<Parsed>::with_iso_year","value":"const fn with_iso_year(Self, i32) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":354950,"byte_end":354996,"line_start":473,"line_end":473,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3896},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":355647,"byte_end":355669,"line_start":491,"line_end":491,"column_start":33,"column_end":55},"name":"with_iso_year_last_two","qualname":"<Parsed>::with_iso_year_last_two","value":"const fn with_iso_year_last_two(Self, u8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":354950,"byte_end":354996,"line_start":473,"line_end":473,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3897},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":355701,"byte_end":355711,"line_start":492,"line_end":492,"column_start":9,"column_end":19},"name":"with_month","qualname":"<Parsed>::with_month","value":"const fn with_month(Self, Month) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":354675,"byte_end":354721,"line_start":466,"line_end":466,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3898},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":355759,"byte_end":355782,"line_start":493,"line_end":493,"column_start":34,"column_end":57},"name":"with_sunday_week_number","qualname":"<Parsed>::with_sunday_week_number","value":"const fn with_sunday_week_number(Self, u8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":354950,"byte_end":354996,"line_start":473,"line_end":473,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3899},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":355840,"byte_end":355863,"line_start":494,"line_end":494,"column_start":34,"column_end":57},"name":"with_monday_week_number","qualname":"<Parsed>::with_monday_week_number","value":"const fn with_monday_week_number(Self, u8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":354950,"byte_end":354996,"line_start":473,"line_end":473,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3900},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":355896,"byte_end":355916,"line_start":495,"line_end":495,"column_start":9,"column_end":29},"name":"with_iso_week_number","qualname":"<Parsed>::with_iso_week_number","value":"const fn with_iso_week_number(Self, NonZeroU8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":354675,"byte_end":354721,"line_start":466,"line_end":466,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3901},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":355953,"byte_end":355965,"line_start":496,"line_end":496,"column_start":9,"column_end":21},"name":"with_weekday","qualname":"<Parsed>::with_weekday","value":"const fn with_weekday(Self, Weekday) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":354675,"byte_end":354721,"line_start":466,"line_end":466,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3902},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":355992,"byte_end":356004,"line_start":497,"line_end":497,"column_start":9,"column_end":21},"name":"with_ordinal","qualname":"<Parsed>::with_ordinal","value":"const fn with_ordinal(Self, NonZeroU16) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":354675,"byte_end":354721,"line_start":466,"line_end":466,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3903},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":356034,"byte_end":356042,"line_start":498,"line_end":498,"column_start":9,"column_end":17},"name":"with_day","qualname":"<Parsed>::with_day","value":"const fn with_day(Self, NonZeroU8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":354675,"byte_end":354721,"line_start":466,"line_end":466,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3904},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":356081,"byte_end":356093,"line_start":499,"line_end":499,"column_start":23,"column_end":35},"name":"with_hour_24","qualname":"<Parsed>::with_hour_24","value":"const fn with_hour_24(Self, u8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":354950,"byte_end":354996,"line_start":473,"line_end":473,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3905},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":356115,"byte_end":356127,"line_start":500,"line_end":500,"column_start":9,"column_end":21},"name":"with_hour_12","qualname":"<Parsed>::with_hour_12","value":"const fn with_hour_12(Self, NonZeroU8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":354675,"byte_end":354721,"line_start":466,"line_end":466,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3906},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":356156,"byte_end":356174,"line_start":501,"line_end":501,"column_start":9,"column_end":27},"name":"with_hour_12_is_pm","qualname":"<Parsed>::with_hour_12_is_pm","value":"const fn with_hour_12_is_pm(Self, bool) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":354675,"byte_end":354721,"line_start":466,"line_end":466,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3907},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":356217,"byte_end":356228,"line_start":502,"line_end":502,"column_start":22,"column_end":33},"name":"with_minute","qualname":"<Parsed>::with_minute","value":"const fn with_minute(Self, u8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":354950,"byte_end":354996,"line_start":473,"line_end":473,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3908},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":356262,"byte_end":356273,"line_start":503,"line_end":503,"column_start":22,"column_end":33},"name":"with_second","qualname":"<Parsed>::with_second","value":"const fn with_second(Self, u8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":354950,"byte_end":354996,"line_start":473,"line_end":473,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3909},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":356310,"byte_end":356324,"line_start":504,"line_end":504,"column_start":25,"column_end":39},"name":"with_subsecond","qualname":"<Parsed>::with_subsecond","value":"const fn with_subsecond(Self, u32) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":354950,"byte_end":354996,"line_start":473,"line_end":473,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3910},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":356367,"byte_end":356383,"line_start":505,"line_end":505,"column_start":27,"column_end":43},"name":"with_offset_hour","qualname":"<Parsed>::with_offset_hour","value":"const fn with_offset_hour(Self, i8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":354950,"byte_end":354996,"line_start":473,"line_end":473,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2290},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":356592,"byte_end":356610,"line_start":513,"line_end":513,"column_start":18,"column_end":36},"name":"with_offset_minute","qualname":"<Parsed>::with_offset_minute","value":"const fn with_offset_minute(Self, u8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":356412,"byte_end":356458,"line_start":508,"line_end":508,"column_start":5,"column_end":51}},{"value":"deprecated(since = \"0.3.8\", note =\n\"use `parsed.with_offset_minute_signed()` instead\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":356463,"byte_end":356574,"line_start":509,"line_end":512,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":2291},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":356865,"byte_end":356890,"line_start":522,"line_end":522,"column_start":18,"column_end":43},"name":"with_offset_minute_signed","qualname":"<Parsed>::with_offset_minute_signed","value":"const fn with_offset_minute_signed(Self, i8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the `offset_minute` component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the `offset_minute` component and return `self`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":356791,"byte_end":356847,"line_start":521,"line_end":521,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2292},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":357242,"byte_end":357260,"line_start":533,"line_end":533,"column_start":18,"column_end":36},"name":"with_offset_second","qualname":"<Parsed>::with_offset_second","value":"const fn with_offset_second(Self, u8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":357062,"byte_end":357108,"line_start":528,"line_end":528,"column_start":5,"column_end":51}},{"value":"deprecated(since = \"0.3.8\", note =\n\"use `parsed.with_offset_second_signed()` instead\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":357113,"byte_end":357224,"line_start":529,"line_end":532,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":2293},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":357515,"byte_end":357540,"line_start":542,"line_end":542,"column_start":18,"column_end":43},"name":"with_offset_second_signed","qualname":"<Parsed>::with_offset_second_signed","value":"const fn with_offset_second_signed(Self, i8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the `offset_second` component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the `offset_second` component and return `self`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":357441,"byte_end":357497,"line_start":541,"line_end":541,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2296},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":357789,"byte_end":357797,"line_start":552,"line_end":552,"column_start":8,"column_end":16},"name":"try_from","qualname":"<Date as std::convert::TryFrom>::try_from","value":"fn try_from(Parsed) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3092},"children":[],"decl_id":{"krate":2,"index":3095},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2301},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":360075,"byte_end":360083,"line_start":612,"line_end":612,"column_start":8,"column_end":16},"name":"try_from","qualname":"<Time as std::convert::TryFrom>::try_from","value":"fn try_from(Parsed) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3092},"children":[],"decl_id":{"krate":2,"index":3095},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2304},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":361245,"byte_end":361253,"line_start":640,"line_end":640,"column_start":8,"column_end":16},"name":"try_from","qualname":"<UtcOffset as std::convert::TryFrom>::try_from","value":"fn try_from(Parsed) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3092},"children":[],"decl_id":{"krate":2,"index":3095},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2308},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":362033,"byte_end":362041,"line_start":662,"line_end":662,"column_start":8,"column_end":16},"name":"try_from","qualname":"<PrimitiveDateTime as std::convert::TryFrom>::try_from","value":"fn try_from(Parsed) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3092},"children":[],"decl_id":{"krate":2,"index":3095},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2311},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":362321,"byte_end":362329,"line_start":671,"line_end":671,"column_start":8,"column_end":16},"name":"try_from","qualname":"<OffsetDateTime as std::convert::TryFrom>::try_from","value":"fn try_from(Parsed) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3092},"children":[],"decl_id":{"krate":2,"index":3095},"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: unwrap_in_result)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":362246,"byte_end":362280,"line_start":670,"line_end":670,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":3934},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":365438,"byte_end":365455,"line_start":17,"line_end":17,"column_start":12,"column_end":29},"name":"PrimitiveDateTime","qualname":"::primitive_date_time::PrimitiveDateTime","value":"PrimitiveDateTime {  }","parent":null,"children":[{"krate":0,"index":3935},{"krate":0,"index":3936}],"decl_id":null,"docs":" Combined date and time.\n","sig":null,"attributes":[{"value":"/ Combined date and time.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":365331,"byte_end":365358,"line_start":15,"line_end":15,"column_start":1,"column_end":28}}]},{"kind":"Const","id":{"krate":0,"index":2398},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":366226,"byte_end":366229,"line_start":37,"line_end":37,"column_start":15,"column_end":18},"name":"MIN","qualname":"::primitive_date_time::PrimitiveDateTime::MIN","value":"Self","parent":{"krate":0,"index":2397},"children":[],"decl_id":null,"docs":" The smallest value that can be represented by `PrimitiveDateTime`.","sig":null,"attributes":[{"value":"/ The smallest value that can be represented by `PrimitiveDateTime`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":365648,"byte_end":365718,"line_start":25,"line_end":25,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":365723,"byte_end":365726,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ Depending on `large-dates` feature flag, value of this constant may vary.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":365731,"byte_end":365808,"line_start":27,"line_end":27,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":365813,"byte_end":365816,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ 1. With `large-dates` disabled it is equal to `-9999 - 01 - 01 00:00:00.0`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":365821,"byte_end":365899,"line_start":29,"line_end":29,"column_start":5,"column_end":83}},{"value":"/ 2. With `large-dates` enabled it is equal to `-999999 - 01 - 01 00:00:00.0`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":365904,"byte_end":365983,"line_start":30,"line_end":30,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":365988,"byte_end":365991,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":365996,"byte_end":366007,"line_start":32,"line_end":32,"column_start":5,"column_end":16}},{"value":"/ # use time::{PrimitiveDateTime, macros::datetime};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":366012,"byte_end":366066,"line_start":33,"line_end":33,"column_start":5,"column_end":59}},{"value":"/ // Assuming `large-dates` feature is enabled.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":366071,"byte_end":366120,"line_start":34,"line_end":34,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(PrimitiveDateTime::MIN, datetime!(-999999 - 01 - 01 0:00));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":366125,"byte_end":366199,"line_start":35,"line_end":35,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":366204,"byte_end":366211,"line_start":36,"line_end":36,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":2399},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":366887,"byte_end":366890,"line_start":51,"line_end":51,"column_start":15,"column_end":18},"name":"MAX","qualname":"::primitive_date_time::PrimitiveDateTime::MAX","value":"Self","parent":{"krate":0,"index":2397},"children":[],"decl_id":null,"docs":" The largest value that can be represented by `PrimitiveDateTime`.","sig":null,"attributes":[{"value":"/ The largest value that can be represented by `PrimitiveDateTime`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":366276,"byte_end":366345,"line_start":39,"line_end":39,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":366350,"byte_end":366353,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ Depending on `large-dates` feature flag, value of this constant may vary.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":366358,"byte_end":366435,"line_start":41,"line_end":41,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":366440,"byte_end":366443,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ 1. With `large-dates` disabled it is equal to `9999 - 12 - 31 23:59:59.999_999_999`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":366448,"byte_end":366535,"line_start":43,"line_end":43,"column_start":5,"column_end":92}},{"value":"/ 2. With `large-dates` enabled it is equal to `999999 - 12 - 31 23:59:59.999_999_999`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":366540,"byte_end":366628,"line_start":44,"line_end":44,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":366633,"byte_end":366636,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":366641,"byte_end":366652,"line_start":46,"line_end":46,"column_start":5,"column_end":16}},{"value":"/ # use time::{PrimitiveDateTime, macros::datetime};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":366657,"byte_end":366711,"line_start":47,"line_end":47,"column_start":5,"column_end":59}},{"value":"/ // Assuming `large-dates` feature is enabled.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":366716,"byte_end":366765,"line_start":48,"line_end":48,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(PrimitiveDateTime::MAX, datetime!(+999999 - 12 - 31 23:59:59.999_999_999));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":366770,"byte_end":366860,"line_start":49,"line_end":49,"column_start":5,"column_end":95}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":366865,"byte_end":366872,"line_start":50,"line_end":50,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2400},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":367280,"byte_end":367283,"line_start":62,"line_end":62,"column_start":18,"column_end":21},"name":"new","qualname":"<PrimitiveDateTime>::new","value":"const fn new(Date, Time) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PrimitiveDateTime` from the provided [`Date`] and [`Time`].","sig":null,"attributes":[{"value":"/ Create a new `PrimitiveDateTime` from the provided [`Date`] and [`Time`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":366937,"byte_end":367014,"line_start":53,"line_end":53,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":367019,"byte_end":367022,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":367027,"byte_end":367038,"line_start":55,"line_end":55,"column_start":5,"column_end":16}},{"value":"/ # use time::{PrimitiveDateTime, macros::{date, datetime, time}};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":367043,"byte_end":367111,"line_start":56,"line_end":56,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":367116,"byte_end":367131,"line_start":57,"line_end":57,"column_start":5,"column_end":20}},{"value":"/     PrimitiveDateTime::new(date!(2019-01-01), time!(0:00)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":367136,"byte_end":367199,"line_start":58,"line_end":58,"column_start":5,"column_end":68}},{"value":"/     datetime!(2019-01-01 0:00),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":367204,"byte_end":367239,"line_start":59,"line_end":59,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":367244,"byte_end":367250,"line_start":60,"line_end":60,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":367255,"byte_end":367262,"line_start":61,"line_end":61,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2401},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":367622,"byte_end":367626,"line_start":73,"line_end":73,"column_start":18,"column_end":22},"name":"date","qualname":"<PrimitiveDateTime>::date","value":"const fn date(Self) -> Date","parent":null,"children":[],"decl_id":null,"docs":" Get the [`Date`] component of the `PrimitiveDateTime`.","sig":null,"attributes":[{"value":"/ Get the [`Date`] component of the `PrimitiveDateTime`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":367390,"byte_end":367448,"line_start":67,"line_end":67,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":367453,"byte_end":367456,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":367461,"byte_end":367472,"line_start":69,"line_end":69,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{date, datetime};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":367477,"byte_end":367518,"line_start":70,"line_end":70,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).date(), date!(2019-01-01));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":367523,"byte_end":367592,"line_start":71,"line_end":71,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":367597,"byte_end":367604,"line_start":72,"line_end":72,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2402},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":367886,"byte_end":367890,"line_start":82,"line_end":82,"column_start":18,"column_end":22},"name":"time","qualname":"<PrimitiveDateTime>::time","value":"const fn time(Self) -> Time","parent":null,"children":[],"decl_id":null,"docs":" Get the [`Time`] component of the `PrimitiveDateTime`.","sig":null,"attributes":[{"value":"/ Get the [`Time`] component of the `PrimitiveDateTime`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":367672,"byte_end":367730,"line_start":77,"line_end":77,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":367735,"byte_end":367738,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":367743,"byte_end":367754,"line_start":79,"line_end":79,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, time};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":367759,"byte_end":367800,"line_start":80,"line_end":80,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).time(), time!(0:00));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":367805,"byte_end":367868,"line_start":81,"line_end":81,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2403},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":368303,"byte_end":368307,"line_start":96,"line_end":96,"column_start":18,"column_end":22},"name":"year","qualname":"<PrimitiveDateTime>::year","value":"const fn year(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the year of the date.","sig":null,"attributes":[{"value":"/ Get the year of the date.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":367999,"byte_end":368028,"line_start":88,"line_end":88,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":368033,"byte_end":368036,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":368041,"byte_end":368052,"line_start":90,"line_end":90,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":368057,"byte_end":368090,"line_start":91,"line_end":91,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).year(), 2019);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":368095,"byte_end":368151,"line_start":92,"line_end":92,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(datetime!(2019-12-31 0:00).year(), 2019);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":368156,"byte_end":368212,"line_start":93,"line_end":93,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00).year(), 2020);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":368217,"byte_end":368273,"line_start":94,"line_end":94,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":368278,"byte_end":368285,"line_start":95,"line_end":95,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2404},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":368635,"byte_end":368640,"line_start":107,"line_end":107,"column_start":18,"column_end":23},"name":"month","qualname":"<PrimitiveDateTime>::month","value":"const fn month(Self) -> Month","parent":null,"children":[],"decl_id":null,"docs":" Get the month of the date.","sig":null,"attributes":[{"value":"/ Get the month of the date.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":368359,"byte_end":368389,"line_start":100,"line_end":100,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":368394,"byte_end":368397,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":368402,"byte_end":368413,"line_start":102,"line_end":102,"column_start":5,"column_end":16}},{"value":"/ # use time::{macros::datetime, Month};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":368418,"byte_end":368460,"line_start":103,"line_end":103,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).month(), Month::January);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":368465,"byte_end":368532,"line_start":104,"line_end":104,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(datetime!(2019-12-31 0:00).month(), Month::December);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":368537,"byte_end":368605,"line_start":105,"line_end":105,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":368610,"byte_end":368617,"line_start":106,"line_end":106,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2405},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":369003,"byte_end":369006,"line_start":120,"line_end":120,"column_start":18,"column_end":21},"name":"day","qualname":"<PrimitiveDateTime>::day","value":"const fn day(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the day of the date.","sig":null,"attributes":[{"value":"/ Get the day of the date.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":368695,"byte_end":368723,"line_start":111,"line_end":111,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":368728,"byte_end":368731,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=31`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":368736,"byte_end":368796,"line_start":113,"line_end":113,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":368801,"byte_end":368804,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":368809,"byte_end":368820,"line_start":115,"line_end":115,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":368825,"byte_end":368858,"line_start":116,"line_end":116,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).day(), 1);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":368863,"byte_end":368915,"line_start":117,"line_end":117,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(datetime!(2019-12-31 0:00).day(), 31);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":368920,"byte_end":368973,"line_start":118,"line_end":118,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":368978,"byte_end":368985,"line_start":119,"line_end":119,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2406},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":369403,"byte_end":369410,"line_start":133,"line_end":133,"column_start":18,"column_end":25},"name":"ordinal","qualname":"<PrimitiveDateTime>::ordinal","value":"const fn ordinal(Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the day of the year.","sig":null,"attributes":[{"value":"/ Get the day of the year.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":369056,"byte_end":369084,"line_start":124,"line_end":124,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":369089,"byte_end":369092,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=366` (`1..=365` for common years).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":369097,"byte_end":369187,"line_start":126,"line_end":126,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":369192,"byte_end":369195,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":369200,"byte_end":369211,"line_start":128,"line_end":128,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":369216,"byte_end":369249,"line_start":129,"line_end":129,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).ordinal(), 1);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":369254,"byte_end":369310,"line_start":130,"line_end":130,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(datetime!(2019-12-31 0:00).ordinal(), 365);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":369315,"byte_end":369373,"line_start":131,"line_end":131,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":369378,"byte_end":369385,"line_start":132,"line_end":132,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2407},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":369971,"byte_end":369979,"line_start":149,"line_end":149,"column_start":18,"column_end":26},"name":"iso_week","qualname":"<PrimitiveDateTime>::iso_week","value":"const fn iso_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the ISO week number.","sig":null,"attributes":[{"value":"/ Get the ISO week number.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":369465,"byte_end":369493,"line_start":137,"line_end":137,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":369498,"byte_end":369501,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=53`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":369506,"byte_end":369566,"line_start":139,"line_end":139,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":369571,"byte_end":369574,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":369579,"byte_end":369590,"line_start":141,"line_end":141,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":369595,"byte_end":369628,"line_start":142,"line_end":142,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).iso_week(), 1);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":369633,"byte_end":369690,"line_start":143,"line_end":143,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(datetime!(2019-10-04 0:00).iso_week(), 40);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":369695,"byte_end":369753,"line_start":144,"line_end":144,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00).iso_week(), 1);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":369758,"byte_end":369815,"line_start":145,"line_end":145,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(datetime!(2020-12-31 0:00).iso_week(), 53);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":369820,"byte_end":369878,"line_start":146,"line_end":146,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(datetime!(2021-01-01 0:00).iso_week(), 53);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":369883,"byte_end":369941,"line_start":147,"line_end":147,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":369946,"byte_end":369953,"line_start":148,"line_end":148,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2408},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":370548,"byte_end":370565,"line_start":164,"line_end":164,"column_start":18,"column_end":35},"name":"sunday_based_week","qualname":"<PrimitiveDateTime>::sunday_based_week","value":"const fn sunday_based_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the week number where week 1 begins on the first Sunday.","sig":null,"attributes":[{"value":"/ Get the week number where week 1 begins on the first Sunday.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":370034,"byte_end":370098,"line_start":153,"line_end":153,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":370103,"byte_end":370106,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..=53`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":370111,"byte_end":370171,"line_start":155,"line_end":155,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":370176,"byte_end":370179,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":370184,"byte_end":370195,"line_start":157,"line_end":157,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":370200,"byte_end":370233,"line_start":158,"line_end":158,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).sunday_based_week(), 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":370238,"byte_end":370304,"line_start":159,"line_end":159,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00).sunday_based_week(), 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":370309,"byte_end":370375,"line_start":160,"line_end":160,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(datetime!(2020-12-31 0:00).sunday_based_week(), 52);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":370380,"byte_end":370447,"line_start":161,"line_end":161,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(datetime!(2021-01-01 0:00).sunday_based_week(), 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":370452,"byte_end":370518,"line_start":162,"line_end":162,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":370523,"byte_end":370530,"line_start":163,"line_end":163,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2409},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":371143,"byte_end":371160,"line_start":179,"line_end":179,"column_start":18,"column_end":35},"name":"monday_based_week","qualname":"<PrimitiveDateTime>::monday_based_week","value":"const fn monday_based_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the week number where week 1 begins on the first Monday.","sig":null,"attributes":[{"value":"/ Get the week number where week 1 begins on the first Monday.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":370629,"byte_end":370693,"line_start":168,"line_end":168,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":370698,"byte_end":370701,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..=53`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":370706,"byte_end":370766,"line_start":170,"line_end":170,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":370771,"byte_end":370774,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":370779,"byte_end":370790,"line_start":172,"line_end":172,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":370795,"byte_end":370828,"line_start":173,"line_end":173,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).monday_based_week(), 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":370833,"byte_end":370899,"line_start":174,"line_end":174,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00).monday_based_week(), 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":370904,"byte_end":370970,"line_start":175,"line_end":175,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(datetime!(2020-12-31 0:00).monday_based_week(), 52);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":370975,"byte_end":371042,"line_start":176,"line_end":176,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(datetime!(2021-01-01 0:00).monday_based_week(), 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":371047,"byte_end":371113,"line_start":177,"line_end":177,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":371118,"byte_end":371125,"line_start":178,"line_end":178,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2410},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":371486,"byte_end":371502,"line_start":192,"line_end":192,"column_start":18,"column_end":34},"name":"to_calendar_date","qualname":"<PrimitiveDateTime>::to_calendar_date","value":"const fn to_calendar_date(Self) -> (i32, Month, u8)","parent":null,"children":[],"decl_id":null,"docs":" Get the year, month, and day.","sig":null,"attributes":[{"value":"/ Get the year, month, and day.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":371224,"byte_end":371257,"line_start":183,"line_end":183,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":371262,"byte_end":371265,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":371270,"byte_end":371281,"line_start":185,"line_end":185,"column_start":5,"column_end":16}},{"value":"/ # use time::{macros::datetime, Month};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":371286,"byte_end":371328,"line_start":186,"line_end":186,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":371333,"byte_end":371348,"line_start":187,"line_end":187,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00).to_calendar_date(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":371353,"byte_end":371407,"line_start":188,"line_end":188,"column_start":5,"column_end":59}},{"value":"/     (2019, Month::January, 1)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":371412,"byte_end":371445,"line_start":189,"line_end":189,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":371450,"byte_end":371456,"line_start":190,"line_end":190,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":371461,"byte_end":371468,"line_start":191,"line_end":191,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2411},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":371788,"byte_end":371803,"line_start":202,"line_end":202,"column_start":18,"column_end":33},"name":"to_ordinal_date","qualname":"<PrimitiveDateTime>::to_ordinal_date","value":"const fn to_ordinal_date(Self) -> (i32, u16)","parent":null,"children":[],"decl_id":null,"docs":" Get the year and ordinal day number.","sig":null,"attributes":[{"value":"/ Get the year and ordinal day number.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":371579,"byte_end":371619,"line_start":196,"line_end":196,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":371624,"byte_end":371627,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":371632,"byte_end":371643,"line_start":198,"line_end":198,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":371648,"byte_end":371681,"line_start":199,"line_end":199,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).to_ordinal_date(), (2019, 1));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":371686,"byte_end":371758,"line_start":200,"line_end":200,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":371763,"byte_end":371770,"line_start":201,"line_end":201,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2412},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":372640,"byte_end":372656,"line_start":231,"line_end":231,"column_start":18,"column_end":34},"name":"to_iso_week_date","qualname":"<PrimitiveDateTime>::to_iso_week_date","value":"const fn to_iso_week_date(Self) -> (i32, u8, Weekday)","parent":null,"children":[],"decl_id":null,"docs":" Get the ISO 8601 year, week number, and weekday.","sig":null,"attributes":[{"value":"/ Get the ISO 8601 year, week number, and weekday.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":371873,"byte_end":371925,"line_start":206,"line_end":206,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":371930,"byte_end":371933,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":371938,"byte_end":371949,"line_start":208,"line_end":208,"column_start":5,"column_end":16}},{"value":"/ # use time::{Weekday::*, macros::datetime};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":371954,"byte_end":372001,"line_start":209,"line_end":209,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":372006,"byte_end":372021,"line_start":210,"line_end":210,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00).to_iso_week_date(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":372026,"byte_end":372080,"line_start":211,"line_end":211,"column_start":5,"column_end":59}},{"value":"/     (2019, 1, Tuesday)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":372085,"byte_end":372111,"line_start":212,"line_end":212,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":372116,"byte_end":372122,"line_start":213,"line_end":213,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":372127,"byte_end":372142,"line_start":214,"line_end":214,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-10-04 0:00).to_iso_week_date(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":372147,"byte_end":372201,"line_start":215,"line_end":215,"column_start":5,"column_end":59}},{"value":"/     (2019, 40, Friday)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":372206,"byte_end":372232,"line_start":216,"line_end":216,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":372237,"byte_end":372243,"line_start":217,"line_end":217,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":372248,"byte_end":372263,"line_start":218,"line_end":218,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00).to_iso_week_date(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":372268,"byte_end":372322,"line_start":219,"line_end":219,"column_start":5,"column_end":59}},{"value":"/     (2020, 1, Wednesday)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":372327,"byte_end":372355,"line_start":220,"line_end":220,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":372360,"byte_end":372366,"line_start":221,"line_end":221,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":372371,"byte_end":372386,"line_start":222,"line_end":222,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-12-31 0:00).to_iso_week_date(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":372391,"byte_end":372445,"line_start":223,"line_end":223,"column_start":5,"column_end":59}},{"value":"/     (2020, 53, Thursday)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":372450,"byte_end":372478,"line_start":224,"line_end":224,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":372483,"byte_end":372489,"line_start":225,"line_end":225,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":372494,"byte_end":372509,"line_start":226,"line_end":226,"column_start":5,"column_end":20}},{"value":"/     datetime!(2021-01-01 0:00).to_iso_week_date(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":372514,"byte_end":372568,"line_start":227,"line_end":227,"column_start":5,"column_end":59}},{"value":"/     (2020, 53, Friday)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":372573,"byte_end":372599,"line_start":228,"line_end":228,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":372604,"byte_end":372610,"line_start":229,"line_end":229,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":372615,"byte_end":372622,"line_start":230,"line_end":230,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2413},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":373662,"byte_end":373669,"line_start":252,"line_end":252,"column_start":18,"column_end":25},"name":"weekday","qualname":"<PrimitiveDateTime>::weekday","value":"const fn weekday(Self) -> Weekday","parent":null,"children":[],"decl_id":null,"docs":" Get the weekday.","sig":null,"attributes":[{"value":"/ Get the weekday.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":372735,"byte_end":372755,"line_start":235,"line_end":235,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":372760,"byte_end":372763,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":372768,"byte_end":372779,"line_start":237,"line_end":237,"column_start":5,"column_end":16}},{"value":"/ # use time::{Weekday::*, macros::datetime};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":372784,"byte_end":372831,"line_start":238,"line_end":238,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).weekday(), Tuesday);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":372836,"byte_end":372898,"line_start":239,"line_end":239,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(datetime!(2019-02-01 0:00).weekday(), Friday);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":372903,"byte_end":372964,"line_start":240,"line_end":240,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2019-03-01 0:00).weekday(), Friday);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":372969,"byte_end":373030,"line_start":241,"line_end":241,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2019-04-01 0:00).weekday(), Monday);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":373035,"byte_end":373096,"line_start":242,"line_end":242,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2019-05-01 0:00).weekday(), Wednesday);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":373101,"byte_end":373165,"line_start":243,"line_end":243,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(datetime!(2019-06-01 0:00).weekday(), Saturday);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":373170,"byte_end":373233,"line_start":244,"line_end":244,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(datetime!(2019-07-01 0:00).weekday(), Monday);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":373238,"byte_end":373299,"line_start":245,"line_end":245,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2019-08-01 0:00).weekday(), Thursday);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":373304,"byte_end":373367,"line_start":246,"line_end":246,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(datetime!(2019-09-01 0:00).weekday(), Sunday);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":373372,"byte_end":373433,"line_start":247,"line_end":247,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2019-10-01 0:00).weekday(), Tuesday);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":373438,"byte_end":373500,"line_start":248,"line_end":248,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(datetime!(2019-11-01 0:00).weekday(), Friday);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":373505,"byte_end":373566,"line_start":249,"line_end":249,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2019-12-01 0:00).weekday(), Sunday);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":373571,"byte_end":373632,"line_start":250,"line_end":250,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":373637,"byte_end":373644,"line_start":251,"line_end":251,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2414},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":374414,"byte_end":374427,"line_start":268,"line_end":268,"column_start":18,"column_end":31},"name":"to_julian_day","qualname":"<PrimitiveDateTime>::to_julian_day","value":"const fn to_julian_day(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the Julian day for the date. The time is not taken into account for this calculation.","sig":null,"attributes":[{"value":"/ Get the Julian day for the date. The time is not taken into account for this calculation.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":373728,"byte_end":373821,"line_start":256,"line_end":256,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":373826,"byte_end":373829,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ The algorithm to perform this conversion is derived from one provided by Peter Baum; it is","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":373834,"byte_end":373928,"line_start":258,"line_end":258,"column_start":5,"column_end":99}},{"value":"/ freely available [here](https://www.researchgate.net/publication/316558298_Date_Algorithms).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":373933,"byte_end":374029,"line_start":259,"line_end":259,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":374034,"byte_end":374037,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":374042,"byte_end":374053,"line_start":261,"line_end":261,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":374058,"byte_end":374091,"line_start":262,"line_end":262,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(-4713-11-24 0:00).to_julian_day(), 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":374096,"byte_end":374159,"line_start":263,"line_end":263,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(datetime!(2000-01-01 0:00).to_julian_day(), 2_451_545);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":374164,"byte_end":374234,"line_start":264,"line_end":264,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).to_julian_day(), 2_458_485);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":374239,"byte_end":374309,"line_start":265,"line_end":265,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2019-12-31 0:00).to_julian_day(), 2_458_849);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":374314,"byte_end":374384,"line_start":266,"line_end":266,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":374389,"byte_end":374396,"line_start":267,"line_end":267,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2415},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":374827,"byte_end":374833,"line_start":281,"line_end":281,"column_start":18,"column_end":24},"name":"as_hms","qualname":"<PrimitiveDateTime>::as_hms","value":"const fn as_hms(Self) -> (u8, u8, u8)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, and second.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, and second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":374546,"byte_end":374589,"line_start":274,"line_end":274,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":374594,"byte_end":374597,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":374602,"byte_end":374613,"line_start":276,"line_end":276,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":374618,"byte_end":374651,"line_start":277,"line_end":277,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00:00).as_hms(), (0, 0, 0));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":374656,"byte_end":374722,"line_start":278,"line_end":278,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(datetime!(2020-01-01 23:59:59).as_hms(), (23, 59, 59));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":374727,"byte_end":374797,"line_start":279,"line_end":279,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":374802,"byte_end":374809,"line_start":280,"line_end":280,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2416},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":375248,"byte_end":375260,"line_start":295,"line_end":295,"column_start":18,"column_end":30},"name":"as_hms_milli","qualname":"<PrimitiveDateTime>::as_hms_milli","value":"const fn as_hms_milli(Self) -> (u8, u8, u8, u16)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and millisecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and millisecond.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":374896,"byte_end":374952,"line_start":285,"line_end":285,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":374957,"byte_end":374960,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":374965,"byte_end":374976,"line_start":287,"line_end":287,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":374981,"byte_end":375014,"line_start":288,"line_end":288,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00:00).as_hms_milli(), (0, 0, 0, 0));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":375019,"byte_end":375094,"line_start":289,"line_end":289,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":375099,"byte_end":375114,"line_start":290,"line_end":290,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 23:59:59.999).as_hms_milli(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":375119,"byte_end":375177,"line_start":291,"line_end":291,"column_start":5,"column_end":63}},{"value":"/     (23, 59, 59, 999)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":375182,"byte_end":375207,"line_start":292,"line_end":292,"column_start":5,"column_end":30}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":375212,"byte_end":375218,"line_start":293,"line_end":293,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":375223,"byte_end":375230,"line_start":294,"line_end":294,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2417},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":375694,"byte_end":375706,"line_start":309,"line_end":309,"column_start":18,"column_end":30},"name":"as_hms_micro","qualname":"<PrimitiveDateTime>::as_hms_micro","value":"const fn as_hms_micro(Self) -> (u8, u8, u8, u32)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and microsecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and microsecond.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":375334,"byte_end":375390,"line_start":299,"line_end":299,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":375395,"byte_end":375398,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":375403,"byte_end":375414,"line_start":301,"line_end":301,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":375419,"byte_end":375452,"line_start":302,"line_end":302,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00:00).as_hms_micro(), (0, 0, 0, 0));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":375457,"byte_end":375532,"line_start":303,"line_end":303,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":375537,"byte_end":375552,"line_start":304,"line_end":304,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 23:59:59.999_999).as_hms_micro(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":375557,"byte_end":375619,"line_start":305,"line_end":305,"column_start":5,"column_end":67}},{"value":"/     (23, 59, 59, 999_999)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":375624,"byte_end":375653,"line_start":306,"line_end":306,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":375658,"byte_end":375664,"line_start":307,"line_end":307,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":375669,"byte_end":375676,"line_start":308,"line_end":308,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2418},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":376145,"byte_end":376156,"line_start":323,"line_end":323,"column_start":18,"column_end":29},"name":"as_hms_nano","qualname":"<PrimitiveDateTime>::as_hms_nano","value":"const fn as_hms_nano(Self) -> (u8, u8, u8, u32)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and nanosecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and nanosecond.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":375780,"byte_end":375835,"line_start":313,"line_end":313,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":375840,"byte_end":375843,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":375848,"byte_end":375859,"line_start":315,"line_end":315,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":375864,"byte_end":375897,"line_start":316,"line_end":316,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00:00).as_hms_nano(), (0, 0, 0, 0));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":375902,"byte_end":375976,"line_start":317,"line_end":317,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":375981,"byte_end":375996,"line_start":318,"line_end":318,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 23:59:59.999_999_999).as_hms_nano(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":376001,"byte_end":376066,"line_start":319,"line_end":319,"column_start":5,"column_end":70}},{"value":"/     (23, 59, 59, 999_999_999)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":376071,"byte_end":376104,"line_start":320,"line_end":320,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":376109,"byte_end":376115,"line_start":321,"line_end":321,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":376120,"byte_end":376127,"line_start":322,"line_end":322,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2419},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":376537,"byte_end":376541,"line_start":336,"line_end":336,"column_start":18,"column_end":22},"name":"hour","qualname":"<PrimitiveDateTime>::hour","value":"const fn hour(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour.","sig":null,"attributes":[{"value":"/ Get the clock hour.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":376229,"byte_end":376252,"line_start":327,"line_end":327,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":376257,"byte_end":376260,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..24`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":376265,"byte_end":376324,"line_start":329,"line_end":329,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":376329,"byte_end":376332,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":376337,"byte_end":376348,"line_start":331,"line_end":331,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":376353,"byte_end":376386,"line_start":332,"line_end":332,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).hour(), 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":376391,"byte_end":376444,"line_start":333,"line_end":333,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(datetime!(2019-01-01 23:59:59).hour(), 23);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":376449,"byte_end":376507,"line_start":334,"line_end":334,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":376512,"byte_end":376519,"line_start":335,"line_end":335,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2420},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":376916,"byte_end":376922,"line_start":349,"line_end":349,"column_start":18,"column_end":24},"name":"minute","qualname":"<PrimitiveDateTime>::minute","value":"const fn minute(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the minute within the hour.","sig":null,"attributes":[{"value":"/ Get the minute within the hour.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":376592,"byte_end":376627,"line_start":340,"line_end":340,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":376632,"byte_end":376635,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..60`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":376640,"byte_end":376699,"line_start":342,"line_end":342,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":376704,"byte_end":376707,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":376712,"byte_end":376723,"line_start":344,"line_end":344,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":376728,"byte_end":376761,"line_start":345,"line_end":345,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).minute(), 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":376766,"byte_end":376821,"line_start":346,"line_end":346,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(datetime!(2019-01-01 23:59:59).minute(), 59);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":376826,"byte_end":376886,"line_start":347,"line_end":347,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":376891,"byte_end":376898,"line_start":348,"line_end":348,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2421},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":377301,"byte_end":377307,"line_start":362,"line_end":362,"column_start":18,"column_end":24},"name":"second","qualname":"<PrimitiveDateTime>::second","value":"const fn second(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the second within the minute.","sig":null,"attributes":[{"value":"/ Get the second within the minute.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":376975,"byte_end":377012,"line_start":353,"line_end":353,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":377017,"byte_end":377020,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..60`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":377025,"byte_end":377084,"line_start":355,"line_end":355,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":377089,"byte_end":377092,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":377097,"byte_end":377108,"line_start":357,"line_end":357,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":377113,"byte_end":377146,"line_start":358,"line_end":358,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).second(), 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":377151,"byte_end":377206,"line_start":359,"line_end":359,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(datetime!(2019-01-01 23:59:59).second(), 59);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":377211,"byte_end":377271,"line_start":360,"line_end":360,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":377276,"byte_end":377283,"line_start":361,"line_end":361,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2422},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":377710,"byte_end":377721,"line_start":375,"line_end":375,"column_start":18,"column_end":29},"name":"millisecond","qualname":"<PrimitiveDateTime>::millisecond","value":"const fn millisecond(Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the milliseconds within the second.","sig":null,"attributes":[{"value":"/ Get the milliseconds within the second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":377360,"byte_end":377403,"line_start":366,"line_end":366,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":377408,"byte_end":377411,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":377416,"byte_end":377478,"line_start":368,"line_end":368,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":377483,"byte_end":377486,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":377491,"byte_end":377502,"line_start":370,"line_end":370,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":377507,"byte_end":377540,"line_start":371,"line_end":371,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).millisecond(), 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":377545,"byte_end":377605,"line_start":372,"line_end":372,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(datetime!(2019-01-01 23:59:59.999).millisecond(), 999);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":377610,"byte_end":377680,"line_start":373,"line_end":373,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":377685,"byte_end":377692,"line_start":374,"line_end":374,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2423},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":378176,"byte_end":378187,"line_start":391,"line_end":391,"column_start":18,"column_end":29},"name":"microsecond","qualname":"<PrimitiveDateTime>::microsecond","value":"const fn microsecond(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the microseconds within the second.","sig":null,"attributes":[{"value":"/ Get the microseconds within the second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":377780,"byte_end":377823,"line_start":379,"line_end":379,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":377828,"byte_end":377831,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000_000`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":377836,"byte_end":377902,"line_start":381,"line_end":381,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":377907,"byte_end":377910,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":377915,"byte_end":377926,"line_start":383,"line_end":383,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":377931,"byte_end":377964,"line_start":384,"line_end":384,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).microsecond(), 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":377969,"byte_end":378029,"line_start":385,"line_end":385,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":378034,"byte_end":378049,"line_start":386,"line_end":386,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 23:59:59.999_999).microsecond(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":378054,"byte_end":378115,"line_start":387,"line_end":387,"column_start":5,"column_end":66}},{"value":"/     999_999","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":378120,"byte_end":378135,"line_start":388,"line_end":388,"column_start":5,"column_end":20}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":378140,"byte_end":378146,"line_start":389,"line_end":389,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":378151,"byte_end":378158,"line_start":390,"line_end":390,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2424},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":378652,"byte_end":378662,"line_start":407,"line_end":407,"column_start":18,"column_end":28},"name":"nanosecond","qualname":"<PrimitiveDateTime>::nanosecond","value":"const fn nanosecond(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the nanoseconds within the second.","sig":null,"attributes":[{"value":"/ Get the nanoseconds within the second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":378246,"byte_end":378288,"line_start":395,"line_end":395,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":378293,"byte_end":378296,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000_000_000`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":378301,"byte_end":378371,"line_start":397,"line_end":397,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":378376,"byte_end":378379,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":378384,"byte_end":378395,"line_start":399,"line_end":399,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":378400,"byte_end":378433,"line_start":400,"line_end":400,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).nanosecond(), 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":378438,"byte_end":378497,"line_start":401,"line_end":401,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":378502,"byte_end":378517,"line_start":402,"line_end":402,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 23:59:59.999_999_999).nanosecond(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":378522,"byte_end":378586,"line_start":403,"line_end":403,"column_start":5,"column_end":69}},{"value":"/     999_999_999,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":378591,"byte_end":378611,"line_start":404,"line_end":404,"column_start":5,"column_end":25}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":378616,"byte_end":378622,"line_start":405,"line_end":405,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":378627,"byte_end":378634,"line_start":406,"line_end":406,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2425},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":379373,"byte_end":379386,"line_start":431,"line_end":431,"column_start":18,"column_end":31},"name":"assume_offset","qualname":"<PrimitiveDateTime>::assume_offset","value":"const fn assume_offset(Self, UtcOffset) -> OffsetDateTime","parent":null,"children":[],"decl_id":null,"docs":" Assuming that the existing `PrimitiveDateTime` represents a moment in the provided\n [`UtcOffset`], return an [`OffsetDateTime`].","sig":null,"attributes":[{"value":"/ Assuming that the existing `PrimitiveDateTime` represents a moment in the provided","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":378779,"byte_end":378865,"line_start":413,"line_end":413,"column_start":5,"column_end":91}},{"value":"/ [`UtcOffset`], return an [`OffsetDateTime`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":378870,"byte_end":378918,"line_start":414,"line_end":414,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":378923,"byte_end":378926,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":378931,"byte_end":378942,"line_start":416,"line_end":416,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, offset};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":378947,"byte_end":378990,"line_start":417,"line_end":417,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":378995,"byte_end":379010,"line_start":418,"line_end":418,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":379015,"byte_end":379049,"line_start":419,"line_end":419,"column_start":5,"column_end":39}},{"value":"/         .assume_offset(offset!(UTC))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":379054,"byte_end":379094,"line_start":420,"line_end":420,"column_start":5,"column_end":45}},{"value":"/         .unix_timestamp(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":379099,"byte_end":379129,"line_start":421,"line_end":421,"column_start":5,"column_end":35}},{"value":"/     1_546_300_800,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":379134,"byte_end":379156,"line_start":422,"line_end":422,"column_start":5,"column_end":27}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":379161,"byte_end":379167,"line_start":423,"line_end":423,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":379172,"byte_end":379187,"line_start":424,"line_end":424,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":379192,"byte_end":379226,"line_start":425,"line_end":425,"column_start":5,"column_end":39}},{"value":"/         .assume_offset(offset!(-1))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":379231,"byte_end":379270,"line_start":426,"line_end":426,"column_start":5,"column_end":44}},{"value":"/         .unix_timestamp(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":379275,"byte_end":379305,"line_start":427,"line_end":427,"column_start":5,"column_end":35}},{"value":"/     1_546_304_400,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":379310,"byte_end":379332,"line_start":428,"line_end":428,"column_start":5,"column_end":27}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":379337,"byte_end":379343,"line_start":429,"line_end":429,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":379348,"byte_end":379355,"line_start":430,"line_end":430,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2426},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":379868,"byte_end":379878,"line_start":448,"line_end":448,"column_start":18,"column_end":28},"name":"assume_utc","qualname":"<PrimitiveDateTime>::assume_utc","value":"const fn assume_utc(Self) -> OffsetDateTime","parent":null,"children":[],"decl_id":null,"docs":" Assuming that the existing `PrimitiveDateTime` represents a moment in UTC, return an\n [`OffsetDateTime`].","sig":null,"attributes":[{"value":"/ Assuming that the existing `PrimitiveDateTime` represents a moment in UTC, return an","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":379532,"byte_end":379620,"line_start":438,"line_end":438,"column_start":5,"column_end":93}},{"value":"/ [`OffsetDateTime`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":379625,"byte_end":379648,"line_start":439,"line_end":439,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":379653,"byte_end":379656,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":379661,"byte_end":379672,"line_start":441,"line_end":441,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":379677,"byte_end":379710,"line_start":442,"line_end":442,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":379715,"byte_end":379730,"line_start":443,"line_end":443,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00).assume_utc().unix_timestamp(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":379735,"byte_end":379800,"line_start":444,"line_end":444,"column_start":5,"column_end":70}},{"value":"/     1_546_300_800,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":379805,"byte_end":379827,"line_start":445,"line_end":445,"column_start":5,"column_end":27}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":379832,"byte_end":379838,"line_start":446,"line_end":446,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":379843,"byte_end":379850,"line_start":447,"line_end":447,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2427},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":380612,"byte_end":380623,"line_start":470,"line_end":470,"column_start":18,"column_end":29},"name":"checked_add","qualname":"<PrimitiveDateTime>::checked_add","value":"const fn checked_add(Self, Duration) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self + duration`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self + duration`, returning `None` if an overflow occurred.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":380024,"byte_end":380097,"line_start":454,"line_end":454,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":380102,"byte_end":380105,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":380110,"byte_end":380117,"line_start":456,"line_end":456,"column_start":5,"column_end":12}},{"value":"/ # use time::{Date, ext::NumericalDuration};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":380122,"byte_end":380169,"line_start":457,"line_end":457,"column_start":5,"column_end":52}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":380174,"byte_end":380207,"line_start":458,"line_end":458,"column_start":5,"column_end":38}},{"value":"/ let datetime = Date::MIN.midnight();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":380212,"byte_end":380252,"line_start":459,"line_end":459,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(datetime.checked_add((-2).days()), None);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":380257,"byte_end":380313,"line_start":460,"line_end":460,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":380318,"byte_end":380321,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ let datetime = Date::MAX.midnight();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":380326,"byte_end":380366,"line_start":462,"line_end":462,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(datetime.checked_add(1.days()), None);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":380371,"byte_end":380424,"line_start":463,"line_end":463,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":380429,"byte_end":380432,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":380437,"byte_end":380452,"line_start":465,"line_end":465,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019 - 11 - 25 15:30).checked_add(27.hours()),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":380457,"byte_end":380521,"line_start":466,"line_end":466,"column_start":5,"column_end":69}},{"value":"/     Some(datetime!(2019 - 11 - 26 18:30))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":380526,"byte_end":380571,"line_start":467,"line_end":467,"column_start":5,"column_end":50}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":380576,"byte_end":380582,"line_start":468,"line_end":468,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":380587,"byte_end":380594,"line_start":469,"line_end":469,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2428},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":381733,"byte_end":381744,"line_start":500,"line_end":500,"column_start":18,"column_end":29},"name":"checked_sub","qualname":"<PrimitiveDateTime>::checked_sub","value":"const fn checked_sub(Self, Duration) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self - duration`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self - duration`, returning `None` if an overflow occurred.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":381145,"byte_end":381218,"line_start":484,"line_end":484,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":381223,"byte_end":381226,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":381231,"byte_end":381238,"line_start":486,"line_end":486,"column_start":5,"column_end":12}},{"value":"/ # use time::{Date, ext::NumericalDuration};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":381243,"byte_end":381290,"line_start":487,"line_end":487,"column_start":5,"column_end":52}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":381295,"byte_end":381328,"line_start":488,"line_end":488,"column_start":5,"column_end":38}},{"value":"/ let datetime = Date::MIN.midnight();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":381333,"byte_end":381373,"line_start":489,"line_end":489,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(datetime.checked_sub(2.days()), None);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":381378,"byte_end":381431,"line_start":490,"line_end":490,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":381436,"byte_end":381439,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ let datetime = Date::MAX.midnight();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":381444,"byte_end":381484,"line_start":492,"line_end":492,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(datetime.checked_sub((-1).days()), None);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":381489,"byte_end":381545,"line_start":493,"line_end":493,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":381550,"byte_end":381553,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":381558,"byte_end":381573,"line_start":495,"line_end":495,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019 - 11 - 25 15:30).checked_sub(27.hours()),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":381578,"byte_end":381642,"line_start":496,"line_end":496,"column_start":5,"column_end":69}},{"value":"/     Some(datetime!(2019 - 11 - 24 12:30))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":381647,"byte_end":381692,"line_start":497,"line_end":497,"column_start":5,"column_end":50}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":381697,"byte_end":381703,"line_start":498,"line_end":498,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":381708,"byte_end":381715,"line_start":499,"line_end":499,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2429},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":382974,"byte_end":382988,"line_start":536,"line_end":536,"column_start":18,"column_end":32},"name":"saturating_add","qualname":"<PrimitiveDateTime>::saturating_add","value":"const fn saturating_add(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self + duration`, saturating value on overflow.","sig":null,"attributes":[{"value":"/ Computes `self + duration`, saturating value on overflow.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":382340,"byte_end":382401,"line_start":516,"line_end":516,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":382406,"byte_end":382409,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":382414,"byte_end":382421,"line_start":518,"line_end":518,"column_start":5,"column_end":12}},{"value":"/ # use time::{PrimitiveDateTime, ext::NumericalDuration};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":382426,"byte_end":382486,"line_start":519,"line_end":519,"column_start":5,"column_end":65}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":382491,"byte_end":382524,"line_start":520,"line_end":520,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":382529,"byte_end":382544,"line_start":521,"line_end":521,"column_start":5,"column_end":20}},{"value":"/     PrimitiveDateTime::MIN.saturating_add((-2).days()),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":382549,"byte_end":382608,"line_start":522,"line_end":522,"column_start":5,"column_end":64}},{"value":"/     PrimitiveDateTime::MIN","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":382613,"byte_end":382643,"line_start":523,"line_end":523,"column_start":5,"column_end":35}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":382648,"byte_end":382654,"line_start":524,"line_end":524,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":382659,"byte_end":382662,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":382667,"byte_end":382682,"line_start":526,"line_end":526,"column_start":5,"column_end":20}},{"value":"/     PrimitiveDateTime::MAX.saturating_add(2.days()),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":382687,"byte_end":382743,"line_start":527,"line_end":527,"column_start":5,"column_end":61}},{"value":"/     PrimitiveDateTime::MAX","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":382748,"byte_end":382778,"line_start":528,"line_end":528,"column_start":5,"column_end":35}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":382783,"byte_end":382789,"line_start":529,"line_end":529,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":382794,"byte_end":382797,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":382802,"byte_end":382817,"line_start":531,"line_end":531,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019 - 11 - 25 15:30).saturating_add(27.hours()),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":382822,"byte_end":382889,"line_start":532,"line_end":532,"column_start":5,"column_end":72}},{"value":"/     datetime!(2019 - 11 - 26 18:30)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":382894,"byte_end":382933,"line_start":533,"line_end":533,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":382938,"byte_end":382944,"line_start":534,"line_end":534,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":382949,"byte_end":382956,"line_start":535,"line_end":535,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2430},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":383866,"byte_end":383880,"line_start":566,"line_end":566,"column_start":18,"column_end":32},"name":"saturating_sub","qualname":"<PrimitiveDateTime>::saturating_sub","value":"const fn saturating_sub(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self - duration`, saturating value on overflow.","sig":null,"attributes":[{"value":"/ Computes `self - duration`, saturating value on overflow.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":383232,"byte_end":383293,"line_start":546,"line_end":546,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":383298,"byte_end":383301,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":383306,"byte_end":383313,"line_start":548,"line_end":548,"column_start":5,"column_end":12}},{"value":"/ # use time::{PrimitiveDateTime, ext::NumericalDuration};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":383318,"byte_end":383378,"line_start":549,"line_end":549,"column_start":5,"column_end":65}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":383383,"byte_end":383416,"line_start":550,"line_end":550,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":383421,"byte_end":383436,"line_start":551,"line_end":551,"column_start":5,"column_end":20}},{"value":"/     PrimitiveDateTime::MIN.saturating_sub(2.days()),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":383441,"byte_end":383497,"line_start":552,"line_end":552,"column_start":5,"column_end":61}},{"value":"/     PrimitiveDateTime::MIN","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":383502,"byte_end":383532,"line_start":553,"line_end":553,"column_start":5,"column_end":35}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":383537,"byte_end":383543,"line_start":554,"line_end":554,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":383548,"byte_end":383551,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":383556,"byte_end":383571,"line_start":556,"line_end":556,"column_start":5,"column_end":20}},{"value":"/     PrimitiveDateTime::MAX.saturating_sub((-2).days()),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":383576,"byte_end":383635,"line_start":557,"line_end":557,"column_start":5,"column_end":64}},{"value":"/     PrimitiveDateTime::MAX","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":383640,"byte_end":383670,"line_start":558,"line_end":558,"column_start":5,"column_end":35}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":383675,"byte_end":383681,"line_start":559,"line_end":559,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":383686,"byte_end":383689,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":383694,"byte_end":383709,"line_start":561,"line_end":561,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019 - 11 - 25 15:30).saturating_sub(27.hours()),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":383714,"byte_end":383781,"line_start":562,"line_end":562,"column_start":5,"column_end":72}},{"value":"/     datetime!(2019 - 11 - 24 12:30)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":383786,"byte_end":383825,"line_start":563,"line_end":563,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":383830,"byte_end":383836,"line_start":564,"line_end":564,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":383841,"byte_end":383848,"line_start":565,"line_end":565,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2432},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":384633,"byte_end":384645,"line_start":591,"line_end":591,"column_start":18,"column_end":30},"name":"replace_time","qualname":"<PrimitiveDateTime>::replace_time","value":"const fn replace_time(Self, Time) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Replace the time, preserving the date.","sig":null,"attributes":[{"value":"/ Replace the time, preserving the date.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":384272,"byte_end":384314,"line_start":581,"line_end":581,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":384319,"byte_end":384322,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":384327,"byte_end":384338,"line_start":583,"line_end":583,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, time};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":384343,"byte_end":384384,"line_start":584,"line_end":584,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":384389,"byte_end":384404,"line_start":585,"line_end":585,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 17:00).replace_time(time!(5:00)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":384409,"byte_end":384471,"line_start":586,"line_end":586,"column_start":5,"column_end":67}},{"value":"/     datetime!(2020-01-01 5:00)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":384476,"byte_end":384510,"line_start":587,"line_end":587,"column_start":5,"column_end":39}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":384515,"byte_end":384521,"line_start":588,"line_end":588,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":384526,"byte_end":384533,"line_start":589,"line_end":589,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":384538,"byte_end":384615,"line_start":590,"line_end":590,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2433},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":385087,"byte_end":385099,"line_start":605,"line_end":605,"column_start":18,"column_end":30},"name":"replace_date","qualname":"<PrimitiveDateTime>::replace_date","value":"const fn replace_date(Self, Date) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Replace the date, preserving the time.","sig":null,"attributes":[{"value":"/ Replace the date, preserving the time.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":384719,"byte_end":384761,"line_start":595,"line_end":595,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":384766,"byte_end":384769,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":384774,"byte_end":384785,"line_start":597,"line_end":597,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::{datetime, date};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":384790,"byte_end":384831,"line_start":598,"line_end":598,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":384836,"byte_end":384851,"line_start":599,"line_end":599,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 12:00).replace_date(date!(2020-01-30)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":384856,"byte_end":384924,"line_start":600,"line_end":600,"column_start":5,"column_end":73}},{"value":"/     datetime!(2020-01-30 12:00)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":384929,"byte_end":384964,"line_start":601,"line_end":601,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":384969,"byte_end":384975,"line_start":602,"line_end":602,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":384980,"byte_end":384987,"line_start":603,"line_end":603,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":384992,"byte_end":385069,"line_start":604,"line_end":604,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2434},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":385796,"byte_end":385808,"line_start":621,"line_end":621,"column_start":18,"column_end":30},"name":"replace_year","qualname":"<PrimitiveDateTime>::replace_year","value":"const fn replace_year(Self, i32) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the year. The month and day will be unchanged.","sig":null,"attributes":[{"value":"/ Replace the year. The month and day will be unchanged.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":385173,"byte_end":385231,"line_start":609,"line_end":609,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":385236,"byte_end":385239,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":385244,"byte_end":385255,"line_start":611,"line_end":611,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":385260,"byte_end":385293,"line_start":612,"line_end":612,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":385298,"byte_end":385313,"line_start":613,"line_end":613,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 12:00).replace_year(2019),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":385318,"byte_end":385377,"line_start":614,"line_end":614,"column_start":5,"column_end":64}},{"value":"/     Ok(datetime!(2019 - 02 - 18 12:00))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":385382,"byte_end":385425,"line_start":615,"line_end":615,"column_start":5,"column_end":48}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":385430,"byte_end":385436,"line_start":616,"line_end":616,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 12:00).replace_year(-1_000_000_000).is_err()); // -1_000_000_000 isn't a valid year","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":385441,"byte_end":385561,"line_start":617,"line_end":617,"column_start":5,"column_end":125}},{"value":"/ assert!(datetime!(2022 - 02 - 18 12:00).replace_year(1_000_000_000).is_err()); // 1_000_000_000 isn't a valid year","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":385566,"byte_end":385684,"line_start":618,"line_end":618,"column_start":5,"column_end":123}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":385689,"byte_end":385696,"line_start":619,"line_end":619,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":385701,"byte_end":385778,"line_start":620,"line_end":620,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2435},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":386467,"byte_end":386480,"line_start":637,"line_end":637,"column_start":18,"column_end":31},"name":"replace_month","qualname":"<PrimitiveDateTime>::replace_month","value":"const fn replace_month(Self, Month) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the month of the year.","sig":null,"attributes":[{"value":"/ Replace the month of the year.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":385952,"byte_end":385986,"line_start":625,"line_end":625,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":385991,"byte_end":385994,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":385999,"byte_end":386010,"line_start":627,"line_end":627,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":386015,"byte_end":386048,"line_start":628,"line_end":628,"column_start":5,"column_end":38}},{"value":"/ # use time::Month;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":386053,"byte_end":386075,"line_start":629,"line_end":629,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":386080,"byte_end":386095,"line_start":630,"line_end":630,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 12:00).replace_month(Month::January),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":386100,"byte_end":386170,"line_start":631,"line_end":631,"column_start":5,"column_end":75}},{"value":"/     Ok(datetime!(2022 - 01 - 18 12:00))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":386175,"byte_end":386218,"line_start":632,"line_end":632,"column_start":5,"column_end":48}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":386223,"byte_end":386229,"line_start":633,"line_end":633,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 01 - 30 12:00).replace_month(Month::February).is_err()); // 30 isn't a valid day in February","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":386234,"byte_end":386355,"line_start":634,"line_end":634,"column_start":5,"column_end":126}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":386360,"byte_end":386367,"line_start":635,"line_end":635,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":386372,"byte_end":386449,"line_start":636,"line_end":636,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2436},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":387184,"byte_end":387195,"line_start":653,"line_end":653,"column_start":18,"column_end":29},"name":"replace_day","qualname":"<PrimitiveDateTime>::replace_day","value":"const fn replace_day(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the day of the month.","sig":null,"attributes":[{"value":"/ Replace the day of the month.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":386629,"byte_end":386662,"line_start":641,"line_end":641,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":386667,"byte_end":386670,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":386675,"byte_end":386686,"line_start":643,"line_end":643,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":386691,"byte_end":386724,"line_start":644,"line_end":644,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":386729,"byte_end":386744,"line_start":645,"line_end":645,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 12:00).replace_day(1),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":386749,"byte_end":386804,"line_start":646,"line_end":646,"column_start":5,"column_end":60}},{"value":"/     Ok(datetime!(2022 - 02 - 01 12:00))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":386809,"byte_end":386852,"line_start":647,"line_end":647,"column_start":5,"column_end":48}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":386857,"byte_end":386863,"line_start":648,"line_end":648,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 12:00).replace_day(0).is_err()); // 00 isn't a valid day","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":386868,"byte_end":386961,"line_start":649,"line_end":649,"column_start":5,"column_end":98}},{"value":"/ assert!(datetime!(2022 - 02 - 18 12:00).replace_day(30).is_err()); // 30 isn't a valid day in February","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":386966,"byte_end":387072,"line_start":650,"line_end":650,"column_start":5,"column_end":111}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":387077,"byte_end":387084,"line_start":651,"line_end":651,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":387089,"byte_end":387166,"line_start":652,"line_end":652,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2437},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":387822,"byte_end":387834,"line_start":668,"line_end":668,"column_start":18,"column_end":30},"name":"replace_hour","qualname":"<PrimitiveDateTime>::replace_hour","value":"const fn replace_hour(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the clock hour.","sig":null,"attributes":[{"value":"/ Replace the clock hour.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":387335,"byte_end":387362,"line_start":657,"line_end":657,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":387367,"byte_end":387370,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":387375,"byte_end":387386,"line_start":659,"line_end":659,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":387391,"byte_end":387424,"line_start":660,"line_end":660,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":387429,"byte_end":387444,"line_start":661,"line_end":661,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_hour(7),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":387449,"byte_end":387520,"line_start":662,"line_end":662,"column_start":5,"column_end":76}},{"value":"/     Ok(datetime!(2022 - 02 - 18 07:02:03.004_005_006))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":387525,"byte_end":387583,"line_start":663,"line_end":663,"column_start":5,"column_end":63}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":387588,"byte_end":387594,"line_start":664,"line_end":664,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_hour(24).is_err()); // 24 isn't a valid hour","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":387599,"byte_end":387710,"line_start":665,"line_end":665,"column_start":5,"column_end":116}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":387715,"byte_end":387722,"line_start":666,"line_end":666,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":387727,"byte_end":387804,"line_start":667,"line_end":667,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2438},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":388511,"byte_end":388525,"line_start":685,"line_end":685,"column_start":18,"column_end":32},"name":"replace_minute","qualname":"<PrimitiveDateTime>::replace_minute","value":"const fn replace_minute(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the minutes within the hour.","sig":null,"attributes":[{"value":"/ Replace the minutes within the hour.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":388005,"byte_end":388045,"line_start":674,"line_end":674,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":388050,"byte_end":388053,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":388058,"byte_end":388069,"line_start":676,"line_end":676,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":388074,"byte_end":388107,"line_start":677,"line_end":677,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":388112,"byte_end":388127,"line_start":678,"line_end":678,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_minute(7),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":388132,"byte_end":388205,"line_start":679,"line_end":679,"column_start":5,"column_end":78}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:07:03.004_005_006))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":388210,"byte_end":388268,"line_start":680,"line_end":680,"column_start":5,"column_end":63}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":388273,"byte_end":388279,"line_start":681,"line_end":681,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_minute(60).is_err()); // 60 isn't a valid minute","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":388284,"byte_end":388399,"line_start":682,"line_end":682,"column_start":5,"column_end":120}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":388404,"byte_end":388411,"line_start":683,"line_end":683,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":388416,"byte_end":388493,"line_start":684,"line_end":684,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2439},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":389210,"byte_end":389224,"line_start":702,"line_end":702,"column_start":18,"column_end":32},"name":"replace_second","qualname":"<PrimitiveDateTime>::replace_second","value":"const fn replace_second(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the seconds within the minute.","sig":null,"attributes":[{"value":"/ Replace the seconds within the minute.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":388702,"byte_end":388744,"line_start":691,"line_end":691,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":388749,"byte_end":388752,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":388757,"byte_end":388768,"line_start":693,"line_end":693,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":388773,"byte_end":388806,"line_start":694,"line_end":694,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":388811,"byte_end":388826,"line_start":695,"line_end":695,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_second(7),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":388831,"byte_end":388904,"line_start":696,"line_end":696,"column_start":5,"column_end":78}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:02:07.004_005_006))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":388909,"byte_end":388967,"line_start":697,"line_end":697,"column_start":5,"column_end":63}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":388972,"byte_end":388978,"line_start":698,"line_end":698,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_second(60).is_err()); // 60 isn't a valid second","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":388983,"byte_end":389098,"line_start":699,"line_end":699,"column_start":5,"column_end":120}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":389103,"byte_end":389110,"line_start":700,"line_end":700,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":389115,"byte_end":389192,"line_start":701,"line_end":701,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2440},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":389927,"byte_end":389946,"line_start":719,"line_end":719,"column_start":18,"column_end":37},"name":"replace_millisecond","qualname":"<PrimitiveDateTime>::replace_millisecond","value":"const fn replace_millisecond(Self, u16) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the milliseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the milliseconds within the second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":389401,"byte_end":389448,"line_start":708,"line_end":708,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":389453,"byte_end":389456,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":389461,"byte_end":389472,"line_start":710,"line_end":710,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":389477,"byte_end":389510,"line_start":711,"line_end":711,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":389515,"byte_end":389530,"line_start":712,"line_end":712,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_millisecond(7),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":389535,"byte_end":389613,"line_start":713,"line_end":713,"column_start":5,"column_end":83}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:02:03.007))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":389618,"byte_end":389668,"line_start":714,"line_end":714,"column_start":5,"column_end":55}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":389673,"byte_end":389679,"line_start":715,"line_end":715,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_millisecond(1_000).is_err()); // 1_000 isn't a valid millisecond","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":389684,"byte_end":389815,"line_start":716,"line_end":716,"column_start":5,"column_end":136}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":389820,"byte_end":389827,"line_start":717,"line_end":717,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":389832,"byte_end":389909,"line_start":718,"line_end":718,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2441},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":390704,"byte_end":390723,"line_start":739,"line_end":739,"column_start":18,"column_end":37},"name":"replace_microsecond","qualname":"<PrimitiveDateTime>::replace_microsecond","value":"const fn replace_microsecond(Self, u32) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the microseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the microseconds within the second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":390162,"byte_end":390209,"line_start":728,"line_end":728,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":390214,"byte_end":390217,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":390222,"byte_end":390233,"line_start":730,"line_end":730,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":390238,"byte_end":390271,"line_start":731,"line_end":731,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":390276,"byte_end":390291,"line_start":732,"line_end":732,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_microsecond(7_008),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":390296,"byte_end":390378,"line_start":733,"line_end":733,"column_start":5,"column_end":87}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:02:03.007_008))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":390383,"byte_end":390437,"line_start":734,"line_end":734,"column_start":5,"column_end":59}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":390442,"byte_end":390448,"line_start":735,"line_end":735,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_microsecond(1_000_000).is_err()); // 1_000_000 isn't a valid microsecond","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":390453,"byte_end":390592,"line_start":736,"line_end":736,"column_start":5,"column_end":144}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":390597,"byte_end":390604,"line_start":737,"line_end":737,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":390609,"byte_end":390686,"line_start":738,"line_end":738,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2442},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":391493,"byte_end":391511,"line_start":759,"line_end":759,"column_start":18,"column_end":36},"name":"replace_nanosecond","qualname":"<PrimitiveDateTime>::replace_nanosecond","value":"const fn replace_nanosecond(Self, u32) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the nanoseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the nanoseconds within the second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":390939,"byte_end":390985,"line_start":748,"line_end":748,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":390990,"byte_end":390993,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":390998,"byte_end":391009,"line_start":750,"line_end":750,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::datetime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":391014,"byte_end":391047,"line_start":751,"line_end":751,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":391052,"byte_end":391067,"line_start":752,"line_end":752,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_nanosecond(7_008_009),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":391072,"byte_end":391157,"line_start":753,"line_end":753,"column_start":5,"column_end":90}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:02:03.007_008_009))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":391162,"byte_end":391220,"line_start":754,"line_end":754,"column_start":5,"column_end":63}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":391225,"byte_end":391231,"line_start":755,"line_end":755,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_nanosecond(1_000_000_000).is_err()); // 1_000_000_000 isn't a valid nanosecond","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":391236,"byte_end":391381,"line_start":756,"line_end":756,"column_start":5,"column_end":150}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":391386,"byte_end":391393,"line_start":757,"line_end":757,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":391398,"byte_end":391475,"line_start":758,"line_end":758,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2444},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":391938,"byte_end":391949,"line_start":772,"line_end":772,"column_start":12,"column_end":23},"name":"format_into","qualname":"<PrimitiveDateTime>::format_into","value":"fn format_into<impl io::Write,\nimpl Formattable + ?Sized>(Self, &mut impl io::Write,\n&impl Formattable + ?Sized) -> Result<usize, error::Format> where\nimpl io::Write: io::Write, impl Formattable + ?Sized: Formattable + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Format the `PrimitiveDateTime` using the provided [format\n description](crate::format_description).\n","sig":null,"attributes":[{"value":"/ Format the `PrimitiveDateTime` using the provided [format","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":391816,"byte_end":391877,"line_start":770,"line_end":770,"column_start":5,"column_end":66}},{"value":"/ description](crate::format_description).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":391882,"byte_end":391926,"line_start":771,"line_end":771,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2447},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":392651,"byte_end":392657,"line_start":792,"line_end":792,"column_start":12,"column_end":18},"name":"format","qualname":"<PrimitiveDateTime>::format","value":"fn format<impl Formattable + ?Sized>(Self, &impl Formattable + ?Sized)\n-> Result<String, error::Format> where\nimpl Formattable + ?Sized: Formattable + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Format the `PrimitiveDateTime` using the provided [format\n description](crate::format_description).","sig":null,"attributes":[{"value":"/ Format the `PrimitiveDateTime` using the provided [format","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":392174,"byte_end":392235,"line_start":780,"line_end":780,"column_start":5,"column_end":66}},{"value":"/ description](crate::format_description).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":392240,"byte_end":392284,"line_start":781,"line_end":781,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":392289,"byte_end":392292,"line_start":782,"line_end":782,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":392297,"byte_end":392308,"line_start":783,"line_end":783,"column_start":5,"column_end":16}},{"value":"/ # use time::{format_description, macros::datetime};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":392313,"byte_end":392368,"line_start":784,"line_end":784,"column_start":5,"column_end":60}},{"value":"/ let format = format_description::parse(\"[year]-[month]-[day] [hour]:[minute]:[second]\")?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":392373,"byte_end":392466,"line_start":785,"line_end":785,"column_start":5,"column_end":98}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":392471,"byte_end":392486,"line_start":786,"line_end":786,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-02 03:04:05).format(&format)?,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":392491,"byte_end":392547,"line_start":787,"line_end":787,"column_start":5,"column_end":61}},{"value":"/     \"2020-01-02 03:04:05\"","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":392552,"byte_end":392581,"line_start":788,"line_end":788,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":392586,"byte_end":392592,"line_start":789,"line_end":789,"column_start":5,"column_end":11}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":392597,"byte_end":392627,"line_start":790,"line_end":790,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":392632,"byte_end":392639,"line_start":791,"line_end":791,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2450},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":393392,"byte_end":393397,"line_start":811,"line_end":811,"column_start":12,"column_end":17},"name":"parse","qualname":"<PrimitiveDateTime>::parse","value":"fn parse<impl Parsable + ?Sized>(&str, &impl Parsable + ?Sized)\n-> Result<Self, error::Parse> where impl Parsable + ?Sized: Parsable + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Parse a `PrimitiveDateTime` from the input using the provided [format\n description](crate::format_description).","sig":null,"attributes":[{"value":"/ Parse a `PrimitiveDateTime` from the input using the provided [format","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":392865,"byte_end":392938,"line_start":799,"line_end":799,"column_start":5,"column_end":78}},{"value":"/ description](crate::format_description).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":392943,"byte_end":392987,"line_start":800,"line_end":800,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":392992,"byte_end":392995,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":393000,"byte_end":393011,"line_start":802,"line_end":802,"column_start":5,"column_end":16}},{"value":"/ # use time::{format_description, macros::datetime, PrimitiveDateTime};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":393016,"byte_end":393090,"line_start":803,"line_end":803,"column_start":5,"column_end":79}},{"value":"/ let format = format_description::parse(\"[year]-[month]-[day] [hour]:[minute]:[second]\")?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":393095,"byte_end":393188,"line_start":804,"line_end":804,"column_start":5,"column_end":98}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":393193,"byte_end":393208,"line_start":805,"line_end":805,"column_start":5,"column_end":20}},{"value":"/     PrimitiveDateTime::parse(\"2020-01-02 03:04:05\", &format)?,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":393213,"byte_end":393279,"line_start":806,"line_end":806,"column_start":5,"column_end":71}},{"value":"/     datetime!(2020-01-02 03:04:05)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":393284,"byte_end":393322,"line_start":807,"line_end":807,"column_start":5,"column_end":43}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":393327,"byte_end":393333,"line_start":808,"line_end":808,"column_start":5,"column_end":11}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":393338,"byte_end":393368,"line_start":809,"line_end":809,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":393373,"byte_end":393380,"line_start":810,"line_end":810,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2453},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":393618,"byte_end":393621,"line_start":820,"line_end":820,"column_start":8,"column_end":11},"name":"fmt","qualname":"<PrimitiveDateTime as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10117},"children":[],"decl_id":{"krate":2,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2456},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":393864,"byte_end":393867,"line_start":830,"line_end":830,"column_start":8,"column_end":11},"name":"add","qualname":"<PrimitiveDateTime as std::ops::Add>::add","value":"fn add(Self, Duration) -> Self::Output","parent":{"krate":2,"index":3247},"children":[],"decl_id":{"krate":2,"index":3250},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2459},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":394089,"byte_end":394092,"line_start":839,"line_end":839,"column_start":8,"column_end":11},"name":"add","qualname":"<PrimitiveDateTime as std::ops::Add>::add","value":"fn add(Self, StdDuration) -> Self::Output","parent":{"krate":2,"index":3247},"children":[],"decl_id":{"krate":2,"index":3250},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2462},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":394644,"byte_end":394647,"line_start":860,"line_end":860,"column_start":8,"column_end":11},"name":"sub","qualname":"<PrimitiveDateTime as std::ops::Sub>::sub","value":"fn sub(Self, Duration) -> Self::Output","parent":{"krate":2,"index":3252},"children":[],"decl_id":{"krate":2,"index":3255},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2465},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":394869,"byte_end":394872,"line_start":869,"line_end":869,"column_start":8,"column_end":11},"name":"sub","qualname":"<PrimitiveDateTime as std::ops::Sub>::sub","value":"fn sub(Self, StdDuration) -> Self::Output","parent":{"krate":2,"index":3252},"children":[],"decl_id":{"krate":2,"index":3255},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2468},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":395430,"byte_end":395433,"line_start":890,"line_end":890,"column_start":8,"column_end":11},"name":"sub","qualname":"<PrimitiveDateTime as std::ops::Sub>::sub","value":"fn sub(Self, Self) -> Self::Output","parent":{"krate":2,"index":3252},"children":[],"decl_id":{"krate":2,"index":3255},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3983},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":396856,"byte_end":396860,"line_start":32,"line_end":32,"column_start":12,"column_end":16},"name":"Time","qualname":"::time::Time","value":"Time {  }","parent":null,"children":[{"krate":0,"index":3984},{"krate":0,"index":3985},{"krate":0,"index":3986},{"krate":0,"index":3987},{"krate":0,"index":3988}],"decl_id":null,"docs":" The clock time within a given date. Nanosecond precision.","sig":null,"attributes":[{"value":"/ The clock time within a given date. Nanosecond precision.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":396499,"byte_end":396560,"line_start":25,"line_end":25,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":396561,"byte_end":396564,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ All minutes are assumed to have exactly 60 seconds; no attempt is made to handle leap seconds","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":396565,"byte_end":396662,"line_start":27,"line_end":27,"column_start":1,"column_end":98}},{"value":"/ (either positive or negative).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":396663,"byte_end":396697,"line_start":28,"line_end":28,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":396698,"byte_end":396701,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ When comparing two `Time`s, they are assumed to be in the same calendar date.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":396702,"byte_end":396783,"line_start":30,"line_end":30,"column_start":1,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2504},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":397249,"byte_end":397252,"line_start":46,"line_end":46,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Time as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2506},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":397746,"byte_end":397754,"line_start":63,"line_end":63,"column_start":15,"column_end":23},"name":"MIDNIGHT","qualname":"::time::Time::MIDNIGHT","value":"Self","parent":{"krate":0,"index":2505},"children":[],"decl_id":null,"docs":" Create a `Time` that is exactly midnight.","sig":null,"attributes":[{"value":"/ Create a `Time` that is exactly midnight.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":397559,"byte_end":397604,"line_start":57,"line_end":57,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":397609,"byte_end":397612,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":397617,"byte_end":397628,"line_start":59,"line_end":59,"column_start":5,"column_end":16}},{"value":"/ # use time::{Time, macros::time};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":397633,"byte_end":397670,"line_start":60,"line_end":60,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(Time::MIDNIGHT, time!(0:00));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":397675,"byte_end":397719,"line_start":61,"line_end":61,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":397724,"byte_end":397731,"line_start":62,"line_end":62,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2509},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":398283,"byte_end":398309,"line_start":78,"line_end":78,"column_start":18,"column_end":44},"name":"__from_hms_nanos_unchecked","qualname":"<Time>::__from_hms_nanos_unchecked","value":"const fn __from_hms_nanos_unchecked(u8, u8, u8, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `Time` from its components.\n","sig":null,"attributes":[{"value":"/ Create a `Time` from its components.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":398206,"byte_end":398246,"line_start":76,"line_end":76,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2510},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":399221,"byte_end":399229,"line_start":111,"line_end":111,"column_start":18,"column_end":26},"name":"from_hms","qualname":"<Time>::from_hms","value":"const fn from_hms(u8, u8, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a `Time` from the hour, minute, and second.","sig":null,"attributes":[{"value":"/ Attempt to create a `Time` from the hour, minute, and second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":398726,"byte_end":398791,"line_start":98,"line_end":98,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":398796,"byte_end":398799,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":398804,"byte_end":398815,"line_start":100,"line_end":100,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":398820,"byte_end":398841,"line_start":101,"line_end":101,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms(1, 2, 3).is_ok());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":398846,"byte_end":398891,"line_start":102,"line_end":102,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":398896,"byte_end":398903,"line_start":103,"line_end":103,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":398908,"byte_end":398911,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":398916,"byte_end":398927,"line_start":105,"line_end":105,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":398932,"byte_end":398953,"line_start":106,"line_end":106,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms(24, 0, 0).is_err()); // 24 isn't a valid hour.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":398958,"byte_end":399031,"line_start":107,"line_end":107,"column_start":5,"column_end":78}},{"value":"/ assert!(Time::from_hms(0, 60, 0).is_err()); // 60 isn't a valid minute.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":399036,"byte_end":399111,"line_start":108,"line_end":108,"column_start":5,"column_end":80}},{"value":"/ assert!(Time::from_hms(0, 0, 60).is_err()); // 60 isn't a valid second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":399116,"byte_end":399191,"line_start":109,"line_end":109,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":399196,"byte_end":399203,"line_start":110,"line_end":110,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2511},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":400181,"byte_end":400195,"line_start":132,"line_end":132,"column_start":18,"column_end":32},"name":"from_hms_milli","qualname":"<Time>::from_hms_milli","value":"const fn from_hms_milli(u8, u8, u8, u16)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a `Time` from the hour, minute, second, and millisecond.","sig":null,"attributes":[{"value":"/ Attempt to create a `Time` from the hour, minute, second, and millisecond.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":399537,"byte_end":399615,"line_start":118,"line_end":118,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":399620,"byte_end":399623,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":399628,"byte_end":399639,"line_start":120,"line_end":120,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":399644,"byte_end":399665,"line_start":121,"line_end":121,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms_milli(1, 2, 3, 4).is_ok());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":399670,"byte_end":399724,"line_start":122,"line_end":122,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":399729,"byte_end":399736,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":399741,"byte_end":399744,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":399749,"byte_end":399760,"line_start":125,"line_end":125,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":399765,"byte_end":399786,"line_start":126,"line_end":126,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms_milli(24, 0, 0, 0).is_err()); // 24 isn't a valid hour.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":399791,"byte_end":399873,"line_start":127,"line_end":127,"column_start":5,"column_end":87}},{"value":"/ assert!(Time::from_hms_milli(0, 60, 0, 0).is_err()); // 60 isn't a valid minute.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":399878,"byte_end":399962,"line_start":128,"line_end":128,"column_start":5,"column_end":89}},{"value":"/ assert!(Time::from_hms_milli(0, 0, 60, 0).is_err()); // 60 isn't a valid second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":399967,"byte_end":400051,"line_start":129,"line_end":129,"column_start":5,"column_end":89}},{"value":"/ assert!(Time::from_hms_milli(0, 0, 0, 1_000).is_err()); // 1_000 isn't a valid millisecond.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":400056,"byte_end":400151,"line_start":130,"line_end":130,"column_start":5,"column_end":100}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":400156,"byte_end":400163,"line_start":131,"line_end":131,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2512},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":401357,"byte_end":401371,"line_start":164,"line_end":164,"column_start":18,"column_end":32},"name":"from_hms_micro","qualname":"<Time>::from_hms_micro","value":"const fn from_hms_micro(u8, u8, u8, u32)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a `Time` from the hour, minute, second, and microsecond.","sig":null,"attributes":[{"value":"/ Attempt to create a `Time` from the hour, minute, second, and microsecond.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":400705,"byte_end":400783,"line_start":150,"line_end":150,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":400788,"byte_end":400791,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":400796,"byte_end":400807,"line_start":152,"line_end":152,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":400812,"byte_end":400833,"line_start":153,"line_end":153,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms_micro(1, 2, 3, 4).is_ok());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":400838,"byte_end":400892,"line_start":154,"line_end":154,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":400897,"byte_end":400904,"line_start":155,"line_end":155,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":400909,"byte_end":400912,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":400917,"byte_end":400928,"line_start":157,"line_end":157,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":400933,"byte_end":400954,"line_start":158,"line_end":158,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms_micro(24, 0, 0, 0).is_err()); // 24 isn't a valid hour.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":400959,"byte_end":401041,"line_start":159,"line_end":159,"column_start":5,"column_end":87}},{"value":"/ assert!(Time::from_hms_micro(0, 60, 0, 0).is_err()); // 60 isn't a valid minute.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":401046,"byte_end":401130,"line_start":160,"line_end":160,"column_start":5,"column_end":89}},{"value":"/ assert!(Time::from_hms_micro(0, 0, 60, 0).is_err()); // 60 isn't a valid second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":401135,"byte_end":401219,"line_start":161,"line_end":161,"column_start":5,"column_end":89}},{"value":"/ assert!(Time::from_hms_micro(0, 0, 0, 1_000_000).is_err()); // 1_000_000 isn't a valid microsecond.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":401224,"byte_end":401327,"line_start":162,"line_end":162,"column_start":5,"column_end":108}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":401332,"byte_end":401339,"line_start":163,"line_end":163,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2513},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":402527,"byte_end":402540,"line_start":196,"line_end":196,"column_start":18,"column_end":31},"name":"from_hms_nano","qualname":"<Time>::from_hms_nano","value":"const fn from_hms_nano(u8, u8, u8, u32) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a `Time` from the hour, minute, second, and nanosecond.","sig":null,"attributes":[{"value":"/ Attempt to create a `Time` from the hour, minute, second, and nanosecond.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":401874,"byte_end":401951,"line_start":182,"line_end":182,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":401956,"byte_end":401959,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":401964,"byte_end":401975,"line_start":184,"line_end":184,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":401980,"byte_end":402001,"line_start":185,"line_end":185,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms_nano(1, 2, 3, 4).is_ok());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":402006,"byte_end":402059,"line_start":186,"line_end":186,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":402064,"byte_end":402071,"line_start":187,"line_end":187,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":402076,"byte_end":402079,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":402084,"byte_end":402095,"line_start":189,"line_end":189,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":402100,"byte_end":402121,"line_start":190,"line_end":190,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms_nano(24, 0, 0, 0).is_err()); // 24 isn't a valid hour.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":402126,"byte_end":402207,"line_start":191,"line_end":191,"column_start":5,"column_end":86}},{"value":"/ assert!(Time::from_hms_nano(0, 60, 0, 0).is_err()); // 60 isn't a valid minute.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":402212,"byte_end":402295,"line_start":192,"line_end":192,"column_start":5,"column_end":88}},{"value":"/ assert!(Time::from_hms_nano(0, 0, 60, 0).is_err()); // 60 isn't a valid second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":402300,"byte_end":402383,"line_start":193,"line_end":193,"column_start":5,"column_end":88}},{"value":"/ assert!(Time::from_hms_nano(0, 0, 0, 1_000_000_000).is_err()); // 1_000_000_000 isn't a valid nanosecond.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":402388,"byte_end":402497,"line_start":194,"line_end":194,"column_start":5,"column_end":114}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":402502,"byte_end":402509,"line_start":195,"line_end":195,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2514},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":403300,"byte_end":403306,"line_start":220,"line_end":220,"column_start":18,"column_end":24},"name":"as_hms","qualname":"<Time>::as_hms","value":"const fn as_hms(Self) -> (u8, u8, u8)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, and second.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, and second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":403053,"byte_end":403096,"line_start":213,"line_end":213,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":403101,"byte_end":403104,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":403109,"byte_end":403120,"line_start":215,"line_end":215,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":403125,"byte_end":403154,"line_start":216,"line_end":216,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00:00).as_hms(), (0, 0, 0));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":403159,"byte_end":403210,"line_start":217,"line_end":217,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(time!(23:59:59).as_hms(), (23, 59, 59));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":403215,"byte_end":403270,"line_start":218,"line_end":218,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":403275,"byte_end":403282,"line_start":219,"line_end":219,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2515},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":403672,"byte_end":403684,"line_start":231,"line_end":231,"column_start":18,"column_end":30},"name":"as_hms_milli","qualname":"<Time>::as_hms_milli","value":"const fn as_hms_milli(Self) -> (u8, u8, u8, u16)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and millisecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and millisecond.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":403388,"byte_end":403444,"line_start":224,"line_end":224,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":403449,"byte_end":403452,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":403457,"byte_end":403468,"line_start":226,"line_end":226,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":403473,"byte_end":403502,"line_start":227,"line_end":227,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00:00).as_hms_milli(), (0, 0, 0, 0));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":403507,"byte_end":403567,"line_start":228,"line_end":228,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(time!(23:59:59.999).as_hms_milli(), (23, 59, 59, 999));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":403572,"byte_end":403642,"line_start":229,"line_end":229,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":403647,"byte_end":403654,"line_start":230,"line_end":230,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2516},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":404194,"byte_end":404206,"line_start":250,"line_end":250,"column_start":18,"column_end":30},"name":"as_hms_micro","qualname":"<Time>::as_hms_micro","value":"const fn as_hms_micro(Self) -> (u8, u8, u8, u32)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and microsecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and microsecond.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":403868,"byte_end":403924,"line_start":240,"line_end":240,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":403929,"byte_end":403932,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":403937,"byte_end":403948,"line_start":242,"line_end":242,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":403953,"byte_end":403982,"line_start":243,"line_end":243,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00:00).as_hms_micro(), (0, 0, 0, 0));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":403987,"byte_end":404047,"line_start":244,"line_end":244,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":404052,"byte_end":404067,"line_start":245,"line_end":245,"column_start":5,"column_end":20}},{"value":"/     time!(23:59:59.999_999).as_hms_micro(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":404072,"byte_end":404119,"line_start":246,"line_end":246,"column_start":5,"column_end":52}},{"value":"/     (23, 59, 59, 999_999)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":404124,"byte_end":404153,"line_start":247,"line_end":247,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":404158,"byte_end":404164,"line_start":248,"line_end":248,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":404169,"byte_end":404176,"line_start":249,"line_end":249,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2517},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":404649,"byte_end":404660,"line_start":264,"line_end":264,"column_start":18,"column_end":29},"name":"as_hms_nano","qualname":"<Time>::as_hms_nano","value":"const fn as_hms_nano(Self) -> (u8, u8, u8, u32)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and nanosecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and nanosecond.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":404318,"byte_end":404373,"line_start":254,"line_end":254,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":404378,"byte_end":404381,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":404386,"byte_end":404397,"line_start":256,"line_end":256,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":404402,"byte_end":404431,"line_start":257,"line_end":257,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00:00).as_hms_nano(), (0, 0, 0, 0));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":404436,"byte_end":404495,"line_start":258,"line_end":258,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":404500,"byte_end":404515,"line_start":259,"line_end":259,"column_start":5,"column_end":20}},{"value":"/     time!(23:59:59.999_999_999).as_hms_nano(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":404520,"byte_end":404570,"line_start":260,"line_end":260,"column_start":5,"column_end":55}},{"value":"/     (23, 59, 59, 999_999_999)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":404575,"byte_end":404608,"line_start":261,"line_end":261,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":404613,"byte_end":404619,"line_start":262,"line_end":262,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":404624,"byte_end":404631,"line_start":263,"line_end":263,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2518},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":405041,"byte_end":405045,"line_start":277,"line_end":277,"column_start":18,"column_end":22},"name":"hour","qualname":"<Time>::hour","value":"const fn hour(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour.","sig":null,"attributes":[{"value":"/ Get the clock hour.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":404764,"byte_end":404787,"line_start":268,"line_end":268,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":404792,"byte_end":404795,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..24`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":404800,"byte_end":404859,"line_start":270,"line_end":270,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":404864,"byte_end":404867,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":404872,"byte_end":404883,"line_start":272,"line_end":272,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":404888,"byte_end":404917,"line_start":273,"line_end":273,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00:00).hour(), 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":404922,"byte_end":404963,"line_start":274,"line_end":274,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(time!(23:59:59).hour(), 23);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":404968,"byte_end":405011,"line_start":275,"line_end":275,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":405016,"byte_end":405023,"line_start":276,"line_end":276,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2519},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":405382,"byte_end":405388,"line_start":290,"line_end":290,"column_start":18,"column_end":24},"name":"minute","qualname":"<Time>::minute","value":"const fn minute(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the minute within the hour.","sig":null,"attributes":[{"value":"/ Get the minute within the hour.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":405089,"byte_end":405124,"line_start":281,"line_end":281,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":405129,"byte_end":405132,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..60`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":405137,"byte_end":405196,"line_start":283,"line_end":283,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":405201,"byte_end":405204,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":405209,"byte_end":405220,"line_start":285,"line_end":285,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":405225,"byte_end":405254,"line_start":286,"line_end":286,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00:00).minute(), 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":405259,"byte_end":405302,"line_start":287,"line_end":287,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(time!(23:59:59).minute(), 59);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":405307,"byte_end":405352,"line_start":288,"line_end":288,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":405357,"byte_end":405364,"line_start":289,"line_end":289,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2520},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":405729,"byte_end":405735,"line_start":303,"line_end":303,"column_start":18,"column_end":24},"name":"second","qualname":"<Time>::second","value":"const fn second(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the second within the minute.","sig":null,"attributes":[{"value":"/ Get the second within the minute.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":405434,"byte_end":405471,"line_start":294,"line_end":294,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":405476,"byte_end":405479,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..60`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":405484,"byte_end":405543,"line_start":296,"line_end":296,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":405548,"byte_end":405551,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":405556,"byte_end":405567,"line_start":298,"line_end":298,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":405572,"byte_end":405601,"line_start":299,"line_end":299,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00:00).second(), 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":405606,"byte_end":405649,"line_start":300,"line_end":300,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(time!(23:59:59).second(), 59);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":405654,"byte_end":405699,"line_start":301,"line_end":301,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":405704,"byte_end":405711,"line_start":302,"line_end":302,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2521},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":406097,"byte_end":406108,"line_start":316,"line_end":316,"column_start":18,"column_end":29},"name":"millisecond","qualname":"<Time>::millisecond","value":"const fn millisecond(Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the milliseconds within the second.","sig":null,"attributes":[{"value":"/ Get the milliseconds within the second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":405781,"byte_end":405824,"line_start":307,"line_end":307,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":405829,"byte_end":405832,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":405837,"byte_end":405899,"line_start":309,"line_end":309,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":405904,"byte_end":405907,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":405912,"byte_end":405923,"line_start":311,"line_end":311,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":405928,"byte_end":405957,"line_start":312,"line_end":312,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00).millisecond(), 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":405962,"byte_end":406007,"line_start":313,"line_end":313,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(time!(23:59:59.999).millisecond(), 999);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":406012,"byte_end":406067,"line_start":314,"line_end":314,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":406072,"byte_end":406079,"line_start":315,"line_end":315,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2522},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":406506,"byte_end":406517,"line_start":329,"line_end":329,"column_start":18,"column_end":29},"name":"microsecond","qualname":"<Time>::microsecond","value":"const fn microsecond(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the microseconds within the second.","sig":null,"attributes":[{"value":"/ Get the microseconds within the second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":406178,"byte_end":406221,"line_start":320,"line_end":320,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":406226,"byte_end":406229,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000_000`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":406234,"byte_end":406300,"line_start":322,"line_end":322,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":406305,"byte_end":406308,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":406313,"byte_end":406324,"line_start":324,"line_end":324,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":406329,"byte_end":406358,"line_start":325,"line_end":325,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00).microsecond(), 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":406363,"byte_end":406408,"line_start":326,"line_end":326,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(time!(23:59:59.999_999).microsecond(), 999_999);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":406413,"byte_end":406476,"line_start":327,"line_end":327,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":406481,"byte_end":406488,"line_start":328,"line_end":328,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2523},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":406913,"byte_end":406923,"line_start":342,"line_end":342,"column_start":18,"column_end":28},"name":"nanosecond","qualname":"<Time>::nanosecond","value":"const fn nanosecond(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the nanoseconds within the second.","sig":null,"attributes":[{"value":"/ Get the nanoseconds within the second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":406576,"byte_end":406618,"line_start":333,"line_end":333,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":406623,"byte_end":406626,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000_000_000`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":406631,"byte_end":406701,"line_start":335,"line_end":335,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":406706,"byte_end":406709,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":406714,"byte_end":406725,"line_start":337,"line_end":337,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":406730,"byte_end":406759,"line_start":338,"line_end":338,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(time!(0:00).nanosecond(), 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":406764,"byte_end":406808,"line_start":339,"line_end":339,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(time!(23:59:59.999_999_999).nanosecond(), 999_999_999);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":406813,"byte_end":406883,"line_start":340,"line_end":340,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":406888,"byte_end":406895,"line_start":341,"line_end":341,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2528},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":412015,"byte_end":412027,"line_start":469,"line_end":469,"column_start":18,"column_end":30},"name":"replace_hour","qualname":"<Time>::replace_hour","value":"const fn replace_hour(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the clock hour.","sig":null,"attributes":[{"value":"/ Replace the clock hour.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":411602,"byte_end":411629,"line_start":458,"line_end":458,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":411634,"byte_end":411637,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":411642,"byte_end":411653,"line_start":460,"line_end":460,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":411658,"byte_end":411687,"line_start":461,"line_end":461,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":411692,"byte_end":411707,"line_start":462,"line_end":462,"column_start":5,"column_end":20}},{"value":"/     time!(01:02:03.004_005_006).replace_hour(7),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":411712,"byte_end":411764,"line_start":463,"line_end":463,"column_start":5,"column_end":57}},{"value":"/     Ok(time!(07:02:03.004_005_006))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":411769,"byte_end":411808,"line_start":464,"line_end":464,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":411813,"byte_end":411819,"line_start":465,"line_end":465,"column_start":5,"column_end":11}},{"value":"/ assert!(time!(01:02:03.004_005_006).replace_hour(24).is_err()); // 24 isn't a valid hour","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":411824,"byte_end":411916,"line_start":466,"line_end":466,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":411921,"byte_end":411928,"line_start":467,"line_end":467,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Time`.\"","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":411933,"byte_end":411997,"line_start":468,"line_end":468,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2529},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":412730,"byte_end":412744,"line_start":490,"line_end":490,"column_start":18,"column_end":32},"name":"replace_minute","qualname":"<Time>::replace_minute","value":"const fn replace_minute(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the minutes within the hour.","sig":null,"attributes":[{"value":"/ Replace the minutes within the hour.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":412298,"byte_end":412338,"line_start":479,"line_end":479,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":412343,"byte_end":412346,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":412351,"byte_end":412362,"line_start":481,"line_end":481,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":412367,"byte_end":412396,"line_start":482,"line_end":482,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":412401,"byte_end":412416,"line_start":483,"line_end":483,"column_start":5,"column_end":20}},{"value":"/     time!(01:02:03.004_005_006).replace_minute(7),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":412421,"byte_end":412475,"line_start":484,"line_end":484,"column_start":5,"column_end":59}},{"value":"/     Ok(time!(01:07:03.004_005_006))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":412480,"byte_end":412519,"line_start":485,"line_end":485,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":412524,"byte_end":412530,"line_start":486,"line_end":486,"column_start":5,"column_end":11}},{"value":"/ assert!(time!(01:02:03.004_005_006).replace_minute(60).is_err()); // 60 isn't a valid minute","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":412535,"byte_end":412631,"line_start":487,"line_end":487,"column_start":5,"column_end":101}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":412636,"byte_end":412643,"line_start":488,"line_end":488,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Time`.\"","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":412648,"byte_end":412712,"line_start":489,"line_end":489,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2530},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":413453,"byte_end":413467,"line_start":511,"line_end":511,"column_start":18,"column_end":32},"name":"replace_second","qualname":"<Time>::replace_second","value":"const fn replace_second(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the seconds within the minute.","sig":null,"attributes":[{"value":"/ Replace the seconds within the minute.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":413019,"byte_end":413061,"line_start":500,"line_end":500,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":413066,"byte_end":413069,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":413074,"byte_end":413085,"line_start":502,"line_end":502,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":413090,"byte_end":413119,"line_start":503,"line_end":503,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":413124,"byte_end":413139,"line_start":504,"line_end":504,"column_start":5,"column_end":20}},{"value":"/     time!(01:02:03.004_005_006).replace_second(7),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":413144,"byte_end":413198,"line_start":505,"line_end":505,"column_start":5,"column_end":59}},{"value":"/     Ok(time!(01:02:07.004_005_006))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":413203,"byte_end":413242,"line_start":506,"line_end":506,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":413247,"byte_end":413253,"line_start":507,"line_end":507,"column_start":5,"column_end":11}},{"value":"/ assert!(time!(01:02:03.004_005_006).replace_second(60).is_err()); // 60 isn't a valid second","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":413258,"byte_end":413354,"line_start":508,"line_end":508,"column_start":5,"column_end":101}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":413359,"byte_end":413366,"line_start":509,"line_end":509,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Time`.\"","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":413371,"byte_end":413435,"line_start":510,"line_end":510,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2531},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":414194,"byte_end":414213,"line_start":532,"line_end":532,"column_start":18,"column_end":37},"name":"replace_millisecond","qualname":"<Time>::replace_millisecond","value":"const fn replace_millisecond(Self, u16) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the milliseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the milliseconds within the second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":413742,"byte_end":413789,"line_start":521,"line_end":521,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":413794,"byte_end":413797,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":413802,"byte_end":413813,"line_start":523,"line_end":523,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":413818,"byte_end":413847,"line_start":524,"line_end":524,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":413852,"byte_end":413867,"line_start":525,"line_end":525,"column_start":5,"column_end":20}},{"value":"/     time!(01:02:03.004_005_006).replace_millisecond(7),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":413872,"byte_end":413931,"line_start":526,"line_end":526,"column_start":5,"column_end":64}},{"value":"/     Ok(time!(01:02:03.007))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":413936,"byte_end":413967,"line_start":527,"line_end":527,"column_start":5,"column_end":36}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":413972,"byte_end":413978,"line_start":528,"line_end":528,"column_start":5,"column_end":11}},{"value":"/ assert!(time!(01:02:03.004_005_006).replace_millisecond(1_000).is_err()); // 1_000 isn't a valid millisecond","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":413983,"byte_end":414095,"line_start":529,"line_end":529,"column_start":5,"column_end":117}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":414100,"byte_end":414107,"line_start":530,"line_end":530,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Time`.\"","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":414112,"byte_end":414176,"line_start":531,"line_end":531,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2532},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":415011,"byte_end":415030,"line_start":556,"line_end":556,"column_start":18,"column_end":37},"name":"replace_microsecond","qualname":"<Time>::replace_microsecond","value":"const fn replace_microsecond(Self, u32) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the microseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the microseconds within the second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":414543,"byte_end":414590,"line_start":545,"line_end":545,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":414595,"byte_end":414598,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":414603,"byte_end":414614,"line_start":547,"line_end":547,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":414619,"byte_end":414648,"line_start":548,"line_end":548,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":414653,"byte_end":414668,"line_start":549,"line_end":549,"column_start":5,"column_end":20}},{"value":"/     time!(01:02:03.004_005_006).replace_microsecond(7_008),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":414673,"byte_end":414736,"line_start":550,"line_end":550,"column_start":5,"column_end":68}},{"value":"/     Ok(time!(01:02:03.007_008))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":414741,"byte_end":414776,"line_start":551,"line_end":551,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":414781,"byte_end":414787,"line_start":552,"line_end":552,"column_start":5,"column_end":11}},{"value":"/ assert!(time!(01:02:03.004_005_006).replace_microsecond(1_000_000).is_err()); // 1_000_000 isn't a valid microsecond","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":414792,"byte_end":414912,"line_start":553,"line_end":553,"column_start":5,"column_end":125}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":414917,"byte_end":414924,"line_start":554,"line_end":554,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Time`.\"","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":414929,"byte_end":414993,"line_start":555,"line_end":555,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2533},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":415832,"byte_end":415850,"line_start":580,"line_end":580,"column_start":18,"column_end":36},"name":"replace_nanosecond","qualname":"<Time>::replace_nanosecond","value":"const fn replace_nanosecond(Self, u32) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the nanoseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the nanoseconds within the second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":415352,"byte_end":415398,"line_start":569,"line_end":569,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":415403,"byte_end":415406,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":415411,"byte_end":415422,"line_start":571,"line_end":571,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::time;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":415427,"byte_end":415456,"line_start":572,"line_end":572,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":415461,"byte_end":415476,"line_start":573,"line_end":573,"column_start":5,"column_end":20}},{"value":"/     time!(01:02:03.004_005_006).replace_nanosecond(7_008_009),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":415481,"byte_end":415547,"line_start":574,"line_end":574,"column_start":5,"column_end":71}},{"value":"/     Ok(time!(01:02:03.007_008_009))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":415552,"byte_end":415591,"line_start":575,"line_end":575,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":415596,"byte_end":415602,"line_start":576,"line_end":576,"column_start":5,"column_end":11}},{"value":"/ assert!(time!(01:02:03.004_005_006).replace_nanosecond(1_000_000_000).is_err()); // 1_000_000_000 isn't a valid nanosecond","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":415607,"byte_end":415733,"line_start":577,"line_end":577,"column_start":5,"column_end":131}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":415738,"byte_end":415745,"line_start":578,"line_end":578,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Time`.\"","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":415750,"byte_end":415814,"line_start":579,"line_end":579,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2535},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":416350,"byte_end":416361,"line_start":596,"line_end":596,"column_start":12,"column_end":23},"name":"format_into","qualname":"<Time>::format_into","value":"fn format_into<impl io::Write,\nimpl Formattable + ?Sized>(Self, &mut impl io::Write,\n&impl Formattable + ?Sized) -> Result<usize, crate::error::Format> where\nimpl io::Write: io::Write, impl Formattable + ?Sized: Formattable + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Format the `Time` using the provided [format description](crate::format_description).\n","sig":null,"attributes":[{"value":"/ Format the `Time` using the provided [format description](crate::format_description).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":416249,"byte_end":416338,"line_start":595,"line_end":595,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":2538},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":416945,"byte_end":416951,"line_start":612,"line_end":612,"column_start":12,"column_end":18},"name":"format","qualname":"<Time>::format","value":"fn format<impl Formattable + ?Sized>(Self, &impl Formattable + ?Sized)\n-> Result<String, crate::error::Format> where\nimpl Formattable + ?Sized: Formattable + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Format the `Time` using the provided [format description](crate::format_description).","sig":null,"attributes":[{"value":"/ Format the `Time` using the provided [format description](crate::format_description).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":416577,"byte_end":416666,"line_start":604,"line_end":604,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":416671,"byte_end":416674,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":416679,"byte_end":416690,"line_start":606,"line_end":606,"column_start":5,"column_end":16}},{"value":"/ # use time::{format_description, macros::time};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":416695,"byte_end":416746,"line_start":607,"line_end":607,"column_start":5,"column_end":56}},{"value":"/ let format = format_description::parse(\"[hour]:[minute]:[second]\")?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":416751,"byte_end":416823,"line_start":608,"line_end":608,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(time!(12:00).format(&format)?, \"12:00:00\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":416828,"byte_end":416886,"line_start":609,"line_end":609,"column_start":5,"column_end":63}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":416891,"byte_end":416921,"line_start":610,"line_end":610,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":416926,"byte_end":416933,"line_start":611,"line_end":611,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2541},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":417560,"byte_end":417565,"line_start":631,"line_end":631,"column_start":12,"column_end":17},"name":"parse","qualname":"<Time>::parse","value":"fn parse<impl Parsable + ?Sized>(&str, &impl Parsable + ?Sized)\n-> Result<Self, error::Parse> where impl Parsable + ?Sized: Parsable + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Parse a `Time` from the input using the provided [format\n description](crate::format_description).","sig":null,"attributes":[{"value":"/ Parse a `Time` from the input using the provided [format","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":417160,"byte_end":417220,"line_start":622,"line_end":622,"column_start":5,"column_end":65}},{"value":"/ description](crate::format_description).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":417225,"byte_end":417269,"line_start":623,"line_end":623,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":417274,"byte_end":417277,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":417282,"byte_end":417293,"line_start":625,"line_end":625,"column_start":5,"column_end":16}},{"value":"/ # use time::{format_description, macros::time, Time};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":417298,"byte_end":417355,"line_start":626,"line_end":626,"column_start":5,"column_end":62}},{"value":"/ let format = format_description::parse(\"[hour]:[minute]:[second]\")?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":417360,"byte_end":417432,"line_start":627,"line_end":627,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(Time::parse(\"12:00:00\", &format)?, time!(12:00));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":417437,"byte_end":417501,"line_start":628,"line_end":628,"column_start":5,"column_end":69}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":417506,"byte_end":417536,"line_start":629,"line_end":629,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":417541,"byte_end":417548,"line_start":630,"line_end":630,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2544},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":417768,"byte_end":417771,"line_start":640,"line_end":640,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Time as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10117},"children":[],"decl_id":{"krate":2,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2547},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":419066,"byte_end":419069,"line_start":672,"line_end":672,"column_start":8,"column_end":11},"name":"add","qualname":"<Time as std::ops::Add>::add","value":"fn add(Self, Duration) -> Self::Output","parent":{"krate":2,"index":3247},"children":[],"decl_id":{"krate":2,"index":3250},"docs":" Add the sub-day time of the [`Duration`] to the `Time`. Wraps on overflow.","sig":null,"attributes":[{"value":"/ Add the sub-day time of the [`Duration`] to the `Time`. Wraps on overflow.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":418754,"byte_end":418832,"line_start":665,"line_end":665,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":418837,"byte_end":418840,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":418845,"byte_end":418856,"line_start":667,"line_end":667,"column_start":5,"column_end":16}},{"value":"/ # use time::{ext::NumericalDuration, macros::time};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":418861,"byte_end":418916,"line_start":668,"line_end":668,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(time!(12:00) + 2.hours(), time!(14:00));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":418921,"byte_end":418976,"line_start":669,"line_end":669,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(time!(0:00:01) + (-2).seconds(), time!(23:59:59));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":418981,"byte_end":419046,"line_start":670,"line_end":670,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":419051,"byte_end":419058,"line_start":671,"line_end":671,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2550},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":419555,"byte_end":419558,"line_start":687,"line_end":687,"column_start":8,"column_end":11},"name":"add","qualname":"<Time as std::ops::Add>::add","value":"fn add(Self, StdDuration) -> Self::Output","parent":{"krate":2,"index":3247},"children":[],"decl_id":{"krate":2,"index":3250},"docs":" Add the sub-day time of the [`std::time::Duration`] to the `Time`. Wraps on overflow.","sig":null,"attributes":[{"value":"/ Add the sub-day time of the [`std::time::Duration`] to the `Time`. Wraps on overflow.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":419224,"byte_end":419313,"line_start":680,"line_end":680,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":419318,"byte_end":419321,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":419326,"byte_end":419337,"line_start":682,"line_end":682,"column_start":5,"column_end":16}},{"value":"/ # use time::{ext::NumericalStdDuration, macros::time};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":419342,"byte_end":419400,"line_start":683,"line_end":683,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(time!(12:00) + 2.std_hours(), time!(14:00));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":419405,"byte_end":419464,"line_start":684,"line_end":684,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(time!(23:59:59) + 2.std_seconds(), time!(0:00:01));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":419469,"byte_end":419535,"line_start":685,"line_end":685,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":419540,"byte_end":419547,"line_start":686,"line_end":686,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2553},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":420084,"byte_end":420087,"line_start":704,"line_end":704,"column_start":8,"column_end":11},"name":"sub","qualname":"<Time as std::ops::Sub>::sub","value":"fn sub(Self, Duration) -> Self::Output","parent":{"krate":2,"index":3252},"children":[],"decl_id":{"krate":2,"index":3255},"docs":" Subtract the sub-day time of the [`Duration`] from the `Time`. Wraps on overflow.","sig":null,"attributes":[{"value":"/ Subtract the sub-day time of the [`Duration`] from the `Time`. Wraps on overflow.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":419765,"byte_end":419850,"line_start":697,"line_end":697,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":419855,"byte_end":419858,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":419863,"byte_end":419874,"line_start":699,"line_end":699,"column_start":5,"column_end":16}},{"value":"/ # use time::{ext::NumericalDuration, macros::time};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":419879,"byte_end":419934,"line_start":700,"line_end":700,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(time!(14:00) - 2.hours(), time!(12:00));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":419939,"byte_end":419994,"line_start":701,"line_end":701,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(time!(23:59:59) - (-2).seconds(), time!(0:00:01));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":419999,"byte_end":420064,"line_start":702,"line_end":702,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":420069,"byte_end":420076,"line_start":703,"line_end":703,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2556},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":420580,"byte_end":420583,"line_start":719,"line_end":719,"column_start":8,"column_end":11},"name":"sub","qualname":"<Time as std::ops::Sub>::sub","value":"fn sub(Self, StdDuration) -> Self::Output","parent":{"krate":2,"index":3252},"children":[],"decl_id":{"krate":2,"index":3255},"docs":" Subtract the sub-day time of the [`std::time::Duration`] from the `Time`. Wraps on overflow.","sig":null,"attributes":[{"value":"/ Subtract the sub-day time of the [`std::time::Duration`] from the `Time`. Wraps on overflow.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":420242,"byte_end":420338,"line_start":712,"line_end":712,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":420343,"byte_end":420346,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":420351,"byte_end":420362,"line_start":714,"line_end":714,"column_start":5,"column_end":16}},{"value":"/ # use time::{ext::NumericalStdDuration, macros::time};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":420367,"byte_end":420425,"line_start":715,"line_end":715,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(time!(14:00) - 2.std_hours(), time!(12:00));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":420430,"byte_end":420489,"line_start":716,"line_end":716,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(time!(0:00:01) - 2.std_seconds(), time!(23:59:59));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":420494,"byte_end":420560,"line_start":717,"line_end":717,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":420565,"byte_end":420572,"line_start":718,"line_end":718,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2559},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":421255,"byte_end":421258,"line_start":739,"line_end":739,"column_start":8,"column_end":11},"name":"sub","qualname":"<Time as std::ops::Sub>::sub","value":"fn sub(Self, Self) -> Self::Output","parent":{"krate":2,"index":3252},"children":[],"decl_id":{"krate":2,"index":3255},"docs":" Subtract two `Time`s, returning the [`Duration`] between. This assumes both `Time`s are in\n the same calendar day.","sig":null,"attributes":[{"value":"/ Subtract two `Time`s, returning the [`Duration`] between. This assumes both `Time`s are in","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":420784,"byte_end":420878,"line_start":729,"line_end":729,"column_start":5,"column_end":99}},{"value":"/ the same calendar day.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":420883,"byte_end":420909,"line_start":730,"line_end":730,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":420914,"byte_end":420917,"line_start":731,"line_end":731,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":420922,"byte_end":420933,"line_start":732,"line_end":732,"column_start":5,"column_end":16}},{"value":"/ # use time::{ext::NumericalDuration, macros::time};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":420938,"byte_end":420993,"line_start":733,"line_end":733,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(time!(0:00) - time!(0:00), 0.seconds());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":420998,"byte_end":421053,"line_start":734,"line_end":734,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(time!(1:00) - time!(0:00), 1.hours());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":421058,"byte_end":421111,"line_start":735,"line_end":735,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(time!(0:00) - time!(1:00), (-1).hours());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":421116,"byte_end":421172,"line_start":736,"line_end":736,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(time!(0:00) - time!(23:00), (-23).hours());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":421177,"byte_end":421235,"line_start":737,"line_end":737,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":421240,"byte_end":421247,"line_start":738,"line_end":738,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4014},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":422779,"byte_end":422788,"line_start":24,"line_end":24,"column_start":12,"column_end":21},"name":"UtcOffset","qualname":"::utc_offset::UtcOffset","value":"UtcOffset {  }","parent":null,"children":[{"krate":0,"index":4015},{"krate":0,"index":4016},{"krate":0,"index":4017}],"decl_id":null,"docs":" An offset from UTC.","sig":null,"attributes":[{"value":"/ An offset from UTC.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":422485,"byte_end":422508,"line_start":18,"line_end":18,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":422509,"byte_end":422512,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This struct can store values up to ±23:59:59. If you need support outside this range, please","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":422513,"byte_end":422610,"line_start":20,"line_end":20,"column_start":1,"column_end":97}},{"value":"/ file an issue with your use case.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":422611,"byte_end":422648,"line_start":21,"line_end":21,"column_start":1,"column_end":38}}]},{"kind":"Const","id":{"krate":0,"index":2580},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":423200,"byte_end":423203,"line_start":40,"line_end":40,"column_start":15,"column_end":18},"name":"UTC","qualname":"::utc_offset::UtcOffset::UTC","value":"Self","parent":{"krate":0,"index":2579},"children":[],"decl_id":null,"docs":" A `UtcOffset` that is UTC.","sig":null,"attributes":[{"value":"/ A `UtcOffset` that is UTC.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":423020,"byte_end":423050,"line_start":34,"line_end":34,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":423055,"byte_end":423058,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":423063,"byte_end":423074,"line_start":36,"line_end":36,"column_start":5,"column_end":16}},{"value":"/ # use time::{UtcOffset, macros::offset};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":423079,"byte_end":423123,"line_start":37,"line_end":37,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(UtcOffset::UTC, offset!(UTC));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":423128,"byte_end":423173,"line_start":38,"line_end":38,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":423178,"byte_end":423185,"line_start":39,"line_end":39,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2581},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":423529,"byte_end":423549,"line_start":47,"line_end":47,"column_start":18,"column_end":38},"name":"__from_hms_unchecked","qualname":"<UtcOffset>::__from_hms_unchecked","value":"const fn __from_hms_unchecked(i8, i8, i8) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `UtcOffset` representing an offset of the hours, minutes, and seconds provided, the\n validity of which must be guaranteed by the caller. All three parameters must have the same\n sign.\n","sig":null,"attributes":[{"value":"/ Create a `UtcOffset` representing an offset of the hours, minutes, and seconds provided, the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":423282,"byte_end":423378,"line_start":43,"line_end":43,"column_start":5,"column_end":101}},{"value":"/ validity of which must be guaranteed by the caller. All three parameters must have the same","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":423383,"byte_end":423478,"line_start":44,"line_end":44,"column_start":5,"column_end":100}},{"value":"/ sign.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":423483,"byte_end":423492,"line_start":45,"line_end":45,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2582},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":424740,"byte_end":424748,"line_start":83,"line_end":83,"column_start":18,"column_end":26},"name":"from_hms","qualname":"<UtcOffset>::from_hms","value":"const fn from_hms(i8, i8, i8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Create a `UtcOffset` representing an offset by the number of hours, minutes, and seconds\n provided.","sig":null,"attributes":[{"value":"/ Create a `UtcOffset` representing an offset by the number of hours, minutes, and seconds","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":424225,"byte_end":424317,"line_start":71,"line_end":71,"column_start":5,"column_end":97}},{"value":"/ provided.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":424322,"byte_end":424335,"line_start":72,"line_end":72,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":424340,"byte_end":424343,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ The sign of all three components should match. If they do not, all smaller components will","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":424348,"byte_end":424442,"line_start":74,"line_end":74,"column_start":5,"column_end":99}},{"value":"/ have their signs flipped.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":424447,"byte_end":424476,"line_start":75,"line_end":75,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":424481,"byte_end":424484,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":424489,"byte_end":424500,"line_start":77,"line_end":77,"column_start":5,"column_end":16}},{"value":"/ # use time::UtcOffset;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":424505,"byte_end":424531,"line_start":78,"line_end":78,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(UtcOffset::from_hms(1, 2, 3)?.as_hms(), (1, 2, 3));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":424536,"byte_end":424602,"line_start":79,"line_end":79,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(UtcOffset::from_hms(1, -2, -3)?.as_hms(), (1, 2, 3));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":424607,"byte_end":424675,"line_start":80,"line_end":80,"column_start":5,"column_end":73}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":424680,"byte_end":424710,"line_start":81,"line_end":81,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":424715,"byte_end":424722,"line_start":82,"line_end":82,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2583},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":425706,"byte_end":425724,"line_start":113,"line_end":113,"column_start":18,"column_end":36},"name":"from_whole_seconds","qualname":"<UtcOffset>::from_whole_seconds","value":"const fn from_whole_seconds(i32) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Create a `UtcOffset` representing an offset by the number of seconds provided.","sig":null,"attributes":[{"value":"/ Create a `UtcOffset` representing an offset by the number of seconds provided.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":425425,"byte_end":425507,"line_start":106,"line_end":106,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":425512,"byte_end":425515,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":425520,"byte_end":425531,"line_start":108,"line_end":108,"column_start":5,"column_end":16}},{"value":"/ # use time::UtcOffset;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":425536,"byte_end":425562,"line_start":109,"line_end":109,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(UtcOffset::from_whole_seconds(3_723)?.as_hms(), (1, 2, 3));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":425567,"byte_end":425641,"line_start":110,"line_end":110,"column_start":5,"column_end":79}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":425646,"byte_end":425676,"line_start":111,"line_end":111,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":425681,"byte_end":425688,"line_start":112,"line_end":112,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2584},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":426472,"byte_end":426478,"line_start":133,"line_end":133,"column_start":18,"column_end":24},"name":"as_hms","qualname":"<UtcOffset>::as_hms","value":"const fn as_hms(Self) -> (i8, i8, i8)","parent":null,"children":[],"decl_id":null,"docs":" Obtain the UTC offset as its hours, minutes, and seconds. The sign of all three components\n will always match. A positive value indicates an offset to the east; a negative to the west.","sig":null,"attributes":[{"value":"/ Obtain the UTC offset as its hours, minutes, and seconds. The sign of all three components","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":426066,"byte_end":426160,"line_start":125,"line_end":125,"column_start":5,"column_end":99}},{"value":"/ will always match. A positive value indicates an offset to the east; a negative to the west.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":426165,"byte_end":426261,"line_start":126,"line_end":126,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":426266,"byte_end":426269,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":426274,"byte_end":426285,"line_start":128,"line_end":128,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":426290,"byte_end":426321,"line_start":129,"line_end":129,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(offset!(+1:02:03).as_hms(), (1, 2, 3));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":426326,"byte_end":426380,"line_start":130,"line_end":130,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(offset!(-1:02:03).as_hms(), (-1, -2, -3));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":426385,"byte_end":426442,"line_start":131,"line_end":131,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":426447,"byte_end":426454,"line_start":132,"line_end":132,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2585},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":426908,"byte_end":426919,"line_start":145,"line_end":145,"column_start":18,"column_end":29},"name":"whole_hours","qualname":"<UtcOffset>::whole_hours","value":"const fn whole_hours(Self) -> i8","parent":null,"children":[],"decl_id":null,"docs":" Obtain the number of whole hours the offset is from UTC. A positive value indicates an\n offset to the east; a negative to the west.","sig":null,"attributes":[{"value":"/ Obtain the number of whole hours the offset is from UTC. A positive value indicates an","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":426563,"byte_end":426653,"line_start":137,"line_end":137,"column_start":5,"column_end":95}},{"value":"/ offset to the east; a negative to the west.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":426658,"byte_end":426705,"line_start":138,"line_end":138,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":426710,"byte_end":426713,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":426718,"byte_end":426729,"line_start":140,"line_end":140,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":426734,"byte_end":426765,"line_start":141,"line_end":141,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(offset!(+1:02:03).whole_hours(), 1);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":426770,"byte_end":426821,"line_start":142,"line_end":142,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(offset!(-1:02:03).whole_hours(), -1);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":426826,"byte_end":426878,"line_start":143,"line_end":143,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":426883,"byte_end":426890,"line_start":144,"line_end":144,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2586},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":427317,"byte_end":427330,"line_start":157,"line_end":157,"column_start":18,"column_end":31},"name":"whole_minutes","qualname":"<UtcOffset>::whole_minutes","value":"const fn whole_minutes(Self) -> i16","parent":null,"children":[],"decl_id":null,"docs":" Obtain the number of whole minutes the offset is from UTC. A positive value indicates an\n offset to the east; a negative to the west.","sig":null,"attributes":[{"value":"/ Obtain the number of whole minutes the offset is from UTC. A positive value indicates an","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":426964,"byte_end":427056,"line_start":149,"line_end":149,"column_start":5,"column_end":97}},{"value":"/ offset to the east; a negative to the west.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":427061,"byte_end":427108,"line_start":150,"line_end":150,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":427113,"byte_end":427116,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":427121,"byte_end":427132,"line_start":152,"line_end":152,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":427137,"byte_end":427168,"line_start":153,"line_end":153,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(offset!(+1:02:03).whole_minutes(), 62);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":427173,"byte_end":427227,"line_start":154,"line_end":154,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(offset!(-1:02:03).whole_minutes(), -62);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":427232,"byte_end":427287,"line_start":155,"line_end":155,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":427292,"byte_end":427299,"line_start":156,"line_end":156,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2587},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":427777,"byte_end":427794,"line_start":169,"line_end":169,"column_start":18,"column_end":35},"name":"minutes_past_hour","qualname":"<UtcOffset>::minutes_past_hour","value":"const fn minutes_past_hour(Self) -> i8","parent":null,"children":[],"decl_id":null,"docs":" Obtain the number of minutes past the hour the offset is from UTC. A positive value\n indicates an offset to the east; a negative to the west.","sig":null,"attributes":[{"value":"/ Obtain the number of minutes past the hour the offset is from UTC. A positive value","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":427410,"byte_end":427497,"line_start":161,"line_end":161,"column_start":5,"column_end":92}},{"value":"/ indicates an offset to the east; a negative to the west.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":427502,"byte_end":427562,"line_start":162,"line_end":162,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":427567,"byte_end":427570,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":427575,"byte_end":427586,"line_start":164,"line_end":164,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":427591,"byte_end":427622,"line_start":165,"line_end":165,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(offset!(+1:02:03).minutes_past_hour(), 2);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":427627,"byte_end":427684,"line_start":166,"line_end":166,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(offset!(-1:02:03).minutes_past_hour(), -2);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":427689,"byte_end":427747,"line_start":167,"line_end":167,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":427752,"byte_end":427759,"line_start":168,"line_end":168,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2588},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":428330,"byte_end":428343,"line_start":183,"line_end":183,"column_start":18,"column_end":31},"name":"whole_seconds","qualname":"<UtcOffset>::whole_seconds","value":"const fn whole_seconds(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Obtain the number of whole seconds the offset is from UTC. A positive value indicates an\n offset to the east; a negative to the west.","sig":null,"attributes":[{"value":"/ Obtain the number of whole seconds the offset is from UTC. A positive value indicates an","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":427841,"byte_end":427933,"line_start":173,"line_end":173,"column_start":5,"column_end":97}},{"value":"/ offset to the east; a negative to the west.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":427938,"byte_end":427985,"line_start":174,"line_end":174,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":427990,"byte_end":427993,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":427998,"byte_end":428009,"line_start":176,"line_end":176,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":428014,"byte_end":428045,"line_start":177,"line_end":177,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(offset!(+1:02:03).whole_seconds(), 3723);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":428050,"byte_end":428106,"line_start":178,"line_end":178,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(offset!(-1:02:03).whole_seconds(), -3723);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":428111,"byte_end":428168,"line_start":179,"line_end":179,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":428173,"byte_end":428180,"line_start":180,"line_end":180,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2589},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":428826,"byte_end":428845,"line_start":195,"line_end":195,"column_start":18,"column_end":37},"name":"seconds_past_minute","qualname":"<UtcOffset>::seconds_past_minute","value":"const fn seconds_past_minute(Self) -> i8","parent":null,"children":[],"decl_id":null,"docs":" Obtain the number of seconds past the minute the offset is from UTC. A positive value\n indicates an offset to the east; a negative to the west.","sig":null,"attributes":[{"value":"/ Obtain the number of seconds past the minute the offset is from UTC. A positive value","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":428453,"byte_end":428542,"line_start":187,"line_end":187,"column_start":5,"column_end":94}},{"value":"/ indicates an offset to the east; a negative to the west.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":428547,"byte_end":428607,"line_start":188,"line_end":188,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":428612,"byte_end":428615,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":428620,"byte_end":428631,"line_start":190,"line_end":190,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":428636,"byte_end":428667,"line_start":191,"line_end":191,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(offset!(+1:02:03).seconds_past_minute(), 3);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":428672,"byte_end":428731,"line_start":192,"line_end":192,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(offset!(-1:02:03).seconds_past_minute(), -3);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":428736,"byte_end":428796,"line_start":193,"line_end":193,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":428801,"byte_end":428808,"line_start":194,"line_end":194,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2590},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":429211,"byte_end":429217,"line_start":210,"line_end":210,"column_start":18,"column_end":24},"name":"is_utc","qualname":"<UtcOffset>::is_utc","value":"const fn is_utc(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the offset is exactly UTC.","sig":null,"attributes":[{"value":"/ Check if the offset is exactly UTC.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":428942,"byte_end":428981,"line_start":201,"line_end":201,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":428986,"byte_end":428989,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":428994,"byte_end":428997,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":429002,"byte_end":429013,"line_start":204,"line_end":204,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":429018,"byte_end":429049,"line_start":205,"line_end":205,"column_start":5,"column_end":36}},{"value":"/ assert!(!offset!(+1:02:03).is_utc());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":429054,"byte_end":429095,"line_start":206,"line_end":206,"column_start":5,"column_end":46}},{"value":"/ assert!(!offset!(-1:02:03).is_utc());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":429100,"byte_end":429141,"line_start":207,"line_end":207,"column_start":5,"column_end":46}},{"value":"/ assert!(offset!(UTC).is_utc());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":429146,"byte_end":429181,"line_start":208,"line_end":208,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":429186,"byte_end":429193,"line_start":209,"line_end":209,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2591},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":429600,"byte_end":429611,"line_start":222,"line_end":222,"column_start":18,"column_end":29},"name":"is_positive","qualname":"<UtcOffset>::is_positive","value":"const fn is_positive(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the offset is positive, or east of UTC.","sig":null,"attributes":[{"value":"/ Check if the offset is positive, or east of UTC.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":429311,"byte_end":429363,"line_start":214,"line_end":214,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":429368,"byte_end":429371,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":429376,"byte_end":429387,"line_start":216,"line_end":216,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":429392,"byte_end":429423,"line_start":217,"line_end":217,"column_start":5,"column_end":36}},{"value":"/ assert!(offset!(+1:02:03).is_positive());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":429428,"byte_end":429473,"line_start":218,"line_end":218,"column_start":5,"column_end":50}},{"value":"/ assert!(!offset!(-1:02:03).is_positive());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":429478,"byte_end":429524,"line_start":219,"line_end":219,"column_start":5,"column_end":51}},{"value":"/ assert!(!offset!(UTC).is_positive());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":429529,"byte_end":429570,"line_start":220,"line_end":220,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":429575,"byte_end":429582,"line_start":221,"line_end":221,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2592},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":429991,"byte_end":430002,"line_start":234,"line_end":234,"column_start":18,"column_end":29},"name":"is_negative","qualname":"<UtcOffset>::is_negative","value":"const fn is_negative(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the offset is negative, or west of UTC.","sig":null,"attributes":[{"value":"/ Check if the offset is negative, or west of UTC.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":429702,"byte_end":429754,"line_start":226,"line_end":226,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":429759,"byte_end":429762,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":429767,"byte_end":429778,"line_start":228,"line_end":228,"column_start":5,"column_end":16}},{"value":"/ # use time::macros::offset;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":429783,"byte_end":429814,"line_start":229,"line_end":229,"column_start":5,"column_end":36}},{"value":"/ assert!(!offset!(+1:02:03).is_negative());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":429819,"byte_end":429865,"line_start":230,"line_end":230,"column_start":5,"column_end":51}},{"value":"/ assert!(offset!(-1:02:03).is_negative());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":429870,"byte_end":429915,"line_start":231,"line_end":231,"column_start":5,"column_end":50}},{"value":"/ assert!(!offset!(UTC).is_negative());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":429920,"byte_end":429961,"line_start":232,"line_end":232,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":429966,"byte_end":429973,"line_start":233,"line_end":233,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2594},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":431519,"byte_end":431530,"line_start":277,"line_end":277,"column_start":12,"column_end":23},"name":"format_into","qualname":"<UtcOffset>::format_into","value":"fn format_into<impl io::Write,\nimpl Formattable + ?Sized>(Self, &mut impl io::Write,\n&impl Formattable + ?Sized) -> Result<usize, error::Format> where\nimpl io::Write: io::Write, impl Formattable + ?Sized: Formattable + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Format the `UtcOffset` using the provided [format description](crate::format_description).\n","sig":null,"attributes":[{"value":"/ Format the `UtcOffset` using the provided [format description](crate::format_description).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":431413,"byte_end":431507,"line_start":276,"line_end":276,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":2597},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":432131,"byte_end":432137,"line_start":293,"line_end":293,"column_start":12,"column_end":18},"name":"format","qualname":"<UtcOffset>::format","value":"fn format<impl Formattable + ?Sized>(Self, &impl Formattable + ?Sized)\n-> Result<String, error::Format> where\nimpl Formattable + ?Sized: Formattable + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Format the `UtcOffset` using the provided [format description](crate::format_description).","sig":null,"attributes":[{"value":"/ Format the `UtcOffset` using the provided [format description](crate::format_description).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":431739,"byte_end":431833,"line_start":285,"line_end":285,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":431838,"byte_end":431841,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":431846,"byte_end":431857,"line_start":287,"line_end":287,"column_start":5,"column_end":16}},{"value":"/ # use time::{format_description, macros::offset};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":431862,"byte_end":431915,"line_start":288,"line_end":288,"column_start":5,"column_end":58}},{"value":"/ let format = format_description::parse(\"[offset_hour sign:mandatory]:[offset_minute]\")?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":431920,"byte_end":432012,"line_start":289,"line_end":289,"column_start":5,"column_end":97}},{"value":"/ assert_eq!(offset!(+1).format(&format)?, \"+01:00\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":432017,"byte_end":432072,"line_start":290,"line_end":290,"column_start":5,"column_end":60}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":432077,"byte_end":432107,"line_start":291,"line_end":291,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":432112,"byte_end":432119,"line_start":292,"line_end":292,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2600},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":432743,"byte_end":432748,"line_start":309,"line_end":309,"column_start":12,"column_end":17},"name":"parse","qualname":"<UtcOffset>::parse","value":"fn parse<impl Parsable + ?Sized>(&str, &impl Parsable + ?Sized)\n-> Result<Self, error::Parse> where impl Parsable + ?Sized: Parsable + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Parse a `UtcOffset` from the input using the provided [format\n description](crate::format_description).","sig":null,"attributes":[{"value":"/ Parse a `UtcOffset` from the input using the provided [format","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":432321,"byte_end":432386,"line_start":300,"line_end":300,"column_start":5,"column_end":70}},{"value":"/ description](crate::format_description).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":432391,"byte_end":432435,"line_start":301,"line_end":301,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":432440,"byte_end":432443,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":432448,"byte_end":432459,"line_start":303,"line_end":303,"column_start":5,"column_end":16}},{"value":"/ # use time::{format_description, macros::offset, UtcOffset};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":432464,"byte_end":432528,"line_start":304,"line_end":304,"column_start":5,"column_end":69}},{"value":"/ let format = format_description::parse(\"[offset_hour]:[offset_minute]\")?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":432533,"byte_end":432610,"line_start":305,"line_end":305,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(UtcOffset::parse(\"-03:42\", &format)?, offset!(-3:42));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":432615,"byte_end":432684,"line_start":306,"line_end":306,"column_start":5,"column_end":74}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":432689,"byte_end":432719,"line_start":307,"line_end":307,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":432724,"byte_end":432731,"line_start":308,"line_end":308,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2603},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":432958,"byte_end":432961,"line_start":318,"line_end":318,"column_start":8,"column_end":11},"name":"fmt","qualname":"<UtcOffset as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10117},"children":[],"decl_id":{"krate":2,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2606},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":433339,"byte_end":433342,"line_start":334,"line_end":334,"column_start":8,"column_end":11},"name":"neg","qualname":"<UtcOffset as std::ops::Neg>::neg","value":"fn neg(Self) -> Self::Output","parent":{"krate":2,"index":3274},"children":[],"decl_id":{"krate":2,"index":3276},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2607},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/util.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"util","qualname":"::util","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/util.rs","parent":null,"children":[{"krate":0,"index":2608},{"krate":0,"index":2611},{"krate":0,"index":2618},{"krate":0,"index":2620},{"krate":0,"index":2621},{"krate":0,"index":2622}],"decl_id":null,"docs":" Utility functions.\n","sig":null,"attributes":[{"value":"/ Utility functions.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/util.rs","byte_start":433454,"byte_end":433476,"line_start":1,"line_end":1,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":2618},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/util.rs","byte_start":433971,"byte_end":433989,"line_start":21,"line_end":21,"column_start":14,"column_end":32},"name":"days_in_year_month","qualname":"::util::days_in_year_month","value":"const fn days_in_year_month(i32, Month) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the number of days in the month of a given year.","sig":null,"attributes":[{"value":"/ Get the number of days in the month of a given year.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/util.rs","byte_start":433777,"byte_end":433833,"line_start":15,"line_end":15,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/util.rs","byte_start":433834,"byte_end":433837,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/util.rs","byte_start":433838,"byte_end":433849,"line_start":17,"line_end":17,"column_start":1,"column_end":12}},{"value":"/ # use time::{Month, util};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/util.rs","byte_start":433850,"byte_end":433880,"line_start":18,"line_end":18,"column_start":1,"column_end":31}},{"value":"/ assert_eq!(util::days_in_year_month(2020, Month::February), 29);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/util.rs","byte_start":433881,"byte_end":433949,"line_start":19,"line_end":19,"column_start":1,"column_end":69}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/util.rs","byte_start":433950,"byte_end":433957,"line_start":20,"line_end":20,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2620},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/util.rs","byte_start":434688,"byte_end":434700,"line_start":42,"line_end":42,"column_start":14,"column_end":26},"name":"is_leap_year","qualname":"::util::is_leap_year","value":"const fn is_leap_year(i32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns if the provided year is a leap year in the proleptic Gregorian calendar. Uses\n [astronomical year numbering](https://en.wikipedia.org/wiki/Astronomical_year_numbering).","sig":null,"attributes":[{"value":"/ Returns if the provided year is a leap year in the proleptic Gregorian calendar. Uses","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/util.rs","byte_start":434263,"byte_end":434352,"line_start":31,"line_end":31,"column_start":1,"column_end":90}},{"value":"/ [astronomical year numbering](https://en.wikipedia.org/wiki/Astronomical_year_numbering).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/util.rs","byte_start":434353,"byte_end":434446,"line_start":32,"line_end":32,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/util.rs","byte_start":434447,"byte_end":434450,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/util.rs","byte_start":434451,"byte_end":434462,"line_start":34,"line_end":34,"column_start":1,"column_end":12}},{"value":"/ # use time::util::is_leap_year;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/util.rs","byte_start":434463,"byte_end":434498,"line_start":35,"line_end":35,"column_start":1,"column_end":36}},{"value":"/ assert!(!is_leap_year(1900));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/util.rs","byte_start":434499,"byte_end":434532,"line_start":36,"line_end":36,"column_start":1,"column_end":34}},{"value":"/ assert!(is_leap_year(2000));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/util.rs","byte_start":434533,"byte_end":434565,"line_start":37,"line_end":37,"column_start":1,"column_end":33}},{"value":"/ assert!(is_leap_year(2004));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/util.rs","byte_start":434566,"byte_end":434598,"line_start":38,"line_end":38,"column_start":1,"column_end":33}},{"value":"/ assert!(!is_leap_year(2005));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/util.rs","byte_start":434599,"byte_end":434632,"line_start":39,"line_end":39,"column_start":1,"column_end":34}},{"value":"/ assert!(!is_leap_year(2100));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/util.rs","byte_start":434633,"byte_end":434666,"line_start":40,"line_end":40,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/util.rs","byte_start":434667,"byte_end":434674,"line_start":41,"line_end":41,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2621},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/util.rs","byte_start":435173,"byte_end":435185,"line_start":58,"line_end":58,"column_start":14,"column_end":26},"name":"days_in_year","qualname":"::util::days_in_year","value":"const fn days_in_year(i32) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the number of calendar days in a given year.","sig":null,"attributes":[{"value":"/ Get the number of calendar days in a given year.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/util.rs","byte_start":434781,"byte_end":434833,"line_start":46,"line_end":46,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/util.rs","byte_start":434834,"byte_end":434837,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ The returned value will always be either 365 or 366.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/util.rs","byte_start":434838,"byte_end":434894,"line_start":48,"line_end":48,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/util.rs","byte_start":434895,"byte_end":434898,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/util.rs","byte_start":434899,"byte_end":434910,"line_start":50,"line_end":50,"column_start":1,"column_end":12}},{"value":"/ # use time::util::days_in_year;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/util.rs","byte_start":434911,"byte_end":434946,"line_start":51,"line_end":51,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(days_in_year(1900), 365);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/util.rs","byte_start":434947,"byte_end":434987,"line_start":52,"line_end":52,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(days_in_year(2000), 366);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/util.rs","byte_start":434988,"byte_end":435028,"line_start":53,"line_end":53,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(days_in_year(2004), 366);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/util.rs","byte_start":435029,"byte_end":435069,"line_start":54,"line_end":54,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(days_in_year(2005), 365);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/util.rs","byte_start":435070,"byte_end":435110,"line_start":55,"line_end":55,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(days_in_year(2100), 365);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/util.rs","byte_start":435111,"byte_end":435151,"line_start":56,"line_end":56,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/util.rs","byte_start":435152,"byte_end":435159,"line_start":57,"line_end":57,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2622},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/util.rs","byte_start":435516,"byte_end":435529,"line_start":71,"line_end":71,"column_start":14,"column_end":27},"name":"weeks_in_year","qualname":"::util::weeks_in_year","value":"const fn weeks_in_year(i32) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the number of weeks in the ISO year.","sig":null,"attributes":[{"value":"/ Get the number of weeks in the ISO year.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/util.rs","byte_start":435256,"byte_end":435300,"line_start":62,"line_end":62,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/util.rs","byte_start":435301,"byte_end":435304,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ The returned value will always be either 52 or 53.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/util.rs","byte_start":435305,"byte_end":435359,"line_start":64,"line_end":64,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/util.rs","byte_start":435360,"byte_end":435363,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/util.rs","byte_start":435364,"byte_end":435375,"line_start":66,"line_end":66,"column_start":1,"column_end":12}},{"value":"/ # use time::util::weeks_in_year;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/util.rs","byte_start":435376,"byte_end":435412,"line_start":67,"line_end":67,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(weeks_in_year(2019), 52);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/util.rs","byte_start":435413,"byte_end":435453,"line_start":68,"line_end":68,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(weeks_in_year(2020), 53);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/util.rs","byte_start":435454,"byte_end":435494,"line_start":69,"line_end":69,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/util.rs","byte_start":435495,"byte_end":435502,"line_start":70,"line_end":70,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4038},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/weekday.rs","byte_start":436488,"byte_end":436494,"line_start":17,"line_end":17,"column_start":5,"column_end":11},"name":"Monday","qualname":"::weekday::Weekday::Monday","value":"Weekday::Monday","parent":{"krate":0,"index":4037},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/weekday.rs","byte_start":436436,"byte_end":436483,"line_start":16,"line_end":16,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4040},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/weekday.rs","byte_start":436552,"byte_end":436559,"line_start":19,"line_end":19,"column_start":5,"column_end":12},"name":"Tuesday","qualname":"::weekday::Weekday::Tuesday","value":"Weekday::Tuesday","parent":{"krate":0,"index":4037},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/weekday.rs","byte_start":436500,"byte_end":436547,"line_start":18,"line_end":18,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4042},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/weekday.rs","byte_start":436617,"byte_end":436626,"line_start":21,"line_end":21,"column_start":5,"column_end":14},"name":"Wednesday","qualname":"::weekday::Weekday::Wednesday","value":"Weekday::Wednesday","parent":{"krate":0,"index":4037},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/weekday.rs","byte_start":436565,"byte_end":436612,"line_start":20,"line_end":20,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4044},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/weekday.rs","byte_start":436684,"byte_end":436692,"line_start":23,"line_end":23,"column_start":5,"column_end":13},"name":"Thursday","qualname":"::weekday::Weekday::Thursday","value":"Weekday::Thursday","parent":{"krate":0,"index":4037},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/weekday.rs","byte_start":436632,"byte_end":436679,"line_start":22,"line_end":22,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4046},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/weekday.rs","byte_start":436750,"byte_end":436756,"line_start":25,"line_end":25,"column_start":5,"column_end":11},"name":"Friday","qualname":"::weekday::Weekday::Friday","value":"Weekday::Friday","parent":{"krate":0,"index":4037},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/weekday.rs","byte_start":436698,"byte_end":436745,"line_start":24,"line_end":24,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4048},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/weekday.rs","byte_start":436814,"byte_end":436822,"line_start":27,"line_end":27,"column_start":5,"column_end":13},"name":"Saturday","qualname":"::weekday::Weekday::Saturday","value":"Weekday::Saturday","parent":{"krate":0,"index":4037},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/weekday.rs","byte_start":436762,"byte_end":436809,"line_start":26,"line_end":26,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4050},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/weekday.rs","byte_start":436880,"byte_end":436886,"line_start":29,"line_end":29,"column_start":5,"column_end":11},"name":"Sunday","qualname":"::weekday::Weekday::Sunday","value":"Weekday::Sunday","parent":{"krate":0,"index":4037},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/weekday.rs","byte_start":436828,"byte_end":436875,"line_start":28,"line_end":28,"column_start":5,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":4037},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/weekday.rs","byte_start":436422,"byte_end":436429,"line_start":15,"line_end":15,"column_start":10,"column_end":17},"name":"Weekday","qualname":"::weekday::Weekday","value":"enum Weekday {\n    Monday,\n    Tuesday,\n    Wednesday,\n    Thursday,\n    Friday,\n    Saturday,\n    Sunday,\n}","parent":null,"children":[{"krate":0,"index":4038},{"krate":0,"index":4040},{"krate":0,"index":4042},{"krate":0,"index":4044},{"krate":0,"index":4046},{"krate":0,"index":4048},{"krate":0,"index":4050}],"decl_id":null,"docs":" Days of the week.","sig":null,"attributes":[{"value":"/ Days of the week.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/weekday.rs","byte_start":436175,"byte_end":436196,"line_start":10,"line_end":10,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/weekday.rs","byte_start":436197,"byte_end":436200,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ As order is dependent on context (Sunday could be either two days after or five days before","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/weekday.rs","byte_start":436201,"byte_end":436296,"line_start":12,"line_end":12,"column_start":1,"column_end":96}},{"value":"/ Friday), this type does not implement `PartialOrd` or `Ord`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/weekday.rs","byte_start":436297,"byte_end":436361,"line_start":13,"line_end":13,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2639},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/weekday.rs","byte_start":437088,"byte_end":437096,"line_start":39,"line_end":39,"column_start":18,"column_end":26},"name":"previous","qualname":"<Weekday>::previous","value":"const fn previous(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the previous weekday.","sig":null,"attributes":[{"value":"/ Get the previous weekday.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/weekday.rs","byte_start":436910,"byte_end":436939,"line_start":33,"line_end":33,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/weekday.rs","byte_start":436944,"byte_end":436947,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/weekday.rs","byte_start":436952,"byte_end":436963,"line_start":35,"line_end":35,"column_start":5,"column_end":16}},{"value":"/ # use time::Weekday;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/weekday.rs","byte_start":436968,"byte_end":436992,"line_start":36,"line_end":36,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(Weekday::Tuesday.previous(), Weekday::Monday);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/weekday.rs","byte_start":436997,"byte_end":437058,"line_start":37,"line_end":37,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/weekday.rs","byte_start":437063,"byte_end":437070,"line_start":38,"line_end":38,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2640},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/weekday.rs","byte_start":437551,"byte_end":437555,"line_start":57,"line_end":57,"column_start":18,"column_end":22},"name":"next","qualname":"<Weekday>::next","value":"const fn next(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the next weekday.","sig":null,"attributes":[{"value":"/ Get the next weekday.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/weekday.rs","byte_start":437381,"byte_end":437406,"line_start":51,"line_end":51,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/weekday.rs","byte_start":437411,"byte_end":437414,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/weekday.rs","byte_start":437419,"byte_end":437430,"line_start":53,"line_end":53,"column_start":5,"column_end":16}},{"value":"/ # use time::Weekday;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/weekday.rs","byte_start":437435,"byte_end":437459,"line_start":54,"line_end":54,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(Weekday::Monday.next(), Weekday::Tuesday);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/weekday.rs","byte_start":437464,"byte_end":437521,"line_start":55,"line_end":55,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/weekday.rs","byte_start":437526,"byte_end":437533,"line_start":56,"line_end":56,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2641},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/weekday.rs","byte_start":438076,"byte_end":438094,"line_start":76,"line_end":76,"column_start":18,"column_end":36},"name":"number_from_monday","qualname":"<Weekday>::number_from_monday","value":"const fn number_from_monday(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the one-indexed number of days from Monday.","sig":null,"attributes":[{"value":"/ Get the one-indexed number of days from Monday.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/weekday.rs","byte_start":437840,"byte_end":437891,"line_start":69,"line_end":69,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/weekday.rs","byte_start":437896,"byte_end":437899,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/weekday.rs","byte_start":437904,"byte_end":437915,"line_start":71,"line_end":71,"column_start":5,"column_end":16}},{"value":"/ # use time::Weekday;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/weekday.rs","byte_start":437920,"byte_end":437944,"line_start":72,"line_end":72,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(Weekday::Monday.number_from_monday(), 1);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/weekday.rs","byte_start":437949,"byte_end":438005,"line_start":73,"line_end":73,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/weekday.rs","byte_start":438010,"byte_end":438017,"line_start":74,"line_end":74,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2642},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/weekday.rs","byte_start":438358,"byte_end":438376,"line_start":86,"line_end":86,"column_start":18,"column_end":36},"name":"number_from_sunday","qualname":"<Weekday>::number_from_sunday","value":"const fn number_from_sunday(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the one-indexed number of days from Sunday.","sig":null,"attributes":[{"value":"/ Get the one-indexed number of days from Sunday.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/weekday.rs","byte_start":438163,"byte_end":438214,"line_start":80,"line_end":80,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/weekday.rs","byte_start":438219,"byte_end":438222,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/weekday.rs","byte_start":438227,"byte_end":438238,"line_start":82,"line_end":82,"column_start":5,"column_end":16}},{"value":"/ # use time::Weekday;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/weekday.rs","byte_start":438243,"byte_end":438267,"line_start":83,"line_end":83,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(Weekday::Monday.number_from_sunday(), 2);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/weekday.rs","byte_start":438272,"byte_end":438328,"line_start":84,"line_end":84,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/weekday.rs","byte_start":438333,"byte_end":438340,"line_start":85,"line_end":85,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2643},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/weekday.rs","byte_start":438646,"byte_end":438669,"line_start":96,"line_end":96,"column_start":18,"column_end":41},"name":"number_days_from_monday","qualname":"<Weekday>::number_days_from_monday","value":"const fn number_days_from_monday(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the zero-indexed number of days from Monday.","sig":null,"attributes":[{"value":"/ Get the zero-indexed number of days from Monday.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/weekday.rs","byte_start":438445,"byte_end":438497,"line_start":90,"line_end":90,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/weekday.rs","byte_start":438502,"byte_end":438505,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/weekday.rs","byte_start":438510,"byte_end":438521,"line_start":92,"line_end":92,"column_start":5,"column_end":16}},{"value":"/ # use time::Weekday;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/weekday.rs","byte_start":438526,"byte_end":438550,"line_start":93,"line_end":93,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(Weekday::Monday.number_days_from_monday(), 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/weekday.rs","byte_start":438555,"byte_end":438616,"line_start":94,"line_end":94,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/weekday.rs","byte_start":438621,"byte_end":438628,"line_start":95,"line_end":95,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2644},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/weekday.rs","byte_start":438914,"byte_end":438937,"line_start":106,"line_end":106,"column_start":18,"column_end":41},"name":"number_days_from_sunday","qualname":"<Weekday>::number_days_from_sunday","value":"const fn number_days_from_sunday(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the zero-indexed number of days from Sunday.","sig":null,"attributes":[{"value":"/ Get the zero-indexed number of days from Sunday.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/weekday.rs","byte_start":438713,"byte_end":438765,"line_start":100,"line_end":100,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/weekday.rs","byte_start":438770,"byte_end":438773,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/weekday.rs","byte_start":438778,"byte_end":438789,"line_start":102,"line_end":102,"column_start":5,"column_end":16}},{"value":"/ # use time::Weekday;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/weekday.rs","byte_start":438794,"byte_end":438818,"line_start":103,"line_end":103,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(Weekday::Monday.number_days_from_sunday(), 1);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/weekday.rs","byte_start":438823,"byte_end":438884,"line_start":104,"line_end":104,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/weekday.rs","byte_start":438889,"byte_end":438896,"line_start":105,"line_end":105,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2646},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/weekday.rs","byte_start":439209,"byte_end":439212,"line_start":120,"line_end":120,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Weekday as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10117},"children":[],"decl_id":{"krate":2,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2649},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/weekday.rs","byte_start":439631,"byte_end":439639,"line_start":136,"line_end":136,"column_start":8,"column_end":16},"name":"from_str","qualname":"<Weekday as std::str::FromStr>::from_str","value":"fn from_str(&str) -> Result<Self, Self::Err>","parent":{"krate":2,"index":12767},"children":[],"decl_id":{"krate":2,"index":12769},"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2680},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":11003,"byte_end":11009,"line_start":332,"line_end":332,"column_start":10,"column_end":16},"name":"Result","qualname":"::Result","value":"core::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" An alias for [`std::result::Result`] with a generic error from the time crate.\n","sig":null,"attributes":[{"value":"/ An alias for [`std::result::Result`] with a generic error from the time crate.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":10911,"byte_end":10993,"line_start":331,"line_end":331,"column_start":1,"column_end":83}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":12482,"byte_end":12486,"line_start":44,"line_end":44,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":12718,"byte_end":12722,"line_start":53,"line_end":53,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":40416,"byte_end":40420,"line_start":814,"line_end":814,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":43907,"byte_end":43911,"line_start":922,"line_end":922,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":119},{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":44788,"byte_end":44792,"line_start":946,"line_end":946,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":45400,"byte_end":45404,"line_start":964,"line_end":964,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":46084,"byte_end":46088,"line_start":989,"line_end":989,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":46297,"byte_end":46301,"line_start":998,"line_end":998,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":133},{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":46614,"byte_end":46618,"line_start":1009,"line_end":1009,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":136},{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":46834,"byte_end":46838,"line_start":1018,"line_end":1018,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":139},{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":47148,"byte_end":47152,"line_start":1029,"line_end":1029,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":142},{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":47956,"byte_end":47963,"line_start":22,"line_end":22,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":48675,"byte_end":48683,"line_start":44,"line_end":44,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":48918,"byte_end":48926,"line_start":53,"line_end":53,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":75309,"byte_end":75317,"line_start":771,"line_end":771,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":77583,"byte_end":77591,"line_start":838,"line_end":838,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":248},{"krate":0,"index":249}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":77959,"byte_end":77970,"line_start":852,"line_end":852,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":252},{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":78410,"byte_end":78418,"line_start":869,"line_end":869,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":257},{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":78611,"byte_end":78619,"line_start":878,"line_end":878,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":260},{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":78870,"byte_end":78881,"line_start":887,"line_end":887,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":263},{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":79068,"byte_end":79079,"line_start":897,"line_end":897,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":79338,"byte_end":79346,"line_start":906,"line_end":906,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":268},{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":79493,"byte_end":79501,"line_start":914,"line_end":914,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":271},{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":79699,"byte_end":79707,"line_start":923,"line_end":923,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":274},{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":79940,"byte_end":79951,"line_start":932,"line_end":932,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":277},{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":80255,"byte_end":80266,"line_start":944,"line_end":944,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":280}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":81522,"byte_end":81530,"line_start":987,"line_end":987,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":283},{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":81821,"byte_end":81829,"line_start":1003,"line_end":1003,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":289},{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":82187,"byte_end":82195,"line_start":1021,"line_end":1021,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":295},{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":82350,"byte_end":82358,"line_start":1029,"line_end":1029,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":298},{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":82575,"byte_end":82583,"line_start":1039,"line_end":1039,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":301},{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":82744,"byte_end":82752,"line_start":1047,"line_end":1047,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":82914,"byte_end":82925,"line_start":1055,"line_end":1055,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":307},{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":83093,"byte_end":83101,"line_start":1063,"line_end":1063,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":83230,"byte_end":83241,"line_start":1069,"line_end":1069,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":312}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":83349,"byte_end":83357,"line_start":1075,"line_end":1075,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":83735,"byte_end":83746,"line_start":1089,"line_end":1089,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":83888,"byte_end":83896,"line_start":1095,"line_end":1095,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":319}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":84045,"byte_end":84053,"line_start":1101,"line_end":1101,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/component_range.rs","byte_start":89232,"byte_end":89246,"line_start":25,"line_end":25,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":335},{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/component_range.rs","byte_start":89678,"byte_end":89692,"line_start":38,"line_end":38,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/component_range.rs","byte_start":90071,"byte_end":90076,"line_start":54,"line_end":54,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/component_range.rs","byte_start":90206,"byte_end":90220,"line_start":60,"line_end":60,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":342},{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/component_range.rs","byte_start":91145,"byte_end":91159,"line_start":92,"line_end":92,"column_start":28,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/conversion_range.rs","byte_start":91440,"byte_end":91455,"line_start":12,"line_end":12,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/conversion_range.rs","byte_start":91653,"byte_end":91668,"line_start":19,"line_end":19,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/conversion_range.rs","byte_start":91711,"byte_end":91716,"line_start":21,"line_end":21,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":356}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/conversion_range.rs","byte_start":91838,"byte_end":91853,"line_start":27,"line_end":27,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":358},{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/different_variant.rs","byte_start":92395,"byte_end":92411,"line_start":10,"line_end":10,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":365}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/different_variant.rs","byte_start":92605,"byte_end":92621,"line_start":17,"line_end":17,"column_start":28,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/different_variant.rs","byte_start":92665,"byte_end":92670,"line_start":19,"line_end":19,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/different_variant.rs","byte_start":92794,"byte_end":92810,"line_start":25,"line_end":25,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":370},{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/format.rs","byte_start":93766,"byte_end":93772,"line_start":25,"line_end":25,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/format.rs","byte_start":94332,"byte_end":94338,"line_start":41,"line_end":41,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/format.rs","byte_start":94442,"byte_end":94447,"line_start":47,"line_end":47,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":387},{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/format.rs","byte_start":94733,"byte_end":94739,"line_start":59,"line_end":59,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/format.rs","byte_start":95073,"byte_end":95078,"line_start":69,"line_end":69,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/format.rs","byte_start":95254,"byte_end":95260,"line_start":76,"line_end":76,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":394},{"krate":0,"index":395}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/invalid_format_description.rs","byte_start":97227,"byte_end":97232,"line_start":50,"line_end":50,"column_start":48,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":407}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/invalid_format_description.rs","byte_start":97504,"byte_end":97528,"line_start":60,"line_end":60,"column_start":32,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":409},{"krate":0,"index":410}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/invalid_format_description.rs","byte_start":97816,"byte_end":97840,"line_start":71,"line_end":71,"column_start":23,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":412}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/invalid_format_description.rs","byte_start":98607,"byte_end":98631,"line_start":92,"line_end":92,"column_start":28,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/invalid_variant.rs","byte_start":98901,"byte_end":98915,"line_start":10,"line_end":10,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":420}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/invalid_variant.rs","byte_start":99092,"byte_end":99106,"line_start":17,"line_end":17,"column_start":28,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/invalid_variant.rs","byte_start":99148,"byte_end":99153,"line_start":19,"line_end":19,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":423}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/invalid_variant.rs","byte_start":99273,"byte_end":99287,"line_start":25,"line_end":25,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":425},{"krate":0,"index":426}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/parse.rs","byte_start":100255,"byte_end":100260,"line_start":22,"line_end":22,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/parse.rs","byte_start":100625,"byte_end":100630,"line_start":33,"line_end":33,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/parse.rs","byte_start":100995,"byte_end":101000,"line_start":44,"line_end":44,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/parse.rs","byte_start":101170,"byte_end":101183,"line_start":51,"line_end":51,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":448},{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/parse.rs","byte_start":101519,"byte_end":101524,"line_start":63,"line_end":63,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/parse.rs","byte_start":101708,"byte_end":101728,"line_start":70,"line_end":70,"column_start":25,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":453},{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/parse.rs","byte_start":102063,"byte_end":102068,"line_start":82,"line_end":82,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/parse.rs","byte_start":102469,"byte_end":102474,"line_start":93,"line_end":93,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":458},{"krate":0,"index":459}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/parse_from_description.rs","byte_start":103505,"byte_end":103525,"line_start":19,"line_end":19,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":468}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/parse_from_description.rs","byte_start":103900,"byte_end":103920,"line_start":31,"line_end":31,"column_start":28,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/parse_from_description.rs","byte_start":104027,"byte_end":104032,"line_start":34,"line_end":34,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/parse_from_description.rs","byte_start":104233,"byte_end":104253,"line_start":41,"line_end":41,"column_start":32,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":473},{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/try_from_parsed.rs","byte_start":105150,"byte_end":105163,"line_start":19,"line_end":19,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":483}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/try_from_parsed.rs","byte_start":105528,"byte_end":105541,"line_start":30,"line_end":30,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":485}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/try_from_parsed.rs","byte_start":105672,"byte_end":105686,"line_start":36,"line_end":36,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":487},{"krate":0,"index":488}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/try_from_parsed.rs","byte_start":105995,"byte_end":106008,"line_start":48,"line_end":48,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":490}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/try_from_parsed.rs","byte_start":106318,"byte_end":106323,"line_start":58,"line_end":58,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":492}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/try_from_parsed.rs","byte_start":106510,"byte_end":106523,"line_start":65,"line_end":65,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":494},{"krate":0,"index":495}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/mod.rs","byte_start":86497,"byte_end":86502,"line_start":67,"line_end":67,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":527}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/mod.rs","byte_start":87513,"byte_end":87518,"line_start":91,"line_end":91,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":529}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/component.rs","byte_start":122117,"byte_end":122131,"line_start":78,"line_end":78,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":641},{"krate":0,"index":642}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":139585,"byte_end":139594,"line_start":385,"line_end":385,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":660}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601/adt_hack.rs","byte_start":157871,"byte_end":157878,"line_start":21,"line_end":21,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":741},{"krate":0,"index":742},{"krate":0,"index":743},{"krate":0,"index":744},{"krate":0,"index":745},{"krate":0,"index":746},{"krate":0,"index":747},{"krate":0,"index":748},{"krate":0,"index":749}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601/adt_hack.rs","byte_start":159298,"byte_end":159304,"line_start":51,"line_end":51,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":751},{"krate":0,"index":753}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":150750,"byte_end":150757,"line_start":48,"line_end":48,"column_start":56,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":768}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":150967,"byte_end":150974,"line_start":56,"line_end":56,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":770}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":151743,"byte_end":151750,"line_start":74,"line_end":74,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":772}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":154814,"byte_end":154820,"line_start":164,"line_end":164,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":774},{"krate":0,"index":775},{"krate":0,"index":776},{"krate":0,"index":777},{"krate":0,"index":778},{"krate":0,"index":779},{"krate":0,"index":780}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","byte_start":117985,"byte_end":117995,"line_start":77,"line_end":77,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":793}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","byte_start":118527,"byte_end":118537,"line_start":89,"line_end":89,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":795}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","byte_start":118665,"byte_end":118674,"line_start":95,"line_end":95,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":797},{"krate":0,"index":798}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","byte_start":118981,"byte_end":118991,"line_start":106,"line_end":106,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":801}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","byte_start":119446,"byte_end":119456,"line_start":123,"line_end":123,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":807}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","byte_start":119628,"byte_end":119637,"line_start":129,"line_end":129,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":809}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","byte_start":119756,"byte_end":119766,"line_start":135,"line_end":135,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":811}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/formatting/formattable.rs","byte_start":185963,"byte_end":185973,"line_start":17,"line_end":17,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/formatting/formattable.rs","byte_start":186043,"byte_end":186050,"line_start":19,"line_end":19,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/formatting/formattable.rs","byte_start":186075,"byte_end":186082,"line_start":20,"line_end":20,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/formatting/formattable.rs","byte_start":186136,"byte_end":186143,"line_start":21,"line_end":21,"column_start":51,"column_end":58},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/formatting/formattable.rs","byte_start":186186,"byte_end":186187,"line_start":22,"line_end":22,"column_start":32,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/formatting/formattable.rs","byte_start":187344,"byte_end":187354,"line_start":56,"line_end":56,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":887}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/formatting/formattable.rs","byte_start":188555,"byte_end":188556,"line_start":93,"line_end":93,"column_start":35,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":895}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/formatting/formattable.rs","byte_start":188951,"byte_end":188958,"line_start":110,"line_end":110,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":898}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/formatting/formattable.rs","byte_start":190915,"byte_end":190922,"line_start":159,"line_end":159,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":908}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/formatting/formattable.rs","byte_start":194127,"byte_end":194134,"line_start":234,"line_end":234,"column_start":54,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":929}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":202737,"byte_end":202744,"line_start":33,"line_end":33,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1156},{"krate":0,"index":1157},{"krate":0,"index":1158},{"krate":0,"index":1159},{"krate":0,"index":1160}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":205681,"byte_end":205688,"line_start":117,"line_end":117,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1162}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":205788,"byte_end":205798,"line_start":123,"line_end":123,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1164}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":205881,"byte_end":205888,"line_start":129,"line_end":129,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1166},{"krate":0,"index":1167}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":206424,"byte_end":206431,"line_start":144,"line_end":144,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1169},{"krate":0,"index":1170}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":206575,"byte_end":206585,"line_start":152,"line_end":152,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1172},{"krate":0,"index":1173}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":206730,"byte_end":206737,"line_start":160,"line_end":160,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1175},{"krate":0,"index":1176}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":207124,"byte_end":207134,"line_start":175,"line_end":175,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1178},{"krate":0,"index":1179}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":207289,"byte_end":207296,"line_start":183,"line_end":183,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1181},{"krate":0,"index":1182}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":207537,"byte_end":207544,"line_start":194,"line_end":194,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1184},{"krate":0,"index":1185}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":207931,"byte_end":207941,"line_start":209,"line_end":209,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1187},{"krate":0,"index":1188}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":208096,"byte_end":208103,"line_start":217,"line_end":217,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1190},{"krate":0,"index":1191}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":208352,"byte_end":208359,"line_start":228,"line_end":228,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1193}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":208467,"byte_end":208477,"line_start":234,"line_end":234,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1195}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":208587,"byte_end":208594,"line_start":240,"line_end":240,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1197}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":208733,"byte_end":208743,"line_start":246,"line_end":246,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1199}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":208878,"byte_end":208885,"line_start":252,"line_end":252,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1201}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":208979,"byte_end":208986,"line_start":258,"line_end":258,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1203}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/month.rs","byte_start":214991,"byte_end":214996,"line_start":29,"line_end":29,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1235},{"krate":0,"index":1236},{"krate":0,"index":1237}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/month.rs","byte_start":216975,"byte_end":216980,"line_start":102,"line_end":102,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1239}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/month.rs","byte_start":217504,"byte_end":217509,"line_start":121,"line_end":121,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1241},{"krate":0,"index":1242}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/month.rs","byte_start":218234,"byte_end":218239,"line_start":149,"line_end":149,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1246},{"krate":0,"index":1247}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":219880,"byte_end":219894,"line_start":38,"line_end":38,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1324},{"krate":0,"index":1325},{"krate":0,"index":1326},{"krate":0,"index":1327},{"krate":0,"index":1328},{"krate":0,"index":1331},{"krate":0,"index":1332},{"krate":0,"index":1333},{"krate":0,"index":1334},{"krate":0,"index":1335},{"krate":0,"index":1336},{"krate":0,"index":1337},{"krate":0,"index":1338},{"krate":0,"index":1339},{"krate":0,"index":1340},{"krate":0,"index":1341},{"krate":0,"index":1342},{"krate":0,"index":1343},{"krate":0,"index":1344},{"krate":0,"index":1345},{"krate":0,"index":1346},{"krate":0,"index":1347},{"krate":0,"index":1348},{"krate":0,"index":1349},{"krate":0,"index":1350},{"krate":0,"index":1351},{"krate":0,"index":1352},{"krate":0,"index":1353},{"krate":0,"index":1354},{"krate":0,"index":1355},{"krate":0,"index":1356},{"krate":0,"index":1357},{"krate":0,"index":1358},{"krate":0,"index":1359},{"krate":0,"index":1360},{"krate":0,"index":1361},{"krate":0,"index":1362}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":246619,"byte_end":246633,"line_start":818,"line_end":818,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1364},{"krate":0,"index":1365},{"krate":0,"index":1366},{"krate":0,"index":1367},{"krate":0,"index":1368},{"krate":0,"index":1369},{"krate":0,"index":1370},{"krate":0,"index":1371},{"krate":0,"index":1372},{"krate":0,"index":1373},{"krate":0,"index":1374},{"krate":0,"index":1375},{"krate":0,"index":1376}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":255620,"byte_end":255634,"line_start":1046,"line_end":1046,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1378},{"krate":0,"index":1381}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":256876,"byte_end":256890,"line_start":1083,"line_end":1083,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1384},{"krate":0,"index":1386}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":258671,"byte_end":258685,"line_start":1130,"line_end":1130,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1388}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":258905,"byte_end":258919,"line_start":1138,"line_end":1138,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1390}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":259070,"byte_end":259084,"line_start":1144,"line_end":1144,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1392}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":259197,"byte_end":259211,"line_start":1150,"line_end":1150,"column_start":14,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1394}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":259377,"byte_end":259391,"line_start":1157,"line_end":1157,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1396}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":259667,"byte_end":259681,"line_start":1165,"line_end":1165,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1400},{"krate":0,"index":1401}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":259966,"byte_end":259980,"line_start":1178,"line_end":1178,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1404},{"krate":0,"index":1405}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":260259,"byte_end":260273,"line_start":1191,"line_end":1191,"column_start":14,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1407},{"krate":0,"index":1408}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":260592,"byte_end":260602,"line_start":1202,"line_end":1202,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1410},{"krate":0,"index":1411}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":261062,"byte_end":261072,"line_start":1220,"line_end":1220,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1413},{"krate":0,"index":1414}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":261333,"byte_end":261347,"line_start":1231,"line_end":1231,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1416},{"krate":0,"index":1417}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":261524,"byte_end":261534,"line_start":1240,"line_end":1240,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1419},{"krate":0,"index":1420}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":261727,"byte_end":261741,"line_start":1249,"line_end":1249,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1422}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":261891,"byte_end":261901,"line_start":1256,"line_end":1256,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1424}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":262062,"byte_end":262076,"line_start":1263,"line_end":1263,"column_start":33,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1426}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":262262,"byte_end":262272,"line_start":1270,"line_end":1270,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1428}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":262461,"byte_end":262475,"line_start":1277,"line_end":1277,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1430}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":262847,"byte_end":262857,"line_start":1288,"line_end":1288,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1432}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/combinator/rfc/iso8601.rs","byte_start":273101,"byte_end":273113,"line_start":23,"line_end":23,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1471},{"krate":0,"index":1472},{"krate":0,"index":1473},{"krate":0,"index":1474}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/iso8601.rs","byte_start":294066,"byte_end":294073,"line_start":13,"line_end":13,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1772},{"krate":0,"index":1782},{"krate":0,"index":1789}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsable.rs","byte_start":307075,"byte_end":307085,"line_start":15,"line_end":15,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsable.rs","byte_start":307149,"byte_end":307156,"line_start":17,"line_end":17,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsable.rs","byte_start":307178,"byte_end":307185,"line_start":18,"line_end":18,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsable.rs","byte_start":307236,"byte_end":307243,"line_start":19,"line_end":19,"column_start":48,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsable.rs","byte_start":307283,"byte_end":307284,"line_start":20,"line_end":20,"column_start":29,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsable.rs","byte_start":309620,"byte_end":309630,"line_start":82,"line_end":82,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1876}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsable.rs","byte_start":310089,"byte_end":310090,"line_start":102,"line_end":102,"column_start":35,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1883}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsable.rs","byte_start":310402,"byte_end":310409,"line_start":117,"line_end":117,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1886},{"krate":0,"index":1958}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsable.rs","byte_start":324175,"byte_end":324182,"line_start":444,"line_end":444,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2011},{"krate":0,"index":2070}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsable.rs","byte_start":333842,"byte_end":333849,"line_start":670,"line_end":670,"column_start":54,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2115}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":338618,"byte_end":338624,"line_start":71,"line_end":71,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2223},{"krate":0,"index":2224},{"krate":0,"index":2225},{"krate":0,"index":2226},{"krate":0,"index":2227},{"krate":0,"index":2228},{"krate":0,"index":2229},{"krate":0,"index":2230},{"krate":0,"index":2231},{"krate":0,"index":2232},{"krate":0,"index":2233},{"krate":0,"index":2234},{"krate":0,"index":2235},{"krate":0,"index":2236}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":339355,"byte_end":339361,"line_start":90,"line_end":90,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2238},{"krate":0,"index":2239},{"krate":0,"index":2241},{"krate":0,"index":2243},{"krate":0,"index":2245}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":348596,"byte_end":348602,"line_start":298,"line_end":298,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":3857},{"krate":0,"index":3858},{"krate":0,"index":3859},{"krate":0,"index":3860},{"krate":0,"index":3861},{"krate":0,"index":3862},{"krate":0,"index":3863},{"krate":0,"index":3864},{"krate":0,"index":3865},{"krate":0,"index":3866},{"krate":0,"index":3867},{"krate":0,"index":3868},{"krate":0,"index":3869},{"krate":0,"index":3870},{"krate":0,"index":3871},{"krate":0,"index":3872},{"krate":0,"index":3873},{"krate":0,"index":3874},{"krate":0,"index":2276},{"krate":0,"index":2277},{"krate":0,"index":2278},{"krate":0,"index":2279},{"krate":0,"index":2280}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":351855,"byte_end":351861,"line_start":386,"line_end":386,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":3875},{"krate":0,"index":3876},{"krate":0,"index":3877},{"krate":0,"index":3878},{"krate":0,"index":3879},{"krate":0,"index":3880},{"krate":0,"index":3881},{"krate":0,"index":3882},{"krate":0,"index":3883},{"krate":0,"index":3884},{"krate":0,"index":3885},{"krate":0,"index":3886},{"krate":0,"index":3887},{"krate":0,"index":3888},{"krate":0,"index":3889},{"krate":0,"index":3890},{"krate":0,"index":3891},{"krate":0,"index":3892},{"krate":0,"index":2283},{"krate":0,"index":2284},{"krate":0,"index":2285},{"krate":0,"index":2286},{"krate":0,"index":2287}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":355432,"byte_end":355438,"line_start":486,"line_end":486,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":3893},{"krate":0,"index":3894},{"krate":0,"index":3895},{"krate":0,"index":3896},{"krate":0,"index":3897},{"krate":0,"index":3898},{"krate":0,"index":3899},{"krate":0,"index":3900},{"krate":0,"index":3901},{"krate":0,"index":3902},{"krate":0,"index":3903},{"krate":0,"index":3904},{"krate":0,"index":3905},{"krate":0,"index":3906},{"krate":0,"index":3907},{"krate":0,"index":3908},{"krate":0,"index":3909},{"krate":0,"index":3910},{"krate":0,"index":2290},{"krate":0,"index":2291},{"krate":0,"index":2292},{"krate":0,"index":2293}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":357735,"byte_end":357739,"line_start":549,"line_end":549,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2295},{"krate":0,"index":2296}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":360021,"byte_end":360025,"line_start":609,"line_end":609,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2300},{"krate":0,"index":2301}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":361186,"byte_end":361195,"line_start":637,"line_end":637,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2303},{"krate":0,"index":2304}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":361966,"byte_end":361983,"line_start":659,"line_end":659,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2307},{"krate":0,"index":2308}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":362185,"byte_end":362199,"line_start":667,"line_end":667,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2310},{"krate":0,"index":2311}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/mod.rs","byte_start":264612,"byte_end":264622,"line_start":17,"line_end":17,"column_start":13,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2332},{"krate":0,"index":2335},{"krate":0,"index":2338}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/mod.rs","byte_start":265355,"byte_end":265365,"line_start":36,"line_end":36,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2342}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/mod.rs","byte_start":265580,"byte_end":265590,"line_start":44,"line_end":44,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2345}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":365624,"byte_end":365641,"line_start":24,"line_end":24,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2398},{"krate":0,"index":2399},{"krate":0,"index":2400},{"krate":0,"index":2401},{"krate":0,"index":2402},{"krate":0,"index":2403},{"krate":0,"index":2404},{"krate":0,"index":2405},{"krate":0,"index":2406},{"krate":0,"index":2407},{"krate":0,"index":2408},{"krate":0,"index":2409},{"krate":0,"index":2410},{"krate":0,"index":2411},{"krate":0,"index":2412},{"krate":0,"index":2413},{"krate":0,"index":2414},{"krate":0,"index":2415},{"krate":0,"index":2416},{"krate":0,"index":2417},{"krate":0,"index":2418},{"krate":0,"index":2419},{"krate":0,"index":2420},{"krate":0,"index":2421},{"krate":0,"index":2422},{"krate":0,"index":2423},{"krate":0,"index":2424},{"krate":0,"index":2425},{"krate":0,"index":2426},{"krate":0,"index":2427},{"krate":0,"index":2428},{"krate":0,"index":2429},{"krate":0,"index":2430}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":384248,"byte_end":384265,"line_start":580,"line_end":580,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2432},{"krate":0,"index":2433},{"krate":0,"index":2434},{"krate":0,"index":2435},{"krate":0,"index":2436},{"krate":0,"index":2437},{"krate":0,"index":2438},{"krate":0,"index":2439},{"krate":0,"index":2440},{"krate":0,"index":2441},{"krate":0,"index":2442}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":391792,"byte_end":391809,"line_start":769,"line_end":769,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2444},{"krate":0,"index":2447}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":392841,"byte_end":392858,"line_start":798,"line_end":798,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2450}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":393591,"byte_end":393608,"line_start":819,"line_end":819,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2453}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":393812,"byte_end":393829,"line_start":827,"line_end":827,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2455},{"krate":0,"index":2456}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":394037,"byte_end":394054,"line_start":836,"line_end":836,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2458},{"krate":0,"index":2459}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":394592,"byte_end":394609,"line_start":857,"line_end":857,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2461},{"krate":0,"index":2462}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":394817,"byte_end":394834,"line_start":866,"line_end":866,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2464},{"krate":0,"index":2465}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":395374,"byte_end":395391,"line_start":887,"line_end":887,"column_start":14,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2467},{"krate":0,"index":2468}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":397235,"byte_end":397239,"line_start":45,"line_end":45,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2504}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":397548,"byte_end":397552,"line_start":56,"line_end":56,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2506},{"krate":0,"index":2507},{"krate":0,"index":2508},{"krate":0,"index":2509},{"krate":0,"index":2510},{"krate":0,"index":2511},{"krate":0,"index":2512},{"krate":0,"index":2513},{"krate":0,"index":2514},{"krate":0,"index":2515},{"krate":0,"index":2516},{"krate":0,"index":2517},{"krate":0,"index":2518},{"krate":0,"index":2519},{"krate":0,"index":2520},{"krate":0,"index":2521},{"krate":0,"index":2522},{"krate":0,"index":2523},{"krate":0,"index":2524},{"krate":0,"index":2525},{"krate":0,"index":2526},{"krate":0,"index":2527},{"krate":0,"index":2528},{"krate":0,"index":2529},{"krate":0,"index":2530},{"krate":0,"index":2531},{"krate":0,"index":2532},{"krate":0,"index":2533}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":416238,"byte_end":416242,"line_start":594,"line_end":594,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2535},{"krate":0,"index":2538}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":417149,"byte_end":417153,"line_start":621,"line_end":621,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2541}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":417754,"byte_end":417758,"line_start":639,"line_end":639,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2544}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":418718,"byte_end":418722,"line_start":662,"line_end":662,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2546},{"krate":0,"index":2547}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":419188,"byte_end":419192,"line_start":677,"line_end":677,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2549},{"krate":0,"index":2550}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":419729,"byte_end":419733,"line_start":694,"line_end":694,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2552},{"krate":0,"index":2553}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":420206,"byte_end":420210,"line_start":709,"line_end":709,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2555},{"krate":0,"index":2556}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":420744,"byte_end":420748,"line_start":726,"line_end":726,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2558},{"krate":0,"index":2559}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":423004,"byte_end":423013,"line_start":33,"line_end":33,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2580},{"krate":0,"index":2581},{"krate":0,"index":2582},{"krate":0,"index":2583},{"krate":0,"index":2584},{"krate":0,"index":2585},{"krate":0,"index":2586},{"krate":0,"index":2587},{"krate":0,"index":2588},{"krate":0,"index":2589},{"krate":0,"index":2590},{"krate":0,"index":2591},{"krate":0,"index":2592}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":431397,"byte_end":431406,"line_start":275,"line_end":275,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2594},{"krate":0,"index":2597}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":432305,"byte_end":432314,"line_start":299,"line_end":299,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2600}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":432939,"byte_end":432948,"line_start":317,"line_end":317,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2603}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":433295,"byte_end":433304,"line_start":331,"line_end":331,"column_start":14,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2605},{"krate":0,"index":2606}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/weekday.rs","byte_start":436896,"byte_end":436903,"line_start":32,"line_end":32,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2639},{"krate":0,"index":2640},{"krate":0,"index":2641},{"krate":0,"index":2642},{"krate":0,"index":2643},{"krate":0,"index":2644}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/weekday.rs","byte_start":439192,"byte_end":439199,"line_start":119,"line_end":119,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2646}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/weekday.rs","byte_start":439575,"byte_end":439582,"line_start":133,"line_end":133,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2648},{"krate":0,"index":2649}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":9737,"byte_end":9742,"line_start":286,"line_end":286,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":326}},{"kind":"Mod","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":9752,"byte_end":9755,"line_start":287,"line_end":287,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":530}},{"kind":"Mod","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":9822,"byte_end":9840,"line_start":289,"line_end":289,"column_start":9,"column_end":27},"ref_id":{"krate":0,"index":596}},{"kind":"Mod","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","byte_start":115776,"byte_end":115784,"line_start":9,"line_end":9,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":643}},{"kind":"Mod","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","byte_start":116640,"byte_end":116647,"line_start":40,"line_end":40,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":713}},{"kind":"Mod","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":9881,"byte_end":9891,"line_start":291,"line_end":291,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":814}},{"kind":"Mod","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":9965,"byte_end":9971,"line_start":295,"line_end":295,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1204}},{"kind":"Mod","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":10042,"byte_end":10049,"line_start":299,"line_end":299,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1433}},{"kind":"Mod","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/lib.rs","byte_start":10511,"byte_end":10515,"line_start":316,"line_end":316,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":2607}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":12482,"byte_end":12486,"line_start":44,"line_end":44,"column_start":21,"column_end":25},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":2682},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":12718,"byte_end":12722,"line_start":53,"line_end":53,"column_start":6,"column_end":10},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":2682},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":40416,"byte_end":40420,"line_start":814,"line_end":814,"column_start":6,"column_end":10},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":2682},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":43907,"byte_end":43911,"line_start":922,"line_end":922,"column_start":6,"column_end":10},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":2682},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":44788,"byte_end":44792,"line_start":946,"line_end":946,"column_start":6,"column_end":10},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":2682},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":45400,"byte_end":45404,"line_start":964,"line_end":964,"column_start":23,"column_end":27},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":2682},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":46084,"byte_end":46088,"line_start":989,"line_end":989,"column_start":24,"column_end":28},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":2682},"to":{"krate":2,"index":3247}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":46297,"byte_end":46301,"line_start":998,"line_end":998,"column_start":27,"column_end":31},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":2682},"to":{"krate":2,"index":3247}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":46614,"byte_end":46618,"line_start":1009,"line_end":1009,"column_start":24,"column_end":28},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":2682},"to":{"krate":2,"index":3252}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":46834,"byte_end":46838,"line_start":1018,"line_end":1018,"column_start":27,"column_end":31},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":2682},"to":{"krate":2,"index":3252}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/date.rs","byte_start":47148,"byte_end":47152,"line_start":1029,"line_end":1029,"column_start":14,"column_end":18},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":2682},"to":{"krate":2,"index":3252}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":47956,"byte_end":47963,"line_start":22,"line_end":22,"column_start":18,"column_end":25},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":2709},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":48675,"byte_end":48683,"line_start":44,"line_end":44,"column_start":21,"column_end":29},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":2730},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":48918,"byte_end":48926,"line_start":53,"line_end":53,"column_start":6,"column_end":14},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":2730},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":75309,"byte_end":75317,"line_start":771,"line_end":771,"column_start":23,"column_end":31},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":2730},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":77583,"byte_end":77591,"line_start":838,"line_end":838,"column_start":31,"column_end":39},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":2730},"to":{"krate":2,"index":3092}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":77959,"byte_end":77970,"line_start":852,"line_end":852,"column_start":28,"column_end":39},"kind":{"Impl":{"id":20}},"from":{"krate":2,"index":49949},"to":{"krate":2,"index":3092}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":78410,"byte_end":78418,"line_start":869,"line_end":869,"column_start":14,"column_end":22},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":2730},"to":{"krate":2,"index":3247}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":78611,"byte_end":78619,"line_start":878,"line_end":878,"column_start":27,"column_end":35},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":2730},"to":{"krate":2,"index":3247}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":78870,"byte_end":78881,"line_start":887,"line_end":887,"column_start":24,"column_end":35},"kind":{"Impl":{"id":23}},"from":{"krate":2,"index":49949},"to":{"krate":2,"index":3247}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":79068,"byte_end":79079,"line_start":897,"line_end":897,"column_start":30,"column_end":41},"kind":{"Impl":{"id":26}},"from":{"krate":2,"index":49949},"to":{"krate":2,"index":3278}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":79338,"byte_end":79346,"line_start":906,"line_end":906,"column_start":14,"column_end":22},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":2730},"to":{"krate":2,"index":3274}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":79493,"byte_end":79501,"line_start":914,"line_end":914,"column_start":14,"column_end":22},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":2730},"to":{"krate":2,"index":3252}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":79699,"byte_end":79707,"line_start":923,"line_end":923,"column_start":27,"column_end":35},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":2730},"to":{"krate":2,"index":3252}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":79940,"byte_end":79951,"line_start":932,"line_end":932,"column_start":24,"column_end":35},"kind":{"Impl":{"id":30}},"from":{"krate":2,"index":49949},"to":{"krate":2,"index":3252}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":80255,"byte_end":80266,"line_start":944,"line_end":944,"column_start":30,"column_end":41},"kind":{"Impl":{"id":33}},"from":{"krate":2,"index":49949},"to":{"krate":2,"index":3282}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":81522,"byte_end":81530,"line_start":987,"line_end":987,"column_start":19,"column_end":27},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":2730},"to":{"krate":2,"index":3257}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":81821,"byte_end":81829,"line_start":1003,"line_end":1003,"column_start":19,"column_end":27},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":2730},"to":{"krate":2,"index":3257}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":82187,"byte_end":82195,"line_start":1021,"line_end":1021,"column_start":19,"column_end":27},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":2730},"to":{"krate":2,"index":3262}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":82350,"byte_end":82358,"line_start":1029,"line_end":1029,"column_start":19,"column_end":27},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":2730},"to":{"krate":2,"index":3262}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":82575,"byte_end":82583,"line_start":1039,"line_end":1039,"column_start":14,"column_end":22},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":2730},"to":{"krate":2,"index":3262}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":82744,"byte_end":82752,"line_start":1047,"line_end":1047,"column_start":27,"column_end":35},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":2730},"to":{"krate":2,"index":3262}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":82914,"byte_end":82925,"line_start":1055,"line_end":1055,"column_start":24,"column_end":35},"kind":{"Impl":{"id":64}},"from":{"krate":2,"index":49949},"to":{"krate":2,"index":3262}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":83093,"byte_end":83101,"line_start":1063,"line_end":1063,"column_start":33,"column_end":41},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":2730},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":83230,"byte_end":83241,"line_start":1069,"line_end":1069,"column_start":30,"column_end":41},"kind":{"Impl":{"id":66}},"from":{"krate":2,"index":49949},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":83349,"byte_end":83357,"line_start":1075,"line_end":1075,"column_start":34,"column_end":42},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":2730},"to":{"krate":2,"index":2877}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":83735,"byte_end":83746,"line_start":1089,"line_end":1089,"column_start":31,"column_end":42},"kind":{"Impl":{"id":68}},"from":{"krate":2,"index":49949},"to":{"krate":2,"index":2877}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":83888,"byte_end":83896,"line_start":1095,"line_end":1095,"column_start":14,"column_end":22},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":2730},"to":{"krate":2,"index":8238}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/duration.rs","byte_start":84045,"byte_end":84053,"line_start":1101,"line_end":1101,"column_start":28,"column_end":36},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":2730},"to":{"krate":2,"index":8238}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/component_range.rs","byte_start":89232,"byte_end":89246,"line_start":25,"line_end":25,"column_start":6,"column_end":20},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":2861},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/component_range.rs","byte_start":89678,"byte_end":89692,"line_start":38,"line_end":38,"column_start":23,"column_end":37},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":2861},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/component_range.rs","byte_start":90071,"byte_end":90076,"line_start":54,"line_end":54,"column_start":38,"column_end":43},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":3011},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/component_range.rs","byte_start":90206,"byte_end":90220,"line_start":60,"line_end":60,"column_start":32,"column_end":46},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":2861},"to":{"krate":2,"index":3092}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/component_range.rs","byte_start":91145,"byte_end":91159,"line_start":92,"line_end":92,"column_start":28,"column_end":42},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":2861},"to":{"krate":1,"index":2569}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/conversion_range.rs","byte_start":91440,"byte_end":91455,"line_start":12,"line_end":12,"column_start":23,"column_end":38},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":2882},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/conversion_range.rs","byte_start":91653,"byte_end":91668,"line_start":19,"line_end":19,"column_start":28,"column_end":43},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":2882},"to":{"krate":1,"index":2569}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/conversion_range.rs","byte_start":91711,"byte_end":91716,"line_start":21,"line_end":21,"column_start":39,"column_end":44},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":3011},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/conversion_range.rs","byte_start":91838,"byte_end":91853,"line_start":27,"line_end":27,"column_start":32,"column_end":47},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":2882},"to":{"krate":2,"index":3092}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/different_variant.rs","byte_start":92395,"byte_end":92411,"line_start":10,"line_end":10,"column_start":23,"column_end":39},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":2895},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/different_variant.rs","byte_start":92605,"byte_end":92621,"line_start":17,"line_end":17,"column_start":28,"column_end":44},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":2895},"to":{"krate":1,"index":2569}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/different_variant.rs","byte_start":92665,"byte_end":92670,"line_start":19,"line_end":19,"column_start":40,"column_end":45},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":3011},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/different_variant.rs","byte_start":92794,"byte_end":92810,"line_start":25,"line_end":25,"column_start":32,"column_end":48},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":2895},"to":{"krate":2,"index":3092}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/format.rs","byte_start":93766,"byte_end":93772,"line_start":25,"line_end":25,"column_start":23,"column_end":29},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":2908},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/format.rs","byte_start":94332,"byte_end":94338,"line_start":41,"line_end":41,"column_start":26,"column_end":32},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":2908},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/format.rs","byte_start":94442,"byte_end":94447,"line_start":47,"line_end":47,"column_start":30,"column_end":35},"kind":{"Impl":{"id":86}},"from":{"krate":1,"index":3959},"to":{"krate":2,"index":3092}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/format.rs","byte_start":94733,"byte_end":94739,"line_start":59,"line_end":59,"column_start":28,"column_end":34},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":2908},"to":{"krate":1,"index":2569}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/format.rs","byte_start":95073,"byte_end":95078,"line_start":69,"line_end":69,"column_start":30,"column_end":35},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":3011},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/format.rs","byte_start":95254,"byte_end":95260,"line_start":76,"line_end":76,"column_start":32,"column_end":38},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":2908},"to":{"krate":2,"index":3092}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/invalid_format_description.rs","byte_start":97227,"byte_end":97232,"line_start":50,"line_end":50,"column_start":48,"column_end":53},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":3011},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/invalid_format_description.rs","byte_start":97504,"byte_end":97528,"line_start":60,"line_end":60,"column_start":32,"column_end":56},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":2919},"to":{"krate":2,"index":3092}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/invalid_format_description.rs","byte_start":97816,"byte_end":97840,"line_start":71,"line_end":71,"column_start":23,"column_end":47},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":2919},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/invalid_format_description.rs","byte_start":98607,"byte_end":98631,"line_start":92,"line_end":92,"column_start":28,"column_end":52},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":2919},"to":{"krate":1,"index":2569}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/invalid_variant.rs","byte_start":98901,"byte_end":98915,"line_start":10,"line_end":10,"column_start":23,"column_end":37},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":2941},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/invalid_variant.rs","byte_start":99092,"byte_end":99106,"line_start":17,"line_end":17,"column_start":28,"column_end":42},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":2941},"to":{"krate":1,"index":2569}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/invalid_variant.rs","byte_start":99148,"byte_end":99153,"line_start":19,"line_end":19,"column_start":38,"column_end":43},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":3011},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/invalid_variant.rs","byte_start":99273,"byte_end":99287,"line_start":25,"line_end":25,"column_start":32,"column_end":46},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":2941},"to":{"krate":2,"index":3092}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/parse.rs","byte_start":100255,"byte_end":100260,"line_start":22,"line_end":22,"column_start":23,"column_end":28},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":2954},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/parse.rs","byte_start":100625,"byte_end":100630,"line_start":33,"line_end":33,"column_start":28,"column_end":33},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":2954},"to":{"krate":1,"index":2569}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/parse.rs","byte_start":100995,"byte_end":101000,"line_start":44,"line_end":44,"column_start":30,"column_end":35},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":2954},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/parse.rs","byte_start":101170,"byte_end":101183,"line_start":51,"line_end":51,"column_start":25,"column_end":38},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":2993},"to":{"krate":2,"index":3092}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/parse.rs","byte_start":101519,"byte_end":101524,"line_start":63,"line_end":63,"column_start":37,"column_end":42},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":2954},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/parse.rs","byte_start":101708,"byte_end":101728,"line_start":70,"line_end":70,"column_start":25,"column_end":45},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":2975},"to":{"krate":2,"index":3092}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/parse.rs","byte_start":102063,"byte_end":102068,"line_start":82,"line_end":82,"column_start":29,"column_end":34},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":3011},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/parse.rs","byte_start":102469,"byte_end":102474,"line_start":93,"line_end":93,"column_start":32,"column_end":37},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":2954},"to":{"krate":2,"index":3092}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/parse_from_description.rs","byte_start":103505,"byte_end":103525,"line_start":19,"line_end":19,"column_start":23,"column_end":43},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":2975},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/parse_from_description.rs","byte_start":103900,"byte_end":103920,"line_start":31,"line_end":31,"column_start":28,"column_end":48},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":2975},"to":{"krate":1,"index":2569}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/parse_from_description.rs","byte_start":104027,"byte_end":104032,"line_start":34,"line_end":34,"column_start":44,"column_end":49},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":3011},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/parse_from_description.rs","byte_start":104233,"byte_end":104253,"line_start":41,"line_end":41,"column_start":32,"column_end":52},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":2975},"to":{"krate":2,"index":3092}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/try_from_parsed.rs","byte_start":105150,"byte_end":105163,"line_start":19,"line_end":19,"column_start":23,"column_end":36},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":2993},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/try_from_parsed.rs","byte_start":105528,"byte_end":105541,"line_start":30,"line_end":30,"column_start":38,"column_end":51},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":2993},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/try_from_parsed.rs","byte_start":105672,"byte_end":105686,"line_start":36,"line_end":36,"column_start":40,"column_end":54},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":2861},"to":{"krate":2,"index":3092}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/try_from_parsed.rs","byte_start":105995,"byte_end":106008,"line_start":48,"line_end":48,"column_start":28,"column_end":41},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":2993},"to":{"krate":1,"index":2569}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/try_from_parsed.rs","byte_start":106318,"byte_end":106323,"line_start":58,"line_end":58,"column_start":37,"column_end":42},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":3011},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/try_from_parsed.rs","byte_start":106510,"byte_end":106523,"line_start":65,"line_end":65,"column_start":32,"column_end":45},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":2993},"to":{"krate":2,"index":3092}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/mod.rs","byte_start":86497,"byte_end":86502,"line_start":67,"line_end":67,"column_start":23,"column_end":28},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":3011},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/error/mod.rs","byte_start":87513,"byte_end":87518,"line_start":91,"line_end":91,"column_start":28,"column_end":33},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":3011},"to":{"krate":1,"index":2569}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":108844,"byte_end":108850,"line_start":60,"line_end":60,"column_start":38,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":538},"to":{"krate":0,"index":542}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/ext.rs","byte_start":112502,"byte_end":112508,"line_start":185,"line_end":185,"column_start":41,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":538},"to":{"krate":0,"index":569}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/component.rs","byte_start":122117,"byte_end":122131,"line_start":78,"line_end":78,"column_start":6,"column_end":20},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":611},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/modifier.rs","byte_start":139585,"byte_end":139594,"line_start":385,"line_end":385,"column_start":6,"column_end":15},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":3498},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601/adt_hack.rs","byte_start":157871,"byte_end":157878,"line_start":21,"line_end":21,"column_start":35,"column_end":42},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":3522},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601/adt_hack.rs","byte_start":159298,"byte_end":159304,"line_start":51,"line_end":51,"column_start":6,"column_end":12},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":3628},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":150750,"byte_end":150757,"line_start":48,"line_end":48,"column_start":56,"column_end":63},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":3522},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":150967,"byte_end":150974,"line_start":56,"line_end":56,"column_start":6,"column_end":13},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":3522},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":151743,"byte_end":151750,"line_start":74,"line_end":74,"column_start":6,"column_end":13},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":3522},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/well_known/iso8601.rs","byte_start":154814,"byte_end":154820,"line_start":164,"line_end":164,"column_start":6,"column_end":12},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":3628},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","byte_start":117985,"byte_end":117995,"line_start":77,"line_end":77,"column_start":21,"column_end":31},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":3663},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","byte_start":118527,"byte_end":118537,"line_start":89,"line_end":89,"column_start":26,"column_end":36},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":3663},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","byte_start":118665,"byte_end":118674,"line_start":95,"line_end":95,"column_start":34,"column_end":43},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":3040},"to":{"krate":2,"index":3092}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","byte_start":118981,"byte_end":118991,"line_start":106,"line_end":106,"column_start":41,"column_end":51},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":3663},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","byte_start":119446,"byte_end":119456,"line_start":123,"line_end":123,"column_start":31,"column_end":41},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":3663},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","byte_start":119628,"byte_end":119637,"line_start":129,"line_end":129,"column_start":36,"column_end":45},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":3040},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/format_description/mod.rs","byte_start":119756,"byte_end":119766,"line_start":135,"line_end":135,"column_start":39,"column_end":49},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":3663},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/formatting/formattable.rs","byte_start":185932,"byte_end":185938,"line_start":16,"line_end":16,"column_start":32,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":881},"to":{"krate":0,"index":870}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/formatting/formattable.rs","byte_start":185963,"byte_end":185973,"line_start":17,"line_end":17,"column_start":22,"column_end":32},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":3663},"to":{"krate":0,"index":870}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/formatting/formattable.rs","byte_start":186043,"byte_end":186050,"line_start":19,"line_end":19,"column_start":22,"column_end":29},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":3650},"to":{"krate":0,"index":870}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/formatting/formattable.rs","byte_start":186075,"byte_end":186082,"line_start":20,"line_end":20,"column_start":22,"column_end":29},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":3637},"to":{"krate":0,"index":870}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/formatting/formattable.rs","byte_start":186136,"byte_end":186143,"line_start":21,"line_end":21,"column_start":51,"column_end":58},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":3522},"to":{"krate":0,"index":870}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/formatting/formattable.rs","byte_start":186186,"byte_end":186187,"line_start":22,"line_end":22,"column_start":32,"column_end":33},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":878},"to":{"krate":0,"index":870}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/formatting/formattable.rs","byte_start":187344,"byte_end":187354,"line_start":56,"line_end":56,"column_start":29,"column_end":39},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":3663},"to":{"krate":0,"index":881}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/formatting/formattable.rs","byte_start":188555,"byte_end":188556,"line_start":93,"line_end":93,"column_start":35,"column_end":36},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":894},"to":{"krate":0,"index":881}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/formatting/formattable.rs","byte_start":188951,"byte_end":188958,"line_start":110,"line_end":110,"column_start":25,"column_end":32},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":3637},"to":{"krate":0,"index":881}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/formatting/formattable.rs","byte_start":190915,"byte_end":190922,"line_start":159,"line_end":159,"column_start":25,"column_end":32},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":3650},"to":{"krate":0,"index":881}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/formatting/formattable.rs","byte_start":194127,"byte_end":194134,"line_start":234,"line_end":234,"column_start":54,"column_end":61},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":3522},"to":{"krate":0,"index":881}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":202737,"byte_end":202744,"line_start":33,"line_end":33,"column_start":6,"column_end":13},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":3694},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":205681,"byte_end":205688,"line_start":117,"line_end":117,"column_start":27,"column_end":34},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":3694},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":205788,"byte_end":205798,"line_start":123,"line_end":123,"column_start":24,"column_end":34},"kind":{"Impl":{"id":195}},"from":{"krate":1,"index":11799},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":205881,"byte_end":205888,"line_start":129,"line_end":129,"column_start":14,"column_end":21},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":3694},"to":{"krate":2,"index":3252}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":206424,"byte_end":206431,"line_start":144,"line_end":144,"column_start":26,"column_end":33},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":3694},"to":{"krate":2,"index":3252}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":206575,"byte_end":206585,"line_start":152,"line_end":152,"column_start":23,"column_end":33},"kind":{"Impl":{"id":198}},"from":{"krate":1,"index":11799},"to":{"krate":2,"index":3252}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":206730,"byte_end":206737,"line_start":160,"line_end":160,"column_start":24,"column_end":31},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":3694},"to":{"krate":2,"index":3247}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":207124,"byte_end":207134,"line_start":175,"line_end":175,"column_start":24,"column_end":34},"kind":{"Impl":{"id":200}},"from":{"krate":1,"index":11799},"to":{"krate":2,"index":3247}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":207289,"byte_end":207296,"line_start":183,"line_end":183,"column_start":27,"column_end":34},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":3694},"to":{"krate":2,"index":3247}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":207537,"byte_end":207544,"line_start":194,"line_end":194,"column_start":24,"column_end":31},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":3694},"to":{"krate":2,"index":3252}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":207931,"byte_end":207941,"line_start":209,"line_end":209,"column_start":24,"column_end":34},"kind":{"Impl":{"id":206}},"from":{"krate":1,"index":11799},"to":{"krate":2,"index":3252}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":208096,"byte_end":208103,"line_start":217,"line_end":217,"column_start":27,"column_end":34},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":3694},"to":{"krate":2,"index":3252}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":208352,"byte_end":208359,"line_start":228,"line_end":228,"column_start":32,"column_end":39},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":3694},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":208467,"byte_end":208477,"line_start":234,"line_end":234,"column_start":29,"column_end":39},"kind":{"Impl":{"id":212}},"from":{"krate":1,"index":11799},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":208587,"byte_end":208594,"line_start":240,"line_end":240,"column_start":33,"column_end":40},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":3694},"to":{"krate":2,"index":2877}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":208733,"byte_end":208743,"line_start":246,"line_end":246,"column_start":30,"column_end":40},"kind":{"Impl":{"id":214}},"from":{"krate":1,"index":11799},"to":{"krate":2,"index":2877}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":208878,"byte_end":208885,"line_start":252,"line_end":252,"column_start":28,"column_end":35},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":3694},"to":{"krate":2,"index":3076}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/instant.rs","byte_start":208979,"byte_end":208986,"line_start":258,"line_end":258,"column_start":29,"column_end":36},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":3694},"to":{"krate":2,"index":2776}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/month.rs","byte_start":214991,"byte_end":214996,"line_start":29,"line_end":29,"column_start":6,"column_end":11},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":3728},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/month.rs","byte_start":216975,"byte_end":216980,"line_start":102,"line_end":102,"column_start":23,"column_end":28},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":3728},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/month.rs","byte_start":217504,"byte_end":217509,"line_start":121,"line_end":121,"column_start":18,"column_end":23},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":3728},"to":{"krate":2,"index":12767}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/month.rs","byte_start":218234,"byte_end":218239,"line_start":149,"line_end":149,"column_start":22,"column_end":27},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":3728},"to":{"krate":2,"index":3092}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":219880,"byte_end":219894,"line_start":38,"line_end":38,"column_start":6,"column_end":20},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":3779},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":246619,"byte_end":246633,"line_start":818,"line_end":818,"column_start":6,"column_end":20},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":3779},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":255620,"byte_end":255634,"line_start":1046,"line_end":1046,"column_start":6,"column_end":20},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":3779},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":256876,"byte_end":256890,"line_start":1083,"line_end":1083,"column_start":6,"column_end":20},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":3779},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":258671,"byte_end":258685,"line_start":1130,"line_end":1130,"column_start":23,"column_end":37},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":3779},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":258905,"byte_end":258919,"line_start":1138,"line_end":1138,"column_start":20,"column_end":34},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":3779},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":259070,"byte_end":259084,"line_start":1144,"line_end":1144,"column_start":21,"column_end":35},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":3779},"to":{"krate":2,"index":2877}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":259197,"byte_end":259211,"line_start":1150,"line_end":1150,"column_start":14,"column_end":28},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":3779},"to":{"krate":2,"index":2867}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":259377,"byte_end":259391,"line_start":1157,"line_end":1157,"column_start":15,"column_end":29},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":3779},"to":{"krate":2,"index":10324}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":259667,"byte_end":259681,"line_start":1165,"line_end":1165,"column_start":20,"column_end":34},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":3779},"to":{"krate":2,"index":3247}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":259966,"byte_end":259980,"line_start":1178,"line_end":1178,"column_start":20,"column_end":34},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":3779},"to":{"krate":2,"index":3252}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":260259,"byte_end":260273,"line_start":1191,"line_end":1191,"column_start":14,"column_end":28},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":3779},"to":{"krate":2,"index":3252}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":260592,"byte_end":260602,"line_start":1202,"line_end":1202,"column_start":24,"column_end":34},"kind":{"Impl":{"id":238}},"from":{"krate":1,"index":11819},"to":{"krate":2,"index":3247}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":261062,"byte_end":261072,"line_start":1220,"line_end":1220,"column_start":24,"column_end":34},"kind":{"Impl":{"id":240}},"from":{"krate":1,"index":11819},"to":{"krate":2,"index":3252}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":261333,"byte_end":261347,"line_start":1231,"line_end":1231,"column_start":26,"column_end":40},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":3779},"to":{"krate":2,"index":3252}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":261524,"byte_end":261534,"line_start":1240,"line_end":1240,"column_start":30,"column_end":40},"kind":{"Impl":{"id":243}},"from":{"krate":1,"index":11819},"to":{"krate":2,"index":3252}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":261727,"byte_end":261741,"line_start":1249,"line_end":1249,"column_start":32,"column_end":46},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":3779},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":261891,"byte_end":261901,"line_start":1256,"line_end":1256,"column_start":36,"column_end":46},"kind":{"Impl":{"id":245}},"from":{"krate":1,"index":11819},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":262062,"byte_end":262076,"line_start":1263,"line_end":1263,"column_start":33,"column_end":47},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":3779},"to":{"krate":2,"index":2877}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":262262,"byte_end":262272,"line_start":1270,"line_end":1270,"column_start":37,"column_end":47},"kind":{"Impl":{"id":247}},"from":{"krate":1,"index":11819},"to":{"krate":2,"index":2877}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":262461,"byte_end":262475,"line_start":1277,"line_end":1277,"column_start":27,"column_end":41},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":3779},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/offset_date_time.rs","byte_start":262847,"byte_end":262857,"line_start":1288,"line_end":1288,"column_start":31,"column_end":41},"kind":{"Impl":{"id":249}},"from":{"krate":1,"index":11819},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/combinator/rfc/iso8601.rs","byte_start":273101,"byte_end":273113,"line_start":23,"line_end":23,"column_start":6,"column_end":18},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":3802},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/iso8601.rs","byte_start":294066,"byte_end":294073,"line_start":13,"line_end":13,"column_start":35,"column_end":42},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":3522},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsable.rs","byte_start":307047,"byte_end":307053,"line_start":14,"line_end":14,"column_start":29,"column_end":35},"kind":"SuperTrait","from":{"krate":0,"index":1866},"to":{"krate":0,"index":1855}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsable.rs","byte_start":307075,"byte_end":307085,"line_start":15,"line_end":15,"column_start":19,"column_end":29},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":3663},"to":{"krate":0,"index":1855}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsable.rs","byte_start":307149,"byte_end":307156,"line_start":17,"line_end":17,"column_start":19,"column_end":26},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":3637},"to":{"krate":0,"index":1855}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsable.rs","byte_start":307178,"byte_end":307185,"line_start":18,"line_end":18,"column_start":19,"column_end":26},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":3650},"to":{"krate":0,"index":1855}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsable.rs","byte_start":307236,"byte_end":307243,"line_start":19,"line_end":19,"column_start":48,"column_end":55},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":3522},"to":{"krate":0,"index":1855}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsable.rs","byte_start":307283,"byte_end":307284,"line_start":20,"line_end":20,"column_start":29,"column_end":30},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":1863},"to":{"krate":0,"index":1855}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsable.rs","byte_start":309620,"byte_end":309630,"line_start":82,"line_end":82,"column_start":25,"column_end":35},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":3663},"to":{"krate":0,"index":1866}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsable.rs","byte_start":310089,"byte_end":310090,"line_start":102,"line_end":102,"column_start":35,"column_end":36},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":1882},"to":{"krate":0,"index":1866}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsable.rs","byte_start":310402,"byte_end":310409,"line_start":117,"line_end":117,"column_start":25,"column_end":32},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":3637},"to":{"krate":0,"index":1866}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsable.rs","byte_start":324175,"byte_end":324182,"line_start":444,"line_end":444,"column_start":25,"column_end":32},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":3650},"to":{"krate":0,"index":1866}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsable.rs","byte_start":333842,"byte_end":333849,"line_start":670,"line_end":670,"column_start":54,"column_end":61},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":3522},"to":{"krate":0,"index":1866}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":338618,"byte_end":338624,"line_start":71,"line_end":71,"column_start":6,"column_end":12},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":3830},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":339355,"byte_end":339361,"line_start":90,"line_end":90,"column_start":6,"column_end":12},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":3830},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":348596,"byte_end":348602,"line_start":298,"line_end":298,"column_start":6,"column_end":12},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":3830},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":351855,"byte_end":351861,"line_start":386,"line_end":386,"column_start":6,"column_end":12},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":3830},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":355432,"byte_end":355438,"line_start":486,"line_end":486,"column_start":6,"column_end":12},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":3830},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":357735,"byte_end":357739,"line_start":549,"line_end":549,"column_start":26,"column_end":30},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":2682},"to":{"krate":2,"index":3092}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":360021,"byte_end":360025,"line_start":609,"line_end":609,"column_start":26,"column_end":30},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":3983},"to":{"krate":2,"index":3092}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":361186,"byte_end":361195,"line_start":637,"line_end":637,"column_start":26,"column_end":35},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":4014},"to":{"krate":2,"index":3092}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":361966,"byte_end":361983,"line_start":659,"line_end":659,"column_start":26,"column_end":43},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":3934},"to":{"krate":2,"index":3092}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/parsed.rs","byte_start":362185,"byte_end":362199,"line_start":667,"line_end":667,"column_start":26,"column_end":40},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":3779},"to":{"krate":2,"index":3092}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/shim.rs","byte_start":364004,"byte_end":364009,"line_start":16,"line_end":16,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":3184},"to":{"krate":0,"index":2319}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/mod.rs","byte_start":264612,"byte_end":264622,"line_start":17,"line_end":17,"column_start":13,"column_end":23},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":3924},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/mod.rs","byte_start":265355,"byte_end":265365,"line_start":36,"line_end":36,"column_start":10,"column_end":20},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":3924},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/parsing/mod.rs","byte_start":265580,"byte_end":265590,"line_start":44,"line_end":44,"column_start":10,"column_end":20},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":3924},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":365624,"byte_end":365641,"line_start":24,"line_end":24,"column_start":6,"column_end":23},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":3934},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":384248,"byte_end":384265,"line_start":580,"line_end":580,"column_start":6,"column_end":23},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":3934},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":391792,"byte_end":391809,"line_start":769,"line_end":769,"column_start":6,"column_end":23},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":3934},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":392841,"byte_end":392858,"line_start":798,"line_end":798,"column_start":6,"column_end":23},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":3934},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":393591,"byte_end":393608,"line_start":819,"line_end":819,"column_start":23,"column_end":40},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":3934},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":393812,"byte_end":393829,"line_start":827,"line_end":827,"column_start":24,"column_end":41},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":3934},"to":{"krate":2,"index":3247}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":394037,"byte_end":394054,"line_start":836,"line_end":836,"column_start":27,"column_end":44},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":3934},"to":{"krate":2,"index":3247}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":394592,"byte_end":394609,"line_start":857,"line_end":857,"column_start":24,"column_end":41},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":3934},"to":{"krate":2,"index":3252}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":394817,"byte_end":394834,"line_start":866,"line_end":866,"column_start":27,"column_end":44},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":3934},"to":{"krate":2,"index":3252}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/primitive_date_time.rs","byte_start":395374,"byte_end":395391,"line_start":887,"line_end":887,"column_start":14,"column_end":31},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":3934},"to":{"krate":2,"index":3252}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":397235,"byte_end":397239,"line_start":45,"line_end":45,"column_start":21,"column_end":25},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":3983},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":397548,"byte_end":397552,"line_start":56,"line_end":56,"column_start":6,"column_end":10},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":3983},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":416238,"byte_end":416242,"line_start":594,"line_end":594,"column_start":6,"column_end":10},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":3983},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":417149,"byte_end":417153,"line_start":621,"line_end":621,"column_start":6,"column_end":10},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":3983},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":417754,"byte_end":417758,"line_start":639,"line_end":639,"column_start":23,"column_end":27},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":3983},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":418718,"byte_end":418722,"line_start":662,"line_end":662,"column_start":24,"column_end":28},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":3983},"to":{"krate":2,"index":3247}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":419188,"byte_end":419192,"line_start":677,"line_end":677,"column_start":27,"column_end":31},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":3983},"to":{"krate":2,"index":3247}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":419729,"byte_end":419733,"line_start":694,"line_end":694,"column_start":24,"column_end":28},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":3983},"to":{"krate":2,"index":3252}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":420206,"byte_end":420210,"line_start":709,"line_end":709,"column_start":27,"column_end":31},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":3983},"to":{"krate":2,"index":3252}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/time.rs","byte_start":420744,"byte_end":420748,"line_start":726,"line_end":726,"column_start":14,"column_end":18},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":3983},"to":{"krate":2,"index":3252}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":423004,"byte_end":423013,"line_start":33,"line_end":33,"column_start":6,"column_end":15},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":4014},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":431397,"byte_end":431406,"line_start":275,"line_end":275,"column_start":6,"column_end":15},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":4014},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":432305,"byte_end":432314,"line_start":299,"line_end":299,"column_start":6,"column_end":15},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":4014},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":432939,"byte_end":432948,"line_start":317,"line_end":317,"column_start":23,"column_end":32},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":4014},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/utc_offset.rs","byte_start":433295,"byte_end":433304,"line_start":331,"line_end":331,"column_start":14,"column_end":23},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":4014},"to":{"krate":2,"index":3274}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/weekday.rs","byte_start":436896,"byte_end":436903,"line_start":32,"line_end":32,"column_start":6,"column_end":13},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":4037},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/weekday.rs","byte_start":439192,"byte_end":439199,"line_start":119,"line_end":119,"column_start":18,"column_end":25},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":4037},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.14/src/weekday.rs","byte_start":439575,"byte_end":439582,"line_start":133,"line_end":133,"column_start":18,"column_end":25},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":4037},"to":{"krate":2,"index":12767}}]}