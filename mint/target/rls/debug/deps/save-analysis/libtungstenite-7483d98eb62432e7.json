{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3","program":"/Users/air/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","tungstenite","--edition=2018","/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"__rustls-tls\"","--cfg","feature=\"default\"","--cfg","feature=\"rustls\"","--cfg","feature=\"rustls-tls-webpki-roots\"","--cfg","feature=\"webpki\"","--cfg","feature=\"webpki-roots\"","-C","metadata=7483d98eb62432e7","-C","extra-filename=-7483d98eb62432e7","--out-dir","/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps","-L","dependency=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps","--extern","base64=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libbase64-ad531e0ef5307ef5.rmeta","--extern","byteorder=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libbyteorder-09ce0c3ccad6fb6e.rmeta","--extern","bytes=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libbytes-9550d149b9a13b85.rmeta","--extern","http=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libhttp-08c10c15e591d7f7.rmeta","--extern","httparse=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libhttparse-e4b913cd9c006fad.rmeta","--extern","log=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/liblog-f7c6bc655c61cd08.rmeta","--extern","rand=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/librand-eabd4006b5f81187.rmeta","--extern","rustls=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/librustls-4ba4a5556f79cdf4.rmeta","--extern","sha1=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libsha1-335709281666ebda.rmeta","--extern","thiserror=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libthiserror-1556a11d29ffccd0.rmeta","--extern","url=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/liburl-f70ad601671289fc.rmeta","--extern","utf8=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libutf8-81fd8878bf445b44.rmeta","--extern","webpki=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libwebpki-9fda25e5920a04fa.rmeta","--extern","webpki_roots=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libwebpki_roots-ddc2ec0273095b99.rmeta","--cap-lints","allow","-L","native=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/build/ring-9065ae91f74d10ea/out","--error-format=json","--sysroot","/Users/air/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libtungstenite-7483d98eb62432e7.rmeta"},"prelude":{"crate_id":{"name":"tungstenite","disambiguator":[4365148236120928392,0]},"crate_root":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src","external_crates":[{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[4485569597606079733,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[9994580471200982198,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13944031075627487246,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5133993387825513881,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[14116380118705386640,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6269322086078963025,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16152481959168563413,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7897074911849024150,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[7299104579826168146,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2669544452907545777,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[14288251452253695433,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[13943810077905921301,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[2237926517141734526,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[5541021343498733002,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[7188895526679788668,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[15555671723428220450,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[13375000548276363576,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[8920282723255285566,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[2397004371161247654,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/lib.rs","num":20,"id":{"name":"http","disambiguator":[2547995448385604087,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/lib.rs","num":21,"id":{"name":"fnv","disambiguator":[11069884770607205786,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/buffer.rs","num":22,"id":{"name":"bytes","disambiguator":[17363037860664117862,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/lib.rs","num":23,"id":{"name":"itoa","disambiguator":[13453871069554125092,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","num":24,"id":{"name":"log","disambiguator":[14675233967093799413,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","num":25,"id":{"name":"cfg_if","disambiguator":[13273704638852766021,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","num":26,"id":{"name":"url","disambiguator":[274442169591270616,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","num":27,"id":{"name":"form_urlencoded","disambiguator":[1693567418930992672,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","num":28,"id":{"name":"percent_encoding","disambiguator":[6578133466888099768,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","num":29,"id":{"name":"idna","disambiguator":[8434202043748812613,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","num":30,"id":{"name":"unicode_bidi","disambiguator":[4963664944128337337,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","num":31,"id":{"name":"unicode_normalization","disambiguator":[4572239068223574141,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","num":32,"id":{"name":"tinyvec","disambiguator":[1921248162494027452,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","num":33,"id":{"name":"tinyvec_macros","disambiguator":[1861254164420090656,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","num":34,"id":{"name":"thiserror","disambiguator":[18020888330255438696,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","num":35,"id":{"name":"thiserror_impl","disambiguator":[1864002684930853046,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/client.rs","num":36,"id":{"name":"httparse","disambiguator":[8142593886520216188,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/mod.rs","num":37,"id":{"name":"sha1","disambiguator":[16804645569023370426,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/mod.rs","num":38,"id":{"name":"digest","disambiguator":[1294878216105170047,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/mod.rs","num":39,"id":{"name":"crypto_common","disambiguator":[14684536701934414064,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/mod.rs","num":40,"id":{"name":"generic_array","disambiguator":[16196638712009601644,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/mod.rs","num":41,"id":{"name":"serde","disambiguator":[18037409615073048381,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/mod.rs","num":42,"id":{"name":"serde_derive","disambiguator":[8793957035152621601,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/mod.rs","num":43,"id":{"name":"typenum","disambiguator":[10767619991598477718,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/mod.rs","num":44,"id":{"name":"block_buffer","disambiguator":[9571872309427405564,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/mod.rs","num":45,"id":{"name":"subtle","disambiguator":[10024396047354100304,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/mod.rs","num":46,"id":{"name":"cpufeatures","disambiguator":[1963109958910880596,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","num":47,"id":{"name":"byteorder","disambiguator":[4343033449561927691,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","num":48,"id":{"name":"utf8","disambiguator":[3459163295826998705,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/stream.rs","num":49,"id":{"name":"rustls","disambiguator":[13214070087561825703,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/stream.rs","num":50,"id":{"name":"ring","disambiguator":[11862796602207275207,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/stream.rs","num":51,"id":{"name":"untrusted","disambiguator":[3488854708692986494,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/stream.rs","num":52,"id":{"name":"spin","disambiguator":[16282530221687026775,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","num":53,"id":{"name":"webpki","disambiguator":[12753995509790438548,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/stream.rs","num":54,"id":{"name":"sct","disambiguator":[10623624661003900290,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/client.rs","num":55,"id":{"name":"rand","disambiguator":[5737921661166445283,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/client.rs","num":56,"id":{"name":"rand_core","disambiguator":[16845283938616561134,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/client.rs","num":57,"id":{"name":"getrandom","disambiguator":[11134963274789204374,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/client.rs","num":58,"id":{"name":"libc","disambiguator":[2594694148884002105,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/client.rs","num":59,"id":{"name":"rand_chacha","disambiguator":[14300429071441946605,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/client.rs","num":60,"id":{"name":"ppv_lite86","disambiguator":[10001865238345273388,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/client.rs","num":61,"id":{"name":"base64","disambiguator":[9889278033999334830,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/tls.rs","num":62,"id":{"name":"webpki_roots","disambiguator":[4447137651721895250,0]}}],"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/lib.rs","byte_start":0,"byte_end":1018,"line_start":1,"line_end":40,"column_start":1,"column_end":62}},"imports":[{"kind":"Use","ref_id":{"krate":20,"index":0},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/lib.rs","byte_start":306,"byte_end":310,"line_start":15,"line_end":15,"column_start":9,"column_end":13},"alias_span":null,"name":"http","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1912},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/mod.rs","byte_start":90093,"byte_end":90103,"line_start":13,"line_end":13,"column_start":23,"column_end":33},"alias_span":null,"name":"CloseFrame","value":"","parent":{"krate":0,"index":615}},{"kind":"Use","ref_id":{"krate":0,"index":1953},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/mod.rs","byte_start":90105,"byte_end":90110,"line_start":13,"line_end":13,"column_start":35,"column_end":40},"alias_span":null,"name":"Frame","value":"","parent":{"krate":0,"index":615}},{"kind":"Use","ref_id":{"krate":0,"index":1933},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/mod.rs","byte_start":90112,"byte_end":90123,"line_start":13,"line_end":13,"column_start":42,"column_end":53},"alias_span":null,"name":"FrameHeader","value":"","parent":{"krate":0,"index":615}},{"kind":"Use","ref_id":{"krate":0,"index":1912},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":60033,"byte_end":60043,"line_start":7,"line_end":7,"column_start":23,"column_end":33},"alias_span":null,"name":"CloseFrame","value":"","parent":{"krate":0,"index":614}},{"kind":"Use","ref_id":{"krate":0,"index":1999},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":60054,"byte_end":60061,"line_start":7,"line_end":7,"column_start":44,"column_end":51},"alias_span":null,"name":"Message","value":"","parent":{"krate":0,"index":614}},{"kind":"Use","ref_id":{"krate":0,"index":130},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/lib.rs","byte_start":648,"byte_end":654,"line_start":32,"line_end":32,"column_start":14,"column_end":20},"alias_span":null,"name":"client","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":123},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/lib.rs","byte_start":656,"byte_end":663,"line_start":32,"line_end":32,"column_start":22,"column_end":29},"alias_span":null,"name":"connect","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1465},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/lib.rs","byte_start":678,"byte_end":683,"line_start":33,"line_end":33,"column_start":13,"column_end":18},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":195},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/lib.rs","byte_start":685,"byte_end":691,"line_start":33,"line_end":33,"column_start":20,"column_end":26},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1700},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/lib.rs","byte_start":718,"byte_end":733,"line_start":34,"line_end":34,"column_start":25,"column_end":40},"alias_span":null,"name":"ClientHandshake","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1719},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/lib.rs","byte_start":743,"byte_end":758,"line_start":34,"line_end":34,"column_start":50,"column_end":65},"alias_span":null,"name":"ServerHandshake","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":588},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/lib.rs","byte_start":760,"byte_end":774,"line_start":34,"line_end":34,"column_start":67,"column_end":81},"alias_span":null,"name":"HandshakeError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1999},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/lib.rs","byte_start":792,"byte_end":799,"line_start":35,"line_end":35,"column_start":16,"column_end":23},"alias_span":null,"name":"Message","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2055},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/lib.rs","byte_start":801,"byte_end":810,"line_start":35,"line_end":35,"column_start":25,"column_end":34},"alias_span":null,"name":"WebSocket","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1157},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/lib.rs","byte_start":826,"byte_end":832,"line_start":36,"line_end":36,"column_start":14,"column_end":20},"alias_span":null,"name":"accept","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1162},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/lib.rs","byte_start":834,"byte_end":844,"line_start":36,"line_end":36,"column_start":22,"column_end":32},"alias_span":null,"name":"accept_hdr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1159},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/lib.rs","byte_start":846,"byte_end":868,"line_start":36,"line_end":36,"column_start":34,"column_end":56},"alias_span":null,"name":"accept_hdr_with_config","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1155},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/lib.rs","byte_start":870,"byte_end":888,"line_start":36,"line_end":36,"column_start":58,"column_end":76},"alias_span":null,"name":"accept_with_config","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1363},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/lib.rs","byte_start":971,"byte_end":981,"line_start":40,"line_end":40,"column_start":15,"column_end":25},"alias_span":null,"name":"client_tls","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1366},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/lib.rs","byte_start":983,"byte_end":1005,"line_start":40,"line_end":40,"column_start":27,"column_end":49},"alias_span":null,"name":"client_tls_with_config","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1278},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/lib.rs","byte_start":1007,"byte_end":1016,"line_start":40,"line_end":40,"column_start":51,"column_end":60},"alias_span":null,"name":"Connector","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/lib.rs","byte_start":0,"byte_end":1018,"line_start":1,"line_end":40,"column_start":1,"column_end":62},"name":"","qualname":"::","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":40},{"krate":0,"index":164},{"krate":0,"index":214},{"krate":0,"index":614},{"krate":0,"index":1126},{"krate":0,"index":1165},{"krate":0,"index":1232},{"krate":0,"index":1369},{"krate":0,"index":1399},{"krate":0,"index":1400},{"krate":0,"index":1401},{"krate":0,"index":1402},{"krate":0,"index":1403},{"krate":0,"index":1406},{"krate":0,"index":1409},{"krate":0,"index":1410},{"krate":0,"index":1413},{"krate":0,"index":1416},{"krate":0,"index":1417},{"krate":0,"index":1420},{"krate":0,"index":1423},{"krate":0,"index":1426},{"krate":0,"index":1427},{"krate":0,"index":1430},{"krate":0,"index":1433},{"krate":0,"index":1434},{"krate":0,"index":1437},{"krate":0,"index":1440},{"krate":0,"index":1443},{"krate":0,"index":1446},{"krate":0,"index":1447},{"krate":0,"index":1450},{"krate":0,"index":1453}],"decl_id":null,"docs":" Lightweight, flexible WebSockets for Rust.\n","sig":null,"attributes":[{"value":"/ Lightweight, flexible WebSockets for Rust.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/lib.rs","byte_start":0,"byte_end":46,"line_start":1,"line_end":1,"column_start":1,"column_end":47}},{"value":"deny(missing_docs, missing_copy_implementations,\nmissing_debug_implementations, trivial_casts, trivial_numeric_casts,\nunstable_features, unused_must_use, unused_mut, unused_imports,\nunused_import_braces)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/lib.rs","byte_start":47,"byte_end":296,"line_start":2,"line_end":13,"column_start":1,"column_end":3}}]},{"kind":"Mod","id":{"krate":0,"index":6},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/buffer.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"buffer","qualname":"::buffer","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/buffer.rs","parent":null,"children":[{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":1456},{"krate":0,"index":1461},{"krate":0,"index":20},{"krate":0,"index":32},{"krate":0,"index":37}],"decl_id":null,"docs":" A buffer for reading data from the network.","sig":null,"attributes":[{"value":"/ A buffer for reading data from the network.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/buffer.rs","byte_start":1020,"byte_end":1067,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/buffer.rs","byte_start":1068,"byte_end":1071,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The `ReadBuffer` is a buffer of bytes similar to a first-in, first-out queue.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/buffer.rs","byte_start":1072,"byte_end":1153,"line_start":3,"line_end":3,"column_start":1,"column_end":82}},{"value":"/ It is filled by reading from a stream supporting `Read` and is then","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/buffer.rs","byte_start":1154,"byte_end":1225,"line_start":4,"line_end":4,"column_start":1,"column_end":72}},{"value":"/ accessible as a cursor for reading bytes.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/buffer.rs","byte_start":1226,"byte_end":1271,"line_start":5,"line_end":5,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":1456},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/buffer.rs","byte_start":1424,"byte_end":1434,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"ReadBuffer","qualname":"::buffer::ReadBuffer","value":"ReadBuffer {  }","parent":null,"children":[{"krate":0,"index":1458},{"krate":0,"index":1459}],"decl_id":null,"docs":" A FIFO buffer for reading packets from the network.\n","sig":null,"attributes":[{"value":"/ A FIFO buffer for reading packets from the network.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/buffer.rs","byte_start":1340,"byte_end":1395,"line_start":11,"line_end":11,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/buffer.rs","byte_start":1636,"byte_end":1639,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<ReadBuffer<CHUNK_SIZE>>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new empty input buffer.\n","sig":null,"attributes":[{"value":"/ Create a new empty input buffer.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/buffer.rs","byte_start":1588,"byte_end":1624,"line_start":19,"line_end":19,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/buffer.rs","byte_start":1775,"byte_end":1788,"line_start":25,"line_end":25,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<ReadBuffer<CHUNK_SIZE>>::with_capacity","value":"fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new empty input buffer with a given `capacity`.\n","sig":null,"attributes":[{"value":"/ Create a new empty input buffer with a given `capacity`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/buffer.rs","byte_start":1703,"byte_end":1763,"line_start":24,"line_end":24,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/buffer.rs","byte_start":1962,"byte_end":1981,"line_start":30,"line_end":30,"column_start":12,"column_end":31},"name":"from_partially_read","qualname":"<ReadBuffer<CHUNK_SIZE>>::from_partially_read","value":"fn from_partially_read(Vec<u8>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a input buffer filled with previously read data.\n","sig":null,"attributes":[{"value":"/ Create a input buffer filled with previously read data.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/buffer.rs","byte_start":1891,"byte_end":1950,"line_start":29,"line_end":29,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/buffer.rs","byte_start":2145,"byte_end":2154,"line_start":35,"line_end":35,"column_start":12,"column_end":21},"name":"as_cursor","qualname":"<ReadBuffer<CHUNK_SIZE>>::as_cursor","value":"fn as_cursor(&Self) -> &Cursor<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Get a cursor to the data storage.\n","sig":null,"attributes":[{"value":"/ Get a cursor to the data storage.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/buffer.rs","byte_start":2096,"byte_end":2133,"line_start":34,"line_end":34,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/buffer.rs","byte_start":2274,"byte_end":2287,"line_start":40,"line_end":40,"column_start":12,"column_end":25},"name":"as_cursor_mut","qualname":"<ReadBuffer<CHUNK_SIZE>>::as_cursor_mut","value":"fn as_cursor_mut(&mut Self) -> &mut Cursor<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Get a cursor to the mutable data storage.\n","sig":null,"attributes":[{"value":"/ Get a cursor to the mutable data storage.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/buffer.rs","byte_start":2217,"byte_end":2262,"line_start":39,"line_end":39,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/buffer.rs","byte_start":2432,"byte_end":2440,"line_start":45,"line_end":45,"column_start":12,"column_end":20},"name":"into_vec","qualname":"<ReadBuffer<CHUNK_SIZE>>::into_vec","value":"fn into_vec(Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Consume the `ReadBuffer` and get the internal storage.\n","sig":null,"attributes":[{"value":"/ Consume the `ReadBuffer` and get the internal storage.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/buffer.rs","byte_start":2362,"byte_end":2420,"line_start":44,"line_end":44,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/buffer.rs","byte_start":2837,"byte_end":2846,"line_start":55,"line_end":55,"column_start":12,"column_end":21},"name":"read_from","qualname":"<ReadBuffer<CHUNK_SIZE>>::read_from","value":"fn read_from<S>(&mut Self, &mut S) -> IoResult<usize> where S: Read","parent":null,"children":[],"decl_id":null,"docs":" Read next portion of data from the given input stream.\n","sig":null,"attributes":[{"value":"/ Read next portion of data from the given input stream.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/buffer.rs","byte_start":2767,"byte_end":2825,"line_start":54,"line_end":54,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/buffer.rs","byte_start":3411,"byte_end":3420,"line_start":71,"line_end":71,"column_start":8,"column_end":17},"name":"remaining","qualname":"<ReadBuffer<CHUNK_SIZE> as bytes::Buf>::remaining","value":"fn remaining(&Self) -> usize","parent":{"krate":22,"index":42},"children":[],"decl_id":{"krate":22,"index":43},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/buffer.rs","byte_start":3494,"byte_end":3499,"line_start":75,"line_end":75,"column_start":8,"column_end":13},"name":"chunk","qualname":"<ReadBuffer<CHUNK_SIZE> as bytes::Buf>::chunk","value":"fn chunk(&Self) -> &[u8]","parent":{"krate":22,"index":42},"children":[],"decl_id":{"krate":22,"index":44},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/buffer.rs","byte_start":3569,"byte_end":3576,"line_start":79,"line_end":79,"column_start":8,"column_end":15},"name":"advance","qualname":"<ReadBuffer<CHUNK_SIZE> as bytes::Buf>::advance","value":"fn advance(&mut Self, usize)","parent":{"krate":22,"index":42},"children":[],"decl_id":{"krate":22,"index":47},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/buffer.rs","byte_start":3733,"byte_end":3740,"line_start":85,"line_end":85,"column_start":8,"column_end":15},"name":"default","qualname":"<ReadBuffer<CHUNK_SIZE> as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":40},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"client","qualname":"::client","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","parent":null,"children":[{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":53},{"krate":0,"index":56},{"krate":0,"index":59},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":66},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":78},{"krate":0,"index":81},{"krate":0,"index":84},{"krate":0,"index":87},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":95},{"krate":0,"index":98},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":105},{"krate":0,"index":108},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":115},{"krate":0,"index":118},{"krate":0,"index":123},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":130},{"krate":0,"index":133},{"krate":0,"index":135},{"krate":0,"index":138},{"krate":0,"index":141},{"krate":0,"index":143},{"krate":0,"index":146},{"krate":0,"index":150},{"krate":0,"index":153},{"krate":0,"index":155},{"krate":0,"index":157}],"decl_id":null,"docs":" Methods to connect to a WebSocket as a client.\n","sig":null,"attributes":[{"value":"/ Methods to connect to a WebSocket as a client.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":4838,"byte_end":4888,"line_start":1,"line_end":1,"column_start":1,"column_end":51}}]},{"kind":"Function","id":{"krate":0,"index":118},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":6372,"byte_end":6391,"line_start":45,"line_end":45,"column_start":8,"column_end":27},"name":"connect_with_config","qualname":"::client::connect_with_config","value":"fn connect_with_config<Req>(Req, Option<WebSocketConfig>, u8)\n-> Result<(WebSocket<MaybeTlsStream<TcpStream>>, Response)> where\nReq: IntoClientRequest","parent":null,"children":[],"decl_id":null,"docs":" Connect to the given WebSocket in blocking mode.","sig":null,"attributes":[{"value":"/ Connect to the given WebSocket in blocking mode.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":5372,"byte_end":5424,"line_start":27,"line_end":27,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":5425,"byte_end":5428,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Uses a websocket configuration passed as an argument to the function. Calling it with `None` is","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":5429,"byte_end":5528,"line_start":29,"line_end":29,"column_start":1,"column_end":100}},{"value":"/ equal to calling `connect()` function.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":5529,"byte_end":5571,"line_start":30,"line_end":30,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":5572,"byte_end":5575,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ The URL may be either ws:// or wss://.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":5576,"byte_end":5618,"line_start":32,"line_end":32,"column_start":1,"column_end":43}},{"value":"/ To support wss:// URLs, you must activate the TLS feature on the crate level. Please refer to the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":5619,"byte_end":5720,"line_start":33,"line_end":33,"column_start":1,"column_end":102}},{"value":"/ project's [README][readme] for more information on available features.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":5721,"byte_end":5795,"line_start":34,"line_end":34,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":5796,"byte_end":5799,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ This function \"just works\" for those who wants a simple blocking solution","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":5800,"byte_end":5877,"line_start":36,"line_end":36,"column_start":1,"column_end":78}},{"value":"/ similar to `std::net::TcpStream`. If you want a non-blocking or other","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":5878,"byte_end":5951,"line_start":37,"line_end":37,"column_start":1,"column_end":74}},{"value":"/ custom stream, call `client` instead.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":5952,"byte_end":5993,"line_start":38,"line_end":38,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":5994,"byte_end":5997,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ This function uses `native_tls` or `rustls` to do TLS depending on the feature flags enabled. If","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":5998,"byte_end":6098,"line_start":40,"line_end":40,"column_start":1,"column_end":101}},{"value":"/ you want to use other TLS libraries, use `client` instead. There is no need to enable any of","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":6099,"byte_end":6195,"line_start":41,"line_end":41,"column_start":1,"column_end":97}},{"value":"/ the `*-tls` features if you don't call `connect` since it's the only function that uses them.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":6196,"byte_end":6293,"line_start":42,"line_end":42,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":6294,"byte_end":6297,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ [readme]: https://github.com/snapview/tungstenite-rs/#features","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":6298,"byte_end":6364,"line_start":44,"line_end":44,"column_start":1,"column_end":67}}]},{"kind":"Function","id":{"krate":0,"index":123},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":9589,"byte_end":9596,"line_start":119,"line_end":119,"column_start":8,"column_end":15},"name":"connect","qualname":"::client::connect","value":"fn connect<Req>(Req)\n-> Result<(WebSocket<MaybeTlsStream<TcpStream>>, Response)> where\nReq: IntoClientRequest","parent":null,"children":[],"decl_id":null,"docs":" Connect to the given WebSocket in blocking mode.","sig":null,"attributes":[{"value":"/ Connect to the given WebSocket in blocking mode.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":8900,"byte_end":8952,"line_start":107,"line_end":107,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":8953,"byte_end":8956,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ The URL may be either ws:// or wss://.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":8957,"byte_end":8999,"line_start":109,"line_end":109,"column_start":1,"column_end":43}},{"value":"/ To support wss:// URLs, feature `native-tls` or `rustls-tls` must be turned on.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":9000,"byte_end":9083,"line_start":110,"line_end":110,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":9084,"byte_end":9087,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ This function \"just works\" for those who wants a simple blocking solution","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":9088,"byte_end":9165,"line_start":112,"line_end":112,"column_start":1,"column_end":78}},{"value":"/ similar to `std::net::TcpStream`. If you want a non-blocking or other","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":9166,"byte_end":9239,"line_start":113,"line_end":113,"column_start":1,"column_end":74}},{"value":"/ custom stream, call `client` instead.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":9240,"byte_end":9281,"line_start":114,"line_end":114,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":9282,"byte_end":9285,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ This function uses `native_tls` or `rustls` to do TLS depending on the feature flags enabled. If","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":9286,"byte_end":9386,"line_start":116,"line_end":116,"column_start":1,"column_end":101}},{"value":"/ you want to use other TLS libraries, use `client` instead. There is no need to enable any of","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":9387,"byte_end":9483,"line_start":117,"line_end":117,"column_start":1,"column_end":97}},{"value":"/ the `*-tls` features if you don't call `connect` since it's the only function that uses them.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":9484,"byte_end":9581,"line_start":118,"line_end":118,"column_start":1,"column_end":98}}]},{"kind":"Function","id":{"krate":0,"index":126},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":10294,"byte_end":10302,"line_start":139,"line_end":139,"column_start":8,"column_end":16},"name":"uri_mode","qualname":"::client::uri_mode","value":"fn uri_mode(&Uri) -> Result<Mode>","parent":null,"children":[],"decl_id":null,"docs":" Get the mode of the given URL.","sig":null,"attributes":[{"value":"/ Get the mode of the given URL.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":10077,"byte_end":10111,"line_start":135,"line_end":135,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":10112,"byte_end":10115,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ This function may be used to ease the creation of custom TLS streams","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":10116,"byte_end":10188,"line_start":137,"line_end":137,"column_start":1,"column_end":73}},{"value":"/ in non-blocking algorithms or for use with TLS libraries other than `native_tls` or `rustls`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":10189,"byte_end":10286,"line_start":138,"line_end":138,"column_start":1,"column_end":98}}]},{"kind":"Function","id":{"krate":0,"index":127},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":10896,"byte_end":10914,"line_start":153,"line_end":153,"column_start":8,"column_end":26},"name":"client_with_config","qualname":"::client::client_with_config","value":"fn client_with_config<Stream, Req>(Req, Stream, Option<WebSocketConfig>)\n->\n    StdResult<(WebSocket<Stream>, Response),\n    HandshakeError<ClientHandshake<Stream>>> where Stream: Read + Write,\nReq: IntoClientRequest","parent":null,"children":[],"decl_id":null,"docs":" Do the client handshake over the given stream given a web socket configuration. Passing `None`\n as configuration is equal to calling `client()` function.","sig":null,"attributes":[{"value":"/ Do the client handshake over the given stream given a web socket configuration. Passing `None`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":10509,"byte_end":10607,"line_start":147,"line_end":147,"column_start":1,"column_end":99}},{"value":"/ as configuration is equal to calling `client()` function.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":10608,"byte_end":10669,"line_start":148,"line_end":148,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":10670,"byte_end":10673,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ Use this function if you need a nonblocking handshake support or if you","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":10674,"byte_end":10749,"line_start":150,"line_end":150,"column_start":1,"column_end":76}},{"value":"/ want to use a custom stream like `mio::net::TcpStream` or `openssl::ssl::SslStream`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":10750,"byte_end":10838,"line_start":151,"line_end":151,"column_start":1,"column_end":89}},{"value":"/ Any stream supporting `Read + Write` will do.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":10839,"byte_end":10888,"line_start":152,"line_end":152,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":130},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":11521,"byte_end":11527,"line_start":170,"line_end":170,"column_start":8,"column_end":14},"name":"client","qualname":"::client::client","value":"fn client<Stream, Req>(Req, Stream)\n->\n    StdResult<(WebSocket<Stream>, Response),\n    HandshakeError<ClientHandshake<Stream>>> where Stream: Read + Write,\nReq: IntoClientRequest","parent":null,"children":[],"decl_id":null,"docs":" Do the client handshake over the given stream.","sig":null,"attributes":[{"value":"/ Do the client handshake over the given stream.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":11244,"byte_end":11294,"line_start":165,"line_end":165,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":11295,"byte_end":11298,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ Use this function if you need a nonblocking handshake support or if you","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":11299,"byte_end":11374,"line_start":167,"line_end":167,"column_start":1,"column_end":76}},{"value":"/ want to use a custom stream like `mio::net::TcpStream` or `openssl::ssl::SslStream`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":11375,"byte_end":11463,"line_start":168,"line_end":168,"column_start":1,"column_end":89}},{"value":"/ Any stream supporting `Read + Write` will do.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":11464,"byte_end":11513,"line_start":169,"line_end":169,"column_start":1,"column_end":50}}]},{"kind":"Trait","id":{"krate":0,"index":133},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":12414,"byte_end":12431,"line_start":189,"line_end":189,"column_start":11,"column_end":28},"name":"IntoClientRequest","qualname":"::client::IntoClientRequest","value":"IntoClientRequest","parent":null,"children":[{"krate":0,"index":134}],"decl_id":null,"docs":" Trait for converting various types into HTTP requests used for a client connection.","sig":null,"attributes":[{"value":"/ Trait for converting various types into HTTP requests used for a client connection.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":11778,"byte_end":11865,"line_start":181,"line_end":181,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":11866,"byte_end":11869,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ This trait is implemented by default for string slices, strings, `url::Url`, `http::Uri` and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":11870,"byte_end":11966,"line_start":183,"line_end":183,"column_start":1,"column_end":97}},{"value":"/ `http::Request<()>`. Note that the implementation for `http::Request<()>` is trivial and will","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":11967,"byte_end":12064,"line_start":184,"line_end":184,"column_start":1,"column_end":98}},{"value":"/ simply take your request and pass it as is further without altering any headers or URLs, so","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":12065,"byte_end":12160,"line_start":185,"line_end":185,"column_start":1,"column_end":96}},{"value":"/ be aware of this. If you just want to connect to the endpoint with a certain URL, better pass","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":12161,"byte_end":12258,"line_start":186,"line_end":186,"column_start":1,"column_end":98}},{"value":"/ a regular string containing the URL in which case `tungstenite-rs` will take care for generating","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":12259,"byte_end":12359,"line_start":187,"line_end":187,"column_start":1,"column_end":101}},{"value":"/ the proper `http::Request<()>` for you.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":12360,"byte_end":12403,"line_start":188,"line_end":188,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":12516,"byte_end":12535,"line_start":191,"line_end":191,"column_start":8,"column_end":27},"name":"into_client_request","qualname":"::client::IntoClientRequest::into_client_request","value":"fn into_client_request(Self) -> Result<Request>","parent":{"krate":0,"index":133},"children":[],"decl_id":null,"docs":" Convert into a `Request` that can be used for a client connection.\n","sig":null,"attributes":[{"value":"/ Convert into a `Request` that can be used for a client connection.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":12438,"byte_end":12508,"line_start":190,"line_end":190,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":12613,"byte_end":12632,"line_start":195,"line_end":195,"column_start":8,"column_end":27},"name":"into_client_request","qualname":"<&'a str as client::IntoClientRequest>::into_client_request","value":"fn into_client_request(Self) -> Result<Request>","parent":{"krate":0,"index":133},"children":[],"decl_id":{"krate":0,"index":134},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":12771,"byte_end":12790,"line_start":201,"line_end":201,"column_start":8,"column_end":27},"name":"into_client_request","qualname":"<&'a String as client::IntoClientRequest>::into_client_request","value":"fn into_client_request(Self) -> Result<Request>","parent":{"krate":0,"index":133},"children":[],"decl_id":{"krate":0,"index":134},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":12933,"byte_end":12952,"line_start":207,"line_end":207,"column_start":8,"column_end":27},"name":"into_client_request","qualname":"<String as client::IntoClientRequest>::into_client_request","value":"fn into_client_request(Self) -> Result<Request>","parent":{"krate":0,"index":133},"children":[],"decl_id":{"krate":0,"index":134},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":13101,"byte_end":13120,"line_start":213,"line_end":213,"column_start":8,"column_end":27},"name":"into_client_request","qualname":"<&'a Uri as client::IntoClientRequest>::into_client_request","value":"fn into_client_request(Self) -> Result<Request>","parent":{"krate":0,"index":133},"children":[],"decl_id":{"krate":0,"index":134},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":13240,"byte_end":13259,"line_start":219,"line_end":219,"column_start":8,"column_end":27},"name":"into_client_request","qualname":"<Uri as client::IntoClientRequest>::into_client_request","value":"fn into_client_request(Self) -> Result<Request>","parent":{"krate":0,"index":133},"children":[],"decl_id":{"krate":0,"index":134},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":14045,"byte_end":14064,"line_start":244,"line_end":244,"column_start":8,"column_end":27},"name":"into_client_request","qualname":"<&'a Url as client::IntoClientRequest>::into_client_request","value":"fn into_client_request(Self) -> Result<Request>","parent":{"krate":0,"index":133},"children":[],"decl_id":{"krate":0,"index":134},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":14185,"byte_end":14204,"line_start":250,"line_end":250,"column_start":8,"column_end":27},"name":"into_client_request","qualname":"<Url as client::IntoClientRequest>::into_client_request","value":"fn into_client_request(Self) -> Result<Request>","parent":{"krate":0,"index":133},"children":[],"decl_id":{"krate":0,"index":134},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":14329,"byte_end":14348,"line_start":256,"line_end":256,"column_start":8,"column_end":27},"name":"into_client_request","qualname":"<Request as client::IntoClientRequest>::into_client_request","value":"fn into_client_request(Self) -> Result<Request>","parent":{"krate":0,"index":133},"children":[],"decl_id":{"krate":0,"index":134},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":14472,"byte_end":14491,"line_start":262,"line_end":262,"column_start":8,"column_end":27},"name":"into_client_request","qualname":"<httparse::Request as client::IntoClientRequest>::into_client_request","value":"fn into_client_request(Self) -> Result<Request>","parent":{"krate":0,"index":133},"children":[],"decl_id":{"krate":0,"index":134},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":164},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","parent":null,"children":[{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":169},{"krate":0,"index":172},{"krate":0,"index":175},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":182},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":189},{"krate":0,"index":192},{"krate":0,"index":195},{"krate":0,"index":1465},{"krate":0,"index":1466},{"krate":0,"index":1471},{"krate":0,"index":1480},{"krate":0,"index":1482},{"krate":0,"index":1484},{"krate":0,"index":1486},{"krate":0,"index":1488},{"krate":0,"index":1490},{"krate":0,"index":1492},{"krate":0,"index":198},{"krate":0,"index":200},{"krate":0,"index":202},{"krate":0,"index":204},{"krate":0,"index":206},{"krate":0,"index":208},{"krate":0,"index":210},{"krate":0,"index":212},{"krate":0,"index":1524},{"krate":0,"index":1525},{"krate":0,"index":1526},{"krate":0,"index":1535},{"krate":0,"index":1537},{"krate":0,"index":1538},{"krate":0,"index":1541},{"krate":0,"index":1542},{"krate":0,"index":1544},{"krate":0,"index":1546},{"krate":0,"index":1552},{"krate":0,"index":1553},{"krate":0,"index":1558},{"krate":0,"index":1567},{"krate":0,"index":1569},{"krate":0,"index":1571},{"krate":0,"index":1572},{"krate":0,"index":1575},{"krate":0,"index":1576},{"krate":0,"index":1578},{"krate":0,"index":1638},{"krate":0,"index":1639},{"krate":0,"index":1640},{"krate":0,"index":1649},{"krate":0,"index":1651},{"krate":0,"index":1652},{"krate":0,"index":1655},{"krate":0,"index":1656},{"krate":0,"index":1671},{"krate":0,"index":1672},{"krate":0,"index":1677},{"krate":0,"index":1686},{"krate":0,"index":1688},{"krate":0,"index":1690}],"decl_id":null,"docs":" Error handling.\n","sig":null,"attributes":[{"value":"/ Error handling.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":14618,"byte_end":14637,"line_start":1,"line_end":1,"column_start":1,"column_end":20}}]},{"kind":"Type","id":{"krate":0,"index":195},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":14853,"byte_end":14859,"line_start":10,"line_end":10,"column_start":10,"column_end":16},"name":"Result","qualname":"::error::Result","value":"result::Result<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Result type of all Tungstenite library calls.\n","sig":null,"attributes":[{"value":"/ Result type of all Tungstenite library calls.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":14794,"byte_end":14843,"line_start":9,"line_end":9,"column_start":1,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1494},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":15651,"byte_end":15667,"line_start":27,"line_end":27,"column_start":5,"column_end":21},"name":"ConnectionClosed","qualname":"::error::Error::ConnectionClosed","value":"Error::ConnectionClosed","parent":{"krate":0,"index":1465},"children":[],"decl_id":null,"docs":" WebSocket connection closed normally. This informs you of the close.\n It's not an error as such and nothing wrong happened.","sig":null,"attributes":[{"value":"/ WebSocket connection closed normally. This informs you of the close.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":14975,"byte_end":15047,"line_start":15,"line_end":15,"column_start":5,"column_end":77}},{"value":"/ It's not an error as such and nothing wrong happened.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":15052,"byte_end":15109,"line_start":16,"line_end":16,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":15114,"byte_end":15117,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ This is returned as soon as the close handshake is finished (we have both sent and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":15122,"byte_end":15208,"line_start":18,"line_end":18,"column_start":5,"column_end":91}},{"value":"/ received a close frame) on the server end and as soon as the server has closed the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":15213,"byte_end":15299,"line_start":19,"line_end":19,"column_start":5,"column_end":91}},{"value":"/ underlying connection if this endpoint is a client.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":15304,"byte_end":15359,"line_start":20,"line_end":20,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":15364,"byte_end":15367,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ Thus when you receive this, it is safe to drop the underlying connection.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":15372,"byte_end":15449,"line_start":22,"line_end":22,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":15454,"byte_end":15457,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ Receiving this error means that the WebSocket object is not usable anymore and the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":15462,"byte_end":15548,"line_start":24,"line_end":24,"column_start":5,"column_end":91}},{"value":"/ only meaningful action with it is dropping it.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":15553,"byte_end":15603,"line_start":25,"line_end":25,"column_start":5,"column_end":55}},{"value":"error(\"Connection closed normally\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":15608,"byte_end":15646,"line_start":26,"line_end":26,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1496},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":16088,"byte_end":16101,"line_start":36,"line_end":36,"column_start":5,"column_end":18},"name":"AlreadyClosed","qualname":"::error::Error::AlreadyClosed","value":"Error::AlreadyClosed","parent":{"krate":0,"index":1465},"children":[],"decl_id":null,"docs":" Trying to work with already closed connection.","sig":null,"attributes":[{"value":"/ Trying to work with already closed connection.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":15673,"byte_end":15723,"line_start":28,"line_end":28,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":15728,"byte_end":15731,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ Trying to read or write after receiving `ConnectionClosed` causes this.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":15736,"byte_end":15811,"line_start":30,"line_end":30,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":15816,"byte_end":15819,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ As opposed to `ConnectionClosed`, this indicates your code tries to operate on the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":15824,"byte_end":15910,"line_start":32,"line_end":32,"column_start":5,"column_end":91}},{"value":"/ connection when it really shouldn't anymore, so this really indicates a programmer","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":15915,"byte_end":16001,"line_start":33,"line_end":33,"column_start":5,"column_end":91}},{"value":"/ error on your part.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":16006,"byte_end":16029,"line_start":34,"line_end":34,"column_start":5,"column_end":28}},{"value":"error(\"Trying to work with closed connection\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":16034,"byte_end":16083,"line_start":35,"line_end":35,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1498},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":16299,"byte_end":16301,"line_start":40,"line_end":40,"column_start":5,"column_end":7},"name":"Io","qualname":"::error::Error::Io","value":"Error::Io(io::Error)","parent":{"krate":0,"index":1465},"children":[],"decl_id":null,"docs":" Input-output error. Apart from WouldBlock, these are generally errors with the\n underlying connection and you should probably consider them fatal.\n","sig":null,"attributes":[{"value":"/ Input-output error. Apart from WouldBlock, these are generally errors with the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":16107,"byte_end":16189,"line_start":37,"line_end":37,"column_start":5,"column_end":87}},{"value":"/ underlying connection and you should probably consider them fatal.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":16194,"byte_end":16264,"line_start":38,"line_end":38,"column_start":5,"column_end":75}},{"value":"error(\"IO error: {0}\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":16269,"byte_end":16294,"line_start":39,"line_end":39,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":1500},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":16310,"byte_end":16319,"line_start":40,"line_end":40,"column_start":16,"column_end":25},"name":"0","qualname":"::error::Error::Io::0","value":"std::io::Error","parent":{"krate":0,"index":1498},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"from","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":16302,"byte_end":16309,"line_start":40,"line_end":40,"column_start":8,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1501},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":16534,"byte_end":16537,"line_start":46,"line_end":46,"column_start":5,"column_end":8},"name":"Tls","qualname":"::error::Error::Tls","value":"Error::Tls(TlsError)","parent":{"krate":0,"index":1465},"children":[],"decl_id":null,"docs":" TLS error.","sig":null,"attributes":[{"value":"/ TLS error.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":16326,"byte_end":16340,"line_start":41,"line_end":41,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":16345,"byte_end":16348,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ Note that this error variant is enabled unconditionally even if no TLS feature is enabled,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":16353,"byte_end":16447,"line_start":43,"line_end":43,"column_start":5,"column_end":99}},{"value":"/ to provide a feature-agnostic API surface.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":16452,"byte_end":16498,"line_start":44,"line_end":44,"column_start":5,"column_end":51}},{"value":"error(\"TLS error: {0}\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":16503,"byte_end":16529,"line_start":45,"line_end":45,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":1503},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":16546,"byte_end":16554,"line_start":46,"line_end":46,"column_start":17,"column_end":25},"name":"0","qualname":"::error::Error::Tls::0","value":"error::TlsError","parent":{"krate":0,"index":1501},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"from","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":16538,"byte_end":16545,"line_start":46,"line_end":46,"column_start":9,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1504},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":16767,"byte_end":16775,"line_start":51,"line_end":51,"column_start":5,"column_end":13},"name":"Capacity","qualname":"::error::Error::Capacity","value":"Error::Capacity(CapacityError)","parent":{"krate":0,"index":1465},"children":[],"decl_id":null,"docs":" - When reading: buffer capacity exhausted.\n - When writing: your message is bigger than the configured max message size\n   (64MB by default).\n","sig":null,"attributes":[{"value":"/ - When reading: buffer capacity exhausted.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":16561,"byte_end":16607,"line_start":47,"line_end":47,"column_start":5,"column_end":51}},{"value":"/ - When writing: your message is bigger than the configured max message size","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":16612,"byte_end":16691,"line_start":48,"line_end":48,"column_start":5,"column_end":84}},{"value":"/   (64MB by default).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":16696,"byte_end":16720,"line_start":49,"line_end":49,"column_start":5,"column_end":29}},{"value":"error(\"Space limit exceeded: {0}\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":16725,"byte_end":16762,"line_start":50,"line_end":50,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":1506},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":16784,"byte_end":16797,"line_start":51,"line_end":51,"column_start":22,"column_end":35},"name":"0","qualname":"::error::Error::Capacity::0","value":"error::CapacityError","parent":{"krate":0,"index":1504},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"from","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":16776,"byte_end":16783,"line_start":51,"line_end":51,"column_start":14,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1507},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":16878,"byte_end":16886,"line_start":54,"line_end":54,"column_start":5,"column_end":13},"name":"Protocol","qualname":"::error::Error::Protocol","value":"Error::Protocol(ProtocolError)","parent":{"krate":0,"index":1465},"children":[],"decl_id":null,"docs":" Protocol violation.\n","sig":null,"attributes":[{"value":"/ Protocol violation.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":16804,"byte_end":16827,"line_start":52,"line_end":52,"column_start":5,"column_end":28}},{"value":"error(\"WebSocket protocol error: {0}\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":16832,"byte_end":16873,"line_start":53,"line_end":53,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":1509},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":16895,"byte_end":16908,"line_start":54,"line_end":54,"column_start":22,"column_end":35},"name":"0","qualname":"::error::Error::Protocol::0","value":"error::ProtocolError","parent":{"krate":0,"index":1507},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"from","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":16887,"byte_end":16894,"line_start":54,"line_end":54,"column_start":14,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1510},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":16983,"byte_end":16996,"line_start":57,"line_end":57,"column_start":5,"column_end":18},"name":"SendQueueFull","qualname":"::error::Error::SendQueueFull","value":"Error::SendQueueFull(Message)","parent":{"krate":0,"index":1465},"children":[],"decl_id":null,"docs":" Message send queue full.\n","sig":null,"attributes":[{"value":"/ Message send queue full.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":16915,"byte_end":16943,"line_start":55,"line_end":55,"column_start":5,"column_end":33}},{"value":"error(\"Send queue is full\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":16948,"byte_end":16978,"line_start":56,"line_end":56,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":1512},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":16997,"byte_end":17004,"line_start":57,"line_end":57,"column_start":19,"column_end":26},"name":"0","qualname":"::error::Error::SendQueueFull::0","value":"protocol::message::Message","parent":{"krate":0,"index":1510},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1513},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":17074,"byte_end":17078,"line_start":60,"line_end":60,"column_start":5,"column_end":9},"name":"Utf8","qualname":"::error::Error::Utf8","value":"Error::Utf8","parent":{"krate":0,"index":1465},"children":[],"decl_id":null,"docs":" UTF coding error.\n","sig":null,"attributes":[{"value":"/ UTF coding error.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":17011,"byte_end":17032,"line_start":58,"line_end":58,"column_start":5,"column_end":26}},{"value":"error(\"UTF-8 encoding error\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":17037,"byte_end":17069,"line_start":59,"line_end":59,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1515},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":17136,"byte_end":17139,"line_start":63,"line_end":63,"column_start":5,"column_end":8},"name":"Url","qualname":"::error::Error::Url","value":"Error::Url(UrlError)","parent":{"krate":0,"index":1465},"children":[],"decl_id":null,"docs":" Invalid URL.\n","sig":null,"attributes":[{"value":"/ Invalid URL.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":17084,"byte_end":17100,"line_start":61,"line_end":61,"column_start":5,"column_end":21}},{"value":"error(\"URL error: {0}\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":17105,"byte_end":17131,"line_start":62,"line_end":62,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":1517},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":17148,"byte_end":17156,"line_start":63,"line_end":63,"column_start":17,"column_end":25},"name":"0","qualname":"::error::Error::Url::0","value":"error::UrlError","parent":{"krate":0,"index":1515},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"from","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":17140,"byte_end":17147,"line_start":63,"line_end":63,"column_start":9,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1518},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":17227,"byte_end":17231,"line_start":66,"line_end":66,"column_start":5,"column_end":9},"name":"Http","qualname":"::error::Error::Http","value":"Error::Http(Response<Option<String>>)","parent":{"krate":0,"index":1465},"children":[],"decl_id":null,"docs":" HTTP error.\n","sig":null,"attributes":[{"value":"/ HTTP error.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":17163,"byte_end":17178,"line_start":64,"line_end":64,"column_start":5,"column_end":20}},{"value":"error(\"HTTP error: {}\",.0.status())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":17183,"byte_end":17222,"line_start":65,"line_end":65,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":1520},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":17232,"byte_end":17256,"line_start":66,"line_end":66,"column_start":10,"column_end":34},"name":"0","qualname":"::error::Error::Http::0","value":"http::Response<std::option::Option<std::string::String>>","parent":{"krate":0,"index":1518},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1521},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":17329,"byte_end":17339,"line_start":69,"line_end":69,"column_start":5,"column_end":15},"name":"HttpFormat","qualname":"::error::Error::HttpFormat","value":"Error::HttpFormat(http::Error)","parent":{"krate":0,"index":1465},"children":[],"decl_id":null,"docs":" HTTP format error.\n","sig":null,"attributes":[{"value":"/ HTTP format error.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":17263,"byte_end":17285,"line_start":67,"line_end":67,"column_start":5,"column_end":27}},{"value":"error(\"HTTP format error: {0}\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":17290,"byte_end":17324,"line_start":68,"line_end":68,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":1523},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":17348,"byte_end":17359,"line_start":69,"line_end":69,"column_start":24,"column_end":35},"name":"0","qualname":"::error::Error::HttpFormat::0","value":"http::Error","parent":{"krate":0,"index":1521},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"from","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":17340,"byte_end":17347,"line_start":69,"line_end":69,"column_start":16,"column_end":23}}]},{"kind":"Enum","id":{"krate":0,"index":1465},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":14963,"byte_end":14968,"line_start":14,"line_end":14,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"enum Error {\n    ConnectionClosed,\n    AlreadyClosed,\n    Io(io::Error),\n    Tls(TlsError),\n    Capacity(CapacityError),\n    Protocol(ProtocolError),\n    SendQueueFull(Message),\n    Utf8,\n    Url(UrlError),\n    Http(Response<Option<String>>),\n    HttpFormat(http::Error),\n}","parent":null,"children":[{"krate":0,"index":1494},{"krate":0,"index":1496},{"krate":0,"index":1498},{"krate":0,"index":1501},{"krate":0,"index":1504},{"krate":0,"index":1507},{"krate":0,"index":1510},{"krate":0,"index":1513},{"krate":0,"index":1515},{"krate":0,"index":1518},{"krate":0,"index":1521}],"decl_id":null,"docs":" Possible WebSocket errors.\n","sig":null,"attributes":[{"value":"/ Possible WebSocket errors.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":14899,"byte_end":14929,"line_start":12,"line_end":12,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":17410,"byte_end":17414,"line_start":73,"line_end":73,"column_start":8,"column_end":12},"name":"from","qualname":"<Error as std::convert::From>::from","value":"fn from(str::Utf8Error) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":17525,"byte_end":17529,"line_start":79,"line_end":79,"column_start":8,"column_end":12},"name":"from","qualname":"<Error as std::convert::From>::from","value":"fn from(string::FromUtf8Error) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":17658,"byte_end":17662,"line_start":85,"line_end":85,"column_start":8,"column_end":12},"name":"from","qualname":"<Error as std::convert::From>::from","value":"fn from(http::header::InvalidHeaderValue) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":17821,"byte_end":17825,"line_start":91,"line_end":91,"column_start":8,"column_end":12},"name":"from","qualname":"<Error as std::convert::From>::from","value":"fn from(http::header::InvalidHeaderName) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":17976,"byte_end":17980,"line_start":97,"line_end":97,"column_start":8,"column_end":12},"name":"from","qualname":"<Error as std::convert::From>::from","value":"fn from(http::header::ToStrError) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":18101,"byte_end":18105,"line_start":103,"line_end":103,"column_start":8,"column_end":12},"name":"from","qualname":"<Error as std::convert::From>::from","value":"fn from(http::uri::InvalidUri) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":18253,"byte_end":18257,"line_start":109,"line_end":109,"column_start":8,"column_end":12},"name":"from","qualname":"<Error as std::convert::From>::from","value":"fn from(http::status::InvalidStatusCode) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":18399,"byte_end":18403,"line_start":115,"line_end":115,"column_start":8,"column_end":12},"name":"from","qualname":"<Error as std::convert::From>::from","value":"fn from(httparse::Error) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1547},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":18887,"byte_end":18901,"line_start":128,"line_end":128,"column_start":5,"column_end":19},"name":"TooManyHeaders","qualname":"::error::CapacityError::TooManyHeaders","value":"CapacityError::TooManyHeaders","parent":{"krate":0,"index":1524},"children":[],"decl_id":null,"docs":" Too many headers provided (see [`httparse::Error::TooManyHeaders`]).\n","sig":null,"attributes":[{"value":"/ Too many headers provided (see [`httparse::Error::TooManyHeaders`]).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":18777,"byte_end":18849,"line_start":126,"line_end":126,"column_start":5,"column_end":77}},{"value":"error(\"Too many headers\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":18854,"byte_end":18882,"line_start":127,"line_end":127,"column_start":5,"column_end":33}}]},{"kind":"StructVariant","id":{"krate":0,"index":1549},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":19055,"byte_end":19069,"line_start":132,"line_end":132,"column_start":5,"column_end":19},"name":"MessageTooLong","qualname":"::error::CapacityError::MessageTooLong","value":"CapacityError::MessageTooLong { size, max_size }","parent":{"krate":0,"index":1524},"children":[],"decl_id":null,"docs":" Received header is too long.\n Message is bigger than the maximum allowed size.\n","sig":null,"attributes":[{"value":"/ Received header is too long.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":18907,"byte_end":18939,"line_start":129,"line_end":129,"column_start":5,"column_end":37}},{"value":"/ Message is bigger than the maximum allowed size.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":18944,"byte_end":18996,"line_start":130,"line_end":130,"column_start":5,"column_end":57}},{"value":"error(\"Message too long: {size} > {max_size}\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":19001,"byte_end":19050,"line_start":131,"line_end":131,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1550},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":19117,"byte_end":19121,"line_start":134,"line_end":134,"column_start":9,"column_end":13},"name":"size","qualname":"::error::CapacityError::MessageTooLong::size","value":"usize","parent":{"krate":0,"index":1549},"children":[],"decl_id":null,"docs":" The size of the message.\n","sig":null,"attributes":[{"value":"/ The size of the message.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":19080,"byte_end":19108,"line_start":133,"line_end":133,"column_start":9,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":1551},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":19184,"byte_end":19192,"line_start":136,"line_end":136,"column_start":9,"column_end":17},"name":"max_size","qualname":"::error::CapacityError::MessageTooLong::max_size","value":"usize","parent":{"krate":0,"index":1549},"children":[],"decl_id":null,"docs":" The maximum allowed message size.\n","sig":null,"attributes":[{"value":"/ The maximum allowed message size.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":19138,"byte_end":19175,"line_start":135,"line_end":135,"column_start":9,"column_end":46}}]},{"kind":"Enum","id":{"krate":0,"index":1524},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":18757,"byte_end":18770,"line_start":125,"line_end":125,"column_start":10,"column_end":23},"name":"CapacityError","qualname":"::error::CapacityError","value":"enum CapacityError {\n    TooManyHeaders,\n    MessageTooLong {\n            size: usize,\n            max_size: usize,\n        },\n}","parent":null,"children":[{"krate":0,"index":1547},{"krate":0,"index":1549}],"decl_id":null,"docs":" Indicates the specific type/cause of a capacity error.\n","sig":null,"attributes":[{"value":"/ Indicates the specific type/cause of a capacity error.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":18637,"byte_end":18695,"line_start":123,"line_end":123,"column_start":1,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1580},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":19507,"byte_end":19522,"line_start":145,"line_end":145,"column_start":5,"column_end":20},"name":"WrongHttpMethod","qualname":"::error::ProtocolError::WrongHttpMethod","value":"ProtocolError::WrongHttpMethod","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Use of the wrong HTTP method (the WebSocket protocol requires the GET method be used).\n","sig":null,"attributes":[{"value":"/ Use of the wrong HTTP method (the WebSocket protocol requires the GET method be used).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":19345,"byte_end":19435,"line_start":143,"line_end":143,"column_start":5,"column_end":95}},{"value":"error(\"Unsupported HTTP method used - only GET is allowed\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":19440,"byte_end":19502,"line_start":144,"line_end":144,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1582},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":19668,"byte_end":19684,"line_start":148,"line_end":148,"column_start":5,"column_end":21},"name":"WrongHttpVersion","qualname":"::error::ProtocolError::WrongHttpVersion","value":"ProtocolError::WrongHttpVersion","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Wrong HTTP version used (the WebSocket protocol requires version 1.1 or higher).\n","sig":null,"attributes":[{"value":"/ Wrong HTTP version used (the WebSocket protocol requires version 1.1 or higher).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":19528,"byte_end":19612,"line_start":146,"line_end":146,"column_start":5,"column_end":89}},{"value":"error(\"HTTP version must be 1.1 or higher\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":19617,"byte_end":19663,"line_start":147,"line_end":147,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1584},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":19791,"byte_end":19821,"line_start":151,"line_end":151,"column_start":5,"column_end":35},"name":"MissingConnectionUpgradeHeader","qualname":"::error::ProtocolError::MissingConnectionUpgradeHeader","value":"ProtocolError::MissingConnectionUpgradeHeader","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Missing `Connection: upgrade` HTTP header.\n","sig":null,"attributes":[{"value":"/ Missing `Connection: upgrade` HTTP header.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":19690,"byte_end":19736,"line_start":149,"line_end":149,"column_start":5,"column_end":51}},{"value":"error(\"No \\\"Connection: upgrade\\\" header\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":19741,"byte_end":19786,"line_start":150,"line_end":150,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1586},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":19926,"byte_end":19955,"line_start":154,"line_end":154,"column_start":5,"column_end":34},"name":"MissingUpgradeWebSocketHeader","qualname":"::error::ProtocolError::MissingUpgradeWebSocketHeader","value":"ProtocolError::MissingUpgradeWebSocketHeader","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Missing `Upgrade: websocket` HTTP header.\n","sig":null,"attributes":[{"value":"/ Missing `Upgrade: websocket` HTTP header.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":19827,"byte_end":19872,"line_start":152,"line_end":152,"column_start":5,"column_end":50}},{"value":"error(\"No \\\"Upgrade: websocket\\\" header\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":19877,"byte_end":19921,"line_start":153,"line_end":153,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1588},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":20074,"byte_end":20106,"line_start":157,"line_end":157,"column_start":5,"column_end":37},"name":"MissingSecWebSocketVersionHeader","qualname":"::error::ProtocolError::MissingSecWebSocketVersionHeader","value":"ProtocolError::MissingSecWebSocketVersionHeader","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Missing `Sec-WebSocket-Version: 13` HTTP header.\n","sig":null,"attributes":[{"value":"/ Missing `Sec-WebSocket-Version: 13` HTTP header.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":19961,"byte_end":20013,"line_start":155,"line_end":155,"column_start":5,"column_end":57}},{"value":"error(\"No \\\"Sec-WebSocket-Version: 13\\\" header\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":20018,"byte_end":20069,"line_start":156,"line_end":156,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1590},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":20209,"byte_end":20231,"line_start":160,"line_end":160,"column_start":5,"column_end":27},"name":"MissingSecWebSocketKey","qualname":"::error::ProtocolError::MissingSecWebSocketKey","value":"ProtocolError::MissingSecWebSocketKey","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Missing `Sec-WebSocket-Key` HTTP header.\n","sig":null,"attributes":[{"value":"/ Missing `Sec-WebSocket-Key` HTTP header.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":20112,"byte_end":20156,"line_start":158,"line_end":158,"column_start":5,"column_end":49}},{"value":"error(\"No \\\"Sec-WebSocket-Key\\\" header\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":20161,"byte_end":20204,"line_start":159,"line_end":159,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1592},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":20408,"byte_end":20437,"line_start":163,"line_end":163,"column_start":5,"column_end":34},"name":"SecWebSocketAcceptKeyMismatch","qualname":"::error::ProtocolError::SecWebSocketAcceptKeyMismatch","value":"ProtocolError::SecWebSocketAcceptKeyMismatch","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" The `Sec-WebSocket-Accept` header is either not present or does not specify the correct key value.\n","sig":null,"attributes":[{"value":"/ The `Sec-WebSocket-Accept` header is either not present or does not specify the correct key value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":20237,"byte_end":20339,"line_start":161,"line_end":161,"column_start":5,"column_end":107}},{"value":"error(\"Key mismatch in \\\"Sec-WebSocket-Accept\\\" header\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":20344,"byte_end":20403,"line_start":162,"line_end":162,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1594},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":20540,"byte_end":20556,"line_start":166,"line_end":166,"column_start":5,"column_end":21},"name":"JunkAfterRequest","qualname":"::error::ProtocolError::JunkAfterRequest","value":"ProtocolError::JunkAfterRequest","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Garbage data encountered after client request.\n","sig":null,"attributes":[{"value":"/ Garbage data encountered after client request.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":20443,"byte_end":20493,"line_start":164,"line_end":164,"column_start":5,"column_end":55}},{"value":"error(\"Junk after client request\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":20498,"byte_end":20535,"line_start":165,"line_end":165,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1596},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":20664,"byte_end":20688,"line_start":169,"line_end":169,"column_start":5,"column_end":29},"name":"CustomResponseSuccessful","qualname":"::error::ProtocolError::CustomResponseSuccessful","value":"ProtocolError::CustomResponseSuccessful","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Custom responses must be unsuccessful.\n","sig":null,"attributes":[{"value":"/ Custom responses must be unsuccessful.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":20562,"byte_end":20604,"line_start":167,"line_end":167,"column_start":5,"column_end":47}},{"value":"error(\"Custom response must not be successful\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":20609,"byte_end":20659,"line_start":168,"line_end":168,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1598},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":20885,"byte_end":20898,"line_start":172,"line_end":172,"column_start":5,"column_end":18},"name":"InvalidHeader","qualname":"::error::ProtocolError::InvalidHeader","value":"ProtocolError::InvalidHeader(HeaderName)","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Invalid header is passed. Or the header is missing in the request. Or not present at all. Check the request that you pass.\n","sig":null,"attributes":[{"value":"/ Invalid header is passed. Or the header is missing in the request. Or not present at all. Check the request that you pass.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":20694,"byte_end":20820,"line_start":170,"line_end":170,"column_start":5,"column_end":131}},{"value":"error(\"Missing, duplicated or incorrect header {0}\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":20825,"byte_end":20880,"line_start":171,"line_end":171,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":1600},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":20899,"byte_end":20909,"line_start":172,"line_end":172,"column_start":19,"column_end":29},"name":"0","qualname":"::error::ProtocolError::InvalidHeader::0","value":"http::header::HeaderName","parent":{"krate":0,"index":1598},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1601},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":21010,"byte_end":21029,"line_start":175,"line_end":175,"column_start":5,"column_end":24},"name":"HandshakeIncomplete","qualname":"::error::ProtocolError::HandshakeIncomplete","value":"ProtocolError::HandshakeIncomplete","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" No more data while still performing handshake.\n","sig":null,"attributes":[{"value":"/ No more data while still performing handshake.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":20916,"byte_end":20966,"line_start":173,"line_end":173,"column_start":5,"column_end":55}},{"value":"error(\"Handshake not finished\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":20971,"byte_end":21005,"line_start":174,"line_end":174,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1603},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":21123,"byte_end":21136,"line_start":178,"line_end":178,"column_start":5,"column_end":18},"name":"HttparseError","qualname":"::error::ProtocolError::HttparseError","value":"ProtocolError::HttparseError(httparse::Error)","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Wrapper around a [`httparse::Error`] value.\n","sig":null,"attributes":[{"value":"/ Wrapper around a [`httparse::Error`] value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":21035,"byte_end":21082,"line_start":176,"line_end":176,"column_start":5,"column_end":52}},{"value":"error(\"httparse error: {0}\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":21087,"byte_end":21118,"line_start":177,"line_end":177,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":1605},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":21145,"byte_end":21160,"line_start":178,"line_end":178,"column_start":27,"column_end":42},"name":"0","qualname":"::error::ProtocolError::HttparseError::0","value":"httparse::Error","parent":{"krate":0,"index":1603},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"from","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":21137,"byte_end":21144,"line_start":178,"line_end":178,"column_start":19,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1606},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":21283,"byte_end":21299,"line_start":181,"line_end":181,"column_start":5,"column_end":21},"name":"SendAfterClosing","qualname":"::error::ProtocolError::SendAfterClosing","value":"ProtocolError::SendAfterClosing","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Not allowed to send after having sent a closing frame.\n","sig":null,"attributes":[{"value":"/ Not allowed to send after having sent a closing frame.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":21167,"byte_end":21225,"line_start":179,"line_end":179,"column_start":5,"column_end":63}},{"value":"error(\"Sending after closing is not allowed\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":21230,"byte_end":21278,"line_start":180,"line_end":180,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1608},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":21409,"byte_end":21429,"line_start":184,"line_end":184,"column_start":5,"column_end":25},"name":"ReceivedAfterClosing","qualname":"::error::ProtocolError::ReceivedAfterClosing","value":"ProtocolError::ReceivedAfterClosing","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Remote sent data after sending a closing frame.\n","sig":null,"attributes":[{"value":"/ Remote sent data after sending a closing frame.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":21305,"byte_end":21356,"line_start":182,"line_end":182,"column_start":5,"column_end":56}},{"value":"error(\"Remote sent after having closed\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":21361,"byte_end":21404,"line_start":183,"line_end":183,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1610},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":21530,"byte_end":21549,"line_start":187,"line_end":187,"column_start":5,"column_end":24},"name":"NonZeroReservedBits","qualname":"::error::ProtocolError::NonZeroReservedBits","value":"ProtocolError::NonZeroReservedBits","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Reserved bits in frame header are non-zero.\n","sig":null,"attributes":[{"value":"/ Reserved bits in frame header are non-zero.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":21435,"byte_end":21482,"line_start":185,"line_end":185,"column_start":5,"column_end":52}},{"value":"error(\"Reserved bits are non-zero\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":21487,"byte_end":21525,"line_start":186,"line_end":186,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1612},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":21691,"byte_end":21714,"line_start":190,"line_end":190,"column_start":5,"column_end":28},"name":"UnmaskedFrameFromClient","qualname":"::error::ProtocolError::UnmaskedFrameFromClient","value":"ProtocolError::UnmaskedFrameFromClient","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" The server must close the connection when an unmasked frame is received.\n","sig":null,"attributes":[{"value":"/ The server must close the connection when an unmasked frame is received.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":21555,"byte_end":21631,"line_start":188,"line_end":188,"column_start":5,"column_end":81}},{"value":"error(\"Received an unmasked frame from client\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":21636,"byte_end":21686,"line_start":189,"line_end":189,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1614},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":21850,"byte_end":21871,"line_start":193,"line_end":193,"column_start":5,"column_end":26},"name":"MaskedFrameFromServer","qualname":"::error::ProtocolError::MaskedFrameFromServer","value":"ProtocolError::MaskedFrameFromServer","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" The client must close the connection when a masked frame is received.\n","sig":null,"attributes":[{"value":"/ The client must close the connection when a masked frame is received.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":21720,"byte_end":21793,"line_start":191,"line_end":191,"column_start":5,"column_end":78}},{"value":"error(\"Received a masked frame from server\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":21798,"byte_end":21845,"line_start":192,"line_end":192,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1616},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":21965,"byte_end":21987,"line_start":196,"line_end":196,"column_start":5,"column_end":27},"name":"FragmentedControlFrame","qualname":"::error::ProtocolError::FragmentedControlFrame","value":"ProtocolError::FragmentedControlFrame","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Control frames must not be fragmented.\n","sig":null,"attributes":[{"value":"/ Control frames must not be fragmented.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":21877,"byte_end":21919,"line_start":194,"line_end":194,"column_start":5,"column_end":47}},{"value":"error(\"Fragmented control frame\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":21924,"byte_end":21960,"line_start":195,"line_end":195,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1618},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":22132,"byte_end":22150,"line_start":199,"line_end":199,"column_start":5,"column_end":23},"name":"ControlFrameTooBig","qualname":"::error::ProtocolError::ControlFrameTooBig","value":"ProtocolError::ControlFrameTooBig","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Control frames must have a payload of 125 bytes or less.\n","sig":null,"attributes":[{"value":"/ Control frames must have a payload of 125 bytes or less.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":21993,"byte_end":22053,"line_start":197,"line_end":197,"column_start":5,"column_end":65}},{"value":"error(\"Control frame too big (payload must be 125 bytes or less)\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":22058,"byte_end":22127,"line_start":198,"line_end":198,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1620},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":22250,"byte_end":22273,"line_start":202,"line_end":202,"column_start":5,"column_end":28},"name":"UnknownControlFrameType","qualname":"::error::ProtocolError::UnknownControlFrameType","value":"ProtocolError::UnknownControlFrameType(u8)","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Type of control frame not recognised.\n","sig":null,"attributes":[{"value":"/ Type of control frame not recognised.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":22156,"byte_end":22197,"line_start":200,"line_end":200,"column_start":5,"column_end":46}},{"value":"error(\"Unknown control frame type: {0}\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":22202,"byte_end":22245,"line_start":201,"line_end":201,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":1622},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":22274,"byte_end":22276,"line_start":202,"line_end":202,"column_start":29,"column_end":31},"name":"0","qualname":"::error::ProtocolError::UnknownControlFrameType::0","value":"u8","parent":{"krate":0,"index":1620},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1623},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":22371,"byte_end":22391,"line_start":205,"line_end":205,"column_start":5,"column_end":25},"name":"UnknownDataFrameType","qualname":"::error::ProtocolError::UnknownDataFrameType","value":"ProtocolError::UnknownDataFrameType(u8)","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Type of data frame not recognised.\n","sig":null,"attributes":[{"value":"/ Type of data frame not recognised.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":22283,"byte_end":22321,"line_start":203,"line_end":203,"column_start":5,"column_end":43}},{"value":"error(\"Unknown data frame type: {0}\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":22326,"byte_end":22366,"line_start":204,"line_end":204,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":1625},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":22392,"byte_end":22394,"line_start":205,"line_end":205,"column_start":26,"column_end":28},"name":"0","qualname":"::error::ProtocolError::UnknownDataFrameType::0","value":"u8","parent":{"krate":0,"index":1623},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1626},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":22531,"byte_end":22554,"line_start":208,"line_end":208,"column_start":5,"column_end":28},"name":"UnexpectedContinueFrame","qualname":"::error::ProtocolError::UnexpectedContinueFrame","value":"ProtocolError::UnexpectedContinueFrame","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Received a continue frame despite there being nothing to continue.\n","sig":null,"attributes":[{"value":"/ Received a continue frame despite there being nothing to continue.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":22401,"byte_end":22471,"line_start":206,"line_end":206,"column_start":5,"column_end":75}},{"value":"error(\"Continue frame but nothing to continue\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":22476,"byte_end":22526,"line_start":207,"line_end":207,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1628},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":22679,"byte_end":22695,"line_start":211,"line_end":211,"column_start":5,"column_end":21},"name":"ExpectedFragment","qualname":"::error::ProtocolError::ExpectedFragment","value":"ProtocolError::ExpectedFragment(Data)","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Received data while waiting for more fragments.\n","sig":null,"attributes":[{"value":"/ Received data while waiting for more fragments.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":22560,"byte_end":22611,"line_start":209,"line_end":209,"column_start":5,"column_end":56}},{"value":"error(\"While waiting for more fragments received: {0}\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":22616,"byte_end":22674,"line_start":210,"line_end":210,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":1630},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":22696,"byte_end":22700,"line_start":211,"line_end":211,"column_start":22,"column_end":26},"name":"0","qualname":"::error::ProtocolError::ExpectedFragment::0","value":"protocol::frame::coding::Data","parent":{"krate":0,"index":1628},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1631},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":22834,"byte_end":22862,"line_start":214,"line_end":214,"column_start":5,"column_end":33},"name":"ResetWithoutClosingHandshake","qualname":"::error::ProtocolError::ResetWithoutClosingHandshake","value":"ProtocolError::ResetWithoutClosingHandshake","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Connection closed without performing the closing handshake.\n","sig":null,"attributes":[{"value":"/ Connection closed without performing the closing handshake.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":22707,"byte_end":22770,"line_start":212,"line_end":212,"column_start":5,"column_end":68}},{"value":"error(\"Connection reset without closing handshake\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":22775,"byte_end":22829,"line_start":213,"line_end":213,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1633},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":22955,"byte_end":22968,"line_start":217,"line_end":217,"column_start":5,"column_end":18},"name":"InvalidOpcode","qualname":"::error::ProtocolError::InvalidOpcode","value":"ProtocolError::InvalidOpcode(u8)","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" Encountered an invalid opcode.\n","sig":null,"attributes":[{"value":"/ Encountered an invalid opcode.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":22868,"byte_end":22902,"line_start":215,"line_end":215,"column_start":5,"column_end":39}},{"value":"error(\"Encountered invalid opcode: {0}\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":22907,"byte_end":22950,"line_start":216,"line_end":216,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":1635},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":22969,"byte_end":22971,"line_start":217,"line_end":217,"column_start":19,"column_end":21},"name":"0","qualname":"::error::ProtocolError::InvalidOpcode::0","value":"u8","parent":{"krate":0,"index":1633},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1636},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":23071,"byte_end":23091,"line_start":220,"line_end":220,"column_start":5,"column_end":25},"name":"InvalidCloseSequence","qualname":"::error::ProtocolError::InvalidCloseSequence","value":"ProtocolError::InvalidCloseSequence","parent":{"krate":0,"index":1552},"children":[],"decl_id":null,"docs":" The payload for the closing frame is invalid.\n","sig":null,"attributes":[{"value":"/ The payload for the closing frame is invalid.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":22978,"byte_end":23027,"line_start":218,"line_end":218,"column_start":5,"column_end":54}},{"value":"error(\"Invalid close sequence\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":23032,"byte_end":23066,"line_start":219,"line_end":219,"column_start":5,"column_end":39}}]},{"kind":"Enum","id":{"krate":0,"index":1552},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":19325,"byte_end":19338,"line_start":142,"line_end":142,"column_start":10,"column_end":23},"name":"ProtocolError","qualname":"::error::ProtocolError","value":"enum ProtocolError {\n    WrongHttpMethod,\n    WrongHttpVersion,\n    MissingConnectionUpgradeHeader,\n    MissingUpgradeWebSocketHeader,\n    MissingSecWebSocketVersionHeader,\n    MissingSecWebSocketKey,\n    SecWebSocketAcceptKeyMismatch,\n    JunkAfterRequest,\n    CustomResponseSuccessful,\n    InvalidHeader(HeaderName),\n    HandshakeIncomplete,\n    HttparseError(httparse::Error),\n    SendAfterClosing,\n    ReceivedAfterClosing,\n    NonZeroReservedBits,\n    UnmaskedFrameFromClient,\n    MaskedFrameFromServer,\n    FragmentedControlFrame,\n    ControlFrameTooBig,\n    UnknownControlFrameType(u8),\n    UnknownDataFrameType(u8),\n    UnexpectedContinueFrame,\n    ExpectedFragment(Data),\n    ResetWithoutClosingHandshake,\n    InvalidOpcode(u8),\n    InvalidCloseSequence,\n}","parent":null,"children":[{"krate":0,"index":1580},{"krate":0,"index":1582},{"krate":0,"index":1584},{"krate":0,"index":1586},{"krate":0,"index":1588},{"krate":0,"index":1590},{"krate":0,"index":1592},{"krate":0,"index":1594},{"krate":0,"index":1596},{"krate":0,"index":1598},{"krate":0,"index":1601},{"krate":0,"index":1603},{"krate":0,"index":1606},{"krate":0,"index":1608},{"krate":0,"index":1610},{"krate":0,"index":1612},{"krate":0,"index":1614},{"krate":0,"index":1616},{"krate":0,"index":1618},{"krate":0,"index":1620},{"krate":0,"index":1623},{"krate":0,"index":1626},{"krate":0,"index":1628},{"krate":0,"index":1631},{"krate":0,"index":1633},{"krate":0,"index":1636}],"decl_id":null,"docs":" Indicates the specific type/cause of a protocol error.\n","sig":null,"attributes":[{"value":"/ Indicates the specific type/cause of a protocol error.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":19211,"byte_end":19269,"line_start":140,"line_end":140,"column_start":1,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1658},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":23332,"byte_end":23352,"line_start":228,"line_end":228,"column_start":5,"column_end":25},"name":"TlsFeatureNotEnabled","qualname":"::error::UrlError::TlsFeatureNotEnabled","value":"UrlError::TlsFeatureNotEnabled","parent":{"krate":0,"index":1638},"children":[],"decl_id":null,"docs":" TLS is used despite not being compiled with the TLS feature enabled.\n","sig":null,"attributes":[{"value":"/ TLS is used despite not being compiled with the TLS feature enabled.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":23211,"byte_end":23283,"line_start":226,"line_end":226,"column_start":5,"column_end":77}},{"value":"error(\"TLS support not compiled in\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":23288,"byte_end":23327,"line_start":227,"line_end":227,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1660},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":23444,"byte_end":23454,"line_start":231,"line_end":231,"column_start":5,"column_end":15},"name":"NoHostName","qualname":"::error::UrlError::NoHostName","value":"UrlError::NoHostName","parent":{"krate":0,"index":1638},"children":[],"decl_id":null,"docs":" The URL does not include a host name.\n","sig":null,"attributes":[{"value":"/ The URL does not include a host name.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":23358,"byte_end":23399,"line_start":229,"line_end":229,"column_start":5,"column_end":46}},{"value":"error(\"No host name in the URL\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":23404,"byte_end":23439,"line_start":230,"line_end":230,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1662},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":23542,"byte_end":23557,"line_start":234,"line_end":234,"column_start":5,"column_end":20},"name":"UnableToConnect","qualname":"::error::UrlError::UnableToConnect","value":"UrlError::UnableToConnect(String)","parent":{"krate":0,"index":1638},"children":[],"decl_id":null,"docs":" Failed to connect with this URL.\n","sig":null,"attributes":[{"value":"/ Failed to connect with this URL.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":23460,"byte_end":23496,"line_start":232,"line_end":232,"column_start":5,"column_end":41}},{"value":"error(\"Unable to connect to {0}\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":23501,"byte_end":23537,"line_start":233,"line_end":233,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":1664},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":23558,"byte_end":23564,"line_start":234,"line_end":234,"column_start":21,"column_end":27},"name":"0","qualname":"::error::UrlError::UnableToConnect::0","value":"std::string::String","parent":{"krate":0,"index":1662},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1665},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":23688,"byte_end":23708,"line_start":237,"line_end":237,"column_start":5,"column_end":25},"name":"UnsupportedUrlScheme","qualname":"::error::UrlError::UnsupportedUrlScheme","value":"UrlError::UnsupportedUrlScheme","parent":{"krate":0,"index":1638},"children":[],"decl_id":null,"docs":" Unsupported URL scheme used (only `ws://` or `wss://` may be used).\n","sig":null,"attributes":[{"value":"/ Unsupported URL scheme used (only `ws://` or `wss://` may be used).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":23571,"byte_end":23642,"line_start":235,"line_end":235,"column_start":5,"column_end":76}},{"value":"error(\"URL scheme not supported\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":23647,"byte_end":23683,"line_start":236,"line_end":236,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1667},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":23813,"byte_end":23826,"line_start":240,"line_end":240,"column_start":5,"column_end":18},"name":"EmptyHostName","qualname":"::error::UrlError::EmptyHostName","value":"UrlError::EmptyHostName","parent":{"krate":0,"index":1638},"children":[],"decl_id":null,"docs":" The URL host name, though included, is empty.\n","sig":null,"attributes":[{"value":"/ The URL host name, though included, is empty.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":23714,"byte_end":23763,"line_start":238,"line_end":238,"column_start":5,"column_end":54}},{"value":"error(\"URL contains empty host name\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":23768,"byte_end":23808,"line_start":239,"line_end":239,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1669},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":23916,"byte_end":23929,"line_start":243,"line_end":243,"column_start":5,"column_end":18},"name":"NoPathOrQuery","qualname":"::error::UrlError::NoPathOrQuery","value":"UrlError::NoPathOrQuery","parent":{"krate":0,"index":1638},"children":[],"decl_id":null,"docs":" The URL does not include a path/query.\n","sig":null,"attributes":[{"value":"/ The URL does not include a path/query.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":23832,"byte_end":23874,"line_start":241,"line_end":241,"column_start":5,"column_end":47}},{"value":"error(\"No path/query in URL\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":23879,"byte_end":23911,"line_start":242,"line_end":242,"column_start":5,"column_end":37}}]},{"kind":"Enum","id":{"krate":0,"index":1638},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":23196,"byte_end":23204,"line_start":225,"line_end":225,"column_start":10,"column_end":18},"name":"UrlError","qualname":"::error::UrlError","value":"enum UrlError {\n    TlsFeatureNotEnabled,\n    NoHostName,\n    UnableToConnect(String),\n    UnsupportedUrlScheme,\n    EmptyHostName,\n    NoPathOrQuery,\n}","parent":null,"children":[{"krate":0,"index":1658},{"krate":0,"index":1660},{"krate":0,"index":1662},{"krate":0,"index":1665},{"krate":0,"index":1667},{"krate":0,"index":1669}],"decl_id":null,"docs":" Indicates the specific type/cause of URL error.\n","sig":null,"attributes":[{"value":"/ Indicates the specific type/cause of URL error.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":23096,"byte_end":23147,"line_start":223,"line_end":223,"column_start":1,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1692},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":24486,"byte_end":24492,"line_start":261,"line_end":261,"column_start":5,"column_end":11},"name":"Rustls","qualname":"::error::TlsError::Rustls","value":"TlsError::Rustls(rustls::Error)","parent":{"krate":0,"index":1671},"children":[],"decl_id":null,"docs":" Rustls error.\n","sig":null,"attributes":[{"value":"/ Rustls error.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":24393,"byte_end":24410,"line_start":258,"line_end":258,"column_start":5,"column_end":22}},{"value":"cfg(feature = \"__rustls-tls\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":24415,"byte_end":24447,"line_start":259,"line_end":259,"column_start":5,"column_end":37}},{"value":"error(\"rustls error: {0}\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":24452,"byte_end":24481,"line_start":260,"line_end":260,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":1694},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":24501,"byte_end":24514,"line_start":261,"line_end":261,"column_start":20,"column_end":33},"name":"0","qualname":"::error::TlsError::Rustls::0","value":"rustls::Error","parent":{"krate":0,"index":1692},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"from","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":24493,"byte_end":24500,"line_start":261,"line_end":261,"column_start":12,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1695},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":24614,"byte_end":24620,"line_start":265,"line_end":265,"column_start":5,"column_end":11},"name":"Webpki","qualname":"::error::TlsError::Webpki","value":"TlsError::Webpki(webpki::Error)","parent":{"krate":0,"index":1671},"children":[],"decl_id":null,"docs":" Webpki error.\n","sig":null,"attributes":[{"value":"/ Webpki error.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":24521,"byte_end":24538,"line_start":262,"line_end":262,"column_start":5,"column_end":22}},{"value":"cfg(feature = \"__rustls-tls\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":24543,"byte_end":24575,"line_start":263,"line_end":263,"column_start":5,"column_end":37}},{"value":"error(\"webpki error: {0}\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":24580,"byte_end":24609,"line_start":264,"line_end":264,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":1697},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":24629,"byte_end":24642,"line_start":265,"line_end":265,"column_start":20,"column_end":33},"name":"0","qualname":"::error::TlsError::Webpki::0","value":"webpki::Error","parent":{"krate":0,"index":1695},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"from","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":24621,"byte_end":24628,"line_start":265,"line_end":265,"column_start":12,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1698},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":24754,"byte_end":24768,"line_start":269,"line_end":269,"column_start":5,"column_end":19},"name":"InvalidDnsName","qualname":"::error::TlsError::InvalidDnsName","value":"TlsError::InvalidDnsName","parent":{"krate":0,"index":1671},"children":[],"decl_id":null,"docs":" DNS name resolution error.\n","sig":null,"attributes":[{"value":"/ DNS name resolution error.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":24649,"byte_end":24679,"line_start":266,"line_end":266,"column_start":5,"column_end":35}},{"value":"cfg(feature = \"__rustls-tls\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":24684,"byte_end":24716,"line_start":267,"line_end":267,"column_start":5,"column_end":37}},{"value":"error(\"Invalid DNS name\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":24721,"byte_end":24749,"line_start":268,"line_end":268,"column_start":5,"column_end":33}}]},{"kind":"Enum","id":{"krate":0,"index":1671},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":24234,"byte_end":24242,"line_start":253,"line_end":253,"column_start":10,"column_end":18},"name":"TlsError","qualname":"::error::TlsError","value":"enum TlsError {\n    Rustls(rustls::Error),\n    Webpki(webpki::Error),\n    InvalidDnsName,\n}","parent":null,"children":[{"krate":0,"index":1692},{"krate":0,"index":1695},{"krate":0,"index":1698}],"decl_id":null,"docs":" TLS errors.","sig":null,"attributes":[{"value":"/ TLS errors.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":23934,"byte_end":23949,"line_start":246,"line_end":246,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":23950,"byte_end":23953,"line_start":247,"line_end":247,"column_start":1,"column_end":4}},{"value":"/ Note that even if you enable only the rustls-based TLS support, the error at runtime could still","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":23954,"byte_end":24054,"line_start":248,"line_end":248,"column_start":1,"column_end":101}},{"value":"/ be `Native`, as another crate in the dependency graph may enable native TLS support.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":24055,"byte_end":24143,"line_start":249,"line_end":249,"column_start":1,"column_end":89}},{"value":"allow(missing_copy_implementations)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":24144,"byte_end":24182,"line_start":250,"line_end":250,"column_start":1,"column_end":39}},{"value":"non_exhaustive","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":24207,"byte_end":24224,"line_start":252,"line_end":252,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":214},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"handshake","qualname":"::handshake","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/mod.rs","parent":null,"children":[{"krate":0,"index":215},{"krate":0,"index":337},{"krate":0,"index":368},{"krate":0,"index":501},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":550},{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":557},{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":564},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":571},{"krate":0,"index":574},{"krate":0,"index":577},{"krate":0,"index":580},{"krate":0,"index":1776},{"krate":0,"index":1780},{"krate":0,"index":583},{"krate":0,"index":588},{"krate":0,"index":596},{"krate":0,"index":599},{"krate":0,"index":602},{"krate":0,"index":604},{"krate":0,"index":607},{"krate":0,"index":1783},{"krate":0,"index":1792},{"krate":0,"index":612}],"decl_id":null,"docs":" WebSocket handshake control.\n","sig":null,"attributes":[{"value":"/ WebSocket handshake control.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/mod.rs","byte_start":24773,"byte_end":24805,"line_start":1,"line_end":1,"column_start":1,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":215},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/client.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"client","qualname":"::handshake::client","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/client.rs","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":221},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":231},{"krate":0,"index":234},{"krate":0,"index":237},{"krate":0,"index":240},{"krate":0,"index":243},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":255},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":262},{"krate":0,"index":265},{"krate":0,"index":268},{"krate":0,"index":271},{"krate":0,"index":274},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":282},{"krate":0,"index":285},{"krate":0,"index":288},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":295},{"krate":0,"index":298},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":1700},{"krate":0,"index":1705},{"krate":0,"index":303},{"krate":0,"index":306},{"krate":0,"index":312},{"krate":0,"index":1708},{"krate":0,"index":1710},{"krate":0,"index":320},{"krate":0,"index":328},{"krate":0,"index":331},{"krate":0,"index":335}],"decl_id":null,"docs":" Client handshake machine.\n","sig":null,"attributes":[{"value":"/ Client handshake machine.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/client.rs","byte_start":28863,"byte_end":28892,"line_start":1,"line_end":1,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":301},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/client.rs","byte_start":29446,"byte_end":29453,"line_start":26,"line_end":26,"column_start":10,"column_end":17},"name":"Request","qualname":"::handshake::client::Request","value":"HttpRequest<()>","parent":null,"children":[],"decl_id":null,"docs":" Client request type.\n","sig":null,"attributes":[{"value":"/ Client request type.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/client.rs","byte_start":29412,"byte_end":29436,"line_start":25,"line_end":25,"column_start":1,"column_end":25}}]},{"kind":"Type","id":{"krate":0,"index":302},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/client.rs","byte_start":29509,"byte_end":29517,"line_start":29,"line_end":29,"column_start":10,"column_end":18},"name":"Response","qualname":"::handshake::client::Response","value":"HttpResponse<()>","parent":null,"children":[],"decl_id":null,"docs":" Client response type.\n","sig":null,"attributes":[{"value":"/ Client response type.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/client.rs","byte_start":29474,"byte_end":29499,"line_start":28,"line_end":28,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":1700},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/client.rs","byte_start":29594,"byte_end":29609,"line_start":33,"line_end":33,"column_start":12,"column_end":27},"name":"ClientHandshake","qualname":"::handshake::client::ClientHandshake","value":"ClientHandshake {  }","parent":null,"children":[{"krate":0,"index":1702},{"krate":0,"index":1703},{"krate":0,"index":1704}],"decl_id":null,"docs":" Client handshake role.\n","sig":null,"attributes":[{"value":"/ Client handshake role.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/client.rs","byte_start":29539,"byte_end":29565,"line_start":31,"line_end":31,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/client.rs","byte_start":29804,"byte_end":29809,"line_start":41,"line_end":41,"column_start":12,"column_end":17},"name":"start","qualname":"<ClientHandshake<S>>::start","value":"fn start(S, Request, Option<WebSocketConfig>) -> Result<MidHandshake<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Initiate a client handshake.\n","sig":null,"attributes":[{"value":"/ Initiate a client handshake.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/client.rs","byte_start":29760,"byte_end":29792,"line_start":40,"line_end":40,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/client.rs","byte_start":31119,"byte_end":31133,"line_start":77,"line_end":77,"column_start":8,"column_end":22},"name":"stage_finished","qualname":"<ClientHandshake<S> as handshake::HandshakeRole>::stage_finished","value":"fn stage_finished(&mut Self,\nStageResult<Self::IncomingData, Self::InternalStream>)\n-> Result<ProcessingResult<Self::InternalStream, Self::FinalResult>>","parent":{"krate":0,"index":607},"children":[],"decl_id":{"krate":0,"index":611},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":329},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/client.rs","byte_start":38264,"byte_end":38273,"line_start":240,"line_end":240,"column_start":8,"column_end":17},"name":"try_parse","qualname":"<Response as handshake::machine::TryParse>::try_parse","value":"fn try_parse(&[u8]) -> Result<Option<(usize, Self)>>","parent":{"krate":0,"index":544},"children":[],"decl_id":{"krate":0,"index":545},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":335},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/client.rs","byte_start":39480,"byte_end":39492,"line_start":270,"line_end":270,"column_start":8,"column_end":20},"name":"generate_key","qualname":"::handshake::client::generate_key","value":"fn generate_key() -> String","parent":null,"children":[],"decl_id":null,"docs":" Generate a random key for the `Sec-WebSocket-Key` header.\n","sig":null,"attributes":[{"value":"/ Generate a random key for the `Sec-WebSocket-Key` header.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/client.rs","byte_start":39411,"byte_end":39472,"line_start":269,"line_end":269,"column_start":1,"column_end":62}}]},{"kind":"Mod","id":{"krate":0,"index":337},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/headers.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"headers","qualname":"::handshake::headers","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/headers.rs","parent":null,"children":[{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":342},{"krate":0,"index":345},{"krate":0,"index":348},{"krate":0,"index":351},{"krate":0,"index":354},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":361},{"krate":0,"index":365}],"decl_id":null,"docs":" HTTP Request and response header handling.\n","sig":null,"attributes":[{"value":"/ HTTP Request and response header handling.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/headers.rs","byte_start":42290,"byte_end":42336,"line_start":1,"line_end":1,"column_start":1,"column_end":47}}]},{"kind":"Const","id":{"krate":0,"index":357},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/headers.rs","byte_start":42526,"byte_end":42537,"line_start":10,"line_end":10,"column_start":11,"column_end":22},"name":"MAX_HEADERS","qualname":"::handshake::headers::MAX_HEADERS","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" Limit for the number of header lines.\n","sig":null,"attributes":[{"value":"/ Limit for the number of header lines.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/headers.rs","byte_start":42474,"byte_end":42515,"line_start":9,"line_end":9,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/headers.rs","byte_start":43195,"byte_end":43204,"line_start":32,"line_end":32,"column_start":8,"column_end":17},"name":"try_parse","qualname":"<HeaderMap as handshake::machine::TryParse>::try_parse","value":"fn try_parse(&[u8]) -> Result<Option<(usize, Self)>>","parent":{"krate":0,"index":544},"children":[],"decl_id":{"krate":0,"index":545},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":368},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/server.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"server","qualname":"::handshake::server","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/server.rs","parent":null,"children":[{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":374},{"krate":0,"index":377},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":383},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":390},{"krate":0,"index":393},{"krate":0,"index":396},{"krate":0,"index":399},{"krate":0,"index":402},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":414},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":421},{"krate":0,"index":424},{"krate":0,"index":427},{"krate":0,"index":430},{"krate":0,"index":433},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":441},{"krate":0,"index":444},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":451},{"krate":0,"index":454},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":473},{"krate":0,"index":476},{"krate":0,"index":479},{"krate":0,"index":483},{"krate":0,"index":485},{"krate":0,"index":1712},{"krate":0,"index":1714},{"krate":0,"index":1716},{"krate":0,"index":1717},{"krate":0,"index":488},{"krate":0,"index":1719},{"krate":0,"index":1726},{"krate":0,"index":490},{"krate":0,"index":494}],"decl_id":null,"docs":" Server handshake machine.\n","sig":null,"attributes":[{"value":"/ Server handshake machine.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/server.rs","byte_start":44962,"byte_end":44991,"line_start":1,"line_end":1,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":457},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/server.rs","byte_start":45573,"byte_end":45580,"line_start":27,"line_end":27,"column_start":10,"column_end":17},"name":"Request","qualname":"::handshake::server::Request","value":"HttpRequest<()>","parent":null,"children":[],"decl_id":null,"docs":" Server request type.\n","sig":null,"attributes":[{"value":"/ Server request type.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/server.rs","byte_start":45539,"byte_end":45563,"line_start":26,"line_end":26,"column_start":1,"column_end":25}}]},{"kind":"Type","id":{"krate":0,"index":458},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/server.rs","byte_start":45636,"byte_end":45644,"line_start":30,"line_end":30,"column_start":10,"column_end":18},"name":"Response","qualname":"::handshake::server::Response","value":"HttpResponse<()>","parent":null,"children":[],"decl_id":null,"docs":" Server response type.\n","sig":null,"attributes":[{"value":"/ Server response type.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/server.rs","byte_start":45601,"byte_end":45626,"line_start":29,"line_end":29,"column_start":1,"column_end":26}}]},{"kind":"Type","id":{"krate":0,"index":459},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/server.rs","byte_start":45707,"byte_end":45720,"line_start":33,"line_end":33,"column_start":10,"column_end":23},"name":"ErrorResponse","qualname":"::handshake::server::ErrorResponse","value":"HttpResponse<Option<String>>","parent":null,"children":[],"decl_id":null,"docs":" Server error response type.\n","sig":null,"attributes":[{"value":"/ Server error response type.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/server.rs","byte_start":45666,"byte_end":45697,"line_start":32,"line_end":32,"column_start":1,"column_end":32}}]},{"kind":"Function","id":{"krate":0,"index":469},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/server.rs","byte_start":47346,"byte_end":47361,"line_start":84,"line_end":84,"column_start":8,"column_end":23},"name":"create_response","qualname":"::handshake::server::create_response","value":"fn create_response(&Request) -> Result<Response>","parent":null,"children":[],"decl_id":null,"docs":" Create a response for the request.\n","sig":null,"attributes":[{"value":"/ Create a response for the request.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/server.rs","byte_start":47300,"byte_end":47338,"line_start":83,"line_end":83,"column_start":1,"column_end":39}}]},{"kind":"Function","id":{"krate":0,"index":470},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/server.rs","byte_start":47512,"byte_end":47537,"line_start":89,"line_end":89,"column_start":8,"column_end":33},"name":"create_response_with_body","qualname":"::handshake::server::create_response_with_body","value":"fn create_response_with_body<T,\nimpl FnOnce() -> T>(&HttpRequest<T>, impl FnOnce() -> T)\n-> Result<HttpResponse<T>> where impl FnOnce() -> T: FnOnce() -> T","parent":null,"children":[],"decl_id":null,"docs":" Create a response for the request with a custom body.\n","sig":null,"attributes":[{"value":"/ Create a response for the request with a custom body.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/server.rs","byte_start":47447,"byte_end":47504,"line_start":88,"line_end":88,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/server.rs","byte_start":48139,"byte_end":48148,"line_start":115,"line_end":115,"column_start":8,"column_end":17},"name":"try_parse","qualname":"<Request as handshake::machine::TryParse>::try_parse","value":"fn try_parse(&[u8]) -> Result<Option<(usize, Self)>>","parent":{"krate":0,"index":544},"children":[],"decl_id":{"krate":0,"index":545},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":483},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/server.rs","byte_start":49815,"byte_end":49823,"line_start":155,"line_end":155,"column_start":11,"column_end":19},"name":"Callback","qualname":"::handshake::server::Callback","value":"Callback: Sized","parent":null,"children":[{"krate":0,"index":484}],"decl_id":null,"docs":" The callback trait.","sig":null,"attributes":[{"value":"/ The callback trait.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/server.rs","byte_start":49460,"byte_end":49483,"line_start":149,"line_end":149,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/server.rs","byte_start":49484,"byte_end":49487,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ The callback is called when the server receives an incoming WebSocket","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/server.rs","byte_start":49488,"byte_end":49561,"line_start":151,"line_end":151,"column_start":1,"column_end":74}},{"value":"/ handshake request from the client. Specifying a callback allows you to analyze incoming headers","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/server.rs","byte_start":49562,"byte_end":49661,"line_start":152,"line_end":152,"column_start":1,"column_end":100}},{"value":"/ and add additional headers to the response that server sends to the client and/or reject the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/server.rs","byte_start":49662,"byte_end":49758,"line_start":153,"line_end":153,"column_start":1,"column_end":97}},{"value":"/ connection based on the incoming headers.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/server.rs","byte_start":49759,"byte_end":49804,"line_start":154,"line_end":154,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/server.rs","byte_start":50057,"byte_end":50067,"line_start":159,"line_end":159,"column_start":8,"column_end":18},"name":"on_request","qualname":"::handshake::server::Callback::on_request","value":"fn on_request(Self, &Request, Response) -> StdResult<Response, ErrorResponse>","parent":{"krate":0,"index":483},"children":[],"decl_id":null,"docs":" Called whenever the server read the request from the client and is ready to reply to it.\n May return additional reply headers.\n Returning an error resulting in rejecting the incoming connection.\n","sig":null,"attributes":[{"value":"/ Called whenever the server read the request from the client and is ready to reply to it.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/server.rs","byte_start":49837,"byte_end":49929,"line_start":156,"line_end":156,"column_start":5,"column_end":97}},{"value":"/ May return additional reply headers.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/server.rs","byte_start":49934,"byte_end":49974,"line_start":157,"line_end":157,"column_start":5,"column_end":45}},{"value":"/ Returning an error resulting in rejecting the incoming connection.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/server.rs","byte_start":49979,"byte_end":50049,"line_start":158,"line_end":158,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":487},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/server.rs","byte_start":50297,"byte_end":50307,"line_start":170,"line_end":170,"column_start":8,"column_end":18},"name":"on_request","qualname":"<F as handshake::server::Callback>::on_request","value":"fn on_request(Self, &Request, Response) -> StdResult<Response, ErrorResponse>","parent":{"krate":0,"index":483},"children":[],"decl_id":{"krate":0,"index":484},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1712},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/server.rs","byte_start":50547,"byte_end":50557,"line_start":181,"line_end":181,"column_start":12,"column_end":22},"name":"NoCallback","qualname":"::handshake::server::NoCallback","value":"","parent":null,"children":[],"decl_id":null,"docs":" Stub for callback that does nothing.\n","sig":null,"attributes":[{"value":"/ Stub for callback that does nothing.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/server.rs","byte_start":50465,"byte_end":50505,"line_start":179,"line_end":179,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/server.rs","byte_start":50598,"byte_end":50608,"line_start":184,"line_end":184,"column_start":8,"column_end":18},"name":"on_request","qualname":"<NoCallback as handshake::server::Callback>::on_request","value":"fn on_request(Self, &Request, Response) -> StdResult<Response, ErrorResponse>","parent":{"krate":0,"index":483},"children":[],"decl_id":{"krate":0,"index":484},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1719},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/server.rs","byte_start":50850,"byte_end":50865,"line_start":196,"line_end":196,"column_start":12,"column_end":27},"name":"ServerHandshake","qualname":"::handshake::server::ServerHandshake","value":"ServerHandshake {  }","parent":null,"children":[{"krate":0,"index":1722},{"krate":0,"index":1723},{"krate":0,"index":1724},{"krate":0,"index":1725}],"decl_id":null,"docs":" Server handshake role.\n","sig":null,"attributes":[{"value":"/ Server handshake role.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/server.rs","byte_start":50756,"byte_end":50782,"line_start":193,"line_end":193,"column_start":1,"column_end":27}},{"value":"allow(missing_copy_implementations)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/server.rs","byte_start":50783,"byte_end":50821,"line_start":194,"line_end":194,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/server.rs","byte_start":51822,"byte_end":51827,"line_start":214,"line_end":214,"column_start":12,"column_end":17},"name":"start","qualname":"<ServerHandshake<S, C>>::start","value":"fn start(S, C, Option<WebSocketConfig>) -> MidHandshake<Self>","parent":null,"children":[],"decl_id":null,"docs":" Start server handshake. `callback` specifies a custom callback which the user can pass to\n the handshake, this callback will be called when the a websocket client connnects to the\n server, you can specify the callback if you want to add additional header to the client\n upon join based on the incoming headers.\n","sig":null,"attributes":[{"value":"/ Start server handshake. `callback` specifies a custom callback which the user can pass to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/server.rs","byte_start":51475,"byte_end":51568,"line_start":210,"line_end":210,"column_start":5,"column_end":98}},{"value":"/ the handshake, this callback will be called when the a websocket client connnects to the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/server.rs","byte_start":51573,"byte_end":51665,"line_start":211,"line_end":211,"column_start":5,"column_end":97}},{"value":"/ server, you can specify the callback if you want to add additional header to the client","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/server.rs","byte_start":51670,"byte_end":51761,"line_start":212,"line_end":212,"column_start":5,"column_end":96}},{"value":"/ upon join based on the incoming headers.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/server.rs","byte_start":51766,"byte_end":51810,"line_start":213,"line_end":213,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/server.rs","byte_start":52434,"byte_end":52448,"line_start":233,"line_end":233,"column_start":8,"column_end":22},"name":"stage_finished","qualname":"<ServerHandshake<S, C> as handshake::HandshakeRole>::stage_finished","value":"fn stage_finished(&mut Self,\nStageResult<Self::IncomingData, Self::InternalStream>)\n-> Result<ProcessingResult<Self::InternalStream, Self::FinalResult>>","parent":{"krate":0,"index":607},"children":[],"decl_id":{"krate":0,"index":611},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1730},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/machine.rs","byte_start":55990,"byte_end":56006,"line_start":13,"line_end":13,"column_start":12,"column_end":28},"name":"HandshakeMachine","qualname":"::handshake::machine::HandshakeMachine","value":"HandshakeMachine {  }","parent":null,"children":[{"krate":0,"index":1732},{"krate":0,"index":1733}],"decl_id":null,"docs":" A generic handshake state machine.\n","sig":null,"attributes":[{"value":"/ A generic handshake state machine.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/machine.rs","byte_start":55923,"byte_end":55961,"line_start":11,"line_end":11,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":535},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/machine.rs","byte_start":56160,"byte_end":56170,"line_start":20,"line_end":20,"column_start":12,"column_end":22},"name":"start_read","qualname":"<HandshakeMachine<Stream>>::start_read","value":"fn start_read(Stream) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Start reading data from the peer.\n","sig":null,"attributes":[{"value":"/ Start reading data from the peer.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/machine.rs","byte_start":56111,"byte_end":56148,"line_start":19,"line_end":19,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/machine.rs","byte_start":56341,"byte_end":56352,"line_start":24,"line_end":24,"column_start":12,"column_end":23},"name":"start_write","qualname":"<HandshakeMachine<Stream>>::start_write","value":"fn start_write<D>(Stream, D) -> Self where D: Into<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Start writing data to the peer.\n","sig":null,"attributes":[{"value":"/ Start writing data to the peer.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/machine.rs","byte_start":56294,"byte_end":56329,"line_start":23,"line_end":23,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":538},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/machine.rs","byte_start":56573,"byte_end":56580,"line_start":28,"line_end":28,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<HandshakeMachine<Stream>>::get_ref","value":"fn get_ref(&Self) -> &Stream","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the inner stream.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the inner stream.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/machine.rs","byte_start":56510,"byte_end":56561,"line_start":27,"line_end":27,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":539},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/machine.rs","byte_start":56696,"byte_end":56703,"line_start":32,"line_end":32,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<HandshakeMachine<Stream>>::get_mut","value":"fn get_mut(&mut Self) -> &mut Stream","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the inner stream.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the inner stream.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/machine.rs","byte_start":56632,"byte_end":56684,"line_start":31,"line_end":31,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":542},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/machine.rs","byte_start":56873,"byte_end":56885,"line_start":39,"line_end":39,"column_start":12,"column_end":24},"name":"single_round","qualname":"<HandshakeMachine<Stream>>::single_round","value":"fn single_round<Obj>(Self) -> Result<RoundResult<Obj, Stream>> where\nObj: TryParse","parent":null,"children":[],"decl_id":null,"docs":" Perform a single handshake round.\n","sig":null,"attributes":[{"value":"/ Perform a single handshake round.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/machine.rs","byte_start":56824,"byte_end":56861,"line_start":38,"line_end":38,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1740},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/machine.rs","byte_start":59142,"byte_end":59152,"line_start":93,"line_end":93,"column_start":5,"column_end":15},"name":"WouldBlock","qualname":"::handshake::machine::RoundResult::WouldBlock","value":"RoundResult::WouldBlock(HandshakeMachine<Stream>)","parent":{"krate":0,"index":1737},"children":[],"decl_id":null,"docs":" Round not done, I/O would block.\n","sig":null,"attributes":[{"value":"/ Round not done, I/O would block.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/machine.rs","byte_start":59101,"byte_end":59137,"line_start":92,"line_end":92,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":1742},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/machine.rs","byte_start":59153,"byte_end":59177,"line_start":93,"line_end":93,"column_start":16,"column_end":40},"name":"0","qualname":"::handshake::machine::RoundResult::WouldBlock::0","value":"handshake::machine::HandshakeMachine<Stream>","parent":{"krate":0,"index":1740},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1743},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/machine.rs","byte_start":59221,"byte_end":59231,"line_start":95,"line_end":95,"column_start":5,"column_end":15},"name":"Incomplete","qualname":"::handshake::machine::RoundResult::Incomplete","value":"RoundResult::Incomplete(HandshakeMachine<Stream>)","parent":{"krate":0,"index":1737},"children":[],"decl_id":null,"docs":" Round done, state unchanged.\n","sig":null,"attributes":[{"value":"/ Round done, state unchanged.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/machine.rs","byte_start":59184,"byte_end":59216,"line_start":94,"line_end":94,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":1745},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/machine.rs","byte_start":59232,"byte_end":59256,"line_start":95,"line_end":95,"column_start":16,"column_end":40},"name":"0","qualname":"::handshake::machine::RoundResult::Incomplete::0","value":"handshake::machine::HandshakeMachine<Stream>","parent":{"krate":0,"index":1743},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1746},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/machine.rs","byte_start":59287,"byte_end":59300,"line_start":97,"line_end":97,"column_start":5,"column_end":18},"name":"StageFinished","qualname":"::handshake::machine::RoundResult::StageFinished","value":"RoundResult::StageFinished(StageResult<Obj, Stream>)","parent":{"krate":0,"index":1737},"children":[],"decl_id":null,"docs":" Stage complete.\n","sig":null,"attributes":[{"value":"/ Stage complete.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/machine.rs","byte_start":59263,"byte_end":59282,"line_start":96,"line_end":96,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":1748},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/machine.rs","byte_start":59301,"byte_end":59325,"line_start":97,"line_end":97,"column_start":19,"column_end":43},"name":"0","qualname":"::handshake::machine::RoundResult::StageFinished::0","value":"handshake::machine::StageResult<Obj, Stream>","parent":{"krate":0,"index":1746},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1737},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/machine.rs","byte_start":59070,"byte_end":59081,"line_start":91,"line_end":91,"column_start":10,"column_end":21},"name":"RoundResult","qualname":"::handshake::machine::RoundResult","value":"enum RoundResult<Obj, Stream> {\n    WouldBlock(HandshakeMachine<Stream>),\n    Incomplete(HandshakeMachine<Stream>),\n    StageFinished(StageResult<Obj, Stream>),\n}","parent":null,"children":[{"krate":0,"index":1740},{"krate":0,"index":1743},{"krate":0,"index":1746}],"decl_id":null,"docs":" The result of the round.\n","sig":null,"attributes":[{"value":"/ The result of the round.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/machine.rs","byte_start":59015,"byte_end":59043,"line_start":89,"line_end":89,"column_start":1,"column_end":29}}]},{"kind":"StructVariant","id":{"krate":0,"index":1756},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/machine.rs","byte_start":59449,"byte_end":59460,"line_start":104,"line_end":104,"column_start":5,"column_end":16},"name":"DoneReading","qualname":"::handshake::machine::StageResult::DoneReading","value":"StageResult::DoneReading { result, stream, tail }","parent":{"krate":0,"index":1753},"children":[],"decl_id":null,"docs":" Reading round finished.\n","sig":null,"attributes":[{"value":"/ Reading round finished.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/machine.rs","byte_start":59417,"byte_end":59444,"line_start":103,"line_end":103,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":1757},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/machine.rs","byte_start":59463,"byte_end":59469,"line_start":104,"line_end":104,"column_start":19,"column_end":25},"name":"result","qualname":"::handshake::machine::StageResult::DoneReading::result","value":"Obj","parent":{"krate":0,"index":1756},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1758},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/machine.rs","byte_start":59476,"byte_end":59482,"line_start":104,"line_end":104,"column_start":32,"column_end":38},"name":"stream","qualname":"::handshake::machine::StageResult::DoneReading::stream","value":"Stream","parent":{"krate":0,"index":1756},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1759},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/machine.rs","byte_start":59492,"byte_end":59496,"line_start":104,"line_end":104,"column_start":48,"column_end":52},"name":"tail","qualname":"::handshake::machine::StageResult::DoneReading::tail","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":1756},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1760},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/machine.rs","byte_start":59545,"byte_end":59556,"line_start":106,"line_end":106,"column_start":5,"column_end":16},"name":"DoneWriting","qualname":"::handshake::machine::StageResult::DoneWriting","value":"StageResult::DoneWriting(Stream)","parent":{"krate":0,"index":1753},"children":[],"decl_id":null,"docs":" Writing round finished.\n","sig":null,"attributes":[{"value":"/ Writing round finished.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/machine.rs","byte_start":59513,"byte_end":59540,"line_start":105,"line_end":105,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":1762},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/machine.rs","byte_start":59557,"byte_end":59563,"line_start":106,"line_end":106,"column_start":17,"column_end":23},"name":"0","qualname":"::handshake::machine::StageResult::DoneWriting::0","value":"Stream","parent":{"krate":0,"index":1760},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1753},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/machine.rs","byte_start":59386,"byte_end":59397,"line_start":102,"line_end":102,"column_start":10,"column_end":21},"name":"StageResult","qualname":"::handshake::machine::StageResult","value":"enum StageResult<Obj, Stream> {\n    DoneReading {\n            result: Obj,\n            stream: Stream,\n            tail: Vec<u8>,\n        },\n    DoneWriting(Stream),\n}","parent":null,"children":[{"krate":0,"index":1756},{"krate":0,"index":1760}],"decl_id":null,"docs":" The result of the stage.\n","sig":null,"attributes":[{"value":"/ The result of the stage.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/machine.rs","byte_start":59331,"byte_end":59359,"line_start":100,"line_end":100,"column_start":1,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":544},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/machine.rs","byte_start":59605,"byte_end":59613,"line_start":110,"line_end":110,"column_start":11,"column_end":19},"name":"TryParse","qualname":"::handshake::machine::TryParse","value":"TryParse: Sized","parent":null,"children":[{"krate":0,"index":545}],"decl_id":null,"docs":" The parseable object.\n","sig":null,"attributes":[{"value":"/ The parseable object.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/machine.rs","byte_start":59569,"byte_end":59594,"line_start":109,"line_end":109,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":545},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/machine.rs","byte_start":59690,"byte_end":59699,"line_start":112,"line_end":112,"column_start":8,"column_end":17},"name":"try_parse","qualname":"::handshake::machine::TryParse::try_parse","value":"fn try_parse(&[u8]) -> Result<Option<(usize, Self)>>","parent":{"krate":0,"index":544},"children":[],"decl_id":null,"docs":" Return Ok(None) if incomplete, Err on syntax error.\n","sig":null,"attributes":[{"value":"/ Return Ok(None) if incomplete, Err on syntax error.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/machine.rs","byte_start":59627,"byte_end":59682,"line_start":111,"line_end":111,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1776},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/mod.rs","byte_start":25133,"byte_end":25145,"line_start":22,"line_end":22,"column_start":12,"column_end":24},"name":"MidHandshake","qualname":"::handshake::MidHandshake","value":"MidHandshake {  }","parent":null,"children":[{"krate":0,"index":1778},{"krate":0,"index":1779}],"decl_id":null,"docs":" A WebSocket handshake.\n","sig":null,"attributes":[{"value":"/ A WebSocket handshake.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/mod.rs","byte_start":25078,"byte_end":25104,"line_start":20,"line_end":20,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/mod.rs","byte_start":25331,"byte_end":25338,"line_start":29,"line_end":29,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<MidHandshake<Role>>::get_ref","value":"fn get_ref(&Self) -> &HandshakeMachine<Role::InternalStream>","parent":null,"children":[],"decl_id":null,"docs":" Allow access to machine\n","sig":null,"attributes":[{"value":"/ Allow access to machine","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/mod.rs","byte_start":25292,"byte_end":25319,"line_start":28,"line_end":28,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":586},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/mod.rs","byte_start":25471,"byte_end":25478,"line_start":34,"line_end":34,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<MidHandshake<Role>>::get_mut","value":"fn get_mut(&mut Self) -> &mut HandshakeMachine<Role::InternalStream>","parent":null,"children":[],"decl_id":null,"docs":" Allow mutable access to machine\n","sig":null,"attributes":[{"value":"/ Allow mutable access to machine","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/mod.rs","byte_start":25424,"byte_end":25459,"line_start":33,"line_end":33,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/mod.rs","byte_start":25623,"byte_end":25632,"line_start":39,"line_end":39,"column_start":12,"column_end":21},"name":"handshake","qualname":"<MidHandshake<Role>>::handshake","value":"fn handshake(Self) -> Result<Role::FinalResult, HandshakeError<Role>>","parent":null,"children":[],"decl_id":null,"docs":" Restarts the handshake process.\n","sig":null,"attributes":[{"value":"/ Restarts the handshake process.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/mod.rs","byte_start":25576,"byte_end":25611,"line_start":38,"line_end":38,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":590},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/mod.rs","byte_start":26399,"byte_end":26410,"line_start":59,"line_end":59,"column_start":5,"column_end":16},"name":"Interrupted","qualname":"::handshake::HandshakeError::Interrupted","value":"HandshakeError::Interrupted(MidHandshake<Role>)","parent":{"krate":0,"index":588},"children":[],"decl_id":null,"docs":" Handshake was interrupted (would block).\n","sig":null,"attributes":[{"value":"/ Handshake was interrupted (would block).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/mod.rs","byte_start":26350,"byte_end":26394,"line_start":58,"line_end":58,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":592},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/mod.rs","byte_start":26411,"byte_end":26429,"line_start":59,"line_end":59,"column_start":17,"column_end":35},"name":"0","qualname":"::handshake::HandshakeError::Interrupted::0","value":"handshake::MidHandshake<Role>","parent":{"krate":0,"index":590},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":593},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/mod.rs","byte_start":26462,"byte_end":26469,"line_start":61,"line_end":61,"column_start":5,"column_end":12},"name":"Failure","qualname":"::handshake::HandshakeError::Failure","value":"HandshakeError::Failure(Error)","parent":{"krate":0,"index":588},"children":[],"decl_id":null,"docs":" Handshake failed.\n","sig":null,"attributes":[{"value":"/ Handshake failed.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/mod.rs","byte_start":26436,"byte_end":26457,"line_start":60,"line_end":60,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":595},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/mod.rs","byte_start":26470,"byte_end":26475,"line_start":61,"line_end":61,"column_start":13,"column_end":18},"name":"0","qualname":"::handshake::HandshakeError::Failure::0","value":"error::Error","parent":{"krate":0,"index":593},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":588},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/mod.rs","byte_start":26308,"byte_end":26322,"line_start":57,"line_end":57,"column_start":10,"column_end":24},"name":"HandshakeError","qualname":"::handshake::HandshakeError","value":"enum HandshakeError<Role> where Role: HandshakeRole {\n    Interrupted(MidHandshake<Role>),\n    Failure(Error),\n}","parent":null,"children":[{"krate":0,"index":590},{"krate":0,"index":593}],"decl_id":null,"docs":" A handshake result.\n","sig":null,"attributes":[{"value":"/ A handshake result.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/mod.rs","byte_start":26275,"byte_end":26298,"line_start":56,"line_end":56,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/mod.rs","byte_start":26552,"byte_end":26555,"line_start":65,"line_end":65,"column_start":8,"column_end":11},"name":"fmt","qualname":"<HandshakeError<Role> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":601},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/mod.rs","byte_start":26904,"byte_end":26907,"line_start":74,"line_end":74,"column_start":8,"column_end":11},"name":"fmt","qualname":"<HandshakeError<Role> as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10117},"children":[],"decl_id":{"krate":2,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":606},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/mod.rs","byte_start":27296,"byte_end":27300,"line_start":85,"line_end":85,"column_start":8,"column_end":12},"name":"from","qualname":"<HandshakeError<Role> as std::convert::From>::from","value":"fn from(Error) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":607},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/mod.rs","byte_start":27399,"byte_end":27412,"line_start":91,"line_end":91,"column_start":11,"column_end":24},"name":"HandshakeRole","qualname":"::handshake::HandshakeRole","value":"HandshakeRole","parent":null,"children":[{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":611}],"decl_id":null,"docs":" Handshake role.\n","sig":null,"attributes":[{"value":"/ Handshake role.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/mod.rs","byte_start":27369,"byte_end":27388,"line_start":90,"line_end":90,"column_start":1,"column_end":20}}]},{"kind":"Type","id":{"krate":0,"index":608},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/mod.rs","byte_start":27443,"byte_end":27455,"line_start":93,"line_end":93,"column_start":10,"column_end":22},"name":"IncomingData","qualname":"::handshake::HandshakeRole::IncomingData","value":"type IncomingData: TryParse;","parent":{"krate":0,"index":607},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":609},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/mod.rs","byte_start":27495,"byte_end":27509,"line_start":95,"line_end":95,"column_start":10,"column_end":24},"name":"InternalStream","qualname":"::handshake::HandshakeRole::InternalStream","value":"type InternalStream: Read + Write;","parent":{"krate":0,"index":607},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":610},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/mod.rs","byte_start":27553,"byte_end":27564,"line_start":97,"line_end":97,"column_start":10,"column_end":21},"name":"FinalResult","qualname":"::handshake::HandshakeRole::FinalResult","value":"type FinalResult;","parent":{"krate":0,"index":607},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":611},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/mod.rs","byte_start":27592,"byte_end":27606,"line_start":99,"line_end":99,"column_start":8,"column_end":22},"name":"stage_finished","qualname":"::handshake::HandshakeRole::stage_finished","value":"fn stage_finished(&mut Self,\nStageResult<Self::IncomingData, Self::InternalStream>)\n-> Result<ProcessingResult<Self::InternalStream, Self::FinalResult>, Error>","parent":{"krate":0,"index":607},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1786},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/mod.rs","byte_start":27898,"byte_end":27906,"line_start":109,"line_end":109,"column_start":5,"column_end":13},"name":"Continue","qualname":"::handshake::ProcessingResult::Continue","value":"ProcessingResult::Continue(HandshakeMachine<Stream>)","parent":{"krate":0,"index":1783},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1788},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/mod.rs","byte_start":27907,"byte_end":27931,"line_start":109,"line_end":109,"column_start":14,"column_end":38},"name":"0","qualname":"::handshake::ProcessingResult::Continue::0","value":"handshake::machine::HandshakeMachine<Stream>","parent":{"krate":0,"index":1786},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1789},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/mod.rs","byte_start":27938,"byte_end":27942,"line_start":110,"line_end":110,"column_start":5,"column_end":9},"name":"Done","qualname":"::handshake::ProcessingResult::Done","value":"ProcessingResult::Done(FinalResult)","parent":{"krate":0,"index":1783},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1791},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/mod.rs","byte_start":27943,"byte_end":27954,"line_start":110,"line_end":110,"column_start":10,"column_end":21},"name":"0","qualname":"::handshake::ProcessingResult::Done::0","value":"FinalResult","parent":{"krate":0,"index":1789},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1783},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/mod.rs","byte_start":27854,"byte_end":27870,"line_start":108,"line_end":108,"column_start":10,"column_end":26},"name":"ProcessingResult","qualname":"::handshake::ProcessingResult","value":"enum ProcessingResult<Stream, FinalResult> {\n    Continue(HandshakeMachine<Stream>),\n    Done(FinalResult),\n}","parent":null,"children":[{"krate":0,"index":1786},{"krate":0,"index":1789}],"decl_id":null,"docs":" Stage processing result.\n","sig":null,"attributes":[{"value":"/ Stage processing result.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/mod.rs","byte_start":27784,"byte_end":27812,"line_start":105,"line_end":105,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":612},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/mod.rs","byte_start":28237,"byte_end":28254,"line_start":117,"line_end":117,"column_start":8,"column_end":25},"name":"derive_accept_key","qualname":"::handshake::derive_accept_key","value":"fn derive_accept_key(&[u8]) -> String","parent":null,"children":[],"decl_id":null,"docs":" Derive the `Sec-WebSocket-Accept` response header from a `Sec-WebSocket-Key` request header.","sig":null,"attributes":[{"value":"/ Derive the `Sec-WebSocket-Accept` response header from a `Sec-WebSocket-Key` request header.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/mod.rs","byte_start":27960,"byte_end":28056,"line_start":113,"line_end":113,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/mod.rs","byte_start":28057,"byte_end":28060,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ This function can be used to perform a handshake before passing a raw TCP stream to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/mod.rs","byte_start":28061,"byte_end":28148,"line_start":115,"line_end":115,"column_start":1,"column_end":88}},{"value":"/ [`WebSocket::from_raw_socket`][crate::protocol::WebSocket::from_raw_socket].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/mod.rs","byte_start":28149,"byte_end":28229,"line_start":116,"line_end":116,"column_start":1,"column_end":81}}]},{"kind":"Mod","id":{"krate":0,"index":614},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"protocol","qualname":"::protocol","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","parent":null,"children":[{"krate":0,"index":615},{"krate":0,"index":902},{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1012},{"krate":0,"index":1015},{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":1020},{"krate":0,"index":1021},{"krate":0,"index":1024},{"krate":0,"index":1027},{"krate":0,"index":1030},{"krate":0,"index":1033},{"krate":0,"index":1034},{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":1039},{"krate":0,"index":1042},{"krate":0,"index":1045},{"krate":0,"index":1048},{"krate":0,"index":1051},{"krate":0,"index":1054},{"krate":0,"index":1055},{"krate":0,"index":1058},{"krate":0,"index":1061},{"krate":0,"index":1062},{"krate":0,"index":1063},{"krate":0,"index":1066},{"krate":0,"index":1069},{"krate":0,"index":1072},{"krate":0,"index":2029},{"krate":0,"index":2034},{"krate":0,"index":2036},{"krate":0,"index":2038},{"krate":0,"index":2039},{"krate":0,"index":2040},{"krate":0,"index":2042},{"krate":0,"index":2043},{"krate":0,"index":2045},{"krate":0,"index":2050},{"krate":0,"index":2052},{"krate":0,"index":2054},{"krate":0,"index":1075},{"krate":0,"index":2055},{"krate":0,"index":2059},{"krate":0,"index":1077},{"krate":0,"index":1088},{"krate":0,"index":2062},{"krate":0,"index":2070},{"krate":0,"index":1094},{"krate":0,"index":2072},{"krate":0,"index":2083},{"krate":0,"index":2085},{"krate":0,"index":2086},{"krate":0,"index":2088},{"krate":0,"index":2089},{"krate":0,"index":2091},{"krate":0,"index":2093},{"krate":0,"index":1117},{"krate":0,"index":1121},{"krate":0,"index":1123}],"decl_id":null,"docs":" Generic WebSocket message stream.\n","sig":null,"attributes":[{"value":"/ Generic WebSocket message stream.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":59942,"byte_end":59979,"line_start":1,"line_end":1,"column_start":1,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":615},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"frame","qualname":"::protocol::frame","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/mod.rs","parent":null,"children":[{"krate":0,"index":616},{"krate":0,"index":694},{"krate":0,"index":832},{"krate":0,"index":841},{"krate":0,"index":842},{"krate":0,"index":845},{"krate":0,"index":848},{"krate":0,"index":851},{"krate":0,"index":854},{"krate":0,"index":855},{"krate":0,"index":856},{"krate":0,"index":859},{"krate":0,"index":862},{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":870},{"krate":0,"index":873},{"krate":0,"index":876},{"krate":0,"index":1968},{"krate":0,"index":1972},{"krate":0,"index":879},{"krate":0,"index":886},{"krate":0,"index":889},{"krate":0,"index":1975},{"krate":0,"index":1979},{"krate":0,"index":893}],"decl_id":null,"docs":" Utilities to work with raw WebSocket frames.\n","sig":null,"attributes":[{"value":"/ Utilities to work with raw WebSocket frames.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/mod.rs","byte_start":89861,"byte_end":89909,"line_start":1,"line_end":1,"column_start":1,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":616},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"coding","qualname":"::protocol::frame::coding","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","parent":null,"children":[{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":622},{"krate":0,"index":625},{"krate":0,"index":1796},{"krate":0,"index":1803},{"krate":0,"index":1805},{"krate":0,"index":1806},{"krate":0,"index":1809},{"krate":0,"index":1810},{"krate":0,"index":1812},{"krate":0,"index":1814},{"krate":0,"index":1815},{"krate":0,"index":1825},{"krate":0,"index":1827},{"krate":0,"index":1828},{"krate":0,"index":1831},{"krate":0,"index":1832},{"krate":0,"index":1834},{"krate":0,"index":1836},{"krate":0,"index":1837},{"krate":0,"index":1847},{"krate":0,"index":1849},{"krate":0,"index":1850},{"krate":0,"index":1853},{"krate":0,"index":1854},{"krate":0,"index":1856},{"krate":0,"index":1858},{"krate":0,"index":628},{"krate":0,"index":630},{"krate":0,"index":632},{"krate":0,"index":634},{"krate":0,"index":658},{"krate":0,"index":682},{"krate":0,"index":1859},{"krate":0,"index":1900},{"krate":0,"index":1902},{"krate":0,"index":1903},{"krate":0,"index":1905},{"krate":0,"index":1906},{"krate":0,"index":1909},{"krate":0,"index":1911},{"krate":0,"index":683},{"krate":0,"index":685},{"krate":0,"index":687},{"krate":0,"index":689},{"krate":0,"index":692}],"decl_id":null,"docs":" Various codes defined in RFC 6455.\n","sig":null,"attributes":[{"value":"/ Various codes defined in RFC 6455.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":98184,"byte_end":98222,"line_start":1,"line_end":1,"column_start":1,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1797},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":98418,"byte_end":98422,"line_start":12,"line_end":12,"column_start":5,"column_end":9},"name":"Data","qualname":"::protocol::frame::coding::OpCode::Data","value":"OpCode::Data(Data)","parent":{"krate":0,"index":1796},"children":[],"decl_id":null,"docs":" Data (text or binary).\n","sig":null,"attributes":[{"value":"/ Data (text or binary).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":98387,"byte_end":98413,"line_start":11,"line_end":11,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":1799},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":98423,"byte_end":98427,"line_start":12,"line_end":12,"column_start":10,"column_end":14},"name":"0","qualname":"::protocol::frame::coding::OpCode::Data::0","value":"protocol::frame::coding::Data","parent":{"krate":0,"index":1797},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1800},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":98479,"byte_end":98486,"line_start":14,"line_end":14,"column_start":5,"column_end":12},"name":"Control","qualname":"::protocol::frame::coding::OpCode::Control","value":"OpCode::Control(Control)","parent":{"krate":0,"index":1796},"children":[],"decl_id":null,"docs":" Control message (close, ping, pong).\n","sig":null,"attributes":[{"value":"/ Control message (close, ping, pong).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":98434,"byte_end":98474,"line_start":13,"line_end":13,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":1802},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":98487,"byte_end":98494,"line_start":14,"line_end":14,"column_start":13,"column_end":20},"name":"0","qualname":"::protocol::frame::coding::OpCode::Control::0","value":"protocol::frame::coding::Control","parent":{"krate":0,"index":1800},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1796},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":98374,"byte_end":98380,"line_start":10,"line_end":10,"column_start":10,"column_end":16},"name":"OpCode","qualname":"::protocol::frame::coding::OpCode","value":"enum OpCode { Data(Data), Control(Control), }","parent":null,"children":[{"krate":0,"index":1797},{"krate":0,"index":1800}],"decl_id":null,"docs":" WebSocket message opcode as in RFC 6455.\n","sig":null,"attributes":[{"value":"/ WebSocket message opcode as in RFC 6455.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":98275,"byte_end":98319,"line_start":8,"line_end":8,"column_start":1,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1816},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":98638,"byte_end":98646,"line_start":21,"line_end":21,"column_start":5,"column_end":13},"name":"Continue","qualname":"::protocol::frame::coding::Data::Continue","value":"Data::Continue","parent":{"krate":0,"index":1815},"children":[],"decl_id":null,"docs":" 0x0 denotes a continuation frame\n","sig":null,"attributes":[{"value":"/ 0x0 denotes a continuation frame","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":98597,"byte_end":98633,"line_start":20,"line_end":20,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1818},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":98685,"byte_end":98689,"line_start":23,"line_end":23,"column_start":5,"column_end":9},"name":"Text","qualname":"::protocol::frame::coding::Data::Text","value":"Data::Text","parent":{"krate":0,"index":1815},"children":[],"decl_id":null,"docs":" 0x1 denotes a text frame\n","sig":null,"attributes":[{"value":"/ 0x1 denotes a text frame","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":98652,"byte_end":98680,"line_start":22,"line_end":22,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1820},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":98730,"byte_end":98736,"line_start":25,"line_end":25,"column_start":5,"column_end":11},"name":"Binary","qualname":"::protocol::frame::coding::Data::Binary","value":"Data::Binary","parent":{"krate":0,"index":1815},"children":[],"decl_id":null,"docs":" 0x2 denotes a binary frame\n","sig":null,"attributes":[{"value":"/ 0x2 denotes a binary frame","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":98695,"byte_end":98725,"line_start":24,"line_end":24,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1822},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":98800,"byte_end":98808,"line_start":27,"line_end":27,"column_start":5,"column_end":13},"name":"Reserved","qualname":"::protocol::frame::coding::Data::Reserved","value":"Data::Reserved(u8)","parent":{"krate":0,"index":1815},"children":[],"decl_id":null,"docs":" 0x3-7 are reserved for further non-control frames\n","sig":null,"attributes":[{"value":"/ 0x3-7 are reserved for further non-control frames","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":98742,"byte_end":98795,"line_start":26,"line_end":26,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":1824},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":98809,"byte_end":98811,"line_start":27,"line_end":27,"column_start":14,"column_end":16},"name":"0","qualname":"::protocol::frame::coding::Data::Reserved::0","value":"u8","parent":{"krate":0,"index":1822},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1815},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":98586,"byte_end":98590,"line_start":19,"line_end":19,"column_start":10,"column_end":14},"name":"Data","qualname":"::protocol::frame::coding::Data","value":"enum Data { Continue, Text, Binary, Reserved(u8), }","parent":null,"children":[{"krate":0,"index":1816},{"krate":0,"index":1818},{"krate":0,"index":1820},{"krate":0,"index":1822}],"decl_id":null,"docs":" Data opcodes as in RFC 6455\n","sig":null,"attributes":[{"value":"/ Data opcodes as in RFC 6455","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":98500,"byte_end":98531,"line_start":17,"line_end":17,"column_start":1,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1838},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":98959,"byte_end":98964,"line_start":34,"line_end":34,"column_start":5,"column_end":10},"name":"Close","qualname":"::protocol::frame::coding::Control::Close","value":"Control::Close","parent":{"krate":0,"index":1837},"children":[],"decl_id":null,"docs":" 0x8 denotes a connection close\n","sig":null,"attributes":[{"value":"/ 0x8 denotes a connection close","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":98920,"byte_end":98954,"line_start":33,"line_end":33,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1840},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":98997,"byte_end":99001,"line_start":36,"line_end":36,"column_start":5,"column_end":9},"name":"Ping","qualname":"::protocol::frame::coding::Control::Ping","value":"Control::Ping","parent":{"krate":0,"index":1837},"children":[],"decl_id":null,"docs":" 0x9 denotes a ping\n","sig":null,"attributes":[{"value":"/ 0x9 denotes a ping","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":98970,"byte_end":98992,"line_start":35,"line_end":35,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1842},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":99034,"byte_end":99038,"line_start":38,"line_end":38,"column_start":5,"column_end":9},"name":"Pong","qualname":"::protocol::frame::coding::Control::Pong","value":"Control::Pong","parent":{"krate":0,"index":1837},"children":[],"decl_id":null,"docs":" 0xa denotes a pong\n","sig":null,"attributes":[{"value":"/ 0xa denotes a pong","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":99007,"byte_end":99029,"line_start":37,"line_end":37,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1844},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":99098,"byte_end":99106,"line_start":40,"line_end":40,"column_start":5,"column_end":13},"name":"Reserved","qualname":"::protocol::frame::coding::Control::Reserved","value":"Control::Reserved(u8)","parent":{"krate":0,"index":1837},"children":[],"decl_id":null,"docs":" 0xb-f are reserved for further control frames\n","sig":null,"attributes":[{"value":"/ 0xb-f are reserved for further control frames","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":99044,"byte_end":99093,"line_start":39,"line_end":39,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1846},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":99107,"byte_end":99109,"line_start":40,"line_end":40,"column_start":14,"column_end":16},"name":"0","qualname":"::protocol::frame::coding::Control::Reserved::0","value":"u8","parent":{"krate":0,"index":1844},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1837},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":98906,"byte_end":98913,"line_start":32,"line_end":32,"column_start":10,"column_end":17},"name":"Control","qualname":"::protocol::frame::coding::Control","value":"enum Control { Close, Ping, Pong, Reserved(u8), }","parent":null,"children":[{"krate":0,"index":1838},{"krate":0,"index":1840},{"krate":0,"index":1842},{"krate":0,"index":1844}],"decl_id":null,"docs":" Control opcodes as in RFC 6455\n","sig":null,"attributes":[{"value":"/ Control opcodes as in RFC 6455","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":98817,"byte_end":98851,"line_start":30,"line_end":30,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":629},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":99151,"byte_end":99154,"line_start":44,"line_end":44,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Data as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10117},"children":[],"decl_id":{"krate":2,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":631},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":99497,"byte_end":99500,"line_start":55,"line_end":55,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Control as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10117},"children":[],"decl_id":{"krate":2,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":633},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":99847,"byte_end":99850,"line_start":66,"line_end":66,"column_start":8,"column_end":11},"name":"fmt","qualname":"<OpCode as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10117},"children":[],"decl_id":{"krate":2,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":635},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":100059,"byte_end":100063,"line_start":75,"line_end":75,"column_start":8,"column_end":12},"name":"from","qualname":"<u8 as std::convert::From>::from","value":"fn from(OpCode) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":659},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":100596,"byte_end":100600,"line_start":96,"line_end":96,"column_start":8,"column_end":12},"name":"from","qualname":"<OpCode as std::convert::From>::from","value":"fn from(u8) -> OpCode","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1860},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":101477,"byte_end":101483,"line_start":122,"line_end":122,"column_start":5,"column_end":11},"name":"Normal","qualname":"::protocol::frame::coding::CloseCode::Normal","value":"CloseCode::Normal","parent":{"krate":0,"index":1859},"children":[],"decl_id":null,"docs":" Indicates a normal closure, meaning that the purpose for\n which the connection was established has been fulfilled.\n","sig":null,"attributes":[{"value":"/ Indicates a normal closure, meaning that the purpose for","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":101347,"byte_end":101407,"line_start":120,"line_end":120,"column_start":5,"column_end":65}},{"value":"/ which the connection was established has been fulfilled.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":101412,"byte_end":101472,"line_start":121,"line_end":121,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1862},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":101625,"byte_end":101629,"line_start":125,"line_end":125,"column_start":5,"column_end":9},"name":"Away","qualname":"::protocol::frame::coding::CloseCode::Away","value":"CloseCode::Away","parent":{"krate":0,"index":1859},"children":[],"decl_id":null,"docs":" Indicates that an endpoint is \"going away\", such as a server\n going down or a browser having navigated away from a page.\n","sig":null,"attributes":[{"value":"/ Indicates that an endpoint is \"going away\", such as a server","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":101489,"byte_end":101553,"line_start":123,"line_end":123,"column_start":5,"column_end":69}},{"value":"/ going down or a browser having navigated away from a page.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":101558,"byte_end":101620,"line_start":124,"line_end":124,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1864},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":101733,"byte_end":101741,"line_start":128,"line_end":128,"column_start":5,"column_end":13},"name":"Protocol","qualname":"::protocol::frame::coding::CloseCode::Protocol","value":"CloseCode::Protocol","parent":{"krate":0,"index":1859},"children":[],"decl_id":null,"docs":" Indicates that an endpoint is terminating the connection due\n to a protocol error.\n","sig":null,"attributes":[{"value":"/ Indicates that an endpoint is terminating the connection due","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":101635,"byte_end":101699,"line_start":126,"line_end":126,"column_start":5,"column_end":69}},{"value":"/ to a protocol error.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":101704,"byte_end":101728,"line_start":127,"line_end":127,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1866},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":101991,"byte_end":102002,"line_start":133,"line_end":133,"column_start":5,"column_end":16},"name":"Unsupported","qualname":"::protocol::frame::coding::CloseCode::Unsupported","value":"CloseCode::Unsupported","parent":{"krate":0,"index":1859},"children":[],"decl_id":null,"docs":" Indicates that an endpoint is terminating the connection\n because it has received a type of data it cannot accept (e.g., an\n endpoint that understands only text data MAY send this if it\n receives a binary message).\n","sig":null,"attributes":[{"value":"/ Indicates that an endpoint is terminating the connection","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":101747,"byte_end":101807,"line_start":129,"line_end":129,"column_start":5,"column_end":65}},{"value":"/ because it has received a type of data it cannot accept (e.g., an","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":101812,"byte_end":101881,"line_start":130,"line_end":130,"column_start":5,"column_end":74}},{"value":"/ endpoint that understands only text data MAY send this if it","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":101886,"byte_end":101950,"line_start":131,"line_end":131,"column_start":5,"column_end":69}},{"value":"/ receives a binary message).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":101955,"byte_end":101986,"line_start":132,"line_end":132,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1868},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":102219,"byte_end":102225,"line_start":137,"line_end":137,"column_start":5,"column_end":11},"name":"Status","qualname":"::protocol::frame::coding::CloseCode::Status","value":"CloseCode::Status","parent":{"krate":0,"index":1859},"children":[],"decl_id":null,"docs":" Indicates that no status code was included in a closing frame. This\n close code makes it possible to use a single method, `on_close` to\n handle even cases where no close code was provided.\n","sig":null,"attributes":[{"value":"/ Indicates that no status code was included in a closing frame. This","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":102008,"byte_end":102079,"line_start":134,"line_end":134,"column_start":5,"column_end":76}},{"value":"/ close code makes it possible to use a single method, `on_close` to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":102084,"byte_end":102154,"line_start":135,"line_end":135,"column_start":5,"column_end":75}},{"value":"/ handle even cases where no close code was provided.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":102159,"byte_end":102214,"line_start":136,"line_end":136,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1870},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":102567,"byte_end":102575,"line_start":143,"line_end":143,"column_start":5,"column_end":13},"name":"Abnormal","qualname":"::protocol::frame::coding::CloseCode::Abnormal","value":"CloseCode::Abnormal","parent":{"krate":0,"index":1859},"children":[],"decl_id":null,"docs":" Indicates an abnormal closure. If the abnormal closure was due to an\n error, this close code will not be used. Instead, the `on_error` method\n of the handler will be called with the error. However, if the connection\n is simply dropped, without an error, this close code will be sent to the\n handler.\n","sig":null,"attributes":[{"value":"/ Indicates an abnormal closure. If the abnormal closure was due to an","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":102231,"byte_end":102303,"line_start":138,"line_end":138,"column_start":5,"column_end":77}},{"value":"/ error, this close code will not be used. Instead, the `on_error` method","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":102308,"byte_end":102383,"line_start":139,"line_end":139,"column_start":5,"column_end":80}},{"value":"/ of the handler will be called with the error. However, if the connection","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":102388,"byte_end":102464,"line_start":140,"line_end":140,"column_start":5,"column_end":81}},{"value":"/ is simply dropped, without an error, this close code will be sent to the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":102469,"byte_end":102545,"line_start":141,"line_end":141,"column_start":5,"column_end":81}},{"value":"/ handler.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":102550,"byte_end":102562,"line_start":142,"line_end":142,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1872},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":102827,"byte_end":102834,"line_start":148,"line_end":148,"column_start":5,"column_end":12},"name":"Invalid","qualname":"::protocol::frame::coding::CloseCode::Invalid","value":"CloseCode::Invalid","parent":{"krate":0,"index":1859},"children":[],"decl_id":null,"docs":" Indicates that an endpoint is terminating the connection\n because it has received data within a message that was not\n consistent with the type of the message (e.g., non-UTF-8 \\[RFC3629\\]\n data within a text message).\n","sig":null,"attributes":[{"value":"/ Indicates that an endpoint is terminating the connection","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":102581,"byte_end":102641,"line_start":144,"line_end":144,"column_start":5,"column_end":65}},{"value":"/ because it has received data within a message that was not","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":102646,"byte_end":102708,"line_start":145,"line_end":145,"column_start":5,"column_end":67}},{"value":"/ consistent with the type of the message (e.g., non-UTF-8 \\[RFC3629\\]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":102713,"byte_end":102785,"line_start":146,"line_end":146,"column_start":5,"column_end":77}},{"value":"/ data within a text message).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":102790,"byte_end":102822,"line_start":147,"line_end":147,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1874},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":103191,"byte_end":103197,"line_start":154,"line_end":154,"column_start":5,"column_end":11},"name":"Policy","qualname":"::protocol::frame::coding::CloseCode::Policy","value":"CloseCode::Policy","parent":{"krate":0,"index":1859},"children":[],"decl_id":null,"docs":" Indicates that an endpoint is terminating the connection\n because it has received a message that violates its policy.  This\n is a generic status code that can be returned when there is no\n other more suitable status code (e.g., Unsupported or Size) or if there\n is a need to hide specific details about the policy.\n","sig":null,"attributes":[{"value":"/ Indicates that an endpoint is terminating the connection","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":102840,"byte_end":102900,"line_start":149,"line_end":149,"column_start":5,"column_end":65}},{"value":"/ because it has received a message that violates its policy.  This","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":102905,"byte_end":102974,"line_start":150,"line_end":150,"column_start":5,"column_end":74}},{"value":"/ is a generic status code that can be returned when there is no","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":102979,"byte_end":103045,"line_start":151,"line_end":151,"column_start":5,"column_end":71}},{"value":"/ other more suitable status code (e.g., Unsupported or Size) or if there","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":103050,"byte_end":103125,"line_start":152,"line_end":152,"column_start":5,"column_end":80}},{"value":"/ is a need to hide specific details about the policy.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":103130,"byte_end":103186,"line_start":153,"line_end":153,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1876},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":103353,"byte_end":103357,"line_start":158,"line_end":158,"column_start":5,"column_end":9},"name":"Size","qualname":"::protocol::frame::coding::CloseCode::Size","value":"CloseCode::Size","parent":{"krate":0,"index":1859},"children":[],"decl_id":null,"docs":" Indicates that an endpoint is terminating the connection\n because it has received a message that is too big for it to\n process.\n","sig":null,"attributes":[{"value":"/ Indicates that an endpoint is terminating the connection","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":103203,"byte_end":103263,"line_start":155,"line_end":155,"column_start":5,"column_end":65}},{"value":"/ because it has received a message that is too big for it to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":103268,"byte_end":103331,"line_start":156,"line_end":156,"column_start":5,"column_end":68}},{"value":"/ process.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":103336,"byte_end":103348,"line_start":157,"line_end":157,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1878},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":103832,"byte_end":103841,"line_start":166,"line_end":166,"column_start":5,"column_end":14},"name":"Extension","qualname":"::protocol::frame::coding::CloseCode::Extension","value":"CloseCode::Extension","parent":{"krate":0,"index":1859},"children":[],"decl_id":null,"docs":" Indicates that an endpoint (client) is terminating the\n connection because it has expected the server to negotiate one or\n more extension, but the server didn't return them in the response\n message of the WebSocket handshake.  The list of extensions that\n are needed should be given as the reason for closing.\n Note that this status code is not used by the server, because it\n can fail the WebSocket handshake instead.\n","sig":null,"attributes":[{"value":"/ Indicates that an endpoint (client) is terminating the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":103363,"byte_end":103421,"line_start":159,"line_end":159,"column_start":5,"column_end":63}},{"value":"/ connection because it has expected the server to negotiate one or","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":103426,"byte_end":103495,"line_start":160,"line_end":160,"column_start":5,"column_end":74}},{"value":"/ more extension, but the server didn't return them in the response","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":103500,"byte_end":103569,"line_start":161,"line_end":161,"column_start":5,"column_end":74}},{"value":"/ message of the WebSocket handshake.  The list of extensions that","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":103574,"byte_end":103642,"line_start":162,"line_end":162,"column_start":5,"column_end":73}},{"value":"/ are needed should be given as the reason for closing.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":103647,"byte_end":103704,"line_start":163,"line_end":163,"column_start":5,"column_end":62}},{"value":"/ Note that this status code is not used by the server, because it","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":103709,"byte_end":103777,"line_start":164,"line_end":164,"column_start":5,"column_end":73}},{"value":"/ can fail the WebSocket handshake instead.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":103782,"byte_end":103827,"line_start":165,"line_end":165,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1880},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":104019,"byte_end":104024,"line_start":170,"line_end":170,"column_start":5,"column_end":10},"name":"Error","qualname":"::protocol::frame::coding::CloseCode::Error","value":"CloseCode::Error","parent":{"krate":0,"index":1859},"children":[],"decl_id":null,"docs":" Indicates that a server is terminating the connection because\n it encountered an unexpected condition that prevented it from\n fulfilling the request.\n","sig":null,"attributes":[{"value":"/ Indicates that a server is terminating the connection because","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":103847,"byte_end":103912,"line_start":167,"line_end":167,"column_start":5,"column_end":70}},{"value":"/ it encountered an unexpected condition that prevented it from","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":103917,"byte_end":103982,"line_start":168,"line_end":168,"column_start":5,"column_end":70}},{"value":"/ fulfilling the request.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":103987,"byte_end":104014,"line_start":169,"line_end":169,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1882},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":104204,"byte_end":104211,"line_start":173,"line_end":173,"column_start":5,"column_end":12},"name":"Restart","qualname":"::protocol::frame::coding::CloseCode::Restart","value":"CloseCode::Restart","parent":{"krate":0,"index":1859},"children":[],"decl_id":null,"docs":" Indicates that the server is restarting. A client may choose to reconnect,\n and if it does, it should use a randomized delay of 5-30 seconds between attempts.\n","sig":null,"attributes":[{"value":"/ Indicates that the server is restarting. A client may choose to reconnect,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":104030,"byte_end":104108,"line_start":171,"line_end":171,"column_start":5,"column_end":83}},{"value":"/ and if it does, it should use a randomized delay of 5-30 seconds between attempts.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":104113,"byte_end":104199,"line_start":172,"line_end":172,"column_start":5,"column_end":91}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1884},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":104432,"byte_end":104437,"line_start":177,"line_end":177,"column_start":5,"column_end":10},"name":"Again","qualname":"::protocol::frame::coding::CloseCode::Again","value":"CloseCode::Again","parent":{"krate":0,"index":1859},"children":[],"decl_id":null,"docs":" Indicates that the server is overloaded and the client should either connect\n to a different IP (when multiple targets exist), or reconnect to the same IP\n when a user has performed an action.\n","sig":null,"attributes":[{"value":"/ Indicates that the server is overloaded and the client should either connect","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":104217,"byte_end":104297,"line_start":174,"line_end":174,"column_start":5,"column_end":85}},{"value":"/ to a different IP (when multiple targets exist), or reconnect to the same IP","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":104302,"byte_end":104382,"line_start":175,"line_end":175,"column_start":5,"column_end":85}},{"value":"/ when a user has performed an action.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":104387,"byte_end":104427,"line_start":176,"line_end":176,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1886},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":104462,"byte_end":104465,"line_start":179,"line_end":179,"column_start":5,"column_end":8},"name":"Tls","qualname":"::protocol::frame::coding::CloseCode::Tls","value":"CloseCode::Tls","parent":{"krate":0,"index":1859},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1888},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":104490,"byte_end":104498,"line_start":181,"line_end":181,"column_start":5,"column_end":13},"name":"Reserved","qualname":"::protocol::frame::coding::CloseCode::Reserved","value":"CloseCode::Reserved(u16)","parent":{"krate":0,"index":1859},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1890},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":104499,"byte_end":104502,"line_start":181,"line_end":181,"column_start":14,"column_end":17},"name":"0","qualname":"::protocol::frame::coding::CloseCode::Reserved::0","value":"u16","parent":{"krate":0,"index":1888},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1891},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":104528,"byte_end":104532,"line_start":183,"line_end":183,"column_start":5,"column_end":9},"name":"Iana","qualname":"::protocol::frame::coding::CloseCode::Iana","value":"CloseCode::Iana(u16)","parent":{"krate":0,"index":1859},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1893},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":104533,"byte_end":104536,"line_start":183,"line_end":183,"column_start":10,"column_end":13},"name":"0","qualname":"::protocol::frame::coding::CloseCode::Iana::0","value":"u16","parent":{"krate":0,"index":1891},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1894},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":104562,"byte_end":104569,"line_start":185,"line_end":185,"column_start":5,"column_end":12},"name":"Library","qualname":"::protocol::frame::coding::CloseCode::Library","value":"CloseCode::Library(u16)","parent":{"krate":0,"index":1859},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1896},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":104570,"byte_end":104573,"line_start":185,"line_end":185,"column_start":13,"column_end":16},"name":"0","qualname":"::protocol::frame::coding::CloseCode::Library::0","value":"u16","parent":{"krate":0,"index":1894},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1897},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":104599,"byte_end":104602,"line_start":187,"line_end":187,"column_start":5,"column_end":8},"name":"Bad","qualname":"::protocol::frame::coding::CloseCode::Bad","value":"CloseCode::Bad(u16)","parent":{"krate":0,"index":1859},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1899},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":104603,"byte_end":104606,"line_start":187,"line_end":187,"column_start":9,"column_end":12},"name":"0","qualname":"::protocol::frame::coding::CloseCode::Bad::0","value":"u16","parent":{"krate":0,"index":1897},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1859},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":101331,"byte_end":101340,"line_start":119,"line_end":119,"column_start":10,"column_end":19},"name":"CloseCode","qualname":"::protocol::frame::coding::CloseCode","value":"enum CloseCode {\n    Normal,\n    Away,\n    Protocol,\n    Unsupported,\n    Status,\n    Abnormal,\n    Invalid,\n    Policy,\n    Size,\n    Extension,\n    Error,\n    Restart,\n    Again,\n    Tls,\n    Reserved(u16),\n    Iana(u16),\n    Library(u16),\n    Bad(u16),\n}","parent":null,"children":[{"krate":0,"index":1860},{"krate":0,"index":1862},{"krate":0,"index":1864},{"krate":0,"index":1866},{"krate":0,"index":1868},{"krate":0,"index":1870},{"krate":0,"index":1872},{"krate":0,"index":1874},{"krate":0,"index":1876},{"krate":0,"index":1878},{"krate":0,"index":1880},{"krate":0,"index":1882},{"krate":0,"index":1884},{"krate":0,"index":1886},{"krate":0,"index":1888},{"krate":0,"index":1891},{"krate":0,"index":1894},{"krate":0,"index":1897}],"decl_id":null,"docs":" Status code used to indicate why an endpoint is closing the WebSocket connection.\n","sig":null,"attributes":[{"value":"/ Status code used to indicate why an endpoint is closing the WebSocket connection.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":101191,"byte_end":101276,"line_start":117,"line_end":117,"column_start":1,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":684},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":104684,"byte_end":104694,"line_start":192,"line_end":192,"column_start":12,"column_end":22},"name":"is_allowed","qualname":"<CloseCode>::is_allowed","value":"fn is_allowed(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if this CloseCode is allowed.\n","sig":null,"attributes":[{"value":"/ Check if this CloseCode is allowed.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":104633,"byte_end":104672,"line_start":191,"line_end":191,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":104833,"byte_end":104836,"line_start":198,"line_end":198,"column_start":8,"column_end":11},"name":"fmt","qualname":"<CloseCode as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10117},"children":[],"decl_id":{"krate":2,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":688},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":104999,"byte_end":105003,"line_start":205,"line_end":205,"column_start":8,"column_end":12},"name":"from","qualname":"<u16 as std::convert::From>::from","value":"fn from(CloseCode) -> u16","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":691},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":105647,"byte_end":105651,"line_start":230,"line_end":230,"column_start":8,"column_end":12},"name":"from","qualname":"<u16 as std::convert::From>::from","value":"fn from(&'t CloseCode) -> u16","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":693},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":105752,"byte_end":105756,"line_start":236,"line_end":236,"column_start":8,"column_end":12},"name":"from","qualname":"<CloseCode as std::convert::From>::from","value":"fn from(u16) -> CloseCode","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1912},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":107616,"byte_end":107626,"line_start":21,"line_end":21,"column_start":12,"column_end":22},"name":"CloseFrame","qualname":"::protocol::frame::frame::CloseFrame","value":"CloseFrame { code, reason }","parent":null,"children":[{"krate":0,"index":1914},{"krate":0,"index":1915}],"decl_id":null,"docs":" A struct representing the close command.\n","sig":null,"attributes":[{"value":"/ A struct representing the close command.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":107521,"byte_end":107565,"line_start":19,"line_end":19,"column_start":1,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":1914},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":107671,"byte_end":107675,"line_start":23,"line_end":23,"column_start":9,"column_end":13},"name":"code","qualname":"::protocol::frame::frame::CloseFrame::code","value":"protocol::frame::coding::CloseCode","parent":{"krate":0,"index":1912},"children":[],"decl_id":null,"docs":" The reason as a code.\n","sig":null,"attributes":[{"value":"/ The reason as a code.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":107637,"byte_end":107662,"line_start":22,"line_end":22,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":1915},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":107731,"byte_end":107737,"line_start":25,"line_end":25,"column_start":9,"column_end":15},"name":"reason","qualname":"::protocol::frame::frame::CloseFrame::reason","value":"std::borrow::Cow<'t, str>","parent":{"krate":0,"index":1912},"children":[],"decl_id":null,"docs":" The reason as text string.\n","sig":null,"attributes":[{"value":"/ The reason as text string.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":107692,"byte_end":107722,"line_start":24,"line_end":24,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":778},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":107830,"byte_end":107840,"line_start":30,"line_end":30,"column_start":12,"column_end":22},"name":"into_owned","qualname":"<CloseFrame>::into_owned","value":"fn into_owned(Self) -> CloseFrame","parent":null,"children":[],"decl_id":null,"docs":" Convert into a owned string.\n","sig":null,"attributes":[{"value":"/ Convert into a owned string.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":107786,"byte_end":107818,"line_start":29,"line_end":29,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":781},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":108011,"byte_end":108014,"line_start":36,"line_end":36,"column_start":8,"column_end":11},"name":"fmt","qualname":"<CloseFrame as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10117},"children":[],"decl_id":{"krate":2,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1933},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":108266,"byte_end":108277,"line_start":44,"line_end":44,"column_start":12,"column_end":23},"name":"FrameHeader","qualname":"::protocol::frame::frame::FrameHeader","value":"FrameHeader { is_final, rsv1, rsv2, rsv3, opcode, mask }","parent":null,"children":[{"krate":0,"index":1934},{"krate":0,"index":1935},{"krate":0,"index":1936},{"krate":0,"index":1937},{"krate":0,"index":1938},{"krate":0,"index":1939}],"decl_id":null,"docs":" A struct representing a WebSocket frame header.\n","sig":null,"attributes":[{"value":"/ A struct representing a WebSocket frame header.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":108125,"byte_end":108176,"line_start":41,"line_end":41,"column_start":1,"column_end":52}},{"value":"allow(missing_copy_implementations)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":108177,"byte_end":108215,"line_start":42,"line_end":42,"column_start":1,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":1934},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":108371,"byte_end":108379,"line_start":46,"line_end":46,"column_start":9,"column_end":17},"name":"is_final","qualname":"::protocol::frame::frame::FrameHeader::is_final","value":"bool","parent":{"krate":0,"index":1933},"children":[],"decl_id":null,"docs":" Indicates that the frame is the last one of a possibly fragmented message.\n","sig":null,"attributes":[{"value":"/ Indicates that the frame is the last one of a possibly fragmented message.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":108284,"byte_end":108362,"line_start":45,"line_end":45,"column_start":5,"column_end":83}}]},{"kind":"Field","id":{"krate":0,"index":1935},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":108437,"byte_end":108441,"line_start":48,"line_end":48,"column_start":9,"column_end":13},"name":"rsv1","qualname":"::protocol::frame::frame::FrameHeader::rsv1","value":"bool","parent":{"krate":0,"index":1933},"children":[],"decl_id":null,"docs":" Reserved for protocol extensions.\n","sig":null,"attributes":[{"value":"/ Reserved for protocol extensions.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":108391,"byte_end":108428,"line_start":47,"line_end":47,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":1936},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":108499,"byte_end":108503,"line_start":50,"line_end":50,"column_start":9,"column_end":13},"name":"rsv2","qualname":"::protocol::frame::frame::FrameHeader::rsv2","value":"bool","parent":{"krate":0,"index":1933},"children":[],"decl_id":null,"docs":" Reserved for protocol extensions.\n","sig":null,"attributes":[{"value":"/ Reserved for protocol extensions.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":108453,"byte_end":108490,"line_start":49,"line_end":49,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":1937},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":108561,"byte_end":108565,"line_start":52,"line_end":52,"column_start":9,"column_end":13},"name":"rsv3","qualname":"::protocol::frame::frame::FrameHeader::rsv3","value":"bool","parent":{"krate":0,"index":1933},"children":[],"decl_id":null,"docs":" Reserved for protocol extensions.\n","sig":null,"attributes":[{"value":"/ Reserved for protocol extensions.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":108515,"byte_end":108552,"line_start":51,"line_end":51,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":1938},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":108616,"byte_end":108622,"line_start":54,"line_end":54,"column_start":9,"column_end":15},"name":"opcode","qualname":"::protocol::frame::frame::FrameHeader::opcode","value":"protocol::frame::coding::OpCode","parent":{"krate":0,"index":1933},"children":[],"decl_id":null,"docs":" WebSocket protocol opcode.\n","sig":null,"attributes":[{"value":"/ WebSocket protocol opcode.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":108577,"byte_end":108607,"line_start":53,"line_end":53,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":1939},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":108670,"byte_end":108674,"line_start":56,"line_end":56,"column_start":9,"column_end":13},"name":"mask","qualname":"::protocol::frame::frame::FrameHeader::mask","value":"std::option::Option<[u8; 4]>","parent":{"krate":0,"index":1933},"children":[],"decl_id":null,"docs":" A frame mask, if any.\n","sig":null,"attributes":[{"value":"/ A frame mask, if any.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":108636,"byte_end":108661,"line_start":55,"line_end":55,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":783},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":108734,"byte_end":108741,"line_start":60,"line_end":60,"column_start":8,"column_end":15},"name":"default","qualname":"<FrameHeader as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":785},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":109194,"byte_end":109199,"line_start":76,"line_end":76,"column_start":12,"column_end":17},"name":"parse","qualname":"<FrameHeader>::parse","value":"fn parse<impl AsRef<[u8]>>(&mut Cursor<impl AsRef<[u8]>>)\n-> Result<Option<(Self, u64)>> where impl AsRef<[u8]>: AsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Parse a header from an input stream.\n Returns `None` if insufficient data and does not consume anything in this case.\n Payload size is returned along with the header.\n","sig":null,"attributes":[{"value":"/ Parse a header from an input stream.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":108998,"byte_end":109038,"line_start":73,"line_end":73,"column_start":5,"column_end":45}},{"value":"/ Returns `None` if insufficient data and does not consume anything in this case.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":109043,"byte_end":109126,"line_start":74,"line_end":74,"column_start":5,"column_end":88}},{"value":"/ Payload size is returned along with the header.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":109131,"byte_end":109182,"line_start":75,"line_end":75,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":787},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":109637,"byte_end":109640,"line_start":89,"line_end":89,"column_start":12,"column_end":15},"name":"len","qualname":"<FrameHeader>::len","value":"fn len(&Self, u64) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the size of the header formatted with given payload length.\n","sig":null,"attributes":[{"value":"/ Get the size of the header formatted with given payload length.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":109515,"byte_end":109582,"line_start":87,"line_end":87,"column_start":5,"column_end":72}},{"value":"allow(clippy :: len_without_is_empty)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":109587,"byte_end":109625,"line_start":88,"line_end":88,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":788},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":109839,"byte_end":109845,"line_start":94,"line_end":94,"column_start":12,"column_end":18},"name":"format","qualname":"<FrameHeader>::format","value":"fn format<impl Write>(&Self, u64, &mut impl Write) -> Result<()> where\nimpl Write: Write","parent":null,"children":[],"decl_id":null,"docs":" Format a header for given payload size.\n","sig":null,"attributes":[{"value":"/ Format a header for given payload size.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":109784,"byte_end":109827,"line_start":93,"line_end":93,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":1953},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":113283,"byte_end":113288,"line_start":204,"line_end":204,"column_start":12,"column_end":17},"name":"Frame","qualname":"::protocol::frame::frame::Frame","value":"Frame {  }","parent":null,"children":[{"krate":0,"index":1954},{"krate":0,"index":1955}],"decl_id":null,"docs":" A struct representing a WebSocket frame.\n","sig":null,"attributes":[{"value":"/ A struct representing a WebSocket frame.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":113188,"byte_end":113232,"line_start":202,"line_end":202,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":797},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":113486,"byte_end":113489,"line_start":213,"line_end":213,"column_start":12,"column_end":15},"name":"len","qualname":"<Frame>::len","value":"fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the length of the frame.\n This is the length of the header + the length of the payload.\n","sig":null,"attributes":[{"value":"/ Get the length of the frame.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":113358,"byte_end":113390,"line_start":210,"line_end":210,"column_start":5,"column_end":37}},{"value":"/ This is the length of the header + the length of the payload.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":113395,"byte_end":113460,"line_start":211,"line_end":211,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":113465,"byte_end":113474,"line_start":212,"line_end":212,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":798},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":113666,"byte_end":113674,"line_start":220,"line_end":220,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Frame>::is_empty","value":"fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the frame is empty.\n","sig":null,"attributes":[{"value":"/ Check if the frame is empty.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":113608,"byte_end":113640,"line_start":218,"line_end":218,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":113645,"byte_end":113654,"line_start":219,"line_end":219,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":799},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":113795,"byte_end":113801,"line_start":226,"line_end":226,"column_start":12,"column_end":18},"name":"header","qualname":"<Frame>::header","value":"fn header(&Self) -> &FrameHeader","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the frame's header.\n","sig":null,"attributes":[{"value":"/ Get a reference to the frame's header.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":113727,"byte_end":113769,"line_start":224,"line_end":224,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":113774,"byte_end":113783,"line_start":225,"line_end":225,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":800},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":113935,"byte_end":113945,"line_start":232,"line_end":232,"column_start":12,"column_end":22},"name":"header_mut","qualname":"<Frame>::header_mut","value":"fn header_mut(&mut Self) -> &mut FrameHeader","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the frame's header.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the frame's header.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":113859,"byte_end":113909,"line_start":230,"line_end":230,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":113914,"byte_end":113923,"line_start":231,"line_end":231,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":801},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":114084,"byte_end":114091,"line_start":238,"line_end":238,"column_start":12,"column_end":19},"name":"payload","qualname":"<Frame>::payload","value":"fn payload(&Self) -> &Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the frame's payload.\n","sig":null,"attributes":[{"value":"/ Get a reference to the frame's payload.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":114015,"byte_end":114058,"line_start":236,"line_end":236,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":114063,"byte_end":114072,"line_start":237,"line_end":237,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":802},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":114223,"byte_end":114234,"line_start":244,"line_end":244,"column_start":12,"column_end":23},"name":"payload_mut","qualname":"<Frame>::payload_mut","value":"fn payload_mut(&mut Self) -> &mut Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the frame's payload.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the frame's payload.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":114146,"byte_end":114197,"line_start":242,"line_end":242,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":114202,"byte_end":114211,"line_start":243,"line_end":243,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":806},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":115194,"byte_end":115203,"line_start":274,"line_end":274,"column_start":12,"column_end":21},"name":"into_data","qualname":"<Frame>::into_data","value":"fn into_data(Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Consume the frame into its payload as binary.\n","sig":null,"attributes":[{"value":"/ Consume the frame into its payload as binary.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":115119,"byte_end":115168,"line_start":272,"line_end":272,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":115173,"byte_end":115182,"line_start":273,"line_end":273,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":807},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":115330,"byte_end":115341,"line_start":280,"line_end":280,"column_start":12,"column_end":23},"name":"into_string","qualname":"<Frame>::into_string","value":"fn into_string(Self) -> StdResult<String, FromUtf8Error>","parent":null,"children":[],"decl_id":null,"docs":" Consume the frame into its payload as string.\n","sig":null,"attributes":[{"value":"/ Consume the frame into its payload as string.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":115255,"byte_end":115304,"line_start":278,"line_end":278,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":115309,"byte_end":115318,"line_start":279,"line_end":279,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":808},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":115495,"byte_end":115502,"line_start":286,"line_end":286,"column_start":12,"column_end":19},"name":"to_text","qualname":"<Frame>::to_text","value":"fn to_text(&Self) -> Result<&str, Utf8Error>","parent":null,"children":[],"decl_id":null,"docs":" Get frame payload as `&str`.\n","sig":null,"attributes":[{"value":"/ Get frame payload as `&str`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":115437,"byte_end":115469,"line_start":284,"line_end":284,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":115474,"byte_end":115483,"line_start":285,"line_end":285,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":810},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":116244,"byte_end":116251,"line_start":308,"line_end":308,"column_start":12,"column_end":19},"name":"message","qualname":"<Frame>::message","value":"fn message(Vec<u8>, OpCode, bool) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Create a new data frame.\n","sig":null,"attributes":[{"value":"/ Create a new data frame.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":116190,"byte_end":116218,"line_start":306,"line_end":306,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":116223,"byte_end":116232,"line_start":307,"line_end":307,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":811},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":116576,"byte_end":116580,"line_start":316,"line_end":316,"column_start":12,"column_end":16},"name":"pong","qualname":"<Frame>::pong","value":"fn pong(Vec<u8>) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Create a new Pong control frame.\n","sig":null,"attributes":[{"value":"/ Create a new Pong control frame.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":116514,"byte_end":116550,"line_start":314,"line_end":314,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":116555,"byte_end":116564,"line_start":315,"line_end":315,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":812},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":116879,"byte_end":116883,"line_start":328,"line_end":328,"column_start":12,"column_end":16},"name":"ping","qualname":"<Frame>::ping","value":"fn ping(Vec<u8>) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Create a new Ping control frame.\n","sig":null,"attributes":[{"value":"/ Create a new Ping control frame.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":116817,"byte_end":116853,"line_start":326,"line_end":326,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":116858,"byte_end":116867,"line_start":327,"line_end":327,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":813},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":117183,"byte_end":117188,"line_start":340,"line_end":340,"column_start":12,"column_end":17},"name":"close","qualname":"<Frame>::close","value":"fn close(Option<CloseFrame>) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Create a new Close control frame.\n","sig":null,"attributes":[{"value":"/ Create a new Close control frame.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":117120,"byte_end":117157,"line_start":338,"line_end":338,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":117162,"byte_end":117171,"line_start":339,"line_end":339,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":814},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":117692,"byte_end":117704,"line_start":354,"line_end":354,"column_start":12,"column_end":24},"name":"from_payload","qualname":"<Frame>::from_payload","value":"fn from_payload(FrameHeader, Vec<u8>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a frame from given header and data.\n","sig":null,"attributes":[{"value":"/ Create a frame from given header and data.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":117634,"byte_end":117680,"line_start":353,"line_end":353,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":815},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":117844,"byte_end":117850,"line_start":359,"line_end":359,"column_start":12,"column_end":18},"name":"format","qualname":"<Frame>::format","value":"fn format<impl Write>(Self, &mut impl Write) -> Result<()> where\nimpl Write: Write","parent":null,"children":[],"decl_id":null,"docs":" Write a frame out to a buffer\n","sig":null,"attributes":[{"value":"/ Write a frame out to a buffer","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":117799,"byte_end":117832,"line_start":358,"line_end":358,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":818},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":118097,"byte_end":118100,"line_start":368,"line_end":368,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Frame as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10117},"children":[],"decl_id":{"krate":2,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1968},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/mod.rs","byte_start":90276,"byte_end":90287,"line_start":21,"line_end":21,"column_start":12,"column_end":23},"name":"FrameSocket","qualname":"::protocol::frame::FrameSocket","value":"FrameSocket {  }","parent":null,"children":[{"krate":0,"index":1970},{"krate":0,"index":1971}],"decl_id":null,"docs":" A reader and writer for WebSocket frames.\n","sig":null,"attributes":[{"value":"/ A reader and writer for WebSocket frames.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/mod.rs","byte_start":90202,"byte_end":90247,"line_start":19,"line_end":19,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":881},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/mod.rs","byte_start":90506,"byte_end":90509,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<FrameSocket<Stream>>::new","value":"fn new(Stream) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new frame socket.\n","sig":null,"attributes":[{"value":"/ Create a new frame socket.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/mod.rs","byte_start":90464,"byte_end":90494,"line_start":29,"line_end":29,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":882},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/mod.rs","byte_start":90671,"byte_end":90690,"line_start":35,"line_end":35,"column_start":12,"column_end":31},"name":"from_partially_read","qualname":"<FrameSocket<Stream>>::from_partially_read","value":"fn from_partially_read(Stream, Vec<u8>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new frame socket from partially read data.\n","sig":null,"attributes":[{"value":"/ Create a new frame socket from partially read data.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/mod.rs","byte_start":90604,"byte_end":90659,"line_start":34,"line_end":34,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":883},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/mod.rs","byte_start":90869,"byte_end":90879,"line_start":40,"line_end":40,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FrameSocket<Stream>>::into_inner","value":"fn into_inner(Self) -> (Stream, Vec<u8>)","parent":null,"children":[],"decl_id":null,"docs":" Extract a stream from the socket.\n","sig":null,"attributes":[{"value":"/ Extract a stream from the socket.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/mod.rs","byte_start":90820,"byte_end":90857,"line_start":39,"line_end":39,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":884},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/mod.rs","byte_start":91038,"byte_end":91045,"line_start":45,"line_end":45,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FrameSocket<Stream>>::get_ref","value":"fn get_ref(&Self) -> &Stream","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the inner stream.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the inner stream.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/mod.rs","byte_start":90975,"byte_end":91026,"line_start":44,"line_end":44,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":885},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/mod.rs","byte_start":91162,"byte_end":91169,"line_start":50,"line_end":50,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FrameSocket<Stream>>::get_mut","value":"fn get_mut(&mut Self) -> &mut Stream","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the inner stream.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the inner stream.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/mod.rs","byte_start":91098,"byte_end":91150,"line_start":49,"line_end":49,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":888},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/mod.rs","byte_start":91336,"byte_end":91346,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"name":"read_frame","qualname":"<FrameSocket<Stream>>::read_frame","value":"fn read_frame(&mut Self, Option<usize>) -> Result<Option<Frame>>","parent":null,"children":[],"decl_id":null,"docs":" Read a frame from stream.\n","sig":null,"attributes":[{"value":"/ Read a frame from stream.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/mod.rs","byte_start":91295,"byte_end":91324,"line_start":59,"line_end":59,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":891},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/mod.rs","byte_start":91805,"byte_end":91816,"line_start":74,"line_end":74,"column_start":12,"column_end":23},"name":"write_frame","qualname":"<FrameSocket<Stream>>::write_frame","value":"fn write_frame(&mut Self, Frame) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Write a frame to stream.","sig":null,"attributes":[{"value":"/ Write a frame to stream.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/mod.rs","byte_start":91541,"byte_end":91569,"line_start":69,"line_end":69,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/mod.rs","byte_start":91574,"byte_end":91577,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ This function guarantees that the frame is queued regardless of any errors.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/mod.rs","byte_start":91582,"byte_end":91661,"line_start":71,"line_end":71,"column_start":5,"column_end":84}},{"value":"/ There is no need to resend the frame. In order to handle WouldBlock or Incomplete,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/mod.rs","byte_start":91666,"byte_end":91752,"line_start":72,"line_end":72,"column_start":5,"column_end":91}},{"value":"/ call write_pending() afterwards.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/mod.rs","byte_start":91757,"byte_end":91793,"line_start":73,"line_end":73,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":892},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/mod.rs","byte_start":91972,"byte_end":91985,"line_start":79,"line_end":79,"column_start":12,"column_end":25},"name":"write_pending","qualname":"<FrameSocket<Stream>>::write_pending","value":"fn write_pending(&mut Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Complete pending write, if any.\n","sig":null,"attributes":[{"value":"/ Complete pending write, if any.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/mod.rs","byte_start":91925,"byte_end":91960,"line_start":78,"line_end":78,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2000},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":127937,"byte_end":127941,"line_start":162,"line_end":162,"column_start":5,"column_end":9},"name":"Text","qualname":"::protocol::message::Message::Text","value":"Message::Text(String)","parent":{"krate":0,"index":1999},"children":[],"decl_id":null,"docs":" A text WebSocket message\n","sig":null,"attributes":[{"value":"/ A text WebSocket message","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":127904,"byte_end":127932,"line_start":161,"line_end":161,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":2002},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":127942,"byte_end":127948,"line_start":162,"line_end":162,"column_start":10,"column_end":16},"name":"0","qualname":"::protocol::message::Message::Text::0","value":"std::string::String","parent":{"krate":0,"index":2000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2003},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":127990,"byte_end":127996,"line_start":164,"line_end":164,"column_start":5,"column_end":11},"name":"Binary","qualname":"::protocol::message::Message::Binary","value":"Message::Binary(Vec<u8>)","parent":{"krate":0,"index":1999},"children":[],"decl_id":null,"docs":" A binary WebSocket message\n","sig":null,"attributes":[{"value":"/ A binary WebSocket message","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":127955,"byte_end":127985,"line_start":163,"line_end":163,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":2005},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":127997,"byte_end":128004,"line_start":164,"line_end":164,"column_start":12,"column_end":19},"name":"0","qualname":"::protocol::message::Message::Binary::0","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":2003},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2006},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":128133,"byte_end":128137,"line_start":168,"line_end":168,"column_start":5,"column_end":9},"name":"Ping","qualname":"::protocol::message::Message::Ping","value":"Message::Ping(Vec<u8>)","parent":{"krate":0,"index":1999},"children":[],"decl_id":null,"docs":" A ping message with the specified payload","sig":null,"attributes":[{"value":"/ A ping message with the specified payload","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":128011,"byte_end":128056,"line_start":165,"line_end":165,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":128061,"byte_end":128064,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ The payload here must have a length less than 125 bytes","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":128069,"byte_end":128128,"line_start":167,"line_end":167,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":2008},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":128138,"byte_end":128145,"line_start":168,"line_end":168,"column_start":10,"column_end":17},"name":"0","qualname":"::protocol::message::Message::Ping::0","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":2006},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2009},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":128274,"byte_end":128278,"line_start":172,"line_end":172,"column_start":5,"column_end":9},"name":"Pong","qualname":"::protocol::message::Message::Pong","value":"Message::Pong(Vec<u8>)","parent":{"krate":0,"index":1999},"children":[],"decl_id":null,"docs":" A pong message with the specified payload","sig":null,"attributes":[{"value":"/ A pong message with the specified payload","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":128152,"byte_end":128197,"line_start":169,"line_end":169,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":128202,"byte_end":128205,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ The payload here must have a length less than 125 bytes","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":128210,"byte_end":128269,"line_start":171,"line_end":171,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":2011},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":128279,"byte_end":128286,"line_start":172,"line_end":172,"column_start":10,"column_end":17},"name":"0","qualname":"::protocol::message::Message::Pong::0","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":2009},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2012},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":128348,"byte_end":128353,"line_start":174,"line_end":174,"column_start":5,"column_end":10},"name":"Close","qualname":"::protocol::message::Message::Close","value":"Message::Close(Option<CloseFrame>)","parent":{"krate":0,"index":1999},"children":[],"decl_id":null,"docs":" A close message with the optional close frame.\n","sig":null,"attributes":[{"value":"/ A close message with the optional close frame.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":128293,"byte_end":128343,"line_start":173,"line_end":173,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":2014},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":128354,"byte_end":128381,"line_start":174,"line_end":174,"column_start":11,"column_end":38},"name":"0","qualname":"::protocol::message::Message::Close::0","value":"std::option::Option<protocol::frame::frame::CloseFrame<'static>>","parent":{"krate":0,"index":2012},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2015},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":128480,"byte_end":128485,"line_start":176,"line_end":176,"column_start":5,"column_end":10},"name":"Frame","qualname":"::protocol::message::Message::Frame","value":"Message::Frame(Frame)","parent":{"krate":0,"index":1999},"children":[],"decl_id":null,"docs":" Raw frame. Note, that you're not going to get this value while reading the message.\n","sig":null,"attributes":[{"value":"/ Raw frame. Note, that you're not going to get this value while reading the message.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":128388,"byte_end":128475,"line_start":175,"line_end":175,"column_start":5,"column_end":92}}]},{"kind":"Field","id":{"krate":0,"index":2017},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":128486,"byte_end":128491,"line_start":176,"line_end":176,"column_start":11,"column_end":16},"name":"0","qualname":"::protocol::message::Message::Frame::0","value":"protocol::frame::frame::Frame","parent":{"krate":0,"index":2015},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1999},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":127890,"byte_end":127897,"line_start":160,"line_end":160,"column_start":10,"column_end":17},"name":"Message","qualname":"::protocol::message::Message","value":"enum Message {\n    Text(String),\n    Binary(Vec<u8>),\n    Ping(Vec<u8>),\n    Pong(Vec<u8>),\n    Close(Option<CloseFrame>),\n    Frame(Frame),\n}","parent":null,"children":[{"krate":0,"index":2000},{"krate":0,"index":2003},{"krate":0,"index":2006},{"krate":0,"index":2009},{"krate":0,"index":2012},{"krate":0,"index":2015}],"decl_id":null,"docs":" An enum representing the various forms of a WebSocket message.\n","sig":null,"attributes":[{"value":"/ An enum representing the various forms of a WebSocket message.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":127775,"byte_end":127841,"line_start":158,"line_end":158,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":976},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":128586,"byte_end":128590,"line_start":181,"line_end":181,"column_start":12,"column_end":16},"name":"text","qualname":"<Message>::text","value":"fn text<S>(S) -> Message where S: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Create a new text WebSocket message from a stringable.\n","sig":null,"attributes":[{"value":"/ Create a new text WebSocket message from a stringable.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":128516,"byte_end":128574,"line_start":180,"line_end":180,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":978},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":128784,"byte_end":128790,"line_start":189,"line_end":189,"column_start":12,"column_end":18},"name":"binary","qualname":"<Message>::binary","value":"fn binary<B>(B) -> Message where B: Into<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new binary WebSocket message by converting to Vec<u8>.\n","sig":null,"attributes":[{"value":"/ Create a new binary WebSocket message by converting to Vec<u8>.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":128705,"byte_end":128772,"line_start":188,"line_end":188,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":980},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":128964,"byte_end":128971,"line_start":197,"line_end":197,"column_start":12,"column_end":19},"name":"is_text","qualname":"<Message>::is_text","value":"fn is_text(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether a message is a text message.\n","sig":null,"attributes":[{"value":"/ Indicates whether a message is a text message.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":128902,"byte_end":128952,"line_start":196,"line_end":196,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":981},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":129106,"byte_end":129115,"line_start":202,"line_end":202,"column_start":12,"column_end":21},"name":"is_binary","qualname":"<Message>::is_binary","value":"fn is_binary(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether a message is a binary message.\n","sig":null,"attributes":[{"value":"/ Indicates whether a message is a binary message.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":129042,"byte_end":129094,"line_start":201,"line_end":201,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":982},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":129250,"byte_end":129257,"line_start":207,"line_end":207,"column_start":12,"column_end":19},"name":"is_ping","qualname":"<Message>::is_ping","value":"fn is_ping(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether a message is a ping message.\n","sig":null,"attributes":[{"value":"/ Indicates whether a message is a ping message.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":129188,"byte_end":129238,"line_start":206,"line_end":206,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":983},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":129390,"byte_end":129397,"line_start":212,"line_end":212,"column_start":12,"column_end":19},"name":"is_pong","qualname":"<Message>::is_pong","value":"fn is_pong(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether a message is a pong message.\n","sig":null,"attributes":[{"value":"/ Indicates whether a message is a pong message.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":129328,"byte_end":129378,"line_start":211,"line_end":211,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":984},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":129531,"byte_end":129539,"line_start":217,"line_end":217,"column_start":12,"column_end":20},"name":"is_close","qualname":"<Message>::is_close","value":"fn is_close(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether a message ia s close message.\n","sig":null,"attributes":[{"value":"/ Indicates whether a message ia s close message.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":129468,"byte_end":129519,"line_start":216,"line_end":216,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":985},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":129667,"byte_end":129670,"line_start":222,"line_end":222,"column_start":12,"column_end":15},"name":"len","qualname":"<Message>::len","value":"fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the length of the WebSocket message.\n","sig":null,"attributes":[{"value":"/ Get the length of the WebSocket message.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":129611,"byte_end":129655,"line_start":221,"line_end":221,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":987},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":130217,"byte_end":130225,"line_start":235,"line_end":235,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Message>::is_empty","value":"fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the WebSocket message has no content.\n For example, if the other side of the connection sent an empty string.\n","sig":null,"attributes":[{"value":"/ Returns true if the WebSocket message has no content.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":130069,"byte_end":130126,"line_start":233,"line_end":233,"column_start":5,"column_end":62}},{"value":"/ For example, if the other side of the connection sent an empty string.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":130131,"byte_end":130205,"line_start":234,"line_end":234,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":988},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":130345,"byte_end":130354,"line_start":240,"line_end":240,"column_start":12,"column_end":21},"name":"into_data","qualname":"<Message>::into_data","value":"fn into_data(Self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Consume the WebSocket and return it as binary data.\n","sig":null,"attributes":[{"value":"/ Consume the WebSocket and return it as binary data.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":130278,"byte_end":130333,"line_start":239,"line_end":239,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":989},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":130832,"byte_end":130841,"line_start":251,"line_end":251,"column_start":12,"column_end":21},"name":"into_text","qualname":"<Message>::into_text","value":"fn into_text(Self) -> Result<String>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to consume the WebSocket message and convert it to a String.\n","sig":null,"attributes":[{"value":"/ Attempt to consume the WebSocket message and convert it to a String.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":130748,"byte_end":130820,"line_start":250,"line_end":250,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":990},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":131412,"byte_end":131419,"line_start":265,"line_end":265,"column_start":12,"column_end":19},"name":"to_text","qualname":"<Message>::to_text","value":"fn to_text(&Self) -> Result<&str>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to get a &str from the WebSocket message,\n this will try to convert binary data to utf8.\n","sig":null,"attributes":[{"value":"/ Attempt to get a &str from the WebSocket message,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":131293,"byte_end":131346,"line_start":263,"line_end":263,"column_start":5,"column_end":58}},{"value":"/ this will try to convert binary data to utf8.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":131351,"byte_end":131400,"line_start":264,"line_end":264,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":992},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":131902,"byte_end":131906,"line_start":279,"line_end":279,"column_start":8,"column_end":12},"name":"from","qualname":"<Message as std::convert::From>::from","value":"fn from(String) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":995},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":132016,"byte_end":132020,"line_start":285,"line_end":285,"column_start":8,"column_end":12},"name":"from","qualname":"<Message as std::convert::From>::from","value":"fn from(&'s str) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":998},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":132132,"byte_end":132136,"line_start":291,"line_end":291,"column_start":8,"column_end":12},"name":"from","qualname":"<Message as std::convert::From>::from","value":"fn from(&'b [u8]) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1000},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":132242,"byte_end":132246,"line_start":297,"line_end":297,"column_start":8,"column_end":12},"name":"from","qualname":"<Message as std::convert::From>::from","value":"fn from(Vec<u8>) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1002},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":132351,"byte_end":132355,"line_start":303,"line_end":303,"column_start":8,"column_end":12},"name":"from","qualname":"<Vec<u8> as std::convert::From>::from","value":"fn from(Message) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1005},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":132488,"byte_end":132496,"line_start":311,"line_end":311,"column_start":8,"column_end":16},"name":"try_from","qualname":"<String as std::convert::TryFrom>::try_from","value":"fn try_from(Message) -> StdResult<Self, Self::Error>","parent":{"krate":2,"index":3092},"children":[],"decl_id":{"krate":2,"index":3095},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1007},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":132621,"byte_end":132624,"line_start":317,"line_end":317,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Message as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> StdResult<(), fmt::Error>","parent":{"krate":2,"index":10117},"children":[],"decl_id":{"krate":2,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2030},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":60617,"byte_end":60623,"line_start":32,"line_end":32,"column_start":5,"column_end":11},"name":"Server","qualname":"::protocol::Role::Server","value":"Role::Server","parent":{"krate":0,"index":2029},"children":[],"decl_id":null,"docs":" This socket is a server\n","sig":null,"attributes":[{"value":"/ This socket is a server","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":60585,"byte_end":60612,"line_start":31,"line_end":31,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2032},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":60661,"byte_end":60667,"line_start":34,"line_end":34,"column_start":5,"column_end":11},"name":"Client","qualname":"::protocol::Role::Client","value":"Role::Client","parent":{"krate":0,"index":2029},"children":[],"decl_id":null,"docs":" This socket is a client\n","sig":null,"attributes":[{"value":"/ This socket is a client","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":60629,"byte_end":60656,"line_start":33,"line_end":33,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":2029},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":60574,"byte_end":60578,"line_start":30,"line_end":30,"column_start":10,"column_end":14},"name":"Role","qualname":"::protocol::Role","value":"enum Role { Server, Client, }","parent":null,"children":[{"krate":0,"index":2030},{"krate":0,"index":2032}],"decl_id":null,"docs":" Indicates a Client or Server role of the websocket\n","sig":null,"attributes":[{"value":"/ Indicates a Client or Server role of the websocket","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":60465,"byte_end":60519,"line_start":28,"line_end":28,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":2045},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":60761,"byte_end":60776,"line_start":39,"line_end":39,"column_start":12,"column_end":27},"name":"WebSocketConfig","qualname":"::protocol::WebSocketConfig","value":"WebSocketConfig { max_send_queue, max_message_size, max_frame_size, accept_unmasked_frames }","parent":null,"children":[{"krate":0,"index":2046},{"krate":0,"index":2047},{"krate":0,"index":2048},{"krate":0,"index":2049}],"decl_id":null,"docs":" The configuration for WebSocket connection.\n","sig":null,"attributes":[{"value":"/ The configuration for WebSocket connection.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":60672,"byte_end":60719,"line_start":37,"line_end":37,"column_start":1,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":2046},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":60997,"byte_end":61011,"line_start":43,"line_end":43,"column_start":9,"column_end":23},"name":"max_send_queue","qualname":"::protocol::WebSocketConfig::max_send_queue","value":"std::option::Option<usize>","parent":{"krate":0,"index":2045},"children":[],"decl_id":null,"docs":" The size of the send queue. You can use it to turn on/off the backpressure features. `None`\n means here that the size of the queue is unlimited. The default value is the unlimited\n queue.\n","sig":null,"attributes":[{"value":"/ The size of the send queue. You can use it to turn on/off the backpressure features. `None`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":60783,"byte_end":60878,"line_start":40,"line_end":40,"column_start":5,"column_end":100}},{"value":"/ means here that the size of the queue is unlimited. The default value is the unlimited","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":60883,"byte_end":60973,"line_start":41,"line_end":41,"column_start":5,"column_end":95}},{"value":"/ queue.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":60978,"byte_end":60988,"line_start":42,"line_end":42,"column_start":5,"column_end":15}}]},{"kind":"Field","id":{"krate":0,"index":2047},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":61266,"byte_end":61282,"line_start":47,"line_end":47,"column_start":9,"column_end":25},"name":"max_message_size","qualname":"::protocol::WebSocketConfig::max_message_size","value":"std::option::Option<usize>","parent":{"krate":0,"index":2045},"children":[],"decl_id":null,"docs":" The maximum size of a message. `None` means no size limit. The default value is 64 MiB\n which should be reasonably big for all normal use-cases but small enough to prevent\n memory eating by a malicious user.\n","sig":null,"attributes":[{"value":"/ The maximum size of a message. `None` means no size limit. The default value is 64 MiB","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":61032,"byte_end":61122,"line_start":44,"line_end":44,"column_start":5,"column_end":95}},{"value":"/ which should be reasonably big for all normal use-cases but small enough to prevent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":61127,"byte_end":61214,"line_start":45,"line_end":45,"column_start":5,"column_end":92}},{"value":"/ memory eating by a malicious user.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":61219,"byte_end":61257,"line_start":46,"line_end":46,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":2048},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":61621,"byte_end":61635,"line_start":52,"line_end":52,"column_start":9,"column_end":23},"name":"max_frame_size","qualname":"::protocol::WebSocketConfig::max_frame_size","value":"std::option::Option<usize>","parent":{"krate":0,"index":2045},"children":[],"decl_id":null,"docs":" The maximum size of a single message frame. `None` means no size limit. The limit is for\n frame payload NOT including the frame header. The default value is 16 MiB which should\n be reasonably big for all normal use-cases but small enough to prevent memory eating\n by a malicious user.\n","sig":null,"attributes":[{"value":"/ The maximum size of a single message frame. `None` means no size limit. The limit is for","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":61303,"byte_end":61395,"line_start":48,"line_end":48,"column_start":5,"column_end":97}},{"value":"/ frame payload NOT including the frame header. The default value is 16 MiB which should","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":61400,"byte_end":61490,"line_start":49,"line_end":49,"column_start":5,"column_end":95}},{"value":"/ be reasonably big for all normal use-cases but small enough to prevent memory eating","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":61495,"byte_end":61583,"line_start":50,"line_end":50,"column_start":5,"column_end":93}},{"value":"/ by a malicious user.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":61588,"byte_end":61612,"line_start":51,"line_end":51,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":2049},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":62057,"byte_end":62079,"line_start":58,"line_end":58,"column_start":9,"column_end":31},"name":"accept_unmasked_frames","qualname":"::protocol::WebSocketConfig::accept_unmasked_frames","value":"bool","parent":{"krate":0,"index":2045},"children":[],"decl_id":null,"docs":" When set to `true`, the server will accept and handle unmasked frames\n from the client. According to the RFC 6455, the server must close the\n connection to the client in such cases, however it seems like there are\n some popular libraries that are sending unmasked frames, ignoring the RFC.\n By default this option is set to `false`, i.e. according to RFC 6455.\n","sig":null,"attributes":[{"value":"/ When set to `true`, the server will accept and handle unmasked frames","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":61656,"byte_end":61729,"line_start":53,"line_end":53,"column_start":5,"column_end":78}},{"value":"/ from the client. According to the RFC 6455, the server must close the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":61734,"byte_end":61807,"line_start":54,"line_end":54,"column_start":5,"column_end":78}},{"value":"/ connection to the client in such cases, however it seems like there are","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":61812,"byte_end":61887,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/ some popular libraries that are sending unmasked frames, ignoring the RFC.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":61892,"byte_end":61970,"line_start":56,"line_end":56,"column_start":5,"column_end":83}},{"value":"/ By default this option is set to `false`, i.e. according to RFC 6455.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":61975,"byte_end":62048,"line_start":57,"line_end":57,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":1076},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":62132,"byte_end":62139,"line_start":62,"line_end":62,"column_start":8,"column_end":15},"name":"default","qualname":"<WebSocketConfig as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2055},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":62596,"byte_end":62605,"line_start":77,"line_end":77,"column_start":12,"column_end":21},"name":"WebSocket","qualname":"::protocol::WebSocket","value":"WebSocket {  }","parent":null,"children":[{"krate":0,"index":2057},{"krate":0,"index":2058}],"decl_id":null,"docs":" WebSocket input-output stream.","sig":null,"attributes":[{"value":"/ WebSocket input-output stream.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":62364,"byte_end":62398,"line_start":72,"line_end":72,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":62399,"byte_end":62402,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ This is THE structure you want to create to be able to speak the WebSocket protocol.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":62403,"byte_end":62491,"line_start":74,"line_end":74,"column_start":1,"column_end":89}},{"value":"/ It may be created by calling `connect`, `accept` or `client` functions.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":62492,"byte_end":62567,"line_start":75,"line_end":75,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1079},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":63124,"byte_end":63139,"line_start":90,"line_end":90,"column_start":12,"column_end":27},"name":"from_raw_socket","qualname":"<WebSocket<Stream>>::from_raw_socket","value":"fn from_raw_socket(Stream, Role, Option<WebSocketConfig>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert a raw socket into a WebSocket without performing a handshake.","sig":null,"attributes":[{"value":"/ Convert a raw socket into a WebSocket without performing a handshake.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":62784,"byte_end":62857,"line_start":85,"line_end":85,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":62862,"byte_end":62865,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Call this function if you're using Tungstenite as a part of a web framework","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":62870,"byte_end":62949,"line_start":87,"line_end":87,"column_start":5,"column_end":84}},{"value":"/ or together with an existing one. If you need an initial handshake, use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":62954,"byte_end":63029,"line_start":88,"line_end":88,"column_start":5,"column_end":80}},{"value":"/ `connect()` or `accept()` functions of the crate to construct a websocket.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":63034,"byte_end":63112,"line_start":89,"line_end":89,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1080},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":63645,"byte_end":63664,"line_start":99,"line_end":99,"column_start":12,"column_end":31},"name":"from_partially_read","qualname":"<WebSocket<Stream>>::from_partially_read","value":"fn from_partially_read(Stream, Vec<u8>, Role, Option<WebSocketConfig>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert a raw socket into a WebSocket without performing a handshake.","sig":null,"attributes":[{"value":"/ Convert a raw socket into a WebSocket without performing a handshake.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":63305,"byte_end":63378,"line_start":94,"line_end":94,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":63383,"byte_end":63386,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Call this function if you're using Tungstenite as a part of a web framework","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":63391,"byte_end":63470,"line_start":96,"line_end":96,"column_start":5,"column_end":84}},{"value":"/ or together with an existing one. If you need an initial handshake, use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":63475,"byte_end":63550,"line_start":97,"line_end":97,"column_start":5,"column_end":80}},{"value":"/ `connect()` or `accept()` functions of the crate to construct a websocket.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":63555,"byte_end":63633,"line_start":98,"line_end":98,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1081},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":64002,"byte_end":64009,"line_start":112,"line_end":112,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<WebSocket<Stream>>::get_ref","value":"fn get_ref(&Self) -> &Stream","parent":null,"children":[],"decl_id":null,"docs":" Returns a shared reference to the inner stream.\n","sig":null,"attributes":[{"value":"/ Returns a shared reference to the inner stream.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":63939,"byte_end":63990,"line_start":111,"line_end":111,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1082},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":64125,"byte_end":64132,"line_start":116,"line_end":116,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<WebSocket<Stream>>::get_mut","value":"fn get_mut(&mut Self) -> &mut Stream","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the inner stream.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the inner stream.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":64061,"byte_end":64113,"line_start":115,"line_end":115,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1083},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":64238,"byte_end":64248,"line_start":121,"line_end":121,"column_start":12,"column_end":22},"name":"set_config","qualname":"<WebSocket<Stream>>::set_config","value":"fn set_config<impl FnOnce(&mut WebSocketConfig)>(&mut Self,\nimpl FnOnce(&mut WebSocketConfig)) where\nimpl FnOnce(&mut WebSocketConfig): for<'_> FnOnce(&'_ mut WebSocketConfig) ->\n()","parent":null,"children":[],"decl_id":null,"docs":" Change the configuration.\n","sig":null,"attributes":[{"value":"/ Change the configuration.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":64197,"byte_end":64226,"line_start":120,"line_end":120,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1085},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":64399,"byte_end":64409,"line_start":126,"line_end":126,"column_start":12,"column_end":22},"name":"get_config","qualname":"<WebSocket<Stream>>::get_config","value":"fn get_config(&Self) -> &WebSocketConfig","parent":null,"children":[],"decl_id":null,"docs":" Read the configuration.\n","sig":null,"attributes":[{"value":"/ Read the configuration.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":64360,"byte_end":64387,"line_start":125,"line_end":125,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1086},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":64733,"byte_end":64741,"line_start":134,"line_end":134,"column_start":12,"column_end":20},"name":"can_read","qualname":"<WebSocket<Stream>>::can_read","value":"fn can_read(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if it is possible to read messages.","sig":null,"attributes":[{"value":"/ Check if it is possible to read messages.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":64484,"byte_end":64529,"line_start":130,"line_end":130,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":64534,"byte_end":64537,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ Reading is impossible after receiving `Message::Close`. It is still possible after","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":64542,"byte_end":64628,"line_start":132,"line_end":132,"column_start":5,"column_end":91}},{"value":"/ sending close frame since the peer still may send some data before confirming close.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":64633,"byte_end":64721,"line_start":133,"line_end":133,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":1087},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":64957,"byte_end":64966,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"can_write","qualname":"<WebSocket<Stream>>::can_write","value":"fn can_write(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if it is possible to write messages.","sig":null,"attributes":[{"value":"/ Check if it is possible to write messages.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":64802,"byte_end":64848,"line_start":138,"line_end":138,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":64853,"byte_end":64856,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ Writing gets impossible immediately after sending or receiving `Message::Close`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":64861,"byte_end":64945,"line_start":140,"line_end":140,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":1090},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":65943,"byte_end":65955,"line_start":161,"line_end":161,"column_start":12,"column_end":24},"name":"read_message","qualname":"<WebSocket<Stream>>::read_message","value":"fn read_message(&mut Self) -> Result<Message>","parent":null,"children":[],"decl_id":null,"docs":" Read a message from stream, if possible.","sig":null,"attributes":[{"value":"/ Read a message from stream, if possible.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":65077,"byte_end":65121,"line_start":147,"line_end":147,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":65126,"byte_end":65129,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ This will queue responses to ping and close messages to be sent. It will call","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":65134,"byte_end":65215,"line_start":149,"line_end":149,"column_start":5,"column_end":86}},{"value":"/ `write_pending` before trying to read in order to make sure that those responses","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":65220,"byte_end":65304,"line_start":150,"line_end":150,"column_start":5,"column_end":89}},{"value":"/ make progress even if you never call `write_pending`. That does mean that they","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":65309,"byte_end":65391,"line_start":151,"line_end":151,"column_start":5,"column_end":87}},{"value":"/ get sent out earliest on the next call to `read_message`, `write_message` or `write_pending`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":65396,"byte_end":65493,"line_start":152,"line_end":152,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":65498,"byte_end":65501,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ ## Closing the connection","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":65506,"byte_end":65535,"line_start":154,"line_end":154,"column_start":5,"column_end":34}},{"value":"/ When the remote endpoint decides to close the connection this will return","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":65540,"byte_end":65617,"line_start":155,"line_end":155,"column_start":5,"column_end":82}},{"value":"/ the close message with an optional close frame.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":65622,"byte_end":65673,"line_start":156,"line_end":156,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":65678,"byte_end":65681,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ You should continue calling `read_message`, `write_message` or `write_pending` to drive","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":65686,"byte_end":65777,"line_start":158,"line_end":158,"column_start":5,"column_end":96}},{"value":"/ the reply to the close frame until [Error::ConnectionClosed] is returned. Once that happens","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":65782,"byte_end":65877,"line_start":159,"line_end":159,"column_start":5,"column_end":100}},{"value":"/ it is safe to drop the underlying connection.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":65882,"byte_end":65931,"line_start":160,"line_end":160,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1091},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":67979,"byte_end":67992,"line_start":192,"line_end":192,"column_start":12,"column_end":25},"name":"write_message","qualname":"<WebSocket<Stream>>::write_message","value":"fn write_message(&mut Self, Message) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Send a message to stream, if possible.","sig":null,"attributes":[{"value":"/ Send a message to stream, if possible.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":66051,"byte_end":66093,"line_start":165,"line_end":165,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":66098,"byte_end":66101,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ WebSocket will buffer a configurable number of messages at a time, except to reply to Ping","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":66106,"byte_end":66200,"line_start":167,"line_end":167,"column_start":5,"column_end":99}},{"value":"/ requests. A Pong reply will jump the queue because the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":66205,"byte_end":66263,"line_start":168,"line_end":168,"column_start":5,"column_end":63}},{"value":"/ [websocket RFC](https://tools.ietf.org/html/rfc6455#section-5.5.2) specifies it should be sent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":66268,"byte_end":66366,"line_start":169,"line_end":169,"column_start":5,"column_end":103}},{"value":"/ as soon as is practical.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":66371,"byte_end":66399,"line_start":170,"line_end":170,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":66404,"byte_end":66407,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ Note that upon receiving a ping message, tungstenite cues a pong reply automatically.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":66412,"byte_end":66501,"line_start":172,"line_end":172,"column_start":5,"column_end":94}},{"value":"/ When you call either `read_message`, `write_message` or `write_pending` next it will try to send","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":66506,"byte_end":66606,"line_start":173,"line_end":173,"column_start":5,"column_end":105}},{"value":"/ that pong out if the underlying connection can take more data. This means you should not","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":66611,"byte_end":66703,"line_start":174,"line_end":174,"column_start":5,"column_end":97}},{"value":"/ respond to ping frames manually.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":66708,"byte_end":66744,"line_start":175,"line_end":175,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":66749,"byte_end":66752,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ You can however send pong frames manually in order to indicate a unidirectional heartbeat","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":66757,"byte_end":66850,"line_start":177,"line_end":177,"column_start":5,"column_end":98}},{"value":"/ as described in [RFC 6455](https://tools.ietf.org/html/rfc6455#section-5.5.3). Note that","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":66855,"byte_end":66947,"line_start":178,"line_end":178,"column_start":5,"column_end":97}},{"value":"/ if `read_message` returns a ping, you should call `write_pending` until it doesn't return","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":66952,"byte_end":67045,"line_start":179,"line_end":179,"column_start":5,"column_end":98}},{"value":"/ WouldBlock before passing a pong to `write_message`, otherwise the response to the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":67050,"byte_end":67136,"line_start":180,"line_end":180,"column_start":5,"column_end":91}},{"value":"/ ping will not be sent, but rather replaced by your custom pong message.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":67141,"byte_end":67216,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":67221,"byte_end":67224,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ ## Errors","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":67229,"byte_end":67242,"line_start":183,"line_end":183,"column_start":5,"column_end":18}},{"value":"/ - If the WebSocket's send queue is full, `SendQueueFull` will be returned","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":67247,"byte_end":67324,"line_start":184,"line_end":184,"column_start":5,"column_end":82}},{"value":"/ along with the passed message. Otherwise, the message is queued and Ok(()) is returned.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":67329,"byte_end":67420,"line_start":185,"line_end":185,"column_start":5,"column_end":96}},{"value":"/ - If the connection is closed and should be dropped, this will return [Error::ConnectionClosed].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":67425,"byte_end":67525,"line_start":186,"line_end":186,"column_start":5,"column_end":105}},{"value":"/ - If you try again after [Error::ConnectionClosed] was returned either from here or from `read_message`,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":67530,"byte_end":67638,"line_start":187,"line_end":187,"column_start":5,"column_end":113}},{"value":"/   [Error::AlreadyClosed] will be returned. This indicates a program error on your part.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":67643,"byte_end":67734,"line_start":188,"line_end":188,"column_start":5,"column_end":96}},{"value":"/ - [Error::Io] is returned if the underlying connection returns an error","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":67739,"byte_end":67814,"line_start":189,"line_end":189,"column_start":5,"column_end":80}},{"value":"/   (consider these fatal except for WouldBlock).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":67819,"byte_end":67870,"line_start":190,"line_end":190,"column_start":5,"column_end":56}},{"value":"/ - [Error::Capacity] if your message size is bigger than the configured max message size.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":67875,"byte_end":67967,"line_start":191,"line_end":191,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":1092},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":68156,"byte_end":68169,"line_start":197,"line_end":197,"column_start":12,"column_end":25},"name":"write_pending","qualname":"<WebSocket<Stream>>::write_pending","value":"fn write_pending(&mut Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Flush the pending send queue.\n","sig":null,"attributes":[{"value":"/ Flush the pending send queue.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":68111,"byte_end":68144,"line_start":196,"line_end":196,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1093},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":69374,"byte_end":69379,"line_start":222,"line_end":222,"column_start":12,"column_end":17},"name":"close","qualname":"<WebSocket<Stream>>::close","value":"fn close(&mut Self, Option<CloseFrame>) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Close the connection.","sig":null,"attributes":[{"value":"/ Close the connection.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":68261,"byte_end":68286,"line_start":201,"line_end":201,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":68291,"byte_end":68294,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ This function guarantees that the close frame will be queued.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":68299,"byte_end":68364,"line_start":203,"line_end":203,"column_start":5,"column_end":70}},{"value":"/ There is no need to call it again. Calling this function is","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":68369,"byte_end":68432,"line_start":204,"line_end":204,"column_start":5,"column_end":68}},{"value":"/ the same as calling `write_message(Message::Close(..))`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":68437,"byte_end":68497,"line_start":205,"line_end":205,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":68502,"byte_end":68505,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ After queing the close frame you should continue calling `read_message` or","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":68510,"byte_end":68588,"line_start":207,"line_end":207,"column_start":5,"column_end":83}},{"value":"/ `write_pending` to drive the close handshake to completion.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":68593,"byte_end":68656,"line_start":208,"line_end":208,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":68661,"byte_end":68664,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ The websocket RFC defines that the underlying connection should be closed","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":68669,"byte_end":68746,"line_start":210,"line_end":210,"column_start":5,"column_end":82}},{"value":"/ by the server. Tungstenite takes care of this asymmetry for you.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":68751,"byte_end":68819,"line_start":211,"line_end":211,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":68824,"byte_end":68827,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ When the close handshake is finished (we have both sent and received","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":68832,"byte_end":68904,"line_start":213,"line_end":213,"column_start":5,"column_end":77}},{"value":"/ a close message), `read_message` or `write_pending` will return","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":68909,"byte_end":68976,"line_start":214,"line_end":214,"column_start":5,"column_end":72}},{"value":"/ [Error::ConnectionClosed] if this endpoint is the server.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":68981,"byte_end":69042,"line_start":215,"line_end":215,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":69047,"byte_end":69050,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ If this endpoint is a client, [Error::ConnectionClosed] will only be","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":69055,"byte_end":69127,"line_start":217,"line_end":217,"column_start":5,"column_end":77}},{"value":"/ returned after the server has closed the underlying connection.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":69132,"byte_end":69199,"line_start":218,"line_end":218,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":69204,"byte_end":69207,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ It is thus safe to drop the underlying connection as soon as [Error::ConnectionClosed]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":69212,"byte_end":69302,"line_start":220,"line_end":220,"column_start":5,"column_end":95}},{"value":"/ is returned from `read_message` or `write_pending`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":69307,"byte_end":69362,"line_start":221,"line_end":221,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":2062},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":69566,"byte_end":69582,"line_start":229,"line_end":229,"column_start":12,"column_end":28},"name":"WebSocketContext","qualname":"::protocol::WebSocketContext","value":"WebSocketContext {  }","parent":null,"children":[{"krate":0,"index":2063},{"krate":0,"index":2064},{"krate":0,"index":2065},{"krate":0,"index":2066},{"krate":0,"index":2067},{"krate":0,"index":2068},{"krate":0,"index":2069}],"decl_id":null,"docs":" A context for managing WebSocket stream.\n","sig":null,"attributes":[{"value":"/ A context for managing WebSocket stream.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":69493,"byte_end":69537,"line_start":227,"line_end":227,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1095},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":70192,"byte_end":70195,"line_start":248,"line_end":248,"column_start":12,"column_end":15},"name":"new","qualname":"<WebSocketContext>::new","value":"fn new(Role, Option<WebSocketConfig>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a WebSocket context that manages a post-handshake stream.\n","sig":null,"attributes":[{"value":"/ Create a WebSocket context that manages a post-handshake stream.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":70112,"byte_end":70180,"line_start":247,"line_end":247,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1096},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":70622,"byte_end":70641,"line_start":261,"line_end":261,"column_start":12,"column_end":31},"name":"from_partially_read","qualname":"<WebSocketContext>::from_partially_read","value":"fn from_partially_read(Vec<u8>, Role, Option<WebSocketConfig>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a WebSocket context that manages an post-handshake stream.\n","sig":null,"attributes":[{"value":"/ Create a WebSocket context that manages an post-handshake stream.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":70541,"byte_end":70610,"line_start":260,"line_end":260,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1097},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":70909,"byte_end":70919,"line_start":269,"line_end":269,"column_start":12,"column_end":22},"name":"set_config","qualname":"<WebSocketContext>::set_config","value":"fn set_config<impl FnOnce(&mut WebSocketConfig)>(&mut Self,\nimpl FnOnce(&mut WebSocketConfig)) where\nimpl FnOnce(&mut WebSocketConfig): for<'_> FnOnce(&'_ mut WebSocketConfig) ->\n()","parent":null,"children":[],"decl_id":null,"docs":" Change the configuration.\n","sig":null,"attributes":[{"value":"/ Change the configuration.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":70868,"byte_end":70897,"line_start":268,"line_end":268,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1099},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":71063,"byte_end":71073,"line_start":274,"line_end":274,"column_start":12,"column_end":22},"name":"get_config","qualname":"<WebSocketContext>::get_config","value":"fn get_config(&Self) -> &WebSocketConfig","parent":null,"children":[],"decl_id":null,"docs":" Read the configuration.\n","sig":null,"attributes":[{"value":"/ Read the configuration.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":71024,"byte_end":71051,"line_start":273,"line_end":273,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1100},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":71384,"byte_end":71392,"line_start":282,"line_end":282,"column_start":12,"column_end":20},"name":"can_read","qualname":"<WebSocketContext>::can_read","value":"fn can_read(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if it is possible to read messages.","sig":null,"attributes":[{"value":"/ Check if it is possible to read messages.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":71135,"byte_end":71180,"line_start":278,"line_end":278,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":71185,"byte_end":71188,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ Reading is impossible after receiving `Message::Close`. It is still possible after","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":71193,"byte_end":71279,"line_start":280,"line_end":280,"column_start":5,"column_end":91}},{"value":"/ sending close frame since the peer still may send some data before confirming close.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":71284,"byte_end":71372,"line_start":281,"line_end":281,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":1101},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":71606,"byte_end":71615,"line_start":289,"line_end":289,"column_start":12,"column_end":21},"name":"can_write","qualname":"<WebSocketContext>::can_write","value":"fn can_write(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if it is possible to write messages.","sig":null,"attributes":[{"value":"/ Check if it is possible to write messages.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":71451,"byte_end":71497,"line_start":286,"line_end":286,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":71502,"byte_end":71505,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ Writing gets impossible immediately after sending or receiving `Message::Close`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":71510,"byte_end":71594,"line_start":288,"line_end":288,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":1102},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":71863,"byte_end":71875,"line_start":297,"line_end":297,"column_start":12,"column_end":24},"name":"read_message","qualname":"<WebSocketContext>::read_message","value":"fn read_message<Stream>(&mut Self, &mut Stream) -> Result<Message> where\nStream: Read + Write","parent":null,"children":[],"decl_id":null,"docs":" Read a message from the provided stream, if possible.","sig":null,"attributes":[{"value":"/ Read a message from the provided stream, if possible.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":71675,"byte_end":71732,"line_start":293,"line_end":293,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":71737,"byte_end":71740,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ This function sends pong and close responses automatically.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":71745,"byte_end":71808,"line_start":295,"line_end":295,"column_start":5,"column_end":68}},{"value":"/ However, it never blocks on write.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":71813,"byte_end":71851,"line_start":296,"line_end":296,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1104},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":73183,"byte_end":73196,"line_start":325,"line_end":325,"column_start":12,"column_end":25},"name":"write_message","qualname":"<WebSocketContext>::write_message","value":"fn write_message<Stream>(&mut Self, &mut Stream, Message) -> Result<()> where\nStream: Read + Write","parent":null,"children":[],"decl_id":null,"docs":" Send a message to the provided stream, if possible.","sig":null,"attributes":[{"value":"/ Send a message to the provided stream, if possible.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":72652,"byte_end":72707,"line_start":317,"line_end":317,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":72712,"byte_end":72715,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ WebSocket will buffer a configurable number of messages at a time, except to reply to Ping","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":72720,"byte_end":72814,"line_start":319,"line_end":319,"column_start":5,"column_end":99}},{"value":"/ and Close requests. If the WebSocket's send queue is full, `SendQueueFull` will be returned","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":72819,"byte_end":72914,"line_start":320,"line_end":320,"column_start":5,"column_end":100}},{"value":"/ along with the passed message. Otherwise, the message is queued and Ok(()) is returned.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":72919,"byte_end":73010,"line_start":321,"line_end":321,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":73015,"byte_end":73018,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ Note that only the last pong frame is stored to be sent, and only the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":73023,"byte_end":73096,"line_start":323,"line_end":323,"column_start":5,"column_end":78}},{"value":"/ most recent pong frame is sent if multiple pong frames are queued.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":73101,"byte_end":73171,"line_start":324,"line_end":324,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1106},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":74809,"byte_end":74822,"line_start":367,"line_end":367,"column_start":12,"column_end":25},"name":"write_pending","qualname":"<WebSocketContext>::write_pending","value":"fn write_pending<Stream>(&mut Self, &mut Stream) -> Result<()> where\nStream: Read + Write","parent":null,"children":[],"decl_id":null,"docs":" Flush the pending send queue.\n","sig":null,"attributes":[{"value":"/ Flush the pending send queue.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":74764,"byte_end":74797,"line_start":366,"line_end":366,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1108},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":76810,"byte_end":76815,"line_start":410,"line_end":410,"column_start":12,"column_end":17},"name":"close","qualname":"<WebSocketContext>::close","value":"fn close<Stream>(&mut Self, &mut Stream, Option<CloseFrame>) -> Result<()>\nwhere Stream: Read + Write","parent":null,"children":[],"decl_id":null,"docs":" Close the connection.","sig":null,"attributes":[{"value":"/ Close the connection.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":76570,"byte_end":76595,"line_start":405,"line_end":405,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":76600,"byte_end":76603,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ This function guarantees that the close frame will be queued.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":76608,"byte_end":76673,"line_start":407,"line_end":407,"column_start":5,"column_end":70}},{"value":"/ There is no need to call it again. Calling this function is","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":76678,"byte_end":76741,"line_start":408,"line_end":408,"column_start":5,"column_end":68}},{"value":"/ the same as calling `write(Message::Close(..))`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":76746,"byte_end":76798,"line_start":409,"line_end":409,"column_start":5,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":1155},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/server.rs","byte_start":134766,"byte_end":134784,"line_start":23,"line_end":23,"column_start":8,"column_end":26},"name":"accept_with_config","qualname":"::server::accept_with_config","value":"fn accept_with_config<S>(S, Option<WebSocketConfig>)\n-> Result<WebSocket<S>, HandshakeError<ServerHandshake<S, NoCallback>>> where\nS: Read + Write","parent":null,"children":[],"decl_id":null,"docs":" Accept the given Stream as a WebSocket.","sig":null,"attributes":[{"value":"/ Accept the given Stream as a WebSocket.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/server.rs","byte_start":134294,"byte_end":134337,"line_start":14,"line_end":14,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/server.rs","byte_start":134338,"byte_end":134341,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Uses a configuration provided as an argument. Calling it with `None` will use the default one","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/server.rs","byte_start":134342,"byte_end":134439,"line_start":16,"line_end":16,"column_start":1,"column_end":98}},{"value":"/ used by `accept()`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/server.rs","byte_start":134440,"byte_end":134463,"line_start":17,"line_end":17,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/server.rs","byte_start":134464,"byte_end":134467,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This function starts a server WebSocket handshake over the given stream.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/server.rs","byte_start":134468,"byte_end":134544,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ If you want TLS support, use `native_tls::TlsStream`, `rustls::Stream` or","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/server.rs","byte_start":134545,"byte_end":134622,"line_start":20,"line_end":20,"column_start":1,"column_end":78}},{"value":"/ `openssl::ssl::SslStream` for the stream here. Any `Read + Write` streams are supported,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/server.rs","byte_start":134623,"byte_end":134715,"line_start":21,"line_end":21,"column_start":1,"column_end":93}},{"value":"/ including those from `Mio` and others.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/server.rs","byte_start":134716,"byte_end":134758,"line_start":22,"line_end":22,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":1157},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/server.rs","byte_start":135335,"byte_end":135341,"line_start":36,"line_end":36,"column_start":8,"column_end":14},"name":"accept","qualname":"::server::accept","value":"fn accept<S>(S)\n-> Result<WebSocket<S>, HandshakeError<ServerHandshake<S, NoCallback>>> where\nS: Read + Write","parent":null,"children":[],"decl_id":null,"docs":" Accept the given Stream as a WebSocket.","sig":null,"attributes":[{"value":"/ Accept the given Stream as a WebSocket.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/server.rs","byte_start":134989,"byte_end":135032,"line_start":30,"line_end":30,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/server.rs","byte_start":135033,"byte_end":135036,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This function starts a server WebSocket handshake over the given stream.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/server.rs","byte_start":135037,"byte_end":135113,"line_start":32,"line_end":32,"column_start":1,"column_end":77}},{"value":"/ If you want TLS support, use `native_tls::TlsStream`, `rustls::Stream` or","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/server.rs","byte_start":135114,"byte_end":135191,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"/ `openssl::ssl::SslStream` for the stream here. Any `Read + Write` streams are supported,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/server.rs","byte_start":135192,"byte_end":135284,"line_start":34,"line_end":34,"column_start":1,"column_end":93}},{"value":"/ including those from `Mio` and others.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/server.rs","byte_start":135285,"byte_end":135327,"line_start":35,"line_end":35,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":1159},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/server.rs","byte_start":135885,"byte_end":135907,"line_start":50,"line_end":50,"column_start":8,"column_end":30},"name":"accept_hdr_with_config","qualname":"::server::accept_hdr_with_config","value":"fn accept_hdr_with_config<S, C>(S, C, Option<WebSocketConfig>)\n-> Result<WebSocket<S>, HandshakeError<ServerHandshake<S, C>>> where S: Read +\nWrite, C: Callback","parent":null,"children":[],"decl_id":null,"docs":" Accept the given Stream as a WebSocket.","sig":null,"attributes":[{"value":"/ Accept the given Stream as a WebSocket.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/server.rs","byte_start":135491,"byte_end":135534,"line_start":42,"line_end":42,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/server.rs","byte_start":135535,"byte_end":135538,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Uses a configuration provided as an argument. Calling it with `None` will use the default one","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/server.rs","byte_start":135539,"byte_end":135636,"line_start":44,"line_end":44,"column_start":1,"column_end":98}},{"value":"/ used by `accept_hdr()`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/server.rs","byte_start":135637,"byte_end":135664,"line_start":45,"line_end":45,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/server.rs","byte_start":135665,"byte_end":135668,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ This function does the same as `accept()` but accepts an extra callback","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/server.rs","byte_start":135669,"byte_end":135744,"line_start":47,"line_end":47,"column_start":1,"column_end":76}},{"value":"/ for header processing. The callback receives headers of the incoming","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/server.rs","byte_start":135745,"byte_end":135817,"line_start":48,"line_end":48,"column_start":1,"column_end":73}},{"value":"/ requests and is able to add extra headers to the reply.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/server.rs","byte_start":135818,"byte_end":135877,"line_start":49,"line_end":49,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1162},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/server.rs","byte_start":136407,"byte_end":136417,"line_start":63,"line_end":63,"column_start":8,"column_end":18},"name":"accept_hdr","qualname":"::server::accept_hdr","value":"fn accept_hdr<S, C>(S, C)\n-> Result<WebSocket<S>, HandshakeError<ServerHandshake<S, C>>> where S: Read +\nWrite, C: Callback","parent":null,"children":[],"decl_id":null,"docs":" Accept the given Stream as a WebSocket.","sig":null,"attributes":[{"value":"/ Accept the given Stream as a WebSocket.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/server.rs","byte_start":136143,"byte_end":136186,"line_start":58,"line_end":58,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/server.rs","byte_start":136187,"byte_end":136190,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ This function does the same as `accept()` but accepts an extra callback","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/server.rs","byte_start":136191,"byte_end":136266,"line_start":60,"line_end":60,"column_start":1,"column_end":76}},{"value":"/ for header processing. The callback receives headers of the incoming","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/server.rs","byte_start":136267,"byte_end":136339,"line_start":61,"line_end":61,"column_start":1,"column_end":73}},{"value":"/ requests and is able to add extra headers to the reply.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/server.rs","byte_start":136340,"byte_end":136399,"line_start":62,"line_end":62,"column_start":1,"column_end":60}}]},{"kind":"Mod","id":{"krate":0,"index":1165},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/stream.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/stream.rs","parent":null,"children":[{"krate":0,"index":1166},{"krate":0,"index":1169},{"krate":0,"index":1170},{"krate":0,"index":1171},{"krate":0,"index":1174},{"krate":0,"index":1175},{"krate":0,"index":1177},{"krate":0,"index":1178},{"krate":0,"index":1181},{"krate":0,"index":1184},{"krate":0,"index":1187},{"krate":0,"index":1190},{"krate":0,"index":2094},{"krate":0,"index":2099},{"krate":0,"index":2101},{"krate":0,"index":2102},{"krate":0,"index":1193},{"krate":0,"index":1195},{"krate":0,"index":1197},{"krate":0,"index":1202},{"krate":0,"index":1210},{"krate":0,"index":1222},{"krate":0,"index":1225},{"krate":0,"index":1229}],"decl_id":null,"docs":" Convenience wrapper for streams to switch between plain TCP and TLS at runtime.","sig":null,"attributes":[{"value":"/ Convenience wrapper for streams to switch between plain TCP and TLS at runtime.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/stream.rs","byte_start":136602,"byte_end":136685,"line_start":1,"line_end":1,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/stream.rs","byte_start":136686,"byte_end":136689,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/  There is no dependency on actual TLS implementations. Everything like","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/stream.rs","byte_start":136690,"byte_end":136764,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"/ `native_tls` or `openssl` will work as long as there is a TLS stream supporting standard","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/stream.rs","byte_start":136765,"byte_end":136857,"line_start":4,"line_end":4,"column_start":1,"column_end":93}},{"value":"/ `Read + Write` traits.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/stream.rs","byte_start":136858,"byte_end":136884,"line_start":5,"line_end":5,"column_start":1,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2095},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/stream.rs","byte_start":137297,"byte_end":137302,"line_start":25,"line_end":25,"column_start":5,"column_end":10},"name":"Plain","qualname":"::stream::Mode::Plain","value":"Mode::Plain","parent":{"krate":0,"index":2094},"children":[],"decl_id":null,"docs":" Plain mode (`ws://` URL).\n","sig":null,"attributes":[{"value":"/ Plain mode (`ws://` URL).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/stream.rs","byte_start":137263,"byte_end":137292,"line_start":24,"line_end":24,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2097},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/stream.rs","byte_start":137341,"byte_end":137344,"line_start":27,"line_end":27,"column_start":5,"column_end":8},"name":"Tls","qualname":"::stream::Mode::Tls","value":"Mode::Tls","parent":{"krate":0,"index":2094},"children":[],"decl_id":null,"docs":" TLS mode (`wss://` URL).\n","sig":null,"attributes":[{"value":"/ TLS mode (`wss://` URL).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/stream.rs","byte_start":137308,"byte_end":137336,"line_start":26,"line_end":26,"column_start":5,"column_end":33}}]},{"kind":"Enum","id":{"krate":0,"index":2094},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/stream.rs","byte_start":137252,"byte_end":137256,"line_start":23,"line_end":23,"column_start":10,"column_end":14},"name":"Mode","qualname":"::stream::Mode","value":"enum Mode { Plain, Tls, }","parent":null,"children":[{"krate":0,"index":2095},{"krate":0,"index":2097}],"decl_id":null,"docs":" Stream mode, either plain TCP or TLS.\n","sig":null,"attributes":[{"value":"/ Stream mode, either plain TCP or TLS.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/stream.rs","byte_start":137171,"byte_end":137212,"line_start":21,"line_end":21,"column_start":1,"column_end":42}}]},{"kind":"Trait","id":{"krate":0,"index":1193},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/stream.rs","byte_start":137392,"byte_end":137399,"line_start":31,"line_end":31,"column_start":11,"column_end":18},"name":"NoDelay","qualname":"::stream::NoDelay","value":"NoDelay","parent":null,"children":[{"krate":0,"index":1194}],"decl_id":null,"docs":" Trait to switch TCP_NODELAY.\n","sig":null,"attributes":[{"value":"/ Trait to switch TCP_NODELAY.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/stream.rs","byte_start":137349,"byte_end":137381,"line_start":30,"line_end":30,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1194},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/stream.rs","byte_start":137464,"byte_end":137475,"line_start":33,"line_end":33,"column_start":8,"column_end":19},"name":"set_nodelay","qualname":"::stream::NoDelay::set_nodelay","value":"fn set_nodelay(&mut Self, bool) -> IoResult<()>","parent":{"krate":0,"index":1193},"children":[],"decl_id":null,"docs":" Set the TCP_NODELAY option to the given value.\n","sig":null,"attributes":[{"value":"/ Set the TCP_NODELAY option to the given value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/stream.rs","byte_start":137406,"byte_end":137456,"line_start":32,"line_end":32,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1196},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/stream.rs","byte_start":137558,"byte_end":137569,"line_start":37,"line_end":37,"column_start":8,"column_end":19},"name":"set_nodelay","qualname":"<TcpStream as stream::NoDelay>::set_nodelay","value":"fn set_nodelay(&mut Self, bool) -> IoResult<()>","parent":{"krate":0,"index":1193},"children":[],"decl_id":{"krate":0,"index":1194},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1201},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/stream.rs","byte_start":138078,"byte_end":138089,"line_start":56,"line_end":56,"column_start":8,"column_end":19},"name":"set_nodelay","qualname":"<StreamOwned<S, T> as stream::NoDelay>::set_nodelay","value":"fn set_nodelay(&mut Self, bool) -> IoResult<()>","parent":{"krate":0,"index":1193},"children":[],"decl_id":{"krate":0,"index":1194},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1204},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/stream.rs","byte_start":138329,"byte_end":138334,"line_start":65,"line_end":65,"column_start":5,"column_end":10},"name":"Plain","qualname":"::stream::MaybeTlsStream::Plain","value":"MaybeTlsStream::Plain(S)","parent":{"krate":0,"index":1202},"children":[],"decl_id":null,"docs":" Unencrypted socket stream.\n","sig":null,"attributes":[{"value":"/ Unencrypted socket stream.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/stream.rs","byte_start":138294,"byte_end":138324,"line_start":64,"line_end":64,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":1206},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/stream.rs","byte_start":138335,"byte_end":138336,"line_start":65,"line_end":65,"column_start":11,"column_end":12},"name":"0","qualname":"::stream::MaybeTlsStream::Plain::0","value":"S","parent":{"krate":0,"index":1204},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1207},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/stream.rs","byte_start":138562,"byte_end":138568,"line_start":71,"line_end":71,"column_start":5,"column_end":11},"name":"Rustls","qualname":"::stream::MaybeTlsStream::Rustls","value":"MaybeTlsStream::Rustls(rustls::StreamOwned<rustls::ClientConnection, S>)","parent":{"krate":0,"index":1202},"children":[],"decl_id":null,"docs":" Encrypted socket stream using `rustls`.\n","sig":null,"attributes":[{"value":"cfg(feature = \"__rustls-tls\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/stream.rs","byte_start":138477,"byte_end":138509,"line_start":69,"line_end":69,"column_start":5,"column_end":37}},{"value":"/ Encrypted socket stream using `rustls`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/stream.rs","byte_start":138514,"byte_end":138557,"line_start":70,"line_end":70,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":1209},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/stream.rs","byte_start":138569,"byte_end":138617,"line_start":71,"line_end":71,"column_start":12,"column_end":60},"name":"0","qualname":"::stream::MaybeTlsStream::Rustls::0","value":"rustls::StreamOwned<rustls::ClientConnection, S>","parent":{"krate":0,"index":1207},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1202},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/stream.rs","byte_start":138256,"byte_end":138270,"line_start":63,"line_end":63,"column_start":10,"column_end":24},"name":"MaybeTlsStream","qualname":"::stream::MaybeTlsStream","value":"enum MaybeTlsStream<S> where S: Read + Write {\n    Plain(S),\n    Rustls(rustls::StreamOwned<rustls::ClientConnection, S>),\n}","parent":null,"children":[{"krate":0,"index":1204},{"krate":0,"index":1207}],"decl_id":null,"docs":" A stream that might be protected with TLS.\n","sig":null,"attributes":[{"value":"/ A stream that might be protected with TLS.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/stream.rs","byte_start":138182,"byte_end":138228,"line_start":61,"line_end":61,"column_start":1,"column_end":47}},{"value":"non_exhaustive","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/stream.rs","byte_start":138229,"byte_end":138246,"line_start":62,"line_end":62,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1212},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/stream.rs","byte_start":138690,"byte_end":138693,"line_start":75,"line_end":75,"column_start":8,"column_end":11},"name":"fmt","qualname":"<MaybeTlsStream<S> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1224},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/stream.rs","byte_start":139827,"byte_end":139831,"line_start":102,"line_end":102,"column_start":8,"column_end":12},"name":"read","qualname":"<MaybeTlsStream<S> as std::io::Read>::read","value":"fn read(&mut Self, &mut [u8]) -> IoResult<usize>","parent":{"krate":1,"index":4540},"children":[],"decl_id":{"krate":1,"index":4541},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1227},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/stream.rs","byte_start":140256,"byte_end":140261,"line_start":114,"line_end":114,"column_start":8,"column_end":13},"name":"write","qualname":"<MaybeTlsStream<S> as std::io::Write>::write","value":"fn write(&mut Self, &[u8]) -> IoResult<usize>","parent":{"krate":1,"index":4597},"children":[],"decl_id":{"krate":1,"index":4598},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1228},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/stream.rs","byte_start":140631,"byte_end":140636,"line_start":124,"line_end":124,"column_start":8,"column_end":13},"name":"flush","qualname":"<MaybeTlsStream<S> as std::io::Write>::flush","value":"fn flush(&mut Self) -> IoResult<()>","parent":{"krate":1,"index":4597},"children":[],"decl_id":{"krate":1,"index":4602},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1231},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/stream.rs","byte_start":141048,"byte_end":141059,"line_start":136,"line_end":136,"column_start":8,"column_end":19},"name":"set_nodelay","qualname":"<MaybeTlsStream<S> as stream::NoDelay>::set_nodelay","value":"fn set_nodelay(&mut Self, bool) -> IoResult<()>","parent":{"krate":0,"index":1193},"children":[],"decl_id":{"krate":0,"index":1194},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1279},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/tls.rs","byte_start":142090,"byte_end":142095,"line_start":20,"line_end":20,"column_start":5,"column_end":10},"name":"Plain","qualname":"::tls::Connector::Plain","value":"Connector::Plain","parent":{"krate":0,"index":1278},"children":[],"decl_id":null,"docs":" Plain (non-TLS) connector.\n","sig":null,"attributes":[{"value":"/ Plain (non-TLS) connector.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/tls.rs","byte_start":142055,"byte_end":142085,"line_start":19,"line_end":19,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1281},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/tls.rs","byte_start":142288,"byte_end":142294,"line_start":26,"line_end":26,"column_start":5,"column_end":11},"name":"Rustls","qualname":"::tls::Connector::Rustls","value":"Connector::Rustls(std::sync::Arc<rustls::ClientConfig>)","parent":{"krate":0,"index":1278},"children":[],"decl_id":null,"docs":" `rustls` TLS connector.\n","sig":null,"attributes":[{"value":"/ `rustls` TLS connector.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/tls.rs","byte_start":142219,"byte_end":142246,"line_start":24,"line_end":24,"column_start":5,"column_end":32}},{"value":"cfg(feature = \"__rustls-tls\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/tls.rs","byte_start":142251,"byte_end":142283,"line_start":25,"line_end":25,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":1283},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/tls.rs","byte_start":142295,"byte_end":142331,"line_start":26,"line_end":26,"column_start":12,"column_end":48},"name":"0","qualname":"::tls::Connector::Rustls::0","value":"std::sync::Arc<rustls::ClientConfig>","parent":{"krate":0,"index":1281},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1278},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/tls.rs","byte_start":142039,"byte_end":142048,"line_start":18,"line_end":18,"column_start":10,"column_end":19},"name":"Connector","qualname":"::tls::Connector","value":"enum Connector { Plain, Rustls(std::sync::Arc<rustls::ClientConfig>), }","parent":null,"children":[{"krate":0,"index":1279},{"krate":0,"index":1281}],"decl_id":null,"docs":" A connector that can be used when establishing connections, allowing to control whether\n `native-tls` or `rustls` is used to create a TLS connection. Or TLS can be disabled with the\n `Plain` variant.\n","sig":null,"attributes":[{"value":"/ A connector that can be used when establishing connections, allowing to control whether","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/tls.rs","byte_start":141762,"byte_end":141853,"line_start":13,"line_end":13,"column_start":1,"column_end":92}},{"value":"/ `native-tls` or `rustls` is used to create a TLS connection. Or TLS can be disabled with the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/tls.rs","byte_start":141854,"byte_end":141950,"line_start":14,"line_end":14,"column_start":1,"column_end":97}},{"value":"/ `Plain` variant.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/tls.rs","byte_start":141951,"byte_end":141971,"line_start":15,"line_end":15,"column_start":1,"column_end":21}},{"value":"non_exhaustive","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/tls.rs","byte_start":141972,"byte_end":141989,"line_start":16,"line_end":16,"column_start":1,"column_end":18}},{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/tls.rs","byte_start":141990,"byte_end":142029,"line_start":17,"line_end":17,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1363},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/tls.rs","byte_start":147413,"byte_end":147423,"line_start":170,"line_end":170,"column_start":8,"column_end":18},"name":"client_tls","qualname":"::tls::client_tls","value":"fn client_tls<R, S>(R, S)\n-> Result<(WebSocket<MaybeTlsStream<S>>, Response), TlsHandshakeError<S>>\nwhere R: IntoClientRequest, S: Read + Write","parent":null,"children":[],"decl_id":null,"docs":" Creates a WebSocket handshake from a request and a stream,\n upgrading the stream to TLS if required.\n","sig":null,"attributes":[{"value":"/ Creates a WebSocket handshake from a request and a stream,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/tls.rs","byte_start":147298,"byte_end":147360,"line_start":168,"line_end":168,"column_start":1,"column_end":63}},{"value":"/ upgrading the stream to TLS if required.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/tls.rs","byte_start":147361,"byte_end":147405,"line_start":169,"line_end":169,"column_start":1,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":1366},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/tls.rs","byte_start":147894,"byte_end":147916,"line_start":186,"line_end":186,"column_start":8,"column_end":30},"name":"client_tls_with_config","qualname":"::tls::client_tls_with_config","value":"fn client_tls_with_config<R,\nS>(R, S, Option<WebSocketConfig>, Option<Connector>)\n-> Result<(WebSocket<MaybeTlsStream<S>>, Response), TlsHandshakeError<S>>\nwhere R: IntoClientRequest, S: Read + Write","parent":null,"children":[],"decl_id":null,"docs":" The same as [`client_tls()`] but one can specify a websocket configuration,\n and an optional connector. If no connector is specified, a default one will\n be created.","sig":null,"attributes":[{"value":"/ The same as [`client_tls()`] but one can specify a websocket configuration,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/tls.rs","byte_start":147652,"byte_end":147731,"line_start":181,"line_end":181,"column_start":1,"column_end":80}},{"value":"/ and an optional connector. If no connector is specified, a default one will","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/tls.rs","byte_start":147732,"byte_end":147811,"line_start":182,"line_end":182,"column_start":1,"column_end":80}},{"value":"/ be created.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/tls.rs","byte_start":147812,"byte_end":147827,"line_start":183,"line_end":183,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/tls.rs","byte_start":147828,"byte_end":147831,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ Please refer to [`client_tls()`] for more details.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/tls.rs","byte_start":147832,"byte_end":147886,"line_start":185,"line_end":185,"column_start":1,"column_end":55}}]},{"kind":"Mod","id":{"krate":0,"index":1369},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/util.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"util","qualname":"::util","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/util.rs","parent":null,"children":[{"krate":0,"index":1370},{"krate":0,"index":1371},{"krate":0,"index":1372},{"krate":0,"index":1375},{"krate":0,"index":1378},{"krate":0,"index":1381},{"krate":0,"index":1384},{"krate":0,"index":1386},{"krate":0,"index":1388},{"krate":0,"index":1391},{"krate":0,"index":1394}],"decl_id":null,"docs":" Helper traits to ease non-blocking handling.\n","sig":null,"attributes":[{"value":"/ Helper traits to ease non-blocking handling.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/util.rs","byte_start":149622,"byte_end":149670,"line_start":1,"line_end":1,"column_start":1,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":1384},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/util.rs","byte_start":149840,"byte_end":149856,"line_start":11,"line_end":11,"column_start":11,"column_end":27},"name":"NonBlockingError","qualname":"::util::NonBlockingError","value":"NonBlockingError: Sized","parent":null,"children":[{"krate":0,"index":1385}],"decl_id":null,"docs":" Non-blocking IO handling.\n","sig":null,"attributes":[{"value":"/ Non-blocking IO handling.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/util.rs","byte_start":149800,"byte_end":149829,"line_start":10,"line_end":10,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1385},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/util.rs","byte_start":149938,"byte_end":149955,"line_start":13,"line_end":13,"column_start":8,"column_end":25},"name":"into_non_blocking","qualname":"::util::NonBlockingError::into_non_blocking","value":"fn into_non_blocking(Self) -> Option<Self>","parent":{"krate":0,"index":1384},"children":[],"decl_id":null,"docs":" Convert WouldBlock to None and don't touch other errors.\n","sig":null,"attributes":[{"value":"/ Convert WouldBlock to None and don't touch other errors.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/util.rs","byte_start":149870,"byte_end":149930,"line_start":12,"line_end":12,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1387},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/util.rs","byte_start":150025,"byte_end":150042,"line_start":17,"line_end":17,"column_start":8,"column_end":25},"name":"into_non_blocking","qualname":"<IoError as util::NonBlockingError>::into_non_blocking","value":"fn into_non_blocking(Self) -> Option<Self>","parent":{"krate":0,"index":1384},"children":[],"decl_id":{"krate":0,"index":1385},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1389},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/util.rs","byte_start":150229,"byte_end":150246,"line_start":26,"line_end":26,"column_start":8,"column_end":25},"name":"into_non_blocking","qualname":"<Error as util::NonBlockingError>::into_non_blocking","value":"fn into_non_blocking(Self) -> Option<Self>","parent":{"krate":0,"index":1384},"children":[],"decl_id":{"krate":0,"index":1385},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1391},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/util.rs","byte_start":150517,"byte_end":150534,"line_start":37,"line_end":37,"column_start":11,"column_end":28},"name":"NonBlockingResult","qualname":"::util::NonBlockingResult","value":"NonBlockingResult","parent":null,"children":[{"krate":0,"index":1392},{"krate":0,"index":1393}],"decl_id":null,"docs":" Non-blocking IO wrapper.","sig":null,"attributes":[{"value":"/ Non-blocking IO wrapper.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/util.rs","byte_start":150406,"byte_end":150434,"line_start":34,"line_end":34,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/util.rs","byte_start":150435,"byte_end":150438,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ This trait is implemented for `Result<T, E: NonBlockingError>`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/util.rs","byte_start":150439,"byte_end":150506,"line_start":36,"line_end":36,"column_start":1,"column_end":68}}]},{"kind":"Type","id":{"krate":0,"index":1392},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/util.rs","byte_start":150607,"byte_end":150613,"line_start":39,"line_end":39,"column_start":10,"column_end":16},"name":"Result","qualname":"::util::NonBlockingResult::Result","value":"type Result;","parent":{"krate":0,"index":1391},"children":[],"decl_id":null,"docs":" Type of the converted result: `Result<Option<T>, E>`\n","sig":null,"attributes":[{"value":"/ Type of the converted result: `Result<Option<T>, E>`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/util.rs","byte_start":150541,"byte_end":150597,"line_start":38,"line_end":38,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1393},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/util.rs","byte_start":150664,"byte_end":150672,"line_start":41,"line_end":41,"column_start":8,"column_end":16},"name":"no_block","qualname":"::util::NonBlockingResult::no_block","value":"fn no_block(Self) -> Self::Result","parent":{"krate":0,"index":1391},"children":[],"decl_id":null,"docs":" Perform the non-block conversion.\n","sig":null,"attributes":[{"value":"/ Perform the non-block conversion.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/util.rs","byte_start":150619,"byte_end":150656,"line_start":40,"line_end":40,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1398},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/util.rs","byte_start":150831,"byte_end":150839,"line_start":49,"line_end":49,"column_start":8,"column_end":16},"name":"no_block","qualname":"<StdResult<T, E> as util::NonBlockingResult>::no_block","value":"fn no_block(Self) -> Self::Result","parent":{"krate":0,"index":1391},"children":[],"decl_id":{"krate":0,"index":1393},"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/buffer.rs","byte_start":1559,"byte_end":1569,"line_start":18,"line_end":18,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":31}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/buffer.rs","byte_start":3379,"byte_end":3389,"line_start":70,"line_end":70,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/buffer.rs","byte_start":3701,"byte_end":3711,"line_start":84,"line_end":84,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":12917,"byte_end":12923,"line_start":206,"line_end":206,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":13227,"byte_end":13230,"line_start":218,"line_end":218,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":14172,"byte_end":14175,"line_start":249,"line_end":249,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":14312,"byte_end":14319,"line_start":255,"line_end":255,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":14447,"byte_end":14454,"line_start":261,"line_end":261,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":17395,"byte_end":17400,"line_start":72,"line_end":72,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":17510,"byte_end":17515,"line_start":78,"line_end":78,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":17643,"byte_end":17648,"line_start":84,"line_end":84,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":17806,"byte_end":17811,"line_start":90,"line_end":90,"column_start":48,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":205}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":17961,"byte_end":17966,"line_start":96,"line_end":96,"column_start":41,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":18086,"byte_end":18091,"line_start":102,"line_end":102,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":18238,"byte_end":18243,"line_start":108,"line_end":108,"column_start":48,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":18384,"byte_end":18389,"line_start":114,"line_end":114,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/client.rs","byte_start":29735,"byte_end":29750,"line_start":39,"line_end":39,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/client.rs","byte_start":30979,"byte_end":30994,"line_start":73,"line_end":73,"column_start":41,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/client.rs","byte_start":35442,"byte_end":35452,"line_start":180,"line_end":180,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":321}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/client.rs","byte_start":38246,"byte_end":38254,"line_start":239,"line_end":239,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":329}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/client.rs","byte_start":38684,"byte_end":38692,"line_start":250,"line_end":250,"column_start":63,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":334}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/headers.rs","byte_start":42814,"byte_end":42823,"line_start":18,"line_end":18,"column_start":63,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/headers.rs","byte_start":43176,"byte_end":43185,"line_start":31,"line_end":31,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":366}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/server.rs","byte_start":48122,"byte_end":48129,"line_start":114,"line_end":114,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":477}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/server.rs","byte_start":48556,"byte_end":48563,"line_start":125,"line_end":125,"column_start":62,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":482}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/server.rs","byte_start":50207,"byte_end":50208,"line_start":166,"line_end":166,"column_start":22,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":487}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/server.rs","byte_start":50578,"byte_end":50588,"line_start":183,"line_end":183,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":489}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/server.rs","byte_start":51447,"byte_end":51462,"line_start":209,"line_end":209,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":493}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/server.rs","byte_start":52303,"byte_end":52318,"line_start":228,"line_end":228,"column_start":54,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/machine.rs","byte_start":56080,"byte_end":56096,"line_start":18,"line_end":18,"column_start":14,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":538},{"krate":0,"index":539}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/machine.rs","byte_start":56793,"byte_end":56809,"line_start":37,"line_end":37,"column_start":28,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":542}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/mod.rs","byte_start":25267,"byte_end":25279,"line_start":27,"line_end":27,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":587}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/mod.rs","byte_start":26522,"byte_end":26536,"line_start":64,"line_end":64,"column_start":42,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/mod.rs","byte_start":26874,"byte_end":26888,"line_start":73,"line_end":73,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":601}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/mod.rs","byte_start":27199,"byte_end":27213,"line_start":82,"line_end":82,"column_start":42,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/mod.rs","byte_start":27266,"byte_end":27280,"line_start":84,"line_end":84,"column_start":43,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":606}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":99137,"byte_end":99141,"line_start":43,"line_end":43,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":629}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":99480,"byte_end":99487,"line_start":54,"line_end":54,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":631}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":99831,"byte_end":99837,"line_start":65,"line_end":65,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":633}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":100580,"byte_end":100586,"line_start":95,"line_end":95,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":659}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":104617,"byte_end":104626,"line_start":190,"line_end":190,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":684}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":104814,"byte_end":104823,"line_start":197,"line_end":197,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":686}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":105733,"byte_end":105742,"line_start":235,"line_end":235,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":693}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":107765,"byte_end":107775,"line_start":28,"line_end":28,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":778}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":107987,"byte_end":107997,"line_start":35,"line_end":35,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":781}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":108713,"byte_end":108724,"line_start":59,"line_end":59,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":783}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":108980,"byte_end":108991,"line_start":72,"line_end":72,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":785},{"krate":0,"index":787},{"krate":0,"index":788},{"krate":0,"index":790}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":110984,"byte_end":110995,"line_start":130,"line_end":130,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":792}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":113346,"byte_end":113351,"line_start":209,"line_end":209,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":799},{"krate":0,"index":800},{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":808},{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":813},{"krate":0,"index":814},{"krate":0,"index":815}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":118082,"byte_end":118087,"line_start":367,"line_end":367,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":818}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":118796,"byte_end":118808,"line_start":400,"line_end":400,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":830},{"krate":0,"index":831}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/mod.rs","byte_start":90438,"byte_end":90449,"line_start":28,"line_end":28,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":881},{"krate":0,"index":882},{"krate":0,"index":883},{"krate":0,"index":884},{"krate":0,"index":885}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/mod.rs","byte_start":91245,"byte_end":91256,"line_start":55,"line_end":55,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":888}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/mod.rs","byte_start":91490,"byte_end":91501,"line_start":65,"line_end":65,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":891},{"krate":0,"index":892}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/mod.rs","byte_start":92421,"byte_end":92431,"line_start":95,"line_end":95,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":894},{"krate":0,"index":895},{"krate":0,"index":896},{"krate":0,"index":898},{"krate":0,"index":900}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":123346,"byte_end":123361,"line_start":22,"line_end":22,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":955},{"krate":0,"index":956},{"krate":0,"index":958},{"krate":0,"index":960}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":125583,"byte_end":125600,"line_start":95,"line_end":95,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":965},{"krate":0,"index":966},{"krate":0,"index":967},{"krate":0,"index":969}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":128502,"byte_end":128509,"line_start":179,"line_end":179,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":976},{"krate":0,"index":978},{"krate":0,"index":980},{"krate":0,"index":981},{"krate":0,"index":982},{"krate":0,"index":983},{"krate":0,"index":984},{"krate":0,"index":985},{"krate":0,"index":987},{"krate":0,"index":988},{"krate":0,"index":989},{"krate":0,"index":990}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":131885,"byte_end":131892,"line_start":278,"line_end":278,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":992}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":131999,"byte_end":132006,"line_start":284,"line_end":284,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":995}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":132115,"byte_end":132122,"line_start":290,"line_end":290,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":998}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":132225,"byte_end":132232,"line_start":296,"line_end":296,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1000}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":132334,"byte_end":132337,"line_start":302,"line_end":302,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1002}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":132447,"byte_end":132453,"line_start":308,"line_end":308,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1004},{"krate":0,"index":1005}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":132604,"byte_end":132611,"line_start":316,"line_end":316,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1007}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":62107,"byte_end":62122,"line_start":61,"line_end":61,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1076}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":62760,"byte_end":62769,"line_start":84,"line_end":84,"column_start":14,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1079},{"krate":0,"index":1080},{"krate":0,"index":1081},{"krate":0,"index":1082},{"krate":0,"index":1083},{"krate":0,"index":1085},{"krate":0,"index":1086},{"krate":0,"index":1087}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":65053,"byte_end":65062,"line_start":146,"line_end":146,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1090},{"krate":0,"index":1091},{"krate":0,"index":1092},{"krate":0,"index":1093}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":70089,"byte_end":70105,"line_start":246,"line_end":246,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1095},{"krate":0,"index":1096},{"krate":0,"index":1097},{"krate":0,"index":1099},{"krate":0,"index":1100},{"krate":0,"index":1101},{"krate":0,"index":1102},{"krate":0,"index":1104},{"krate":0,"index":1106},{"krate":0,"index":1108},{"krate":0,"index":1110},{"krate":0,"index":1112},{"krate":0,"index":1115}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":86011,"byte_end":86025,"line_start":625,"line_end":625,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1118},{"krate":0,"index":1119},{"krate":0,"index":1120}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":87006,"byte_end":87012,"line_start":652,"line_end":652,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1125}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/stream.rs","byte_start":137539,"byte_end":137548,"line_start":36,"line_end":36,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1196}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/stream.rs","byte_start":137935,"byte_end":137946,"line_start":50,"line_end":50,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1201}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/stream.rs","byte_start":138663,"byte_end":138677,"line_start":74,"line_end":74,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1212}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/stream.rs","byte_start":139289,"byte_end":139306,"line_start":86,"line_end":86,"column_start":61,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":1221}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/stream.rs","byte_start":139800,"byte_end":139814,"line_start":101,"line_end":101,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1224}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/stream.rs","byte_start":140229,"byte_end":140243,"line_start":113,"line_end":113,"column_start":33,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1227},{"krate":0,"index":1228}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/stream.rs","byte_start":141021,"byte_end":141035,"line_start":135,"line_end":135,"column_start":45,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1231}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/util.rs","byte_start":150008,"byte_end":150015,"line_start":16,"line_end":16,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1387}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/util.rs","byte_start":150214,"byte_end":150219,"line_start":25,"line_end":25,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1389}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/util.rs","byte_start":150732,"byte_end":150741,"line_start":44,"line_end":44,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1397},{"krate":0,"index":1398}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/lib.rs","byte_start":321,"byte_end":327,"line_start":17,"line_end":17,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":6}},{"kind":"Mod","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/lib.rs","byte_start":337,"byte_end":343,"line_start":18,"line_end":18,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":40}},{"kind":"Mod","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/lib.rs","byte_start":353,"byte_end":358,"line_start":19,"line_end":19,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":164}},{"kind":"Mod","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/lib.rs","byte_start":368,"byte_end":377,"line_start":20,"line_end":20,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":214}},{"kind":"Mod","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/mod.rs","byte_start":24815,"byte_end":24821,"line_start":3,"line_end":3,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":215}},{"kind":"Mod","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/mod.rs","byte_start":24831,"byte_end":24838,"line_start":4,"line_end":4,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":337}},{"kind":"Mod","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/mod.rs","byte_start":24848,"byte_end":24854,"line_start":5,"line_end":5,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":368}},{"kind":"Mod","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/lib.rs","byte_start":387,"byte_end":395,"line_start":21,"line_end":21,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":614}},{"kind":"Mod","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":59989,"byte_end":59994,"line_start":3,"line_end":3,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":615}},{"kind":"Mod","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/mod.rs","byte_start":89919,"byte_end":89925,"line_start":3,"line_end":3,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":616}},{"kind":"Mod","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/lib.rs","byte_start":417,"byte_end":423,"line_start":23,"line_end":23,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1165}},{"kind":"Mod","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/lib.rs","byte_start":504,"byte_end":508,"line_start":26,"line_end":26,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1369}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/buffer.rs","byte_start":1559,"byte_end":1569,"line_start":18,"line_end":18,"column_start":31,"column_end":41},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1456},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/buffer.rs","byte_start":3379,"byte_end":3389,"line_start":70,"line_end":70,"column_start":39,"column_end":49},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1456},"to":{"krate":22,"index":42}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/buffer.rs","byte_start":3701,"byte_end":3711,"line_start":84,"line_end":84,"column_start":43,"column_end":53},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1456},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":12917,"byte_end":12923,"line_start":206,"line_end":206,"column_start":28,"column_end":34},"kind":{"Impl":{"id":3}},"from":{"krate":5,"index":8341},"to":{"krate":0,"index":133}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":13227,"byte_end":13230,"line_start":218,"line_end":218,"column_start":28,"column_end":31},"kind":{"Impl":{"id":4}},"from":{"krate":20,"index":3227},"to":{"krate":0,"index":133}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":14172,"byte_end":14175,"line_start":249,"line_end":249,"column_start":28,"column_end":31},"kind":{"Impl":{"id":5}},"from":{"krate":26,"index":907},"to":{"krate":0,"index":133}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":14312,"byte_end":14319,"line_start":255,"line_end":255,"column_start":28,"column_end":35},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":301},"to":{"krate":0,"index":133}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/client.rs","byte_start":14447,"byte_end":14454,"line_start":261,"line_end":261,"column_start":46,"column_end":53},"kind":{"Impl":{"id":7}},"from":{"krate":36,"index":297},"to":{"krate":0,"index":133}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":17395,"byte_end":17400,"line_start":72,"line_end":72,"column_start":31,"column_end":36},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1465},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":17510,"byte_end":17515,"line_start":78,"line_end":78,"column_start":38,"column_end":43},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1465},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":17643,"byte_end":17648,"line_start":84,"line_end":84,"column_start":49,"column_end":54},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1465},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":17806,"byte_end":17811,"line_start":90,"line_end":90,"column_start":48,"column_end":53},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1465},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":17961,"byte_end":17966,"line_start":96,"line_end":96,"column_start":41,"column_end":46},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1465},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":18086,"byte_end":18091,"line_start":102,"line_end":102,"column_start":38,"column_end":43},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1465},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":18238,"byte_end":18243,"line_start":108,"line_end":108,"column_start":48,"column_end":53},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1465},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/error.rs","byte_start":18384,"byte_end":18389,"line_start":114,"line_end":114,"column_start":32,"column_end":37},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1465},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/client.rs","byte_start":29735,"byte_end":29750,"line_start":39,"line_end":39,"column_start":23,"column_end":38},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1700},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/client.rs","byte_start":30979,"byte_end":30994,"line_start":73,"line_end":73,"column_start":41,"column_end":56},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1700},"to":{"krate":0,"index":607}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/client.rs","byte_start":35442,"byte_end":35452,"line_start":180,"line_end":180,"column_start":6,"column_end":16},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1708},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/client.rs","byte_start":38246,"byte_end":38254,"line_start":239,"line_end":239,"column_start":19,"column_end":27},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":302},"to":{"krate":0,"index":544}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/client.rs","byte_start":38684,"byte_end":38692,"line_start":250,"line_end":250,"column_start":63,"column_end":71},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":302},"to":{"krate":0,"index":358}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/headers.rs","byte_start":42642,"byte_end":42647,"line_start":13,"line_end":13,"column_start":35,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":3184},"to":{"krate":0,"index":358}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/headers.rs","byte_start":42814,"byte_end":42823,"line_start":18,"line_end":18,"column_start":63,"column_end":72},"kind":{"Impl":{"id":40}},"from":{"krate":20,"index":2392},"to":{"krate":0,"index":358}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/headers.rs","byte_start":43176,"byte_end":43185,"line_start":31,"line_end":31,"column_start":19,"column_end":28},"kind":{"Impl":{"id":41}},"from":{"krate":20,"index":2392},"to":{"krate":0,"index":544}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/server.rs","byte_start":48122,"byte_end":48129,"line_start":114,"line_end":114,"column_start":19,"column_end":26},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":457},"to":{"krate":0,"index":544}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/server.rs","byte_start":48556,"byte_end":48563,"line_start":125,"line_end":125,"column_start":62,"column_end":69},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":457},"to":{"krate":0,"index":358}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/server.rs","byte_start":49825,"byte_end":49830,"line_start":155,"line_end":155,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":3184},"to":{"krate":0,"index":483}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/server.rs","byte_start":50207,"byte_end":50208,"line_start":166,"line_end":166,"column_start":22,"column_end":23},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":486},"to":{"krate":0,"index":483}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/server.rs","byte_start":50578,"byte_end":50588,"line_start":183,"line_end":183,"column_start":19,"column_end":29},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1712},"to":{"krate":0,"index":483}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/server.rs","byte_start":51447,"byte_end":51462,"line_start":209,"line_end":209,"column_start":36,"column_end":51},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1719},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/server.rs","byte_start":52303,"byte_end":52318,"line_start":228,"line_end":228,"column_start":54,"column_end":69},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1719},"to":{"krate":0,"index":607}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/machine.rs","byte_start":56080,"byte_end":56096,"line_start":18,"line_end":18,"column_start":14,"column_end":30},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1730},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/machine.rs","byte_start":56793,"byte_end":56809,"line_start":37,"line_end":37,"column_start":28,"column_end":44},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1730},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/machine.rs","byte_start":59615,"byte_end":59620,"line_start":110,"line_end":110,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":3184},"to":{"krate":0,"index":544}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/mod.rs","byte_start":25267,"byte_end":25279,"line_start":27,"line_end":27,"column_start":27,"column_end":39},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1776},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/mod.rs","byte_start":26522,"byte_end":26536,"line_start":64,"line_end":64,"column_start":42,"column_end":56},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":588},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/mod.rs","byte_start":26874,"byte_end":26888,"line_start":73,"line_end":73,"column_start":44,"column_end":58},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":588},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/mod.rs","byte_start":27199,"byte_end":27213,"line_start":82,"line_end":82,"column_start":42,"column_end":56},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":588},"to":{"krate":1,"index":2569}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/handshake/mod.rs","byte_start":27266,"byte_end":27280,"line_start":84,"line_end":84,"column_start":43,"column_end":57},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":588},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":99137,"byte_end":99141,"line_start":43,"line_end":43,"column_start":23,"column_end":27},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1815},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":99480,"byte_end":99487,"line_start":54,"line_end":54,"column_start":23,"column_end":30},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1837},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":99831,"byte_end":99837,"line_start":65,"line_end":65,"column_start":23,"column_end":29},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1796},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":100580,"byte_end":100586,"line_start":95,"line_end":95,"column_start":19,"column_end":25},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1796},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":104617,"byte_end":104626,"line_start":190,"line_end":190,"column_start":6,"column_end":15},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1859},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":104814,"byte_end":104823,"line_start":197,"line_end":197,"column_start":23,"column_end":32},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1859},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/coding.rs","byte_start":105733,"byte_end":105742,"line_start":235,"line_end":235,"column_start":20,"column_end":29},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1859},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":107765,"byte_end":107775,"line_start":28,"line_end":28,"column_start":10,"column_end":20},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1912},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":107987,"byte_end":107997,"line_start":35,"line_end":35,"column_start":27,"column_end":37},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1912},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":108713,"byte_end":108724,"line_start":59,"line_end":59,"column_start":18,"column_end":29},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1933},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":108980,"byte_end":108991,"line_start":72,"line_end":72,"column_start":6,"column_end":17},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1933},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":110984,"byte_end":110995,"line_start":130,"line_end":130,"column_start":6,"column_end":17},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1933},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":113346,"byte_end":113351,"line_start":209,"line_end":209,"column_start":6,"column_end":11},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1953},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":118082,"byte_end":118087,"line_start":367,"line_end":367,"column_start":23,"column_end":28},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1953},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/frame.rs","byte_start":118796,"byte_end":118808,"line_start":400,"line_end":400,"column_start":6,"column_end":18},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":819},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/mod.rs","byte_start":90438,"byte_end":90449,"line_start":28,"line_end":28,"column_start":14,"column_end":25},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1968},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/mod.rs","byte_start":91245,"byte_end":91256,"line_start":55,"line_end":55,"column_start":14,"column_end":25},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1968},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/mod.rs","byte_start":91490,"byte_end":91501,"line_start":65,"line_end":65,"column_start":14,"column_end":25},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1968},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/frame/mod.rs","byte_start":92421,"byte_end":92431,"line_start":95,"line_end":95,"column_start":6,"column_end":16},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1975},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":123346,"byte_end":123361,"line_start":22,"line_end":22,"column_start":10,"column_end":25},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1981},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":125583,"byte_end":125600,"line_start":95,"line_end":95,"column_start":6,"column_end":23},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1986},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":128502,"byte_end":128509,"line_start":179,"line_end":179,"column_start":6,"column_end":13},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1999},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":131885,"byte_end":131892,"line_start":278,"line_end":278,"column_start":23,"column_end":30},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1999},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":131999,"byte_end":132006,"line_start":284,"line_end":284,"column_start":28,"column_end":35},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1999},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":132115,"byte_end":132122,"line_start":290,"line_end":290,"column_start":29,"column_end":36},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1999},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":132225,"byte_end":132232,"line_start":296,"line_end":296,"column_start":24,"column_end":31},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1999},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":132334,"byte_end":132337,"line_start":302,"line_end":302,"column_start":24,"column_end":27},"kind":{"Impl":{"id":84}},"from":{"krate":5,"index":7753},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":132447,"byte_end":132453,"line_start":308,"line_end":308,"column_start":27,"column_end":33},"kind":{"Impl":{"id":85}},"from":{"krate":5,"index":8341},"to":{"krate":2,"index":3092}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/message.rs","byte_start":132604,"byte_end":132611,"line_start":316,"line_end":316,"column_start":23,"column_end":30},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1999},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":62107,"byte_end":62122,"line_start":61,"line_end":61,"column_start":18,"column_end":33},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":2045},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":62760,"byte_end":62769,"line_start":84,"line_end":84,"column_start":14,"column_end":23},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":2055},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":65053,"byte_end":65062,"line_start":146,"line_end":146,"column_start":28,"column_end":37},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":2055},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":70089,"byte_end":70105,"line_start":246,"line_end":246,"column_start":6,"column_end":22},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":2062},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":86011,"byte_end":86025,"line_start":625,"line_end":625,"column_start":6,"column_end":20},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":2072},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/protocol/mod.rs","byte_start":87006,"byte_end":87012,"line_start":652,"line_end":652,"column_start":34,"column_end":40},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":195},"to":{"krate":0,"index":1121}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/stream.rs","byte_start":137539,"byte_end":137548,"line_start":36,"line_end":36,"column_start":18,"column_end":27},"kind":{"Impl":{"id":93}},"from":{"krate":1,"index":5282},"to":{"krate":0,"index":1193}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/stream.rs","byte_start":137935,"byte_end":137946,"line_start":50,"line_end":50,"column_start":28,"column_end":39},"kind":{"Impl":{"id":94}},"from":{"krate":49,"index":8028},"to":{"krate":0,"index":1193}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/stream.rs","byte_start":138663,"byte_end":138677,"line_start":74,"line_end":74,"column_start":41,"column_end":55},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1202},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/stream.rs","byte_start":139289,"byte_end":139306,"line_start":86,"line_end":86,"column_start":61,"column_end":78},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1213},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/stream.rs","byte_start":139800,"byte_end":139814,"line_start":101,"line_end":101,"column_start":32,"column_end":46},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1202},"to":{"krate":1,"index":4540}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/stream.rs","byte_start":140229,"byte_end":140243,"line_start":113,"line_end":113,"column_start":33,"column_end":47},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1202},"to":{"krate":1,"index":4597}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/stream.rs","byte_start":141021,"byte_end":141035,"line_start":135,"line_end":135,"column_start":45,"column_end":59},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1202},"to":{"krate":0,"index":1193}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/util.rs","byte_start":149858,"byte_end":149863,"line_start":11,"line_end":11,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":3184},"to":{"krate":0,"index":1384}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/util.rs","byte_start":150008,"byte_end":150015,"line_start":16,"line_end":16,"column_start":27,"column_end":34},"kind":{"Impl":{"id":100}},"from":{"krate":1,"index":3959},"to":{"krate":0,"index":1384}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/util.rs","byte_start":150214,"byte_end":150219,"line_start":25,"line_end":25,"column_start":27,"column_end":32},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1465},"to":{"krate":0,"index":1384}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tungstenite-0.17.3/src/util.rs","byte_start":150732,"byte_end":150741,"line_start":44,"line_end":44,"column_start":34,"column_end":43},"kind":{"Impl":{"id":102}},"from":{"krate":2,"index":47310},"to":{"krate":0,"index":1391}}]}