{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2","program":"/Users/air/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","indicatif","--edition=2018","/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"default\"","-C","metadata=fb6a978119fb2ff9","-C","extra-filename=-fb6a978119fb2ff9","--out-dir","/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps","-L","dependency=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps","--extern","console=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libconsole-fcc2ef24c9c24822.rmeta","--extern","lazy_static=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/liblazy_static-807d58eac20269da.rmeta","--extern","number_prefix=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libnumber_prefix-7edf32fa631f1151.rmeta","--extern","regex=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libregex-edffe9a2390704a7.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/air/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libindicatif-fb6a978119fb2ff9.rmeta"},"prelude":{"crate_id":{"name":"indicatif","disambiguator":[549085339498040965,0]},"crate_root":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src","external_crates":[{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[4485569597606079733,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[9994580471200982198,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13944031075627487246,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5133993387825513881,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[14116380118705386640,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6269322086078963025,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16152481959168563413,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7897074911849024150,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[7299104579826168146,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2669544452907545777,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[14288251452253695433,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[13943810077905921301,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[2237926517141734526,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[5541021343498733002,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[7188895526679788668,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[15555671723428220450,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[13375000548276363576,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[8920282723255285566,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[2397004371161247654,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/format.rs","num":20,"id":{"name":"number_prefix","disambiguator":[5086834462724638187,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","num":21,"id":{"name":"console","disambiguator":[13826813513146775691,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","num":22,"id":{"name":"once_cell","disambiguator":[3525325367007617747,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","num":23,"id":{"name":"unicode_width","disambiguator":[10168584644303506075,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","num":24,"id":{"name":"libc","disambiguator":[2594694148884002105,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","num":25,"id":{"name":"terminal_size","disambiguator":[4227817462517674259,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/utils.rs","num":26,"id":{"name":"regex","disambiguator":[17933859316723200050,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/utils.rs","num":27,"id":{"name":"regex_syntax","disambiguator":[4443573814047378473,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/utils.rs","num":28,"id":{"name":"aho_corasick","disambiguator":[8565949239622212563,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/utils.rs","num":29,"id":{"name":"memchr","disambiguator":[14228028058314693917,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/utils.rs","num":30,"id":{"name":"lazy_static","disambiguator":[15480920620595466049,0]}}],"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":0,"byte_end":8592,"line_start":1,"line_end":223,"column_start":1,"column_end":48}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":609},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":8213,"byte_end":8224,"line_start":216,"line_end":216,"column_start":25,"column_end":36},"alias_span":null,"name":"BinaryBytes","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":610},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":8213,"byte_end":8224,"line_start":216,"line_end":216,"column_start":25,"column_end":36},"alias_span":null,"name":"BinaryBytes","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":604},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":8226,"byte_end":8238,"line_start":216,"line_end":216,"column_start":38,"column_end":50},"alias_span":null,"name":"DecimalBytes","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":605},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":8226,"byte_end":8238,"line_start":216,"line_end":216,"column_start":38,"column_end":50},"alias_span":null,"name":"DecimalBytes","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":589},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":8240,"byte_end":8257,"line_start":216,"line_end":216,"column_start":52,"column_end":69},"alias_span":null,"name":"FormattedDuration","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":590},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":8240,"byte_end":8257,"line_start":216,"line_end":216,"column_start":52,"column_end":69},"alias_span":null,"name":"FormattedDuration","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":599},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":8259,"byte_end":8269,"line_start":216,"line_end":216,"column_start":71,"column_end":81},"alias_span":null,"name":"HumanBytes","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":600},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":8259,"byte_end":8269,"line_start":216,"line_end":216,"column_start":71,"column_end":81},"alias_span":null,"name":"HumanBytes","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":594},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":8271,"byte_end":8284,"line_start":216,"line_end":216,"column_start":83,"column_end":96},"alias_span":null,"name":"HumanDuration","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":595},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":8271,"byte_end":8284,"line_start":216,"line_end":216,"column_start":83,"column_end":96},"alias_span":null,"name":"HumanDuration","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":614},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":8309,"byte_end":8324,"line_start":217,"line_end":217,"column_start":23,"column_end":38},"alias_span":null,"name":"ProgressBarIter","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":41},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":8326,"byte_end":8342,"line_start":217,"line_end":217,"column_start":40,"column_end":56},"alias_span":null,"name":"ProgressIterator","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":243},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":8375,"byte_end":8388,"line_start":218,"line_end":218,"column_start":31,"column_end":44},"alias_span":null,"name":"MultiProgress","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":621},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":8390,"byte_end":8401,"line_start":218,"line_end":218,"column_start":46,"column_end":57},"alias_span":null,"name":"ProgressBar","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":625},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":8403,"byte_end":8418,"line_start":218,"line_end":218,"column_start":59,"column_end":74},"alias_span":null,"name":"WeakProgressBar","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":390},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":8443,"byte_end":8461,"line_start":219,"line_end":219,"column_start":23,"column_end":41},"alias_span":null,"name":"ProgressDrawTarget","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":648},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":8486,"byte_end":8500,"line_start":220,"line_end":220,"column_start":24,"column_end":38},"alias_span":null,"name":"ProgressFinish","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":667},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":8502,"byte_end":8515,"line_start":220,"line_end":220,"column_start":40,"column_end":53},"alias_span":null,"name":"ProgressStyle","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":0,"byte_end":8592,"line_start":1,"line_end":223,"column_start":1,"column_end":48},"name":"","qualname":"::","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":24},{"krate":0,"index":87},{"krate":0,"index":269},{"krate":0,"index":423},{"krate":0,"index":488},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":559},{"krate":0,"index":560},{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":566},{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":573},{"krate":0,"index":576},{"krate":0,"index":579},{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":586}],"decl_id":null,"docs":" indicatif is a library for Rust that helps you build command line\n interfaces that report progress to users.  It comes with various\n tools and utilities for formatting anything that indicates progress.","sig":null,"attributes":[{"value":"/ indicatif is a library for Rust that helps you build command line","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":0,"byte_end":69,"line_start":1,"line_end":1,"column_start":1,"column_end":70}},{"value":"/ interfaces that report progress to users.  It comes with various","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":70,"byte_end":138,"line_start":2,"line_end":2,"column_start":1,"column_end":69}},{"value":"/ tools and utilities for formatting anything that indicates progress.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":139,"byte_end":211,"line_start":3,"line_end":3,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":212,"byte_end":215,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Platform support:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":216,"byte_end":237,"line_start":5,"line_end":5,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":238,"byte_end":241,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ * Linux","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":242,"byte_end":253,"line_start":7,"line_end":7,"column_start":1,"column_end":12}},{"value":"/ * OS X","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":254,"byte_end":264,"line_start":8,"line_end":8,"column_start":1,"column_end":11}},{"value":"/ * Windows (colors require Windows 10)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":265,"byte_end":306,"line_start":9,"line_end":9,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":307,"byte_end":310,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Best paired with other libraries in the family:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":311,"byte_end":362,"line_start":11,"line_end":11,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":363,"byte_end":366,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ * [console](https://docs.rs/console)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":367,"byte_end":407,"line_start":13,"line_end":13,"column_start":1,"column_end":41}},{"value":"/ * [dialoguer](https://docs.rs/dialoguer)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":408,"byte_end":452,"line_start":14,"line_end":14,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":453,"byte_end":456,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Crate Contents","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":457,"byte_end":477,"line_start":16,"line_end":16,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":478,"byte_end":481,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ * **Progress bars**","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":482,"byte_end":505,"line_start":18,"line_end":18,"column_start":1,"column_end":24}},{"value":"/   * [`ProgressBar`](struct.ProgressBar.html) for bars and spinners","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":506,"byte_end":576,"line_start":19,"line_end":19,"column_start":1,"column_end":71}},{"value":"/   * [`MultiProgress`](struct.MultiProgress.html) for multiple bars","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":577,"byte_end":647,"line_start":20,"line_end":20,"column_start":1,"column_end":71}},{"value":"/ * **Data Formatting**","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":648,"byte_end":673,"line_start":21,"line_end":21,"column_start":1,"column_end":26}},{"value":"/   * [`HumanBytes`](struct.HumanBytes.html) for formatting bytes","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":674,"byte_end":741,"line_start":22,"line_end":22,"column_start":1,"column_end":68}},{"value":"/   * [`DecimalBytes`](struct.DecimalBytes.html) for formatting bytes using SI prefixes","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":742,"byte_end":831,"line_start":23,"line_end":23,"column_start":1,"column_end":90}},{"value":"/   * [`BinaryBytes`](struct.BinaryBytes.html) for formatting bytes using ISO/IEC prefixes","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":832,"byte_end":924,"line_start":24,"line_end":24,"column_start":1,"column_end":93}},{"value":"/   * [`HumanDuration`](struct.HumanDuration.html) for formatting durations","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":925,"byte_end":1002,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":1003,"byte_end":1006,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Progress Bars and Spinners","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":1007,"byte_end":1039,"line_start":27,"line_end":27,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":1040,"byte_end":1043,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ indicatif comes with a `ProgressBar` type that supports both bounded","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":1044,"byte_end":1116,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ progress bar uses as well as unbounded \"spinner\" type progress reports.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":1117,"byte_end":1192,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ Progress bars are `Sync` and `Send` objects which means that they are","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":1193,"byte_end":1266,"line_start":31,"line_end":31,"column_start":1,"column_end":74}},{"value":"/ internally locked and can be passed from thread to thread.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":1267,"byte_end":1329,"line_start":32,"line_end":32,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":1330,"byte_end":1333,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Additionally a `MultiProgress` utility is provided that can manage","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":1334,"byte_end":1404,"line_start":34,"line_end":34,"column_start":1,"column_end":71}},{"value":"/ rendering multiple progress bars at once (eg: from multiple threads).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":1405,"byte_end":1478,"line_start":35,"line_end":35,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":1479,"byte_end":1482,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ To whet your appetite, this is what this can look like:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":1483,"byte_end":1542,"line_start":37,"line_end":37,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":1543,"byte_end":1546,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ <img src=\"https://github.com/mitsuhiko/indicatif/raw/main/screenshots/yarn.gif?raw=true\" width=\"60%\">","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":1547,"byte_end":1652,"line_start":39,"line_end":39,"column_start":1,"column_end":106}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":1653,"byte_end":1656,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Progress bars are manually advanced and by default draw to stderr.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":1657,"byte_end":1727,"line_start":41,"line_end":41,"column_start":1,"column_end":71}},{"value":"/ When you are done, the progress bar can be finished either visibly","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":1728,"byte_end":1798,"line_start":42,"line_end":42,"column_start":1,"column_end":71}},{"value":"/ (eg: the progress bar stays on the screen) or cleared (the progress","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":1799,"byte_end":1870,"line_start":43,"line_end":43,"column_start":1,"column_end":72}},{"value":"/ bar will be removed).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":1871,"byte_end":1896,"line_start":44,"line_end":44,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":1897,"byte_end":1900,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":1901,"byte_end":1912,"line_start":46,"line_end":46,"column_start":1,"column_end":12}},{"value":"/ use indicatif::ProgressBar;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":1913,"byte_end":1944,"line_start":47,"line_end":47,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":1945,"byte_end":1948,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ let bar = ProgressBar::new(1000);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":1949,"byte_end":1986,"line_start":49,"line_end":49,"column_start":1,"column_end":38}},{"value":"/ for _ in 0..1000 {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":1987,"byte_end":2009,"line_start":50,"line_end":50,"column_start":1,"column_end":23}},{"value":"/     bar.inc(1);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":2010,"byte_end":2029,"line_start":51,"line_end":51,"column_start":1,"column_end":20}},{"value":"/     // ...","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":2030,"byte_end":2044,"line_start":52,"line_end":52,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":2045,"byte_end":2050,"line_start":53,"line_end":53,"column_start":1,"column_end":6}},{"value":"/ bar.finish();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":2051,"byte_end":2068,"line_start":54,"line_end":54,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":2069,"byte_end":2076,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":2077,"byte_end":2080,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ General progress bar behaviors:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":2081,"byte_end":2116,"line_start":57,"line_end":57,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":2117,"byte_end":2120,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ * if a non terminal is detected the progress bar will be completely","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":2121,"byte_end":2192,"line_start":59,"line_end":59,"column_start":1,"column_end":72}},{"value":"/   hidden.  This makes piping programs to logfiles make sense out of","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":2193,"byte_end":2264,"line_start":60,"line_end":60,"column_start":1,"column_end":72}},{"value":"/   the box.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":2265,"byte_end":2279,"line_start":61,"line_end":61,"column_start":1,"column_end":15}},{"value":"/ * a progress bar only starts drawing when `set_message`, `inc`, `set_position`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":2280,"byte_end":2362,"line_start":62,"line_end":62,"column_start":1,"column_end":83}},{"value":"/   or `tick` are called.  In some situations you might have to call `tick`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":2363,"byte_end":2440,"line_start":63,"line_end":63,"column_start":1,"column_end":78}},{"value":"/   once to draw it.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":2441,"byte_end":2463,"line_start":64,"line_end":64,"column_start":1,"column_end":23}},{"value":"/ * progress bars should be explicitly finished to reset the rendering","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":2464,"byte_end":2536,"line_start":65,"line_end":65,"column_start":1,"column_end":73}},{"value":"/   for others.  Either by also clearing them or by replacing them with","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":2537,"byte_end":2610,"line_start":66,"line_end":66,"column_start":1,"column_end":74}},{"value":"/   a new message / retaining the current message.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":2611,"byte_end":2663,"line_start":67,"line_end":67,"column_start":1,"column_end":53}},{"value":"/ * the default template renders neither message nor prefix.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":2664,"byte_end":2726,"line_start":68,"line_end":68,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":2727,"byte_end":2730,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ # Iterators","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":2731,"byte_end":2746,"line_start":70,"line_end":70,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":2747,"byte_end":2750,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ Similar to [tqdm](https://github.com/tqdm/tqdm), progress bars can be","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":2751,"byte_end":2824,"line_start":72,"line_end":72,"column_start":1,"column_end":74}},{"value":"/ associated with an iterator. For example:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":2825,"byte_end":2870,"line_start":73,"line_end":73,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":2871,"byte_end":2874,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":2875,"byte_end":2886,"line_start":75,"line_end":75,"column_start":1,"column_end":12}},{"value":"/ use indicatif::ProgressIterator;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":2887,"byte_end":2923,"line_start":76,"line_end":76,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":2924,"byte_end":2927,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ for _ in (0..1000).progress() {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":2928,"byte_end":2963,"line_start":78,"line_end":78,"column_start":1,"column_end":36}},{"value":"/     // ...","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":2964,"byte_end":2978,"line_start":79,"line_end":79,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":2979,"byte_end":2984,"line_start":80,"line_end":80,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":2985,"byte_end":2992,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":2993,"byte_end":2996,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ See the [`ProgressIterator`](trait.ProgressIterator.html) trait for more","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":2997,"byte_end":3073,"line_start":83,"line_end":83,"column_start":1,"column_end":77}},{"value":"/ methods to configure the number of elements in the iterator or change","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":3074,"byte_end":3147,"line_start":84,"line_end":84,"column_start":1,"column_end":74}},{"value":"/ the progress bar style. Indicatif also has optional support for parallel","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":3148,"byte_end":3224,"line_start":85,"line_end":85,"column_start":1,"column_end":77}},{"value":"/ iterators with [Rayon](https://github.com/rayon-rs/rayon). In your","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":3225,"byte_end":3295,"line_start":86,"line_end":86,"column_start":1,"column_end":71}},{"value":"/ `Cargo.toml`, use the \"rayon\" feature:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":3296,"byte_end":3338,"line_start":87,"line_end":87,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":3339,"byte_end":3342,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":3343,"byte_end":3354,"line_start":89,"line_end":89,"column_start":1,"column_end":12}},{"value":"/ [dependencies]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":3355,"byte_end":3373,"line_start":90,"line_end":90,"column_start":1,"column_end":19}},{"value":"/ indicatif = {version = \"*\", features = [\"rayon\"]}","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":3374,"byte_end":3427,"line_start":91,"line_end":91,"column_start":1,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":3428,"byte_end":3435,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":3436,"byte_end":3439,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ And then use it like this:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":3440,"byte_end":3470,"line_start":94,"line_end":94,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":3471,"byte_end":3474,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ ```rust,ignore","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":3475,"byte_end":3493,"line_start":96,"line_end":96,"column_start":1,"column_end":19}},{"value":"/ # extern crate rayon;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":3494,"byte_end":3519,"line_start":97,"line_end":97,"column_start":1,"column_end":26}},{"value":"/ use indicatif::ParallelProgressIterator;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":3520,"byte_end":3564,"line_start":98,"line_end":98,"column_start":1,"column_end":45}},{"value":"/ use rayon::iter::{ParallelIterator, IntoParallelRefIterator};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":3565,"byte_end":3630,"line_start":99,"line_end":99,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":3631,"byte_end":3634,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ let v: Vec<_> = (0..100000).collect();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":3635,"byte_end":3677,"line_start":101,"line_end":101,"column_start":1,"column_end":43}},{"value":"/ let v2: Vec<_> = v.par_iter().progress_count(v.len() as u64).map(|i| i + 1).collect();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":3678,"byte_end":3768,"line_start":102,"line_end":102,"column_start":1,"column_end":91}},{"value":"/ assert_eq!(v2[0], 1);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":3769,"byte_end":3794,"line_start":103,"line_end":103,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":3795,"byte_end":3802,"line_start":104,"line_end":104,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":3803,"byte_end":3806,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ Or if you'd like to customize the progress bar:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":3807,"byte_end":3858,"line_start":106,"line_end":106,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":3859,"byte_end":3862,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ ```rust,ignore","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":3863,"byte_end":3881,"line_start":108,"line_end":108,"column_start":1,"column_end":19}},{"value":"/ # extern crate rayon;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":3882,"byte_end":3907,"line_start":109,"line_end":109,"column_start":1,"column_end":26}},{"value":"/ use indicatif::{ProgressBar, ParallelProgressIterator};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":3908,"byte_end":3967,"line_start":110,"line_end":110,"column_start":1,"column_end":60}},{"value":"/ use rayon::iter::{ParallelIterator, IntoParallelRefIterator};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":3968,"byte_end":4033,"line_start":111,"line_end":111,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":4034,"byte_end":4037,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ // Use `ProgressBar::with_style` to change the view","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":4038,"byte_end":4093,"line_start":113,"line_end":113,"column_start":1,"column_end":56}},{"value":"/ let pb = ProgressBar::new();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":4094,"byte_end":4126,"line_start":114,"line_end":114,"column_start":1,"column_end":33}},{"value":"/ let v: Vec<_> = (0..100000).collect();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":4127,"byte_end":4169,"line_start":115,"line_end":115,"column_start":1,"column_end":43}},{"value":"/ let v2: Vec<_> = v.par_iter().progress_with(pb).map(|i| i + 1).collect();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":4170,"byte_end":4247,"line_start":116,"line_end":116,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(v2[0], 1);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":4248,"byte_end":4273,"line_start":117,"line_end":117,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":4274,"byte_end":4281,"line_start":118,"line_end":118,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":4282,"byte_end":4285,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ # Templates","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":4286,"byte_end":4301,"line_start":120,"line_end":120,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":4302,"byte_end":4305,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ Progress bars can be styled with simple format strings similar to the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":4306,"byte_end":4379,"line_start":122,"line_end":122,"column_start":1,"column_end":74}},{"value":"/ ones in Rust itself.  The format for a placeholder is `{key:options}`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":4380,"byte_end":4453,"line_start":123,"line_end":123,"column_start":1,"column_end":74}},{"value":"/ where the `options` part is optional.  If provided the format is this:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":4454,"byte_end":4528,"line_start":124,"line_end":124,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":4529,"byte_end":4532,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":4533,"byte_end":4544,"line_start":126,"line_end":126,"column_start":1,"column_end":12}},{"value":"/ [<^>]           for an optional alignment specification","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":4545,"byte_end":4604,"line_start":127,"line_end":127,"column_start":1,"column_end":60}},{"value":"/ WIDTH           an optional width as positive integer","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":4605,"byte_end":4662,"line_start":128,"line_end":128,"column_start":1,"column_end":58}},{"value":"/ !               an optional exclamation mark to enable truncation","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":4663,"byte_end":4732,"line_start":129,"line_end":129,"column_start":1,"column_end":70}},{"value":"/ .STYLE          an optional dot separated style string","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":4733,"byte_end":4791,"line_start":130,"line_end":130,"column_start":1,"column_end":59}},{"value":"/ /STYLE          an optional dot separated alternative style string","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":4792,"byte_end":4862,"line_start":131,"line_end":131,"column_start":1,"column_end":71}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":4863,"byte_end":4870,"line_start":132,"line_end":132,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":4871,"byte_end":4874,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ For the style component see [`Style::from_dotted_str`](https://docs.rs/console/0.7.5/console/struct.Style.html#method.from_dotted_str)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":4875,"byte_end":5013,"line_start":134,"line_end":134,"column_start":1,"column_end":139}},{"value":"/ for more information.  Indicatif uses the `console` base crate for all","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":5014,"byte_end":5088,"line_start":135,"line_end":135,"column_start":1,"column_end":75}},{"value":"/ colorization and formatting options.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":5089,"byte_end":5129,"line_start":136,"line_end":136,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":5130,"byte_end":5133,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ Some examples for templates:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":5134,"byte_end":5166,"line_start":138,"line_end":138,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":5167,"byte_end":5170,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":5171,"byte_end":5182,"line_start":140,"line_end":140,"column_start":1,"column_end":12}},{"value":"/ [{elapsed_precise}] {bar:40.cyan/blue} {pos:>7}/{len:7} {msg}","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":5183,"byte_end":5248,"line_start":141,"line_end":141,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":5249,"byte_end":5256,"line_start":142,"line_end":142,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":5257,"byte_end":5260,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ This sets a progress bar that is 40 characters wide and has cyan","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":5261,"byte_end":5329,"line_start":144,"line_end":144,"column_start":1,"column_end":69}},{"value":"/ as primary style color and blue as alternative style color.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":5330,"byte_end":5393,"line_start":145,"line_end":145,"column_start":1,"column_end":64}},{"value":"/ Alternative styles are currently only used for progress bars.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":5394,"byte_end":5459,"line_start":146,"line_end":146,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":5460,"byte_end":5463,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ Example configuration:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":5464,"byte_end":5490,"line_start":148,"line_end":148,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":5491,"byte_end":5494,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":5495,"byte_end":5506,"line_start":150,"line_end":150,"column_start":1,"column_end":12}},{"value":"/ # use indicatif::{ProgressBar, ProgressStyle};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":5507,"byte_end":5557,"line_start":151,"line_end":151,"column_start":1,"column_end":51}},{"value":"/ # let bar = ProgressBar::new(0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":5558,"byte_end":5594,"line_start":152,"line_end":152,"column_start":1,"column_end":37}},{"value":"/ bar.set_style(ProgressStyle::default_bar()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":5595,"byte_end":5641,"line_start":153,"line_end":153,"column_start":1,"column_end":47}},{"value":"/     .template(\"[{elapsed_precise}] {bar:40.cyan/blue} {pos:>7}/{len:7} {msg}\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":5642,"byte_end":5724,"line_start":154,"line_end":154,"column_start":1,"column_end":83}},{"value":"/     .progress_chars(\"##-\"));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":5725,"byte_end":5757,"line_start":155,"line_end":155,"column_start":1,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":5758,"byte_end":5765,"line_start":156,"line_end":156,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":5766,"byte_end":5769,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ The following keys exist:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":5770,"byte_end":5799,"line_start":158,"line_end":158,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":5800,"byte_end":5803,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ * `bar`: renders a progress bar. By default 20 characters wide.  The","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":5804,"byte_end":5876,"line_start":160,"line_end":160,"column_start":1,"column_end":73}},{"value":"/   style string is used to color the elapsed part, the alternative","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":5877,"byte_end":5946,"line_start":161,"line_end":161,"column_start":1,"column_end":70}},{"value":"/   style is used for the bar that is yet to render.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":5947,"byte_end":6001,"line_start":162,"line_end":162,"column_start":1,"column_end":55}},{"value":"/ * `wide_bar`: like `bar` but always fills the remaining space.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":6002,"byte_end":6068,"line_start":163,"line_end":163,"column_start":1,"column_end":67}},{"value":"/ * `spinner`: renders the spinner (current tick string).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":6069,"byte_end":6128,"line_start":164,"line_end":164,"column_start":1,"column_end":60}},{"value":"/ * `prefix`: renders the prefix set on the progress bar.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":6129,"byte_end":6188,"line_start":165,"line_end":165,"column_start":1,"column_end":60}},{"value":"/ * `msg`: renders the currently set message on the progress bar.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":6189,"byte_end":6256,"line_start":166,"line_end":166,"column_start":1,"column_end":68}},{"value":"/ * `wide_msg`: like `msg` but always fills the remaining space and truncates.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":6257,"byte_end":6337,"line_start":167,"line_end":167,"column_start":1,"column_end":81}},{"value":"/ * `pos`: renders the current position of the bar as integer","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":6338,"byte_end":6401,"line_start":168,"line_end":168,"column_start":1,"column_end":64}},{"value":"/ * `len`: renders the total length of the bar as integer","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":6402,"byte_end":6461,"line_start":169,"line_end":169,"column_start":1,"column_end":60}},{"value":"/ * `bytes`: renders the current position of the bar as bytes.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":6462,"byte_end":6526,"line_start":170,"line_end":170,"column_start":1,"column_end":65}},{"value":"/ * `percent`: renders the current position of the bar as a percentage of the total length.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":6527,"byte_end":6620,"line_start":171,"line_end":171,"column_start":1,"column_end":94}},{"value":"/ * `total_bytes`: renders the total length of the bar as bytes.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":6621,"byte_end":6687,"line_start":172,"line_end":172,"column_start":1,"column_end":67}},{"value":"/ * `elapsed_precise`: renders the elapsed time as `HH:MM:SS`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":6688,"byte_end":6752,"line_start":173,"line_end":173,"column_start":1,"column_end":65}},{"value":"/ * `elapsed`: renders the elapsed time as `42s`, `1m` etc.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":6753,"byte_end":6814,"line_start":174,"line_end":174,"column_start":1,"column_end":62}},{"value":"/ * `per_sec`: renders the speed in steps per second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":6815,"byte_end":6870,"line_start":175,"line_end":175,"column_start":1,"column_end":56}},{"value":"/ * `bytes_per_sec`: renders the speed in bytes per second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":6871,"byte_end":6932,"line_start":176,"line_end":176,"column_start":1,"column_end":62}},{"value":"/ * `binary_bytes_per_sec`: renders the speed in bytes per second using","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":6933,"byte_end":7006,"line_start":177,"line_end":177,"column_start":1,"column_end":74}},{"value":"/   power-of-two units, i.e. `MiB`, `KiB`, etc.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":7007,"byte_end":7056,"line_start":178,"line_end":178,"column_start":1,"column_end":50}},{"value":"/ * `eta_precise`: the remaining time (like `elapsed_precise`).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":7057,"byte_end":7122,"line_start":179,"line_end":179,"column_start":1,"column_end":66}},{"value":"/ * `eta`: the remaining time (like `elapsed`).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":7123,"byte_end":7172,"line_start":180,"line_end":180,"column_start":1,"column_end":50}},{"value":"/ * `duration_precise`: the extrapolated total duration (like `elapsed_precise`).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":7173,"byte_end":7256,"line_start":181,"line_end":181,"column_start":1,"column_end":84}},{"value":"/ * `duration`: the extrapolated total duration time (like `elapsed`).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":7257,"byte_end":7329,"line_start":182,"line_end":182,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":7331,"byte_end":7334,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ The design of the progress bar can be altered with the integrated","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":7335,"byte_end":7404,"line_start":185,"line_end":185,"column_start":1,"column_end":70}},{"value":"/ template functionality.  The template can be set by changing a","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":7405,"byte_end":7471,"line_start":186,"line_end":186,"column_start":1,"column_end":67}},{"value":"/ `ProgressStyle` and attaching it to the progress bar.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":7472,"byte_end":7529,"line_start":187,"line_end":187,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":7530,"byte_end":7533,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ # Human Readable Formatting","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":7534,"byte_end":7565,"line_start":189,"line_end":189,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":7566,"byte_end":7569,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ There are some formatting wrappers for showing elapsed time and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":7570,"byte_end":7637,"line_start":191,"line_end":191,"column_start":1,"column_end":68}},{"value":"/ file sizes for human users:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":7638,"byte_end":7669,"line_start":192,"line_end":192,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":7670,"byte_end":7673,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":7674,"byte_end":7685,"line_start":194,"line_end":194,"column_start":1,"column_end":12}},{"value":"/ # use std::time::Duration;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":7686,"byte_end":7716,"line_start":195,"line_end":195,"column_start":1,"column_end":31}},{"value":"/ use indicatif::{HumanDuration, HumanBytes};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":7717,"byte_end":7764,"line_start":196,"line_end":196,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":7765,"byte_end":7768,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(\"3.00MiB\", HumanBytes(3*1024*1024).to_string());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":7769,"byte_end":7832,"line_start":198,"line_end":198,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"8 seconds\", HumanDuration(Duration::from_secs(8)).to_string());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":7833,"byte_end":7912,"line_start":199,"line_end":199,"column_start":1,"column_end":80}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":7913,"byte_end":7920,"line_start":200,"line_end":200,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":7921,"byte_end":7924,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ # Feature Flags","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":7925,"byte_end":7944,"line_start":202,"line_end":202,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":7945,"byte_end":7948,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ * `rayon`: adds rayon support","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":7949,"byte_end":7982,"line_start":204,"line_end":204,"column_start":1,"column_end":34}},{"value":"/ * `improved_unicode`: adds improved unicode support (graphemes, better width calculation)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/lib.rs","byte_start":7983,"byte_end":8076,"line_start":205,"line_end":205,"column_start":1,"column_end":94}}]},{"kind":"Struct","id":{"krate":0,"index":589},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/format.rs","byte_start":8750,"byte_end":8767,"line_start":8,"line_end":8,"column_start":12,"column_end":29},"name":"FormattedDuration","qualname":"::format::FormattedDuration","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wraps an std duration for human basic formatting.\n","sig":null,"attributes":[{"value":"/ Wraps an std duration for human basic formatting.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/format.rs","byte_start":8668,"byte_end":8721,"line_start":6,"line_end":6,"column_start":1,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":591},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/format.rs","byte_start":8768,"byte_end":8780,"line_start":8,"line_end":8,"column_start":30,"column_end":42},"name":"0","qualname":"::format::FormattedDuration::0","value":"std::time::Duration","parent":{"krate":0,"index":589},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":594},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/format.rs","byte_start":8869,"byte_end":8882,"line_start":12,"line_end":12,"column_start":12,"column_end":25},"name":"HumanDuration","qualname":"::format::HumanDuration","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wraps an std duration for human readable formatting.\n","sig":null,"attributes":[{"value":"/ Wraps an std duration for human readable formatting.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/format.rs","byte_start":8784,"byte_end":8840,"line_start":10,"line_end":10,"column_start":1,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":596},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/format.rs","byte_start":8883,"byte_end":8895,"line_start":12,"line_end":12,"column_start":26,"column_end":38},"name":"0","qualname":"::format::HumanDuration::0","value":"std::time::Duration","parent":{"krate":0,"index":594},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":599},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/format.rs","byte_start":8967,"byte_end":8977,"line_start":16,"line_end":16,"column_start":12,"column_end":22},"name":"HumanBytes","qualname":"::format::HumanBytes","value":"","parent":null,"children":[],"decl_id":null,"docs":" Formats bytes for human readability\n","sig":null,"attributes":[{"value":"/ Formats bytes for human readability","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/format.rs","byte_start":8899,"byte_end":8938,"line_start":14,"line_end":14,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":601},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/format.rs","byte_start":8978,"byte_end":8985,"line_start":16,"line_end":16,"column_start":23,"column_end":30},"name":"0","qualname":"::format::HumanBytes::0","value":"u64","parent":{"krate":0,"index":599},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":604},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/format.rs","byte_start":9075,"byte_end":9087,"line_start":20,"line_end":20,"column_start":12,"column_end":24},"name":"DecimalBytes","qualname":"::format::DecimalBytes","value":"","parent":null,"children":[],"decl_id":null,"docs":" Formats bytes for human readability using SI prefixes\n","sig":null,"attributes":[{"value":"/ Formats bytes for human readability using SI prefixes","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/format.rs","byte_start":8989,"byte_end":9046,"line_start":18,"line_end":18,"column_start":1,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":606},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/format.rs","byte_start":9088,"byte_end":9095,"line_start":20,"line_end":20,"column_start":25,"column_end":32},"name":"0","qualname":"::format::DecimalBytes::0","value":"u64","parent":{"krate":0,"index":604},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":609},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/format.rs","byte_start":9190,"byte_end":9201,"line_start":24,"line_end":24,"column_start":12,"column_end":23},"name":"BinaryBytes","qualname":"::format::BinaryBytes","value":"","parent":null,"children":[],"decl_id":null,"docs":" Formats bytes for human readability using ISO/IEC prefixes\n","sig":null,"attributes":[{"value":"/ Formats bytes for human readability using ISO/IEC prefixes","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/format.rs","byte_start":9099,"byte_end":9161,"line_start":22,"line_end":22,"column_start":1,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":611},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/format.rs","byte_start":9202,"byte_end":9209,"line_start":24,"line_end":24,"column_start":24,"column_end":31},"name":"0","qualname":"::format::BinaryBytes::0","value":"u64","parent":{"krate":0,"index":609},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":14},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/format.rs","byte_start":9262,"byte_end":9265,"line_start":27,"line_end":27,"column_start":8,"column_end":11},"name":"fmt","qualname":"<FormattedDuration as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10117},"children":[],"decl_id":{"krate":2,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":16},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/format.rs","byte_start":9767,"byte_end":9770,"line_start":45,"line_end":45,"column_start":8,"column_end":11},"name":"fmt","qualname":"<HumanDuration as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10117},"children":[],"decl_id":{"krate":2,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":19},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/format.rs","byte_start":10960,"byte_end":10963,"line_start":78,"line_end":78,"column_start":8,"column_end":11},"name":"fmt","qualname":"<HumanBytes as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10117},"children":[],"decl_id":{"krate":2,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/format.rs","byte_start":11301,"byte_end":11304,"line_start":87,"line_end":87,"column_start":8,"column_end":11},"name":"fmt","qualname":"<DecimalBytes as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10117},"children":[],"decl_id":{"krate":2,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/format.rs","byte_start":11642,"byte_end":11645,"line_start":96,"line_end":96,"column_start":8,"column_end":11},"name":"fmt","qualname":"<BinaryBytes as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10117},"children":[],"decl_id":{"krate":2,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":41},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/iter.rs","byte_start":12125,"byte_end":12141,"line_start":7,"line_end":7,"column_start":11,"column_end":27},"name":"ProgressIterator","qualname":"::iter::ProgressIterator","value":"ProgressIterator","parent":null,"children":[{"krate":0,"index":42},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46}],"decl_id":null,"docs":" Wraps an iterator to display its progress.\n","sig":null,"attributes":[{"value":"/ Wraps an iterator to display its progress.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/iter.rs","byte_start":12068,"byte_end":12114,"line_start":6,"line_end":6,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/iter.rs","byte_start":12465,"byte_end":12477,"line_start":14,"line_end":14,"column_start":8,"column_end":20},"name":"try_progress","qualname":"::iter::ProgressIterator::try_progress","value":"fn try_progress(Self) -> Option<ProgressBarIter<Self>>","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" Wrap an iterator with default styling. Uses `Iterator::size_hint` to get length.\n Returns `Some(..)` only if `size_hint.1` is `Some`. If you want to create a progress bar\n even if `size_hint.1` returns `None` use `progress_count` or `progress_with` instead.\n","sig":null,"attributes":[{"value":"/ Wrap an iterator with default styling. Uses `Iterator::size_hint` to get length.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/iter.rs","byte_start":12182,"byte_end":12266,"line_start":11,"line_end":11,"column_start":5,"column_end":89}},{"value":"/ Returns `Some(..)` only if `size_hint.1` is `Some`. If you want to create a progress bar","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/iter.rs","byte_start":12271,"byte_end":12363,"line_start":12,"line_end":12,"column_start":5,"column_end":97}},{"value":"/ even if `size_hint.1` returns `None` use `progress_count` or `progress_with` instead.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/iter.rs","byte_start":12368,"byte_end":12457,"line_start":13,"line_end":13,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/iter.rs","byte_start":12693,"byte_end":12701,"line_start":21,"line_end":21,"column_start":8,"column_end":16},"name":"progress","qualname":"::iter::ProgressIterator::progress","value":"fn progress(Self) -> ProgressBarIter<Self> where Self: ExactSizeIterator","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" Wrap an iterator with default styling.\n","sig":null,"attributes":[{"value":"/ Wrap an iterator with default styling.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/iter.rs","byte_start":12643,"byte_end":12685,"line_start":20,"line_end":20,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/iter.rs","byte_start":12940,"byte_end":12954,"line_start":30,"line_end":30,"column_start":8,"column_end":22},"name":"progress_count","qualname":"::iter::ProgressIterator::progress_count","value":"fn progress_count(Self, u64) -> ProgressBarIter<Self>","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" Wrap an iterator with an explicit element count.\n","sig":null,"attributes":[{"value":"/ Wrap an iterator with an explicit element count.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/iter.rs","byte_start":12880,"byte_end":12932,"line_start":29,"line_end":29,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/iter.rs","byte_start":13115,"byte_end":13128,"line_start":35,"line_end":35,"column_start":8,"column_end":21},"name":"progress_with","qualname":"::iter::ProgressIterator::progress_with","value":"fn progress_with(Self, ProgressBar) -> ProgressBarIter<Self>","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" Wrap an iterator with a custom progress bar.\n","sig":null,"attributes":[{"value":"/ Wrap an iterator with a custom progress bar.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/iter.rs","byte_start":13059,"byte_end":13107,"line_start":34,"line_end":34,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":614},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/iter.rs","byte_start":13262,"byte_end":13277,"line_start":40,"line_end":40,"column_start":12,"column_end":27},"name":"ProgressBarIter","qualname":"::iter::ProgressBarIter","value":"ProgressBarIter { progress }","parent":null,"children":[{"krate":0,"index":616},{"krate":0,"index":617}],"decl_id":null,"docs":" Wraps an iterator to display its progress.\n","sig":null,"attributes":[{"value":"/ Wraps an iterator to display its progress.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/iter.rs","byte_start":13187,"byte_end":13233,"line_start":38,"line_end":38,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":617},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/iter.rs","byte_start":13313,"byte_end":13321,"line_start":42,"line_end":42,"column_start":9,"column_end":17},"name":"progress","qualname":"::iter::ProgressBarIter::progress","value":"progress_bar::ProgressBar","parent":{"krate":0,"index":614},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/iter.rs","byte_start":13431,"byte_end":13435,"line_start":48,"line_end":48,"column_start":8,"column_end":12},"name":"next","qualname":"<ProgressBarIter<T> as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8476},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/iter.rs","byte_start":13776,"byte_end":13779,"line_start":62,"line_end":62,"column_start":8,"column_end":11},"name":"len","qualname":"<ProgressBarIter<T> as std::iter::ExactSizeIterator>::len","value":"fn len(&Self) -> usize","parent":{"krate":2,"index":8348},"children":[],"decl_id":{"krate":2,"index":8349},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/iter.rs","byte_start":13910,"byte_end":13919,"line_start":68,"line_end":68,"column_start":8,"column_end":17},"name":"next_back","qualname":"<ProgressBarIter<T> as std::iter::DoubleEndedIterator>::next_back","value":"fn next_back(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8323},"children":[],"decl_id":{"krate":2,"index":8324},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/iter.rs","byte_start":14311,"byte_end":14315,"line_start":84,"line_end":84,"column_start":8,"column_end":12},"name":"read","qualname":"<ProgressBarIter<R> as std::io::Read>::read","value":"fn read(&mut Self, &mut [u8]) -> io::Result<usize>","parent":{"krate":1,"index":4540},"children":[],"decl_id":{"krate":1,"index":4541},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/iter.rs","byte_start":14473,"byte_end":14486,"line_start":90,"line_end":90,"column_start":8,"column_end":21},"name":"read_vectored","qualname":"<ProgressBarIter<R> as std::io::Read>::read_vectored","value":"fn read_vectored(&mut Self, &mut [IoSliceMut]) -> io::Result<usize>","parent":{"krate":1,"index":4540},"children":[],"decl_id":{"krate":1,"index":4542},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/iter.rs","byte_start":14667,"byte_end":14681,"line_start":96,"line_end":96,"column_start":8,"column_end":22},"name":"read_to_string","qualname":"<ProgressBarIter<R> as std::io::Read>::read_to_string","value":"fn read_to_string(&mut Self, &mut String) -> io::Result<usize>","parent":{"krate":1,"index":4540},"children":[],"decl_id":{"krate":1,"index":4546},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/iter.rs","byte_start":14851,"byte_end":14861,"line_start":102,"line_end":102,"column_start":8,"column_end":18},"name":"read_exact","qualname":"<ProgressBarIter<R> as std::io::Read>::read_exact","value":"fn read_exact(&mut Self, &mut [u8]) -> io::Result<()>","parent":{"krate":1,"index":4540},"children":[],"decl_id":{"krate":1,"index":4547},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/iter.rs","byte_start":15077,"byte_end":15085,"line_start":110,"line_end":110,"column_start":8,"column_end":16},"name":"fill_buf","qualname":"<ProgressBarIter<R> as std::io::BufRead>::fill_buf","value":"fn fill_buf(&mut Self) -> io::Result<&[u8]>","parent":{"krate":1,"index":4622},"children":[],"decl_id":{"krate":1,"index":4623},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/iter.rs","byte_start":15161,"byte_end":15168,"line_start":114,"line_end":114,"column_start":8,"column_end":15},"name":"consume","qualname":"<ProgressBarIter<R> as std::io::BufRead>::consume","value":"fn consume(&mut Self, usize)","parent":{"krate":1,"index":4622},"children":[],"decl_id":{"krate":1,"index":4624},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/iter.rs","byte_start":15331,"byte_end":15335,"line_start":121,"line_end":121,"column_start":8,"column_end":12},"name":"seek","qualname":"<ProgressBarIter<S> as std::io::Seek>::seek","value":"fn seek(&mut Self, io::SeekFrom) -> io::Result<u64>","parent":{"krate":1,"index":4615},"children":[],"decl_id":{"krate":1,"index":4616},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/iter.rs","byte_start":15563,"byte_end":15568,"line_start":130,"line_end":130,"column_start":8,"column_end":13},"name":"write","qualname":"<ProgressBarIter<W> as std::io::Write>::write","value":"fn write(&mut Self, &[u8]) -> io::Result<usize>","parent":{"krate":1,"index":4597},"children":[],"decl_id":{"krate":1,"index":4598},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/iter.rs","byte_start":15738,"byte_end":15752,"line_start":137,"line_end":137,"column_start":8,"column_end":22},"name":"write_vectored","qualname":"<ProgressBarIter<W> as std::io::Write>::write_vectored","value":"fn write_vectored(&mut Self, &[io::IoSlice]) -> io::Result<usize>","parent":{"krate":1,"index":4597},"children":[],"decl_id":{"krate":1,"index":4599},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/iter.rs","byte_start":15942,"byte_end":15947,"line_start":144,"line_end":144,"column_start":8,"column_end":13},"name":"flush","qualname":"<ProgressBarIter<W> as std::io::Write>::flush","value":"fn flush(&mut Self) -> io::Result<()>","parent":{"krate":1,"index":4597},"children":[],"decl_id":{"krate":1,"index":4602},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/iter.rs","byte_start":16017,"byte_end":16026,"line_start":148,"line_end":148,"column_start":8,"column_end":17},"name":"write_all","qualname":"<ProgressBarIter<W> as std::io::Write>::write_all","value":"fn write_all(&mut Self, &[u8]) -> io::Result<()>","parent":{"krate":1,"index":4597},"children":[],"decl_id":{"krate":1,"index":4603},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/iter.rs","byte_start":16457,"byte_end":16470,"line_start":160,"line_end":160,"column_start":8,"column_end":21},"name":"progress_with","qualname":"<T as iter::ProgressIterator>::progress_with","value":"fn progress_with(Self, ProgressBar) -> ProgressBarIter<Self>","parent":{"krate":0,"index":41},"children":[],"decl_id":{"krate":0,"index":46},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":621},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":17878,"byte_end":17889,"line_start":23,"line_end":23,"column_start":12,"column_end":23},"name":"ProgressBar","qualname":"::progress_bar::ProgressBar","value":"ProgressBar {  }","parent":null,"children":[{"krate":0,"index":622}],"decl_id":null,"docs":" A progress bar or spinner","sig":null,"attributes":[{"value":"/ A progress bar or spinner","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":17632,"byte_end":17661,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":17662,"byte_end":17665,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The progress bar is an [`Arc`] around its internal state. When the progress bar is cloned it","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":17666,"byte_end":17762,"line_start":20,"line_end":20,"column_start":1,"column_end":97}},{"value":"/ just increments the refcount (so the original and its clone share the same state).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":17763,"byte_end":17849,"line_start":21,"line_end":21,"column_start":1,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":17974,"byte_end":17977,"line_start":28,"line_end":28,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ProgressBar as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":18390,"byte_end":18393,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<ProgressBar>::new","value":"fn new(u64) -> ProgressBar","parent":null,"children":[],"decl_id":null,"docs":" Creates a new progress bar with a given length","sig":null,"attributes":[{"value":"/ Creates a new progress bar with a given length","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":18109,"byte_end":18159,"line_start":34,"line_end":34,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":18164,"byte_end":18167,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ This progress bar by default draws directly to stderr, and refreshes a maximum of 15 times","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":18172,"byte_end":18266,"line_start":36,"line_end":36,"column_start":5,"column_end":99}},{"value":"/ a second. To change the refresh rate, set the draw target to one with a different refresh","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":18271,"byte_end":18364,"line_start":37,"line_end":37,"column_start":5,"column_end":98}},{"value":"/ rate.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":18369,"byte_end":18378,"line_start":38,"line_end":38,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":18685,"byte_end":18691,"line_start":47,"line_end":47,"column_start":12,"column_end":18},"name":"hidden","qualname":"<ProgressBar>::hidden","value":"fn hidden() -> ProgressBar","parent":null,"children":[],"decl_id":null,"docs":" Creates a completely hidden progress bar","sig":null,"attributes":[{"value":"/ Creates a completely hidden progress bar","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":18505,"byte_end":18549,"line_start":43,"line_end":43,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":18554,"byte_end":18557,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ This progress bar still responds to API changes but it does not have a length or render in","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":18562,"byte_end":18656,"line_start":45,"line_end":45,"column_start":5,"column_end":99}},{"value":"/ any way.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":18661,"byte_end":18673,"line_start":46,"line_end":46,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":18872,"byte_end":18888,"line_start":52,"line_end":52,"column_start":12,"column_end":28},"name":"with_draw_target","qualname":"<ProgressBar>::with_draw_target","value":"fn with_draw_target(u64, ProgressDrawTarget) -> ProgressBar","parent":null,"children":[],"decl_id":null,"docs":" Creates a new progress bar with a given length and draw target\n","sig":null,"attributes":[{"value":"/ Creates a new progress bar with a given length and draw target","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":18794,"byte_end":18860,"line_start":51,"line_end":51,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":19660,"byte_end":19670,"line_start":75,"line_end":75,"column_start":12,"column_end":22},"name":"with_style","qualname":"<ProgressBar>::with_style","value":"fn with_style(Self, ProgressStyle) -> ProgressBar","parent":null,"children":[],"decl_id":null,"docs":" A convenience builder-like function for a progress bar with a given style\n","sig":null,"attributes":[{"value":"/ A convenience builder-like function for a progress bar with a given style","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":19571,"byte_end":19648,"line_start":74,"line_end":74,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":19880,"byte_end":19891,"line_start":81,"line_end":81,"column_start":12,"column_end":23},"name":"with_prefix","qualname":"<ProgressBar>::with_prefix","value":"fn with_prefix<impl Into<Cow<'static, str>>>(Self,\nimpl Into<Cow<'static, str>>) -> ProgressBar where\nimpl Into<Cow<'static, str>>: Into<Cow>","parent":null,"children":[],"decl_id":null,"docs":" A convenience builder-like function for a progress bar with a given prefix\n","sig":null,"attributes":[{"value":"/ A convenience builder-like function for a progress bar with a given prefix","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":19790,"byte_end":19868,"line_start":80,"line_end":80,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":20127,"byte_end":20139,"line_start":87,"line_end":87,"column_start":12,"column_end":24},"name":"with_message","qualname":"<ProgressBar>::with_message","value":"fn with_message<impl Into<Cow<'static, str>>>(Self,\nimpl Into<Cow<'static, str>>) -> ProgressBar where\nimpl Into<Cow<'static, str>>: Into<Cow>","parent":null,"children":[],"decl_id":null,"docs":" A convenience builder-like function for a progress bar with a given message\n","sig":null,"attributes":[{"value":"/ A convenience builder-like function for a progress bar with a given message","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":20036,"byte_end":20115,"line_start":86,"line_end":86,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":20379,"byte_end":20392,"line_start":93,"line_end":93,"column_start":12,"column_end":25},"name":"with_position","qualname":"<ProgressBar>::with_position","value":"fn with_position(Self, u64) -> ProgressBar","parent":null,"children":[],"decl_id":null,"docs":" A convenience builder-like function for a progress bar with a given position\n","sig":null,"attributes":[{"value":"/ A convenience builder-like function for a progress bar with a given position","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":20287,"byte_end":20367,"line_start":92,"line_end":92,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":20642,"byte_end":20653,"line_start":101,"line_end":101,"column_start":12,"column_end":23},"name":"new_spinner","qualname":"<ProgressBar>::new_spinner","value":"fn new_spinner() -> ProgressBar","parent":null,"children":[],"decl_id":null,"docs":" Creates a new spinner","sig":null,"attributes":[{"value":"/ Creates a new spinner","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":20496,"byte_end":20521,"line_start":98,"line_end":98,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":20526,"byte_end":20529,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ This spinner by default draws directly to stderr. This adds the default spinner style to it.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":20534,"byte_end":20630,"line_start":100,"line_end":100,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":20920,"byte_end":20929,"line_start":110,"line_end":110,"column_start":12,"column_end":21},"name":"set_style","qualname":"<ProgressBar>::set_style","value":"fn set_style(&Self, ProgressStyle)","parent":null,"children":[],"decl_id":null,"docs":" Overrides the stored style","sig":null,"attributes":[{"value":"/ Overrides the stored style","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":20790,"byte_end":20820,"line_start":107,"line_end":107,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":20825,"byte_end":20828,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ This does not redraw the bar. Call [`ProgressBar::tick()`] to force it.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":20833,"byte_end":20908,"line_start":109,"line_end":109,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":21445,"byte_end":21463,"line_start":122,"line_end":122,"column_start":12,"column_end":30},"name":"enable_steady_tick","qualname":"<ProgressBar>::enable_steady_tick","value":"fn enable_steady_tick(&Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Spawns a background thread to tick the progress bar","sig":null,"attributes":[{"value":"/ Spawns a background thread to tick the progress bar","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":21022,"byte_end":21077,"line_start":114,"line_end":114,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":21082,"byte_end":21085,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ When this is enabled a background thread will regularly tick the progress bar in the given","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":21090,"byte_end":21184,"line_start":116,"line_end":116,"column_start":5,"column_end":99}},{"value":"/ interval (in milliseconds). This is useful to advance progress bars that are very slow by","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":21189,"byte_end":21282,"line_start":117,"line_end":117,"column_start":5,"column_end":98}},{"value":"/ themselves.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":21287,"byte_end":21302,"line_start":118,"line_end":118,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":21307,"byte_end":21310,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ When steady ticks are enabled, calling [`ProgressBar::tick()`] on a progress bar does not","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":21315,"byte_end":21408,"line_start":120,"line_end":120,"column_start":5,"column_end":98}},{"value":"/ have any effect.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":21413,"byte_end":21433,"line_start":121,"line_end":121,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":22795,"byte_end":22814,"line_start":161,"line_end":161,"column_start":12,"column_end":31},"name":"disable_steady_tick","qualname":"<ProgressBar>::disable_steady_tick","value":"fn disable_steady_tick(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Undoes [`ProgressBar::enable_steady_tick()`]\n","sig":null,"attributes":[{"value":"/ Undoes [`ProgressBar::enable_steady_tick()`]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":22735,"byte_end":22783,"line_start":160,"line_end":160,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":23822,"byte_end":23836,"line_start":184,"line_end":184,"column_start":12,"column_end":26},"name":"set_draw_delta","qualname":"<ProgressBar>::set_draw_delta","value":"fn set_draw_delta(&Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Limit redrawing of progress bar to every `n` steps","sig":null,"attributes":[{"value":"/ Limit redrawing of progress bar to every `n` steps","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":22871,"byte_end":22925,"line_start":165,"line_end":165,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":22930,"byte_end":22933,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ By default, the progress bar will redraw whenever its state advances. This setting is","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":22938,"byte_end":23027,"line_start":167,"line_end":167,"column_start":5,"column_end":94}},{"value":"/ helpful in situations where the overhead of redrawing the progress bar dominates the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":23032,"byte_end":23120,"line_start":168,"line_end":168,"column_start":5,"column_end":93}},{"value":"/ computation whose progress is being reported.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":23125,"byte_end":23174,"line_start":169,"line_end":169,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":23179,"byte_end":23182,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ If `n` is greater than 0, operations that change the progress bar such as","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":23187,"byte_end":23264,"line_start":171,"line_end":171,"column_start":5,"column_end":82}},{"value":"/ [`ProgressBar::tick()`], [`ProgressBar::set_message()`] and [`ProgressBar::set_length()`]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":23269,"byte_end":23362,"line_start":172,"line_end":172,"column_start":5,"column_end":98}},{"value":"/ will no longer cause the progress bar to be redrawn, and will only be shown once the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":23367,"byte_end":23455,"line_start":173,"line_end":173,"column_start":5,"column_end":93}},{"value":"/ position advances by `n` steps.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":23460,"byte_end":23495,"line_start":174,"line_end":174,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":23500,"byte_end":23503,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":23508,"byte_end":23526,"line_start":176,"line_end":176,"column_start":5,"column_end":23}},{"value":"/ # use indicatif::ProgressBar;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":23531,"byte_end":23564,"line_start":177,"line_end":177,"column_start":5,"column_end":38}},{"value":"/ let n = 1_000_000;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":23569,"byte_end":23591,"line_start":178,"line_end":178,"column_start":5,"column_end":27}},{"value":"/ let pb = ProgressBar::new(n);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":23596,"byte_end":23629,"line_start":179,"line_end":179,"column_start":5,"column_end":38}},{"value":"/ pb.set_draw_delta(n / 100); // redraw every 1% of additional progress","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":23634,"byte_end":23707,"line_start":180,"line_end":180,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":23712,"byte_end":23719,"line_start":181,"line_end":181,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":23724,"byte_end":23727,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ Note that `ProgressDrawTarget` may impose additional buffering of redraws.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":23732,"byte_end":23810,"line_start":183,"line_end":183,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":24668,"byte_end":24681,"line_start":205,"line_end":205,"column_start":12,"column_end":25},"name":"set_draw_rate","qualname":"<ProgressBar>::set_draw_rate","value":"fn set_draw_rate(&Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the refresh rate of progress bar to `n` updates per seconds","sig":null,"attributes":[{"value":"/ Sets the refresh rate of progress bar to `n` updates per seconds","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":24017,"byte_end":24085,"line_start":190,"line_end":190,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":24090,"byte_end":24093,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ This is similar to `set_draw_delta` but automatically adapts to a constant refresh rate","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":24098,"byte_end":24189,"line_start":192,"line_end":192,"column_start":5,"column_end":96}},{"value":"/ regardless of how consistent the progress is.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":24194,"byte_end":24243,"line_start":193,"line_end":193,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":24248,"byte_end":24251,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ This parameter takes precedence on `set_draw_delta` if different from 0.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":24256,"byte_end":24332,"line_start":195,"line_end":195,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":24337,"byte_end":24340,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":24345,"byte_end":24363,"line_start":197,"line_end":197,"column_start":5,"column_end":23}},{"value":"/ # use indicatif::ProgressBar;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":24368,"byte_end":24401,"line_start":198,"line_end":198,"column_start":5,"column_end":38}},{"value":"/ let n = 1_000_000;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":24406,"byte_end":24428,"line_start":199,"line_end":199,"column_start":5,"column_end":27}},{"value":"/ let pb = ProgressBar::new(n);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":24433,"byte_end":24466,"line_start":200,"line_end":200,"column_start":5,"column_end":38}},{"value":"/ pb.set_draw_rate(25); // aims at redrawing at most 25 times per seconds.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":24471,"byte_end":24547,"line_start":201,"line_end":201,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":24552,"byte_end":24559,"line_start":202,"line_end":202,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":24564,"byte_end":24567,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ Note that the [`ProgressDrawTarget`] may impose additional buffering of redraws.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":24572,"byte_end":24656,"line_start":204,"line_end":204,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":25004,"byte_end":25008,"line_start":214,"line_end":214,"column_start":12,"column_end":16},"name":"tick","qualname":"<ProgressBar>::tick","value":"fn tick(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Manually ticks the spinner or progress bar","sig":null,"attributes":[{"value":"/ Manually ticks the spinner or progress bar","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":24864,"byte_end":24910,"line_start":211,"line_end":211,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":24915,"byte_end":24918,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ This automatically happens on any other change to a progress bar.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":24923,"byte_end":24992,"line_start":213,"line_end":213,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":25280,"byte_end":25283,"line_start":223,"line_end":223,"column_start":12,"column_end":15},"name":"inc","qualname":"<ProgressBar>::inc","value":"fn inc(&Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Advances the position of the progress bar by `delta`\n","sig":null,"attributes":[{"value":"/ Advances the position of the progress bar by `delta`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":25212,"byte_end":25268,"line_start":222,"line_end":222,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":25626,"byte_end":25635,"line_start":233,"line_end":233,"column_start":12,"column_end":21},"name":"is_hidden","qualname":"<ProgressBar>::is_hidden","value":"fn is_hidden(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" A quick convenience check if the progress bar is hidden\n","sig":null,"attributes":[{"value":"/ A quick convenience check if the progress bar is hidden","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":25555,"byte_end":25614,"line_start":232,"line_end":232,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":25779,"byte_end":25790,"line_start":238,"line_end":238,"column_start":12,"column_end":23},"name":"is_finished","qualname":"<ProgressBar>::is_finished","value":"fn is_finished(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates that the progress bar finished\n","sig":null,"attributes":[{"value":"/ Indicates that the progress bar finished","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":25723,"byte_end":25767,"line_start":237,"line_end":237,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":26239,"byte_end":26246,"line_start":249,"line_end":249,"column_start":12,"column_end":19},"name":"println","qualname":"<ProgressBar>::println","value":"fn println<I>(&Self, I) where I: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Print a log line above the progress bar","sig":null,"attributes":[{"value":"/ Print a log line above the progress bar","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":25868,"byte_end":25911,"line_start":242,"line_end":242,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":25916,"byte_end":25919,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ If the progress bar was added to a [`MultiProgress`], the log line will be","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":25924,"byte_end":26002,"line_start":244,"line_end":244,"column_start":5,"column_end":83}},{"value":"/ printed above all other progress bars.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":26007,"byte_end":26049,"line_start":245,"line_end":245,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":26054,"byte_end":26057,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ Note that if the progress bar is hidden (which by default happens if the progress bar is","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":26062,"byte_end":26154,"line_start":247,"line_end":247,"column_start":5,"column_end":97}},{"value":"/ redirected into a file) `println()` will not do anything either.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":26159,"byte_end":26227,"line_start":248,"line_end":248,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":26930,"byte_end":26942,"line_start":270,"line_end":270,"column_start":12,"column_end":24},"name":"set_position","qualname":"<ProgressBar>::set_position","value":"fn set_position(&Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the position of the progress bar\n","sig":null,"attributes":[{"value":"/ Sets the position of the progress bar","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":26877,"byte_end":26918,"line_start":269,"line_end":269,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":27270,"byte_end":27280,"line_start":281,"line_end":281,"column_start":12,"column_end":22},"name":"set_length","qualname":"<ProgressBar>::set_length","value":"fn set_length(&Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the length of the progress bar\n","sig":null,"attributes":[{"value":"/ Sets the length of the progress bar","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":27219,"byte_end":27258,"line_start":280,"line_end":280,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":27445,"byte_end":27455,"line_start":288,"line_end":288,"column_start":12,"column_end":22},"name":"inc_length","qualname":"<ProgressBar>::inc_length","value":"fn inc_length(&Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Increase the length of the progress bar\n","sig":null,"attributes":[{"value":"/ Increase the length of the progress bar","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":27390,"byte_end":27433,"line_start":287,"line_end":287,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":27792,"byte_end":27802,"line_start":298,"line_end":298,"column_start":12,"column_end":22},"name":"set_prefix","qualname":"<ProgressBar>::set_prefix","value":"fn set_prefix<impl Into<Cow<'static, str>>>(&Self,\nimpl Into<Cow<'static, str>>) where impl Into<Cow<'static, str>>: Into<Cow>","parent":null,"children":[],"decl_id":null,"docs":" Sets the current prefix of the progress bar","sig":null,"attributes":[{"value":"/ Sets the current prefix of the progress bar","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":27595,"byte_end":27642,"line_start":294,"line_end":294,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":27647,"byte_end":27650,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ For the prefix to be visible, the `{prefix}` placeholder must be present in the template","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":27655,"byte_end":27747,"line_start":296,"line_end":296,"column_start":5,"column_end":97}},{"value":"/ (see [`ProgressStyle`]).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":27752,"byte_end":27780,"line_start":297,"line_end":297,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":28310,"byte_end":28321,"line_start":312,"line_end":312,"column_start":12,"column_end":23},"name":"set_message","qualname":"<ProgressBar>::set_message","value":"fn set_message<impl Into<Cow<'static, str>>>(&Self,\nimpl Into<Cow<'static, str>>) where impl Into<Cow<'static, str>>: Into<Cow>","parent":null,"children":[],"decl_id":null,"docs":" Sets the current message of the progress bar","sig":null,"attributes":[{"value":"/ Sets the current message of the progress bar","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":28114,"byte_end":28162,"line_start":308,"line_end":308,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":28167,"byte_end":28170,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ For the message to be visible, the `{msg}` placeholder must be present in the template (see","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":28175,"byte_end":28270,"line_start":310,"line_end":310,"column_start":5,"column_end":100}},{"value":"/ [`ProgressStyle`]).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":28275,"byte_end":28298,"line_start":311,"line_end":311,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":28688,"byte_end":28697,"line_start":323,"line_end":323,"column_start":12,"column_end":21},"name":"downgrade","qualname":"<ProgressBar>::downgrade","value":"fn downgrade(&Self) -> WeakProgressBar","parent":null,"children":[],"decl_id":null,"docs":" Creates a new weak reference to this `ProgressBar`\n","sig":null,"attributes":[{"value":"/ Creates a new weak reference to this `ProgressBar`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":28622,"byte_end":28676,"line_start":322,"line_end":322,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":28981,"byte_end":28990,"line_start":333,"line_end":333,"column_start":12,"column_end":21},"name":"reset_eta","qualname":"<ProgressBar>::reset_eta","value":"fn reset_eta(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Resets the ETA calculation","sig":null,"attributes":[{"value":"/ Resets the ETA calculation","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":28821,"byte_end":28851,"line_start":329,"line_end":329,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":28856,"byte_end":28859,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ This can be useful if the progress bars made a large jump or was paused for a prolonged","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":28864,"byte_end":28955,"line_start":331,"line_end":331,"column_start":5,"column_end":96}},{"value":"/ time.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":28960,"byte_end":28969,"line_start":332,"line_end":332,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":29137,"byte_end":29150,"line_start":340,"line_end":340,"column_start":12,"column_end":25},"name":"reset_elapsed","qualname":"<ProgressBar>::reset_elapsed","value":"fn reset_elapsed(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Resets elapsed time\n","sig":null,"attributes":[{"value":"/ Resets elapsed time","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":29102,"byte_end":29125,"line_start":339,"line_end":339,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":29318,"byte_end":29323,"line_start":347,"line_end":347,"column_start":12,"column_end":17},"name":"reset","qualname":"<ProgressBar>::reset","value":"fn reset(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Resets all of the progress bar state\n","sig":null,"attributes":[{"value":"/ Resets all of the progress bar state","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":29266,"byte_end":29306,"line_start":346,"line_end":346,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":29630,"byte_end":29636,"line_start":358,"line_end":358,"column_start":12,"column_end":18},"name":"finish","qualname":"<ProgressBar>::finish","value":"fn finish(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Finishes the progress bar and leaves the current message\n","sig":null,"attributes":[{"value":"/ Finishes the progress bar and leaves the current message","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":29558,"byte_end":29618,"line_start":357,"line_end":357,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":29794,"byte_end":29815,"line_start":363,"line_end":363,"column_start":12,"column_end":33},"name":"finish_at_current_pos","qualname":"<ProgressBar>::finish_at_current_pos","value":"fn finish_at_current_pos(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Finishes the progress bar at current position and leaves the current message\n","sig":null,"attributes":[{"value":"/ Finishes the progress bar at current position and leaves the current message","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":29702,"byte_end":29782,"line_start":362,"line_end":362,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":30092,"byte_end":30111,"line_start":371,"line_end":371,"column_start":12,"column_end":31},"name":"finish_with_message","qualname":"<ProgressBar>::finish_with_message","value":"fn finish_with_message<impl Into<Cow<'static, str>>>(&Self,\nimpl Into<Cow<'static, str>>) where impl Into<Cow<'static, str>>: Into<Cow>","parent":null,"children":[],"decl_id":null,"docs":" Finishes the progress bar and sets a message","sig":null,"attributes":[{"value":"/ Finishes the progress bar and sets a message","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":29896,"byte_end":29944,"line_start":367,"line_end":367,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":29949,"byte_end":29952,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ For the message to be visible, the `{msg}` placeholder must be present in the template (see","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":29957,"byte_end":30052,"line_start":369,"line_end":369,"column_start":5,"column_end":100}},{"value":"/ [`ProgressStyle`]).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":30057,"byte_end":30080,"line_start":370,"line_end":370,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":30294,"byte_end":30310,"line_start":376,"line_end":376,"column_start":12,"column_end":28},"name":"finish_and_clear","qualname":"<ProgressBar>::finish_and_clear","value":"fn finish_and_clear(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Finishes the progress bar and completely clears it\n","sig":null,"attributes":[{"value":"/ Finishes the progress bar and completely clears it","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":30228,"byte_end":30282,"line_start":375,"line_end":375,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":30471,"byte_end":30478,"line_start":381,"line_end":381,"column_start":12,"column_end":19},"name":"abandon","qualname":"<ProgressBar>::abandon","value":"fn abandon(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Finishes the progress bar and leaves the current message and progress\n","sig":null,"attributes":[{"value":"/ Finishes the progress bar and leaves the current message and progress","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":30386,"byte_end":30459,"line_start":380,"line_end":380,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":30774,"byte_end":30794,"line_start":389,"line_end":389,"column_start":12,"column_end":32},"name":"abandon_with_message","qualname":"<ProgressBar>::abandon_with_message","value":"fn abandon_with_message<impl Into<Cow<'static, str>>>(&Self,\nimpl Into<Cow<'static, str>>) where impl Into<Cow<'static, str>>: Into<Cow>","parent":null,"children":[],"decl_id":null,"docs":" Finishes the progress bar and sets a message, and leaves the current progress","sig":null,"attributes":[{"value":"/ Finishes the progress bar and sets a message, and leaves the current progress","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":30545,"byte_end":30626,"line_start":385,"line_end":385,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":30631,"byte_end":30634,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ For the message to be visible, the `{msg}` placeholder must be present in the template (see","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":30639,"byte_end":30734,"line_start":387,"line_end":387,"column_start":5,"column_end":100}},{"value":"/ [`ProgressStyle`]).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":30739,"byte_end":30762,"line_start":388,"line_end":388,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":31056,"byte_end":31074,"line_start":396,"line_end":396,"column_start":12,"column_end":30},"name":"finish_using_style","qualname":"<ProgressBar>::finish_using_style","value":"fn finish_using_style(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Finishes the progress bar using the behavior stored in the [`ProgressStyle`]","sig":null,"attributes":[{"value":"/ Finishes the progress bar using the behavior stored in the [`ProgressStyle`]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":30912,"byte_end":30992,"line_start":393,"line_end":393,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":30997,"byte_end":31000,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ See [`ProgressStyle::on_finish()`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":31005,"byte_end":31044,"line_start":395,"line_end":395,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":31776,"byte_end":31791,"line_start":413,"line_end":413,"column_start":12,"column_end":27},"name":"set_draw_target","qualname":"<ProgressBar>::set_draw_target","value":"fn set_draw_target(&Self, ProgressDrawTarget)","parent":null,"children":[],"decl_id":null,"docs":" Sets a different draw target for the progress bar","sig":null,"attributes":[{"value":"/ Sets a different draw target for the progress bar","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":31152,"byte_end":31205,"line_start":400,"line_end":400,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":31210,"byte_end":31213,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ This can be used to draw the progress bar to stderr (this is the default):","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":31218,"byte_end":31296,"line_start":402,"line_end":402,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":31301,"byte_end":31304,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":31309,"byte_end":31327,"line_start":404,"line_end":404,"column_start":5,"column_end":23}},{"value":"/ # use indicatif::{ProgressBar, ProgressDrawTarget};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":31332,"byte_end":31387,"line_start":405,"line_end":405,"column_start":5,"column_end":60}},{"value":"/ let pb = ProgressBar::new(100);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":31392,"byte_end":31427,"line_start":406,"line_end":406,"column_start":5,"column_end":40}},{"value":"/ pb.set_draw_target(ProgressDrawTarget::stderr());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":31432,"byte_end":31485,"line_start":407,"line_end":407,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":31490,"byte_end":31497,"line_start":408,"line_end":408,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":31502,"byte_end":31505,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ **Note:** Calling this method on a [`ProgressBar`] linked with a [`MultiProgress`] (after","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":31510,"byte_end":31603,"line_start":410,"line_end":410,"column_start":5,"column_end":98}},{"value":"/ running [`MultiProgress::add`]) will unlink this progress bar. If you don't want this","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":31608,"byte_end":31697,"line_start":411,"line_end":411,"column_start":5,"column_end":94}},{"value":"/ behavior, call [`MultiProgress::set_draw_target`] instead.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":31702,"byte_end":31764,"line_start":412,"line_end":412,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":32251,"byte_end":32260,"line_start":429,"line_end":429,"column_start":12,"column_end":21},"name":"wrap_iter","qualname":"<ProgressBar>::wrap_iter","value":"fn wrap_iter<It>(&Self, It) -> ProgressBarIter<It> where It: Iterator","parent":null,"children":[],"decl_id":null,"docs":" Wraps an [`Iterator`] with the progress bar","sig":null,"attributes":[{"value":"/ Wraps an [`Iterator`] with the progress bar","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":31968,"byte_end":32015,"line_start":419,"line_end":419,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":32020,"byte_end":32023,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":32028,"byte_end":32046,"line_start":421,"line_end":421,"column_start":5,"column_end":23}},{"value":"/ # use indicatif::ProgressBar;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":32051,"byte_end":32084,"line_start":422,"line_end":422,"column_start":5,"column_end":38}},{"value":"/ let v = vec![1, 2, 3];","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":32089,"byte_end":32115,"line_start":423,"line_end":423,"column_start":5,"column_end":31}},{"value":"/ let pb = ProgressBar::new(3);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":32120,"byte_end":32153,"line_start":424,"line_end":424,"column_start":5,"column_end":38}},{"value":"/ for item in pb.wrap_iter(v.iter()) {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":32158,"byte_end":32198,"line_start":425,"line_end":425,"column_start":5,"column_end":45}},{"value":"/     // ...","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":32203,"byte_end":32217,"line_start":426,"line_end":426,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":32222,"byte_end":32227,"line_start":427,"line_end":427,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":32232,"byte_end":32239,"line_start":428,"line_end":428,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":32844,"byte_end":32853,"line_start":447,"line_end":447,"column_start":12,"column_end":21},"name":"wrap_read","qualname":"<ProgressBar>::wrap_read","value":"fn wrap_read<R>(&Self, R) -> ProgressBarIter<R> where R: io::Read","parent":null,"children":[],"decl_id":null,"docs":" Wraps an [`io::Read`] with the progress bar","sig":null,"attributes":[{"value":"/ Wraps an [`io::Read`] with the progress bar","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":32365,"byte_end":32412,"line_start":433,"line_end":433,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":32417,"byte_end":32420,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":32425,"byte_end":32443,"line_start":435,"line_end":435,"column_start":5,"column_end":23}},{"value":"/ # use std::fs::File;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":32448,"byte_end":32472,"line_start":436,"line_end":436,"column_start":5,"column_end":29}},{"value":"/ # use std::io;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":32477,"byte_end":32495,"line_start":437,"line_end":437,"column_start":5,"column_end":23}},{"value":"/ # use indicatif::ProgressBar;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":32500,"byte_end":32533,"line_start":438,"line_end":438,"column_start":5,"column_end":38}},{"value":"/ # fn test () -> io::Result<()> {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":32538,"byte_end":32574,"line_start":439,"line_end":439,"column_start":5,"column_end":41}},{"value":"/ let source = File::open(\"work.txt\")?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":32579,"byte_end":32620,"line_start":440,"line_end":440,"column_start":5,"column_end":46}},{"value":"/ let mut target = File::create(\"done.txt\")?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":32625,"byte_end":32672,"line_start":441,"line_end":441,"column_start":5,"column_end":52}},{"value":"/ let pb = ProgressBar::new(source.metadata()?.len());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":32677,"byte_end":32733,"line_start":442,"line_end":442,"column_start":5,"column_end":61}},{"value":"/ io::copy(&mut pb.wrap_read(source), &mut target);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":32738,"byte_end":32791,"line_start":443,"line_end":443,"column_start":5,"column_end":58}},{"value":"/ # Ok(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":32796,"byte_end":32808,"line_start":444,"line_end":444,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":32813,"byte_end":32820,"line_start":445,"line_end":445,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":32825,"byte_end":32832,"line_start":446,"line_end":446,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":33493,"byte_end":33503,"line_start":468,"line_end":468,"column_start":12,"column_end":22},"name":"wrap_write","qualname":"<ProgressBar>::wrap_write","value":"fn wrap_write<W>(&Self, W) -> ProgressBarIter<W> where W: io::Write","parent":null,"children":[],"decl_id":null,"docs":" Wraps an [`io::Write`] with the progress bar","sig":null,"attributes":[{"value":"/ Wraps an [`io::Write`] with the progress bar","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":33012,"byte_end":33060,"line_start":454,"line_end":454,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":33065,"byte_end":33068,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":33073,"byte_end":33091,"line_start":456,"line_end":456,"column_start":5,"column_end":23}},{"value":"/ # use std::fs::File;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":33096,"byte_end":33120,"line_start":457,"line_end":457,"column_start":5,"column_end":29}},{"value":"/ # use std::io;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":33125,"byte_end":33143,"line_start":458,"line_end":458,"column_start":5,"column_end":23}},{"value":"/ # use indicatif::ProgressBar;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":33148,"byte_end":33181,"line_start":459,"line_end":459,"column_start":5,"column_end":38}},{"value":"/ # fn test () -> io::Result<()> {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":33186,"byte_end":33222,"line_start":460,"line_end":460,"column_start":5,"column_end":41}},{"value":"/ let mut source = File::open(\"work.txt\")?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":33227,"byte_end":33272,"line_start":461,"line_end":461,"column_start":5,"column_end":50}},{"value":"/ let target = File::create(\"done.txt\")?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":33277,"byte_end":33320,"line_start":462,"line_end":462,"column_start":5,"column_end":48}},{"value":"/ let pb = ProgressBar::new(source.metadata()?.len());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":33325,"byte_end":33381,"line_start":463,"line_end":463,"column_start":5,"column_end":61}},{"value":"/ io::copy(&mut source, &mut pb.wrap_write(target));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":33386,"byte_end":33440,"line_start":464,"line_end":464,"column_start":5,"column_end":59}},{"value":"/ # Ok(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":33445,"byte_end":33457,"line_start":465,"line_end":465,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":33462,"byte_end":33469,"line_start":466,"line_end":466,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":33474,"byte_end":33481,"line_start":467,"line_end":467,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":33913,"byte_end":33921,"line_start":482,"line_end":482,"column_start":12,"column_end":20},"name":"position","qualname":"<ProgressBar>::position","value":"fn position(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the current position\n","sig":null,"attributes":[{"value":"/ Returns the current position","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":33869,"byte_end":33901,"line_start":481,"line_end":481,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":34030,"byte_end":34036,"line_start":487,"line_end":487,"column_start":12,"column_end":18},"name":"length","qualname":"<ProgressBar>::length","value":"fn length(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the current length\n","sig":null,"attributes":[{"value":"/ Returns the current length","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":33988,"byte_end":34018,"line_start":486,"line_end":486,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":34142,"byte_end":34145,"line_start":492,"line_end":492,"column_start":12,"column_end":15},"name":"eta","qualname":"<ProgressBar>::eta","value":"fn eta(&Self) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the current ETA\n","sig":null,"attributes":[{"value":"/ Returns the current ETA","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":34103,"byte_end":34130,"line_start":491,"line_end":491,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":34271,"byte_end":34278,"line_start":497,"line_end":497,"column_start":12,"column_end":19},"name":"per_sec","qualname":"<ProgressBar>::per_sec","value":"fn per_sec(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the current rate of progress\n","sig":null,"attributes":[{"value":"/ Returns the current rate of progress","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":34219,"byte_end":34259,"line_start":496,"line_end":496,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":34404,"byte_end":34412,"line_start":502,"line_end":502,"column_start":12,"column_end":20},"name":"duration","qualname":"<ProgressBar>::duration","value":"fn duration(&Self) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the current expected duration\n","sig":null,"attributes":[{"value":"/ Returns the current expected duration","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":34351,"byte_end":34392,"line_start":501,"line_end":501,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":34539,"byte_end":34546,"line_start":507,"line_end":507,"column_start":12,"column_end":19},"name":"elapsed","qualname":"<ProgressBar>::elapsed","value":"fn elapsed(&Self) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the current elapsed time\n","sig":null,"attributes":[{"value":"/ Returns the current elapsed time","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":34491,"byte_end":34527,"line_start":506,"line_end":506,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":243},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":34699,"byte_end":34712,"line_start":513,"line_end":513,"column_start":12,"column_end":25},"name":"MultiProgress","qualname":"::progress_bar::MultiProgress","value":"MultiProgress {  }","parent":null,"children":[{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247}],"decl_id":null,"docs":" Manages multiple progress bars from different threads\n","sig":null,"attributes":[{"value":"/ Manages multiple progress bars from different threads","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":34630,"byte_end":34687,"line_start":512,"line_end":512,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":34920,"byte_end":34923,"line_start":521,"line_end":521,"column_start":8,"column_end":11},"name":"fmt","qualname":"<MultiProgress as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":35113,"byte_end":35120,"line_start":529,"line_end":529,"column_start":8,"column_end":15},"name":"default","qualname":"<MultiProgress as std::default::Default>::default","value":"fn default() -> MultiProgress","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":35530,"byte_end":35533,"line_start":540,"line_end":540,"column_start":12,"column_end":15},"name":"new","qualname":"<MultiProgress>::new","value":"fn new() -> MultiProgress","parent":null,"children":[],"decl_id":null,"docs":" Creates a new multi progress object.","sig":null,"attributes":[{"value":"/ Creates a new multi progress object.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":35246,"byte_end":35286,"line_start":535,"line_end":535,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":35291,"byte_end":35294,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ Progress bars added to this object by default draw directly to stderr, and refresh","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":35299,"byte_end":35385,"line_start":537,"line_end":537,"column_start":5,"column_end":91}},{"value":"/ a maximum of 15 times a second. To change the refresh rate set the draw target to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":35390,"byte_end":35475,"line_start":538,"line_end":538,"column_start":5,"column_end":90}},{"value":"/ one with a different refresh rate.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":35480,"byte_end":35518,"line_start":539,"line_end":539,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":35678,"byte_end":35694,"line_start":545,"line_end":545,"column_start":12,"column_end":28},"name":"with_draw_target","qualname":"<MultiProgress>::with_draw_target","value":"fn with_draw_target(ProgressDrawTarget) -> MultiProgress","parent":null,"children":[],"decl_id":null,"docs":" Creates a new multi progress object with the given draw target.\n","sig":null,"attributes":[{"value":"/ Creates a new multi progress object with the given draw target.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":35599,"byte_end":35666,"line_start":544,"line_end":544,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":36226,"byte_end":36241,"line_start":562,"line_end":562,"column_start":12,"column_end":27},"name":"set_draw_target","qualname":"<MultiProgress>::set_draw_target","value":"fn set_draw_target(&Self, ProgressDrawTarget)","parent":null,"children":[],"decl_id":null,"docs":" Sets a different draw target for the multiprogress bar.\n","sig":null,"attributes":[{"value":"/ Sets a different draw target for the multiprogress bar.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":36155,"byte_end":36214,"line_start":561,"line_end":561,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":36646,"byte_end":36661,"line_start":572,"line_end":572,"column_start":12,"column_end":27},"name":"set_move_cursor","qualname":"<MultiProgress>::set_move_cursor","value":"fn set_move_cursor(&Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Set whether we should try to move the cursor when possible instead of clearing lines.","sig":null,"attributes":[{"value":"/ Set whether we should try to move the cursor when possible instead of clearing lines.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":36419,"byte_end":36508,"line_start":568,"line_end":568,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":36513,"byte_end":36516,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ This can reduce flickering, but do not enable it if you intend to change the number of","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":36521,"byte_end":36611,"line_start":570,"line_end":570,"column_start":5,"column_end":95}},{"value":"/ progress bars.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":36616,"byte_end":36634,"line_start":571,"line_end":571,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":37011,"byte_end":37014,"line_start":581,"line_end":581,"column_start":12,"column_end":15},"name":"add","qualname":"<MultiProgress>::add","value":"fn add(&Self, ProgressBar) -> ProgressBar","parent":null,"children":[],"decl_id":null,"docs":" Adds a progress bar.","sig":null,"attributes":[{"value":"/ Adds a progress bar.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":36764,"byte_end":36788,"line_start":576,"line_end":576,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":36793,"byte_end":36796,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ The progress bar added will have the draw target changed to a","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":36801,"byte_end":36866,"line_start":578,"line_end":578,"column_start":5,"column_end":70}},{"value":"/ remote draw target that is intercepted by the multi progress","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":36871,"byte_end":36935,"line_start":579,"line_end":579,"column_start":5,"column_end":69}},{"value":"/ object overriding custom `ProgressDrawTarget` settings.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":36940,"byte_end":36999,"line_start":580,"line_end":580,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":37491,"byte_end":37497,"line_start":593,"line_end":593,"column_start":12,"column_end":18},"name":"insert","qualname":"<MultiProgress>::insert","value":"fn insert(&Self, usize, ProgressBar) -> ProgressBar","parent":null,"children":[],"decl_id":null,"docs":" Inserts a progress bar.","sig":null,"attributes":[{"value":"/ Inserts a progress bar.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":37095,"byte_end":37122,"line_start":585,"line_end":585,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":37127,"byte_end":37130,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ The progress bar inserted at position `index` will have the draw","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":37135,"byte_end":37203,"line_start":587,"line_end":587,"column_start":5,"column_end":73}},{"value":"/ target changed to a remote draw target that is intercepted by the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":37208,"byte_end":37277,"line_start":588,"line_end":588,"column_start":5,"column_end":74}},{"value":"/ multi progress object overriding custom `ProgressDrawTarget` settings.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":37282,"byte_end":37356,"line_start":589,"line_end":589,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":37361,"byte_end":37364,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ If `index >= MultiProgressState::objects.len()`, the progress bar","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":37369,"byte_end":37438,"line_start":591,"line_end":591,"column_start":5,"column_end":74}},{"value":"/ is added to the end of the list.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":37443,"byte_end":37479,"line_start":592,"line_end":592,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":38850,"byte_end":38856,"line_start":636,"line_end":636,"column_start":12,"column_end":18},"name":"remove","qualname":"<MultiProgress>::remove","value":"fn remove(&Self, &ProgressBar)","parent":null,"children":[],"decl_id":null,"docs":" Removes a progress bar.","sig":null,"attributes":[{"value":"/ Removes a progress bar.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":38536,"byte_end":38563,"line_start":630,"line_end":630,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":38568,"byte_end":38571,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ The progress bar is removed only if it was previously inserted or added","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":38576,"byte_end":38651,"line_start":632,"line_end":632,"column_start":5,"column_end":80}},{"value":"/ by the methods `MultiProgress::insert` or `MultiProgress::add`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":38656,"byte_end":38723,"line_start":633,"line_end":633,"column_start":5,"column_end":72}},{"value":"/ If the passed progress bar does not satisfy the condition above,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":38728,"byte_end":38796,"line_start":634,"line_end":634,"column_start":5,"column_end":73}},{"value":"/ the `remove` method does nothing.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":38801,"byte_end":38838,"line_start":635,"line_end":635,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":39552,"byte_end":39556,"line_start":654,"line_end":654,"column_start":12,"column_end":16},"name":"join","qualname":"<MultiProgress>::join","value":"fn join(&Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Waits for all progress bars to report that they are finished.","sig":null,"attributes":[{"value":"/ Waits for all progress bars to report that they are finished.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":39301,"byte_end":39366,"line_start":649,"line_end":649,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":39371,"byte_end":39374,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ You need to call this as this will request the draw instructions","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":39379,"byte_end":39447,"line_start":651,"line_end":651,"column_start":5,"column_end":73}},{"value":"/ from the remote progress bars.  Not calling this will deadlock","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":39452,"byte_end":39518,"line_start":652,"line_end":652,"column_start":5,"column_end":71}},{"value":"/ your program.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":39523,"byte_end":39540,"line_start":653,"line_end":653,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":39698,"byte_end":39712,"line_start":659,"line_end":659,"column_start":12,"column_end":26},"name":"join_and_clear","qualname":"<MultiProgress>::join_and_clear","value":"fn join_and_clear(&Self) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Works like `join` but clears the progress bar in the end.\n","sig":null,"attributes":[{"value":"/ Works like `join` but clears the progress bar in the end.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":39625,"byte_end":39686,"line_start":658,"line_end":658,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":625},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":43952,"byte_end":43967,"line_start":783,"line_end":783,"column_start":12,"column_end":27},"name":"WeakProgressBar","qualname":"::progress_bar::WeakProgressBar","value":"WeakProgressBar {  }","parent":null,"children":[{"krate":0,"index":626}],"decl_id":null,"docs":" A weak reference to a `ProgressBar`.","sig":null,"attributes":[{"value":"/ A weak reference to a `ProgressBar`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":43820,"byte_end":43860,"line_start":779,"line_end":779,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":43861,"byte_end":43864,"line_start":780,"line_end":780,"column_start":1,"column_end":4}},{"value":"/ Useful for creating custom steady tick implementations","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":43865,"byte_end":43923,"line_start":781,"line_end":781,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":44288,"byte_end":44295,"line_start":792,"line_end":792,"column_start":12,"column_end":19},"name":"upgrade","qualname":"<WeakProgressBar>::upgrade","value":"fn upgrade(&Self) -> Option<ProgressBar>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to upgrade the Weak pointer to a [`ProgressBar`], delaying dropping of the inner\n value if successful. Returns `None` if the inner value has since been dropped.","sig":null,"attributes":[{"value":"/ Attempts to upgrade the Weak pointer to a [`ProgressBar`], delaying dropping of the inner","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":44039,"byte_end":44132,"line_start":788,"line_end":788,"column_start":5,"column_end":98}},{"value":"/ value if successful. Returns `None` if the inner value has since been dropped.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":44137,"byte_end":44219,"line_start":789,"line_end":789,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":44224,"byte_end":44227,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ [`ProgressBar`]: struct.ProgressBar.html","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":44232,"byte_end":44276,"line_start":791,"line_end":791,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":390},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":60042,"byte_end":60060,"line_start":337,"line_end":337,"column_start":12,"column_end":30},"name":"ProgressDrawTarget","qualname":"::state::ProgressDrawTarget","value":"ProgressDrawTarget {  }","parent":null,"children":[{"krate":0,"index":391}],"decl_id":null,"docs":" Target for draw operations","sig":null,"attributes":[{"value":"/ Target for draw operations","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":59765,"byte_end":59795,"line_start":331,"line_end":331,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":59796,"byte_end":59799,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ This tells a progress bar or a multi progress object where to paint to.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":59800,"byte_end":59875,"line_start":333,"line_end":333,"column_start":1,"column_end":76}},{"value":"/ The draw target is a stateful wrapper over a drawing destination and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":59876,"byte_end":59948,"line_start":334,"line_end":334,"column_start":1,"column_end":73}},{"value":"/ internally optimizes how often the state is painted to the output","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":59949,"byte_end":60018,"line_start":335,"line_end":335,"column_start":1,"column_end":70}},{"value":"/ device.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":60019,"byte_end":60030,"line_start":336,"line_end":336,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":60294,"byte_end":60300,"line_start":345,"line_end":345,"column_start":12,"column_end":18},"name":"stdout","qualname":"<ProgressDrawTarget>::stdout","value":"fn stdout() -> ProgressDrawTarget","parent":null,"children":[],"decl_id":null,"docs":" Draw to a buffered stdout terminal at a max of 15 times a second.","sig":null,"attributes":[{"value":"/ Draw to a buffered stdout terminal at a max of 15 times a second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":60141,"byte_end":60210,"line_start":342,"line_end":342,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":60215,"byte_end":60218,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ For more information see `ProgressDrawTarget::to_term`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":60223,"byte_end":60282,"line_start":344,"line_end":344,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":60613,"byte_end":60619,"line_start":353,"line_end":353,"column_start":12,"column_end":18},"name":"stderr","qualname":"<ProgressDrawTarget>::stderr","value":"fn stderr() -> ProgressDrawTarget","parent":null,"children":[],"decl_id":null,"docs":" Draw to a buffered stderr terminal at a max of 15 times a second.","sig":null,"attributes":[{"value":"/ Draw to a buffered stderr terminal at a max of 15 times a second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":60400,"byte_end":60469,"line_start":349,"line_end":349,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":60474,"byte_end":60477,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ This is the default draw target for progress bars.  For more","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":60482,"byte_end":60546,"line_start":351,"line_end":351,"column_start":5,"column_end":69}},{"value":"/ information see `ProgressDrawTarget::to_term`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":60551,"byte_end":60601,"line_start":352,"line_end":352,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":60884,"byte_end":60898,"line_start":360,"line_end":360,"column_start":12,"column_end":26},"name":"stdout_with_hz","qualname":"<ProgressDrawTarget>::stdout_with_hz","value":"fn stdout_with_hz(u64) -> ProgressDrawTarget","parent":null,"children":[],"decl_id":null,"docs":" Draw to a buffered stdout terminal at a max of `refresh_rate` times a second.","sig":null,"attributes":[{"value":"/ Draw to a buffered stdout terminal at a max of `refresh_rate` times a second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":60719,"byte_end":60800,"line_start":357,"line_end":357,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":60805,"byte_end":60808,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ For more information see `ProgressDrawTarget::to_term`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":60813,"byte_end":60872,"line_start":359,"line_end":359,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":61190,"byte_end":61204,"line_start":367,"line_end":367,"column_start":12,"column_end":26},"name":"stderr_with_hz","qualname":"<ProgressDrawTarget>::stderr_with_hz","value":"fn stderr_with_hz(u64) -> ProgressDrawTarget","parent":null,"children":[],"decl_id":null,"docs":" Draw to a buffered stderr terminal at a max of `refresh_rate` times a second.","sig":null,"attributes":[{"value":"/ Draw to a buffered stderr terminal at a max of `refresh_rate` times a second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":61025,"byte_end":61106,"line_start":364,"line_end":364,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":61111,"byte_end":61114,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ For more information see `ProgressDrawTarget::to_term`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":61119,"byte_end":61178,"line_start":366,"line_end":366,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":61666,"byte_end":61677,"line_start":378,"line_end":378,"column_start":12,"column_end":23},"name":"stdout_nohz","qualname":"<ProgressDrawTarget>::stdout_nohz","value":"fn stdout_nohz() -> ProgressDrawTarget","parent":null,"children":[],"decl_id":null,"docs":" Draw to a buffered stdout terminal without max framerate.","sig":null,"attributes":[{"value":"/ Draw to a buffered stdout terminal without max framerate.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":61331,"byte_end":61392,"line_start":371,"line_end":371,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":61397,"byte_end":61400,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ This is useful when data is known to come in very slowly and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":61405,"byte_end":61469,"line_start":373,"line_end":373,"column_start":5,"column_end":69}},{"value":"/ not rendering some updates would be a problem (for instance","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":61474,"byte_end":61537,"line_start":374,"line_end":374,"column_start":5,"column_end":68}},{"value":"/ when messages are used extensively).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":61542,"byte_end":61582,"line_start":375,"line_end":375,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":61587,"byte_end":61590,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ For more information see `ProgressDrawTarget::to_term`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":61595,"byte_end":61654,"line_start":377,"line_end":377,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":62114,"byte_end":62125,"line_start":389,"line_end":389,"column_start":12,"column_end":23},"name":"stderr_nohz","qualname":"<ProgressDrawTarget>::stderr_nohz","value":"fn stderr_nohz() -> ProgressDrawTarget","parent":null,"children":[],"decl_id":null,"docs":" Draw to a buffered stderr terminal without max framerate.","sig":null,"attributes":[{"value":"/ Draw to a buffered stderr terminal without max framerate.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":61779,"byte_end":61840,"line_start":382,"line_end":382,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":61845,"byte_end":61848,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ This is useful when data is known to come in very slowly and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":61853,"byte_end":61917,"line_start":384,"line_end":384,"column_start":5,"column_end":69}},{"value":"/ not rendering some updates would be a problem (for instance","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":61922,"byte_end":61985,"line_start":385,"line_end":385,"column_start":5,"column_end":68}},{"value":"/ when messages are used extensively).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":61990,"byte_end":62030,"line_start":386,"line_end":386,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":62035,"byte_end":62038,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ For more information see `ProgressDrawTarget::to_term`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":62043,"byte_end":62102,"line_start":388,"line_end":388,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":62798,"byte_end":62805,"line_start":403,"line_end":403,"column_start":12,"column_end":19},"name":"to_term","qualname":"<ProgressDrawTarget>::to_term","value":"fn to_term<impl Into<Option<u64>>>(Term, impl Into<Option<u64>>)\n-> ProgressDrawTarget where impl Into<Option<u64>>: Into<Option<u64>>","parent":null,"children":[],"decl_id":null,"docs":" Draw to a terminal, optionally with a specific refresh rate.","sig":null,"attributes":[{"value":"/ Draw to a terminal, optionally with a specific refresh rate.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":62227,"byte_end":62291,"line_start":393,"line_end":393,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":62296,"byte_end":62299,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ Progress bars are by default drawn to terminals however if the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":62304,"byte_end":62370,"line_start":395,"line_end":395,"column_start":5,"column_end":71}},{"value":"/ terminal is not user attended the entire progress bar will be","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":62375,"byte_end":62440,"line_start":396,"line_end":396,"column_start":5,"column_end":70}},{"value":"/ hidden.  This is done so that piping to a file will not produce","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":62445,"byte_end":62512,"line_start":397,"line_end":397,"column_start":5,"column_end":72}},{"value":"/ useless escape codes in that file.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":62517,"byte_end":62555,"line_start":398,"line_end":398,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":62560,"byte_end":62563,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ Will panic if refresh_rate is `Some(0)`. To disable rate limiting use `None` instead.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":62568,"byte_end":62657,"line_start":400,"line_end":400,"column_start":5,"column_end":94}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":62662,"byte_end":62701,"line_start":401,"line_end":401,"column_start":5,"column_end":44}},{"value":"deprecated(since = \"0.16.0\", note =\n\"Use `ProgressDrawTarget::term` instead\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":62706,"byte_end":62786,"line_start":402,"line_end":402,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":63386,"byte_end":63390,"line_start":415,"line_end":415,"column_start":12,"column_end":16},"name":"term","qualname":"<ProgressDrawTarget>::term","value":"fn term<impl Into<Option<u64>>>(Term, impl Into<Option<u64>>)\n-> ProgressDrawTarget where impl Into<Option<u64>>: Into<Option<u64>>","parent":null,"children":[],"decl_id":null,"docs":" Draw to a terminal, optionally with a specific refresh rate.","sig":null,"attributes":[{"value":"/ Draw to a terminal, optionally with a specific refresh rate.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":62944,"byte_end":63008,"line_start":407,"line_end":407,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":63013,"byte_end":63016,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ Progress bars are by default drawn to terminals however if the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":63021,"byte_end":63087,"line_start":409,"line_end":409,"column_start":5,"column_end":71}},{"value":"/ terminal is not user attended the entire progress bar will be","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":63092,"byte_end":63157,"line_start":410,"line_end":410,"column_start":5,"column_end":70}},{"value":"/ hidden.  This is done so that piping to a file will not produce","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":63162,"byte_end":63229,"line_start":411,"line_end":411,"column_start":5,"column_end":72}},{"value":"/ useless escape codes in that file.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":63234,"byte_end":63272,"line_start":412,"line_end":412,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":63277,"byte_end":63280,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ Will panic if refresh_rate is `Some(0)`. To disable rate limiting use `None` instead.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":63285,"byte_end":63374,"line_start":414,"line_end":414,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":63978,"byte_end":63984,"line_start":433,"line_end":433,"column_start":12,"column_end":18},"name":"hidden","qualname":"<ProgressDrawTarget>::hidden","value":"fn hidden() -> ProgressDrawTarget","parent":null,"children":[],"decl_id":null,"docs":" A hidden draw target.","sig":null,"attributes":[{"value":"/ A hidden draw target.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":63871,"byte_end":63896,"line_start":430,"line_end":430,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":63901,"byte_end":63904,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ This forces a progress bar to be not rendered at all.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":63909,"byte_end":63966,"line_start":432,"line_end":432,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":64291,"byte_end":64300,"line_start":443,"line_end":443,"column_start":12,"column_end":21},"name":"is_hidden","qualname":"<ProgressDrawTarget>::is_hidden","value":"fn is_hidden(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the draw target is hidden.","sig":null,"attributes":[{"value":"/ Returns true if the draw target is hidden.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":64111,"byte_end":64157,"line_start":439,"line_end":439,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":64162,"byte_end":64165,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ This is internally used in progress bars to figure out if overhead","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":64170,"byte_end":64240,"line_start":441,"line_end":441,"column_start":5,"column_end":75}},{"value":"/ from drawing can be prevented.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":64245,"byte_end":64279,"line_start":442,"line_end":442,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":649},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":68187,"byte_end":68195,"line_start":24,"line_end":24,"column_start":5,"column_end":13},"name":"AndLeave","qualname":"::style::ProgressFinish::AndLeave","value":"ProgressFinish::AndLeave","parent":{"krate":0,"index":648},"children":[],"decl_id":null,"docs":" Finishes the progress bar and leaves the current message","sig":null,"attributes":[{"value":"/ Finishes the progress bar and leaves the current message","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":68026,"byte_end":68086,"line_start":21,"line_end":21,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":68091,"byte_end":68094,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ Same behavior as calling [`ProgressBar::finish()`](crate::ProgressBar::finish).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":68099,"byte_end":68182,"line_start":23,"line_end":23,"column_start":5,"column_end":88}}]},{"kind":"TupleVariant","id":{"krate":0,"index":651},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":68412,"byte_end":68424,"line_start":28,"line_end":28,"column_start":5,"column_end":17},"name":"AtCurrentPos","qualname":"::style::ProgressFinish::AtCurrentPos","value":"ProgressFinish::AtCurrentPos","parent":{"krate":0,"index":648},"children":[],"decl_id":null,"docs":" Finishes the progress bar at current position and leaves the current message","sig":null,"attributes":[{"value":"/ Finishes the progress bar at current position and leaves the current message","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":68201,"byte_end":68281,"line_start":25,"line_end":25,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":68286,"byte_end":68289,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ Same behavior as calling [`ProgressBar::finish_at_current_pos()`](crate::ProgressBar::finish_at_current_pos).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":68294,"byte_end":68407,"line_start":27,"line_end":27,"column_start":5,"column_end":118}}]},{"kind":"TupleVariant","id":{"krate":0,"index":653},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":68605,"byte_end":68616,"line_start":32,"line_end":32,"column_start":5,"column_end":16},"name":"WithMessage","qualname":"::style::ProgressFinish::WithMessage","value":"ProgressFinish::WithMessage(Cow)","parent":{"krate":0,"index":648},"children":[],"decl_id":null,"docs":" Finishes the progress bar and sets a message","sig":null,"attributes":[{"value":"/ Finishes the progress bar and sets a message","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":68430,"byte_end":68478,"line_start":29,"line_end":29,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":68483,"byte_end":68486,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ Same behavior as calling [`ProgressBar::finish_with_message()`](crate::ProgressBar::finish_with_message).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":68491,"byte_end":68600,"line_start":31,"line_end":31,"column_start":5,"column_end":114}}]},{"kind":"Field","id":{"krate":0,"index":655},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":68617,"byte_end":68634,"line_start":32,"line_end":32,"column_start":17,"column_end":34},"name":"0","qualname":"::style::ProgressFinish::WithMessage::0","value":"std::borrow::Cow<'static, str>","parent":{"krate":0,"index":653},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":656},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":68838,"byte_end":68846,"line_start":36,"line_end":36,"column_start":5,"column_end":13},"name":"AndClear","qualname":"::style::ProgressFinish::AndClear","value":"ProgressFinish::AndClear","parent":{"krate":0,"index":648},"children":[],"decl_id":null,"docs":" Finishes the progress bar and completely clears it (this is the default)","sig":null,"attributes":[{"value":"/ Finishes the progress bar and completely clears it (this is the default)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":68641,"byte_end":68717,"line_start":33,"line_end":33,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":68722,"byte_end":68725,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ Same behavior as calling [`ProgressBar::finish_and_clear()`](crate::ProgressBar::finish_and_clear).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":68730,"byte_end":68833,"line_start":35,"line_end":35,"column_start":5,"column_end":108}}]},{"kind":"TupleVariant","id":{"krate":0,"index":658},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":69028,"byte_end":69035,"line_start":40,"line_end":40,"column_start":5,"column_end":12},"name":"Abandon","qualname":"::style::ProgressFinish::Abandon","value":"ProgressFinish::Abandon","parent":{"krate":0,"index":648},"children":[],"decl_id":null,"docs":" Finishes the progress bar and leaves the current message and progress","sig":null,"attributes":[{"value":"/ Finishes the progress bar and leaves the current message and progress","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":68852,"byte_end":68925,"line_start":37,"line_end":37,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":68930,"byte_end":68933,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ Same behavior as calling [`ProgressBar::abandon()`](crate::ProgressBar::abandon).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":68938,"byte_end":69023,"line_start":39,"line_end":39,"column_start":5,"column_end":90}}]},{"kind":"TupleVariant","id":{"krate":0,"index":660},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":69251,"byte_end":69269,"line_start":44,"line_end":44,"column_start":5,"column_end":23},"name":"AbandonWithMessage","qualname":"::style::ProgressFinish::AbandonWithMessage","value":"ProgressFinish::AbandonWithMessage(Cow)","parent":{"krate":0,"index":648},"children":[],"decl_id":null,"docs":" Finishes the progress bar and sets a message, and leaves the current progress","sig":null,"attributes":[{"value":"/ Finishes the progress bar and sets a message, and leaves the current progress","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":69041,"byte_end":69122,"line_start":41,"line_end":41,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":69127,"byte_end":69130,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ Same behavior as calling [`ProgressBar::abandon_with_message()`](crate::ProgressBar::abandon_with_message).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":69135,"byte_end":69246,"line_start":43,"line_end":43,"column_start":5,"column_end":116}}]},{"kind":"Field","id":{"krate":0,"index":662},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":69270,"byte_end":69287,"line_start":44,"line_end":44,"column_start":24,"column_end":41},"name":"0","qualname":"::style::ProgressFinish::AbandonWithMessage::0","value":"std::borrow::Cow<'static, str>","parent":{"krate":0,"index":660},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":648},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":68005,"byte_end":68019,"line_start":20,"line_end":20,"column_start":10,"column_end":24},"name":"ProgressFinish","qualname":"::style::ProgressFinish","value":"enum ProgressFinish {\n    AndLeave,\n    AtCurrentPos,\n    WithMessage(Cow),\n    AndClear,\n    Abandon,\n    AbandonWithMessage(Cow),\n}","parent":null,"children":[{"krate":0,"index":649},{"krate":0,"index":651},{"krate":0,"index":653},{"krate":0,"index":656},{"krate":0,"index":658},{"krate":0,"index":660}],"decl_id":null,"docs":" Behavior of a progress bar when it is finished","sig":null,"attributes":[{"value":"/ Behavior of a progress bar when it is finished","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":67636,"byte_end":67686,"line_start":11,"line_end":11,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":67687,"byte_end":67690,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This is invoked when a [`ProgressBar`] or [`ProgressBarIter`] completes and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":67691,"byte_end":67770,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ [`ProgressBar::is_finished`] is false.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":67771,"byte_end":67813,"line_start":14,"line_end":14,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":67814,"byte_end":67817,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`ProgressBar`]: crate::ProgressBar","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":67818,"byte_end":67857,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/ [`ProgressBarIter`]: crate::ProgressBarIter","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":67858,"byte_end":67905,"line_start":17,"line_end":17,"column_start":1,"column_end":48}},{"value":"/ [`ProgressBar::is_finished`]: crate::ProgressBar::is_finished","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":67906,"byte_end":67971,"line_start":18,"line_end":18,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":69334,"byte_end":69341,"line_start":48,"line_end":48,"column_start":8,"column_end":15},"name":"default","qualname":"<ProgressFinish as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":667},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":69471,"byte_end":69484,"line_start":55,"line_end":55,"column_start":12,"column_end":25},"name":"ProgressStyle","qualname":"::style::ProgressStyle","value":"ProgressStyle {  }","parent":null,"children":[{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":671},{"krate":0,"index":672}],"decl_id":null,"docs":" Controls the rendering style of progress bars\n","sig":null,"attributes":[{"value":"/ Controls the rendering style of progress bars","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":69386,"byte_end":69435,"line_start":53,"line_end":53,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":469},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":70787,"byte_end":70798,"line_start":103,"line_end":103,"column_start":12,"column_end":23},"name":"default_bar","qualname":"<ProgressStyle>::default_bar","value":"fn default_bar() -> ProgressStyle","parent":null,"children":[],"decl_id":null,"docs":" Returns the default progress bar style for bars\n","sig":null,"attributes":[{"value":"/ Returns the default progress bar style for bars","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":70724,"byte_end":70775,"line_start":102,"line_end":102,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":71403,"byte_end":71418,"line_start":119,"line_end":119,"column_start":12,"column_end":27},"name":"default_spinner","qualname":"<ProgressStyle>::default_spinner","value":"fn default_spinner() -> ProgressStyle","parent":null,"children":[],"decl_id":null,"docs":" Returns the default progress bar style for spinners\n","sig":null,"attributes":[{"value":"/ Returns the default progress bar style for spinners","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":71336,"byte_end":71391,"line_start":118,"line_end":118,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":473},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":72010,"byte_end":72020,"line_start":135,"line_end":135,"column_start":12,"column_end":22},"name":"tick_chars","qualname":"<ProgressStyle>::tick_chars","value":"fn tick_chars(Self, &str) -> ProgressStyle","parent":null,"children":[],"decl_id":null,"docs":" Sets the tick character sequence for spinners\n","sig":null,"attributes":[{"value":"/ Sets the tick character sequence for spinners","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":71949,"byte_end":71998,"line_start":134,"line_end":134,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":475},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":72492,"byte_end":72504,"line_start":147,"line_end":147,"column_start":12,"column_end":24},"name":"tick_strings","qualname":"<ProgressStyle>::tick_strings","value":"fn tick_strings(Self, &[&str]) -> ProgressStyle","parent":null,"children":[],"decl_id":null,"docs":" Sets the tick string sequence for spinners\n","sig":null,"attributes":[{"value":"/ Sets the tick string sequence for spinners","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":72434,"byte_end":72480,"line_start":146,"line_end":146,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":73133,"byte_end":73147,"line_start":162,"line_end":162,"column_start":12,"column_end":26},"name":"progress_chars","qualname":"<ProgressStyle>::progress_chars","value":"fn progress_chars(Self, &str) -> ProgressStyle","parent":null,"children":[],"decl_id":null,"docs":" Sets the progress characters `(filled, current, to do)`","sig":null,"attributes":[{"value":"/ Sets the progress characters `(filled, current, to do)`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":72924,"byte_end":72983,"line_start":158,"line_end":158,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":72988,"byte_end":72991,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ You can pass more then three for a more detailed display.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":72996,"byte_end":73057,"line_start":160,"line_end":160,"column_start":5,"column_end":66}},{"value":"/ All passed grapheme clusters need to be of equal width.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":73062,"byte_end":73121,"line_start":161,"line_end":161,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":73743,"byte_end":73751,"line_start":177,"line_end":177,"column_start":12,"column_end":20},"name":"template","qualname":"<ProgressStyle>::template","value":"fn template(Self, &str) -> ProgressStyle","parent":null,"children":[],"decl_id":null,"docs":" Sets the template string for the progress bar","sig":null,"attributes":[{"value":"/ Sets the template string for the progress bar","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":73585,"byte_end":73634,"line_start":174,"line_end":174,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":73639,"byte_end":73642,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ Review the [list of template keys](./index.html#templates) for more information.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":73647,"byte_end":73731,"line_start":176,"line_end":176,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":479},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":74350,"byte_end":74359,"line_start":193,"line_end":193,"column_start":12,"column_end":21},"name":"on_finish","qualname":"<ProgressStyle>::on_finish","value":"fn on_finish(Self, ProgressFinish) -> ProgressStyle","parent":null,"children":[],"decl_id":null,"docs":" Sets the finish behavior for the progress bar","sig":null,"attributes":[{"value":"/ Sets the finish behavior for the progress bar","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":73848,"byte_end":73897,"line_start":182,"line_end":182,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":73902,"byte_end":73905,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ This behavior is invoked when [`ProgressBar`] or","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":73910,"byte_end":73962,"line_start":184,"line_end":184,"column_start":5,"column_end":57}},{"value":"/ [`ProgressBarIter`] completes and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":73967,"byte_end":74004,"line_start":185,"line_end":185,"column_start":5,"column_end":42}},{"value":"/ [`ProgressBar::is_finished()`] is false.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":74009,"byte_end":74053,"line_start":186,"line_end":186,"column_start":5,"column_end":49}},{"value":"/ If you don't want the progress bar to be automatically finished then","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":74058,"byte_end":74130,"line_start":187,"line_end":187,"column_start":5,"column_end":77}},{"value":"/ call `on_finish(None)`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":74135,"byte_end":74162,"line_start":188,"line_end":188,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":74167,"byte_end":74170,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ [`ProgressBar`]: crate::ProgressBar","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":74175,"byte_end":74214,"line_start":190,"line_end":190,"column_start":5,"column_end":44}},{"value":"/ [`ProgressBarIter`]: crate::ProgressBarIter","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":74219,"byte_end":74266,"line_start":191,"line_end":191,"column_start":5,"column_end":52}},{"value":"/ [`ProgressBar::is_finished()`]: crate::ProgressBar::is_finished","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":74271,"byte_end":74338,"line_start":192,"line_end":192,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":74608,"byte_end":74621,"line_start":200,"line_end":200,"column_start":12,"column_end":25},"name":"get_tick_char","qualname":"<ProgressStyle>::get_tick_char","value":"fn get_tick_char(&Self, u64) -> char","parent":null,"children":[],"decl_id":null,"docs":" Returns the tick char for a given number\n","sig":null,"attributes":[{"value":"/ Returns the tick char for a given number","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":74470,"byte_end":74514,"line_start":198,"line_end":198,"column_start":5,"column_end":49}},{"value":"deprecated(since = \"0.13.0\", note = \"Deprecated in favor of get_tick_str\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":74519,"byte_end":74596,"line_start":199,"line_end":199,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":74779,"byte_end":74791,"line_start":205,"line_end":205,"column_start":12,"column_end":24},"name":"get_tick_str","qualname":"<ProgressStyle>::get_tick_str","value":"fn get_tick_str(&Self, u64) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns the tick string for a given number\n","sig":null,"attributes":[{"value":"/ Returns the tick string for a given number","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":74721,"byte_end":74767,"line_start":204,"line_end":204,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":75053,"byte_end":75072,"line_start":211,"line_end":211,"column_start":12,"column_end":31},"name":"get_final_tick_char","qualname":"<ProgressStyle>::get_final_tick_char","value":"fn get_final_tick_char(&Self) -> char","parent":null,"children":[],"decl_id":null,"docs":" Returns the tick char for the finished state\n","sig":null,"attributes":[{"value":"/ Returns the tick char for the finished state","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":74905,"byte_end":74953,"line_start":209,"line_end":209,"column_start":5,"column_end":53}},{"value":"deprecated(since = \"0.13.0\", note =\n\"Deprecated in favor of get_final_tick_str\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":74958,"byte_end":75041,"line_start":210,"line_end":210,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":483},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":75227,"byte_end":75245,"line_start":216,"line_end":216,"column_start":12,"column_end":30},"name":"get_final_tick_str","qualname":"<ProgressStyle>::get_final_tick_str","value":"fn get_final_tick_str(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns the tick string for the finished state\n","sig":null,"attributes":[{"value":"/ Returns the tick string for the finished state","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":75165,"byte_end":75215,"line_start":215,"line_end":215,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":75373,"byte_end":75386,"line_start":221,"line_end":221,"column_start":12,"column_end":25},"name":"get_on_finish","qualname":"<ProgressStyle>::get_on_finish","value":"fn get_on_finish(&Self) -> &ProgressFinish","parent":null,"children":[],"decl_id":null,"docs":" Returns the finish behavior\n","sig":null,"attributes":[{"value":"/ Returns the finish behavior","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":75330,"byte_end":75361,"line_start":220,"line_end":220,"column_start":5,"column_end":36}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/format.rs","byte_start":9235,"byte_end":9252,"line_start":26,"line_end":26,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":14}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/format.rs","byte_start":9744,"byte_end":9757,"line_start":44,"line_end":44,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":16}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/format.rs","byte_start":10940,"byte_end":10950,"line_start":77,"line_end":77,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":19}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/format.rs","byte_start":11279,"byte_end":11291,"line_start":86,"line_end":86,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/format.rs","byte_start":11621,"byte_end":11632,"line_start":95,"line_end":95,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/iter.rs","byte_start":13383,"byte_end":13398,"line_start":45,"line_end":45,"column_start":45,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":50},{"krate":0,"index":51}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/iter.rs","byte_start":13748,"byte_end":13763,"line_start":61,"line_end":61,"column_start":50,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":54}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/iter.rs","byte_start":13882,"byte_end":13897,"line_start":67,"line_end":67,"column_start":54,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/iter.rs","byte_start":14229,"byte_end":14244,"line_start":81,"line_end":81,"column_start":42,"column_end":57},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/iter.rs","byte_start":14283,"byte_end":14298,"line_start":83,"line_end":83,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/iter.rs","byte_start":15049,"byte_end":15064,"line_start":109,"line_end":109,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/iter.rs","byte_start":15303,"byte_end":15318,"line_start":120,"line_end":120,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/iter.rs","byte_start":15535,"byte_end":15550,"line_start":129,"line_end":129,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":78},{"krate":0,"index":80},{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/iter.rs","byte_start":16446,"byte_end":16447,"line_start":159,"line_end":159,"column_start":53,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":17953,"byte_end":17964,"line_start":27,"line_end":27,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":18091,"byte_end":18102,"line_start":33,"line_end":33,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":181},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":194},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":200},{"krate":0,"index":202},{"krate":0,"index":204},{"krate":0,"index":206},{"krate":0,"index":209},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":215},{"krate":0,"index":217},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":231},{"krate":0,"index":233},{"krate":0,"index":235},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":34897,"byte_end":34910,"line_start":520,"line_end":520,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":249}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":35055,"byte_end":35068,"line_start":526,"line_end":526,"column_start":22,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":35090,"byte_end":35103,"line_start":528,"line_end":528,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":252}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":35226,"byte_end":35239,"line_start":534,"line_end":534,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":44017,"byte_end":44032,"line_start":787,"line_end":787,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":50558,"byte_end":50571,"line_start":31,"line_end":31,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":350},{"krate":0,"index":353},{"krate":0,"index":355},{"krate":0,"index":357},{"krate":0,"index":359},{"krate":0,"index":362},{"krate":0,"index":364},{"krate":0,"index":366},{"krate":0,"index":369},{"krate":0,"index":370}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":57567,"byte_end":57580,"line_start":249,"line_end":249,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":58348,"byte_end":58366,"line_start":273,"line_end":273,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":59483,"byte_end":59500,"line_start":315,"line_end":315,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":389}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":60116,"byte_end":60134,"line_start":341,"line_end":341,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":401},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":410}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":69310,"byte_end":69324,"line_start":47,"line_end":47,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":70704,"byte_end":70717,"line_start":101,"line_end":101,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":469},{"krate":0,"index":471},{"krate":0,"index":473},{"krate":0,"index":475},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/utils.rs","byte_start":82135,"byte_end":82143,"line_start":36,"line_end":36,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/utils.rs","byte_start":84609,"byte_end":84617,"line_start":115,"line_end":115,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":536}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/utils.rs","byte_start":85332,"byte_end":85343,"line_start":145,"line_end":145,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":539}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/format.rs","byte_start":9235,"byte_end":9252,"line_start":26,"line_end":26,"column_start":23,"column_end":40},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":589},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/format.rs","byte_start":9744,"byte_end":9757,"line_start":44,"line_end":44,"column_start":23,"column_end":36},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":594},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/format.rs","byte_start":10940,"byte_end":10950,"line_start":77,"line_end":77,"column_start":23,"column_end":33},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":599},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/format.rs","byte_start":11279,"byte_end":11291,"line_start":86,"line_end":86,"column_start":23,"column_end":35},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":604},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/format.rs","byte_start":11621,"byte_end":11632,"line_start":95,"line_end":95,"column_start":23,"column_end":34},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":609},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/iter.rs","byte_start":13383,"byte_end":13398,"line_start":45,"line_end":45,"column_start":45,"column_end":60},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":614},"to":{"krate":2,"index":8474}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/iter.rs","byte_start":13748,"byte_end":13763,"line_start":61,"line_end":61,"column_start":50,"column_end":65},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":614},"to":{"krate":2,"index":8348}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/iter.rs","byte_start":13882,"byte_end":13897,"line_start":67,"line_end":67,"column_start":54,"column_end":69},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":614},"to":{"krate":2,"index":8323}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/iter.rs","byte_start":14229,"byte_end":14244,"line_start":81,"line_end":81,"column_start":42,"column_end":57},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":614},"to":{"krate":2,"index":8749}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/iter.rs","byte_start":14283,"byte_end":14298,"line_start":83,"line_end":83,"column_start":32,"column_end":47},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":614},"to":{"krate":1,"index":4540}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/iter.rs","byte_start":15049,"byte_end":15064,"line_start":109,"line_end":109,"column_start":38,"column_end":53},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":614},"to":{"krate":1,"index":4622}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/iter.rs","byte_start":15303,"byte_end":15318,"line_start":120,"line_end":120,"column_start":32,"column_end":47},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":614},"to":{"krate":1,"index":4615}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/iter.rs","byte_start":15535,"byte_end":15550,"line_start":129,"line_end":129,"column_start":34,"column_end":49},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":614},"to":{"krate":1,"index":4597}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/iter.rs","byte_start":16446,"byte_end":16447,"line_start":159,"line_end":159,"column_start":53,"column_end":54},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":85},"to":{"krate":0,"index":41}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":17953,"byte_end":17964,"line_start":27,"line_end":27,"column_start":21,"column_end":32},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":621},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":18091,"byte_end":18102,"line_start":33,"line_end":33,"column_start":6,"column_end":17},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":621},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":34897,"byte_end":34910,"line_start":520,"line_end":520,"column_start":21,"column_end":34},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":243},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":35055,"byte_end":35068,"line_start":526,"line_end":526,"column_start":22,"column_end":35},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":243},"to":{"krate":2,"index":3191}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":35090,"byte_end":35103,"line_start":528,"line_end":528,"column_start":18,"column_end":31},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":243},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":35226,"byte_end":35239,"line_start":534,"line_end":534,"column_start":6,"column_end":19},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":243},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/progress_bar.rs","byte_start":44017,"byte_end":44032,"line_start":787,"line_end":787,"column_start":6,"column_end":21},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":625},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":50558,"byte_end":50571,"line_start":31,"line_end":31,"column_start":6,"column_end":19},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":319},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":57567,"byte_end":57580,"line_start":249,"line_end":249,"column_start":15,"column_end":28},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":319},"to":{"krate":2,"index":3422}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":58348,"byte_end":58366,"line_start":273,"line_end":273,"column_start":6,"column_end":24},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":373},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":59483,"byte_end":59500,"line_start":315,"line_end":315,"column_start":6,"column_end":23},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":629},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/state.rs","byte_start":60116,"byte_end":60134,"line_start":341,"line_end":341,"column_start":6,"column_end":24},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":390},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":69310,"byte_end":69324,"line_start":47,"line_end":47,"column_start":18,"column_end":32},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":648},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/style.rs","byte_start":70704,"byte_end":70717,"line_start":101,"line_end":101,"column_start":6,"column_end":19},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":667},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/utils.rs","byte_start":82135,"byte_end":82143,"line_start":36,"line_end":36,"column_start":6,"column_end":14},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":518},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/utils.rs","byte_start":84609,"byte_end":84617,"line_start":115,"line_end":115,"column_start":21,"column_end":29},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":518},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/indicatif-0.16.2/src/utils.rs","byte_start":85332,"byte_end":85343,"line_start":145,"line_end":145,"column_start":10,"column_end":21},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":695},"to":{"krate":4294967295,"index":4294967295}}]}