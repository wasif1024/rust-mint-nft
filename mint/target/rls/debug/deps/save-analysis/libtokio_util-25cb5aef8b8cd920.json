{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10","program":"/Users/air/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","tokio_util","--edition=2018","/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"codec\"","--cfg","feature=\"default\"","--cfg","feature=\"slab\"","--cfg","feature=\"time\"","-C","metadata=25cb5aef8b8cd920","-C","extra-filename=-25cb5aef8b8cd920","--out-dir","/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps","-L","dependency=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps","--extern","bytes=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libbytes-9550d149b9a13b85.rmeta","--extern","futures_core=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libfutures_core-cf1d923ff497cf49.rmeta","--extern","futures_sink=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libfutures_sink-ad9998d9988d1cd8.rmeta","--extern","log=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/liblog-f7c6bc655c61cd08.rmeta","--extern","pin_project_lite=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libpin_project_lite-23dcf50183249132.rmeta","--extern","slab=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libslab-3a091885bdd250f5.rmeta","--extern","tokio=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libtokio-7b04bdd9b09c183b.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/air/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libtokio_util-25cb5aef8b8cd920.rmeta"},"prelude":{"crate_id":{"name":"tokio_util","disambiguator":[6165144550484402838,0]},"crate_root":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src","external_crates":[{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[4485569597606079733,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","num":2,"id":{"name":"core","disambiguator":[9994580471200982198,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13944031075627487246,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5133993387825513881,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[14116380118705386640,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6269322086078963025,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16152481959168563413,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7897074911849024150,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[7299104579826168146,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2669544452907545777,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[14288251452253695433,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[13943810077905921301,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[2237926517141734526,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[5541021343498733002,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[7188895526679788668,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[15555671723428220450,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[13375000548276363576,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[8920282723255285566,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[2397004371161247654,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","num":20,"id":{"name":"pin_project_lite","disambiguator":[16214617887468495849,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","num":21,"id":{"name":"futures_core","disambiguator":[17540173836599093021,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","num":22,"id":{"name":"futures_sink","disambiguator":[9497018450691456923,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","num":23,"id":{"name":"tokio","disambiguator":[2962388683323727077,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","num":24,"id":{"name":"parking_lot","disambiguator":[14966253135049045735,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","num":25,"id":{"name":"instant","disambiguator":[9036241402852550211,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","num":26,"id":{"name":"cfg_if","disambiguator":[13273704638852766021,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","num":27,"id":{"name":"lock_api","disambiguator":[10127763897422863905,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","num":28,"id":{"name":"scopeguard","disambiguator":[12042798599719570489,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","num":29,"id":{"name":"parking_lot_core","disambiguator":[8453746460189032009,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","num":30,"id":{"name":"smallvec","disambiguator":[5856184447480448040,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","num":31,"id":{"name":"libc","disambiguator":[2594694148884002105,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","num":32,"id":{"name":"mio","disambiguator":[7927576646673556845,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_impl.rs","num":33,"id":{"name":"log","disambiguator":[14675233967093799413,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","num":34,"id":{"name":"bytes","disambiguator":[17363037860664117862,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","num":35,"id":{"name":"once_cell","disambiguator":[3525325367007617747,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","num":36,"id":{"name":"tokio_macros","disambiguator":[11852345796106455181,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","num":37,"id":{"name":"memchr","disambiguator":[14228028058314693917,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","num":38,"id":{"name":"num_cpus","disambiguator":[5214853325863455532,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","num":39,"id":{"name":"signal_hook_registry","disambiguator":[15936637214480815235,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","num":40,"id":{"name":"slab","disambiguator":[17204978413451154944,0]}}],"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","byte_start":0,"byte_end":5378,"line_start":1,"line_end":200,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1105},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16236506,"byte_end":16236516,"line_start":262,"line_end":262,"column_start":28,"column_end":38},"alias_span":null,"name":"BytesCodec","value":"","parent":{"krate":0,"index":425}},{"kind":"Use","ref_id":{"krate":0,"index":475},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16236555,"byte_end":16236562,"line_start":265,"line_end":265,"column_start":24,"column_end":31},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":425}},{"kind":"Use","ref_id":{"krate":0,"index":492},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16236601,"byte_end":16236608,"line_start":268,"line_end":268,"column_start":24,"column_end":31},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":425}},{"kind":"Use","ref_id":{"krate":0,"index":1684},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16236770,"byte_end":16236776,"line_start":275,"line_end":275,"column_start":24,"column_end":30},"alias_span":null,"name":"Framed","value":"","parent":{"krate":0,"index":425}},{"kind":"Use","ref_id":{"krate":0,"index":1141},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16236778,"byte_end":16236789,"line_start":275,"line_end":275,"column_start":32,"column_end":43},"alias_span":null,"name":"FramedParts","value":"","parent":{"krate":0,"index":425}},{"kind":"Use","ref_id":{"krate":0,"index":1643},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16236837,"byte_end":16236847,"line_start":278,"line_end":278,"column_start":28,"column_end":38},"alias_span":null,"name":"FramedRead","value":"","parent":{"krate":0,"index":425}},{"kind":"Use","ref_id":{"krate":0,"index":1602},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16236896,"byte_end":16236907,"line_start":281,"line_end":281,"column_start":29,"column_end":40},"alias_span":null,"name":"FramedWrite","value":"","parent":{"krate":0,"index":425}},{"kind":"Use","ref_id":{"krate":0,"index":1165},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16236969,"byte_end":16236989,"line_start":284,"line_end":284,"column_start":34,"column_end":54},"alias_span":null,"name":"LengthDelimitedCodec","value":"","parent":{"krate":0,"index":425}},{"kind":"Use","ref_id":{"krate":0,"index":922},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16236991,"byte_end":16237016,"line_start":284,"line_end":284,"column_start":56,"column_end":81},"alias_span":null,"name":"LengthDelimitedCodecError","value":"","parent":{"krate":0,"index":425}},{"kind":"Use","ref_id":{"krate":0,"index":1183},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16237065,"byte_end":16237075,"line_start":287,"line_end":287,"column_start":29,"column_end":39},"alias_span":null,"name":"LinesCodec","value":"","parent":{"krate":0,"index":425}},{"kind":"Use","ref_id":{"krate":0,"index":1205},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16237077,"byte_end":16237092,"line_start":287,"line_end":287,"column_start":41,"column_end":56},"alias_span":null,"name":"LinesCodecError","value":"","parent":{"krate":0,"index":425}},{"kind":"Use","ref_id":{"krate":0,"index":1213},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16237157,"byte_end":16237174,"line_start":290,"line_end":290,"column_start":37,"column_end":54},"alias_span":null,"name":"AnyDelimiterCodec","value":"","parent":{"krate":0,"index":425}},{"kind":"Use","ref_id":{"krate":0,"index":1237},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16237176,"byte_end":16237198,"line_start":290,"line_end":290,"column_start":56,"column_end":78},"alias_span":null,"name":"AnyDelimiterCodecError","value":"","parent":{"krate":0,"index":425}},{"kind":"Use","ref_id":{"krate":0,"index":1482},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/mod.rs","byte_start":16331738,"byte_end":16331748,"line_start":18,"line_end":18,"column_start":22,"column_end":32},"alias_span":null,"name":"DelayQueue","value":"","parent":{"krate":0,"index":1245}},{"kind":"Use","ref_id":{"krate":0,"index":1536},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mod.rs","byte_start":6970,"byte_end":6979,"line_start":4,"line_end":4,"column_start":37,"column_end":46},"alias_span":null,"name":"DropGuard","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":81},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mod.rs","byte_start":6981,"byte_end":6998,"line_start":4,"line_end":4,"column_start":48,"column_end":65},"alias_span":null,"name":"CancellationToken","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1540},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mod.rs","byte_start":7000,"byte_end":7025,"line_start":4,"line_end":4,"column_start":67,"column_end":92},"alias_span":null,"name":"WaitForCancellationFuture","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1577},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mod.rs","byte_start":7053,"byte_end":7063,"line_start":7,"line_end":7,"column_start":15,"column_end":25},"alias_span":null,"name":"PollSender","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":215},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mod.rs","byte_start":7110,"byte_end":7123,"line_start":10,"line_end":10,"column_start":25,"column_end":38},"alias_span":null,"name":"PollSemaphore","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":272},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mod.rs","byte_start":7166,"byte_end":7183,"line_start":13,"line_end":13,"column_start":23,"column_end":40},"alias_span":null,"name":"ReusableBoxFuture","value":"","parent":{"krate":0,"index":14}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","byte_start":0,"byte_end":5378,"line_start":1,"line_end":200,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":10},{"krate":0,"index":425},{"krate":0,"index":1245},{"krate":0,"index":14},{"krate":0,"index":307},{"krate":0,"index":376}],"decl_id":null,"docs":" Utilities for working with Tokio.","sig":null,"attributes":[{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","byte_start":0,"byte_end":40,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\nunreachable_pub)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","byte_start":41,"byte_end":147,"line_start":2,"line_end":7,"column_start":1,"column_end":3}},{"value":"/ Utilities for working with Tokio.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","byte_start":365,"byte_end":402,"line_start":15,"line_end":15,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","byte_start":403,"byte_end":406,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This crate is not versioned in lockstep with the core","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","byte_start":407,"byte_end":464,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"/ [`tokio`] crate. However, `tokio-util` _will_ respect Rust's","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","byte_start":465,"byte_end":529,"line_start":18,"line_end":18,"column_start":1,"column_end":65}},{"value":"/ semantic versioning policy, especially with regard to breaking changes.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","byte_start":530,"byte_end":605,"line_start":19,"line_end":19,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","byte_start":606,"byte_end":609,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [`tokio`]: https://docs.rs/tokio","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","byte_start":610,"byte_end":646,"line_start":21,"line_end":21,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":425},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codec","qualname":"::codec","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","parent":null,"children":[{"krate":0,"index":426},{"krate":0,"index":455},{"krate":0,"index":458},{"krate":0,"index":482},{"krate":0,"index":485},{"krate":0,"index":496},{"krate":0,"index":499},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":600},{"krate":0,"index":603},{"krate":0,"index":606},{"krate":0,"index":609},{"krate":0,"index":707},{"krate":0,"index":708},{"krate":0,"index":711},{"krate":0,"index":714},{"krate":0,"index":787},{"krate":0,"index":790},{"krate":0,"index":865},{"krate":0,"index":868},{"krate":0,"index":967},{"krate":0,"index":968},{"krate":0,"index":971},{"krate":0,"index":974},{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1035},{"krate":0,"index":1038},{"krate":0,"index":1098},{"krate":0,"index":1099},{"krate":0,"index":1102}],"decl_id":null,"docs":" Adaptors from AsyncRead/AsyncWrite to Stream/Sink","sig":null,"attributes":[{"value":"cfg(feature = \"codec\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/cfg.rs","byte_start":5454,"byte_end":5479,"line_start":4,"line_end":4,"column_start":13,"column_end":38}},{"value":"/ Adaptors from AsyncRead/AsyncWrite to Stream/Sink","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16226234,"byte_end":16226287,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16226288,"byte_end":16226291,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16226292,"byte_end":16226367,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\".","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16226368,"byte_end":16226433,"line_start":4,"line_end":4,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16226434,"byte_end":16226437,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module contains adapters to go from streams of bytes, [`AsyncRead`] and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16226438,"byte_end":16226518,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ [`AsyncWrite`], to framed streams implementing [`Sink`] and [`Stream`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16226519,"byte_end":16226594,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ Framed streams are also known as transports.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16226595,"byte_end":16226643,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16226644,"byte_end":16226647,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # The Decoder trait","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16226648,"byte_end":16226671,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16226672,"byte_end":16226675,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A [`Decoder`] is used together with [`FramedRead`] or [`Framed`] to turn an","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16226676,"byte_end":16226755,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ [`AsyncRead`] into a [`Stream`]. The job of the decoder trait is to specify","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16226756,"byte_end":16226835,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ how sequences of bytes are turned into a sequence of frames, and to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16226836,"byte_end":16226907,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/ determine where the boundaries between frames are.  The job of the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16226908,"byte_end":16226978,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ `FramedRead` is to repeatedly switch between reading more data from the IO","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16226979,"byte_end":16227057,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ resource, and asking the decoder whether we have received enough data to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16227058,"byte_end":16227134,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ decode another frame of data.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16227135,"byte_end":16227168,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16227169,"byte_end":16227172,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Decoder` trait is the [`decode`] method. This method","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16227173,"byte_end":16227253,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ takes as argument the data that has been read so far, and when it is called,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16227254,"byte_end":16227334,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ it will be in one of the following situations:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16227335,"byte_end":16227385,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16227386,"byte_end":16227389,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/  1. The buffer contains less than a full frame.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16227390,"byte_end":16227441,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/  2. The buffer contains exactly a full frame.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16227442,"byte_end":16227491,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/  3. The buffer contains more than a full frame.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16227492,"byte_end":16227543,"line_start":26,"line_end":26,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16227544,"byte_end":16227547,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ In the first situation, the decoder should return `Ok(None)`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16227548,"byte_end":16227613,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16227614,"byte_end":16227617,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ In the second situation, the decoder should clear the provided buffer and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16227618,"byte_end":16227695,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ return `Ok(Some(the_decoded_frame))`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16227696,"byte_end":16227737,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16227738,"byte_end":16227741,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ In the third situation, the decoder should use a method such as [`split_to`]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16227742,"byte_end":16227822,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ or [`advance`] to modify the buffer such that the frame is removed from the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16227823,"byte_end":16227902,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ buffer, but any data in the buffer after that frame should still remain in","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16227903,"byte_end":16227981,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ the buffer. The decoder should also return `Ok(Some(the_decoded_frame))` in","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16227982,"byte_end":16228061,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ this case.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16228062,"byte_end":16228076,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16228077,"byte_end":16228080,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Finally the decoder may return an error if the data is invalid in some way.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16228081,"byte_end":16228160,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ The decoder should _not_ return an error just because it has yet to receive","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16228161,"byte_end":16228240,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/ a full frame.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16228241,"byte_end":16228258,"line_start":41,"line_end":41,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16228259,"byte_end":16228262,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `decode` to another, the provided","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16228263,"byte_end":16228340,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that if more data","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16228341,"byte_end":16228420,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ has arrived through the IO resource, that data will have been appended to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16228421,"byte_end":16228498,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ the buffer.  This means that reading frames from a `FramedRead` is","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16228499,"byte_end":16228569,"line_start":46,"line_end":46,"column_start":1,"column_end":71}},{"value":"/ essentially equivalent to the following loop:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16228570,"byte_end":16228619,"line_start":47,"line_end":47,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16228620,"byte_end":16228623,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16228624,"byte_end":16228637,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16228638,"byte_end":16228670,"line_start":50,"line_end":50,"column_start":1,"column_end":33}},{"value":"/ # // This uses async_stream to create an example that compiles.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16228671,"byte_end":16228738,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/ # fn foo() -> impl futures_core::Stream<Item = std::io::Result<bytes::BytesMut>> { async_stream::try_stream! {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16228739,"byte_end":16228853,"line_start":52,"line_end":52,"column_start":1,"column_end":115}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16228854,"byte_end":16228891,"line_start":53,"line_end":53,"column_start":1,"column_end":38}},{"value":"/ # let mut decoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16228892,"byte_end":16228953,"line_start":54,"line_end":54,"column_start":1,"column_end":62}},{"value":"/ # let io_resource = &mut &[0u8, 1, 2, 3][..];","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16228954,"byte_end":16229003,"line_start":55,"line_end":55,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16229004,"byte_end":16229007,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16229008,"byte_end":16229049,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16229050,"byte_end":16229060,"line_start":58,"line_end":58,"column_start":1,"column_end":11}},{"value":"/     // The read_buf call will append to buf rather than overwrite existing data.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16229061,"byte_end":16229145,"line_start":59,"line_end":59,"column_start":1,"column_end":85}},{"value":"/     let len = io_resource.read_buf(&mut buf).await?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16229146,"byte_end":16229202,"line_start":60,"line_end":60,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16229203,"byte_end":16229206,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     if len == 0 {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16229207,"byte_end":16229228,"line_start":62,"line_end":62,"column_start":1,"column_end":22}},{"value":"/         while let Some(frame) = decoder.decode_eof(&mut buf)? {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16229229,"byte_end":16229296,"line_start":63,"line_end":63,"column_start":1,"column_end":68}},{"value":"/             yield frame;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16229297,"byte_end":16229325,"line_start":64,"line_end":64,"column_start":1,"column_end":29}},{"value":"/         }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16229326,"byte_end":16229339,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/         break;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16229340,"byte_end":16229358,"line_start":66,"line_end":66,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16229359,"byte_end":16229368,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16229369,"byte_end":16229372,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/     while let Some(frame) = decoder.decode(&mut buf)? {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16229373,"byte_end":16229432,"line_start":69,"line_end":69,"column_start":1,"column_end":60}},{"value":"/         yield frame;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16229433,"byte_end":16229457,"line_start":70,"line_end":70,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16229458,"byte_end":16229467,"line_start":71,"line_end":71,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16229468,"byte_end":16229473,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/ # }}","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16229474,"byte_end":16229482,"line_start":73,"line_end":73,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16229483,"byte_end":16229490,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ The example above uses `yield` whenever the `Stream` produces an item.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16229491,"byte_end":16229565,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16229566,"byte_end":16229569,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ## Example decoder","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16229570,"byte_end":16229592,"line_start":77,"line_end":77,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16229593,"byte_end":16229596,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16229597,"byte_end":16229674,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16229675,"byte_end":16229751,"line_start":80,"line_end":80,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The decoder fails with an error","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16229752,"byte_end":16229831,"line_start":81,"line_end":81,"column_start":1,"column_end":80}},{"value":"/ if the string data is not valid utf-8 or too long.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16229832,"byte_end":16229886,"line_start":82,"line_end":82,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16229887,"byte_end":16229890,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ Such a decoder can be written like this:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16229891,"byte_end":16229935,"line_start":84,"line_end":84,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16229936,"byte_end":16229943,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Decoder;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16229944,"byte_end":16229979,"line_start":86,"line_end":86,"column_start":1,"column_end":36}},{"value":"/ use bytes::{BytesMut, Buf};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16229980,"byte_end":16230011,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16230012,"byte_end":16230015,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ struct MyStringDecoder {}","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16230016,"byte_end":16230045,"line_start":89,"line_end":89,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16230046,"byte_end":16230049,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16230050,"byte_end":16230089,"line_start":91,"line_end":91,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16230090,"byte_end":16230093,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ impl Decoder for MyStringDecoder {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16230094,"byte_end":16230132,"line_start":93,"line_end":93,"column_start":1,"column_end":39}},{"value":"/     type Item = String;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16230133,"byte_end":16230160,"line_start":94,"line_end":94,"column_start":1,"column_end":28}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16230161,"byte_end":16230197,"line_start":95,"line_end":95,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16230198,"byte_end":16230201,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     fn decode(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16230202,"byte_end":16230220,"line_start":97,"line_end":97,"column_start":1,"column_end":19}},{"value":"/         &mut self,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16230221,"byte_end":16230243,"line_start":98,"line_end":98,"column_start":1,"column_end":23}},{"value":"/         src: &mut BytesMut","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16230244,"byte_end":16230274,"line_start":99,"line_end":99,"column_start":1,"column_end":31}},{"value":"/     ) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16230275,"byte_end":16230329,"line_start":100,"line_end":100,"column_start":1,"column_end":55}},{"value":"/         if src.len() < 4 {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16230330,"byte_end":16230360,"line_start":101,"line_end":101,"column_start":1,"column_end":31}},{"value":"/             // Not enough data to read length marker.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16230361,"byte_end":16230418,"line_start":102,"line_end":102,"column_start":1,"column_end":58}},{"value":"/             return Ok(None);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16230419,"byte_end":16230451,"line_start":103,"line_end":103,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16230452,"byte_end":16230465,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16230466,"byte_end":16230469,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/         // Read length marker.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16230470,"byte_end":16230504,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/         let mut length_bytes = [0u8; 4];","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16230505,"byte_end":16230549,"line_start":107,"line_end":107,"column_start":1,"column_end":45}},{"value":"/         length_bytes.copy_from_slice(&src[..4]);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16230550,"byte_end":16230602,"line_start":108,"line_end":108,"column_start":1,"column_end":53}},{"value":"/         let length = u32::from_le_bytes(length_bytes) as usize;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16230603,"byte_end":16230670,"line_start":109,"line_end":109,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16230671,"byte_end":16230674,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/         // Check that the length is not too large to avoid a denial of","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16230675,"byte_end":16230749,"line_start":111,"line_end":111,"column_start":1,"column_end":75}},{"value":"/         // service attack where the server runs out of memory.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16230750,"byte_end":16230816,"line_start":112,"line_end":112,"column_start":1,"column_end":67}},{"value":"/         if length > MAX {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16230817,"byte_end":16230846,"line_start":113,"line_end":113,"column_start":1,"column_end":30}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16230847,"byte_end":16230894,"line_start":114,"line_end":114,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16230895,"byte_end":16230947,"line_start":115,"line_end":115,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", length)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16230948,"byte_end":16231019,"line_start":116,"line_end":116,"column_start":1,"column_end":72}},{"value":"/             ));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16231020,"byte_end":16231039,"line_start":117,"line_end":117,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16231040,"byte_end":16231053,"line_start":118,"line_end":118,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16231054,"byte_end":16231057,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/         if src.len() < 4 + length {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16231058,"byte_end":16231097,"line_start":120,"line_end":120,"column_start":1,"column_end":40}},{"value":"/             // The full string has not yet arrived.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16231098,"byte_end":16231153,"line_start":121,"line_end":121,"column_start":1,"column_end":56}},{"value":"/             //","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16231154,"byte_end":16231172,"line_start":122,"line_end":122,"column_start":1,"column_end":19}},{"value":"/             // We reserve more space in the buffer. This is not strictly","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16231173,"byte_end":16231249,"line_start":123,"line_end":123,"column_start":1,"column_end":77}},{"value":"/             // necessary, but is a good idea performance-wise.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16231250,"byte_end":16231316,"line_start":124,"line_end":124,"column_start":1,"column_end":67}},{"value":"/             src.reserve(4 + length - src.len());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16231317,"byte_end":16231369,"line_start":125,"line_end":125,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16231370,"byte_end":16231373,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/             // We inform the Framed that we need more bytes to form the next","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16231374,"byte_end":16231454,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/             // frame.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16231455,"byte_end":16231480,"line_start":128,"line_end":128,"column_start":1,"column_end":26}},{"value":"/             return Ok(None);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16231481,"byte_end":16231513,"line_start":129,"line_end":129,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16231514,"byte_end":16231527,"line_start":130,"line_end":130,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16231528,"byte_end":16231531,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/         // Use advance to modify src such that it no longer contains","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16231532,"byte_end":16231604,"line_start":132,"line_end":132,"column_start":1,"column_end":73}},{"value":"/         // this frame.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16231605,"byte_end":16231631,"line_start":133,"line_end":133,"column_start":1,"column_end":27}},{"value":"/         let data = src[4..4 + length].to_vec();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16231632,"byte_end":16231683,"line_start":134,"line_end":134,"column_start":1,"column_end":52}},{"value":"/         src.advance(4 + length);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16231684,"byte_end":16231720,"line_start":135,"line_end":135,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16231721,"byte_end":16231724,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/         // Convert the data to a string, or fail if it is not valid utf-8.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16231725,"byte_end":16231803,"line_start":137,"line_end":137,"column_start":1,"column_end":79}},{"value":"/         match String::from_utf8(data) {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16231804,"byte_end":16231847,"line_start":138,"line_end":138,"column_start":1,"column_end":44}},{"value":"/             Ok(string) => Ok(Some(string)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16231848,"byte_end":16231895,"line_start":139,"line_end":139,"column_start":1,"column_end":48}},{"value":"/             Err(utf8_error) => {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16231896,"byte_end":16231932,"line_start":140,"line_end":140,"column_start":1,"column_end":37}},{"value":"/                 Err(std::io::Error::new(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16231933,"byte_end":16231977,"line_start":141,"line_end":141,"column_start":1,"column_end":45}},{"value":"/                     std::io::ErrorKind::InvalidData,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16231978,"byte_end":16232034,"line_start":142,"line_end":142,"column_start":1,"column_end":57}},{"value":"/                     utf8_error.utf8_error(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16232035,"byte_end":16232083,"line_start":143,"line_end":143,"column_start":1,"column_end":49}},{"value":"/                 ))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16232084,"byte_end":16232106,"line_start":144,"line_end":144,"column_start":1,"column_end":23}},{"value":"/             },","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16232107,"byte_end":16232125,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/         }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16232126,"byte_end":16232139,"line_start":146,"line_end":146,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16232140,"byte_end":16232149,"line_start":147,"line_end":147,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16232150,"byte_end":16232155,"line_start":148,"line_end":148,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16232156,"byte_end":16232163,"line_start":149,"line_end":149,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16232164,"byte_end":16232167,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # The Encoder trait","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16232168,"byte_end":16232191,"line_start":151,"line_end":151,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16232192,"byte_end":16232195,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ An [`Encoder`] is used together with [`FramedWrite`] or [`Framed`] to turn","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16232196,"byte_end":16232274,"line_start":153,"line_end":153,"column_start":1,"column_end":79}},{"value":"/ an [`AsyncWrite`] into a [`Sink`]. The job of the encoder trait is to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16232275,"byte_end":16232348,"line_start":154,"line_end":154,"column_start":1,"column_end":74}},{"value":"/ specify how frames are turned into a sequences of bytes.  The job of the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16232349,"byte_end":16232425,"line_start":155,"line_end":155,"column_start":1,"column_end":77}},{"value":"/ `FramedWrite` is to take the resulting sequence of bytes and write it to the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16232426,"byte_end":16232506,"line_start":156,"line_end":156,"column_start":1,"column_end":81}},{"value":"/ IO resource.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16232507,"byte_end":16232523,"line_start":157,"line_end":157,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16232524,"byte_end":16232527,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Encoder` trait is the [`encode`] method. This method","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16232528,"byte_end":16232608,"line_start":159,"line_end":159,"column_start":1,"column_end":81}},{"value":"/ takes an item that is being written, and a buffer to write the item to. The","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16232609,"byte_end":16232688,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ buffer may already contain data, and in this case, the encoder should append","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16232689,"byte_end":16232769,"line_start":161,"line_end":161,"column_start":1,"column_end":81}},{"value":"/ the new frame the to buffer rather than overwrite the existing data.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16232770,"byte_end":16232842,"line_start":162,"line_end":162,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16232843,"byte_end":16232846,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `encode` to another, the provided","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16232847,"byte_end":16232924,"line_start":164,"line_end":164,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that some of the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16232925,"byte_end":16233003,"line_start":165,"line_end":165,"column_start":1,"column_end":79}},{"value":"/ data may have been removed from the front of the buffer. Writing to a","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16233004,"byte_end":16233077,"line_start":166,"line_end":166,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` is essentially equivalent to the following loop:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16233078,"byte_end":16233144,"line_start":167,"line_end":167,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16233145,"byte_end":16233148,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16233149,"byte_end":16233162,"line_start":169,"line_end":169,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncWriteExt;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16233163,"byte_end":16233196,"line_start":170,"line_end":170,"column_start":1,"column_end":34}},{"value":"/ use bytes::Buf; // for advance","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16233197,"byte_end":16233231,"line_start":171,"line_end":171,"column_start":1,"column_end":35}},{"value":"/ # use tokio_util::codec::Encoder;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16233232,"byte_end":16233269,"line_start":172,"line_end":172,"column_start":1,"column_end":38}},{"value":"/ # async fn next_frame() -> bytes::Bytes { bytes::Bytes::new() }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16233270,"byte_end":16233337,"line_start":173,"line_end":173,"column_start":1,"column_end":68}},{"value":"/ # async fn no_more_frames() { }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16233338,"byte_end":16233373,"line_start":174,"line_end":174,"column_start":1,"column_end":36}},{"value":"/ # #[tokio::main] async fn main() -> std::io::Result<()> {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16233374,"byte_end":16233435,"line_start":175,"line_end":175,"column_start":1,"column_end":62}},{"value":"/ # let mut io_resource = tokio::io::sink();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16233436,"byte_end":16233482,"line_start":176,"line_end":176,"column_start":1,"column_end":47}},{"value":"/ # let mut encoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16233483,"byte_end":16233544,"line_start":177,"line_end":177,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16233545,"byte_end":16233548,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8192;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16233549,"byte_end":16233577,"line_start":179,"line_end":179,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16233578,"byte_end":16233581,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16233582,"byte_end":16233623,"line_start":181,"line_end":181,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16233624,"byte_end":16233634,"line_start":182,"line_end":182,"column_start":1,"column_end":11}},{"value":"/     tokio::select! {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16233635,"byte_end":16233659,"line_start":183,"line_end":183,"column_start":1,"column_end":25}},{"value":"/         num_written = io_resource.write(&buf), if !buf.is_empty() => {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16233660,"byte_end":16233734,"line_start":184,"line_end":184,"column_start":1,"column_end":75}},{"value":"/             buf.advance(num_written?);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16233735,"byte_end":16233777,"line_start":185,"line_end":185,"column_start":1,"column_end":43}},{"value":"/         },","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16233778,"byte_end":16233792,"line_start":186,"line_end":186,"column_start":1,"column_end":15}},{"value":"/         frame = next_frame(), if buf.len() < MAX => {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16233793,"byte_end":16233850,"line_start":187,"line_end":187,"column_start":1,"column_end":58}},{"value":"/             encoder.encode(frame, &mut buf)?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16233851,"byte_end":16233900,"line_start":188,"line_end":188,"column_start":1,"column_end":50}},{"value":"/         },","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16233901,"byte_end":16233915,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"/         _ = no_more_frames() => {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16233916,"byte_end":16233953,"line_start":190,"line_end":190,"column_start":1,"column_end":38}},{"value":"/             io_resource.write_all(&buf).await?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16233954,"byte_end":16234005,"line_start":191,"line_end":191,"column_start":1,"column_end":52}},{"value":"/             io_resource.shutdown().await?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16234006,"byte_end":16234052,"line_start":192,"line_end":192,"column_start":1,"column_end":47}},{"value":"/             return Ok(());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16234053,"byte_end":16234083,"line_start":193,"line_end":193,"column_start":1,"column_end":31}},{"value":"/         },","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16234084,"byte_end":16234098,"line_start":194,"line_end":194,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16234099,"byte_end":16234108,"line_start":195,"line_end":195,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16234109,"byte_end":16234114,"line_start":196,"line_end":196,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16234115,"byte_end":16234122,"line_start":197,"line_end":197,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16234123,"byte_end":16234130,"line_start":198,"line_end":198,"column_start":1,"column_end":8}},{"value":"/ Here the `next_frame` method corresponds to any frames you write to the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16234131,"byte_end":16234206,"line_start":199,"line_end":199,"column_start":1,"column_end":76}},{"value":"/ `FramedWrite`. The `no_more_frames` method corresponds to closing the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16234207,"byte_end":16234280,"line_start":200,"line_end":200,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` with [`SinkExt::close`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16234281,"byte_end":16234323,"line_start":201,"line_end":201,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16234324,"byte_end":16234327,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ ## Example encoder","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16234328,"byte_end":16234350,"line_start":203,"line_end":203,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16234351,"byte_end":16234354,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16234355,"byte_end":16234432,"line_start":205,"line_end":205,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16234433,"byte_end":16234509,"line_start":206,"line_end":206,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The encoder will fail if the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16234510,"byte_end":16234586,"line_start":207,"line_end":207,"column_start":1,"column_end":77}},{"value":"/ string is too long.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16234587,"byte_end":16234610,"line_start":208,"line_end":208,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16234611,"byte_end":16234614,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ Such an encoder can be written like this:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16234615,"byte_end":16234660,"line_start":210,"line_end":210,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16234661,"byte_end":16234668,"line_start":211,"line_end":211,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Encoder;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16234669,"byte_end":16234704,"line_start":212,"line_end":212,"column_start":1,"column_end":36}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16234705,"byte_end":16234729,"line_start":213,"line_end":213,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16234730,"byte_end":16234733,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ struct MyStringEncoder {}","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16234734,"byte_end":16234763,"line_start":215,"line_end":215,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16234764,"byte_end":16234767,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16234768,"byte_end":16234807,"line_start":217,"line_end":217,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16234808,"byte_end":16234811,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ impl Encoder<String> for MyStringEncoder {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16234812,"byte_end":16234858,"line_start":219,"line_end":219,"column_start":1,"column_end":47}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16234859,"byte_end":16234895,"line_start":220,"line_end":220,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16234896,"byte_end":16234899,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/     fn encode(&mut self, item: String, dst: &mut BytesMut) -> Result<(), Self::Error> {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16234900,"byte_end":16234991,"line_start":222,"line_end":222,"column_start":1,"column_end":92}},{"value":"/         // Don't send a string if it is longer than the other end will","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16234992,"byte_end":16235066,"line_start":223,"line_end":223,"column_start":1,"column_end":75}},{"value":"/         // accept.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16235067,"byte_end":16235089,"line_start":224,"line_end":224,"column_start":1,"column_end":23}},{"value":"/         if item.len() > MAX {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16235090,"byte_end":16235123,"line_start":225,"line_end":225,"column_start":1,"column_end":34}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16235124,"byte_end":16235171,"line_start":226,"line_end":226,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16235172,"byte_end":16235224,"line_start":227,"line_end":227,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", item.len())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16235225,"byte_end":16235300,"line_start":228,"line_end":228,"column_start":1,"column_end":76}},{"value":"/             ));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16235301,"byte_end":16235320,"line_start":229,"line_end":229,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16235321,"byte_end":16235334,"line_start":230,"line_end":230,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16235335,"byte_end":16235338,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/         // Convert the length into a byte array.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16235339,"byte_end":16235391,"line_start":232,"line_end":232,"column_start":1,"column_end":53}},{"value":"/         // The cast to u32 cannot overflow due to the length check above.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16235392,"byte_end":16235469,"line_start":233,"line_end":233,"column_start":1,"column_end":78}},{"value":"/         let len_slice = u32::to_le_bytes(item.len() as u32);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16235470,"byte_end":16235534,"line_start":234,"line_end":234,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16235535,"byte_end":16235538,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/         // Reserve space in the buffer.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16235539,"byte_end":16235582,"line_start":236,"line_end":236,"column_start":1,"column_end":44}},{"value":"/         dst.reserve(4 + item.len());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16235583,"byte_end":16235623,"line_start":237,"line_end":237,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16235624,"byte_end":16235627,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/         // Write the length and string to the buffer.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16235628,"byte_end":16235685,"line_start":239,"line_end":239,"column_start":1,"column_end":58}},{"value":"/         dst.extend_from_slice(&len_slice);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16235686,"byte_end":16235732,"line_start":240,"line_end":240,"column_start":1,"column_end":47}},{"value":"/         dst.extend_from_slice(item.as_bytes());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16235733,"byte_end":16235784,"line_start":241,"line_end":241,"column_start":1,"column_end":52}},{"value":"/         Ok(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16235785,"byte_end":16235803,"line_start":242,"line_end":242,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16235804,"byte_end":16235813,"line_start":243,"line_end":243,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16235814,"byte_end":16235819,"line_start":244,"line_end":244,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16235820,"byte_end":16235827,"line_start":245,"line_end":245,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16235828,"byte_end":16235831,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16235832,"byte_end":16235871,"line_start":247,"line_end":247,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: tokio::io::AsyncWrite","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16235872,"byte_end":16235913,"line_start":248,"line_end":248,"column_start":1,"column_end":42}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16235914,"byte_end":16235950,"line_start":249,"line_end":249,"column_start":1,"column_end":37}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16235951,"byte_end":16235983,"line_start":250,"line_end":250,"column_start":1,"column_end":33}},{"value":"/ [`SinkExt::close`]: https://docs.rs/futures/0.3/futures/sink/trait.SinkExt.html#method.close","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16235984,"byte_end":16236080,"line_start":251,"line_end":251,"column_start":1,"column_end":97}},{"value":"/ [`FramedRead`]: struct@crate::codec::FramedRead","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16236081,"byte_end":16236132,"line_start":252,"line_end":252,"column_start":1,"column_end":52}},{"value":"/ [`FramedWrite`]: struct@crate::codec::FramedWrite","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16236133,"byte_end":16236186,"line_start":253,"line_end":253,"column_start":1,"column_end":54}},{"value":"/ [`Framed`]: struct@crate::codec::Framed","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16236187,"byte_end":16236230,"line_start":254,"line_end":254,"column_start":1,"column_end":44}},{"value":"/ [`Decoder`]: trait@crate::codec::Decoder","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16236231,"byte_end":16236275,"line_start":255,"line_end":255,"column_start":1,"column_end":45}},{"value":"/ [`decode`]: fn@crate::codec::Decoder::decode","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16236276,"byte_end":16236324,"line_start":256,"line_end":256,"column_start":1,"column_end":49}},{"value":"/ [`encode`]: fn@crate::codec::Encoder::encode","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16236325,"byte_end":16236373,"line_start":257,"line_end":257,"column_start":1,"column_end":49}},{"value":"/ [`split_to`]: fn@bytes::BytesMut::split_to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16236374,"byte_end":16236420,"line_start":258,"line_end":258,"column_start":1,"column_end":47}},{"value":"/ [`advance`]: fn@bytes::Buf::advance","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16236421,"byte_end":16236460,"line_start":259,"line_end":259,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1105},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16238484,"byte_end":16238494,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"BytesCodec","qualname":"::codec::bytes_codec::BytesCodec","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16237327,"byte_end":16237412,"line_start":7,"line_end":7,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16237413,"byte_end":16237416,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16237417,"byte_end":16237455,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16237456,"byte_end":16237494,"line_start":10,"line_end":10,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16237495,"byte_end":16237498,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16237499,"byte_end":16237512,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16237513,"byte_end":16237516,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Turn an [`AsyncRead`] into a stream of `Result<`[`BytesMut`]`, `[`Error`]`>`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16237517,"byte_end":16237598,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16237599,"byte_end":16237602,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16237603,"byte_end":16237642,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16237643,"byte_end":16237676,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16237677,"byte_end":16237706,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16237707,"byte_end":16237710,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16237711,"byte_end":16237718,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # mod hidden {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16237719,"byte_end":16237737,"line_start":21,"line_end":21,"column_start":1,"column_end":19}},{"value":"/ # #[allow(unused_imports)]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16237738,"byte_end":16237768,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16237769,"byte_end":16237793,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16237794,"byte_end":16237801,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::AsyncRead;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16237802,"byte_end":16237831,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ use tokio_util::codec::{FramedRead, BytesCodec};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16237832,"byte_end":16237884,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16237885,"byte_end":16237888,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # enum File {}","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16237889,"byte_end":16237907,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ # impl File {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16237908,"byte_end":16237925,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ #     async fn open(_name: &str) -> Result<impl AsyncRead, std::io::Error> {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16237926,"byte_end":16238006,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ #         use std::io::Cursor;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16238007,"byte_end":16238041,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/ #         Ok(Cursor::new(vec![0, 1, 2, 3, 4, 5]))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16238042,"byte_end":16238095,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/ #     }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16238096,"byte_end":16238107,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16238108,"byte_end":16238115,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16238116,"byte_end":16238121,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16238122,"byte_end":16238169,"line_start":36,"line_end":36,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16238170,"byte_end":16238223,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ let my_async_read = File::open(\"filename.txt\").await?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16238224,"byte_end":16238282,"line_start":38,"line_end":38,"column_start":1,"column_end":59}},{"value":"/ let my_stream_of_bytes = FramedRead::new(my_async_read, BytesCodec::new());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16238283,"byte_end":16238362,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ # Ok(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16238363,"byte_end":16238375,"line_start":40,"line_end":40,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16238376,"byte_end":16238383,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16238384,"byte_end":16238391,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16238392,"byte_end":16238395,"line_start":43,"line_end":43,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":447},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16238596,"byte_end":16238599,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesCodec>::new","value":"fn new() -> BytesCodec","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesCodec` for shipping around raw bytes.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesCodec` for shipping around raw bytes.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16238523,"byte_end":16238584,"line_start":48,"line_end":48,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":451},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16238742,"byte_end":16238748,"line_start":58,"line_end":58,"column_start":8,"column_end":14},"name":"decode","qualname":"<BytesCodec as codec::decoder::Decoder>::decode","value":"fn decode(&mut Self, &mut BytesMut) -> Result<Option<BytesMut>, io::Error>","parent":{"krate":0,"index":475},"children":[],"decl_id":{"krate":0,"index":478},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16239053,"byte_end":16239059,"line_start":71,"line_end":71,"column_start":8,"column_end":14},"name":"encode","qualname":"<BytesCodec as codec::encoder::Encoder>::encode","value":"fn encode(&mut Self, Bytes, &mut BytesMut) -> Result<(), io::Error>","parent":{"krate":0,"index":492},"children":[],"decl_id":{"krate":0,"index":495},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":475},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16240600,"byte_end":16240607,"line_start":35,"line_end":35,"column_start":11,"column_end":18},"name":"Decoder","qualname":"::codec::decoder::Decoder","value":"Decoder","parent":null,"children":[{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480}],"decl_id":null,"docs":" Decoding of frames via buffers.","sig":null,"attributes":[{"value":"/ Decoding of frames via buffers.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16239314,"byte_end":16239349,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16239350,"byte_end":16239353,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is used when constructing an instance of [`Framed`] or","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16239354,"byte_end":16239423,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]. An implementation of `Decoder` takes a byte stream that has","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16239424,"byte_end":16239503,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ already been buffered in `src` and decodes the data into a stream of","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16239504,"byte_end":16239576,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ `Self::Item` frames.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16239577,"byte_end":16239601,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16239602,"byte_end":16239605,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Implementations are able to track state on `self`, which enables","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16239606,"byte_end":16239674,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ implementing stateful streaming parsers. In many cases, though, this type","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16239675,"byte_end":16239752,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ will simply be a unit struct (e.g. `struct HttpDecoder`).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16239753,"byte_end":16239814,"line_start":17,"line_end":17,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16239815,"byte_end":16239818,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ For some underlying data-sources, namely files and FIFOs,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16239819,"byte_end":16239880,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ it's possible to temporarily read 0 bytes by reaching EOF.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16239881,"byte_end":16239943,"line_start":20,"line_end":20,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16239944,"byte_end":16239947,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ In these cases `decode_eof` will be called until it signals","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16239948,"byte_end":16240011,"line_start":22,"line_end":22,"column_start":1,"column_end":64}},{"value":"/ fullfillment of all closing frames by returning `Ok(None)`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16240012,"byte_end":16240075,"line_start":23,"line_end":23,"column_start":1,"column_end":64}},{"value":"/ After that, repeated attempts to read from the [`Framed`] or [`FramedRead`]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16240076,"byte_end":16240155,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ will not invoke `decode` or `decode_eof` again, until data can be read","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16240156,"byte_end":16240230,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ during a retry.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16240231,"byte_end":16240250,"line_start":26,"line_end":26,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16240251,"byte_end":16240254,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ It is up to the Decoder to keep track of a restart after an EOF,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16240255,"byte_end":16240323,"line_start":28,"line_end":28,"column_start":1,"column_end":69}},{"value":"/ and to decide how to handle such an event by, for example,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16240324,"byte_end":16240386,"line_start":29,"line_end":29,"column_start":1,"column_end":63}},{"value":"/ allowing frames to cross EOF boundaries, re-emitting opening frames, or","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16240387,"byte_end":16240462,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ resetting the entire internal state.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16240463,"byte_end":16240503,"line_start":31,"line_end":31,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16240504,"byte_end":16240507,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16240508,"byte_end":16240544,"line_start":33,"line_end":33,"column_start":1,"column_end":37}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16240545,"byte_end":16240589,"line_start":34,"line_end":34,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":476},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16240655,"byte_end":16240659,"line_start":37,"line_end":37,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::decoder::Decoder::Item","value":"type Item;","parent":{"krate":0,"index":475},"children":[],"decl_id":null,"docs":" The type of decoded frames.\n","sig":null,"attributes":[{"value":"/ The type of decoded frames.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16240614,"byte_end":16240645,"line_start":36,"line_end":36,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":477},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16241425,"byte_end":16241430,"line_start":54,"line_end":54,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::decoder::Decoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":475},"children":[],"decl_id":null,"docs":" The type of unrecoverable frame decoding errors.","sig":null,"attributes":[{"value":"/ The type of unrecoverable frame decoding errors.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16240666,"byte_end":16240718,"line_start":39,"line_end":39,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16240723,"byte_end":16240726,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ If an individual message is ill-formed but can be ignored without","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16240731,"byte_end":16240800,"line_start":41,"line_end":41,"column_start":5,"column_end":74}},{"value":"/ interfering with the processing of future messages, it may be more","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16240805,"byte_end":16240875,"line_start":42,"line_end":42,"column_start":5,"column_end":75}},{"value":"/ useful to report the failure as an `Item`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16240880,"byte_end":16240926,"line_start":43,"line_end":43,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16240931,"byte_end":16240934,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ `From<io::Error>` is required in the interest of making `Error` suitable","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16240939,"byte_end":16241015,"line_start":45,"line_end":45,"column_start":5,"column_end":81}},{"value":"/ for returning directly from a [`FramedRead`], and to enable the default","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16241020,"byte_end":16241095,"line_start":46,"line_end":46,"column_start":5,"column_end":80}},{"value":"/ implementation of `decode_eof` to yield an `io::Error` when the decoder","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16241100,"byte_end":16241175,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ fails to consume all available data.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16241180,"byte_end":16241220,"line_start":48,"line_end":48,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16241225,"byte_end":16241228,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Note that implementors of this trait can simply indicate `type Error =","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16241233,"byte_end":16241307,"line_start":50,"line_end":50,"column_start":5,"column_end":79}},{"value":"/ io::Error` to use I/O errors as this type.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16241312,"byte_end":16241358,"line_start":51,"line_end":51,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16241363,"byte_end":16241366,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16241371,"byte_end":16241415,"line_start":53,"line_end":53,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16244366,"byte_end":16244372,"line_start":124,"line_end":124,"column_start":8,"column_end":14},"name":"decode","qualname":"::codec::decoder::Decoder::decode","value":"fn decode(&mut Self, &mut BytesMut) -> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":475},"children":[],"decl_id":null,"docs":" Attempts to decode a frame from the provided buffer of bytes.","sig":null,"attributes":[{"value":"/ Attempts to decode a frame from the provided buffer of bytes.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16241454,"byte_end":16241519,"line_start":56,"line_end":56,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16241524,"byte_end":16241527,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This method is called by [`FramedRead`] whenever bytes are ready to be","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16241532,"byte_end":16241606,"line_start":58,"line_end":58,"column_start":5,"column_end":79}},{"value":"/ parsed. The provided buffer of bytes is what's been read so far, and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16241611,"byte_end":16241683,"line_start":59,"line_end":59,"column_start":5,"column_end":77}},{"value":"/ this instance of `Decode` can determine whether an entire frame is in","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16241688,"byte_end":16241761,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ the buffer and is ready to be returned.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16241766,"byte_end":16241809,"line_start":61,"line_end":61,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16241814,"byte_end":16241817,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ If an entire frame is available, then this instance will remove those","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16241822,"byte_end":16241895,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ bytes from the buffer provided and return them as a decoded","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16241900,"byte_end":16241963,"line_start":64,"line_end":64,"column_start":5,"column_end":68}},{"value":"/ frame. Note that removing bytes from the provided buffer doesn't always","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16241968,"byte_end":16242043,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ necessarily copy the bytes, so this should be an efficient operation in","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16242048,"byte_end":16242123,"line_start":66,"line_end":66,"column_start":5,"column_end":80}},{"value":"/ most circumstances.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16242128,"byte_end":16242151,"line_start":67,"line_end":67,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16242156,"byte_end":16242159,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ If the bytes look valid, but a frame isn't fully available yet, then","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16242164,"byte_end":16242236,"line_start":69,"line_end":69,"column_start":5,"column_end":77}},{"value":"/ `Ok(None)` is returned. This indicates to the [`Framed`] instance that","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16242241,"byte_end":16242315,"line_start":70,"line_end":70,"column_start":5,"column_end":79}},{"value":"/ it needs to read some more bytes before calling this method again.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16242320,"byte_end":16242390,"line_start":71,"line_end":71,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16242395,"byte_end":16242398,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Note that the bytes provided may be empty. If a previous call to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16242403,"byte_end":16242471,"line_start":73,"line_end":73,"column_start":5,"column_end":73}},{"value":"/ `decode` consumed all the bytes in the buffer then `decode` will be","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16242476,"byte_end":16242547,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/ called again until it returns `Ok(None)`, indicating that more bytes need to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16242552,"byte_end":16242632,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ be read.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16242637,"byte_end":16242649,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16242654,"byte_end":16242657,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ Finally, if the bytes in the buffer are malformed then an error is","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16242662,"byte_end":16242732,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/ returned indicating why. This informs [`Framed`] that the stream is now","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16242737,"byte_end":16242812,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ corrupt and should be terminated.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16242817,"byte_end":16242854,"line_start":80,"line_end":80,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16242859,"byte_end":16242862,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16242867,"byte_end":16242903,"line_start":82,"line_end":82,"column_start":5,"column_end":41}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16242908,"byte_end":16242952,"line_start":83,"line_end":83,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16242957,"byte_end":16242960,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Buffer management","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16242965,"byte_end":16242988,"line_start":85,"line_end":85,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16242993,"byte_end":16242996,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Before returning from the function, implementations should ensure that","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16243001,"byte_end":16243075,"line_start":87,"line_end":87,"column_start":5,"column_end":79}},{"value":"/ the buffer has appropriate capacity in anticipation of future calls to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16243080,"byte_end":16243154,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ `decode`. Failing to do so leads to inefficiency.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16243159,"byte_end":16243212,"line_start":89,"line_end":89,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16243217,"byte_end":16243220,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ For example, if frames have a fixed length, or if the length of the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16243225,"byte_end":16243296,"line_start":91,"line_end":91,"column_start":5,"column_end":76}},{"value":"/ current frame is known from a header, a possible buffer management","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16243301,"byte_end":16243371,"line_start":92,"line_end":92,"column_start":5,"column_end":75}},{"value":"/ strategy is:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16243376,"byte_end":16243392,"line_start":93,"line_end":93,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16243397,"byte_end":16243400,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16243405,"byte_end":16243418,"line_start":95,"line_end":95,"column_start":5,"column_end":18}},{"value":"/ # use std::io;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16243423,"byte_end":16243441,"line_start":96,"line_end":96,"column_start":5,"column_end":23}},{"value":"/ #","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16243446,"byte_end":16243451,"line_start":97,"line_end":97,"column_start":5,"column_end":10}},{"value":"/ # use bytes::BytesMut;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16243456,"byte_end":16243482,"line_start":98,"line_end":98,"column_start":5,"column_end":31}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16243487,"byte_end":16243524,"line_start":99,"line_end":99,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16243529,"byte_end":16243534,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ # struct MyCodec;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16243539,"byte_end":16243560,"line_start":101,"line_end":101,"column_start":5,"column_end":26}},{"value":"/ #","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16243565,"byte_end":16243570,"line_start":102,"line_end":102,"column_start":5,"column_end":10}},{"value":"/ impl Decoder for MyCodec {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16243575,"byte_end":16243605,"line_start":103,"line_end":103,"column_start":5,"column_end":35}},{"value":"/     // ...","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16243610,"byte_end":16243624,"line_start":104,"line_end":104,"column_start":5,"column_end":19}},{"value":"/     # type Item = BytesMut;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16243629,"byte_end":16243660,"line_start":105,"line_end":105,"column_start":5,"column_end":36}},{"value":"/     # type Error = io::Error;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16243665,"byte_end":16243698,"line_start":106,"line_end":106,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16243703,"byte_end":16243706,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/     fn decode(&mut self, src: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16243711,"byte_end":16243804,"line_start":108,"line_end":108,"column_start":5,"column_end":98}},{"value":"/         // ...","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16243809,"byte_end":16243827,"line_start":109,"line_end":109,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16243832,"byte_end":16243835,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/         // Reserve enough to complete decoding of the current frame.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16243840,"byte_end":16243912,"line_start":111,"line_end":111,"column_start":5,"column_end":77}},{"value":"/         let current_frame_len: usize = 1000; // Example.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16243917,"byte_end":16243977,"line_start":112,"line_end":112,"column_start":5,"column_end":65}},{"value":"/         // And to start decoding the next frame.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16243982,"byte_end":16244034,"line_start":113,"line_end":113,"column_start":5,"column_end":57}},{"value":"/         let next_frame_header_len: usize = 10; // Example.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16244039,"byte_end":16244101,"line_start":114,"line_end":114,"column_start":5,"column_end":67}},{"value":"/         src.reserve(current_frame_len + next_frame_header_len);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16244106,"byte_end":16244173,"line_start":115,"line_end":115,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16244178,"byte_end":16244181,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/         return Ok(None);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16244186,"byte_end":16244214,"line_start":117,"line_end":117,"column_start":5,"column_end":33}},{"value":"/     }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16244219,"byte_end":16244228,"line_start":118,"line_end":118,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16244233,"byte_end":16244238,"line_start":119,"line_end":119,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16244243,"byte_end":16244250,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16244255,"byte_end":16244258,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ An optimal buffer management strategy minimizes reallocations and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16244263,"byte_end":16244332,"line_start":122,"line_end":122,"column_start":5,"column_end":74}},{"value":"/ over-allocations.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16244337,"byte_end":16244358,"line_start":123,"line_end":123,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":479},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16245538,"byte_end":16245548,"line_start":144,"line_end":144,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"::codec::decoder::Decoder::decode_eof","value":"fn decode_eof(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":475},"children":[],"decl_id":null,"docs":" A default method available to be called when there are no more bytes\n available to be read from the underlying I/O.","sig":null,"attributes":[{"value":"/ A default method available to be called when there are no more bytes","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16244453,"byte_end":16244525,"line_start":126,"line_end":126,"column_start":5,"column_end":77}},{"value":"/ available to be read from the underlying I/O.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16244530,"byte_end":16244579,"line_start":127,"line_end":127,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16244584,"byte_end":16244587,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This method defaults to calling `decode` and returns an error if","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16244592,"byte_end":16244660,"line_start":129,"line_end":129,"column_start":5,"column_end":73}},{"value":"/ `Ok(None)` is returned while there is unconsumed data in `buf`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16244665,"byte_end":16244732,"line_start":130,"line_end":130,"column_start":5,"column_end":72}},{"value":"/ Typically this doesn't need to be implemented unless the framing","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16244737,"byte_end":16244805,"line_start":131,"line_end":131,"column_start":5,"column_end":73}},{"value":"/ protocol differs near the end of the stream, or if you need to construct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16244810,"byte_end":16244886,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/ frames _across_ eof boundaries on sources that can be resumed.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16244891,"byte_end":16244957,"line_start":133,"line_end":133,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16244962,"byte_end":16244965,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Note that the `buf` argument may be empty. If a previous call to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16244970,"byte_end":16245038,"line_start":135,"line_end":135,"column_start":5,"column_end":73}},{"value":"/ `decode_eof` consumed all the bytes in the buffer, `decode_eof` will be","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16245043,"byte_end":16245118,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ called again until it returns `None`, indicating that there are no more","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16245123,"byte_end":16245198,"line_start":137,"line_end":137,"column_start":5,"column_end":80}},{"value":"/ frames to yield. This behavior enables returning finalization frames","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16245203,"byte_end":16245275,"line_start":138,"line_end":138,"column_start":5,"column_end":77}},{"value":"/ that may not be based on inbound data.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16245280,"byte_end":16245322,"line_start":139,"line_end":139,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16245327,"byte_end":16245330,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Once `None` has been returned, `decode_eof` won't be called again until","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16245335,"byte_end":16245410,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ an attempt to resume the stream has been made, where the underlying stream","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16245415,"byte_end":16245493,"line_start":142,"line_end":142,"column_start":5,"column_end":83}},{"value":"/ actually returned more data.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16245498,"byte_end":16245530,"line_start":143,"line_end":143,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16247156,"byte_end":16247162,"line_start":178,"line_end":178,"column_start":8,"column_end":14},"name":"framed","qualname":"::codec::decoder::Decoder::framed","value":"fn framed<T>(Self, T) -> Framed<T, Self> where T: AsyncRead + AsyncWrite +\nSized, Self: Sized","parent":{"krate":0,"index":475},"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16245966,"byte_end":16246046,"line_start":157,"line_end":157,"column_start":5,"column_end":85}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16246051,"byte_end":16246127,"line_start":158,"line_end":158,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16246132,"byte_end":16246135,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16246140,"byte_end":16246215,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16246220,"byte_end":16246290,"line_start":161,"line_end":161,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16246295,"byte_end":16246366,"line_start":162,"line_end":162,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16246371,"byte_end":16246443,"line_start":163,"line_end":163,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16246448,"byte_end":16246506,"line_start":164,"line_end":164,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16246511,"byte_end":16246514,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16246519,"byte_end":16246588,"line_start":166,"line_end":166,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16246593,"byte_end":16246668,"line_start":167,"line_end":167,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16246673,"byte_end":16246749,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16246754,"byte_end":16246776,"line_start":169,"line_end":169,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16246781,"byte_end":16246784,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16246789,"byte_end":16246862,"line_start":171,"line_end":171,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the [`Framed`] returned by this method, which will","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16246867,"byte_end":16246940,"line_start":172,"line_end":172,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16246945,"byte_end":16247021,"line_start":173,"line_end":173,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16247026,"byte_end":16247029,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16247034,"byte_end":16247070,"line_start":175,"line_end":175,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16247075,"byte_end":16247107,"line_start":176,"line_end":176,"column_start":5,"column_end":37}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/decoder.rs","byte_start":16247112,"byte_end":16247148,"line_start":177,"line_end":177,"column_start":5,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":492},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/encoder.rs","byte_start":16247496,"byte_end":16247503,"line_start":8,"line_end":8,"column_start":11,"column_end":18},"name":"Encoder","qualname":"::codec::encoder::Encoder","value":"Encoder<Item>","parent":null,"children":[{"krate":0,"index":494},{"krate":0,"index":495}],"decl_id":null,"docs":" Trait of helper objects to write out messages as bytes, for use with\n [`FramedWrite`].","sig":null,"attributes":[{"value":"/ Trait of helper objects to write out messages as bytes, for use with","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/encoder.rs","byte_start":16247341,"byte_end":16247413,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"/ [`FramedWrite`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/encoder.rs","byte_start":16247414,"byte_end":16247434,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/encoder.rs","byte_start":16247435,"byte_end":16247438,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/encoder.rs","byte_start":16247439,"byte_end":16247485,"line_start":7,"line_end":7,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":494},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/encoder.rs","byte_start":16247768,"byte_end":16247773,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::encoder::Encoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":492},"children":[],"decl_id":null,"docs":" The type of encoding errors.","sig":null,"attributes":[{"value":"/ The type of encoding errors.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/encoder.rs","byte_start":16247516,"byte_end":16247548,"line_start":9,"line_end":9,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/encoder.rs","byte_start":16247553,"byte_end":16247556,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`] requires `Encoder`s errors to implement `From<io::Error>`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/encoder.rs","byte_start":16247561,"byte_end":16247638,"line_start":11,"line_end":11,"column_start":5,"column_end":82}},{"value":"/ in the interest letting it return `Error`s directly.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/encoder.rs","byte_start":16247643,"byte_end":16247699,"line_start":12,"line_end":12,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/encoder.rs","byte_start":16247704,"byte_end":16247707,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/encoder.rs","byte_start":16247712,"byte_end":16247758,"line_start":14,"line_end":14,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/encoder.rs","byte_start":16248124,"byte_end":16248130,"line_start":24,"line_end":24,"column_start":8,"column_end":14},"name":"encode","qualname":"::codec::encoder::Encoder::encode","value":"fn encode(&mut Self, Item, &mut BytesMut) -> Result<(), Self::Error>","parent":{"krate":0,"index":492},"children":[],"decl_id":null,"docs":" Encodes a frame into the buffer provided.","sig":null,"attributes":[{"value":"/ Encodes a frame into the buffer provided.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/encoder.rs","byte_start":16247797,"byte_end":16247842,"line_start":17,"line_end":17,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/encoder.rs","byte_start":16247847,"byte_end":16247850,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This method will encode `item` into the byte buffer provided by `dst`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/encoder.rs","byte_start":16247855,"byte_end":16247929,"line_start":19,"line_end":19,"column_start":5,"column_end":79}},{"value":"/ The `dst` provided is an internal buffer of the [`FramedWrite`] instance and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/encoder.rs","byte_start":16247934,"byte_end":16248014,"line_start":20,"line_end":20,"column_start":5,"column_end":85}},{"value":"/ will be written out when possible.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/encoder.rs","byte_start":16248019,"byte_end":16248057,"line_start":21,"line_end":21,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/encoder.rs","byte_start":16248062,"byte_end":16248065,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/encoder.rs","byte_start":16248070,"byte_end":16248116,"line_start":23,"line_end":23,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1684},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16261767,"byte_end":16261773,"line_start":27,"line_end":27,"column_start":16,"column_end":22},"name":"Framed","qualname":"::codec::framed::Framed","value":"Framed {  }","parent":null,"children":[{"krate":0,"index":1687}],"decl_id":null,"docs":" A unified [`Stream`] and [`Sink`] interface to an underlying I/O object, using\n the `Encoder` and `Decoder` traits to encode and decode frames.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":667},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16263546,"byte_end":16263549,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<Framed<T, U>>::new","value":"fn new(T, U) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16261915,"byte_end":16261995,"line_start":37,"line_end":37,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16262000,"byte_end":16262081,"line_start":38,"line_end":38,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16262086,"byte_end":16262089,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16262094,"byte_end":16262169,"line_start":40,"line_end":40,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16262174,"byte_end":16262244,"line_start":41,"line_end":41,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16262249,"byte_end":16262318,"line_start":42,"line_end":42,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16262323,"byte_end":16262395,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16262400,"byte_end":16262458,"line_start":44,"line_end":44,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16262463,"byte_end":16262466,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16262471,"byte_end":16262542,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16262547,"byte_end":16262624,"line_start":47,"line_end":47,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16262629,"byte_end":16262705,"line_start":48,"line_end":48,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16262710,"byte_end":16262732,"line_start":49,"line_end":49,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16262737,"byte_end":16262740,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16262745,"byte_end":16262818,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16262823,"byte_end":16262896,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16262901,"byte_end":16262977,"line_start":53,"line_end":53,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16262982,"byte_end":16262985,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that, for some byte sources, the stream can be resumed after an EOF","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16262990,"byte_end":16263066,"line_start":55,"line_end":55,"column_start":5,"column_end":81}},{"value":"/ by reading from it, even after it has returned `None`. Repeated attempts","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16263071,"byte_end":16263147,"line_start":56,"line_end":56,"column_start":5,"column_end":81}},{"value":"/ to do so, without new data available, continue to return `None` without","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16263152,"byte_end":16263227,"line_start":57,"line_end":57,"column_start":5,"column_end":80}},{"value":"/ creating more (closing) frames.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16263232,"byte_end":16263267,"line_start":58,"line_end":58,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16263272,"byte_end":16263275,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16263280,"byte_end":16263316,"line_start":60,"line_end":60,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16263321,"byte_end":16263353,"line_start":61,"line_end":61,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16263358,"byte_end":16263395,"line_start":62,"line_end":62,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16263400,"byte_end":16263438,"line_start":63,"line_end":63,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16263443,"byte_end":16263534,"line_start":64,"line_end":64,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":668},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16265157,"byte_end":16265170,"line_start":99,"line_end":99,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Framed<T, U>>::with_capacity","value":"fn with_capacity(T, U, usize) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,\n with a specific read buffer initial capacity.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16263762,"byte_end":16263842,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16263847,"byte_end":16263928,"line_start":76,"line_end":76,"column_start":5,"column_end":86}},{"value":"/ with a specific read buffer initial capacity.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16263933,"byte_end":16263982,"line_start":77,"line_end":77,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16263987,"byte_end":16263990,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16263995,"byte_end":16264070,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16264075,"byte_end":16264145,"line_start":80,"line_end":80,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16264150,"byte_end":16264219,"line_start":81,"line_end":81,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16264224,"byte_end":16264296,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16264301,"byte_end":16264359,"line_start":83,"line_end":83,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16264364,"byte_end":16264367,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16264372,"byte_end":16264443,"line_start":85,"line_end":85,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16264448,"byte_end":16264525,"line_start":86,"line_end":86,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16264530,"byte_end":16264606,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16264611,"byte_end":16264633,"line_start":88,"line_end":88,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16264638,"byte_end":16264641,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16264646,"byte_end":16264719,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16264724,"byte_end":16264797,"line_start":91,"line_end":91,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16264802,"byte_end":16264878,"line_start":92,"line_end":92,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16264883,"byte_end":16264886,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16264891,"byte_end":16264927,"line_start":94,"line_end":94,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16264932,"byte_end":16264964,"line_start":95,"line_end":95,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16264969,"byte_end":16265006,"line_start":96,"line_end":96,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16265011,"byte_end":16265049,"line_start":97,"line_end":97,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16265054,"byte_end":16265145,"line_start":98,"line_end":98,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":672},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16267317,"byte_end":16267327,"line_start":146,"line_end":146,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Framed<T, U>>::from_parts","value":"fn from_parts(FramedParts<T, U>) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16265740,"byte_end":16265820,"line_start":119,"line_end":119,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16265825,"byte_end":16265906,"line_start":120,"line_end":120,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16265911,"byte_end":16265914,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16265919,"byte_end":16265994,"line_start":122,"line_end":122,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16265999,"byte_end":16266069,"line_start":123,"line_end":123,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16266074,"byte_end":16266145,"line_start":124,"line_end":124,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16266150,"byte_end":16266222,"line_start":125,"line_end":125,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16266227,"byte_end":16266285,"line_start":126,"line_end":126,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16266290,"byte_end":16266293,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16266298,"byte_end":16266369,"line_start":128,"line_end":128,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16266374,"byte_end":16266451,"line_start":129,"line_end":129,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16266456,"byte_end":16266532,"line_start":130,"line_end":130,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16266537,"byte_end":16266559,"line_start":131,"line_end":131,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16266564,"byte_end":16266567,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ This objects takes a stream and a readbuffer and a writebuffer. These field","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16266572,"byte_end":16266651,"line_start":133,"line_end":133,"column_start":5,"column_end":84}},{"value":"/ can be obtained from an existing `Framed` with the [`into_parts`] method.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16266656,"byte_end":16266733,"line_start":134,"line_end":134,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16266738,"byte_end":16266741,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16266746,"byte_end":16266819,"line_start":136,"line_end":136,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16266824,"byte_end":16266897,"line_start":137,"line_end":137,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16266902,"byte_end":16266978,"line_start":138,"line_end":138,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16266983,"byte_end":16266986,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16266991,"byte_end":16267027,"line_start":140,"line_end":140,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16267032,"byte_end":16267064,"line_start":141,"line_end":141,"column_start":5,"column_end":37}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16267069,"byte_end":16267107,"line_start":142,"line_end":142,"column_start":5,"column_end":43}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16267112,"byte_end":16267150,"line_start":143,"line_end":143,"column_start":5,"column_end":43}},{"value":"/ [`into_parts`]: crate::codec::Framed::into_parts()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16267155,"byte_end":16267209,"line_start":144,"line_end":144,"column_start":5,"column_end":59}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16267214,"byte_end":16267305,"line_start":145,"line_end":145,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":673},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16267962,"byte_end":16267969,"line_start":165,"line_end":165,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Framed<T, U>>::get_ref","value":"fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16267679,"byte_end":16267742,"line_start":159,"line_end":159,"column_start":5,"column_end":68}},{"value":"/ `Framed`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16267747,"byte_end":16267760,"line_start":160,"line_end":160,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16267765,"byte_end":16267768,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16267773,"byte_end":16267848,"line_start":162,"line_end":162,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16267853,"byte_end":16267923,"line_start":163,"line_end":163,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16267928,"byte_end":16267950,"line_start":164,"line_end":164,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":674},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16268313,"byte_end":16268320,"line_start":175,"line_end":175,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Framed<T, U>>::get_mut","value":"fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16268022,"byte_end":16268093,"line_start":169,"line_end":169,"column_start":5,"column_end":76}},{"value":"/ `Framed`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16268098,"byte_end":16268111,"line_start":170,"line_end":170,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16268116,"byte_end":16268119,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16268124,"byte_end":16268199,"line_start":172,"line_end":172,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16268204,"byte_end":16268274,"line_start":173,"line_end":173,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16268279,"byte_end":16268301,"line_start":174,"line_end":174,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":675},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16268683,"byte_end":16268694,"line_start":185,"line_end":185,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Framed<T, U>>::get_pin_mut","value":"fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16268385,"byte_end":16268463,"line_start":179,"line_end":179,"column_start":5,"column_end":83}},{"value":"/ `Framed`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16268468,"byte_end":16268481,"line_start":180,"line_end":180,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16268486,"byte_end":16268489,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16268494,"byte_end":16268569,"line_start":182,"line_end":182,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16268574,"byte_end":16268644,"line_start":183,"line_end":183,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16268649,"byte_end":16268671,"line_start":184,"line_end":184,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16269041,"byte_end":16269046,"line_start":194,"line_end":194,"column_start":12,"column_end":17},"name":"codec","qualname":"<Framed<T, U>>::codec","value":"fn codec(&Self) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying codec wrapped by","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16268790,"byte_end":16268848,"line_start":189,"line_end":189,"column_start":5,"column_end":63}},{"value":"/ `Framed`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16268853,"byte_end":16268866,"line_start":190,"line_end":190,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16268871,"byte_end":16268874,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16268879,"byte_end":16268953,"line_start":192,"line_end":192,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16268958,"byte_end":16269029,"line_start":193,"line_end":193,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":677},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16269358,"byte_end":16269367,"line_start":203,"line_end":203,"column_start":12,"column_end":21},"name":"codec_mut","qualname":"<Framed<T, U>>::codec_mut","value":"fn codec_mut(&mut Self) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16269099,"byte_end":16269165,"line_start":198,"line_end":198,"column_start":5,"column_end":71}},{"value":"/ `Framed`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16269170,"byte_end":16269183,"line_start":199,"line_end":199,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16269188,"byte_end":16269191,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16269196,"byte_end":16269270,"line_start":201,"line_end":201,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16269275,"byte_end":16269346,"line_start":202,"line_end":202,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":678},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16269487,"byte_end":16269498,"line_start":208,"line_end":208,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<Framed<T, U>>::read_buffer","value":"fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16269432,"byte_end":16269475,"line_start":207,"line_end":207,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":679},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16269633,"byte_end":16269648,"line_start":213,"line_end":213,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<Framed<T, U>>::read_buffer_mut","value":"fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16269570,"byte_end":16269621,"line_start":212,"line_end":212,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":680},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16269788,"byte_end":16269800,"line_start":218,"line_end":218,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<Framed<T, U>>::write_buffer","value":"fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16269732,"byte_end":16269776,"line_start":217,"line_end":217,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":681},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16269937,"byte_end":16269953,"line_start":223,"line_end":223,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<Framed<T, U>>::write_buffer_mut","value":"fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16269873,"byte_end":16269925,"line_start":222,"line_end":222,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":682},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16270303,"byte_end":16270313,"line_start":232,"line_end":232,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Framed<T, U>>::into_inner","value":"fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16270038,"byte_end":16270101,"line_start":227,"line_end":227,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16270106,"byte_end":16270109,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16270114,"byte_end":16270189,"line_start":229,"line_end":229,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16270194,"byte_end":16270264,"line_start":230,"line_end":230,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16270269,"byte_end":16270291,"line_start":231,"line_end":231,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":683},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16270685,"byte_end":16270695,"line_start":242,"line_end":242,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Framed<T, U>>::into_parts","value":"fn into_parts(Self) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream, the buffer\n with unprocessed data, and the codec.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream, the buffer","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16270363,"byte_end":16270437,"line_start":236,"line_end":236,"column_start":5,"column_end":79}},{"value":"/ with unprocessed data, and the codec.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16270442,"byte_end":16270483,"line_start":237,"line_end":237,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16270488,"byte_end":16270491,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16270496,"byte_end":16270571,"line_start":239,"line_end":239,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16270576,"byte_end":16270646,"line_start":240,"line_end":240,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16270651,"byte_end":16270673,"line_start":241,"line_end":241,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":688},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16271148,"byte_end":16271157,"line_start":261,"line_end":261,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Framed<T, U> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":21,"index":96},"children":[],"decl_id":{"krate":21,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":694},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16271489,"byte_end":16271499,"line_start":275,"line_end":275,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"<Framed<T, U> as futures_sink::Sink>::poll_ready","value":"fn poll_ready(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":22,"index":17},"children":[],"decl_id":{"krate":22,"index":20},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":695},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16271637,"byte_end":16271647,"line_start":279,"line_end":279,"column_start":8,"column_end":18},"name":"start_send","qualname":"<Framed<T, U> as futures_sink::Sink>::start_send","value":"fn start_send(Pin<&mut Self>, I) -> Result<(), Self::Error>","parent":{"krate":22,"index":17},"children":[],"decl_id":{"krate":22,"index":21},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":696},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16271768,"byte_end":16271778,"line_start":283,"line_end":283,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<Framed<T, U> as futures_sink::Sink>::poll_flush","value":"fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":22,"index":17},"children":[],"decl_id":{"krate":22,"index":22},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":697},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16271916,"byte_end":16271926,"line_start":287,"line_end":287,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<Framed<T, U> as futures_sink::Sink>::poll_close","value":"fn poll_close(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":22,"index":17},"children":[],"decl_id":{"krate":22,"index":23},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":701},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16272151,"byte_end":16272154,"line_start":297,"line_end":297,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Framed<T, U> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1141},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16272669,"byte_end":16272680,"line_start":312,"line_end":312,"column_start":12,"column_end":23},"name":"FramedParts","qualname":"::codec::framed::FramedParts","value":"FramedParts { io, codec, read_buf, write_buf }","parent":null,"children":[{"krate":0,"index":1144},{"krate":0,"index":1145},{"krate":0,"index":1146},{"krate":0,"index":1147},{"krate":0,"index":1148}],"decl_id":null,"docs":" `FramedParts` contains an export of the data of a Framed transport.\n It can be used to construct a new [`Framed`] with a different codec.\n It contains all current buffers and the inner transport.","sig":null,"attributes":[{"value":"/ `FramedParts` contains an export of the data of a Framed transport.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16272354,"byte_end":16272425,"line_start":305,"line_end":305,"column_start":1,"column_end":72}},{"value":"/ It can be used to construct a new [`Framed`] with a different codec.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16272426,"byte_end":16272498,"line_start":306,"line_end":306,"column_start":1,"column_end":73}},{"value":"/ It contains all current buffers and the inner transport.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16272499,"byte_end":16272559,"line_start":307,"line_end":307,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16272560,"byte_end":16272563,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16272564,"byte_end":16272600,"line_start":309,"line_end":309,"column_start":1,"column_end":37}},{"value":"allow(clippy :: manual_non_exhaustive)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16272618,"byte_end":16272657,"line_start":311,"line_end":311,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1144},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16272766,"byte_end":16272768,"line_start":314,"line_end":314,"column_start":9,"column_end":11},"name":"io","qualname":"::codec::framed::FramedParts::io","value":"T","parent":{"krate":0,"index":1141},"children":[],"decl_id":null,"docs":" The inner transport used to read bytes to and write bytes to\n","sig":null,"attributes":[{"value":"/ The inner transport used to read bytes to and write bytes to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16272693,"byte_end":16272757,"line_start":313,"line_end":313,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1145},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16272800,"byte_end":16272805,"line_start":317,"line_end":317,"column_start":9,"column_end":14},"name":"codec","qualname":"::codec::framed::FramedParts::codec","value":"U","parent":{"krate":0,"index":1141},"children":[],"decl_id":null,"docs":" The codec\n","sig":null,"attributes":[{"value":"/ The codec","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16272778,"byte_end":16272791,"line_start":316,"line_end":316,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1146},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16272870,"byte_end":16272878,"line_start":320,"line_end":320,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::codec::framed::FramedParts::read_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1141},"children":[],"decl_id":null,"docs":" The buffer with read but unprocessed data.\n","sig":null,"attributes":[{"value":"/ The buffer with read but unprocessed data.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16272815,"byte_end":16272861,"line_start":319,"line_end":319,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":1147},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16272965,"byte_end":16272974,"line_start":323,"line_end":323,"column_start":9,"column_end":18},"name":"write_buf","qualname":"::codec::framed::FramedParts::write_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1141},"children":[],"decl_id":null,"docs":" A buffer with unprocessed data which are not written yet.\n","sig":null,"attributes":[{"value":"/ A buffer with unprocessed data which are not written yet.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16272895,"byte_end":16272956,"line_start":322,"line_end":322,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":705},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16273207,"byte_end":16273210,"line_start":332,"line_end":332,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedParts<T, U>>::new","value":"fn new<I>(T, U) -> FramedParts<T, U> where U: Encoder<I>","parent":null,"children":[],"decl_id":null,"docs":" Create a new, default, `FramedParts`\n","sig":null,"attributes":[{"value":"/ Create a new, default, `FramedParts`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16273155,"byte_end":16273195,"line_start":331,"line_end":331,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":1643},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16273939,"byte_end":16273949,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"name":"FramedRead","qualname":"::codec::framed_read::FramedRead","value":"FramedRead {  }","parent":null,"children":[{"krate":0,"index":1646}],"decl_id":null,"docs":" A [`Stream`] of messages decoded from an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":756},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16274200,"byte_end":16274203,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedRead<T, D>>::new","value":"fn new(T, D) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16274132,"byte_end":16274188,"line_start":32,"line_end":32,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":757},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16274551,"byte_end":16274564,"line_start":45,"line_end":45,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<FramedRead<T, D>>::with_capacity","value":"fn with_capacity(T, D, usize) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`\n initial size.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16274435,"byte_end":16274517,"line_start":43,"line_end":43,"column_start":5,"column_end":87}},{"value":"/ initial size.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16274522,"byte_end":16274539,"line_start":44,"line_end":44,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":761},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16275318,"byte_end":16275325,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedRead<T, D>>::get_ref","value":"fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16275031,"byte_end":16275094,"line_start":62,"line_end":62,"column_start":5,"column_end":68}},{"value":"/ `FramedRead`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16275099,"byte_end":16275116,"line_start":63,"line_end":63,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16275121,"byte_end":16275124,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16275129,"byte_end":16275204,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16275209,"byte_end":16275279,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16275284,"byte_end":16275306,"line_start":67,"line_end":67,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":762},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16275673,"byte_end":16275680,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedRead<T, D>>::get_mut","value":"fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16275378,"byte_end":16275449,"line_start":72,"line_end":72,"column_start":5,"column_end":76}},{"value":"/ `FramedRead`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16275454,"byte_end":16275471,"line_start":73,"line_end":73,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16275476,"byte_end":16275479,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16275484,"byte_end":16275559,"line_start":75,"line_end":75,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16275564,"byte_end":16275634,"line_start":76,"line_end":76,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16275639,"byte_end":16275661,"line_start":77,"line_end":77,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":763},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16276047,"byte_end":16276058,"line_start":88,"line_end":88,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedRead<T, D>>::get_pin_mut","value":"fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16275745,"byte_end":16275823,"line_start":82,"line_end":82,"column_start":5,"column_end":83}},{"value":"/ `FramedRead`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16275828,"byte_end":16275845,"line_start":83,"line_end":83,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16275850,"byte_end":16275853,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16275858,"byte_end":16275933,"line_start":85,"line_end":85,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16275938,"byte_end":16276008,"line_start":86,"line_end":86,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16276013,"byte_end":16276035,"line_start":87,"line_end":87,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":764},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16276423,"byte_end":16276433,"line_start":97,"line_end":97,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedRead<T, D>>::into_inner","value":"fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedRead`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedRead`, returning its underlying I/O stream.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16276154,"byte_end":16276221,"line_start":92,"line_end":92,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16276226,"byte_end":16276229,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16276234,"byte_end":16276309,"line_start":94,"line_end":94,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16276314,"byte_end":16276384,"line_start":95,"line_end":95,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16276389,"byte_end":16276411,"line_start":96,"line_end":96,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":765},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16276545,"byte_end":16276552,"line_start":102,"line_end":102,"column_start":12,"column_end":19},"name":"decoder","qualname":"<FramedRead<T, D>>::decoder","value":"fn decoder(&Self) -> &D","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16276483,"byte_end":16276533,"line_start":101,"line_end":101,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":766},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16276675,"byte_end":16276686,"line_start":107,"line_end":107,"column_start":12,"column_end":23},"name":"decoder_mut","qualname":"<FramedRead<T, D>>::decoder_mut","value":"fn decoder_mut(&mut Self) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16276605,"byte_end":16276663,"line_start":106,"line_end":106,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":767},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16276806,"byte_end":16276817,"line_start":112,"line_end":112,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<FramedRead<T, D>>::read_buffer","value":"fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16276751,"byte_end":16276794,"line_start":111,"line_end":111,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":768},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16276947,"byte_end":16276962,"line_start":117,"line_end":117,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<FramedRead<T, D>>::read_buffer_mut","value":"fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16276884,"byte_end":16276935,"line_start":116,"line_end":116,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":773},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16277225,"byte_end":16277234,"line_start":130,"line_end":130,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<FramedRead<T, D> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":21,"index":96},"children":[],"decl_id":{"krate":21,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":779},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16277514,"byte_end":16277524,"line_start":142,"line_end":142,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"<FramedRead<T, D> as futures_sink::Sink>::poll_ready","value":"fn poll_ready(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":22,"index":17},"children":[],"decl_id":{"krate":22,"index":20},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":780},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16277678,"byte_end":16277688,"line_start":146,"line_end":146,"column_start":8,"column_end":18},"name":"start_send","qualname":"<FramedRead<T, D> as futures_sink::Sink>::start_send","value":"fn start_send(Pin<&mut Self>, I) -> Result<(), Self::Error>","parent":{"krate":22,"index":17},"children":[],"decl_id":{"krate":22,"index":21},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":781},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16277825,"byte_end":16277835,"line_start":150,"line_end":150,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<FramedRead<T, D> as futures_sink::Sink>::poll_flush","value":"fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":22,"index":17},"children":[],"decl_id":{"krate":22,"index":22},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":782},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16277989,"byte_end":16277999,"line_start":154,"line_end":154,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<FramedRead<T, D> as futures_sink::Sink>::poll_close","value":"fn poll_close(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":22,"index":17},"children":[],"decl_id":{"krate":22,"index":23},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":786},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16278244,"byte_end":16278247,"line_start":164,"line_end":164,"column_start":8,"column_end":11},"name":"fmt","qualname":"<FramedRead<T, D> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1602},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16279063,"byte_end":16279074,"line_start":19,"line_end":19,"column_start":16,"column_end":27},"name":"FramedWrite","qualname":"::codec::framed_write::FramedWrite","value":"FramedWrite {  }","parent":null,"children":[{"krate":0,"index":1605}],"decl_id":null,"docs":" A [`Sink`] of frames encoded to an `AsyncWrite`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":835},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16279281,"byte_end":16279284,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedWrite<T, E>>::new","value":"fn new(T, E) -> FramedWrite<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedWrite` with the given `encoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedWrite` with the given `encoder`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16279212,"byte_end":16279269,"line_start":29,"line_end":29,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":839},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16279842,"byte_end":16279849,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedWrite<T, E>>::get_ref","value":"fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16279554,"byte_end":16279617,"line_start":42,"line_end":42,"column_start":5,"column_end":68}},{"value":"/ `FramedWrite`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16279622,"byte_end":16279640,"line_start":43,"line_end":43,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16279645,"byte_end":16279648,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16279653,"byte_end":16279728,"line_start":45,"line_end":45,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16279733,"byte_end":16279803,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16279808,"byte_end":16279830,"line_start":47,"line_end":47,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":840},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16280198,"byte_end":16280205,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedWrite<T, E>>::get_mut","value":"fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16279902,"byte_end":16279973,"line_start":52,"line_end":52,"column_start":5,"column_end":76}},{"value":"/ `FramedWrite`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16279978,"byte_end":16279996,"line_start":53,"line_end":53,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16280001,"byte_end":16280004,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16280009,"byte_end":16280084,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16280089,"byte_end":16280159,"line_start":56,"line_end":56,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16280164,"byte_end":16280186,"line_start":57,"line_end":57,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":841},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16280573,"byte_end":16280584,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedWrite<T, E>>::get_pin_mut","value":"fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16280270,"byte_end":16280348,"line_start":62,"line_end":62,"column_start":5,"column_end":83}},{"value":"/ `FramedWrite`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16280353,"byte_end":16280371,"line_start":63,"line_end":63,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16280376,"byte_end":16280379,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16280384,"byte_end":16280459,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16280464,"byte_end":16280534,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16280539,"byte_end":16280561,"line_start":67,"line_end":67,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":842},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16280950,"byte_end":16280960,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedWrite<T, E>>::into_inner","value":"fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedWrite`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedWrite`, returning its underlying I/O stream.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16280680,"byte_end":16280748,"line_start":72,"line_end":72,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16280753,"byte_end":16280756,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16280761,"byte_end":16280836,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16280841,"byte_end":16280911,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16280916,"byte_end":16280938,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":843},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16281072,"byte_end":16281079,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"encoder","qualname":"<FramedWrite<T, E>>::encoder","value":"fn encoder(&Self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying encoder.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16281010,"byte_end":16281060,"line_start":81,"line_end":81,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":844},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16281202,"byte_end":16281213,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"encoder_mut","qualname":"<FramedWrite<T, E>>::encoder_mut","value":"fn encoder_mut(&mut Self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying encoder.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16281132,"byte_end":16281190,"line_start":86,"line_end":86,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":845},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16281334,"byte_end":16281346,"line_start":92,"line_end":92,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<FramedWrite<T, E>>::write_buffer","value":"fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16281278,"byte_end":16281322,"line_start":91,"line_end":91,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":846},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16281477,"byte_end":16281493,"line_start":97,"line_end":97,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<FramedWrite<T, E>>::write_buffer_mut","value":"fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16281413,"byte_end":16281465,"line_start":96,"line_end":96,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":852},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16281780,"byte_end":16281790,"line_start":111,"line_end":111,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"<FramedWrite<T, E> as futures_sink::Sink>::poll_ready","value":"fn poll_ready(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":22,"index":17},"children":[],"decl_id":{"krate":22,"index":20},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":853},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16281928,"byte_end":16281938,"line_start":115,"line_end":115,"column_start":8,"column_end":18},"name":"start_send","qualname":"<FramedWrite<T, E> as futures_sink::Sink>::start_send","value":"fn start_send(Pin<&mut Self>, I) -> Result<(), Self::Error>","parent":{"krate":22,"index":17},"children":[],"decl_id":{"krate":22,"index":21},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":854},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16282059,"byte_end":16282069,"line_start":119,"line_end":119,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<FramedWrite<T, E> as futures_sink::Sink>::poll_flush","value":"fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":22,"index":17},"children":[],"decl_id":{"krate":22,"index":22},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":855},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16282207,"byte_end":16282217,"line_start":123,"line_end":123,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<FramedWrite<T, E> as futures_sink::Sink>::poll_close","value":"fn poll_close(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":22,"index":17},"children":[],"decl_id":{"krate":22,"index":23},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":860},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16282499,"byte_end":16282508,"line_start":135,"line_end":135,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<FramedWrite<T, D> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":21,"index":96},"children":[],"decl_id":{"krate":21,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":864},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16282748,"byte_end":16282751,"line_start":145,"line_end":145,"column_start":8,"column_end":11},"name":"fmt","qualname":"<FramedWrite<T, U> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":868},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"length_delimited","qualname":"::codec::length_delimited","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","parent":null,"children":[{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":873},{"krate":0,"index":876},{"krate":0,"index":879},{"krate":0,"index":882},{"krate":0,"index":885},{"krate":0,"index":886},{"krate":0,"index":889},{"krate":0,"index":892},{"krate":0,"index":893},{"krate":0,"index":896},{"krate":0,"index":899},{"krate":0,"index":902},{"krate":0,"index":905},{"krate":0,"index":908},{"krate":0,"index":909},{"krate":0,"index":912},{"krate":0,"index":915},{"krate":0,"index":916},{"krate":0,"index":919},{"krate":0,"index":1153},{"krate":0,"index":1160},{"krate":0,"index":1162},{"krate":0,"index":1164},{"krate":0,"index":922},{"krate":0,"index":1165},{"krate":0,"index":1168},{"krate":0,"index":1170},{"krate":0,"index":1172},{"krate":0,"index":1178},{"krate":0,"index":1180},{"krate":0,"index":1182},{"krate":0,"index":924},{"krate":0,"index":931},{"krate":0,"index":935},{"krate":0,"index":939},{"krate":0,"index":941},{"krate":0,"index":960},{"krate":0,"index":962},{"krate":0,"index":964},{"krate":0,"index":966}],"decl_id":null,"docs":" Frame a stream of bytes based on a length prefix","sig":null,"attributes":[{"value":"/ Frame a stream of bytes based on a length prefix","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16283020,"byte_end":16283072,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16283073,"byte_end":16283076,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Many protocols delimit their frames by prefacing frame data with a","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16283077,"byte_end":16283147,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ frame head that specifies the length of the frame. The","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16283148,"byte_end":16283206,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"/ `length_delimited` module provides utilities for handling the length","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16283207,"byte_end":16283279,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ based framing. This allows the consumer to work with entire frames","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16283280,"byte_end":16283350,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ without having to worry about buffering or other framing logic.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16283351,"byte_end":16283418,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16283419,"byte_end":16283422,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Getting started","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16283423,"byte_end":16283444,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16283445,"byte_end":16283448,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ If implementing a protocol from scratch, using length delimited framing","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16283449,"byte_end":16283524,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ is an easy way to get started. [`LengthDelimitedCodec::new()`] will","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16283525,"byte_end":16283596,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ return a length delimited codec using default configuration values.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16283597,"byte_end":16283668,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ This can then be used to construct a framer to adapt a full-duplex","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16283669,"byte_end":16283739,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/ byte stream into a stream of frames.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16283740,"byte_end":16283780,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16283781,"byte_end":16283784,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16283785,"byte_end":16283792,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16283793,"byte_end":16283836,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16283837,"byte_end":16283895,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16283896,"byte_end":16283899,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ fn bind_transport<T: AsyncRead + AsyncWrite>(io: T)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16283900,"byte_end":16283955,"line_start":21,"line_end":21,"column_start":1,"column_end":56}},{"value":"/     -> Framed<T, LengthDelimitedCodec>","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16283956,"byte_end":16283998,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16283999,"byte_end":16284004,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/     Framed::new(io, LengthDelimitedCodec::new())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16284005,"byte_end":16284057,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16284058,"byte_end":16284063,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16284064,"byte_end":16284086,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16284087,"byte_end":16284094,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16284095,"byte_end":16284098,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The returned transport implements `Sink + Stream` for `BytesMut`. It","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16284099,"byte_end":16284171,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ encodes the frame with a big-endian `u32` header denoting the frame","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16284172,"byte_end":16284243,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"/ payload length:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16284244,"byte_end":16284263,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16284264,"byte_end":16284267,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16284268,"byte_end":16284279,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16284280,"byte_end":16284329,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ | len: u32 |          frame payload         |","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16284330,"byte_end":16284379,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16284380,"byte_end":16284429,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16284430,"byte_end":16284437,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16284438,"byte_end":16284441,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Specifically, given the following:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16284442,"byte_end":16284480,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16284481,"byte_end":16284484,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16284485,"byte_end":16284492,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16284493,"byte_end":16284536,"line_start":42,"line_end":42,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16284537,"byte_end":16284595,"line_start":43,"line_end":43,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16284596,"byte_end":16284599,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ use futures::SinkExt;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16284600,"byte_end":16284625,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16284626,"byte_end":16284647,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16284648,"byte_end":16284651,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ async fn write_frame<T>(io: T) -> Result<(), Box<dyn std::error::Error>>","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16284652,"byte_end":16284728,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"/ where","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16284729,"byte_end":16284738,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"/     T: AsyncRead + AsyncWrite + Unpin,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16284739,"byte_end":16284781,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16284782,"byte_end":16284787,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/     let mut transport = Framed::new(io, LengthDelimitedCodec::new());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16284788,"byte_end":16284861,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/     let frame = Bytes::from(\"hello world\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16284862,"byte_end":16284909,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16284910,"byte_end":16284913,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     transport.send(frame).await?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16284914,"byte_end":16284951,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"/     Ok(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16284952,"byte_end":16284966,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16284967,"byte_end":16284972,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16284973,"byte_end":16284980,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16284981,"byte_end":16284984,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The encoded frame will look like this:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16284985,"byte_end":16285027,"line_start":60,"line_end":60,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16285028,"byte_end":16285031,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16285032,"byte_end":16285043,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"/ +---- len: u32 ----+---- data ----+","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16285044,"byte_end":16285083,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/ | \\x00\\x00\\x00\\x0b |  hello world |","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16285084,"byte_end":16285123,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/ +------------------+--------------+","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16285124,"byte_end":16285163,"line_start":65,"line_end":65,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16285164,"byte_end":16285171,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16285172,"byte_end":16285175,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # Decoding","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16285176,"byte_end":16285190,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16285191,"byte_end":16285194,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`FramedRead`] adapts an [`AsyncRead`] into a `Stream` of [`BytesMut`],","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16285195,"byte_end":16285270,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/ such that each yielded [`BytesMut`] value contains the contents of an","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16285271,"byte_end":16285344,"line_start":71,"line_end":71,"column_start":1,"column_end":74}},{"value":"/ entire frame. There are many configuration parameters enabling","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16285345,"byte_end":16285411,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/ [`FramedRead`] to handle a wide range of protocols. Here are some","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16285412,"byte_end":16285481,"line_start":73,"line_end":73,"column_start":1,"column_end":70}},{"value":"/ examples that will cover the various options at a high level.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16285482,"byte_end":16285547,"line_start":74,"line_end":74,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16285548,"byte_end":16285551,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ## Example 1","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16285552,"byte_end":16285568,"line_start":76,"line_end":76,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16285569,"byte_end":16285572,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16285573,"byte_end":16285649,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16285650,"byte_end":16285691,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16285692,"byte_end":16285695,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16285696,"byte_end":16285703,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16285704,"byte_end":16285735,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16285736,"byte_end":16285786,"line_start":83,"line_end":83,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16285787,"byte_end":16285828,"line_start":84,"line_end":84,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16285829,"byte_end":16285864,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16285865,"byte_end":16285913,"line_start":86,"line_end":86,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16285914,"byte_end":16285945,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16285946,"byte_end":16285994,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0) // Do not strip frame header","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16285995,"byte_end":16286044,"line_start":89,"line_end":89,"column_start":1,"column_end":50}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16286045,"byte_end":16286067,"line_start":90,"line_end":90,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16286068,"byte_end":16286075,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16286076,"byte_end":16286098,"line_start":92,"line_end":92,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16286099,"byte_end":16286106,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16286107,"byte_end":16286110,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16286111,"byte_end":16286159,"line_start":95,"line_end":95,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16286160,"byte_end":16286163,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16286164,"byte_end":16286175,"line_start":97,"line_end":97,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16286176,"byte_end":16286228,"line_start":98,"line_end":98,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16286229,"byte_end":16286294,"line_start":99,"line_end":99,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0B |  Hello world  | --> | \\x00\\x0B |  Hello world  |","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16286295,"byte_end":16286360,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16286361,"byte_end":16286426,"line_start":101,"line_end":101,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16286427,"byte_end":16286434,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16286435,"byte_end":16286438,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ The value of the length field is 11 (`\\x0B`) which represents the length","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16286439,"byte_end":16286515,"line_start":104,"line_end":104,"column_start":1,"column_end":77}},{"value":"/ of the payload, `hello world`. By default, [`FramedRead`] assumes that","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16286516,"byte_end":16286590,"line_start":105,"line_end":105,"column_start":1,"column_end":75}},{"value":"/ the length field represents the number of bytes that **follows** the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16286591,"byte_end":16286663,"line_start":106,"line_end":106,"column_start":1,"column_end":73}},{"value":"/ length field. Thus, the entire frame has a length of 13: 2 bytes for the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16286664,"byte_end":16286740,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/ frame head + 11 bytes for the payload.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16286741,"byte_end":16286783,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16286784,"byte_end":16286787,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ## Example 2","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16286788,"byte_end":16286804,"line_start":110,"line_end":110,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16286805,"byte_end":16286808,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, omitting the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16286809,"byte_end":16286884,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16286885,"byte_end":16286926,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16286927,"byte_end":16286930,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16286931,"byte_end":16286938,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16286939,"byte_end":16286970,"line_start":116,"line_end":116,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16286971,"byte_end":16287021,"line_start":117,"line_end":117,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16287022,"byte_end":16287063,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16287064,"byte_end":16287099,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16287100,"byte_end":16287148,"line_start":120,"line_end":120,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16287149,"byte_end":16287180,"line_start":121,"line_end":121,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16287181,"byte_end":16287229,"line_start":122,"line_end":122,"column_start":1,"column_end":49}},{"value":"/     // `num_skip` is not needed, the default is to skip","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16287230,"byte_end":16287289,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16287290,"byte_end":16287312,"line_start":124,"line_end":124,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16287313,"byte_end":16287320,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16287321,"byte_end":16287343,"line_start":126,"line_end":126,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16287344,"byte_end":16287351,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16287352,"byte_end":16287355,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16287356,"byte_end":16287404,"line_start":129,"line_end":129,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16287405,"byte_end":16287408,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16287409,"byte_end":16287420,"line_start":131,"line_end":131,"column_start":1,"column_end":12}},{"value":"/          INPUT                        DECODED","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16287421,"byte_end":16287470,"line_start":132,"line_end":132,"column_start":1,"column_end":50}},{"value":"/ +-- len ---+--- Payload ---+     +--- Payload ---+","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16287471,"byte_end":16287525,"line_start":133,"line_end":133,"column_start":1,"column_end":55}},{"value":"/ | \\x00\\x0B |  Hello world  | --> |  Hello world  |","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16287526,"byte_end":16287580,"line_start":134,"line_end":134,"column_start":1,"column_end":55}},{"value":"/ +----------+---------------+     +---------------+","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16287581,"byte_end":16287635,"line_start":135,"line_end":135,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16287636,"byte_end":16287643,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16287644,"byte_end":16287647,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This is similar to the first example, the only difference is that the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16287648,"byte_end":16287721,"line_start":138,"line_end":138,"column_start":1,"column_end":74}},{"value":"/ frame head is **not** included in the yielded `BytesMut` value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16287722,"byte_end":16287789,"line_start":139,"line_end":139,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16287790,"byte_end":16287793,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ ## Example 3","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16287794,"byte_end":16287810,"line_start":141,"line_end":141,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16287811,"byte_end":16287814,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16287815,"byte_end":16287891,"line_start":143,"line_end":143,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`. In this case, the length field","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16287892,"byte_end":16287964,"line_start":144,"line_end":144,"column_start":1,"column_end":73}},{"value":"/ **includes** the frame head length.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16287965,"byte_end":16288004,"line_start":145,"line_end":145,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16288005,"byte_end":16288008,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16288009,"byte_end":16288016,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16288017,"byte_end":16288048,"line_start":148,"line_end":148,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16288049,"byte_end":16288099,"line_start":149,"line_end":149,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16288100,"byte_end":16288141,"line_start":150,"line_end":150,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16288142,"byte_end":16288177,"line_start":151,"line_end":151,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16288178,"byte_end":16288226,"line_start":152,"line_end":152,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16288227,"byte_end":16288258,"line_start":153,"line_end":153,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-2)  // size of head","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16288259,"byte_end":16288306,"line_start":154,"line_end":154,"column_start":1,"column_end":48}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16288307,"byte_end":16288327,"line_start":155,"line_end":155,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16288328,"byte_end":16288350,"line_start":156,"line_end":156,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16288351,"byte_end":16288358,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16288359,"byte_end":16288381,"line_start":158,"line_end":158,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16288382,"byte_end":16288389,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16288390,"byte_end":16288393,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16288394,"byte_end":16288442,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16288443,"byte_end":16288446,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16288447,"byte_end":16288458,"line_start":163,"line_end":163,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16288459,"byte_end":16288511,"line_start":164,"line_end":164,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16288512,"byte_end":16288577,"line_start":165,"line_end":165,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0D |  Hello world  | --> | \\x00\\x0D |  Hello world  |","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16288578,"byte_end":16288643,"line_start":166,"line_end":166,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16288644,"byte_end":16288709,"line_start":167,"line_end":167,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16288710,"byte_end":16288717,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16288718,"byte_end":16288721,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ In most cases, the length field represents the length of the payload","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16288722,"byte_end":16288794,"line_start":170,"line_end":170,"column_start":1,"column_end":73}},{"value":"/ only, as shown in the previous examples. However, in some protocols the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16288795,"byte_end":16288870,"line_start":171,"line_end":171,"column_start":1,"column_end":76}},{"value":"/ length field represents the length of the whole frame, including the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16288871,"byte_end":16288943,"line_start":172,"line_end":172,"column_start":1,"column_end":73}},{"value":"/ head. In such cases, we specify a negative `length_adjustment` to adjust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16288944,"byte_end":16289020,"line_start":173,"line_end":173,"column_start":1,"column_end":77}},{"value":"/ the value provided in the frame head to represent the payload length.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16289021,"byte_end":16289094,"line_start":174,"line_end":174,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16289095,"byte_end":16289098,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ ## Example 4","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16289099,"byte_end":16289115,"line_start":176,"line_end":176,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16289116,"byte_end":16289119,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 5 byte","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16289120,"byte_end":16289194,"line_start":178,"line_end":178,"column_start":1,"column_end":75}},{"value":"/ frame head, including the frame head in the yielded `BytesMut`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16289195,"byte_end":16289262,"line_start":179,"line_end":179,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16289263,"byte_end":16289266,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16289267,"byte_end":16289274,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16289275,"byte_end":16289306,"line_start":182,"line_end":182,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16289307,"byte_end":16289357,"line_start":183,"line_end":183,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16289358,"byte_end":16289399,"line_start":184,"line_end":184,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16289400,"byte_end":16289435,"line_start":185,"line_end":185,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16289436,"byte_end":16289484,"line_start":186,"line_end":186,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16289485,"byte_end":16289516,"line_start":187,"line_end":187,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(2)  // remaining head","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16289517,"byte_end":16289565,"line_start":188,"line_end":188,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16289566,"byte_end":16289586,"line_start":189,"line_end":189,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16289587,"byte_end":16289609,"line_start":190,"line_end":190,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16289610,"byte_end":16289617,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16289618,"byte_end":16289640,"line_start":192,"line_end":192,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16289641,"byte_end":16289648,"line_start":193,"line_end":193,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16289649,"byte_end":16289652,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16289653,"byte_end":16289701,"line_start":195,"line_end":195,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16289702,"byte_end":16289705,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16289706,"byte_end":16289717,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16289718,"byte_end":16289744,"line_start":198,"line_end":198,"column_start":1,"column_end":27}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16289745,"byte_end":16289790,"line_start":199,"line_end":199,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16289791,"byte_end":16289836,"line_start":200,"line_end":200,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16289837,"byte_end":16289882,"line_start":201,"line_end":201,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16289883,"byte_end":16289886,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/                  DECODED","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16289887,"byte_end":16289915,"line_start":203,"line_end":203,"column_start":1,"column_end":29}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16289916,"byte_end":16289961,"line_start":204,"line_end":204,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16289962,"byte_end":16290007,"line_start":205,"line_end":205,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16290008,"byte_end":16290053,"line_start":206,"line_end":206,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16290054,"byte_end":16290061,"line_start":207,"line_end":207,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16290062,"byte_end":16290065,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ A more advanced example that shows a case where there is extra frame","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16290066,"byte_end":16290138,"line_start":209,"line_end":209,"column_start":1,"column_end":73}},{"value":"/ head data between the length field and the payload. In such cases, it is","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16290139,"byte_end":16290215,"line_start":210,"line_end":210,"column_start":1,"column_end":77}},{"value":"/ usually desirable to include the frame head as part of the yielded","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16290216,"byte_end":16290286,"line_start":211,"line_end":211,"column_start":1,"column_end":71}},{"value":"/ `BytesMut`. This lets consumers of the length delimited framer to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16290287,"byte_end":16290356,"line_start":212,"line_end":212,"column_start":1,"column_end":70}},{"value":"/ process the frame head as needed.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16290357,"byte_end":16290394,"line_start":213,"line_end":213,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16290395,"byte_end":16290398,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ The positive `length_adjustment` value lets `FramedRead` factor in the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16290399,"byte_end":16290473,"line_start":215,"line_end":215,"column_start":1,"column_end":75}},{"value":"/ additional head into the frame length calculation.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16290474,"byte_end":16290528,"line_start":216,"line_end":216,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16290529,"byte_end":16290532,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ ## Example 5","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16290533,"byte_end":16290549,"line_start":218,"line_end":218,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16290550,"byte_end":16290553,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16290554,"byte_end":16290627,"line_start":220,"line_end":220,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16290628,"byte_end":16290704,"line_start":221,"line_end":221,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16290705,"byte_end":16290779,"line_start":222,"line_end":222,"column_start":1,"column_end":75}},{"value":"/ included.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16290780,"byte_end":16290793,"line_start":223,"line_end":223,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16290794,"byte_end":16290797,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16290798,"byte_end":16290805,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16290806,"byte_end":16290837,"line_start":226,"line_end":226,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16290838,"byte_end":16290888,"line_start":227,"line_end":227,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16290889,"byte_end":16290930,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16290931,"byte_end":16290966,"line_start":229,"line_end":229,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16290967,"byte_end":16291016,"line_start":230,"line_end":230,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16291017,"byte_end":16291048,"line_start":231,"line_end":231,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(1)  // length of hdr2","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16291049,"byte_end":16291097,"line_start":232,"line_end":232,"column_start":1,"column_end":49}},{"value":"/     .num_skip(3) // length of hdr1 + LEN","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16291098,"byte_end":16291142,"line_start":233,"line_end":233,"column_start":1,"column_end":45}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16291143,"byte_end":16291165,"line_start":234,"line_end":234,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16291166,"byte_end":16291173,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16291174,"byte_end":16291196,"line_start":236,"line_end":236,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16291197,"byte_end":16291204,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16291205,"byte_end":16291208,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16291209,"byte_end":16291257,"line_start":239,"line_end":239,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16291258,"byte_end":16291261,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16291262,"byte_end":16291273,"line_start":241,"line_end":241,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16291274,"byte_end":16291300,"line_start":242,"line_end":242,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16291301,"byte_end":16291351,"line_start":243,"line_end":243,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0B |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16291352,"byte_end":16291402,"line_start":244,"line_end":244,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16291403,"byte_end":16291453,"line_start":245,"line_end":245,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16291454,"byte_end":16291457,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16291458,"byte_end":16291478,"line_start":247,"line_end":247,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16291479,"byte_end":16291509,"line_start":248,"line_end":248,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16291510,"byte_end":16291540,"line_start":249,"line_end":249,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16291541,"byte_end":16291571,"line_start":250,"line_end":250,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16291572,"byte_end":16291579,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16291580,"byte_end":16291583,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ The length field is situated in the middle of the frame head. In this","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16291584,"byte_end":16291657,"line_start":253,"line_end":253,"column_start":1,"column_end":74}},{"value":"/ case, the first byte in the frame head could be a version or some other","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16291658,"byte_end":16291733,"line_start":254,"line_end":254,"column_start":1,"column_end":76}},{"value":"/ identifier that is not needed for processing. On the other hand, the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16291734,"byte_end":16291806,"line_start":255,"line_end":255,"column_start":1,"column_end":73}},{"value":"/ second half of the head is needed.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16291807,"byte_end":16291845,"line_start":256,"line_end":256,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16291846,"byte_end":16291849,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ `length_field_offset` indicates how many bytes to skip before starting","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16291850,"byte_end":16291924,"line_start":258,"line_end":258,"column_start":1,"column_end":75}},{"value":"/ to read the length field.  `length_adjustment` is the number of bytes to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16291925,"byte_end":16292001,"line_start":259,"line_end":259,"column_start":1,"column_end":77}},{"value":"/ skip starting at the end of the length field. In this case, it is the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16292002,"byte_end":16292075,"line_start":260,"line_end":260,"column_start":1,"column_end":74}},{"value":"/ second half of the head.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16292076,"byte_end":16292104,"line_start":261,"line_end":261,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16292105,"byte_end":16292108,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ ## Example 6","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16292109,"byte_end":16292125,"line_start":263,"line_end":263,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16292126,"byte_end":16292129,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16292130,"byte_end":16292203,"line_start":265,"line_end":265,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16292204,"byte_end":16292280,"line_start":266,"line_end":266,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16292281,"byte_end":16292355,"line_start":267,"line_end":267,"column_start":1,"column_end":75}},{"value":"/ included. In this case, the length field **includes** the frame head","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16292356,"byte_end":16292428,"line_start":268,"line_end":268,"column_start":1,"column_end":73}},{"value":"/ length.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16292429,"byte_end":16292440,"line_start":269,"line_end":269,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16292441,"byte_end":16292444,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16292445,"byte_end":16292452,"line_start":271,"line_end":271,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16292453,"byte_end":16292484,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16292485,"byte_end":16292535,"line_start":273,"line_end":273,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16292536,"byte_end":16292577,"line_start":274,"line_end":274,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16292578,"byte_end":16292613,"line_start":275,"line_end":275,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16292614,"byte_end":16292663,"line_start":276,"line_end":276,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16292664,"byte_end":16292695,"line_start":277,"line_end":277,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-3)  // length of hdr1 + LEN, negative","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16292696,"byte_end":16292761,"line_start":278,"line_end":278,"column_start":1,"column_end":66}},{"value":"/     .num_skip(3)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16292762,"byte_end":16292782,"line_start":279,"line_end":279,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16292783,"byte_end":16292805,"line_start":280,"line_end":280,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16292806,"byte_end":16292813,"line_start":281,"line_end":281,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16292814,"byte_end":16292821,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16292822,"byte_end":16292825,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16292826,"byte_end":16292874,"line_start":284,"line_end":284,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16292875,"byte_end":16292878,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16292879,"byte_end":16292890,"line_start":286,"line_end":286,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16292891,"byte_end":16292917,"line_start":287,"line_end":287,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16292918,"byte_end":16292968,"line_start":288,"line_end":288,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0F |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16292969,"byte_end":16293019,"line_start":289,"line_end":289,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16293020,"byte_end":16293070,"line_start":290,"line_end":290,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16293071,"byte_end":16293074,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16293075,"byte_end":16293095,"line_start":292,"line_end":292,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16293096,"byte_end":16293126,"line_start":293,"line_end":293,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16293127,"byte_end":16293157,"line_start":294,"line_end":294,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16293158,"byte_end":16293188,"line_start":295,"line_end":295,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16293189,"byte_end":16293196,"line_start":296,"line_end":296,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16293197,"byte_end":16293200,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ Similar to the example above, the difference is that the length field","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16293201,"byte_end":16293274,"line_start":298,"line_end":298,"column_start":1,"column_end":74}},{"value":"/ represents the length of the entire frame instead of just the payload.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16293275,"byte_end":16293349,"line_start":299,"line_end":299,"column_start":1,"column_end":75}},{"value":"/ The length of `hdr1` and `len` must be counted in `length_adjustment`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16293350,"byte_end":16293424,"line_start":300,"line_end":300,"column_start":1,"column_end":75}},{"value":"/ Note that the length of `hdr2` does **not** need to be explicitly set","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16293425,"byte_end":16293498,"line_start":301,"line_end":301,"column_start":1,"column_end":74}},{"value":"/ anywhere because it already is factored into the total frame length that","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16293499,"byte_end":16293575,"line_start":302,"line_end":302,"column_start":1,"column_end":77}},{"value":"/ is read from the byte stream.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16293576,"byte_end":16293609,"line_start":303,"line_end":303,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16293610,"byte_end":16293613,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ ## Example 7","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16293614,"byte_end":16293630,"line_start":305,"line_end":305,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16293631,"byte_end":16293634,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 4 byte","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16293635,"byte_end":16293709,"line_start":307,"line_end":307,"column_start":1,"column_end":75}},{"value":"/ frame head, excluding the 4th byte from the yielded `BytesMut`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16293710,"byte_end":16293777,"line_start":308,"line_end":308,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16293778,"byte_end":16293781,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16293782,"byte_end":16293789,"line_start":310,"line_end":310,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16293790,"byte_end":16293821,"line_start":311,"line_end":311,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16293822,"byte_end":16293872,"line_start":312,"line_end":312,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16293873,"byte_end":16293914,"line_start":313,"line_end":313,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16293915,"byte_end":16293950,"line_start":314,"line_end":314,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16293951,"byte_end":16293999,"line_start":315,"line_end":315,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16294000,"byte_end":16294031,"line_start":316,"line_end":316,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)  // default value","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16294032,"byte_end":16294079,"line_start":317,"line_end":317,"column_start":1,"column_end":48}},{"value":"/     .num_skip(4) // skip the first 4 bytes","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16294080,"byte_end":16294126,"line_start":318,"line_end":318,"column_start":1,"column_end":47}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16294127,"byte_end":16294149,"line_start":319,"line_end":319,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16294150,"byte_end":16294157,"line_start":320,"line_end":320,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16294158,"byte_end":16294180,"line_start":321,"line_end":321,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16294181,"byte_end":16294188,"line_start":322,"line_end":322,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16294189,"byte_end":16294192,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16294193,"byte_end":16294241,"line_start":324,"line_end":324,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16294242,"byte_end":16294245,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16294246,"byte_end":16294257,"line_start":326,"line_end":326,"column_start":1,"column_end":12}},{"value":"/                  INPUT                       DECODED","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16294258,"byte_end":16294314,"line_start":327,"line_end":327,"column_start":1,"column_end":57}},{"value":"/ +------- len ------+--- Payload ---+    +--- Payload ---+","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16294315,"byte_end":16294376,"line_start":328,"line_end":328,"column_start":1,"column_end":62}},{"value":"/ | \\x00\\x00\\x0B\\xFF |  Hello world  | => |  Hello world  |","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16294377,"byte_end":16294438,"line_start":329,"line_end":329,"column_start":1,"column_end":62}},{"value":"/ +------------------+---------------+    +---------------+","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16294439,"byte_end":16294500,"line_start":330,"line_end":330,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16294501,"byte_end":16294508,"line_start":331,"line_end":331,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16294509,"byte_end":16294512,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ A simple example where there are unused bytes between the length field","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16294513,"byte_end":16294587,"line_start":333,"line_end":333,"column_start":1,"column_end":75}},{"value":"/ and the payload.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16294588,"byte_end":16294608,"line_start":334,"line_end":334,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16294609,"byte_end":16294612,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ # Encoding","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16294613,"byte_end":16294627,"line_start":336,"line_end":336,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16294628,"byte_end":16294631,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`] adapts an [`AsyncWrite`] into a `Sink` of [`BytesMut`],","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16294632,"byte_end":16294707,"line_start":338,"line_end":338,"column_start":1,"column_end":76}},{"value":"/ such that each submitted [`BytesMut`] is prefaced by a length field.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16294708,"byte_end":16294780,"line_start":339,"line_end":339,"column_start":1,"column_end":73}},{"value":"/ There are fewer configuration options than [`FramedRead`]. Given","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16294781,"byte_end":16294849,"line_start":340,"line_end":340,"column_start":1,"column_end":69}},{"value":"/ protocols that have more complex frame heads, an encoder should probably","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16294850,"byte_end":16294926,"line_start":341,"line_end":341,"column_start":1,"column_end":77}},{"value":"/ be written by hand using [`Encoder`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16294927,"byte_end":16294968,"line_start":342,"line_end":342,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16294969,"byte_end":16294972,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ Here is a simple example, given a `FramedWrite` with the following","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16294973,"byte_end":16295043,"line_start":344,"line_end":344,"column_start":1,"column_end":71}},{"value":"/ configuration:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16295044,"byte_end":16295062,"line_start":345,"line_end":345,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16295063,"byte_end":16295066,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16295067,"byte_end":16295074,"line_start":347,"line_end":347,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16295075,"byte_end":16295107,"line_start":348,"line_end":348,"column_start":1,"column_end":33}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16295108,"byte_end":16295158,"line_start":349,"line_end":349,"column_start":1,"column_end":51}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16295159,"byte_end":16295203,"line_start":350,"line_end":350,"column_start":1,"column_end":45}},{"value":"/ # let _ =","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16295204,"byte_end":16295217,"line_start":351,"line_end":351,"column_start":1,"column_end":14}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16295218,"byte_end":16295253,"line_start":352,"line_end":352,"column_start":1,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16295254,"byte_end":16295285,"line_start":353,"line_end":353,"column_start":1,"column_end":32}},{"value":"/     .new_write(io);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16295286,"byte_end":16295309,"line_start":354,"line_end":354,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16295310,"byte_end":16295317,"line_start":355,"line_end":355,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16295318,"byte_end":16295340,"line_start":356,"line_end":356,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16295341,"byte_end":16295348,"line_start":357,"line_end":357,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16295349,"byte_end":16295352,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ A payload of `hello world` will be encoded as:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16295353,"byte_end":16295403,"line_start":359,"line_end":359,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16295404,"byte_end":16295407,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16295408,"byte_end":16295419,"line_start":361,"line_end":361,"column_start":1,"column_end":12}},{"value":"/ +- len: u16 -+---- data ----+","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16295420,"byte_end":16295453,"line_start":362,"line_end":362,"column_start":1,"column_end":34}},{"value":"/ |  \\x00\\x0b  |  hello world |","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16295454,"byte_end":16295487,"line_start":363,"line_end":363,"column_start":1,"column_end":34}},{"value":"/ +------------+--------------+","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16295488,"byte_end":16295521,"line_start":364,"line_end":364,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16295522,"byte_end":16295529,"line_start":365,"line_end":365,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16295530,"byte_end":16295533,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ [`LengthDelimitedCodec::new()`]: method@LengthDelimitedCodec::new","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16295534,"byte_end":16295603,"line_start":367,"line_end":367,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]: struct@FramedRead","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16295604,"byte_end":16295641,"line_start":368,"line_end":368,"column_start":1,"column_end":38}},{"value":"/ [`FramedWrite`]: struct@FramedWrite","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16295642,"byte_end":16295681,"line_start":369,"line_end":369,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: trait@tokio::io::AsyncRead","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16295682,"byte_end":16295727,"line_start":370,"line_end":370,"column_start":1,"column_end":46}},{"value":"/ [`AsyncWrite`]: trait@tokio::io::AsyncWrite","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16295728,"byte_end":16295775,"line_start":371,"line_end":371,"column_start":1,"column_end":48}},{"value":"/ [`Encoder`]: trait@Encoder","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16295776,"byte_end":16295806,"line_start":372,"line_end":372,"column_start":1,"column_end":31}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16295807,"byte_end":16295840,"line_start":373,"line_end":373,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1153},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16296402,"byte_end":16296409,"line_start":390,"line_end":390,"column_start":12,"column_end":19},"name":"Builder","qualname":"::codec::length_delimited::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":1154},{"krate":0,"index":1155},{"krate":0,"index":1156},{"krate":0,"index":1157},{"krate":0,"index":1158},{"krate":0,"index":1159}],"decl_id":null,"docs":" Configure length delimited `LengthDelimitedCodec`s.","sig":null,"attributes":[{"value":"/ Configure length delimited `LengthDelimitedCodec`s.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16296084,"byte_end":16296139,"line_start":384,"line_end":384,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16296140,"byte_end":16296143,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ `Builder` enables constructing configured length delimited codecs. Note","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16296144,"byte_end":16296219,"line_start":386,"line_end":386,"column_start":1,"column_end":76}},{"value":"/ that not all configuration settings apply to both encoding and decoding. See","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16296220,"byte_end":16296300,"line_start":387,"line_end":387,"column_start":1,"column_end":81}},{"value":"/ the documentation for specific methods for more detail.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16296301,"byte_end":16296360,"line_start":388,"line_end":388,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":922},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16297080,"byte_end":16297105,"line_start":412,"line_end":412,"column_start":12,"column_end":37},"name":"LengthDelimitedCodecError","qualname":"::codec::length_delimited::LengthDelimitedCodecError","value":"LengthDelimitedCodecError {  }","parent":null,"children":[{"krate":0,"index":923}],"decl_id":null,"docs":" An error when the number of bytes read is more than max frame length.\n","sig":null,"attributes":[{"value":"/ An error when the number of bytes read is more than max frame length.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16296995,"byte_end":16297068,"line_start":411,"line_end":411,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1165},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16297457,"byte_end":16297477,"line_start":425,"line_end":425,"column_start":12,"column_end":32},"name":"LengthDelimitedCodec","qualname":"::codec::length_delimited::LengthDelimitedCodec","value":"LengthDelimitedCodec {  }","parent":null,"children":[{"krate":0,"index":1166},{"krate":0,"index":1167}],"decl_id":null,"docs":" A codec for frames delimited by a frame head specifying their lengths.","sig":null,"attributes":[{"value":"/ A codec for frames delimited by a frame head specifying their lengths.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16297126,"byte_end":16297200,"line_start":416,"line_end":416,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16297201,"byte_end":16297204,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ This allows the consumer to work with entire frames without having to worry","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16297205,"byte_end":16297284,"line_start":418,"line_end":418,"column_start":1,"column_end":80}},{"value":"/ about buffering or other framing logic.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16297285,"byte_end":16297328,"line_start":419,"line_end":419,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16297329,"byte_end":16297332,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ See [module level] documentation for more detail.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16297333,"byte_end":16297386,"line_start":421,"line_end":421,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16297387,"byte_end":16297390,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ [module level]: index.html","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16297391,"byte_end":16297421,"line_start":423,"line_end":423,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":925},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16297821,"byte_end":16297824,"line_start":443,"line_end":443,"column_start":12,"column_end":15},"name":"new","qualname":"<LengthDelimitedCodec>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `LengthDelimitedCodec` with the default configuration values.\n","sig":null,"attributes":[{"value":"/ Creates a new `LengthDelimitedCodec` with the default configuration values.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16297730,"byte_end":16297809,"line_start":442,"line_end":442,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":926},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16298051,"byte_end":16298058,"line_start":452,"line_end":452,"column_start":12,"column_end":19},"name":"builder","qualname":"<LengthDelimitedCodec>::builder","value":"fn builder() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.\n","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16297948,"byte_end":16298023,"line_start":450,"line_end":450,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16298028,"byte_end":16298039,"line_start":451,"line_end":451,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":927},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16298280,"byte_end":16298296,"line_start":460,"line_end":460,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<LengthDelimitedCodec>::max_frame_length","value":"fn max_frame_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current max frame setting","sig":null,"attributes":[{"value":"/ Returns the current max frame setting","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16298108,"byte_end":16298149,"line_start":456,"line_end":456,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16298154,"byte_end":16298157,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ This is the largest size this codec will accept from the wire. Larger","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16298162,"byte_end":16298235,"line_start":458,"line_end":458,"column_start":5,"column_end":78}},{"value":"/ frames will be rejected.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16298240,"byte_end":16298268,"line_start":459,"line_end":459,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":928},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16298717,"byte_end":16298737,"line_start":470,"line_end":470,"column_start":12,"column_end":32},"name":"set_max_frame_length","qualname":"<LengthDelimitedCodec>::set_max_frame_length","value":"fn set_max_frame_length(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Updates the max frame setting.","sig":null,"attributes":[{"value":"/ Updates the max frame setting.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16298361,"byte_end":16298395,"line_start":464,"line_end":464,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16298400,"byte_end":16298403,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ The change takes effect the next time a frame is decoded. In other","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16298408,"byte_end":16298478,"line_start":466,"line_end":466,"column_start":5,"column_end":75}},{"value":"/ words, if a frame is currently in process of being decoded with a frame","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16298483,"byte_end":16298558,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ size greater than `val` but less than the max frame length in effect","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16298563,"byte_end":16298635,"line_start":468,"line_end":468,"column_start":5,"column_end":77}},{"value":"/ before calling this function, then the frame will be allowed.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16298640,"byte_end":16298705,"line_start":469,"line_end":469,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":934},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16301142,"byte_end":16301148,"line_start":553,"line_end":553,"column_start":8,"column_end":14},"name":"decode","qualname":"<LengthDelimitedCodec as codec::decoder::Decoder>::decode","value":"fn decode(&mut Self, &mut BytesMut) -> io::Result<Option<BytesMut>>","parent":{"krate":0,"index":475},"children":[],"decl_id":{"krate":0,"index":478},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":937},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16302022,"byte_end":16302028,"line_start":583,"line_end":583,"column_start":8,"column_end":14},"name":"encode","qualname":"<LengthDelimitedCodec as codec::encoder::Encoder>::encode","value":"fn encode(&mut Self, Bytes, &mut BytesMut) -> Result<(), io::Error>","parent":{"krate":0,"index":492},"children":[],"decl_id":{"krate":0,"index":495},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":940},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16303354,"byte_end":16303361,"line_start":625,"line_end":625,"column_start":8,"column_end":15},"name":"default","qualname":"<LengthDelimitedCodec as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":942},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16303993,"byte_end":16303996,"line_start":652,"line_end":652,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16303451,"byte_end":16303526,"line_start":633,"line_end":633,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16303531,"byte_end":16303542,"line_start":634,"line_end":634,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16303547,"byte_end":16303550,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16303555,"byte_end":16303569,"line_start":636,"line_end":636,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16303574,"byte_end":16303577,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16303582,"byte_end":16303589,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16303594,"byte_end":16303625,"line_start":639,"line_end":639,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16303630,"byte_end":16303678,"line_start":640,"line_end":640,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16303683,"byte_end":16303686,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16303691,"byte_end":16303732,"line_start":642,"line_end":642,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16303737,"byte_end":16303772,"line_start":643,"line_end":643,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16303777,"byte_end":16303808,"line_start":644,"line_end":644,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16303813,"byte_end":16303844,"line_start":645,"line_end":645,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16303849,"byte_end":16303878,"line_start":646,"line_end":646,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16303883,"byte_end":16303903,"line_start":647,"line_end":647,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16303908,"byte_end":16303930,"line_start":648,"line_end":648,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16303935,"byte_end":16303942,"line_start":649,"line_end":649,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16303947,"byte_end":16303969,"line_start":650,"line_end":650,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16303974,"byte_end":16303981,"line_start":651,"line_end":651,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":943},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16305181,"byte_end":16305191,"line_start":693,"line_end":693,"column_start":12,"column_end":22},"name":"big_endian","qualname":"<Builder>::big_endian","value":"fn big_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a big endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a big endian integer","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16304660,"byte_end":16304709,"line_start":674,"line_end":674,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16304714,"byte_end":16304717,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ This is the default setting.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16304722,"byte_end":16304754,"line_start":676,"line_end":676,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16304759,"byte_end":16304762,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16304767,"byte_end":16304835,"line_start":678,"line_end":678,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16304840,"byte_end":16304843,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16304848,"byte_end":16304862,"line_start":680,"line_end":680,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16304867,"byte_end":16304870,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16304875,"byte_end":16304882,"line_start":682,"line_end":682,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16304887,"byte_end":16304918,"line_start":683,"line_end":683,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16304923,"byte_end":16304971,"line_start":684,"line_end":684,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16304976,"byte_end":16304979,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16304984,"byte_end":16305025,"line_start":686,"line_end":686,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16305030,"byte_end":16305065,"line_start":687,"line_end":687,"column_start":5,"column_end":40}},{"value":"/     .big_endian()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16305070,"byte_end":16305091,"line_start":688,"line_end":688,"column_start":5,"column_end":26}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16305096,"byte_end":16305118,"line_start":689,"line_end":689,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16305123,"byte_end":16305130,"line_start":690,"line_end":690,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16305135,"byte_end":16305157,"line_start":691,"line_end":691,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16305162,"byte_end":16305169,"line_start":692,"line_end":692,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":944},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16305823,"byte_end":16305836,"line_start":717,"line_end":717,"column_start":12,"column_end":25},"name":"little_endian","qualname":"<Builder>::little_endian","value":"fn little_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a little endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a little endian integer","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16305290,"byte_end":16305342,"line_start":698,"line_end":698,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16305347,"byte_end":16305350,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16305355,"byte_end":16305393,"line_start":700,"line_end":700,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16305398,"byte_end":16305401,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16305406,"byte_end":16305474,"line_start":702,"line_end":702,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16305479,"byte_end":16305482,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16305487,"byte_end":16305501,"line_start":704,"line_end":704,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16305506,"byte_end":16305509,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16305514,"byte_end":16305521,"line_start":706,"line_end":706,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16305526,"byte_end":16305557,"line_start":707,"line_end":707,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16305562,"byte_end":16305610,"line_start":708,"line_end":708,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16305615,"byte_end":16305618,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16305623,"byte_end":16305664,"line_start":710,"line_end":710,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16305669,"byte_end":16305704,"line_start":711,"line_end":711,"column_start":5,"column_end":40}},{"value":"/     .little_endian()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16305709,"byte_end":16305733,"line_start":712,"line_end":712,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16305738,"byte_end":16305760,"line_start":713,"line_end":713,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16305765,"byte_end":16305772,"line_start":714,"line_end":714,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16305777,"byte_end":16305799,"line_start":715,"line_end":715,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16305804,"byte_end":16305811,"line_start":716,"line_end":716,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":945},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16306469,"byte_end":16306482,"line_start":741,"line_end":741,"column_start":12,"column_end":25},"name":"native_endian","qualname":"<Builder>::native_endian","value":"fn native_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a native endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a native endian integer","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16305936,"byte_end":16305988,"line_start":722,"line_end":722,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16305993,"byte_end":16305996,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16306001,"byte_end":16306039,"line_start":724,"line_end":724,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16306044,"byte_end":16306047,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16306052,"byte_end":16306120,"line_start":726,"line_end":726,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16306125,"byte_end":16306128,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16306133,"byte_end":16306147,"line_start":728,"line_end":728,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16306152,"byte_end":16306155,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16306160,"byte_end":16306167,"line_start":730,"line_end":730,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16306172,"byte_end":16306203,"line_start":731,"line_end":731,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16306208,"byte_end":16306256,"line_start":732,"line_end":732,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16306261,"byte_end":16306264,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16306269,"byte_end":16306310,"line_start":734,"line_end":734,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16306315,"byte_end":16306350,"line_start":735,"line_end":735,"column_start":5,"column_end":40}},{"value":"/     .native_endian()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16306355,"byte_end":16306379,"line_start":736,"line_end":736,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16306384,"byte_end":16306406,"line_start":737,"line_end":737,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16306411,"byte_end":16306418,"line_start":738,"line_end":738,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16306423,"byte_end":16306445,"line_start":739,"line_end":739,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16306450,"byte_end":16306457,"line_start":740,"line_end":740,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":946},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16307563,"byte_end":16307579,"line_start":775,"line_end":775,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<Builder>::max_frame_length","value":"fn max_frame_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max frame length","sig":null,"attributes":[{"value":"/ Sets the max frame length","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16306651,"byte_end":16306680,"line_start":749,"line_end":749,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16306685,"byte_end":16306688,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding. The","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16306693,"byte_end":16306765,"line_start":751,"line_end":751,"column_start":5,"column_end":77}},{"value":"/ default value is 8MB.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16306770,"byte_end":16306795,"line_start":752,"line_end":752,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16306800,"byte_end":16306803,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ When decoding, the length field read from the byte stream is checked","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16306808,"byte_end":16306880,"line_start":754,"line_end":754,"column_start":5,"column_end":77}},{"value":"/ against this setting **before** any adjustments are applied. When","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16306885,"byte_end":16306954,"line_start":755,"line_end":755,"column_start":5,"column_end":74}},{"value":"/ encoding, the length of the submitted payload is checked against this","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16306959,"byte_end":16307032,"line_start":756,"line_end":756,"column_start":5,"column_end":78}},{"value":"/ setting.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16307037,"byte_end":16307049,"line_start":757,"line_end":757,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16307054,"byte_end":16307057,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ When frames exceed the max length, an `io::Error` with the custom value","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16307062,"byte_end":16307137,"line_start":759,"line_end":759,"column_start":5,"column_end":80}},{"value":"/ of the `LengthDelimitedCodecError` type will be returned.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16307142,"byte_end":16307203,"line_start":760,"line_end":760,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16307208,"byte_end":16307211,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16307216,"byte_end":16307230,"line_start":762,"line_end":762,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16307235,"byte_end":16307238,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16307243,"byte_end":16307250,"line_start":764,"line_end":764,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16307255,"byte_end":16307286,"line_start":765,"line_end":765,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16307291,"byte_end":16307339,"line_start":766,"line_end":766,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16307344,"byte_end":16307347,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16307352,"byte_end":16307393,"line_start":768,"line_end":768,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16307398,"byte_end":16307433,"line_start":769,"line_end":769,"column_start":5,"column_end":40}},{"value":"/     .max_frame_length(8 * 1024)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16307438,"byte_end":16307473,"line_start":770,"line_end":770,"column_start":5,"column_end":40}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16307478,"byte_end":16307500,"line_start":771,"line_end":771,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16307505,"byte_end":16307512,"line_start":772,"line_end":772,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16307517,"byte_end":16307539,"line_start":773,"line_end":773,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16307544,"byte_end":16307551,"line_start":774,"line_end":774,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":947},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16308240,"byte_end":16308259,"line_start":799,"line_end":799,"column_start":12,"column_end":31},"name":"length_field_length","qualname":"<Builder>::length_field_length","value":"fn length_field_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes used to represent the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes used to represent the length field","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16307676,"byte_end":16307739,"line_start":780,"line_end":780,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16307744,"byte_end":16307747,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ The default value is `4`. The max value is `8`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16307752,"byte_end":16307803,"line_start":782,"line_end":782,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16307808,"byte_end":16307811,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16307816,"byte_end":16307884,"line_start":784,"line_end":784,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16307889,"byte_end":16307892,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16307897,"byte_end":16307911,"line_start":786,"line_end":786,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16307916,"byte_end":16307919,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16307924,"byte_end":16307931,"line_start":788,"line_end":788,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16307936,"byte_end":16307967,"line_start":789,"line_end":789,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16307972,"byte_end":16308020,"line_start":790,"line_end":790,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16308025,"byte_end":16308028,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16308033,"byte_end":16308074,"line_start":792,"line_end":792,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16308079,"byte_end":16308114,"line_start":793,"line_end":793,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(4)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16308119,"byte_end":16308150,"line_start":794,"line_end":794,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16308155,"byte_end":16308177,"line_start":795,"line_end":795,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16308182,"byte_end":16308189,"line_start":796,"line_end":796,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16308194,"byte_end":16308216,"line_start":797,"line_end":797,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16308221,"byte_end":16308228,"line_start":798,"line_end":798,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":948},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16308918,"byte_end":16308937,"line_start":822,"line_end":822,"column_start":12,"column_end":31},"name":"length_field_offset","qualname":"<Builder>::length_field_offset","value":"fn length_field_offset(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes in the header before the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes in the header before the length field","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16308428,"byte_end":16308494,"line_start":805,"line_end":805,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16308499,"byte_end":16308502,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16308507,"byte_end":16308562,"line_start":807,"line_end":807,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16308567,"byte_end":16308570,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16308575,"byte_end":16308589,"line_start":809,"line_end":809,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16308594,"byte_end":16308597,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16308602,"byte_end":16308609,"line_start":811,"line_end":811,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16308614,"byte_end":16308645,"line_start":812,"line_end":812,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16308650,"byte_end":16308698,"line_start":813,"line_end":813,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16308703,"byte_end":16308706,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16308711,"byte_end":16308752,"line_start":815,"line_end":815,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16308757,"byte_end":16308792,"line_start":816,"line_end":816,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(1)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16308797,"byte_end":16308828,"line_start":817,"line_end":817,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16308833,"byte_end":16308855,"line_start":818,"line_end":818,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16308860,"byte_end":16308867,"line_start":819,"line_end":819,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16308872,"byte_end":16308894,"line_start":820,"line_end":820,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16308899,"byte_end":16308906,"line_start":821,"line_end":821,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":949},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16309491,"byte_end":16309508,"line_start":843,"line_end":843,"column_start":12,"column_end":29},"name":"length_adjustment","qualname":"<Builder>::length_adjustment","value":"fn length_adjustment(&mut Self, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Delta between the payload length specified in the header and the real\n payload length","sig":null,"attributes":[{"value":"/ Delta between the payload length specified in the header and the real","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16309040,"byte_end":16309113,"line_start":827,"line_end":827,"column_start":5,"column_end":78}},{"value":"/ payload length","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16309118,"byte_end":16309136,"line_start":828,"line_end":828,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16309141,"byte_end":16309144,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16309149,"byte_end":16309163,"line_start":830,"line_end":830,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16309168,"byte_end":16309171,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16309176,"byte_end":16309183,"line_start":832,"line_end":832,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16309188,"byte_end":16309219,"line_start":833,"line_end":833,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16309224,"byte_end":16309272,"line_start":834,"line_end":834,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16309277,"byte_end":16309280,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16309285,"byte_end":16309326,"line_start":836,"line_end":836,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16309331,"byte_end":16309366,"line_start":837,"line_end":837,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(-2)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16309371,"byte_end":16309401,"line_start":838,"line_end":838,"column_start":5,"column_end":35}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16309406,"byte_end":16309428,"line_start":839,"line_end":839,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16309433,"byte_end":16309440,"line_start":840,"line_end":840,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16309445,"byte_end":16309467,"line_start":841,"line_end":841,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16309472,"byte_end":16309479,"line_start":842,"line_end":842,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":950},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16310158,"byte_end":16310166,"line_start":867,"line_end":867,"column_start":12,"column_end":20},"name":"num_skip","qualname":"<Builder>::num_skip","value":"fn num_skip(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes to skip before reading the payload","sig":null,"attributes":[{"value":"/ Sets the number of bytes to skip before reading the payload","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16309609,"byte_end":16309672,"line_start":848,"line_end":848,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16309677,"byte_end":16309680,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ Default value is `length_field_len + length_field_offset`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16309685,"byte_end":16309746,"line_start":850,"line_end":850,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16309751,"byte_end":16309754,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16309759,"byte_end":16309813,"line_start":852,"line_end":852,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16309818,"byte_end":16309821,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16309826,"byte_end":16309840,"line_start":854,"line_end":854,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16309845,"byte_end":16309848,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16309853,"byte_end":16309860,"line_start":856,"line_end":856,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16309865,"byte_end":16309896,"line_start":857,"line_end":857,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16309901,"byte_end":16309949,"line_start":858,"line_end":858,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16309954,"byte_end":16309957,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16309962,"byte_end":16310003,"line_start":860,"line_end":860,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16310008,"byte_end":16310043,"line_start":861,"line_end":861,"column_start":5,"column_end":40}},{"value":"/     .num_skip(4)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16310048,"byte_end":16310068,"line_start":862,"line_end":862,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16310073,"byte_end":16310095,"line_start":863,"line_end":863,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16310100,"byte_end":16310107,"line_start":864,"line_end":864,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16310112,"byte_end":16310134,"line_start":865,"line_end":865,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16310139,"byte_end":16310146,"line_start":866,"line_end":866,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":951},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16310686,"byte_end":16310695,"line_start":887,"line_end":887,"column_start":12,"column_end":21},"name":"new_codec","qualname":"<Builder>::new_codec","value":"fn new_codec(&Self) -> LengthDelimitedCodec","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `LengthDelimitedCodec`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `LengthDelimitedCodec`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16310264,"byte_end":16310327,"line_start":872,"line_end":872,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16310332,"byte_end":16310335,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16310340,"byte_end":16310354,"line_start":874,"line_end":874,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16310359,"byte_end":16310362,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16310367,"byte_end":16310374,"line_start":876,"line_end":876,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16310379,"byte_end":16310427,"line_start":877,"line_end":877,"column_start":5,"column_end":53}},{"value":"/ # pub fn main() {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16310432,"byte_end":16310453,"line_start":878,"line_end":878,"column_start":5,"column_end":26}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16310458,"byte_end":16310493,"line_start":879,"line_end":879,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16310498,"byte_end":16310529,"line_start":880,"line_end":880,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16310534,"byte_end":16310565,"line_start":881,"line_end":881,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16310570,"byte_end":16310599,"line_start":882,"line_end":882,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16310604,"byte_end":16310624,"line_start":883,"line_end":883,"column_start":5,"column_end":25}},{"value":"/     .new_codec();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16310629,"byte_end":16310650,"line_start":884,"line_end":884,"column_start":5,"column_end":26}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16310655,"byte_end":16310662,"line_start":885,"line_end":885,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16310667,"byte_end":16310674,"line_start":886,"line_end":886,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":952},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16311351,"byte_end":16311359,"line_start":912,"line_end":912,"column_start":12,"column_end":20},"name":"new_read","qualname":"<Builder>::new_read","value":"fn new_read<T>(&Self, T) -> FramedRead<T, LengthDelimitedCodec> where\nT: AsyncRead","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedRead`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedRead`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16310847,"byte_end":16310900,"line_start":894,"line_end":894,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16310905,"byte_end":16310908,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16310913,"byte_end":16310927,"line_start":896,"line_end":896,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16310932,"byte_end":16310935,"line_start":897,"line_end":897,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16310940,"byte_end":16310947,"line_start":898,"line_end":898,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16310952,"byte_end":16310983,"line_start":899,"line_end":899,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16310988,"byte_end":16311036,"line_start":900,"line_end":900,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16311041,"byte_end":16311044,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16311049,"byte_end":16311090,"line_start":902,"line_end":902,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16311095,"byte_end":16311130,"line_start":903,"line_end":903,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16311135,"byte_end":16311166,"line_start":904,"line_end":904,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16311171,"byte_end":16311202,"line_start":905,"line_end":905,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16311207,"byte_end":16311236,"line_start":906,"line_end":906,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16311241,"byte_end":16311261,"line_start":907,"line_end":907,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16311266,"byte_end":16311288,"line_start":908,"line_end":908,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16311293,"byte_end":16311300,"line_start":909,"line_end":909,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16311305,"byte_end":16311327,"line_start":910,"line_end":910,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16311332,"byte_end":16311339,"line_start":911,"line_end":911,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":954},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16311932,"byte_end":16311941,"line_start":933,"line_end":933,"column_start":12,"column_end":21},"name":"new_write","qualname":"<Builder>::new_write","value":"fn new_write<T>(&Self, T) -> FramedWrite<T, LengthDelimitedCodec> where\nT: AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedWrite`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedWrite`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16311523,"byte_end":16311577,"line_start":919,"line_end":919,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16311582,"byte_end":16311585,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16311590,"byte_end":16311604,"line_start":921,"line_end":921,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16311609,"byte_end":16311612,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16311617,"byte_end":16311624,"line_start":923,"line_end":923,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16311629,"byte_end":16311661,"line_start":924,"line_end":924,"column_start":5,"column_end":37}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16311666,"byte_end":16311716,"line_start":925,"line_end":925,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16311721,"byte_end":16311765,"line_start":926,"line_end":926,"column_start":5,"column_end":49}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16311770,"byte_end":16311805,"line_start":927,"line_end":927,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16311810,"byte_end":16311841,"line_start":928,"line_end":928,"column_start":5,"column_end":36}},{"value":"/     .new_write(io);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16311846,"byte_end":16311869,"line_start":929,"line_end":929,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16311874,"byte_end":16311881,"line_start":930,"line_end":930,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16311886,"byte_end":16311908,"line_start":931,"line_end":931,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16311913,"byte_end":16311920,"line_start":932,"line_end":932,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":956},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16312550,"byte_end":16312560,"line_start":955,"line_end":955,"column_start":12,"column_end":22},"name":"new_framed","qualname":"<Builder>::new_framed","value":"fn new_framed<T>(&Self, T) -> Framed<T, LengthDelimitedCodec> where\nT: AsyncRead + AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `Framed`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `Framed`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16312102,"byte_end":16312151,"line_start":940,"line_end":940,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16312156,"byte_end":16312159,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16312164,"byte_end":16312178,"line_start":942,"line_end":942,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16312183,"byte_end":16312186,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16312191,"byte_end":16312198,"line_start":944,"line_end":944,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16312203,"byte_end":16312248,"line_start":945,"line_end":945,"column_start":5,"column_end":50}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16312253,"byte_end":16312303,"line_start":946,"line_end":946,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncRead + AsyncWrite>(io: T) {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16312308,"byte_end":16312364,"line_start":947,"line_end":947,"column_start":5,"column_end":61}},{"value":"/ # let _ =","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16312369,"byte_end":16312382,"line_start":948,"line_end":948,"column_start":5,"column_end":18}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16312387,"byte_end":16312422,"line_start":949,"line_end":949,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16312427,"byte_end":16312458,"line_start":950,"line_end":950,"column_start":5,"column_end":36}},{"value":"/     .new_framed(io);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16312463,"byte_end":16312487,"line_start":951,"line_end":951,"column_start":5,"column_end":29}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16312492,"byte_end":16312499,"line_start":952,"line_end":952,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16312504,"byte_end":16312526,"line_start":953,"line_end":953,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16312531,"byte_end":16312538,"line_start":954,"line_end":954,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":961},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16313060,"byte_end":16313067,"line_start":974,"line_end":974,"column_start":8,"column_end":15},"name":"default","qualname":"<Builder as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":963},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16313211,"byte_end":16313214,"line_start":982,"line_end":982,"column_start":8,"column_end":11},"name":"fmt","qualname":"<LengthDelimitedCodecError as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":965},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16313394,"byte_end":16313397,"line_start":988,"line_end":988,"column_start":8,"column_end":11},"name":"fmt","qualname":"<LengthDelimitedCodecError as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10117},"children":[],"decl_id":{"krate":2,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1183},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16313939,"byte_end":16313949,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"LinesCodec","qualname":"::codec::lines_codec::LinesCodec","value":"LinesCodec {  }","parent":null,"children":[{"krate":0,"index":1184},{"krate":0,"index":1185},{"krate":0,"index":1186}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16313696,"byte_end":16313783,"line_start":7,"line_end":7,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16313784,"byte_end":16313787,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16313788,"byte_end":16313826,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16313827,"byte_end":16313865,"line_start":10,"line_end":10,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1008},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16315049,"byte_end":16315052,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<LinesCodec>::new","value":"fn new() -> LinesCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` for splitting up data into lines.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` for splitting up data into lines.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16314630,"byte_end":16314690,"line_start":31,"line_end":31,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16314695,"byte_end":16314698,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16314703,"byte_end":16314713,"line_start":33,"line_end":33,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16314718,"byte_end":16314721,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The returned `LinesCodec` will not have an upper bound on the length","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16314726,"byte_end":16314798,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ of a buffered line. See the documentation for [`new_with_max_length`]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16314803,"byte_end":16314876,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16314881,"byte_end":16314948,"line_start":37,"line_end":37,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16314953,"byte_end":16314956,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::LinesCodec::new_with_max_length()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16314961,"byte_end":16315037,"line_start":39,"line_end":39,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1009},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16316183,"byte_end":16316202,"line_start":66,"line_end":66,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<LinesCodec>::new_with_max_length","value":"fn new_with_max_length(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` with a maximum line length limit.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` with a maximum line length limit.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16315210,"byte_end":16315270,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16315275,"byte_end":16315278,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `LinesCodec::decode` will return a","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16315283,"byte_end":16315346,"line_start":50,"line_end":50,"column_start":5,"column_end":68}},{"value":"/ [`LinesCodecError`] when a line exceeds the length limit. Subsequent calls","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16315351,"byte_end":16315429,"line_start":51,"line_end":51,"column_start":5,"column_end":83}},{"value":"/ will discard up to `limit` bytes from that line until a newline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16315434,"byte_end":16315501,"line_start":52,"line_end":52,"column_start":5,"column_end":72}},{"value":"/ character is reached, returning `None` until the line over the limit","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16315506,"byte_end":16315578,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16315583,"byte_end":16315653,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16315658,"byte_end":16315681,"line_start":55,"line_end":55,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16315686,"byte_end":16315689,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16315694,"byte_end":16315704,"line_start":57,"line_end":57,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16315709,"byte_end":16315712,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `LinesCodec` which","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16315717,"byte_end":16315792,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16315797,"byte_end":16315870,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ that holds the line currently being read is unbounded. An attacker could","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16315875,"byte_end":16315951,"line_start":61,"line_end":61,"column_start":5,"column_end":81}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16315956,"byte_end":16316029,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ without any `\\n` characters, causing unbounded memory consumption.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16316034,"byte_end":16316104,"line_start":63,"line_end":63,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16316109,"byte_end":16316112,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ [`LinesCodecError`]: crate::codec::LinesCodecError","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16316117,"byte_end":16316171,"line_start":65,"line_end":65,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1010},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16316768,"byte_end":16316778,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"max_length","qualname":"<LinesCodec>::max_length","value":"fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum line length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum line length when decoding.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16316330,"byte_end":16316380,"line_start":73,"line_end":73,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16316385,"byte_end":16316388,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16316393,"byte_end":16316400,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16316405,"byte_end":16316424,"line_start":76,"line_end":76,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16316429,"byte_end":16316467,"line_start":77,"line_end":77,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16316472,"byte_end":16316475,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16316480,"byte_end":16316514,"line_start":79,"line_end":79,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16316519,"byte_end":16316566,"line_start":80,"line_end":80,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16316571,"byte_end":16316578,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16316583,"byte_end":16316590,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16316595,"byte_end":16316633,"line_start":83,"line_end":83,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16316638,"byte_end":16316641,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new_with_max_length(256);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16316646,"byte_end":16316699,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16316704,"byte_end":16316744,"line_start":86,"line_end":86,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16316749,"byte_end":16316756,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1017},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16317244,"byte_end":16317250,"line_start":110,"line_end":110,"column_start":8,"column_end":14},"name":"decode","qualname":"<LinesCodec as codec::decoder::Decoder>::decode","value":"fn decode(&mut Self, &mut BytesMut) -> Result<Option<String>, LinesCodecError>","parent":{"krate":0,"index":475},"children":[],"decl_id":{"krate":0,"index":478},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1019},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16319862,"byte_end":16319872,"line_start":166,"line_end":166,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"<LinesCodec as codec::decoder::Decoder>::decode_eof","value":"fn decode_eof(&mut Self, &mut BytesMut)\n-> Result<Option<String>, LinesCodecError>","parent":{"krate":0,"index":475},"children":[],"decl_id":{"krate":0,"index":479},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1023},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16320631,"byte_end":16320637,"line_start":191,"line_end":191,"column_start":8,"column_end":14},"name":"encode","qualname":"<LinesCodec as codec::encoder::Encoder>::encode","value":"fn encode(&mut Self, T, &mut BytesMut) -> Result<(), LinesCodecError>","parent":{"krate":0,"index":492},"children":[],"decl_id":{"krate":0,"index":495},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1025},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16320904,"byte_end":16320911,"line_start":201,"line_end":201,"column_start":8,"column_end":15},"name":"default","qualname":"<LinesCodec as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1206},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16321104,"byte_end":16321125,"line_start":210,"line_end":210,"column_start":5,"column_end":26},"name":"MaxLineLengthExceeded","qualname":"::codec::lines_codec::LinesCodecError::MaxLineLengthExceeded","value":"LinesCodecError::MaxLineLengthExceeded","parent":{"krate":0,"index":1205},"children":[],"decl_id":null,"docs":" The maximum line length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum line length was exceeded.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16321058,"byte_end":16321099,"line_start":209,"line_end":209,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1208},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16321161,"byte_end":16321163,"line_start":212,"line_end":212,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::lines_codec::LinesCodecError::Io","value":"LinesCodecError::Io(io::Error)","parent":{"krate":0,"index":1205},"children":[],"decl_id":null,"docs":" An IO error occurred.\n","sig":null,"attributes":[{"value":"/ An IO error occurred.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16321131,"byte_end":16321156,"line_start":211,"line_end":211,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":1210},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16321164,"byte_end":16321173,"line_start":212,"line_end":212,"column_start":8,"column_end":17},"name":"0","qualname":"::codec::lines_codec::LinesCodecError::Io::0","value":"std::io::Error","parent":{"krate":0,"index":1208},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1205},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16321036,"byte_end":16321051,"line_start":208,"line_end":208,"column_start":10,"column_end":25},"name":"LinesCodecError","qualname":"::codec::lines_codec::LinesCodecError","value":"enum LinesCodecError { MaxLineLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1206},{"krate":0,"index":1208}],"decl_id":null,"docs":" An error occurred while encoding or decoding a line.\n","sig":null,"attributes":[{"value":"/ An error occurred while encoding or decoding a line.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16320953,"byte_end":16321009,"line_start":206,"line_end":206,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1027},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16321226,"byte_end":16321229,"line_start":216,"line_end":216,"column_start":8,"column_end":11},"name":"fmt","qualname":"<LinesCodecError as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10117},"children":[],"decl_id":{"krate":2,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1029},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16321523,"byte_end":16321527,"line_start":225,"line_end":225,"column_start":8,"column_end":12},"name":"from","qualname":"<LinesCodecError as std::convert::From>::from","value":"fn from(io::Error) -> LinesCodecError","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1213},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16323085,"byte_end":16323102,"line_start":41,"line_end":41,"column_start":12,"column_end":29},"name":"AnyDelimiterCodec","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodec","value":"AnyDelimiterCodec {  }","parent":null,"children":[{"krate":0,"index":1214},{"krate":0,"index":1215},{"krate":0,"index":1216},{"krate":0,"index":1217},{"krate":0,"index":1218}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16321899,"byte_end":16322040,"line_start":9,"line_end":9,"column_start":1,"column_end":142}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16322041,"byte_end":16322044,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16322045,"byte_end":16322083,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16322084,"byte_end":16322122,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16322123,"byte_end":16322126,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16322127,"byte_end":16322140,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/ Decode string of bytes containing various different delimiters.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16322141,"byte_end":16322208,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16322209,"byte_end":16322212,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16322213,"byte_end":16322246,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16322247,"byte_end":16322276,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16322277,"byte_end":16322280,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16322281,"byte_end":16322288,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::{AnyDelimiterCodec, Decoder};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16322289,"byte_end":16322345,"line_start":21,"line_end":21,"column_start":1,"column_end":57}},{"value":"/ use bytes::{BufMut, BytesMut};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16322346,"byte_end":16322380,"line_start":22,"line_end":22,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16322381,"byte_end":16322384,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ #","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16322385,"byte_end":16322390,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16322391,"byte_end":16322438,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16322439,"byte_end":16322492,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/ let mut codec = AnyDelimiterCodec::new(b\",;\\r\\n\".to_vec(),b\";\".to_vec());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16322493,"byte_end":16322570,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ let buf = &mut BytesMut::new();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16322571,"byte_end":16322606,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"/ buf.reserve(200);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16322607,"byte_end":16322628,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/ buf.put_slice(b\"chunk 1,chunk 2;chunk 3\\n\\r\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16322629,"byte_end":16322679,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(\"chunk 1\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16322680,"byte_end":16322743,"line_start":31,"line_end":31,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 2\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16322744,"byte_end":16322807,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 3\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16322808,"byte_end":16322871,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16322872,"byte_end":16322928,"line_start":34,"line_end":34,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(None, codec.decode(buf).unwrap());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16322929,"byte_end":16322978,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16322979,"byte_end":16322991,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16322992,"byte_end":16322999,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16323000,"byte_end":16323007,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16323008,"byte_end":16323011,"line_start":39,"line_end":39,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":1077},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16324437,"byte_end":16324440,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<AnyDelimiterCodec>::new","value":"fn new(Vec<u8>, Vec<u8>) -> AnyDelimiterCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` for splitting up data into chunks.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` for splitting up data into chunks.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16323995,"byte_end":16324063,"line_start":66,"line_end":66,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16324068,"byte_end":16324071,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16324076,"byte_end":16324086,"line_start":68,"line_end":68,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16324091,"byte_end":16324094,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ The returned `AnyDelimiterCodec` will not have an upper bound on the length","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16324099,"byte_end":16324178,"line_start":70,"line_end":70,"column_start":5,"column_end":84}},{"value":"/ of a buffered chunk. See the documentation for [`new_with_max_length`]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16324183,"byte_end":16324257,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16324262,"byte_end":16324329,"line_start":72,"line_end":72,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16324334,"byte_end":16324337,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::AnyDelimiterCodec::new_with_max_length()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16324342,"byte_end":16324425,"line_start":74,"line_end":74,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1078},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16325751,"byte_end":16325770,"line_start":103,"line_end":103,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<AnyDelimiterCodec>::new_with_max_length","value":"fn new_with_max_length(Vec<u8>, Vec<u8>, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16324720,"byte_end":16324788,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16324793,"byte_end":16324796,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `AnyDelimiterCodec::decode` will return a","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16324801,"byte_end":16324871,"line_start":87,"line_end":87,"column_start":5,"column_end":75}},{"value":"/ [`AnyDelimiterCodecError`] when a chunk exceeds the length limit. Subsequent calls","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16324876,"byte_end":16324962,"line_start":88,"line_end":88,"column_start":5,"column_end":91}},{"value":"/ will discard up to `limit` bytes from that chunk until a delimiter","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16324967,"byte_end":16325037,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ character is reached, returning `None` until the delimiter over the limit","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16325042,"byte_end":16325119,"line_start":90,"line_end":90,"column_start":5,"column_end":82}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16325124,"byte_end":16325194,"line_start":91,"line_end":91,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16325199,"byte_end":16325222,"line_start":92,"line_end":92,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16325227,"byte_end":16325230,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16325235,"byte_end":16325245,"line_start":94,"line_end":94,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16325250,"byte_end":16325253,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `AnyDelimiterCodec` which","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16325258,"byte_end":16325340,"line_start":96,"line_end":96,"column_start":5,"column_end":87}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16325345,"byte_end":16325418,"line_start":97,"line_end":97,"column_start":5,"column_end":78}},{"value":"/ that holds the chunk currently being read is unbounded. An attacker could","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16325423,"byte_end":16325500,"line_start":98,"line_end":98,"column_start":5,"column_end":82}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16325505,"byte_end":16325578,"line_start":99,"line_end":99,"column_start":5,"column_end":78}},{"value":"/ without any delimiter characters, causing unbounded memory consumption.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16325583,"byte_end":16325658,"line_start":100,"line_end":100,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16325663,"byte_end":16325666,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [`AnyDelimiterCodecError`]: crate::codec::AnyDelimiterCodecError","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16325671,"byte_end":16325739,"line_start":102,"line_end":102,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1079},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16326558,"byte_end":16326568,"line_start":129,"line_end":129,"column_start":12,"column_end":22},"name":"max_length","qualname":"<AnyDelimiterCodec>::max_length","value":"fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum chunk length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum chunk length when decoding.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16326027,"byte_end":16326078,"line_start":114,"line_end":114,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16326083,"byte_end":16326086,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16326091,"byte_end":16326098,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16326103,"byte_end":16326122,"line_start":117,"line_end":117,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16326127,"byte_end":16326172,"line_start":118,"line_end":118,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16326177,"byte_end":16326180,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new(b\",;\\n\".to_vec(), b\";\".to_vec());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16326185,"byte_end":16326257,"line_start":120,"line_end":120,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16326262,"byte_end":16326309,"line_start":121,"line_end":121,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16326314,"byte_end":16326321,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16326326,"byte_end":16326333,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16326338,"byte_end":16326383,"line_start":124,"line_end":124,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16326388,"byte_end":16326391,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new_with_max_length(b\",;\\n\".to_vec(), b\";\".to_vec(), 256);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16326396,"byte_end":16326489,"line_start":126,"line_end":126,"column_start":5,"column_end":98}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16326494,"byte_end":16326534,"line_start":127,"line_end":127,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16326539,"byte_end":16326546,"line_start":128,"line_end":128,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1083},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16326729,"byte_end":16326735,"line_start":138,"line_end":138,"column_start":8,"column_end":14},"name":"decode","qualname":"<AnyDelimiterCodec as codec::decoder::Decoder>::decode","value":"fn decode(&mut Self, &mut BytesMut)\n-> Result<Option<Bytes>, AnyDelimiterCodecError>","parent":{"krate":0,"index":475},"children":[],"decl_id":{"krate":0,"index":478},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1086},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16329405,"byte_end":16329415,"line_start":195,"line_end":195,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"<AnyDelimiterCodec as codec::decoder::Decoder>::decode_eof","value":"fn decode_eof(&mut Self, &mut BytesMut)\n-> Result<Option<Bytes>, AnyDelimiterCodecError>","parent":{"krate":0,"index":475},"children":[],"decl_id":{"krate":0,"index":479},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1090},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16330040,"byte_end":16330046,"line_start":218,"line_end":218,"column_start":8,"column_end":14},"name":"encode","qualname":"<AnyDelimiterCodec as codec::encoder::Encoder>::encode","value":"fn encode(&mut Self, T, &mut BytesMut) -> Result<(), AnyDelimiterCodecError>","parent":{"krate":0,"index":492},"children":[],"decl_id":{"krate":0,"index":495},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1092},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16330354,"byte_end":16330361,"line_start":229,"line_end":229,"column_start":8,"column_end":15},"name":"default","qualname":"<AnyDelimiterCodec as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1238},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16330664,"byte_end":16330686,"line_start":241,"line_end":241,"column_start":5,"column_end":27},"name":"MaxChunkLengthExceeded","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::MaxChunkLengthExceeded","value":"AnyDelimiterCodecError::MaxChunkLengthExceeded","parent":{"krate":0,"index":1237},"children":[],"decl_id":null,"docs":" The maximum chunk length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum chunk length was exceeded.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16330617,"byte_end":16330659,"line_start":240,"line_end":240,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1240},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16330722,"byte_end":16330724,"line_start":243,"line_end":243,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::Io","value":"AnyDelimiterCodecError::Io(io::Error)","parent":{"krate":0,"index":1237},"children":[],"decl_id":null,"docs":" An IO error occurred.\n","sig":null,"attributes":[{"value":"/ An IO error occurred.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16330692,"byte_end":16330717,"line_start":242,"line_end":242,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":1242},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16330725,"byte_end":16330734,"line_start":243,"line_end":243,"column_start":8,"column_end":17},"name":"0","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::Io::0","value":"std::io::Error","parent":{"krate":0,"index":1240},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1237},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16330588,"byte_end":16330610,"line_start":239,"line_end":239,"column_start":10,"column_end":32},"name":"AnyDelimiterCodecError","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError","value":"enum AnyDelimiterCodecError { MaxChunkLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1238},{"krate":0,"index":1240}],"decl_id":null,"docs":" An error occurred while encoding or decoding a chunk.\n","sig":null,"attributes":[{"value":"/ An error occurred while encoding or decoding a chunk.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16330504,"byte_end":16330561,"line_start":237,"line_end":237,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1094},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16330794,"byte_end":16330797,"line_start":247,"line_end":247,"column_start":8,"column_end":11},"name":"fmt","qualname":"<AnyDelimiterCodecError as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10117},"children":[],"decl_id":{"krate":2,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1096},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16331145,"byte_end":16331149,"line_start":258,"line_end":258,"column_start":8,"column_end":12},"name":"from","qualname":"<AnyDelimiterCodecError as std::convert::From>::from","value":"fn from(io::Error) -> AnyDelimiterCodecError","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1245},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"time","qualname":"::time","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/mod.rs","parent":null,"children":[{"krate":0,"index":1246},{"krate":0,"index":1249},{"krate":0,"index":1328},{"krate":0,"index":1450},{"krate":0,"index":1453},{"krate":0,"index":1458}],"decl_id":null,"docs":" Additional utilities for tracking time.","sig":null,"attributes":[{"value":"cfg(feature = \"time\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/cfg.rs","byte_start":6728,"byte_end":6752,"line_start":66,"line_end":66,"column_start":13,"column_end":37}},{"value":"/ Additional utilities for tracking time.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/mod.rs","byte_start":16331293,"byte_end":16331336,"line_start":1,"line_end":1,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/mod.rs","byte_start":16331337,"byte_end":16331340,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module provides additional utilities for executing code after a set period","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/mod.rs","byte_start":16331341,"byte_end":16331424,"line_start":3,"line_end":3,"column_start":1,"column_end":84}},{"value":"/ of time. Currently there is only one:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/mod.rs","byte_start":16331425,"byte_end":16331466,"line_start":4,"line_end":4,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/mod.rs","byte_start":16331467,"byte_end":16331470,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ * `DelayQueue`: A queue where items are returned once the requested delay","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/mod.rs","byte_start":16331471,"byte_end":16331548,"line_start":6,"line_end":6,"column_start":1,"column_end":78}},{"value":"/   has expired.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/mod.rs","byte_start":16331549,"byte_end":16331567,"line_start":7,"line_end":7,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/mod.rs","byte_start":16331568,"byte_end":16331571,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This type must be used from within the context of the `Runtime`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/mod.rs","byte_start":16331572,"byte_end":16331640,"line_start":9,"line_end":9,"column_start":1,"column_end":69}}]},{"kind":"Type","id":{"krate":0,"index":1291},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/wheel/stack.rs","byte_start":16348641,"byte_end":16348646,"line_start":6,"line_end":6,"column_start":10,"column_end":15},"name":"Owned","qualname":"::time::wheel::stack::Stack::Owned","value":"type Owned: Borrow<Self::Borrowed>;","parent":{"krate":0,"index":1290},"children":[],"decl_id":null,"docs":" Type of the item stored in the stack\n","sig":null,"attributes":[{"value":"/ Type of the item stored in the stack","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/wheel/stack.rs","byte_start":16348591,"byte_end":16348631,"line_start":5,"line_end":5,"column_start":5,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1292},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/wheel/stack.rs","byte_start":16348704,"byte_end":16348712,"line_start":9,"line_end":9,"column_start":10,"column_end":18},"name":"Borrowed","qualname":"::time::wheel::stack::Stack::Borrowed","value":"type Borrowed;","parent":{"krate":0,"index":1290},"children":[],"decl_id":null,"docs":" Borrowed item\n","sig":null,"attributes":[{"value":"/ Borrowed item","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/wheel/stack.rs","byte_start":16348677,"byte_end":16348694,"line_start":8,"line_end":8,"column_start":5,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":1293},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/wheel/stack.rs","byte_start":16348801,"byte_end":16348806,"line_start":12,"line_end":12,"column_start":10,"column_end":15},"name":"Store","qualname":"::time::wheel::stack::Stack::Store","value":"type Store;","parent":{"krate":0,"index":1290},"children":[],"decl_id":null,"docs":" Item storage, this allows a slab to be used instead of just the heap\n","sig":null,"attributes":[{"value":"/ Item storage, this allows a slab to be used instead of just the heap","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/wheel/stack.rs","byte_start":16348719,"byte_end":16348791,"line_start":11,"line_end":11,"column_start":5,"column_end":77}}]},{"kind":"Mod","id":{"krate":0,"index":1328},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"delay_queue","qualname":"::time::delay_queue","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","parent":null,"children":[{"krate":0,"index":1329},{"krate":0,"index":1330},{"krate":0,"index":1333},{"krate":0,"index":1336},{"krate":0,"index":1339},{"krate":0,"index":1340},{"krate":0,"index":1343},{"krate":0,"index":1346},{"krate":0,"index":1349},{"krate":0,"index":1352},{"krate":0,"index":1355},{"krate":0,"index":1358},{"krate":0,"index":1361},{"krate":0,"index":1364},{"krate":0,"index":1365},{"krate":0,"index":1367},{"krate":0,"index":1370},{"krate":0,"index":1371},{"krate":0,"index":1374},{"krate":0,"index":1377},{"krate":0,"index":1482},{"krate":0,"index":1491},{"krate":0,"index":1494},{"krate":0,"index":1499},{"krate":0,"index":1502},{"krate":0,"index":1504},{"krate":0,"index":1506},{"krate":0,"index":1508},{"krate":0,"index":1509},{"krate":0,"index":1510},{"krate":0,"index":1512},{"krate":0,"index":1513},{"krate":0,"index":1516},{"krate":0,"index":1519},{"krate":0,"index":1523},{"krate":0,"index":1526},{"krate":0,"index":1533},{"krate":0,"index":1380},{"krate":0,"index":1381},{"krate":0,"index":1419},{"krate":0,"index":1421},{"krate":0,"index":1424},{"krate":0,"index":1428},{"krate":0,"index":1438},{"krate":0,"index":1441},{"krate":0,"index":1443}],"decl_id":null,"docs":" A queue of delayed elements.","sig":null,"attributes":[{"value":"/ A queue of delayed elements.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16349241,"byte_end":16349273,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16349274,"byte_end":16349277,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ See [`DelayQueue`] for more details.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16349278,"byte_end":16349318,"line_start":3,"line_end":3,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16349319,"byte_end":16349322,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ [`DelayQueue`]: struct@DelayQueue","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16349323,"byte_end":16349360,"line_start":5,"line_end":5,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":1482},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16353779,"byte_end":16353789,"line_start":129,"line_end":129,"column_start":12,"column_end":22},"name":"DelayQueue","qualname":"::time::delay_queue::DelayQueue","value":"DelayQueue {  }","parent":null,"children":[{"krate":0,"index":1484},{"krate":0,"index":1485},{"krate":0,"index":1486},{"krate":0,"index":1487},{"krate":0,"index":1488},{"krate":0,"index":1489},{"krate":0,"index":1490}],"decl_id":null,"docs":" A queue of delayed elements.","sig":null,"attributes":[{"value":"/ A queue of delayed elements.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16349641,"byte_end":16349673,"line_start":19,"line_end":19,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16349674,"byte_end":16349677,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Once an element is inserted into the `DelayQueue`, it is yielded once the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16349678,"byte_end":16349755,"line_start":21,"line_end":21,"column_start":1,"column_end":78}},{"value":"/ specified deadline has been reached.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16349756,"byte_end":16349796,"line_start":22,"line_end":22,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16349797,"byte_end":16349800,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16349801,"byte_end":16349812,"line_start":24,"line_end":24,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16349813,"byte_end":16349816,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Elements are inserted into `DelayQueue` using the [`insert`] or","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16349817,"byte_end":16349884,"line_start":26,"line_end":26,"column_start":1,"column_end":68}},{"value":"/ [`insert_at`] methods. A deadline is provided with the item and a [`Key`] is","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16349885,"byte_end":16349965,"line_start":27,"line_end":27,"column_start":1,"column_end":81}},{"value":"/ returned. The key is used to remove the entry or to change the deadline at","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16349966,"byte_end":16350044,"line_start":28,"line_end":28,"column_start":1,"column_end":79}},{"value":"/ which it should be yielded back.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16350045,"byte_end":16350081,"line_start":29,"line_end":29,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16350082,"byte_end":16350085,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Once delays have been configured, the `DelayQueue` is used via its","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16350086,"byte_end":16350156,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/ [`Stream`] implementation. [`poll_expired`] is called. If an entry has reached its","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16350157,"byte_end":16350243,"line_start":32,"line_end":32,"column_start":1,"column_end":87}},{"value":"/ deadline, it is returned. If not, `Poll::Pending` is returned indicating that the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16350244,"byte_end":16350329,"line_start":33,"line_end":33,"column_start":1,"column_end":86}},{"value":"/ current task will be notified once the deadline has been reached.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16350330,"byte_end":16350399,"line_start":34,"line_end":34,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16350400,"byte_end":16350403,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # `Stream` implementation","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16350404,"byte_end":16350433,"line_start":36,"line_end":36,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16350434,"byte_end":16350437,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Items are retrieved from the queue via [`DelayQueue::poll_expired`]. If no delays have","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16350438,"byte_end":16350528,"line_start":38,"line_end":38,"column_start":1,"column_end":91}},{"value":"/ expired, no items are returned. In this case, `Poll::Pending` is returned and the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16350529,"byte_end":16350614,"line_start":39,"line_end":39,"column_start":1,"column_end":86}},{"value":"/ current task is registered to be notified once the next item's delay has","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16350615,"byte_end":16350691,"line_start":40,"line_end":40,"column_start":1,"column_end":77}},{"value":"/ expired.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16350692,"byte_end":16350704,"line_start":41,"line_end":41,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16350705,"byte_end":16350708,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ If no items are in the queue, i.e. `is_empty()` returns `true`, then `poll`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16350709,"byte_end":16350788,"line_start":43,"line_end":43,"column_start":1,"column_end":80}},{"value":"/ returns `Poll::Ready(None)`. This indicates that the stream has reached an end.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16350789,"byte_end":16350872,"line_start":44,"line_end":44,"column_start":1,"column_end":84}},{"value":"/ However, if a new item is inserted *after*, `poll` will once again start","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16350873,"byte_end":16350949,"line_start":45,"line_end":45,"column_start":1,"column_end":77}},{"value":"/ returning items or `Poll::Pending`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16350950,"byte_end":16350989,"line_start":46,"line_end":46,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16350990,"byte_end":16350993,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ Items are returned ordered by their expirations. Items that are configured","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16350994,"byte_end":16351072,"line_start":48,"line_end":48,"column_start":1,"column_end":79}},{"value":"/ to expire first will be returned first. There are no ordering guarantees","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16351073,"byte_end":16351149,"line_start":49,"line_end":49,"column_start":1,"column_end":77}},{"value":"/ for items configured to expire at the same instant. Also note that delays are","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16351150,"byte_end":16351231,"line_start":50,"line_end":50,"column_start":1,"column_end":82}},{"value":"/ rounded to the closest millisecond.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16351232,"byte_end":16351271,"line_start":51,"line_end":51,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16351272,"byte_end":16351275,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ # Implementation","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16351276,"byte_end":16351296,"line_start":53,"line_end":53,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16351297,"byte_end":16351300,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ The [`DelayQueue`] is backed by a separate instance of a timer wheel similar to that used internally","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16351301,"byte_end":16351405,"line_start":55,"line_end":55,"column_start":1,"column_end":105}},{"value":"/ by Tokio's standalone timer utilities such as [`sleep`]. Because of this, it offers the same","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16351406,"byte_end":16351502,"line_start":56,"line_end":56,"column_start":1,"column_end":97}},{"value":"/ performance and scalability benefits.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16351503,"byte_end":16351544,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16351545,"byte_end":16351548,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ State associated with each entry is stored in a [`slab`]. This amortizes the cost of allocation,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16351549,"byte_end":16351649,"line_start":59,"line_end":59,"column_start":1,"column_end":101}},{"value":"/ and allows reuse of the memory allocated for expired entires.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16351650,"byte_end":16351715,"line_start":60,"line_end":60,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16351716,"byte_end":16351719,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ Capacity can be checked using [`capacity`] and allocated preemptively by using","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16351720,"byte_end":16351802,"line_start":62,"line_end":62,"column_start":1,"column_end":83}},{"value":"/ the [`reserve`] method.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16351803,"byte_end":16351830,"line_start":63,"line_end":63,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16351831,"byte_end":16351834,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16351835,"byte_end":16351846,"line_start":65,"line_end":65,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16351847,"byte_end":16351850,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Using `DelayQueue` to manage cache entries.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16351851,"byte_end":16351898,"line_start":67,"line_end":67,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16351899,"byte_end":16351902,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16351903,"byte_end":16351921,"line_start":69,"line_end":69,"column_start":1,"column_end":19}},{"value":"/ use tokio::time::error::Error;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16351922,"byte_end":16351956,"line_start":70,"line_end":70,"column_start":1,"column_end":35}},{"value":"/ use tokio_util::time::{DelayQueue, delay_queue};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16351957,"byte_end":16352009,"line_start":71,"line_end":71,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16352010,"byte_end":16352013,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ use futures::ready;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16352014,"byte_end":16352037,"line_start":73,"line_end":73,"column_start":1,"column_end":24}},{"value":"/ use std::collections::HashMap;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16352038,"byte_end":16352072,"line_start":74,"line_end":74,"column_start":1,"column_end":35}},{"value":"/ use std::task::{Context, Poll};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16352073,"byte_end":16352108,"line_start":75,"line_end":75,"column_start":1,"column_end":36}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16352109,"byte_end":16352137,"line_start":76,"line_end":76,"column_start":1,"column_end":29}},{"value":"/ # type CacheKey = String;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16352138,"byte_end":16352167,"line_start":77,"line_end":77,"column_start":1,"column_end":30}},{"value":"/ # type Value = String;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16352168,"byte_end":16352194,"line_start":78,"line_end":78,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16352195,"byte_end":16352198,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ struct Cache {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16352199,"byte_end":16352217,"line_start":80,"line_end":80,"column_start":1,"column_end":19}},{"value":"/     entries: HashMap<CacheKey, (Value, delay_queue::Key)>,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16352218,"byte_end":16352280,"line_start":81,"line_end":81,"column_start":1,"column_end":63}},{"value":"/     expirations: DelayQueue<CacheKey>,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16352281,"byte_end":16352323,"line_start":82,"line_end":82,"column_start":1,"column_end":43}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16352324,"byte_end":16352329,"line_start":83,"line_end":83,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16352330,"byte_end":16352333,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ const TTL_SECS: u64 = 30;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16352334,"byte_end":16352363,"line_start":85,"line_end":85,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16352364,"byte_end":16352367,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ impl Cache {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16352368,"byte_end":16352384,"line_start":87,"line_end":87,"column_start":1,"column_end":17}},{"value":"/     fn insert(&mut self, key: CacheKey, value: Value) {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16352385,"byte_end":16352444,"line_start":88,"line_end":88,"column_start":1,"column_end":60}},{"value":"/         let delay = self.expirations","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16352445,"byte_end":16352485,"line_start":89,"line_end":89,"column_start":1,"column_end":41}},{"value":"/             .insert(key.clone(), Duration::from_secs(TTL_SECS));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16352486,"byte_end":16352554,"line_start":90,"line_end":90,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16352555,"byte_end":16352558,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/         self.entries.insert(key, (value, delay));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16352559,"byte_end":16352612,"line_start":92,"line_end":92,"column_start":1,"column_end":54}},{"value":"/     }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16352613,"byte_end":16352622,"line_start":93,"line_end":93,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16352623,"byte_end":16352626,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/     fn get(&self, key: &CacheKey) -> Option<&Value> {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16352627,"byte_end":16352684,"line_start":95,"line_end":95,"column_start":1,"column_end":58}},{"value":"/         self.entries.get(key)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16352685,"byte_end":16352718,"line_start":96,"line_end":96,"column_start":1,"column_end":34}},{"value":"/             .map(|&(ref v, _)| v)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16352719,"byte_end":16352756,"line_start":97,"line_end":97,"column_start":1,"column_end":38}},{"value":"/     }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16352757,"byte_end":16352766,"line_start":98,"line_end":98,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16352767,"byte_end":16352770,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/     fn remove(&mut self, key: &CacheKey) {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16352771,"byte_end":16352817,"line_start":100,"line_end":100,"column_start":1,"column_end":47}},{"value":"/         if let Some((_, cache_key)) = self.entries.remove(key) {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16352818,"byte_end":16352886,"line_start":101,"line_end":101,"column_start":1,"column_end":69}},{"value":"/             self.expirations.remove(&cache_key);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16352887,"byte_end":16352939,"line_start":102,"line_end":102,"column_start":1,"column_end":53}},{"value":"/         }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16352940,"byte_end":16352953,"line_start":103,"line_end":103,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16352954,"byte_end":16352963,"line_start":104,"line_end":104,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16352964,"byte_end":16352967,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/     fn poll_purge(&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Error>> {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16352968,"byte_end":16353051,"line_start":106,"line_end":106,"column_start":1,"column_end":84}},{"value":"/         while let Some(res) = ready!(self.expirations.poll_expired(cx)) {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16353052,"byte_end":16353129,"line_start":107,"line_end":107,"column_start":1,"column_end":78}},{"value":"/             let entry = res?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16353130,"byte_end":16353163,"line_start":108,"line_end":108,"column_start":1,"column_end":34}},{"value":"/             self.entries.remove(entry.get_ref());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16353164,"byte_end":16353217,"line_start":109,"line_end":109,"column_start":1,"column_end":54}},{"value":"/         }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16353218,"byte_end":16353231,"line_start":110,"line_end":110,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16353232,"byte_end":16353235,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/         Poll::Ready(Ok(()))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16353236,"byte_end":16353267,"line_start":112,"line_end":112,"column_start":1,"column_end":32}},{"value":"/     }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16353268,"byte_end":16353277,"line_start":113,"line_end":113,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16353278,"byte_end":16353283,"line_start":114,"line_end":114,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16353284,"byte_end":16353291,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16353292,"byte_end":16353295,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ [`insert`]: method@Self::insert","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16353296,"byte_end":16353331,"line_start":117,"line_end":117,"column_start":1,"column_end":36}},{"value":"/ [`insert_at`]: method@Self::insert_at","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16353332,"byte_end":16353373,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"/ [`Key`]: struct@Key","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16353374,"byte_end":16353397,"line_start":119,"line_end":119,"column_start":1,"column_end":24}},{"value":"/ [`Stream`]: https://docs.rs/futures/0.1/futures/stream/trait.Stream.html","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16353398,"byte_end":16353474,"line_start":120,"line_end":120,"column_start":1,"column_end":77}},{"value":"/ [`poll_expired`]: method@Self::poll_expired","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16353475,"byte_end":16353522,"line_start":121,"line_end":121,"column_start":1,"column_end":48}},{"value":"/ [`Stream::poll_expired`]: method@Self::poll_expired","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16353523,"byte_end":16353578,"line_start":122,"line_end":122,"column_start":1,"column_end":56}},{"value":"/ [`DelayQueue`]: struct@DelayQueue","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16353579,"byte_end":16353616,"line_start":123,"line_end":123,"column_start":1,"column_end":38}},{"value":"/ [`sleep`]: fn@tokio::time::sleep","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16353617,"byte_end":16353653,"line_start":124,"line_end":124,"column_start":1,"column_end":37}},{"value":"/ [`slab`]: slab","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16353654,"byte_end":16353672,"line_start":125,"line_end":125,"column_start":1,"column_end":19}},{"value":"/ [`capacity`]: method@Self::capacity","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16353673,"byte_end":16353712,"line_start":126,"line_end":126,"column_start":1,"column_end":40}},{"value":"/ [`reserve`]: method@Self::reserve","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16353713,"byte_end":16353750,"line_start":127,"line_end":127,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":1494},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16354765,"byte_end":16354772,"line_start":161,"line_end":161,"column_start":12,"column_end":19},"name":"Expired","qualname":"::time::delay_queue::Expired","value":"Expired {  }","parent":null,"children":[{"krate":0,"index":1496},{"krate":0,"index":1497},{"krate":0,"index":1498}],"decl_id":null,"docs":" An entry in `DelayQueue` that has expired and been removed.","sig":null,"attributes":[{"value":"/ An entry in `DelayQueue` that has expired and been removed.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16354542,"byte_end":16354605,"line_start":155,"line_end":155,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16354606,"byte_end":16354609,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ Values are returned by [`DelayQueue::poll_expired`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16354610,"byte_end":16354666,"line_start":157,"line_end":157,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16354667,"byte_end":16354670,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ [`DelayQueue::poll_expired`]: method@DelayQueue::poll_expired","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16354671,"byte_end":16354736,"line_start":159,"line_end":159,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":1502},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16355267,"byte_end":16355270,"line_start":180,"line_end":180,"column_start":12,"column_end":15},"name":"Key","qualname":"::time::delay_queue::Key","value":"Key {  }","parent":null,"children":[{"krate":0,"index":1503}],"decl_id":null,"docs":" Token to a value stored in a `DelayQueue`.","sig":null,"attributes":[{"value":"/ Token to a value stored in a `DelayQueue`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16354940,"byte_end":16354986,"line_start":172,"line_end":172,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16354987,"byte_end":16354990,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ Instances of `Key` are returned by [`DelayQueue::insert`]. See [`DelayQueue`]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16354991,"byte_end":16355072,"line_start":174,"line_end":174,"column_start":1,"column_end":82}},{"value":"/ documentation for more details.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16355073,"byte_end":16355108,"line_start":175,"line_end":175,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16355109,"byte_end":16355112,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ [`DelayQueue`]: struct@DelayQueue","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16355113,"byte_end":16355150,"line_start":177,"line_end":177,"column_start":1,"column_end":38}},{"value":"/ [`DelayQueue::insert`]: method@DelayQueue::insert","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16355151,"byte_end":16355204,"line_start":178,"line_end":178,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1383},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16356254,"byte_end":16356257,"line_start":224,"line_end":224,"column_start":12,"column_end":15},"name":"new","qualname":"<DelayQueue<T>>::new","value":"fn new() -> DelayQueue<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty, `DelayQueue`.","sig":null,"attributes":[{"value":"/ Creates a new, empty, `DelayQueue`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16355948,"byte_end":16355987,"line_start":214,"line_end":214,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16355992,"byte_end":16355995,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ The queue will not allocate storage until items are inserted into it.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16356000,"byte_end":16356073,"line_start":216,"line_end":216,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16356078,"byte_end":16356081,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16356086,"byte_end":16356100,"line_start":218,"line_end":218,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16356105,"byte_end":16356108,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16356113,"byte_end":16356124,"line_start":220,"line_end":220,"column_start":5,"column_end":16}},{"value":"/ # use tokio_util::time::DelayQueue;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16356129,"byte_end":16356168,"line_start":221,"line_end":221,"column_start":5,"column_end":44}},{"value":"/ let delay_queue: DelayQueue<u32> = DelayQueue::new();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16356173,"byte_end":16356230,"line_start":222,"line_end":222,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16356235,"byte_end":16356242,"line_start":223,"line_end":223,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1384},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16357152,"byte_end":16357165,"line_start":253,"line_end":253,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<DelayQueue<T>>::with_capacity","value":"fn with_capacity(usize) -> DelayQueue<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new, empty, `DelayQueue` with the specified capacity.","sig":null,"attributes":[{"value":"/ Creates a new, empty, `DelayQueue` with the specified capacity.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16356327,"byte_end":16356394,"line_start":228,"line_end":228,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16356399,"byte_end":16356402,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ The queue will be able to hold at least `capacity` elements without","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16356407,"byte_end":16356478,"line_start":230,"line_end":230,"column_start":5,"column_end":76}},{"value":"/ reallocating. If `capacity` is 0, the queue will not allocate for","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16356483,"byte_end":16356552,"line_start":231,"line_end":231,"column_start":5,"column_end":74}},{"value":"/ storage.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16356557,"byte_end":16356569,"line_start":232,"line_end":232,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16356574,"byte_end":16356577,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16356582,"byte_end":16356596,"line_start":234,"line_end":234,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16356601,"byte_end":16356604,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16356609,"byte_end":16356620,"line_start":236,"line_end":236,"column_start":5,"column_end":16}},{"value":"/ # use tokio_util::time::DelayQueue;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16356625,"byte_end":16356664,"line_start":237,"line_end":237,"column_start":5,"column_end":44}},{"value":"/ # use std::time::Duration;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16356669,"byte_end":16356699,"line_start":238,"line_end":238,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16356704,"byte_end":16356707,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16356712,"byte_end":16356732,"line_start":240,"line_end":240,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16356737,"byte_end":16356760,"line_start":241,"line_end":241,"column_start":5,"column_end":28}},{"value":"/ let mut delay_queue = DelayQueue::with_capacity(10);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16356765,"byte_end":16356821,"line_start":242,"line_end":242,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16356826,"byte_end":16356829,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ // These insertions are done without further allocation","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16356834,"byte_end":16356893,"line_start":244,"line_end":244,"column_start":5,"column_end":64}},{"value":"/ for i in 0..10 {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16356898,"byte_end":16356918,"line_start":245,"line_end":245,"column_start":5,"column_end":25}},{"value":"/     delay_queue.insert(i, Duration::from_secs(i));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16356923,"byte_end":16356977,"line_start":246,"line_end":246,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16356982,"byte_end":16356987,"line_start":247,"line_end":247,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16356992,"byte_end":16356995,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ // This will make the queue allocate additional storage","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16357000,"byte_end":16357059,"line_start":249,"line_end":249,"column_start":5,"column_end":64}},{"value":"/ delay_queue.insert(11, Duration::from_secs(11));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16357064,"byte_end":16357116,"line_start":250,"line_end":250,"column_start":5,"column_end":57}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16357121,"byte_end":16357128,"line_start":251,"line_end":251,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16357133,"byte_end":16357140,"line_start":252,"line_end":252,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1385},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16359253,"byte_end":16359262,"line_start":313,"line_end":313,"column_start":12,"column_end":21},"name":"insert_at","qualname":"<DelayQueue<T>>::insert_at","value":"fn insert_at(&mut Self, T, Instant) -> Key","parent":null,"children":[],"decl_id":null,"docs":" Inserts `value` into the queue set to expire at a specific instant in\n time.","sig":null,"attributes":[{"value":"/ Inserts `value` into the queue set to expire at a specific instant in","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16357476,"byte_end":16357549,"line_start":265,"line_end":265,"column_start":5,"column_end":78}},{"value":"/ time.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16357554,"byte_end":16357563,"line_start":266,"line_end":266,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16357568,"byte_end":16357571,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `insert`, but takes an `Instant` instead","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16357576,"byte_end":16357650,"line_start":268,"line_end":268,"column_start":5,"column_end":79}},{"value":"/ of a `Duration`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16357655,"byte_end":16357675,"line_start":269,"line_end":269,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16357680,"byte_end":16357683,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ `value` is stored in the queue until `when` is reached. At which point,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16357688,"byte_end":16357763,"line_start":271,"line_end":271,"column_start":5,"column_end":80}},{"value":"/ `value` will be returned from [`poll_expired`]. If `when` has already been","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16357768,"byte_end":16357846,"line_start":272,"line_end":272,"column_start":5,"column_end":83}},{"value":"/ reached, then `value` is immediately made available to poll.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16357851,"byte_end":16357915,"line_start":273,"line_end":273,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16357920,"byte_end":16357923,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ The return value represents the insertion and is used as an argument to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16357928,"byte_end":16358003,"line_start":275,"line_end":275,"column_start":5,"column_end":80}},{"value":"/ [`remove`] and [`reset`]. Note that [`Key`] is a token and is reused once","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16358008,"byte_end":16358085,"line_start":276,"line_end":276,"column_start":5,"column_end":82}},{"value":"/ `value` is removed from the queue either by calling [`poll_expired`] after","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16358090,"byte_end":16358168,"line_start":277,"line_end":277,"column_start":5,"column_end":83}},{"value":"/ `when` is reached or by calling [`remove`]. At this point, the caller","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16358173,"byte_end":16358246,"line_start":278,"line_end":278,"column_start":5,"column_end":78}},{"value":"/ must take care to not use the returned [`Key`] again as it may reference","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16358251,"byte_end":16358327,"line_start":279,"line_end":279,"column_start":5,"column_end":81}},{"value":"/ a different item in the queue.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16358332,"byte_end":16358366,"line_start":280,"line_end":280,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16358371,"byte_end":16358374,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ See [type] level documentation for more details.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16358379,"byte_end":16358431,"line_start":282,"line_end":282,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16358436,"byte_end":16358439,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16358444,"byte_end":16358456,"line_start":284,"line_end":284,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16358461,"byte_end":16358464,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ This function panics if `when` is too far in the future.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16358469,"byte_end":16358529,"line_start":286,"line_end":286,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16358534,"byte_end":16358537,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16358542,"byte_end":16358556,"line_start":288,"line_end":288,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16358561,"byte_end":16358564,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16358569,"byte_end":16358584,"line_start":290,"line_end":290,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16358589,"byte_end":16358592,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16358597,"byte_end":16358608,"line_start":292,"line_end":292,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::{Duration, Instant};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16358613,"byte_end":16358654,"line_start":293,"line_end":293,"column_start":5,"column_end":46}},{"value":"/ use tokio_util::time::DelayQueue;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16358659,"byte_end":16358696,"line_start":294,"line_end":294,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16358701,"byte_end":16358704,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16358709,"byte_end":16358729,"line_start":296,"line_end":296,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16358734,"byte_end":16358757,"line_start":297,"line_end":297,"column_start":5,"column_end":28}},{"value":"/ let mut delay_queue = DelayQueue::new();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16358762,"byte_end":16358806,"line_start":298,"line_end":298,"column_start":5,"column_end":49}},{"value":"/ let key = delay_queue.insert_at(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16358811,"byte_end":16358847,"line_start":299,"line_end":299,"column_start":5,"column_end":41}},{"value":"/     \"foo\", Instant::now() + Duration::from_secs(5));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16358852,"byte_end":16358908,"line_start":300,"line_end":300,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16358913,"byte_end":16358916,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ // Remove the entry","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16358921,"byte_end":16358944,"line_start":302,"line_end":302,"column_start":5,"column_end":28}},{"value":"/ let item = delay_queue.remove(&key);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16358949,"byte_end":16358989,"line_start":303,"line_end":303,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(*item.get_ref(), \"foo\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16358994,"byte_end":16359033,"line_start":304,"line_end":304,"column_start":5,"column_end":44}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16359038,"byte_end":16359045,"line_start":305,"line_end":305,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16359050,"byte_end":16359057,"line_start":306,"line_end":306,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16359062,"byte_end":16359065,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ [`poll_expired`]: method@Self::poll_expired","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16359070,"byte_end":16359117,"line_start":308,"line_end":308,"column_start":5,"column_end":52}},{"value":"/ [`remove`]: method@Self::remove","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16359122,"byte_end":16359157,"line_start":309,"line_end":309,"column_start":5,"column_end":40}},{"value":"/ [`reset`]: method@Self::reset","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16359162,"byte_end":16359195,"line_start":310,"line_end":310,"column_start":5,"column_end":38}},{"value":"/ [`Key`]: struct@Key","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16359200,"byte_end":16359223,"line_start":311,"line_end":311,"column_start":5,"column_end":28}},{"value":"/ [type]: #","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16359228,"byte_end":16359241,"line_start":312,"line_end":312,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1386},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16360741,"byte_end":16360753,"line_start":357,"line_end":357,"column_start":12,"column_end":24},"name":"poll_expired","qualname":"<DelayQueue<T>>::poll_expired","value":"fn poll_expired(&mut Self, &mut task::Context)\n-> Poll<Option<Result<Expired<T>, Error>>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to pull out the next value of the delay queue, registering the\n current task for wakeup if the value is not yet available, and returning\n `None` if the queue is exhausted.\n","sig":null,"attributes":[{"value":"/ Attempts to pull out the next value of the delay queue, registering the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16360531,"byte_end":16360606,"line_start":354,"line_end":354,"column_start":5,"column_end":80}},{"value":"/ current task for wakeup if the value is not yet available, and returning","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16360611,"byte_end":16360687,"line_start":355,"line_end":355,"column_start":5,"column_end":81}},{"value":"/ `None` if the queue is exhausted.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16360692,"byte_end":16360729,"line_start":356,"line_end":356,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1390},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16363435,"byte_end":16363441,"line_start":436,"line_end":436,"column_start":12,"column_end":18},"name":"insert","qualname":"<DelayQueue<T>>::insert","value":"fn insert(&mut Self, T, Duration) -> Key","parent":null,"children":[],"decl_id":null,"docs":" Inserts `value` into the queue set to expire after the requested duration\n elapses.","sig":null,"attributes":[{"value":"/ Inserts `value` into the queue set to expire after the requested duration","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16361576,"byte_end":16361653,"line_start":386,"line_end":386,"column_start":5,"column_end":82}},{"value":"/ elapses.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16361658,"byte_end":16361670,"line_start":387,"line_end":387,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16361675,"byte_end":16361678,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `insert_at`, but takes a `Duration`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16361683,"byte_end":16361752,"line_start":389,"line_end":389,"column_start":5,"column_end":74}},{"value":"/ instead of an `Instant`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16361757,"byte_end":16361785,"line_start":390,"line_end":390,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16361790,"byte_end":16361793,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ `value` is stored in the queue until `timeout` duration has","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16361798,"byte_end":16361861,"line_start":392,"line_end":392,"column_start":5,"column_end":68}},{"value":"/ elapsed after `insert` was called. At that point, `value` will","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16361866,"byte_end":16361932,"line_start":393,"line_end":393,"column_start":5,"column_end":71}},{"value":"/ be returned from [`poll_expired`]. If `timeout` is a `Duration` of","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16361937,"byte_end":16362007,"line_start":394,"line_end":394,"column_start":5,"column_end":75}},{"value":"/ zero, then `value` is immediately made available to poll.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16362012,"byte_end":16362073,"line_start":395,"line_end":395,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16362078,"byte_end":16362081,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ The return value represents the insertion and is used as an","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16362086,"byte_end":16362149,"line_start":397,"line_end":397,"column_start":5,"column_end":68}},{"value":"/ argument to [`remove`] and [`reset`]. Note that [`Key`] is a","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16362154,"byte_end":16362218,"line_start":398,"line_end":398,"column_start":5,"column_end":69}},{"value":"/ token and is reused once `value` is removed from the queue","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16362223,"byte_end":16362285,"line_start":399,"line_end":399,"column_start":5,"column_end":67}},{"value":"/ either by calling [`poll_expired`] after `timeout` has elapsed","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16362290,"byte_end":16362356,"line_start":400,"line_end":400,"column_start":5,"column_end":71}},{"value":"/ or by calling [`remove`]. At this point, the caller must not","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16362361,"byte_end":16362425,"line_start":401,"line_end":401,"column_start":5,"column_end":69}},{"value":"/ use the returned [`Key`] again as it may reference a different","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16362430,"byte_end":16362496,"line_start":402,"line_end":402,"column_start":5,"column_end":71}},{"value":"/ item in the queue.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16362501,"byte_end":16362523,"line_start":403,"line_end":403,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16362528,"byte_end":16362531,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ See [type] level documentation for more details.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16362536,"byte_end":16362588,"line_start":405,"line_end":405,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16362593,"byte_end":16362596,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16362601,"byte_end":16362613,"line_start":407,"line_end":407,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16362618,"byte_end":16362621,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ This function panics if `timeout` is greater than the maximum","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16362626,"byte_end":16362691,"line_start":409,"line_end":409,"column_start":5,"column_end":70}},{"value":"/ duration supported by the timer in the current `Runtime`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16362696,"byte_end":16362757,"line_start":410,"line_end":410,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16362762,"byte_end":16362765,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16362770,"byte_end":16362784,"line_start":412,"line_end":412,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16362789,"byte_end":16362792,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16362797,"byte_end":16362812,"line_start":414,"line_end":414,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16362817,"byte_end":16362820,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16362825,"byte_end":16362836,"line_start":416,"line_end":416,"column_start":5,"column_end":16}},{"value":"/ use tokio_util::time::DelayQueue;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16362841,"byte_end":16362878,"line_start":417,"line_end":417,"column_start":5,"column_end":42}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16362883,"byte_end":16362911,"line_start":418,"line_end":418,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16362916,"byte_end":16362919,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16362924,"byte_end":16362944,"line_start":420,"line_end":420,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16362949,"byte_end":16362972,"line_start":421,"line_end":421,"column_start":5,"column_end":28}},{"value":"/ let mut delay_queue = DelayQueue::new();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16362977,"byte_end":16363021,"line_start":422,"line_end":422,"column_start":5,"column_end":49}},{"value":"/ let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16363026,"byte_end":16363090,"line_start":423,"line_end":423,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16363095,"byte_end":16363098,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ // Remove the entry","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16363103,"byte_end":16363126,"line_start":425,"line_end":425,"column_start":5,"column_end":28}},{"value":"/ let item = delay_queue.remove(&key);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16363131,"byte_end":16363171,"line_start":426,"line_end":426,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(*item.get_ref(), \"foo\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16363176,"byte_end":16363215,"line_start":427,"line_end":427,"column_start":5,"column_end":44}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16363220,"byte_end":16363227,"line_start":428,"line_end":428,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16363232,"byte_end":16363239,"line_start":429,"line_end":429,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16363244,"byte_end":16363247,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ [`poll_expired`]: method@Self::poll_expired","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16363252,"byte_end":16363299,"line_start":431,"line_end":431,"column_start":5,"column_end":52}},{"value":"/ [`remove`]: method@Self::remove","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16363304,"byte_end":16363339,"line_start":432,"line_end":432,"column_start":5,"column_end":40}},{"value":"/ [`reset`]: method@Self::reset","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16363344,"byte_end":16363377,"line_start":433,"line_end":433,"column_start":5,"column_end":38}},{"value":"/ [`Key`]: struct@Key","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16363382,"byte_end":16363405,"line_start":434,"line_end":434,"column_start":5,"column_end":28}},{"value":"/ [type]: #","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16363410,"byte_end":16363423,"line_start":435,"line_end":435,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1403},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16365514,"byte_end":16365520,"line_start":500,"line_end":500,"column_start":12,"column_end":18},"name":"remove","qualname":"<DelayQueue<T>>::remove","value":"fn remove(&mut Self, &Key) -> Expired<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes the item associated with `key` from the queue.","sig":null,"attributes":[{"value":"/ Removes the item associated with `key` from the queue.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16364675,"byte_end":16364733,"line_start":472,"line_end":472,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16364738,"byte_end":16364741,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ There must be an item associated with `key`. The function returns the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16364746,"byte_end":16364819,"line_start":474,"line_end":474,"column_start":5,"column_end":78}},{"value":"/ removed item as well as the `Instant` at which it will the delay will","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16364824,"byte_end":16364897,"line_start":475,"line_end":475,"column_start":5,"column_end":78}},{"value":"/ have expired.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16364902,"byte_end":16364919,"line_start":476,"line_end":476,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16364924,"byte_end":16364927,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16364932,"byte_end":16364944,"line_start":478,"line_end":478,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16364949,"byte_end":16364952,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ The function panics if `key` is not contained by the queue.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16364957,"byte_end":16365020,"line_start":480,"line_end":480,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16365025,"byte_end":16365028,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16365033,"byte_end":16365047,"line_start":482,"line_end":482,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16365052,"byte_end":16365055,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16365060,"byte_end":16365075,"line_start":484,"line_end":484,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16365080,"byte_end":16365083,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16365088,"byte_end":16365099,"line_start":486,"line_end":486,"column_start":5,"column_end":16}},{"value":"/ use tokio_util::time::DelayQueue;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16365104,"byte_end":16365141,"line_start":487,"line_end":487,"column_start":5,"column_end":42}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16365146,"byte_end":16365174,"line_start":488,"line_end":488,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16365179,"byte_end":16365182,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16365187,"byte_end":16365207,"line_start":490,"line_end":490,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16365212,"byte_end":16365235,"line_start":491,"line_end":491,"column_start":5,"column_end":28}},{"value":"/ let mut delay_queue = DelayQueue::new();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16365240,"byte_end":16365284,"line_start":492,"line_end":492,"column_start":5,"column_end":49}},{"value":"/ let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16365289,"byte_end":16365353,"line_start":493,"line_end":493,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16365358,"byte_end":16365361,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ // Remove the entry","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16365366,"byte_end":16365389,"line_start":495,"line_end":495,"column_start":5,"column_end":28}},{"value":"/ let item = delay_queue.remove(&key);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16365394,"byte_end":16365434,"line_start":496,"line_end":496,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(*item.get_ref(), \"foo\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16365439,"byte_end":16365478,"line_start":497,"line_end":497,"column_start":5,"column_end":44}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16365483,"byte_end":16365490,"line_start":498,"line_end":498,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16365495,"byte_end":16365502,"line_start":499,"line_end":499,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1404},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16367385,"byte_end":16367393,"line_start":556,"line_end":556,"column_start":12,"column_end":20},"name":"reset_at","qualname":"<DelayQueue<T>>::reset_at","value":"fn reset_at(&mut Self, &Key, Instant)","parent":null,"children":[],"decl_id":null,"docs":" Sets the delay of the item associated with `key` to expire at `when`.","sig":null,"attributes":[{"value":"/ Sets the delay of the item associated with `key` to expire at `when`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16366260,"byte_end":16366333,"line_start":522,"line_end":522,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16366338,"byte_end":16366341,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `reset` but takes an `Instant` instead of","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16366346,"byte_end":16366421,"line_start":524,"line_end":524,"column_start":5,"column_end":80}},{"value":"/ a `Duration`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16366426,"byte_end":16366443,"line_start":525,"line_end":525,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16366448,"byte_end":16366451,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ The item remains in the queue but the delay is set to expire at `when`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16366456,"byte_end":16366531,"line_start":527,"line_end":527,"column_start":5,"column_end":80}},{"value":"/ If `when` is in the past, then the item is immediately made available to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16366536,"byte_end":16366612,"line_start":528,"line_end":528,"column_start":5,"column_end":81}},{"value":"/ the caller.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16366617,"byte_end":16366632,"line_start":529,"line_end":529,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16366637,"byte_end":16366640,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16366645,"byte_end":16366657,"line_start":531,"line_end":531,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16366662,"byte_end":16366665,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ This function panics if `when` is too far in the future or if `key` is","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16366670,"byte_end":16366744,"line_start":533,"line_end":533,"column_start":5,"column_end":79}},{"value":"/ not contained by the queue.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16366749,"byte_end":16366780,"line_start":534,"line_end":534,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16366785,"byte_end":16366788,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16366793,"byte_end":16366807,"line_start":536,"line_end":536,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16366812,"byte_end":16366815,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16366820,"byte_end":16366835,"line_start":538,"line_end":538,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16366840,"byte_end":16366843,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16366848,"byte_end":16366859,"line_start":540,"line_end":540,"column_start":5,"column_end":16}},{"value":"/ use tokio::time::{Duration, Instant};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16366864,"byte_end":16366905,"line_start":541,"line_end":541,"column_start":5,"column_end":46}},{"value":"/ use tokio_util::time::DelayQueue;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16366910,"byte_end":16366947,"line_start":542,"line_end":542,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16366952,"byte_end":16366955,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16366960,"byte_end":16366980,"line_start":544,"line_end":544,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16366985,"byte_end":16367008,"line_start":545,"line_end":545,"column_start":5,"column_end":28}},{"value":"/ let mut delay_queue = DelayQueue::new();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16367013,"byte_end":16367057,"line_start":546,"line_end":546,"column_start":5,"column_end":49}},{"value":"/ let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16367062,"byte_end":16367126,"line_start":547,"line_end":547,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16367131,"byte_end":16367134,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ // \"foo\" is scheduled to be returned in 5 seconds","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16367139,"byte_end":16367192,"line_start":549,"line_end":549,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16367197,"byte_end":16367200,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ delay_queue.reset_at(&key, Instant::now() + Duration::from_secs(10));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16367205,"byte_end":16367278,"line_start":551,"line_end":551,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16367283,"byte_end":16367286,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ // \"foo\" is now scheduled to be returned in 10 seconds","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16367291,"byte_end":16367349,"line_start":553,"line_end":553,"column_start":5,"column_end":63}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16367354,"byte_end":16367361,"line_start":554,"line_end":554,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16367366,"byte_end":16367373,"line_start":555,"line_end":555,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1407},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16369380,"byte_end":16369385,"line_start":616,"line_end":616,"column_start":12,"column_end":17},"name":"reset","qualname":"<DelayQueue<T>>::reset","value":"fn reset(&mut Self, &Key, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Sets the delay of the item associated with `key` to expire after\n `timeout`.","sig":null,"attributes":[{"value":"/ Sets the delay of the item associated with `key` to expire after","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16368245,"byte_end":16368313,"line_start":581,"line_end":581,"column_start":5,"column_end":73}},{"value":"/ `timeout`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16368318,"byte_end":16368332,"line_start":582,"line_end":582,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16368337,"byte_end":16368340,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ This function is identical to `reset_at` but takes a `Duration` instead","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16368345,"byte_end":16368420,"line_start":584,"line_end":584,"column_start":5,"column_end":80}},{"value":"/ of an `Instant`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16368425,"byte_end":16368445,"line_start":585,"line_end":585,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16368450,"byte_end":16368453,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ The item remains in the queue but the delay is set to expire after","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16368458,"byte_end":16368528,"line_start":587,"line_end":587,"column_start":5,"column_end":75}},{"value":"/ `timeout`. If `timeout` is zero, then the item is immediately made","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16368533,"byte_end":16368603,"line_start":588,"line_end":588,"column_start":5,"column_end":75}},{"value":"/ available to the caller.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16368608,"byte_end":16368636,"line_start":589,"line_end":589,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16368641,"byte_end":16368644,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16368649,"byte_end":16368661,"line_start":591,"line_end":591,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16368666,"byte_end":16368669,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ This function panics if `timeout` is greater than the maximum supported","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16368674,"byte_end":16368749,"line_start":593,"line_end":593,"column_start":5,"column_end":80}},{"value":"/ duration or if `key` is not contained by the queue.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16368754,"byte_end":16368809,"line_start":594,"line_end":594,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16368814,"byte_end":16368817,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16368822,"byte_end":16368836,"line_start":596,"line_end":596,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16368841,"byte_end":16368844,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ Basic usage","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16368849,"byte_end":16368864,"line_start":598,"line_end":598,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16368869,"byte_end":16368872,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16368877,"byte_end":16368888,"line_start":600,"line_end":600,"column_start":5,"column_end":16}},{"value":"/ use tokio_util::time::DelayQueue;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16368893,"byte_end":16368930,"line_start":601,"line_end":601,"column_start":5,"column_end":42}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16368935,"byte_end":16368963,"line_start":602,"line_end":602,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16368968,"byte_end":16368971,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16368976,"byte_end":16368996,"line_start":604,"line_end":604,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16369001,"byte_end":16369024,"line_start":605,"line_end":605,"column_start":5,"column_end":28}},{"value":"/ let mut delay_queue = DelayQueue::new();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16369029,"byte_end":16369073,"line_start":606,"line_end":606,"column_start":5,"column_end":49}},{"value":"/ let key = delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16369078,"byte_end":16369142,"line_start":607,"line_end":607,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16369147,"byte_end":16369150,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ // \"foo\" is scheduled to be returned in 5 seconds","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16369155,"byte_end":16369208,"line_start":609,"line_end":609,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16369213,"byte_end":16369216,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ delay_queue.reset(&key, Duration::from_secs(10));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16369221,"byte_end":16369274,"line_start":611,"line_end":611,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16369279,"byte_end":16369282,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ // \"foo\"is now scheduled to be returned in 10 seconds","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16369287,"byte_end":16369344,"line_start":613,"line_end":613,"column_start":5,"column_end":62}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16369349,"byte_end":16369356,"line_start":614,"line_end":614,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16369361,"byte_end":16369368,"line_start":615,"line_end":615,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1408},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16370236,"byte_end":16370241,"line_start":647,"line_end":647,"column_start":12,"column_end":17},"name":"clear","qualname":"<DelayQueue<T>>::clear","value":"fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the queue, removing all items.","sig":null,"attributes":[{"value":"/ Clears the queue, removing all items.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16369494,"byte_end":16369535,"line_start":620,"line_end":620,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16369540,"byte_end":16369543,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ After calling `clear`, [`poll_expired`] will return `Ok(Ready(None))`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16369548,"byte_end":16369622,"line_start":622,"line_end":622,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16369627,"byte_end":16369630,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ Note that this method has no effect on the allocated capacity.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16369635,"byte_end":16369701,"line_start":624,"line_end":624,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16369706,"byte_end":16369709,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ [`poll_expired`]: method@Self::poll_expired","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16369714,"byte_end":16369761,"line_start":626,"line_end":626,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16369766,"byte_end":16369769,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16369774,"byte_end":16369788,"line_start":628,"line_end":628,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16369793,"byte_end":16369796,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16369801,"byte_end":16369812,"line_start":630,"line_end":630,"column_start":5,"column_end":16}},{"value":"/ use tokio_util::time::DelayQueue;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16369817,"byte_end":16369854,"line_start":631,"line_end":631,"column_start":5,"column_end":42}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16369859,"byte_end":16369887,"line_start":632,"line_end":632,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16369892,"byte_end":16369895,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16369900,"byte_end":16369920,"line_start":634,"line_end":634,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16369925,"byte_end":16369948,"line_start":635,"line_end":635,"column_start":5,"column_end":28}},{"value":"/ let mut delay_queue = DelayQueue::new();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16369953,"byte_end":16369997,"line_start":636,"line_end":636,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16370002,"byte_end":16370005,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ delay_queue.insert(\"foo\", Duration::from_secs(5));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16370010,"byte_end":16370064,"line_start":638,"line_end":638,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16370069,"byte_end":16370072,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ assert!(!delay_queue.is_empty());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16370077,"byte_end":16370114,"line_start":640,"line_end":640,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16370119,"byte_end":16370122,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ delay_queue.clear();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16370127,"byte_end":16370151,"line_start":642,"line_end":642,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16370156,"byte_end":16370159,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ assert!(delay_queue.is_empty());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16370164,"byte_end":16370200,"line_start":644,"line_end":644,"column_start":5,"column_end":41}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16370205,"byte_end":16370212,"line_start":645,"line_end":645,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16370217,"byte_end":16370224,"line_start":646,"line_end":646,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1409},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16370718,"byte_end":16370726,"line_start":664,"line_end":664,"column_start":12,"column_end":20},"name":"capacity","qualname":"<DelayQueue<T>>::capacity","value":"fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements the queue can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of elements the queue can hold without reallocating.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16370396,"byte_end":16370471,"line_start":654,"line_end":654,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16370476,"byte_end":16370479,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16370484,"byte_end":16370498,"line_start":656,"line_end":656,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16370503,"byte_end":16370506,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16370511,"byte_end":16370522,"line_start":658,"line_end":658,"column_start":5,"column_end":16}},{"value":"/ use tokio_util::time::DelayQueue;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16370527,"byte_end":16370564,"line_start":659,"line_end":659,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16370569,"byte_end":16370572,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ let delay_queue: DelayQueue<i32> = DelayQueue::with_capacity(10);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16370577,"byte_end":16370646,"line_start":661,"line_end":661,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(delay_queue.capacity(), 10);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16370651,"byte_end":16370694,"line_start":662,"line_end":662,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16370699,"byte_end":16370706,"line_start":663,"line_end":663,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1410},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16371283,"byte_end":16371286,"line_start":684,"line_end":684,"column_start":12,"column_end":15},"name":"len","qualname":"<DelayQueue<T>>::len","value":"fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of elements currently in the queue.","sig":null,"attributes":[{"value":"/ Returns the number of elements currently in the queue.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16370785,"byte_end":16370843,"line_start":668,"line_end":668,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16370848,"byte_end":16370851,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16370856,"byte_end":16370870,"line_start":670,"line_end":670,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16370875,"byte_end":16370878,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16370883,"byte_end":16370894,"line_start":672,"line_end":672,"column_start":5,"column_end":16}},{"value":"/ use tokio_util::time::DelayQueue;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16370899,"byte_end":16370936,"line_start":673,"line_end":673,"column_start":5,"column_end":42}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16370941,"byte_end":16370969,"line_start":674,"line_end":674,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16370974,"byte_end":16370977,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16370982,"byte_end":16371002,"line_start":676,"line_end":676,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16371007,"byte_end":16371030,"line_start":677,"line_end":677,"column_start":5,"column_end":28}},{"value":"/ let mut delay_queue: DelayQueue<i32> = DelayQueue::with_capacity(10);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16371035,"byte_end":16371108,"line_start":678,"line_end":678,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(delay_queue.len(), 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16371113,"byte_end":16371150,"line_start":679,"line_end":679,"column_start":5,"column_end":42}},{"value":"/ delay_queue.insert(3, Duration::from_secs(5));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16371155,"byte_end":16371205,"line_start":680,"line_end":680,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(delay_queue.len(), 1);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16371210,"byte_end":16371247,"line_start":681,"line_end":681,"column_start":5,"column_end":42}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16371252,"byte_end":16371259,"line_start":682,"line_end":682,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16371264,"byte_end":16371271,"line_start":683,"line_end":683,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1411},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16372484,"byte_end":16372491,"line_start":721,"line_end":721,"column_start":12,"column_end":19},"name":"reserve","qualname":"<DelayQueue<T>>::reserve","value":"fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more items to be queued\n without allocating.","sig":null,"attributes":[{"value":"/ Reserves capacity for at least `additional` more items to be queued","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16371340,"byte_end":16371411,"line_start":688,"line_end":688,"column_start":5,"column_end":76}},{"value":"/ without allocating.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16371416,"byte_end":16371439,"line_start":689,"line_end":689,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16371444,"byte_end":16371447,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ `reserve` does nothing if the queue already has sufficient capacity for","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16371452,"byte_end":16371527,"line_start":691,"line_end":691,"column_start":5,"column_end":80}},{"value":"/ `additional` more values. If more capacity is required, a new segment of","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16371532,"byte_end":16371608,"line_start":692,"line_end":692,"column_start":5,"column_end":81}},{"value":"/ memory will be allocated and all existing values will be copied into it.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16371613,"byte_end":16371689,"line_start":693,"line_end":693,"column_start":5,"column_end":81}},{"value":"/ As such, if the queue is already very large, a call to `reserve` can end","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16371694,"byte_end":16371770,"line_start":694,"line_end":694,"column_start":5,"column_end":81}},{"value":"/ up being expensive.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16371775,"byte_end":16371798,"line_start":695,"line_end":695,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16371803,"byte_end":16371806,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ The queue may reserve more than `additional` extra space in order to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16371811,"byte_end":16371883,"line_start":697,"line_end":697,"column_start":5,"column_end":77}},{"value":"/ avoid frequent reallocations.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16371888,"byte_end":16371921,"line_start":698,"line_end":698,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16371926,"byte_end":16371929,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16371934,"byte_end":16371946,"line_start":700,"line_end":700,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16371951,"byte_end":16371954,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ Panics if the new capacity exceeds the maximum number of entries the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16371959,"byte_end":16372031,"line_start":702,"line_end":702,"column_start":5,"column_end":77}},{"value":"/ queue can contain.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16372036,"byte_end":16372058,"line_start":703,"line_end":703,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16372063,"byte_end":16372066,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16372071,"byte_end":16372085,"line_start":705,"line_end":705,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16372090,"byte_end":16372093,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16372098,"byte_end":16372105,"line_start":707,"line_end":707,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::time::DelayQueue;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16372110,"byte_end":16372147,"line_start":708,"line_end":708,"column_start":5,"column_end":42}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16372152,"byte_end":16372180,"line_start":709,"line_end":709,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16372185,"byte_end":16372188,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16372193,"byte_end":16372213,"line_start":711,"line_end":711,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16372218,"byte_end":16372241,"line_start":712,"line_end":712,"column_start":5,"column_end":28}},{"value":"/ let mut delay_queue = DelayQueue::new();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16372246,"byte_end":16372290,"line_start":713,"line_end":713,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16372295,"byte_end":16372298,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/ delay_queue.insert(\"hello\", Duration::from_secs(10));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16372303,"byte_end":16372360,"line_start":715,"line_end":715,"column_start":5,"column_end":62}},{"value":"/ delay_queue.reserve(10);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16372365,"byte_end":16372393,"line_start":716,"line_end":716,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16372398,"byte_end":16372401,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ assert!(delay_queue.capacity() >= 11);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16372406,"byte_end":16372448,"line_start":718,"line_end":718,"column_start":5,"column_end":47}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16372453,"byte_end":16372460,"line_start":719,"line_end":719,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16372465,"byte_end":16372472,"line_start":720,"line_end":720,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1412},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16373201,"byte_end":16373209,"line_start":745,"line_end":745,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<DelayQueue<T>>::is_empty","value":"fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if there are no items in the queue.","sig":null,"attributes":[{"value":"/ Returns `true` if there are no items in the queue.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16372574,"byte_end":16372628,"line_start":725,"line_end":725,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16372633,"byte_end":16372636,"line_start":726,"line_end":726,"column_start":5,"column_end":8}},{"value":"/ Note that this function returns `false` even if all items have not yet","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16372641,"byte_end":16372715,"line_start":727,"line_end":727,"column_start":5,"column_end":79}},{"value":"/ expired and a call to `poll` will return `Poll::Pending`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16372720,"byte_end":16372781,"line_start":728,"line_end":728,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16372786,"byte_end":16372789,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16372794,"byte_end":16372808,"line_start":730,"line_end":730,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16372813,"byte_end":16372816,"line_start":731,"line_end":731,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16372821,"byte_end":16372828,"line_start":732,"line_end":732,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::time::DelayQueue;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16372833,"byte_end":16372870,"line_start":733,"line_end":733,"column_start":5,"column_end":42}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16372875,"byte_end":16372903,"line_start":734,"line_end":734,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16372908,"byte_end":16372911,"line_start":735,"line_end":735,"column_start":5,"column_end":8}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16372916,"byte_end":16372936,"line_start":736,"line_end":736,"column_start":5,"column_end":25}},{"value":"/ # async fn main() {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16372941,"byte_end":16372964,"line_start":737,"line_end":737,"column_start":5,"column_end":28}},{"value":"/ let mut delay_queue = DelayQueue::new();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16372969,"byte_end":16373013,"line_start":738,"line_end":738,"column_start":5,"column_end":49}},{"value":"/ assert!(delay_queue.is_empty());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16373018,"byte_end":16373054,"line_start":739,"line_end":739,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16373059,"byte_end":16373062,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ delay_queue.insert(\"hello\", Duration::from_secs(5));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16373067,"byte_end":16373123,"line_start":741,"line_end":741,"column_start":5,"column_end":61}},{"value":"/ assert!(!delay_queue.is_empty());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16373128,"byte_end":16373165,"line_start":742,"line_end":742,"column_start":5,"column_end":42}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16373170,"byte_end":16373177,"line_start":743,"line_end":743,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16373182,"byte_end":16373189,"line_start":744,"line_end":744,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1423},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16374937,"byte_end":16374944,"line_start":803,"line_end":803,"column_start":8,"column_end":15},"name":"default","qualname":"<DelayQueue<T> as std::default::Default>::default","value":"fn default() -> DelayQueue<T>","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1427},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16375249,"byte_end":16375258,"line_start":813,"line_end":813,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<DelayQueue<T> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut task::Context) -> Poll<Option<Self::Item>>","parent":{"krate":21,"index":96},"children":[],"decl_id":{"krate":21,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1445},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16377855,"byte_end":16377862,"line_start":917,"line_end":917,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Expired<T>>::get_ref","value":"fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the inner value.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the inner value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16377800,"byte_end":16377843,"line_start":916,"line_end":916,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1446},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16377971,"byte_end":16377978,"line_start":922,"line_end":922,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Expired<T>>::get_mut","value":"fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the inner value.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the inner value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16377908,"byte_end":16377959,"line_start":921,"line_end":921,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1447},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16378096,"byte_end":16378106,"line_start":927,"line_end":927,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Expired<T>>::into_inner","value":"fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self` and returns the inner value.\n","sig":null,"attributes":[{"value":"/ Consumes `self` and returns the inner value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16378036,"byte_end":16378084,"line_start":926,"line_end":926,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1448},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16378217,"byte_end":16378225,"line_start":932,"line_end":932,"column_start":12,"column_end":20},"name":"deadline","qualname":"<Expired<T>>::deadline","value":"fn deadline(&Self) -> Instant","parent":null,"children":[],"decl_id":null,"docs":" Returns the deadline that the expiration was set to.\n","sig":null,"attributes":[{"value":"/ Returns the deadline that the expiration was set to.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16378149,"byte_end":16378205,"line_start":931,"line_end":931,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1449},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16378345,"byte_end":16378348,"line_start":937,"line_end":937,"column_start":12,"column_end":15},"name":"key","qualname":"<Expired<T>>::key","value":"fn key(&Self) -> Key","parent":null,"children":[],"decl_id":null,"docs":" Returns the key that the expiration is indexed by.\n","sig":null,"attributes":[{"value":"/ Returns the key that the expiration is indexed by.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16378279,"byte_end":16378333,"line_start":936,"line_end":936,"column_start":5,"column_end":59}}]},{"kind":"Mod","id":{"krate":0,"index":14},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mod.rs","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":112},{"krate":0,"index":115},{"krate":0,"index":172},{"krate":0,"index":175},{"krate":0,"index":235},{"krate":0,"index":238},{"krate":0,"index":304}],"decl_id":null,"docs":" Synchronization primitives\n","sig":null,"attributes":[{"value":"/ Synchronization primitives","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mod.rs","byte_start":6878,"byte_end":6908,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":1536},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token/guard.rs","byte_start":14330,"byte_end":14339,"line_start":6,"line_end":6,"column_start":12,"column_end":21},"name":"DropGuard","qualname":"::sync::cancellation_token::guard::DropGuard","value":"DropGuard {  }","parent":null,"children":[{"krate":0,"index":1537}],"decl_id":null,"docs":" A wrapper for cancellation token which automatically cancels\n it on drop. It is created using `drop_guard` method on the `CancellationToken`.\n","sig":null,"attributes":[{"value":"/ A wrapper for cancellation token which automatically cancels","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token/guard.rs","byte_start":14153,"byte_end":14217,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"/ it on drop. It is created using `drop_guard` method on the `CancellationToken`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token/guard.rs","byte_start":14218,"byte_end":14301,"line_start":4,"line_end":4,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token/guard.rs","byte_start":14602,"byte_end":14608,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"disarm","qualname":"<DropGuard>::disarm","value":"fn disarm(Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Returns stored cancellation token and removes this drop guard instance\n (i.e. it will no longer cancel token). Other guards for this token\n are not affected.\n","sig":null,"attributes":[{"value":"/ Returns stored cancellation token and removes this drop guard instance","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token/guard.rs","byte_start":14415,"byte_end":14489,"line_start":11,"line_end":11,"column_start":5,"column_end":79}},{"value":"/ (i.e. it will no longer cancel token). Other guards for this token","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token/guard.rs","byte_start":14494,"byte_end":14564,"line_start":12,"line_end":12,"column_start":5,"column_end":75}},{"value":"/ are not affected.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token/guard.rs","byte_start":14569,"byte_end":14590,"line_start":13,"line_end":13,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token/guard.rs","byte_start":14787,"byte_end":14791,"line_start":22,"line_end":22,"column_start":8,"column_end":12},"name":"drop","qualname":"<DropGuard as std::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":2,"index":3422},"children":[],"decl_id":{"krate":2,"index":3423},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":81},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8741,"byte_end":8758,"line_start":54,"line_end":54,"column_start":12,"column_end":29},"name":"CancellationToken","qualname":"::sync::cancellation_token::CancellationToken","value":"CancellationToken {  }","parent":null,"children":[{"krate":0,"index":82}],"decl_id":null,"docs":" A token which can be used to signal a cancellation request to one or more\n tasks.","sig":null,"attributes":[{"value":"/ A token which can be used to signal a cancellation request to one or more","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":7519,"byte_end":7596,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ tasks.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":7597,"byte_end":7607,"line_start":15,"line_end":15,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":7608,"byte_end":7611,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Tasks can call [`CancellationToken::cancelled()`] in order to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":7612,"byte_end":7677,"line_start":17,"line_end":17,"column_start":1,"column_end":66}},{"value":"/ obtain a Future which will be resolved when cancellation is requested.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":7678,"byte_end":7752,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":7753,"byte_end":7756,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Cancellation can be requested through the [`CancellationToken::cancel`] method.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":7757,"byte_end":7840,"line_start":20,"line_end":20,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":7841,"byte_end":7844,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":7845,"byte_end":7859,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":7860,"byte_end":7863,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":7864,"byte_end":7877,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/ use tokio::select;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":7878,"byte_end":7900,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/ use tokio_util::sync::CancellationToken;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":7901,"byte_end":7945,"line_start":26,"line_end":26,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":7946,"byte_end":7949,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":7950,"byte_end":7968,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":7969,"byte_end":7990,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":7991,"byte_end":8036,"line_start":30,"line_end":30,"column_start":1,"column_end":46}},{"value":"/     let cloned_token = token.clone();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8037,"byte_end":8078,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8079,"byte_end":8082,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8083,"byte_end":8134,"line_start":33,"line_end":33,"column_start":1,"column_end":52}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8135,"byte_end":8198,"line_start":34,"line_end":34,"column_start":1,"column_end":64}},{"value":"/         select! {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8199,"byte_end":8220,"line_start":35,"line_end":35,"column_start":1,"column_end":22}},{"value":"/             _ = cloned_token.cancelled() => {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8221,"byte_end":8270,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/                 // The token was cancelled","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8271,"byte_end":8317,"line_start":37,"line_end":37,"column_start":1,"column_end":47}},{"value":"/                 5","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8318,"byte_end":8339,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8340,"byte_end":8357,"line_start":39,"line_end":39,"column_start":1,"column_end":18}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8358,"byte_end":8439,"line_start":40,"line_end":40,"column_start":1,"column_end":82}},{"value":"/                 99","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8440,"byte_end":8462,"line_start":41,"line_end":41,"column_start":1,"column_end":23}},{"value":"/             }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8463,"byte_end":8480,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8481,"byte_end":8494,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8495,"byte_end":8506,"line_start":44,"line_end":44,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8507,"byte_end":8510,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8511,"byte_end":8544,"line_start":46,"line_end":46,"column_start":1,"column_end":34}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8545,"byte_end":8620,"line_start":47,"line_end":47,"column_start":1,"column_end":76}},{"value":"/         token.cancel();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8621,"byte_end":8648,"line_start":48,"line_end":48,"column_start":1,"column_end":28}},{"value":"/     });","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8649,"byte_end":8660,"line_start":49,"line_end":49,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8661,"byte_end":8664,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8665,"byte_end":8715,"line_start":51,"line_end":51,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8716,"byte_end":8721,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8722,"byte_end":8729,"line_start":53,"line_end":53,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1540},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":8985,"byte_end":9010,"line_start":62,"line_end":62,"column_start":16,"column_end":41},"name":"WaitForCancellationFuture","qualname":"::sync::cancellation_token::WaitForCancellationFuture","value":"WaitForCancellationFuture {  }","parent":null,"children":[{"krate":0,"index":1542},{"krate":0,"index":1543}],"decl_id":null,"docs":" A Future that is resolved once the corresponding [`CancellationToken`]\n is cancelled.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14084106,"byte_end":14084115,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":9236,"byte_end":9239,"line_start":72,"line_end":72,"column_start":8,"column_end":11},"name":"fmt","qualname":"<CancellationToken as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut core::fmt::Formatter) -> core::fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":9478,"byte_end":9483,"line_start":80,"line_end":80,"column_start":8,"column_end":13},"name":"clone","qualname":"<CancellationToken as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":9686,"byte_end":9690,"line_start":89,"line_end":89,"column_start":8,"column_end":12},"name":"drop","qualname":"<CancellationToken as std::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":2,"index":3422},"children":[],"decl_id":{"krate":2,"index":3423},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":9815,"byte_end":9822,"line_start":95,"line_end":95,"column_start":8,"column_end":15},"name":"default","qualname":"<CancellationToken as std::default::Default>::default","value":"fn default() -> CancellationToken","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":9994,"byte_end":9997,"line_start":102,"line_end":102,"column_start":12,"column_end":15},"name":"new","qualname":"<CancellationToken>::new","value":"fn new() -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a new CancellationToken in the non-cancelled state.\n","sig":null,"attributes":[{"value":"/ Creates a new CancellationToken in the non-cancelled state.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":9919,"byte_end":9982,"line_start":101,"line_end":101,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":11396,"byte_end":11407,"line_start":146,"line_end":146,"column_start":12,"column_end":23},"name":"child_token","qualname":"<CancellationToken>::child_token","value":"fn child_token(&Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a `CancellationToken` which will get cancelled whenever the\n current token gets cancelled.","sig":null,"attributes":[{"value":"/ Creates a `CancellationToken` which will get cancelled whenever the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10129,"byte_end":10200,"line_start":108,"line_end":108,"column_start":5,"column_end":76}},{"value":"/ current token gets cancelled.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10205,"byte_end":10238,"line_start":109,"line_end":109,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10243,"byte_end":10246,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ If the current token is already cancelled, the child token will get","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10251,"byte_end":10322,"line_start":111,"line_end":111,"column_start":5,"column_end":76}},{"value":"/ returned in cancelled state.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10327,"byte_end":10359,"line_start":112,"line_end":112,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10364,"byte_end":10367,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10372,"byte_end":10386,"line_start":114,"line_end":114,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10391,"byte_end":10394,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10399,"byte_end":10412,"line_start":116,"line_end":116,"column_start":5,"column_end":18}},{"value":"/ use tokio::select;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10417,"byte_end":10439,"line_start":117,"line_end":117,"column_start":5,"column_end":27}},{"value":"/ use tokio_util::sync::CancellationToken;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10444,"byte_end":10488,"line_start":118,"line_end":118,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10493,"byte_end":10496,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10501,"byte_end":10519,"line_start":120,"line_end":120,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10524,"byte_end":10545,"line_start":121,"line_end":121,"column_start":5,"column_end":26}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10550,"byte_end":10595,"line_start":122,"line_end":122,"column_start":5,"column_end":50}},{"value":"/     let child_token = token.child_token();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10600,"byte_end":10646,"line_start":123,"line_end":123,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10651,"byte_end":10654,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10659,"byte_end":10710,"line_start":125,"line_end":125,"column_start":5,"column_end":56}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10715,"byte_end":10778,"line_start":126,"line_end":126,"column_start":5,"column_end":68}},{"value":"/         select! {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10783,"byte_end":10804,"line_start":127,"line_end":127,"column_start":5,"column_end":26}},{"value":"/             _ = child_token.cancelled() => {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10809,"byte_end":10857,"line_start":128,"line_end":128,"column_start":5,"column_end":53}},{"value":"/                 // The token was cancelled","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10862,"byte_end":10908,"line_start":129,"line_end":129,"column_start":5,"column_end":51}},{"value":"/                 5","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10913,"byte_end":10934,"line_start":130,"line_end":130,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10939,"byte_end":10956,"line_start":131,"line_end":131,"column_start":5,"column_end":22}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":10961,"byte_end":11042,"line_start":132,"line_end":132,"column_start":5,"column_end":86}},{"value":"/                 99","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":11047,"byte_end":11069,"line_start":133,"line_end":133,"column_start":5,"column_end":27}},{"value":"/             }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":11074,"byte_end":11091,"line_start":134,"line_end":134,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":11096,"byte_end":11109,"line_start":135,"line_end":135,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":11114,"byte_end":11125,"line_start":136,"line_end":136,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":11130,"byte_end":11133,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":11138,"byte_end":11171,"line_start":138,"line_end":138,"column_start":5,"column_end":38}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":11176,"byte_end":11251,"line_start":139,"line_end":139,"column_start":5,"column_end":80}},{"value":"/         token.cancel();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":11256,"byte_end":11283,"line_start":140,"line_end":140,"column_start":5,"column_end":32}},{"value":"/     });","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":11288,"byte_end":11299,"line_start":141,"line_end":141,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":11304,"byte_end":11307,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":11312,"byte_end":11362,"line_start":143,"line_end":143,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":11367,"byte_end":11372,"line_start":144,"line_end":144,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":11377,"byte_end":11384,"line_start":145,"line_end":145,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":12130,"byte_end":12136,"line_start":162,"line_end":162,"column_start":12,"column_end":18},"name":"cancel","qualname":"<CancellationToken>::cancel","value":"fn cancel(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Cancel the [`CancellationToken`] and all child tokens which had been\n derived from it.","sig":null,"attributes":[{"value":"/ Cancel the [`CancellationToken`] and all child tokens which had been","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":11542,"byte_end":11614,"line_start":152,"line_end":152,"column_start":5,"column_end":77}},{"value":"/ derived from it.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":11619,"byte_end":11639,"line_start":153,"line_end":153,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":11644,"byte_end":11647,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ This will wake up all tasks which are waiting for cancellation.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":11652,"byte_end":11719,"line_start":155,"line_end":155,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":11724,"byte_end":11727,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ Be aware that cancellation is not an atomic operation. It is possible","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":11732,"byte_end":11805,"line_start":157,"line_end":157,"column_start":5,"column_end":78}},{"value":"/ for another thread running in parallel with a call to `cancel` to first","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":11810,"byte_end":11885,"line_start":158,"line_end":158,"column_start":5,"column_end":80}},{"value":"/ receive `true` from `is_cancelled` on one child node, and then receive","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":11890,"byte_end":11964,"line_start":159,"line_end":159,"column_start":5,"column_end":79}},{"value":"/ `false` from `is_cancelled` on another child node. However, once the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":11969,"byte_end":12041,"line_start":160,"line_end":160,"column_start":5,"column_end":77}},{"value":"/ call to `cancel` returns, all child nodes have been fully cancelled.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":12046,"byte_end":12118,"line_start":161,"line_end":161,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":12268,"byte_end":12280,"line_start":167,"line_end":167,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<CancellationToken>::is_cancelled","value":"fn is_cancelled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `CancellationToken` is cancelled.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the `CancellationToken` is cancelled.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":12197,"byte_end":12256,"line_start":166,"line_end":166,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":12639,"byte_end":12648,"line_start":179,"line_end":179,"column_start":12,"column_end":21},"name":"cancelled","qualname":"<CancellationToken>::cancelled","value":"fn cancelled(&Self) -> WaitForCancellationFuture","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Future` that gets fulfilled when cancellation is requested.","sig":null,"attributes":[{"value":"/ Returns a `Future` that gets fulfilled when cancellation is requested.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":12354,"byte_end":12428,"line_start":171,"line_end":171,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":12433,"byte_end":12436,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ The future will complete immediately if the token is already cancelled","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":12441,"byte_end":12515,"line_start":173,"line_end":173,"column_start":5,"column_end":79}},{"value":"/ when this method is called.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":12520,"byte_end":12551,"line_start":174,"line_end":174,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":12556,"byte_end":12559,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":12564,"byte_end":12583,"line_start":176,"line_end":176,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":12588,"byte_end":12591,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ This method is cancel safe.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":12596,"byte_end":12627,"line_start":178,"line_end":178,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":12992,"byte_end":13002,"line_start":190,"line_end":190,"column_start":12,"column_end":22},"name":"drop_guard","qualname":"<CancellationToken>::drop_guard","value":"fn drop_guard(Self) -> DropGuard","parent":null,"children":[],"decl_id":null,"docs":" Creates a `DropGuard` for this token.","sig":null,"attributes":[{"value":"/ Creates a `DropGuard` for this token.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":12829,"byte_end":12870,"line_start":186,"line_end":186,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":12875,"byte_end":12878,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ Returned guard will cancel this token (and all its children) on drop","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":12883,"byte_end":12955,"line_start":188,"line_end":188,"column_start":5,"column_end":77}},{"value":"/ unless disarmed.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":12960,"byte_end":12980,"line_start":189,"line_end":189,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":13189,"byte_end":13192,"line_start":198,"line_end":198,"column_start":8,"column_end":11},"name":"fmt","qualname":"<WaitForCancellationFuture as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut core::fmt::Formatter) -> core::fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":13409,"byte_end":13413,"line_start":206,"line_end":206,"column_start":8,"column_end":12},"name":"poll","qualname":"<WaitForCancellationFuture as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<()>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1577},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":29661,"byte_end":29671,"line_start":18,"line_end":18,"column_start":12,"column_end":22},"name":"PollSender","qualname":"::sync::mpsc::PollSender","value":"PollSender {  }","parent":null,"children":[{"krate":0,"index":1579},{"krate":0,"index":1580},{"krate":0,"index":1581}],"decl_id":null,"docs":" A wrapper around [`mpsc::Sender`] that can be polled.","sig":null,"attributes":[{"value":"/ A wrapper around [`mpsc::Sender`] that can be polled.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":29523,"byte_end":29580,"line_start":14,"line_end":14,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":29581,"byte_end":29584,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`mpsc::Sender`]: tokio::sync::mpsc::Sender","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":29585,"byte_end":29632,"line_start":16,"line_end":16,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":30394,"byte_end":30397,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSender<T>>::new","value":"fn new(Sender<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PollSender`.\n","sig":null,"attributes":[{"value":"/ Create a new `PollSender`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":30352,"byte_end":30382,"line_start":38,"line_end":38,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":31112,"byte_end":31122,"line_start":57,"line_end":57,"column_start":12,"column_end":22},"name":"start_send","qualname":"<PollSender<T>>::start_send","value":"fn start_send(&mut Self, T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Start sending a new item.","sig":null,"attributes":[{"value":"/ Start sending a new item.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":30600,"byte_end":30629,"line_start":47,"line_end":47,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":30634,"byte_end":30637,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ This method panics if a send is currently in progress. To ensure that no","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":30642,"byte_end":30718,"line_start":49,"line_end":49,"column_start":5,"column_end":81}},{"value":"/ send is in progress, call `poll_send_done` first until it returns","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":30723,"byte_end":30792,"line_start":50,"line_end":50,"column_start":5,"column_end":74}},{"value":"/ `Poll::Ready`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":30797,"byte_end":30815,"line_start":51,"line_end":51,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":30820,"byte_end":30823,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ If this method returns an error, that indicates that the channel is","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":30828,"byte_end":30899,"line_start":53,"line_end":53,"column_start":5,"column_end":76}},{"value":"/ closed. Note that this method is not guaranteed to return an error if","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":30904,"byte_end":30977,"line_start":54,"line_end":54,"column_start":5,"column_end":78}},{"value":"/ the channel is closed, but in that case the error would be reported by","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":30982,"byte_end":31056,"line_start":55,"line_end":55,"column_start":5,"column_end":79}},{"value":"/ the first call to `poll_send_done`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":31061,"byte_end":31100,"line_start":56,"line_end":56,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":32643,"byte_end":32657,"line_start":91,"line_end":91,"column_start":12,"column_end":26},"name":"poll_send_done","qualname":"<PollSender<T>>::poll_send_done","value":"fn poll_send_done(&mut Self, &mut Context) -> Poll<Result<(), SendError<T>>>","parent":null,"children":[],"decl_id":null,"docs":" If a send is in progress, poll for its completion. If no send is in progress,\n this method returns `Poll::Ready(Ok(()))`.","sig":null,"attributes":[{"value":"/ If a send is in progress, poll for its completion. If no send is in progress,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":31546,"byte_end":31627,"line_start":71,"line_end":71,"column_start":5,"column_end":86}},{"value":"/ this method returns `Poll::Ready(Ok(()))`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":31632,"byte_end":31678,"line_start":72,"line_end":72,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":31683,"byte_end":31686,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ This method can return the following values:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":31691,"byte_end":31739,"line_start":74,"line_end":74,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":31744,"byte_end":31747,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/  - `Poll::Ready(Ok(()))` if the in-progress send has been completed, or there is","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":31752,"byte_end":31836,"line_start":76,"line_end":76,"column_start":5,"column_end":89}},{"value":"/    no send in progress (even if the channel is closed).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":31841,"byte_end":31900,"line_start":77,"line_end":77,"column_start":5,"column_end":64}},{"value":"/  - `Poll::Ready(Err(err))` if the in-progress send failed because the channel has","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":31905,"byte_end":31990,"line_start":78,"line_end":78,"column_start":5,"column_end":90}},{"value":"/    been closed.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":31995,"byte_end":32014,"line_start":79,"line_end":79,"column_start":5,"column_end":24}},{"value":"/  - `Poll::Pending` if a send is in progress, but it could not complete now.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":32019,"byte_end":32098,"line_start":80,"line_end":80,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":32103,"byte_end":32106,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":32111,"byte_end":32186,"line_start":82,"line_end":82,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when the message is sent, or when the entire channel","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":32191,"byte_end":32267,"line_start":83,"line_end":83,"column_start":5,"column_end":81}},{"value":"/ is closed (but not if just this sender is closed by","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":32272,"byte_end":32327,"line_start":84,"line_end":84,"column_start":5,"column_end":60}},{"value":"/ `close_this_sender`). Note that on multiple calls to `poll_send_done`,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":32332,"byte_end":32406,"line_start":85,"line_end":85,"column_start":5,"column_end":79}},{"value":"/ only the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":32411,"byte_end":32484,"line_start":86,"line_end":86,"column_start":5,"column_end":78}},{"value":"/ scheduled to receive a wakeup.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":32489,"byte_end":32523,"line_start":87,"line_end":87,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":32528,"byte_end":32531,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ If this method returns `Poll::Ready`, then `start_send` is guaranteed to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":32536,"byte_end":32612,"line_start":89,"line_end":89,"column_start":5,"column_end":81}},{"value":"/ not panic.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":32617,"byte_end":32631,"line_start":90,"line_end":90,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":33291,"byte_end":33299,"line_start":112,"line_end":112,"column_start":12,"column_end":20},"name":"is_ready","qualname":"<PollSender<T>>::is_ready","value":"fn is_ready(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether the channel is ready to send more messages now.","sig":null,"attributes":[{"value":"/ Check whether the channel is ready to send more messages now.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":33043,"byte_end":33108,"line_start":106,"line_end":106,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":33113,"byte_end":33116,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ If this method returns `true`, then `start_send` is guaranteed to not","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":33121,"byte_end":33194,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/ panic.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":33199,"byte_end":33209,"line_start":109,"line_end":109,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":33214,"byte_end":33217,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ If the channel is closed, this method returns `true`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":33222,"byte_end":33279,"line_start":111,"line_end":111,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":33411,"byte_end":33420,"line_start":117,"line_end":117,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<PollSender<T>>::is_closed","value":"fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether the channel has been closed.\n","sig":null,"attributes":[{"value":"/ Check whether the channel has been closed.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":33353,"byte_end":33399,"line_start":116,"line_end":116,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":33761,"byte_end":33772,"line_start":128,"line_end":128,"column_start":12,"column_end":23},"name":"clone_inner","qualname":"<PollSender<T>>::clone_inner","value":"fn clone_inner(&Self) -> Option<Sender<T>>","parent":null,"children":[],"decl_id":null,"docs":" Clone the underlying `Sender`.","sig":null,"attributes":[{"value":"/ Clone the underlying `Sender`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":33562,"byte_end":33596,"line_start":124,"line_end":124,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":33601,"byte_end":33604,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ If this method returns `None`, then the channel is closed. (But it is","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":33609,"byte_end":33682,"line_start":126,"line_end":126,"column_start":5,"column_end":78}},{"value":"/ not guaranteed to return `None` if the channel is closed.)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":33687,"byte_end":33749,"line_start":127,"line_end":127,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":34077,"byte_end":34086,"line_start":136,"line_end":136,"column_start":12,"column_end":21},"name":"inner_ref","qualname":"<PollSender<T>>::inner_ref","value":"fn inner_ref(&Self) -> Option<&Sender<T>>","parent":null,"children":[],"decl_id":null,"docs":" Access the underlying `Sender`.","sig":null,"attributes":[{"value":"/ Access the underlying `Sender`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":33877,"byte_end":33912,"line_start":132,"line_end":132,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":33917,"byte_end":33920,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ If this method returns `None`, then the channel is closed. (But it is","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":33925,"byte_end":33998,"line_start":134,"line_end":134,"column_start":5,"column_end":78}},{"value":"/ not guaranteed to return `None` if the channel is closed.)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":34003,"byte_end":34065,"line_start":135,"line_end":135,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":34786,"byte_end":34803,"line_start":152,"line_end":152,"column_start":12,"column_end":29},"name":"close_this_sender","qualname":"<PollSender<T>>::close_this_sender","value":"fn close_this_sender(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Close this sender. No more messages can be sent from this sender.","sig":null,"attributes":[{"value":"/ Close this sender. No more messages can be sent from this sender.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":34237,"byte_end":34306,"line_start":141,"line_end":141,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":34311,"byte_end":34314,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ Note that this only closes the channel from the view-point of this","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":34319,"byte_end":34389,"line_start":143,"line_end":143,"column_start":5,"column_end":75}},{"value":"/ sender. The channel remains open until all senders have gone away, or","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":34394,"byte_end":34467,"line_start":144,"line_end":144,"column_start":5,"column_end":78}},{"value":"/ until the [`Receiver`] closes the channel.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":34472,"byte_end":34518,"line_start":145,"line_end":145,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":34523,"byte_end":34526,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ If there is a send in progress when this method is called, that send is","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":34531,"byte_end":34606,"line_start":147,"line_end":147,"column_start":5,"column_end":80}},{"value":"/ unaffected by this operation, and `poll_send_done` can still be called","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":34611,"byte_end":34685,"line_start":148,"line_end":148,"column_start":5,"column_end":79}},{"value":"/ to complete that send.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":34690,"byte_end":34716,"line_start":149,"line_end":149,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":34721,"byte_end":34724,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: tokio::sync::mpsc::Receiver","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":34729,"byte_end":34774,"line_start":151,"line_end":151,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":34969,"byte_end":34979,"line_start":159,"line_end":159,"column_start":12,"column_end":22},"name":"abort_send","qualname":"<PollSender<T>>::abort_send","value":"fn abort_send(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Abort the current in-progress send, if any.","sig":null,"attributes":[{"value":"/ Abort the current in-progress send, if any.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":34856,"byte_end":34903,"line_start":156,"line_end":156,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":34908,"byte_end":34911,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if a send was aborted.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":34916,"byte_end":34957,"line_start":158,"line_end":158,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":35374,"byte_end":35379,"line_start":173,"line_end":173,"column_start":8,"column_end":13},"name":"clone","qualname":"<PollSender<T> as std::clone::Clone>::clone","value":"fn clone(&Self) -> PollSender<T>","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":" Clones this `PollSender`. The resulting clone will not have any\n in-progress send operations, even if the current `PollSender` does.\n","sig":null,"attributes":[{"value":"/ Clones this `PollSender`. The resulting clone will not have any","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":35223,"byte_end":35290,"line_start":171,"line_end":171,"column_start":5,"column_end":72}},{"value":"/ in-progress send operations, even if the current `PollSender` does.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":35295,"byte_end":35366,"line_start":172,"line_end":172,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":35793,"byte_end":35803,"line_start":188,"line_end":188,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"<PollSender<T> as futures_sink::Sink>::poll_ready","value":"fn poll_ready(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":22,"index":17},"children":[],"decl_id":{"krate":22,"index":20},"docs":" This is equivalent to calling [`poll_send_done`].","sig":null,"attributes":[{"value":"/ This is equivalent to calling [`poll_send_done`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":35669,"byte_end":35722,"line_start":185,"line_end":185,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":35727,"byte_end":35730,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ [`poll_send_done`]: PollSender::poll_send_done","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":35735,"byte_end":35785,"line_start":187,"line_end":187,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":36067,"byte_end":36077,"line_start":195,"line_end":195,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<PollSender<T> as futures_sink::Sink>::poll_flush","value":"fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":22,"index":17},"children":[],"decl_id":{"krate":22,"index":22},"docs":" This is equivalent to calling [`poll_send_done`].","sig":null,"attributes":[{"value":"/ This is equivalent to calling [`poll_send_done`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":35943,"byte_end":35996,"line_start":192,"line_end":192,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":36001,"byte_end":36004,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ [`poll_send_done`]: PollSender::poll_send_done","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":36009,"byte_end":36059,"line_start":194,"line_end":194,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":36329,"byte_end":36339,"line_start":202,"line_end":202,"column_start":8,"column_end":18},"name":"start_send","qualname":"<PollSender<T> as futures_sink::Sink>::start_send","value":"fn start_send(Pin<&mut Self>, T) -> Result<(), Self::Error>","parent":{"krate":22,"index":17},"children":[],"decl_id":{"krate":22,"index":21},"docs":" This is equivalent to calling [`start_send`].","sig":null,"attributes":[{"value":"/ This is equivalent to calling [`start_send`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":36217,"byte_end":36266,"line_start":199,"line_end":199,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":36271,"byte_end":36274,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ [`start_send`]: PollSender::start_send","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":36279,"byte_end":36321,"line_start":201,"line_end":201,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":36895,"byte_end":36905,"line_start":215,"line_end":215,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<PollSender<T> as futures_sink::Sink>::poll_close","value":"fn poll_close(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":22,"index":17},"children":[],"decl_id":{"krate":22,"index":23},"docs":" This method will first flush the `PollSender`, and then close it by\n calling [`close_this_sender`].","sig":null,"attributes":[{"value":"/ This method will first flush the `PollSender`, and then close it by","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":36458,"byte_end":36529,"line_start":206,"line_end":206,"column_start":5,"column_end":76}},{"value":"/ calling [`close_this_sender`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":36534,"byte_end":36568,"line_start":207,"line_end":207,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":36573,"byte_end":36576,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ If a send fails while flushing because the [`Receiver`] has gone away,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":36581,"byte_end":36655,"line_start":209,"line_end":209,"column_start":5,"column_end":79}},{"value":"/ then this function returns an error. The channel is still successfully","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":36660,"byte_end":36734,"line_start":210,"line_end":210,"column_start":5,"column_end":79}},{"value":"/ closed in this situation.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":36739,"byte_end":36768,"line_start":211,"line_end":211,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":36773,"byte_end":36776,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ [`close_this_sender`]: PollSender::close_this_sender","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":36781,"byte_end":36837,"line_start":213,"line_end":213,"column_start":5,"column_end":61}},{"value":"/ [`Receiver`]: tokio::sync::mpsc::Receiver","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":36842,"byte_end":36887,"line_start":214,"line_end":214,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":215},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":37491,"byte_end":37504,"line_start":13,"line_end":13,"column_start":12,"column_end":25},"name":"PollSemaphore","qualname":"::sync::poll_semaphore::PollSemaphore","value":"PollSemaphore {  }","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":217}],"decl_id":null,"docs":" A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","sig":null,"attributes":[{"value":"/ A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":37360,"byte_end":37433,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":37434,"byte_end":37437,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Semaphore`]: tokio::sync::Semaphore","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":37438,"byte_end":37479,"line_start":12,"line_end":12,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":37698,"byte_end":37701,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSemaphore>::new","value":"fn new(Arc<Semaphore>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PollSemaphore`.\n","sig":null,"attributes":[{"value":"/ Create a new `PollSemaphore`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":37653,"byte_end":37686,"line_start":19,"line_end":19,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":37865,"byte_end":37870,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"name":"close","qualname":"<PollSemaphore>::close","value":"fn close(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the semaphore.\n","sig":null,"attributes":[{"value":"/ Closes the semaphore.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":37828,"byte_end":37853,"line_start":27,"line_end":27,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":37976,"byte_end":37987,"line_start":33,"line_end":33,"column_start":12,"column_end":23},"name":"clone_inner","qualname":"<PollSemaphore>::clone_inner","value":"fn clone_inner(&Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Obtain a clone of the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Obtain a clone of the inner semaphore.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":37922,"byte_end":37964,"line_start":32,"line_end":32,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":38102,"byte_end":38112,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollSemaphore>::into_inner","value":"fn into_inner(Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Get back the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Get back the inner semaphore.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":38057,"byte_end":38090,"line_start":37,"line_end":37,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":38846,"byte_end":38858,"line_start":55,"line_end":55,"column_start":12,"column_end":24},"name":"poll_acquire","qualname":"<PollSemaphore>::poll_acquire","value":"fn poll_acquire(&mut Self, &mut Context) -> Poll<Option<OwnedSemaphorePermit>>","parent":null,"children":[],"decl_id":null,"docs":" Poll to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Poll to acquire a permit from the semaphore.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":38173,"byte_end":38221,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":38226,"byte_end":38229,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This can return the following values:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":38234,"byte_end":38275,"line_start":44,"line_end":44,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":38280,"byte_end":38283,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/  - `Poll::Pending` if a permit is not currently available.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":38288,"byte_end":38350,"line_start":46,"line_end":46,"column_start":5,"column_end":67}},{"value":"/  - `Poll::Ready(Some(permit))` if a permit was acquired.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":38355,"byte_end":38415,"line_start":47,"line_end":47,"column_start":5,"column_end":65}},{"value":"/  - `Poll::Ready(None)` if the semaphore has been closed.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":38420,"byte_end":38480,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":38485,"byte_end":38488,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":38493,"byte_end":38568,"line_start":50,"line_end":50,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when a permit becomes available, or when the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":38573,"byte_end":38641,"line_start":51,"line_end":51,"column_start":5,"column_end":73}},{"value":"/ semaphore is closed. Note that on multiple calls to `poll_acquire`, only","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":38646,"byte_end":38722,"line_start":52,"line_end":52,"column_start":5,"column_end":81}},{"value":"/ the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":38727,"byte_end":38795,"line_start":53,"line_end":53,"column_start":5,"column_end":73}},{"value":"/ scheduled to receive a wakeup.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":38800,"byte_end":38834,"line_start":54,"line_end":54,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":40286,"byte_end":40303,"line_start":92,"line_end":92,"column_start":12,"column_end":29},"name":"available_permits","qualname":"<PollSemaphore>::available_permits","value":"fn available_permits(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of available permits.","sig":null,"attributes":[{"value":"/ Returns the current number of available permits.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":40002,"byte_end":40054,"line_start":86,"line_end":86,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":40059,"byte_end":40062,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::available_permits`] method on the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":40067,"byte_end":40143,"line_start":88,"line_end":88,"column_start":5,"column_end":81}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":40148,"byte_end":40182,"line_start":89,"line_end":89,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":40187,"byte_end":40190,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::available_permits`]: tokio::sync::Semaphore::available_permits","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":40195,"byte_end":40274,"line_start":91,"line_end":91,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":40763,"byte_end":40774,"line_start":105,"line_end":105,"column_start":12,"column_end":23},"name":"add_permits","qualname":"<PollSemaphore>::add_permits","value":"fn add_permits(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Adds `n` new permits to the semaphore.","sig":null,"attributes":[{"value":"/ Adds `n` new permits to the semaphore.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":40376,"byte_end":40418,"line_start":96,"line_end":96,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":40423,"byte_end":40426,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ The maximum number of permits is `usize::MAX >> 3`, and this function","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":40431,"byte_end":40504,"line_start":98,"line_end":98,"column_start":5,"column_end":78}},{"value":"/ will panic if the limit is exceeded.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":40509,"byte_end":40549,"line_start":99,"line_end":99,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":40554,"byte_end":40557,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::add_permits`] method on the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":40562,"byte_end":40632,"line_start":101,"line_end":101,"column_start":5,"column_end":75}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":40637,"byte_end":40671,"line_start":102,"line_end":102,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":40676,"byte_end":40679,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::add_permits`]: tokio::sync::Semaphore::add_permits","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":40684,"byte_end":40751,"line_start":104,"line_end":104,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":40920,"byte_end":40929,"line_start":113,"line_end":113,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<PollSemaphore as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context)\n-> Poll<Option<OwnedSemaphorePermit>>","parent":{"krate":21,"index":96},"children":[],"decl_id":{"krate":21,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":41108,"byte_end":41113,"line_start":119,"line_end":119,"column_start":8,"column_end":13},"name":"clone","qualname":"<PollSemaphore as std::clone::Clone>::clone","value":"fn clone(&Self) -> PollSemaphore","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":41239,"byte_end":41242,"line_start":125,"line_end":125,"column_start":8,"column_end":11},"name":"fmt","qualname":"<PollSemaphore as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":41464,"byte_end":41470,"line_start":133,"line_end":133,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<PollSemaphore as std::convert::AsRef>::as_ref","value":"fn as_ref(&Self) -> &Semaphore","parent":{"krate":2,"index":3076},"children":[],"decl_id":{"krate":2,"index":3078},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":272},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":41917,"byte_end":41934,"line_start":13,"line_end":13,"column_start":12,"column_end":29},"name":"ReusableBoxFuture","qualname":"::sync::reusable_box::ReusableBoxFuture","value":"ReusableBoxFuture {  }","parent":null,"children":[{"krate":0,"index":274}],"decl_id":null,"docs":" A reusable `Pin<Box<dyn Future<Output = T> + Send>>`.","sig":null,"attributes":[{"value":"/ A reusable `Pin<Box<dyn Future<Output = T> + Send>>`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":41717,"byte_end":41774,"line_start":9,"line_end":9,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":41775,"byte_end":41778,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This type lets you replace the future stored in the box without","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":41779,"byte_end":41846,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/ reallocating when the size and alignment permits this.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":41847,"byte_end":41905,"line_start":12,"line_end":12,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":42112,"byte_end":42115,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"new","qualname":"<ReusableBoxFuture<T>>::new","value":"fn new<F>(F) -> Self where F: Future<Output = T> + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ReusableBoxFuture<T>` containing the provided future.\n","sig":null,"attributes":[{"value":"/ Create a new `ReusableBoxFuture<T>` containing the provided future.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":42029,"byte_end":42100,"line_start":18,"line_end":18,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":42696,"byte_end":42699,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"set","qualname":"<ReusableBoxFuture<T>>::set","value":"fn set<F>(&mut Self, F) where F: Future<Output = T> + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":42481,"byte_end":42533,"line_start":33,"line_end":33,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":42538,"byte_end":42541,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This reallocates if and only if the layout of the provided future is","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":42546,"byte_end":42618,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ different from the layout of the currently stored future.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":42623,"byte_end":42684,"line_start":36,"line_end":36,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":43142,"byte_end":43149,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"try_set","qualname":"<ReusableBoxFuture<T>>::try_set","value":"fn try_set<F>(&mut Self, F) -> Result<(), F> where F: Future<Output = T> +\nSend + 'static","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":42901,"byte_end":42953,"line_start":46,"line_end":46,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":42958,"byte_end":42961,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ This function never reallocates, but returns an error if the provided","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":42966,"byte_end":43039,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ future has a different size or alignment from the currently stored","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":43044,"byte_end":43114,"line_start":49,"line_end":49,"column_start":5,"column_end":75}},{"value":"/ future.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":43119,"byte_end":43130,"line_start":50,"line_end":50,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":44989,"byte_end":44996,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"get_pin","qualname":"<ReusableBoxFuture<T>>::get_pin","value":"fn get_pin(&mut Self) -> Pin<&mut dyn Future<Output = T> + Send>","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned reference to the underlying future.\n","sig":null,"attributes":[{"value":"/ Get a pinned reference to the underlying future.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":44925,"byte_end":44977,"line_start":106,"line_end":106,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":45282,"byte_end":45286,"line_start":114,"line_end":114,"column_start":12,"column_end":16},"name":"poll","qualname":"<ReusableBoxFuture<T>>::poll","value":"fn poll(&mut Self, &mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Poll the future stored inside this box.\n","sig":null,"attributes":[{"value":"/ Poll the future stored inside this box.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":45227,"byte_end":45270,"line_start":113,"line_end":113,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":45493,"byte_end":45497,"line_start":123,"line_end":123,"column_start":8,"column_end":12},"name":"poll","qualname":"<ReusableBoxFuture<T> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<T>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":" Poll the future stored inside this box.\n","sig":null,"attributes":[{"value":"/ Poll the future stored inside this box.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":45442,"byte_end":45485,"line_start":122,"line_end":122,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":46120,"byte_end":46124,"line_start":140,"line_end":140,"column_start":8,"column_end":12},"name":"drop","qualname":"<ReusableBoxFuture<T> as std::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":2,"index":3422},"children":[],"decl_id":{"krate":2,"index":3423},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":303},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":46281,"byte_end":46284,"line_start":148,"line_end":148,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ReusableBoxFuture<T> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":307},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"either","qualname":"::either","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","parent":null,"children":[{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":312},{"krate":0,"index":315},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":322},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":329},{"krate":0,"index":332},{"krate":0,"index":335},{"krate":0,"index":338},{"krate":0,"index":341},{"krate":0,"index":1585},{"krate":0,"index":1594},{"krate":0,"index":1598},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":351},{"krate":0,"index":355},{"krate":0,"index":360},{"krate":0,"index":365},{"krate":0,"index":371}],"decl_id":null,"docs":" Module defining an Either type.\n","sig":null,"attributes":[{"value":"/ Module defining an Either type.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":46399,"byte_end":46434,"line_start":1,"line_end":1,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1588},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":48381,"byte_end":48385,"line_start":65,"line_end":65,"column_start":5,"column_end":9},"name":"Left","qualname":"::either::Either::Left","value":"Either::Left(L)","parent":{"krate":0,"index":1585},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1590},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":48386,"byte_end":48387,"line_start":65,"line_end":65,"column_start":10,"column_end":11},"name":"0","qualname":"::either::Either::Left::0","value":"L","parent":{"krate":0,"index":1588},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1591},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":48394,"byte_end":48399,"line_start":66,"line_end":66,"column_start":5,"column_end":10},"name":"Right","qualname":"::either::Either::Right","value":"Either::Right(R)","parent":{"krate":0,"index":1585},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1593},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":48400,"byte_end":48401,"line_start":66,"line_end":66,"column_start":11,"column_end":12},"name":"0","qualname":"::either::Either::Right::0","value":"R","parent":{"krate":0,"index":1591},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1585},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":48362,"byte_end":48368,"line_start":64,"line_end":64,"column_start":10,"column_end":16},"name":"Either","qualname":"::either::Either","value":"enum Either<L, R> { Left(L), Right(R), }","parent":null,"children":[{"krate":0,"index":1588},{"krate":0,"index":1591}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single type.","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single type.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":46611,"byte_end":46717,"line_start":10,"line_end":10,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":46718,"byte_end":46721,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This type implements common asynchronous traits such as [`Future`] and those in Tokio.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":46722,"byte_end":46812,"line_start":12,"line_end":12,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":46813,"byte_end":46816,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Future`]: std::future::Future","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":46817,"byte_end":46852,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":46853,"byte_end":46856,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":46857,"byte_end":46870,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":46871,"byte_end":46874,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The following code will not work:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":46875,"byte_end":46912,"line_start":18,"line_end":18,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":46913,"byte_end":46916,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```compile_fail","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":46917,"byte_end":46936,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":46937,"byte_end":46979,"line_start":21,"line_end":21,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":46980,"byte_end":47030,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47031,"byte_end":47082,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47083,"byte_end":47101,"line_start":24,"line_end":24,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47102,"byte_end":47123,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47124,"byte_end":47166,"line_start":26,"line_end":26,"column_start":1,"column_end":43}},{"value":"/         some_async_function()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47167,"byte_end":47200,"line_start":27,"line_end":27,"column_start":1,"column_end":34}},{"value":"/     } else {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47201,"byte_end":47217,"line_start":28,"line_end":28,"column_start":1,"column_end":17}},{"value":"/         other_async_function() // <- Will print: \"`if` and `else` have incompatible types\"","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47218,"byte_end":47312,"line_start":29,"line_end":29,"column_start":1,"column_end":95}},{"value":"/     };","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47313,"byte_end":47323,"line_start":30,"line_end":30,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47324,"byte_end":47327,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     println!(\"Result is {}\", result.await);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47328,"byte_end":47375,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47376,"byte_end":47381,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47382,"byte_end":47389,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47390,"byte_end":47393,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47594,"byte_end":47597,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ When the output type is the same, we can wrap each future in `Either` to avoid the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47598,"byte_end":47684,"line_start":40,"line_end":40,"column_start":1,"column_end":87}},{"value":"/ issue:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47685,"byte_end":47695,"line_start":41,"line_end":41,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47696,"byte_end":47699,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47700,"byte_end":47707,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::either::Either;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47708,"byte_end":47743,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47744,"byte_end":47786,"line_start":45,"line_end":45,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47787,"byte_end":47837,"line_start":46,"line_end":46,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47838,"byte_end":47889,"line_start":47,"line_end":47,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47890,"byte_end":47893,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47894,"byte_end":47912,"line_start":49,"line_end":49,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47913,"byte_end":47934,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47935,"byte_end":47977,"line_start":51,"line_end":51,"column_start":1,"column_end":43}},{"value":"/         Either::Left(some_async_function())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":47978,"byte_end":48025,"line_start":52,"line_end":52,"column_start":1,"column_end":48}},{"value":"/     } else {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":48026,"byte_end":48042,"line_start":53,"line_end":53,"column_start":1,"column_end":17}},{"value":"/         Either::Right(other_async_function())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":48043,"byte_end":48092,"line_start":54,"line_end":54,"column_start":1,"column_end":50}},{"value":"/     };","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":48093,"byte_end":48103,"line_start":55,"line_end":55,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":48104,"byte_end":48107,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/     let value = result.await;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":48108,"byte_end":48141,"line_start":57,"line_end":57,"column_start":1,"column_end":34}},{"value":"/     println!(\"Result is {}\", value);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":48142,"byte_end":48182,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/     # assert_eq!(value, 10);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":48183,"byte_end":48215,"line_start":59,"line_end":59,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":48216,"byte_end":48221,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":48222,"byte_end":48229,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":48230,"byte_end":48252,"line_start":62,"line_end":62,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":49109,"byte_end":49113,"line_start":90,"line_end":90,"column_start":8,"column_end":12},"name":"poll","qualname":"<Either<L, R> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":354},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":49318,"byte_end":49327,"line_start":100,"line_end":100,"column_start":8,"column_end":17},"name":"poll_read","qualname":"<Either<L, R> as tokio::io::AsyncRead>::poll_read","value":"fn poll_read(Pin<&mut Self>, &mut Context, &mut ReadBuf) -> Poll<Result<()>>","parent":{"krate":23,"index":227},"children":[],"decl_id":{"krate":23,"index":228},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":49603,"byte_end":49616,"line_start":114,"line_end":114,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"<Either<L, R> as tokio::io::AsyncBufRead>::poll_fill_buf","value":"fn poll_fill_buf(Pin<&mut Self>, &mut Context) -> Poll<Result<&[u8]>>","parent":{"krate":23,"index":185},"children":[],"decl_id":{"krate":23,"index":186},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":49747,"byte_end":49754,"line_start":118,"line_end":118,"column_start":8,"column_end":15},"name":"consume","qualname":"<Either<L, R> as tokio::io::AsyncBufRead>::consume","value":"fn consume(Pin<&mut Self>, usize)","parent":{"krate":23,"index":185},"children":[],"decl_id":{"krate":23,"index":187},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":49931,"byte_end":49941,"line_start":128,"line_end":128,"column_start":8,"column_end":18},"name":"start_seek","qualname":"<Either<L, R> as tokio::io::AsyncSeek>::start_seek","value":"fn start_seek(Pin<&mut Self>, SeekFrom) -> Result<()>","parent":{"krate":23,"index":266},"children":[],"decl_id":{"krate":23,"index":267},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":50064,"byte_end":50077,"line_start":132,"line_end":132,"column_start":8,"column_end":21},"name":"poll_complete","qualname":"<Either<L, R> as tokio::io::AsyncSeek>::poll_complete","value":"fn poll_complete(Pin<&mut Self>, &mut Context) -> Poll<Result<u64>>","parent":{"krate":23,"index":266},"children":[],"decl_id":{"krate":23,"index":268},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":50293,"byte_end":50303,"line_start":142,"line_end":142,"column_start":8,"column_end":18},"name":"poll_write","qualname":"<Either<L, R> as tokio::io::AsyncWrite>::poll_write","value":"fn poll_write(Pin<&mut Self>, &mut Context, &[u8]) -> Poll<Result<usize>>","parent":{"krate":23,"index":306},"children":[],"decl_id":{"krate":23,"index":307},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":50448,"byte_end":50458,"line_start":146,"line_end":146,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<Either<L, R> as tokio::io::AsyncWrite>::poll_flush","value":"fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<tokio::io::Result<()>>","parent":{"krate":23,"index":306},"children":[],"decl_id":{"krate":23,"index":308},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":50594,"byte_end":50607,"line_start":150,"line_end":150,"column_start":8,"column_end":21},"name":"poll_shutdown","qualname":"<Either<L, R> as tokio::io::AsyncWrite>::poll_shutdown","value":"fn poll_shutdown(Pin<&mut Self>, &mut Context) -> Poll<tokio::io::Result<()>>","parent":{"krate":23,"index":306},"children":[],"decl_id":{"krate":23,"index":309},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":375},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":50929,"byte_end":50938,"line_start":162,"line_end":162,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Either<L, R> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":21,"index":96},"children":[],"decl_id":{"krate":21,"index":98},"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16238506,"byte_end":16238516,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16238667,"byte_end":16238677,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16239004,"byte_end":16239014,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":453},{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_impl.rs","byte_start":16249244,"byte_end":16249253,"line_start":48,"line_end":48,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":556}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_impl.rs","byte_start":16249485,"byte_end":16249495,"line_start":59,"line_end":59,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":558}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_impl.rs","byte_start":16249646,"byte_end":16249655,"line_start":67,"line_end":67,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":560}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_impl.rs","byte_start":16250010,"byte_end":16250020,"line_start":83,"line_end":83,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":562}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_impl.rs","byte_start":16250266,"byte_end":16250274,"line_start":94,"line_end":94,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":564}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_impl.rs","byte_start":16250371,"byte_end":16250379,"line_start":99,"line_end":99,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":566}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_impl.rs","byte_start":16250490,"byte_end":16250498,"line_start":104,"line_end":104,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":568}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_impl.rs","byte_start":16250598,"byte_end":16250606,"line_start":109,"line_end":109,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":570}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_impl.rs","byte_start":16250716,"byte_end":16250726,"line_start":114,"line_end":114,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":575},{"krate":0,"index":576}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_impl.rs","byte_start":16259013,"byte_end":16259023,"line_start":249,"line_end":249,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":595}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16261859,"byte_end":16261865,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":667},{"krate":0,"index":668}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16265721,"byte_end":16265727,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":683}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16271042,"byte_end":16271048,"line_start":254,"line_end":254,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":687},{"krate":0,"index":688}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16271364,"byte_end":16271370,"line_start":267,"line_end":267,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":697}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16272085,"byte_end":16272091,"line_start":292,"line_end":292,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":701}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16273131,"byte_end":16273142,"line_start":330,"line_end":330,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":705}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16274069,"byte_end":16274079,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":756},{"krate":0,"index":757}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16275008,"byte_end":16275018,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":767},{"krate":0,"index":768}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16277115,"byte_end":16277125,"line_start":123,"line_end":123,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":772},{"krate":0,"index":773}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16277438,"byte_end":16277448,"line_start":136,"line_end":136,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":778},{"krate":0,"index":779},{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16278174,"byte_end":16278184,"line_start":159,"line_end":159,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":786}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16279163,"byte_end":16279174,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":835}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16279530,"byte_end":16279541,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":841},{"krate":0,"index":842},{"krate":0,"index":843},{"krate":0,"index":844},{"krate":0,"index":845},{"krate":0,"index":846}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16281650,"byte_end":16281661,"line_start":103,"line_end":103,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":854},{"krate":0,"index":855}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16282425,"byte_end":16282436,"line_start":129,"line_end":129,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":859},{"krate":0,"index":860}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16282677,"byte_end":16282688,"line_start":140,"line_end":140,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":864}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16297703,"byte_end":16297723,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":930}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16301057,"byte_end":16301077,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":932},{"krate":0,"index":933},{"krate":0,"index":934}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16301963,"byte_end":16301983,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":936},{"krate":0,"index":937}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16303324,"byte_end":16303344,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":940}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16303437,"byte_end":16303444,"line_start":632,"line_end":632,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":942},{"krate":0,"index":943},{"krate":0,"index":944},{"krate":0,"index":945},{"krate":0,"index":946},{"krate":0,"index":947},{"krate":0,"index":948},{"krate":0,"index":949},{"krate":0,"index":950},{"krate":0,"index":951},{"krate":0,"index":952},{"krate":0,"index":954},{"krate":0,"index":956},{"krate":0,"index":958},{"krate":0,"index":959}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16313043,"byte_end":16313050,"line_start":973,"line_end":973,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":961}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16313176,"byte_end":16313201,"line_start":981,"line_end":981,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":963}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16313359,"byte_end":16313384,"line_start":987,"line_end":987,"column_start":23,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":965}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16313519,"byte_end":16313544,"line_start":993,"line_end":993,"column_start":19,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16314613,"byte_end":16314623,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1010}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16317165,"byte_end":16317175,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1015},{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":1019}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16320551,"byte_end":16320561,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1022},{"krate":0,"index":1023}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16320884,"byte_end":16320894,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1025}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16321201,"byte_end":16321216,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1027}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16321498,"byte_end":16321513,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1029}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16321630,"byte_end":16321645,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16323971,"byte_end":16323988,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1077},{"krate":0,"index":1078},{"krate":0,"index":1079}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16326637,"byte_end":16326654,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1081},{"krate":0,"index":1082},{"krate":0,"index":1083},{"krate":0,"index":1086}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16329946,"byte_end":16329963,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1089},{"krate":0,"index":1090}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16330327,"byte_end":16330344,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1092}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16330762,"byte_end":16330784,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1094}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16331113,"byte_end":16331135,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1096}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16331266,"byte_end":16331288,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/wheel/level.rs","byte_start":16342706,"byte_end":16342711,"line_start":40,"line_end":40,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1266},{"krate":0,"index":1268},{"krate":0,"index":1269},{"krate":0,"index":1270},{"krate":0,"index":1271},{"krate":0,"index":1272}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/wheel/level.rs","byte_start":16347462,"byte_end":16347467,"line_start":211,"line_end":211,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1275}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/wheel/mod.rs","byte_start":16333937,"byte_end":16333942,"line_start":54,"line_end":54,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1312},{"krate":0,"index":1313},{"krate":0,"index":1314},{"krate":0,"index":1315},{"krate":0,"index":1316},{"krate":0,"index":1318},{"krate":0,"index":1320},{"krate":0,"index":1321},{"krate":0,"index":1322},{"krate":0,"index":1323},{"krate":0,"index":1324},{"krate":0,"index":1325}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16355928,"byte_end":16355938,"line_start":213,"line_end":213,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1383},{"krate":0,"index":1384},{"krate":0,"index":1385},{"krate":0,"index":1386},{"krate":0,"index":1390},{"krate":0,"index":1391},{"krate":0,"index":1399},{"krate":0,"index":1403},{"krate":0,"index":1404},{"krate":0,"index":1405},{"krate":0,"index":1407},{"krate":0,"index":1408},{"krate":0,"index":1409},{"krate":0,"index":1410},{"krate":0,"index":1411},{"krate":0,"index":1412},{"krate":0,"index":1413},{"krate":0,"index":1418}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16374876,"byte_end":16374886,"line_start":800,"line_end":800,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16374914,"byte_end":16374924,"line_start":802,"line_end":802,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1423}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16375034,"byte_end":16375044,"line_start":808,"line_end":808,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1426},{"krate":0,"index":1427}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16375426,"byte_end":16375431,"line_start":818,"line_end":818,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1430},{"krate":0,"index":1431},{"krate":0,"index":1432},{"krate":0,"index":1433},{"krate":0,"index":1434},{"krate":0,"index":1435},{"krate":0,"index":1436},{"krate":0,"index":1437}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16377558,"byte_end":16377563,"line_start":900,"line_end":900,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1440}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16377693,"byte_end":16377696,"line_start":909,"line_end":909,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":1442}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16377783,"byte_end":16377790,"line_start":915,"line_end":915,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1445},{"krate":0,"index":1446},{"krate":0,"index":1447},{"krate":0,"index":1448},{"krate":0,"index":1449}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token/guard.rs","byte_start":14399,"byte_end":14408,"line_start":10,"line_end":10,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token/guard.rs","byte_start":14768,"byte_end":14777,"line_start":21,"line_end":21,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token/tree_node.rs","byte_start":17227,"byte_end":17235,"line_start":50,"line_end":50,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":39},{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":9209,"byte_end":9226,"line_start":71,"line_end":71,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":9451,"byte_end":9468,"line_start":79,"line_end":79,"column_start":16,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":9659,"byte_end":9676,"line_start":88,"line_end":88,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":9788,"byte_end":9805,"line_start":94,"line_end":94,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":9895,"byte_end":9912,"line_start":100,"line_end":100,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":13150,"byte_end":13175,"line_start":197,"line_end":197,"column_start":31,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":13347,"byte_end":13372,"line_start":203,"line_end":203,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":103},{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":30332,"byte_end":30342,"line_start":37,"line_end":37,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":35203,"byte_end":35213,"line_start":170,"line_end":170,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":35617,"byte_end":35627,"line_start":182,"line_end":182,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":37633,"byte_end":37646,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":40858,"byte_end":40871,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":41085,"byte_end":41098,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":41216,"byte_end":41229,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":41441,"byte_end":41454,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":42002,"byte_end":42019,"line_start":17,"line_end":17,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":277},{"krate":0,"index":279},{"krate":0,"index":281},{"krate":0,"index":283},{"krate":0,"index":286},{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":45393,"byte_end":45410,"line_start":119,"line_end":119,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":290},{"krate":0,"index":291}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":45700,"byte_end":45717,"line_start":129,"line_end":129,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":45935,"byte_end":45952,"line_start":134,"line_end":134,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":46048,"byte_end":46065,"line_start":137,"line_end":137,"column_start":19,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":46090,"byte_end":46107,"line_start":139,"line_end":139,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":46251,"byte_end":46268,"line_start":147,"line_end":147,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":49005,"byte_end":49011,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":349},{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":49254,"byte_end":49260,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":49533,"byte_end":49539,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":358},{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":49867,"byte_end":49873,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":363},{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":50227,"byte_end":50233,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":50785,"byte_end":50791,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":374},{"krate":0,"index":375}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","byte_start":707,"byte_end":712,"line_start":29,"line_end":29,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":425}},{"kind":"Mod","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/mod.rs","byte_start":16236918,"byte_end":16236934,"line_start":283,"line_end":283,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":868}},{"kind":"Mod","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","byte_start":872,"byte_end":876,"line_start":49,"line_end":49,"column_start":13,"column_end":17},"ref_id":{"krate":0,"index":1245}},{"kind":"Mod","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/mod.rs","byte_start":16331688,"byte_end":16331699,"line_start":15,"line_end":15,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":1328}},{"kind":"Mod","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","byte_start":889,"byte_end":893,"line_start":52,"line_end":52,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":14}},{"kind":"Mod","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/lib.rs","byte_start":904,"byte_end":910,"line_start":54,"line_end":54,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":307}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16238506,"byte_end":16238516,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1105},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16238667,"byte_end":16238677,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1105},"to":{"krate":0,"index":475}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/bytes_codec.rs","byte_start":16239004,"byte_end":16239014,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1105},"to":{"krate":0,"index":492}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_impl.rs","byte_start":16249244,"byte_end":16249253,"line_start":48,"line_end":48,"column_start":18,"column_end":27},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1129},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_impl.rs","byte_start":16249485,"byte_end":16249495,"line_start":59,"line_end":59,"column_start":18,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":553},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_impl.rs","byte_start":16249646,"byte_end":16249655,"line_start":67,"line_end":67,"column_start":25,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1129},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_impl.rs","byte_start":16250010,"byte_end":16250020,"line_start":83,"line_end":83,"column_start":25,"column_end":35},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":553},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_impl.rs","byte_start":16250266,"byte_end":16250274,"line_start":94,"line_end":94,"column_start":28,"column_end":36},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1136},"to":{"krate":2,"index":2776}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_impl.rs","byte_start":16250371,"byte_end":16250379,"line_start":99,"line_end":99,"column_start":31,"column_end":39},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1136},"to":{"krate":2,"index":2779}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_impl.rs","byte_start":16250490,"byte_end":16250498,"line_start":104,"line_end":104,"column_start":29,"column_end":37},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1136},"to":{"krate":2,"index":2776}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_impl.rs","byte_start":16250598,"byte_end":16250606,"line_start":109,"line_end":109,"column_start":32,"column_end":40},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1136},"to":{"krate":2,"index":2779}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_impl.rs","byte_start":16250716,"byte_end":16250726,"line_start":114,"line_end":114,"column_start":26,"column_end":36},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1725},"to":{"krate":21,"index":96}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_impl.rs","byte_start":16259013,"byte_end":16259023,"line_start":249,"line_end":249,"column_start":30,"column_end":40},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1725},"to":{"krate":22,"index":17}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16261859,"byte_end":16261865,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1684},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16265721,"byte_end":16265727,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1684},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16271042,"byte_end":16271048,"line_start":254,"line_end":254,"column_start":23,"column_end":29},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1684},"to":{"krate":21,"index":96}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16271364,"byte_end":16271370,"line_start":267,"line_end":267,"column_start":27,"column_end":33},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1684},"to":{"krate":22,"index":17}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16272085,"byte_end":16272091,"line_start":292,"line_end":292,"column_start":27,"column_end":33},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1684},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed.rs","byte_start":16273131,"byte_end":16273142,"line_start":330,"line_end":330,"column_start":12,"column_end":23},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1141},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16274069,"byte_end":16274079,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1643},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16275008,"byte_end":16275018,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1643},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16277115,"byte_end":16277125,"line_start":123,"line_end":123,"column_start":23,"column_end":33},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1643},"to":{"krate":21,"index":96}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16277438,"byte_end":16277448,"line_start":136,"line_end":136,"column_start":27,"column_end":37},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1643},"to":{"krate":22,"index":17}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_read.rs","byte_start":16278174,"byte_end":16278184,"line_start":159,"line_end":159,"column_start":27,"column_end":37},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1643},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16279163,"byte_end":16279174,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1602},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16279530,"byte_end":16279541,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1602},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16281650,"byte_end":16281661,"line_start":103,"line_end":103,"column_start":27,"column_end":38},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1602},"to":{"krate":22,"index":17}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16282425,"byte_end":16282436,"line_start":129,"line_end":129,"column_start":23,"column_end":34},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1602},"to":{"krate":21,"index":96}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/framed_write.rs","byte_start":16282677,"byte_end":16282688,"line_start":140,"line_end":140,"column_start":27,"column_end":38},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1602},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16297703,"byte_end":16297723,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1165},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16301057,"byte_end":16301077,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1165},"to":{"krate":0,"index":475}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16301963,"byte_end":16301983,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1165},"to":{"krate":0,"index":492}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16303324,"byte_end":16303344,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1165},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16303437,"byte_end":16303444,"line_start":632,"line_end":632,"column_start":6,"column_end":13},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1153},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16313043,"byte_end":16313050,"line_start":973,"line_end":973,"column_start":18,"column_end":25},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1153},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16313176,"byte_end":16313201,"line_start":981,"line_end":981,"column_start":21,"column_end":46},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":922},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16313359,"byte_end":16313384,"line_start":987,"line_end":987,"column_start":23,"column_end":48},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":922},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/length_delimited.rs","byte_start":16313519,"byte_end":16313544,"line_start":993,"line_end":993,"column_start":19,"column_end":44},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":922},"to":{"krate":1,"index":2569}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16314613,"byte_end":16314623,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1183},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16317165,"byte_end":16317175,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1183},"to":{"krate":0,"index":475}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16320551,"byte_end":16320561,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1183},"to":{"krate":0,"index":492}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16320884,"byte_end":16320894,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1183},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16321201,"byte_end":16321216,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1205},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16321498,"byte_end":16321513,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1205},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/lines_codec.rs","byte_start":16321630,"byte_end":16321645,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1205},"to":{"krate":1,"index":2569}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16323971,"byte_end":16323988,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1213},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16326637,"byte_end":16326654,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1213},"to":{"krate":0,"index":475}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16329946,"byte_end":16329963,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1213},"to":{"krate":0,"index":492}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16330327,"byte_end":16330344,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1213},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16330762,"byte_end":16330784,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1237},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16331113,"byte_end":16331135,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1237},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/codec/any_delimiter_codec.rs","byte_start":16331266,"byte_end":16331288,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1237},"to":{"krate":1,"index":2569}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/wheel/level.rs","byte_start":16342706,"byte_end":16342711,"line_start":40,"line_end":40,"column_start":16,"column_end":21},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1257},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/wheel/level.rs","byte_start":16347462,"byte_end":16347467,"line_start":211,"line_end":211,"column_start":24,"column_end":29},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1257},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/wheel/stack.rs","byte_start":16348577,"byte_end":16348584,"line_start":4,"line_end":4,"column_start":25,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":3157},"to":{"krate":0,"index":1290}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/wheel/mod.rs","byte_start":16333937,"byte_end":16333942,"line_start":54,"line_end":54,"column_start":9,"column_end":14},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1467},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16355928,"byte_end":16355938,"line_start":213,"line_end":213,"column_start":9,"column_end":19},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1482},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16374876,"byte_end":16374886,"line_start":800,"line_end":800,"column_start":19,"column_end":29},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1482},"to":{"krate":2,"index":3220}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16374914,"byte_end":16374924,"line_start":802,"line_end":802,"column_start":21,"column_end":31},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1482},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16375034,"byte_end":16375044,"line_start":808,"line_end":808,"column_start":34,"column_end":44},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1482},"to":{"krate":21,"index":96}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16375426,"byte_end":16375431,"line_start":818,"line_end":818,"column_start":26,"column_end":31},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1519},"to":{"krate":0,"index":1290}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16377558,"byte_end":16377563,"line_start":900,"line_end":900,"column_start":21,"column_end":26},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1519},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16377693,"byte_end":16377696,"line_start":909,"line_end":909,"column_start":6,"column_end":9},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1502},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/time/delay_queue.rs","byte_start":16377783,"byte_end":16377790,"line_start":915,"line_end":915,"column_start":9,"column_end":16},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1494},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token/guard.rs","byte_start":14399,"byte_end":14408,"line_start":10,"line_end":10,"column_start":6,"column_end":15},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1536},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token/guard.rs","byte_start":14768,"byte_end":14777,"line_start":21,"line_end":21,"column_start":15,"column_end":24},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1536},"to":{"krate":2,"index":3422}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token/tree_node.rs","byte_start":17227,"byte_end":17235,"line_start":50,"line_end":50,"column_start":6,"column_end":14},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":35},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":9209,"byte_end":9226,"line_start":71,"line_end":71,"column_start":27,"column_end":44},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":9451,"byte_end":9468,"line_start":79,"line_end":79,"column_start":16,"column_end":33},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":9659,"byte_end":9676,"line_start":88,"line_end":88,"column_start":15,"column_end":32},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":3422}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":9788,"byte_end":9805,"line_start":94,"line_end":94,"column_start":18,"column_end":35},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":9895,"byte_end":9912,"line_start":100,"line_end":100,"column_start":6,"column_end":23},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":81},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":13150,"byte_end":13175,"line_start":197,"line_end":197,"column_start":31,"column_end":56},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1540},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/cancellation_token.rs","byte_start":13347,"byte_end":13372,"line_start":203,"line_end":203,"column_start":21,"column_end":46},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1540},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":30332,"byte_end":30342,"line_start":37,"line_end":37,"column_start":25,"column_end":35},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1577},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":35203,"byte_end":35213,"line_start":170,"line_end":170,"column_start":19,"column_end":29},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1577},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/mpsc.rs","byte_start":35617,"byte_end":35627,"line_start":182,"line_end":182,"column_start":37,"column_end":47},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1577},"to":{"krate":22,"index":17}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":37633,"byte_end":37646,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":215},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":40858,"byte_end":40871,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":215},"to":{"krate":21,"index":96}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":41085,"byte_end":41098,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":215},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":41216,"byte_end":41229,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":215},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/poll_semaphore.rs","byte_start":41441,"byte_end":41454,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":215},"to":{"krate":2,"index":3076}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":42002,"byte_end":42019,"line_start":17,"line_end":17,"column_start":9,"column_end":26},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":272},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":45393,"byte_end":45410,"line_start":119,"line_end":119,"column_start":20,"column_end":37},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":272},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":45700,"byte_end":45717,"line_start":129,"line_end":129,"column_start":25,"column_end":42},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":272},"to":{"krate":2,"index":3179}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":45935,"byte_end":45952,"line_start":134,"line_end":134,"column_start":25,"column_end":42},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":272},"to":{"krate":2,"index":3191}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":46048,"byte_end":46065,"line_start":137,"line_end":137,"column_start":19,"column_end":36},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":272},"to":{"krate":2,"index":3220}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":46090,"byte_end":46107,"line_start":139,"line_end":139,"column_start":18,"column_end":35},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":272},"to":{"krate":2,"index":3422}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/sync/reusable_box.rs","byte_start":46251,"byte_end":46268,"line_start":147,"line_end":147,"column_start":24,"column_end":41},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":272},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":49005,"byte_end":49011,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1585},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":49254,"byte_end":49260,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1585},"to":{"krate":23,"index":227}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":49533,"byte_end":49539,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1585},"to":{"krate":23,"index":185}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":49867,"byte_end":49873,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1585},"to":{"krate":23,"index":266}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":50227,"byte_end":50233,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1585},"to":{"krate":23,"index":306}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.10/src/either.rs","byte_start":50785,"byte_end":50791,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1585},"to":{"krate":21,"index":96}}]}