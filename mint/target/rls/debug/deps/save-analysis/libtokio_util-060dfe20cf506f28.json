{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2","program":"/Users/air/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","tokio_util","--edition=2018","/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"codec\"","--cfg","feature=\"default\"","--cfg","feature=\"io\"","--cfg","feature=\"tracing\"","-C","metadata=060dfe20cf506f28","-C","extra-filename=-060dfe20cf506f28","--out-dir","/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps","-L","dependency=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps","--extern","bytes=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libbytes-9550d149b9a13b85.rmeta","--extern","futures_core=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libfutures_core-cf1d923ff497cf49.rmeta","--extern","futures_sink=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libfutures_sink-ad9998d9988d1cd8.rmeta","--extern","pin_project_lite=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libpin_project_lite-23dcf50183249132.rmeta","--extern","tokio=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libtokio-7b04bdd9b09c183b.rmeta","--extern","tracing=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libtracing-3e600055b7b49bc0.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/air/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libtokio_util-060dfe20cf506f28.rmeta"},"prelude":{"crate_id":{"name":"tokio_util","disambiguator":[953021879927046634,0]},"crate_root":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src","external_crates":[{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[4485569597606079733,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","num":2,"id":{"name":"core","disambiguator":[9994580471200982198,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13944031075627487246,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5133993387825513881,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[14116380118705386640,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6269322086078963025,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16152481959168563413,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7897074911849024150,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[7299104579826168146,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2669544452907545777,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[14288251452253695433,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[13943810077905921301,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[2237926517141734526,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[5541021343498733002,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[7188895526679788668,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[15555671723428220450,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[13375000548276363576,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[8920282723255285566,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[2397004371161247654,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","num":20,"id":{"name":"pin_project_lite","disambiguator":[16214617887468495849,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","num":21,"id":{"name":"futures_sink","disambiguator":[9497018450691456923,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","num":22,"id":{"name":"tokio","disambiguator":[2962388683323727077,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","num":23,"id":{"name":"parking_lot","disambiguator":[14966253135049045735,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","num":24,"id":{"name":"instant","disambiguator":[9036241402852550211,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","num":25,"id":{"name":"cfg_if","disambiguator":[13273704638852766021,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","num":26,"id":{"name":"lock_api","disambiguator":[10127763897422863905,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","num":27,"id":{"name":"scopeguard","disambiguator":[12042798599719570489,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","num":28,"id":{"name":"parking_lot_core","disambiguator":[8453746460189032009,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","num":29,"id":{"name":"smallvec","disambiguator":[5856184447480448040,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","num":30,"id":{"name":"libc","disambiguator":[2594694148884002105,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","num":31,"id":{"name":"mio","disambiguator":[7927576646673556845,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","num":32,"id":{"name":"log","disambiguator":[14675233967093799413,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","num":33,"id":{"name":"bytes","disambiguator":[17363037860664117862,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","num":34,"id":{"name":"once_cell","disambiguator":[3525325367007617747,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","num":35,"id":{"name":"tokio_macros","disambiguator":[11852345796106455181,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","num":36,"id":{"name":"memchr","disambiguator":[14228028058314693917,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","num":37,"id":{"name":"num_cpus","disambiguator":[5214853325863455532,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","num":38,"id":{"name":"signal_hook_registry","disambiguator":[15936637214480815235,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","num":39,"id":{"name":"futures_core","disambiguator":[17540173836599093021,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_impl.rs","num":40,"id":{"name":"tracing","disambiguator":[15319995027613217254,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_impl.rs","num":41,"id":{"name":"tracing_core","disambiguator":[11049412947218707615,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_impl.rs","num":42,"id":{"name":"tracing_attributes","disambiguator":[10017155599886563945,0]}}],"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":0,"byte_end":5353,"line_start":1,"line_end":201,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1146},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16239411,"byte_end":16239421,"line_start":262,"line_end":262,"column_start":28,"column_end":38},"alias_span":null,"name":"BytesCodec","value":"","parent":{"krate":0,"index":439}},{"kind":"Use","ref_id":{"krate":0,"index":492},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16239460,"byte_end":16239467,"line_start":265,"line_end":265,"column_start":24,"column_end":31},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":439}},{"kind":"Use","ref_id":{"krate":0,"index":509},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16239506,"byte_end":16239513,"line_start":268,"line_end":268,"column_start":24,"column_end":31},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":439}},{"kind":"Use","ref_id":{"krate":0,"index":1704},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16239675,"byte_end":16239681,"line_start":275,"line_end":275,"column_start":24,"column_end":30},"alias_span":null,"name":"Framed","value":"","parent":{"krate":0,"index":439}},{"kind":"Use","ref_id":{"krate":0,"index":1182},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16239683,"byte_end":16239694,"line_start":275,"line_end":275,"column_start":32,"column_end":43},"alias_span":null,"name":"FramedParts","value":"","parent":{"krate":0,"index":439}},{"kind":"Use","ref_id":{"krate":0,"index":1663},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16239742,"byte_end":16239752,"line_start":278,"line_end":278,"column_start":28,"column_end":38},"alias_span":null,"name":"FramedRead","value":"","parent":{"krate":0,"index":439}},{"kind":"Use","ref_id":{"krate":0,"index":1622},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16239801,"byte_end":16239812,"line_start":281,"line_end":281,"column_start":29,"column_end":40},"alias_span":null,"name":"FramedWrite","value":"","parent":{"krate":0,"index":439}},{"kind":"Use","ref_id":{"krate":0,"index":1206},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16239874,"byte_end":16239894,"line_start":284,"line_end":284,"column_start":34,"column_end":54},"alias_span":null,"name":"LengthDelimitedCodec","value":"","parent":{"krate":0,"index":439}},{"kind":"Use","ref_id":{"krate":0,"index":954},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16239896,"byte_end":16239921,"line_start":284,"line_end":284,"column_start":56,"column_end":81},"alias_span":null,"name":"LengthDelimitedCodecError","value":"","parent":{"krate":0,"index":439}},{"kind":"Use","ref_id":{"krate":0,"index":1224},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16239970,"byte_end":16239980,"line_start":287,"line_end":287,"column_start":29,"column_end":39},"alias_span":null,"name":"LinesCodec","value":"","parent":{"krate":0,"index":439}},{"kind":"Use","ref_id":{"krate":0,"index":1246},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16239982,"byte_end":16239997,"line_start":287,"line_end":287,"column_start":41,"column_end":56},"alias_span":null,"name":"LinesCodecError","value":"","parent":{"krate":0,"index":439}},{"kind":"Use","ref_id":{"krate":0,"index":1254},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16240062,"byte_end":16240079,"line_start":290,"line_end":290,"column_start":37,"column_end":54},"alias_span":null,"name":"AnyDelimiterCodec","value":"","parent":{"krate":0,"index":439}},{"kind":"Use","ref_id":{"krate":0,"index":1278},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16240081,"byte_end":16240103,"line_start":290,"line_end":290,"column_start":56,"column_end":78},"alias_span":null,"name":"AnyDelimiterCodecError","value":"","parent":{"krate":0,"index":439}},{"kind":"Use","ref_id":{"krate":0,"index":1310},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/mod.rs","byte_start":16339301,"byte_end":16339309,"line_start":21,"line_end":21,"column_start":25,"column_end":33},"alias_span":null,"name":"read_buf","value":"","parent":{"krate":0,"index":1286}},{"kind":"Use","ref_id":{"krate":0,"index":1578},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/mod.rs","byte_start":16339340,"byte_end":16339352,"line_start":22,"line_end":22,"column_start":30,"column_end":42},"alias_span":null,"name":"ReaderStream","value":"","parent":{"krate":0,"index":1286}},{"kind":"Use","ref_id":{"krate":0,"index":1529},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/mod.rs","byte_start":16339383,"byte_end":16339395,"line_start":23,"line_end":23,"column_start":30,"column_end":42},"alias_span":null,"name":"StreamReader","value":"","parent":{"krate":0,"index":1286}},{"kind":"Use","ref_id":{"krate":0,"index":430},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/mod.rs","byte_start":16339419,"byte_end":16339432,"line_start":24,"line_end":24,"column_start":23,"column_end":36},"alias_span":null,"name":"poll_read_buf","value":"","parent":{"krate":0,"index":1286}},{"kind":"Use","ref_id":{"krate":0,"index":433},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/mod.rs","byte_start":16339434,"byte_end":16339448,"line_start":24,"line_end":24,"column_start":38,"column_end":52},"alias_span":null,"name":"poll_write_buf","value":"","parent":{"krate":0,"index":1286}},{"kind":"Use","ref_id":{"krate":0,"index":1441},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mod.rs","byte_start":6945,"byte_end":6954,"line_start":4,"line_end":4,"column_start":37,"column_end":46},"alias_span":null,"name":"DropGuard","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":81},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mod.rs","byte_start":6956,"byte_end":6973,"line_start":4,"line_end":4,"column_start":48,"column_end":65},"alias_span":null,"name":"CancellationToken","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1445},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mod.rs","byte_start":6975,"byte_end":7000,"line_start":4,"line_end":4,"column_start":67,"column_end":92},"alias_span":null,"name":"WaitForCancellationFuture","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1482},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mod.rs","byte_start":7029,"byte_end":7042,"line_start":7,"line_end":7,"column_start":16,"column_end":29},"alias_span":null,"name":"PollSendError","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1504},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mod.rs","byte_start":7044,"byte_end":7054,"line_start":7,"line_end":7,"column_start":31,"column_end":41},"alias_span":null,"name":"PollSender","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":226},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mod.rs","byte_start":7102,"byte_end":7115,"line_start":10,"line_end":10,"column_start":25,"column_end":38},"alias_span":null,"name":"PollSemaphore","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":283},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mod.rs","byte_start":7158,"byte_end":7175,"line_start":13,"line_end":13,"column_start":23,"column_end":40},"alias_span":null,"name":"ReusableBoxFuture","value":"","parent":{"krate":0,"index":14}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":0,"byte_end":5353,"line_start":1,"line_end":201,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":10},{"krate":0,"index":439},{"krate":0,"index":1286},{"krate":0,"index":14},{"krate":0,"index":320},{"krate":0,"index":389}],"decl_id":null,"docs":" Utilities for working with Tokio.","sig":null,"attributes":[{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":0,"byte_end":40,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\nunreachable_pub)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":41,"byte_end":147,"line_start":2,"line_end":7,"column_start":1,"column_end":3}},{"value":"/ Utilities for working with Tokio.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":305,"byte_end":342,"line_start":14,"line_end":14,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":343,"byte_end":346,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This crate is not versioned in lockstep with the core","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":347,"byte_end":404,"line_start":16,"line_end":16,"column_start":1,"column_end":58}},{"value":"/ [`tokio`] crate. However, `tokio-util` _will_ respect Rust's","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":405,"byte_end":469,"line_start":17,"line_end":17,"column_start":1,"column_end":65}},{"value":"/ semantic versioning policy, especially with regard to breaking changes.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":470,"byte_end":545,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":546,"byte_end":549,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`tokio`]: https://docs.rs/tokio","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":550,"byte_end":586,"line_start":20,"line_end":20,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":439},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codec","qualname":"::codec","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","parent":null,"children":[{"krate":0,"index":440},{"krate":0,"index":472},{"krate":0,"index":475},{"krate":0,"index":499},{"krate":0,"index":502},{"krate":0,"index":513},{"krate":0,"index":516},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":617},{"krate":0,"index":620},{"krate":0,"index":623},{"krate":0,"index":626},{"krate":0,"index":728},{"krate":0,"index":729},{"krate":0,"index":732},{"krate":0,"index":735},{"krate":0,"index":812},{"krate":0,"index":815},{"krate":0,"index":894},{"krate":0,"index":897},{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1012},{"krate":0,"index":1015},{"krate":0,"index":1072},{"krate":0,"index":1073},{"krate":0,"index":1076},{"krate":0,"index":1079},{"krate":0,"index":1139},{"krate":0,"index":1140},{"krate":0,"index":1143}],"decl_id":null,"docs":" Adaptors from AsyncRead/AsyncWrite to Stream/Sink","sig":null,"attributes":[{"value":"cfg(feature = \"codec\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/cfg.rs","byte_start":5429,"byte_end":5454,"line_start":4,"line_end":4,"column_start":13,"column_end":38}},{"value":"/ Adaptors from AsyncRead/AsyncWrite to Stream/Sink","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16229139,"byte_end":16229192,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16229193,"byte_end":16229196,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16229197,"byte_end":16229272,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\".","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16229273,"byte_end":16229338,"line_start":4,"line_end":4,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16229339,"byte_end":16229342,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module contains adapters to go from streams of bytes, [`AsyncRead`] and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16229343,"byte_end":16229423,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ [`AsyncWrite`], to framed streams implementing [`Sink`] and [`Stream`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16229424,"byte_end":16229499,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ Framed streams are also known as transports.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16229500,"byte_end":16229548,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16229549,"byte_end":16229552,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # The Decoder trait","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16229553,"byte_end":16229576,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16229577,"byte_end":16229580,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A [`Decoder`] is used together with [`FramedRead`] or [`Framed`] to turn an","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16229581,"byte_end":16229660,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ [`AsyncRead`] into a [`Stream`]. The job of the decoder trait is to specify","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16229661,"byte_end":16229740,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ how sequences of bytes are turned into a sequence of frames, and to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16229741,"byte_end":16229812,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/ determine where the boundaries between frames are.  The job of the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16229813,"byte_end":16229883,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ `FramedRead` is to repeatedly switch between reading more data from the IO","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16229884,"byte_end":16229962,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ resource, and asking the decoder whether we have received enough data to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16229963,"byte_end":16230039,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ decode another frame of data.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16230040,"byte_end":16230073,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16230074,"byte_end":16230077,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Decoder` trait is the [`decode`] method. This method","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16230078,"byte_end":16230158,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ takes as argument the data that has been read so far, and when it is called,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16230159,"byte_end":16230239,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ it will be in one of the following situations:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16230240,"byte_end":16230290,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16230291,"byte_end":16230294,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/  1. The buffer contains less than a full frame.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16230295,"byte_end":16230346,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/  2. The buffer contains exactly a full frame.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16230347,"byte_end":16230396,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/  3. The buffer contains more than a full frame.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16230397,"byte_end":16230448,"line_start":26,"line_end":26,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16230449,"byte_end":16230452,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ In the first situation, the decoder should return `Ok(None)`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16230453,"byte_end":16230518,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16230519,"byte_end":16230522,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ In the second situation, the decoder should clear the provided buffer and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16230523,"byte_end":16230600,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ return `Ok(Some(the_decoded_frame))`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16230601,"byte_end":16230642,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16230643,"byte_end":16230646,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ In the third situation, the decoder should use a method such as [`split_to`]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16230647,"byte_end":16230727,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ or [`advance`] to modify the buffer such that the frame is removed from the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16230728,"byte_end":16230807,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ buffer, but any data in the buffer after that frame should still remain in","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16230808,"byte_end":16230886,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ the buffer. The decoder should also return `Ok(Some(the_decoded_frame))` in","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16230887,"byte_end":16230966,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ this case.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16230967,"byte_end":16230981,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16230982,"byte_end":16230985,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Finally the decoder may return an error if the data is invalid in some way.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16230986,"byte_end":16231065,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ The decoder should _not_ return an error just because it has yet to receive","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16231066,"byte_end":16231145,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/ a full frame.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16231146,"byte_end":16231163,"line_start":41,"line_end":41,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16231164,"byte_end":16231167,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `decode` to another, the provided","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16231168,"byte_end":16231245,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that if more data","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16231246,"byte_end":16231325,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ has arrived through the IO resource, that data will have been appended to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16231326,"byte_end":16231403,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ the buffer.  This means that reading frames from a `FramedRead` is","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16231404,"byte_end":16231474,"line_start":46,"line_end":46,"column_start":1,"column_end":71}},{"value":"/ essentially equivalent to the following loop:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16231475,"byte_end":16231524,"line_start":47,"line_end":47,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16231525,"byte_end":16231528,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16231529,"byte_end":16231542,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16231543,"byte_end":16231575,"line_start":50,"line_end":50,"column_start":1,"column_end":33}},{"value":"/ # // This uses async_stream to create an example that compiles.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16231576,"byte_end":16231643,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/ # fn foo() -> impl futures_core::Stream<Item = std::io::Result<bytes::BytesMut>> { async_stream::try_stream! {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16231644,"byte_end":16231758,"line_start":52,"line_end":52,"column_start":1,"column_end":115}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16231759,"byte_end":16231796,"line_start":53,"line_end":53,"column_start":1,"column_end":38}},{"value":"/ # let mut decoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16231797,"byte_end":16231858,"line_start":54,"line_end":54,"column_start":1,"column_end":62}},{"value":"/ # let io_resource = &mut &[0u8, 1, 2, 3][..];","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16231859,"byte_end":16231908,"line_start":55,"line_end":55,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16231909,"byte_end":16231912,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16231913,"byte_end":16231954,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16231955,"byte_end":16231965,"line_start":58,"line_end":58,"column_start":1,"column_end":11}},{"value":"/     // The read_buf call will append to buf rather than overwrite existing data.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16231966,"byte_end":16232050,"line_start":59,"line_end":59,"column_start":1,"column_end":85}},{"value":"/     let len = io_resource.read_buf(&mut buf).await?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16232051,"byte_end":16232107,"line_start":60,"line_end":60,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16232108,"byte_end":16232111,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     if len == 0 {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16232112,"byte_end":16232133,"line_start":62,"line_end":62,"column_start":1,"column_end":22}},{"value":"/         while let Some(frame) = decoder.decode_eof(&mut buf)? {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16232134,"byte_end":16232201,"line_start":63,"line_end":63,"column_start":1,"column_end":68}},{"value":"/             yield frame;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16232202,"byte_end":16232230,"line_start":64,"line_end":64,"column_start":1,"column_end":29}},{"value":"/         }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16232231,"byte_end":16232244,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/         break;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16232245,"byte_end":16232263,"line_start":66,"line_end":66,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16232264,"byte_end":16232273,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16232274,"byte_end":16232277,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/     while let Some(frame) = decoder.decode(&mut buf)? {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16232278,"byte_end":16232337,"line_start":69,"line_end":69,"column_start":1,"column_end":60}},{"value":"/         yield frame;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16232338,"byte_end":16232362,"line_start":70,"line_end":70,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16232363,"byte_end":16232372,"line_start":71,"line_end":71,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16232373,"byte_end":16232378,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/ # }}","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16232379,"byte_end":16232387,"line_start":73,"line_end":73,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16232388,"byte_end":16232395,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ The example above uses `yield` whenever the `Stream` produces an item.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16232396,"byte_end":16232470,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16232471,"byte_end":16232474,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ## Example decoder","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16232475,"byte_end":16232497,"line_start":77,"line_end":77,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16232498,"byte_end":16232501,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16232502,"byte_end":16232579,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16232580,"byte_end":16232656,"line_start":80,"line_end":80,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The decoder fails with an error","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16232657,"byte_end":16232736,"line_start":81,"line_end":81,"column_start":1,"column_end":80}},{"value":"/ if the string data is not valid utf-8 or too long.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16232737,"byte_end":16232791,"line_start":82,"line_end":82,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16232792,"byte_end":16232795,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ Such a decoder can be written like this:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16232796,"byte_end":16232840,"line_start":84,"line_end":84,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16232841,"byte_end":16232848,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Decoder;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16232849,"byte_end":16232884,"line_start":86,"line_end":86,"column_start":1,"column_end":36}},{"value":"/ use bytes::{BytesMut, Buf};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16232885,"byte_end":16232916,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16232917,"byte_end":16232920,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ struct MyStringDecoder {}","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16232921,"byte_end":16232950,"line_start":89,"line_end":89,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16232951,"byte_end":16232954,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16232955,"byte_end":16232994,"line_start":91,"line_end":91,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16232995,"byte_end":16232998,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ impl Decoder for MyStringDecoder {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16232999,"byte_end":16233037,"line_start":93,"line_end":93,"column_start":1,"column_end":39}},{"value":"/     type Item = String;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16233038,"byte_end":16233065,"line_start":94,"line_end":94,"column_start":1,"column_end":28}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16233066,"byte_end":16233102,"line_start":95,"line_end":95,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16233103,"byte_end":16233106,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     fn decode(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16233107,"byte_end":16233125,"line_start":97,"line_end":97,"column_start":1,"column_end":19}},{"value":"/         &mut self,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16233126,"byte_end":16233148,"line_start":98,"line_end":98,"column_start":1,"column_end":23}},{"value":"/         src: &mut BytesMut","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16233149,"byte_end":16233179,"line_start":99,"line_end":99,"column_start":1,"column_end":31}},{"value":"/     ) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16233180,"byte_end":16233234,"line_start":100,"line_end":100,"column_start":1,"column_end":55}},{"value":"/         if src.len() < 4 {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16233235,"byte_end":16233265,"line_start":101,"line_end":101,"column_start":1,"column_end":31}},{"value":"/             // Not enough data to read length marker.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16233266,"byte_end":16233323,"line_start":102,"line_end":102,"column_start":1,"column_end":58}},{"value":"/             return Ok(None);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16233324,"byte_end":16233356,"line_start":103,"line_end":103,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16233357,"byte_end":16233370,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16233371,"byte_end":16233374,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/         // Read length marker.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16233375,"byte_end":16233409,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/         let mut length_bytes = [0u8; 4];","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16233410,"byte_end":16233454,"line_start":107,"line_end":107,"column_start":1,"column_end":45}},{"value":"/         length_bytes.copy_from_slice(&src[..4]);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16233455,"byte_end":16233507,"line_start":108,"line_end":108,"column_start":1,"column_end":53}},{"value":"/         let length = u32::from_le_bytes(length_bytes) as usize;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16233508,"byte_end":16233575,"line_start":109,"line_end":109,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16233576,"byte_end":16233579,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/         // Check that the length is not too large to avoid a denial of","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16233580,"byte_end":16233654,"line_start":111,"line_end":111,"column_start":1,"column_end":75}},{"value":"/         // service attack where the server runs out of memory.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16233655,"byte_end":16233721,"line_start":112,"line_end":112,"column_start":1,"column_end":67}},{"value":"/         if length > MAX {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16233722,"byte_end":16233751,"line_start":113,"line_end":113,"column_start":1,"column_end":30}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16233752,"byte_end":16233799,"line_start":114,"line_end":114,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16233800,"byte_end":16233852,"line_start":115,"line_end":115,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", length)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16233853,"byte_end":16233924,"line_start":116,"line_end":116,"column_start":1,"column_end":72}},{"value":"/             ));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16233925,"byte_end":16233944,"line_start":117,"line_end":117,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16233945,"byte_end":16233958,"line_start":118,"line_end":118,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16233959,"byte_end":16233962,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/         if src.len() < 4 + length {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16233963,"byte_end":16234002,"line_start":120,"line_end":120,"column_start":1,"column_end":40}},{"value":"/             // The full string has not yet arrived.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16234003,"byte_end":16234058,"line_start":121,"line_end":121,"column_start":1,"column_end":56}},{"value":"/             //","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16234059,"byte_end":16234077,"line_start":122,"line_end":122,"column_start":1,"column_end":19}},{"value":"/             // We reserve more space in the buffer. This is not strictly","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16234078,"byte_end":16234154,"line_start":123,"line_end":123,"column_start":1,"column_end":77}},{"value":"/             // necessary, but is a good idea performance-wise.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16234155,"byte_end":16234221,"line_start":124,"line_end":124,"column_start":1,"column_end":67}},{"value":"/             src.reserve(4 + length - src.len());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16234222,"byte_end":16234274,"line_start":125,"line_end":125,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16234275,"byte_end":16234278,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/             // We inform the Framed that we need more bytes to form the next","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16234279,"byte_end":16234359,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/             // frame.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16234360,"byte_end":16234385,"line_start":128,"line_end":128,"column_start":1,"column_end":26}},{"value":"/             return Ok(None);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16234386,"byte_end":16234418,"line_start":129,"line_end":129,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16234419,"byte_end":16234432,"line_start":130,"line_end":130,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16234433,"byte_end":16234436,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/         // Use advance to modify src such that it no longer contains","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16234437,"byte_end":16234509,"line_start":132,"line_end":132,"column_start":1,"column_end":73}},{"value":"/         // this frame.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16234510,"byte_end":16234536,"line_start":133,"line_end":133,"column_start":1,"column_end":27}},{"value":"/         let data = src[4..4 + length].to_vec();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16234537,"byte_end":16234588,"line_start":134,"line_end":134,"column_start":1,"column_end":52}},{"value":"/         src.advance(4 + length);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16234589,"byte_end":16234625,"line_start":135,"line_end":135,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16234626,"byte_end":16234629,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/         // Convert the data to a string, or fail if it is not valid utf-8.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16234630,"byte_end":16234708,"line_start":137,"line_end":137,"column_start":1,"column_end":79}},{"value":"/         match String::from_utf8(data) {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16234709,"byte_end":16234752,"line_start":138,"line_end":138,"column_start":1,"column_end":44}},{"value":"/             Ok(string) => Ok(Some(string)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16234753,"byte_end":16234800,"line_start":139,"line_end":139,"column_start":1,"column_end":48}},{"value":"/             Err(utf8_error) => {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16234801,"byte_end":16234837,"line_start":140,"line_end":140,"column_start":1,"column_end":37}},{"value":"/                 Err(std::io::Error::new(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16234838,"byte_end":16234882,"line_start":141,"line_end":141,"column_start":1,"column_end":45}},{"value":"/                     std::io::ErrorKind::InvalidData,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16234883,"byte_end":16234939,"line_start":142,"line_end":142,"column_start":1,"column_end":57}},{"value":"/                     utf8_error.utf8_error(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16234940,"byte_end":16234988,"line_start":143,"line_end":143,"column_start":1,"column_end":49}},{"value":"/                 ))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16234989,"byte_end":16235011,"line_start":144,"line_end":144,"column_start":1,"column_end":23}},{"value":"/             },","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16235012,"byte_end":16235030,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/         }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16235031,"byte_end":16235044,"line_start":146,"line_end":146,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16235045,"byte_end":16235054,"line_start":147,"line_end":147,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16235055,"byte_end":16235060,"line_start":148,"line_end":148,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16235061,"byte_end":16235068,"line_start":149,"line_end":149,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16235069,"byte_end":16235072,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # The Encoder trait","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16235073,"byte_end":16235096,"line_start":151,"line_end":151,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16235097,"byte_end":16235100,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ An [`Encoder`] is used together with [`FramedWrite`] or [`Framed`] to turn","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16235101,"byte_end":16235179,"line_start":153,"line_end":153,"column_start":1,"column_end":79}},{"value":"/ an [`AsyncWrite`] into a [`Sink`]. The job of the encoder trait is to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16235180,"byte_end":16235253,"line_start":154,"line_end":154,"column_start":1,"column_end":74}},{"value":"/ specify how frames are turned into a sequences of bytes.  The job of the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16235254,"byte_end":16235330,"line_start":155,"line_end":155,"column_start":1,"column_end":77}},{"value":"/ `FramedWrite` is to take the resulting sequence of bytes and write it to the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16235331,"byte_end":16235411,"line_start":156,"line_end":156,"column_start":1,"column_end":81}},{"value":"/ IO resource.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16235412,"byte_end":16235428,"line_start":157,"line_end":157,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16235429,"byte_end":16235432,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Encoder` trait is the [`encode`] method. This method","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16235433,"byte_end":16235513,"line_start":159,"line_end":159,"column_start":1,"column_end":81}},{"value":"/ takes an item that is being written, and a buffer to write the item to. The","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16235514,"byte_end":16235593,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ buffer may already contain data, and in this case, the encoder should append","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16235594,"byte_end":16235674,"line_start":161,"line_end":161,"column_start":1,"column_end":81}},{"value":"/ the new frame the to buffer rather than overwrite the existing data.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16235675,"byte_end":16235747,"line_start":162,"line_end":162,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16235748,"byte_end":16235751,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `encode` to another, the provided","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16235752,"byte_end":16235829,"line_start":164,"line_end":164,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that some of the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16235830,"byte_end":16235908,"line_start":165,"line_end":165,"column_start":1,"column_end":79}},{"value":"/ data may have been removed from the front of the buffer. Writing to a","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16235909,"byte_end":16235982,"line_start":166,"line_end":166,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` is essentially equivalent to the following loop:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16235983,"byte_end":16236049,"line_start":167,"line_end":167,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16236050,"byte_end":16236053,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16236054,"byte_end":16236067,"line_start":169,"line_end":169,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncWriteExt;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16236068,"byte_end":16236101,"line_start":170,"line_end":170,"column_start":1,"column_end":34}},{"value":"/ use bytes::Buf; // for advance","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16236102,"byte_end":16236136,"line_start":171,"line_end":171,"column_start":1,"column_end":35}},{"value":"/ # use tokio_util::codec::Encoder;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16236137,"byte_end":16236174,"line_start":172,"line_end":172,"column_start":1,"column_end":38}},{"value":"/ # async fn next_frame() -> bytes::Bytes { bytes::Bytes::new() }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16236175,"byte_end":16236242,"line_start":173,"line_end":173,"column_start":1,"column_end":68}},{"value":"/ # async fn no_more_frames() { }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16236243,"byte_end":16236278,"line_start":174,"line_end":174,"column_start":1,"column_end":36}},{"value":"/ # #[tokio::main] async fn main() -> std::io::Result<()> {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16236279,"byte_end":16236340,"line_start":175,"line_end":175,"column_start":1,"column_end":62}},{"value":"/ # let mut io_resource = tokio::io::sink();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16236341,"byte_end":16236387,"line_start":176,"line_end":176,"column_start":1,"column_end":47}},{"value":"/ # let mut encoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16236388,"byte_end":16236449,"line_start":177,"line_end":177,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16236450,"byte_end":16236453,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8192;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16236454,"byte_end":16236482,"line_start":179,"line_end":179,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16236483,"byte_end":16236486,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16236487,"byte_end":16236528,"line_start":181,"line_end":181,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16236529,"byte_end":16236539,"line_start":182,"line_end":182,"column_start":1,"column_end":11}},{"value":"/     tokio::select! {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16236540,"byte_end":16236564,"line_start":183,"line_end":183,"column_start":1,"column_end":25}},{"value":"/         num_written = io_resource.write(&buf), if !buf.is_empty() => {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16236565,"byte_end":16236639,"line_start":184,"line_end":184,"column_start":1,"column_end":75}},{"value":"/             buf.advance(num_written?);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16236640,"byte_end":16236682,"line_start":185,"line_end":185,"column_start":1,"column_end":43}},{"value":"/         },","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16236683,"byte_end":16236697,"line_start":186,"line_end":186,"column_start":1,"column_end":15}},{"value":"/         frame = next_frame(), if buf.len() < MAX => {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16236698,"byte_end":16236755,"line_start":187,"line_end":187,"column_start":1,"column_end":58}},{"value":"/             encoder.encode(frame, &mut buf)?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16236756,"byte_end":16236805,"line_start":188,"line_end":188,"column_start":1,"column_end":50}},{"value":"/         },","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16236806,"byte_end":16236820,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"/         _ = no_more_frames() => {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16236821,"byte_end":16236858,"line_start":190,"line_end":190,"column_start":1,"column_end":38}},{"value":"/             io_resource.write_all(&buf).await?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16236859,"byte_end":16236910,"line_start":191,"line_end":191,"column_start":1,"column_end":52}},{"value":"/             io_resource.shutdown().await?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16236911,"byte_end":16236957,"line_start":192,"line_end":192,"column_start":1,"column_end":47}},{"value":"/             return Ok(());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16236958,"byte_end":16236988,"line_start":193,"line_end":193,"column_start":1,"column_end":31}},{"value":"/         },","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16236989,"byte_end":16237003,"line_start":194,"line_end":194,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16237004,"byte_end":16237013,"line_start":195,"line_end":195,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16237014,"byte_end":16237019,"line_start":196,"line_end":196,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16237020,"byte_end":16237027,"line_start":197,"line_end":197,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16237028,"byte_end":16237035,"line_start":198,"line_end":198,"column_start":1,"column_end":8}},{"value":"/ Here the `next_frame` method corresponds to any frames you write to the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16237036,"byte_end":16237111,"line_start":199,"line_end":199,"column_start":1,"column_end":76}},{"value":"/ `FramedWrite`. The `no_more_frames` method corresponds to closing the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16237112,"byte_end":16237185,"line_start":200,"line_end":200,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` with [`SinkExt::close`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16237186,"byte_end":16237228,"line_start":201,"line_end":201,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16237229,"byte_end":16237232,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ ## Example encoder","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16237233,"byte_end":16237255,"line_start":203,"line_end":203,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16237256,"byte_end":16237259,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16237260,"byte_end":16237337,"line_start":205,"line_end":205,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16237338,"byte_end":16237414,"line_start":206,"line_end":206,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The encoder will fail if the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16237415,"byte_end":16237491,"line_start":207,"line_end":207,"column_start":1,"column_end":77}},{"value":"/ string is too long.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16237492,"byte_end":16237515,"line_start":208,"line_end":208,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16237516,"byte_end":16237519,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ Such an encoder can be written like this:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16237520,"byte_end":16237565,"line_start":210,"line_end":210,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16237566,"byte_end":16237573,"line_start":211,"line_end":211,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Encoder;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16237574,"byte_end":16237609,"line_start":212,"line_end":212,"column_start":1,"column_end":36}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16237610,"byte_end":16237634,"line_start":213,"line_end":213,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16237635,"byte_end":16237638,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ struct MyStringEncoder {}","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16237639,"byte_end":16237668,"line_start":215,"line_end":215,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16237669,"byte_end":16237672,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16237673,"byte_end":16237712,"line_start":217,"line_end":217,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16237713,"byte_end":16237716,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ impl Encoder<String> for MyStringEncoder {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16237717,"byte_end":16237763,"line_start":219,"line_end":219,"column_start":1,"column_end":47}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16237764,"byte_end":16237800,"line_start":220,"line_end":220,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16237801,"byte_end":16237804,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/     fn encode(&mut self, item: String, dst: &mut BytesMut) -> Result<(), Self::Error> {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16237805,"byte_end":16237896,"line_start":222,"line_end":222,"column_start":1,"column_end":92}},{"value":"/         // Don't send a string if it is longer than the other end will","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16237897,"byte_end":16237971,"line_start":223,"line_end":223,"column_start":1,"column_end":75}},{"value":"/         // accept.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16237972,"byte_end":16237994,"line_start":224,"line_end":224,"column_start":1,"column_end":23}},{"value":"/         if item.len() > MAX {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16237995,"byte_end":16238028,"line_start":225,"line_end":225,"column_start":1,"column_end":34}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16238029,"byte_end":16238076,"line_start":226,"line_end":226,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16238077,"byte_end":16238129,"line_start":227,"line_end":227,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", item.len())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16238130,"byte_end":16238205,"line_start":228,"line_end":228,"column_start":1,"column_end":76}},{"value":"/             ));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16238206,"byte_end":16238225,"line_start":229,"line_end":229,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16238226,"byte_end":16238239,"line_start":230,"line_end":230,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16238240,"byte_end":16238243,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/         // Convert the length into a byte array.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16238244,"byte_end":16238296,"line_start":232,"line_end":232,"column_start":1,"column_end":53}},{"value":"/         // The cast to u32 cannot overflow due to the length check above.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16238297,"byte_end":16238374,"line_start":233,"line_end":233,"column_start":1,"column_end":78}},{"value":"/         let len_slice = u32::to_le_bytes(item.len() as u32);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16238375,"byte_end":16238439,"line_start":234,"line_end":234,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16238440,"byte_end":16238443,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/         // Reserve space in the buffer.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16238444,"byte_end":16238487,"line_start":236,"line_end":236,"column_start":1,"column_end":44}},{"value":"/         dst.reserve(4 + item.len());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16238488,"byte_end":16238528,"line_start":237,"line_end":237,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16238529,"byte_end":16238532,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/         // Write the length and string to the buffer.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16238533,"byte_end":16238590,"line_start":239,"line_end":239,"column_start":1,"column_end":58}},{"value":"/         dst.extend_from_slice(&len_slice);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16238591,"byte_end":16238637,"line_start":240,"line_end":240,"column_start":1,"column_end":47}},{"value":"/         dst.extend_from_slice(item.as_bytes());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16238638,"byte_end":16238689,"line_start":241,"line_end":241,"column_start":1,"column_end":52}},{"value":"/         Ok(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16238690,"byte_end":16238708,"line_start":242,"line_end":242,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16238709,"byte_end":16238718,"line_start":243,"line_end":243,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16238719,"byte_end":16238724,"line_start":244,"line_end":244,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16238725,"byte_end":16238732,"line_start":245,"line_end":245,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16238733,"byte_end":16238736,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16238737,"byte_end":16238776,"line_start":247,"line_end":247,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: tokio::io::AsyncWrite","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16238777,"byte_end":16238818,"line_start":248,"line_end":248,"column_start":1,"column_end":42}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16238819,"byte_end":16238855,"line_start":249,"line_end":249,"column_start":1,"column_end":37}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16238856,"byte_end":16238888,"line_start":250,"line_end":250,"column_start":1,"column_end":33}},{"value":"/ [`SinkExt::close`]: https://docs.rs/futures/0.3/futures/sink/trait.SinkExt.html#method.close","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16238889,"byte_end":16238985,"line_start":251,"line_end":251,"column_start":1,"column_end":97}},{"value":"/ [`FramedRead`]: struct@crate::codec::FramedRead","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16238986,"byte_end":16239037,"line_start":252,"line_end":252,"column_start":1,"column_end":52}},{"value":"/ [`FramedWrite`]: struct@crate::codec::FramedWrite","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16239038,"byte_end":16239091,"line_start":253,"line_end":253,"column_start":1,"column_end":54}},{"value":"/ [`Framed`]: struct@crate::codec::Framed","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16239092,"byte_end":16239135,"line_start":254,"line_end":254,"column_start":1,"column_end":44}},{"value":"/ [`Decoder`]: trait@crate::codec::Decoder","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16239136,"byte_end":16239180,"line_start":255,"line_end":255,"column_start":1,"column_end":45}},{"value":"/ [`decode`]: fn@crate::codec::Decoder::decode","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16239181,"byte_end":16239229,"line_start":256,"line_end":256,"column_start":1,"column_end":49}},{"value":"/ [`encode`]: fn@crate::codec::Encoder::encode","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16239230,"byte_end":16239278,"line_start":257,"line_end":257,"column_start":1,"column_end":49}},{"value":"/ [`split_to`]: fn@bytes::BytesMut::split_to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16239279,"byte_end":16239325,"line_start":258,"line_end":258,"column_start":1,"column_end":47}},{"value":"/ [`advance`]: fn@bytes::Buf::advance","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16239326,"byte_end":16239365,"line_start":259,"line_end":259,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1146},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":16241389,"byte_end":16241399,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"BytesCodec","qualname":"::codec::bytes_codec::BytesCodec","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":16240232,"byte_end":16240317,"line_start":7,"line_end":7,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":16240318,"byte_end":16240321,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":16240322,"byte_end":16240360,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":16240361,"byte_end":16240399,"line_start":10,"line_end":10,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":16240400,"byte_end":16240403,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":16240404,"byte_end":16240417,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":16240418,"byte_end":16240421,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Turn an [`AsyncRead`] into a stream of `Result<`[`BytesMut`]`, `[`Error`]`>`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":16240422,"byte_end":16240503,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":16240504,"byte_end":16240507,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":16240508,"byte_end":16240547,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":16240548,"byte_end":16240581,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":16240582,"byte_end":16240611,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":16240612,"byte_end":16240615,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":16240616,"byte_end":16240623,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # mod hidden {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":16240624,"byte_end":16240642,"line_start":21,"line_end":21,"column_start":1,"column_end":19}},{"value":"/ # #[allow(unused_imports)]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":16240643,"byte_end":16240673,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":16240674,"byte_end":16240698,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":16240699,"byte_end":16240706,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::AsyncRead;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":16240707,"byte_end":16240736,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ use tokio_util::codec::{FramedRead, BytesCodec};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":16240737,"byte_end":16240789,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":16240790,"byte_end":16240793,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # enum File {}","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":16240794,"byte_end":16240812,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ # impl File {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":16240813,"byte_end":16240830,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ #     async fn open(_name: &str) -> Result<impl AsyncRead, std::io::Error> {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":16240831,"byte_end":16240911,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ #         use std::io::Cursor;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":16240912,"byte_end":16240946,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/ #         Ok(Cursor::new(vec![0, 1, 2, 3, 4, 5]))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":16240947,"byte_end":16241000,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/ #     }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":16241001,"byte_end":16241012,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":16241013,"byte_end":16241020,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":16241021,"byte_end":16241026,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":16241027,"byte_end":16241074,"line_start":36,"line_end":36,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":16241075,"byte_end":16241128,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ let my_async_read = File::open(\"filename.txt\").await?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":16241129,"byte_end":16241187,"line_start":38,"line_end":38,"column_start":1,"column_end":59}},{"value":"/ let my_stream_of_bytes = FramedRead::new(my_async_read, BytesCodec::new());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":16241188,"byte_end":16241267,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ # Ok(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":16241268,"byte_end":16241280,"line_start":40,"line_end":40,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":16241281,"byte_end":16241288,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":16241289,"byte_end":16241296,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":16241297,"byte_end":16241300,"line_start":43,"line_end":43,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":16241501,"byte_end":16241504,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesCodec>::new","value":"fn new() -> BytesCodec","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesCodec` for shipping around raw bytes.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesCodec` for shipping around raw bytes.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":16241428,"byte_end":16241489,"line_start":48,"line_end":48,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":465},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":16241647,"byte_end":16241653,"line_start":58,"line_end":58,"column_start":8,"column_end":14},"name":"decode","qualname":"<BytesCodec as codec::decoder::Decoder>::decode","value":"fn decode(&mut Self, &mut BytesMut) -> Result<Option<BytesMut>, io::Error>","parent":{"krate":0,"index":492},"children":[],"decl_id":{"krate":0,"index":495},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":16241958,"byte_end":16241964,"line_start":71,"line_end":71,"column_start":8,"column_end":14},"name":"encode","qualname":"<BytesCodec as codec::encoder::Encoder>::encode","value":"fn encode(&mut Self, Bytes, &mut BytesMut) -> Result<(), io::Error>","parent":{"krate":0,"index":509},"children":[],"decl_id":{"krate":0,"index":512},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":16242192,"byte_end":16242198,"line_start":81,"line_end":81,"column_start":8,"column_end":14},"name":"encode","qualname":"<BytesCodec as codec::encoder::Encoder>::encode","value":"fn encode(&mut Self, BytesMut, &mut BytesMut) -> Result<(), io::Error>","parent":{"krate":0,"index":509},"children":[],"decl_id":{"krate":0,"index":512},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":492},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16243742,"byte_end":16243749,"line_start":35,"line_end":35,"column_start":11,"column_end":18},"name":"Decoder","qualname":"::codec::decoder::Decoder","value":"Decoder","parent":null,"children":[{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":497}],"decl_id":null,"docs":" Decoding of frames via buffers.","sig":null,"attributes":[{"value":"/ Decoding of frames via buffers.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16242456,"byte_end":16242491,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16242492,"byte_end":16242495,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is used when constructing an instance of [`Framed`] or","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16242496,"byte_end":16242565,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]. An implementation of `Decoder` takes a byte stream that has","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16242566,"byte_end":16242645,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ already been buffered in `src` and decodes the data into a stream of","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16242646,"byte_end":16242718,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ `Self::Item` frames.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16242719,"byte_end":16242743,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16242744,"byte_end":16242747,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Implementations are able to track state on `self`, which enables","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16242748,"byte_end":16242816,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ implementing stateful streaming parsers. In many cases, though, this type","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16242817,"byte_end":16242894,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ will simply be a unit struct (e.g. `struct HttpDecoder`).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16242895,"byte_end":16242956,"line_start":17,"line_end":17,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16242957,"byte_end":16242960,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ For some underlying data-sources, namely files and FIFOs,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16242961,"byte_end":16243022,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ it's possible to temporarily read 0 bytes by reaching EOF.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16243023,"byte_end":16243085,"line_start":20,"line_end":20,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16243086,"byte_end":16243089,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ In these cases `decode_eof` will be called until it signals","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16243090,"byte_end":16243153,"line_start":22,"line_end":22,"column_start":1,"column_end":64}},{"value":"/ fullfillment of all closing frames by returning `Ok(None)`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16243154,"byte_end":16243217,"line_start":23,"line_end":23,"column_start":1,"column_end":64}},{"value":"/ After that, repeated attempts to read from the [`Framed`] or [`FramedRead`]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16243218,"byte_end":16243297,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ will not invoke `decode` or `decode_eof` again, until data can be read","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16243298,"byte_end":16243372,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ during a retry.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16243373,"byte_end":16243392,"line_start":26,"line_end":26,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16243393,"byte_end":16243396,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ It is up to the Decoder to keep track of a restart after an EOF,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16243397,"byte_end":16243465,"line_start":28,"line_end":28,"column_start":1,"column_end":69}},{"value":"/ and to decide how to handle such an event by, for example,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16243466,"byte_end":16243528,"line_start":29,"line_end":29,"column_start":1,"column_end":63}},{"value":"/ allowing frames to cross EOF boundaries, re-emitting opening frames, or","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16243529,"byte_end":16243604,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ resetting the entire internal state.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16243605,"byte_end":16243645,"line_start":31,"line_end":31,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16243646,"byte_end":16243649,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16243650,"byte_end":16243686,"line_start":33,"line_end":33,"column_start":1,"column_end":37}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16243687,"byte_end":16243731,"line_start":34,"line_end":34,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":493},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16243797,"byte_end":16243801,"line_start":37,"line_end":37,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::decoder::Decoder::Item","value":"type Item;","parent":{"krate":0,"index":492},"children":[],"decl_id":null,"docs":" The type of decoded frames.\n","sig":null,"attributes":[{"value":"/ The type of decoded frames.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16243756,"byte_end":16243787,"line_start":36,"line_end":36,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":494},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16244567,"byte_end":16244572,"line_start":54,"line_end":54,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::decoder::Decoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":492},"children":[],"decl_id":null,"docs":" The type of unrecoverable frame decoding errors.","sig":null,"attributes":[{"value":"/ The type of unrecoverable frame decoding errors.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16243808,"byte_end":16243860,"line_start":39,"line_end":39,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16243865,"byte_end":16243868,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ If an individual message is ill-formed but can be ignored without","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16243873,"byte_end":16243942,"line_start":41,"line_end":41,"column_start":5,"column_end":74}},{"value":"/ interfering with the processing of future messages, it may be more","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16243947,"byte_end":16244017,"line_start":42,"line_end":42,"column_start":5,"column_end":75}},{"value":"/ useful to report the failure as an `Item`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16244022,"byte_end":16244068,"line_start":43,"line_end":43,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16244073,"byte_end":16244076,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ `From<io::Error>` is required in the interest of making `Error` suitable","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16244081,"byte_end":16244157,"line_start":45,"line_end":45,"column_start":5,"column_end":81}},{"value":"/ for returning directly from a [`FramedRead`], and to enable the default","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16244162,"byte_end":16244237,"line_start":46,"line_end":46,"column_start":5,"column_end":80}},{"value":"/ implementation of `decode_eof` to yield an `io::Error` when the decoder","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16244242,"byte_end":16244317,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ fails to consume all available data.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16244322,"byte_end":16244362,"line_start":48,"line_end":48,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16244367,"byte_end":16244370,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Note that implementors of this trait can simply indicate `type Error =","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16244375,"byte_end":16244449,"line_start":50,"line_end":50,"column_start":5,"column_end":79}},{"value":"/ io::Error` to use I/O errors as this type.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16244454,"byte_end":16244500,"line_start":51,"line_end":51,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16244505,"byte_end":16244508,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16244513,"byte_end":16244557,"line_start":53,"line_end":53,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16247508,"byte_end":16247514,"line_start":124,"line_end":124,"column_start":8,"column_end":14},"name":"decode","qualname":"::codec::decoder::Decoder::decode","value":"fn decode(&mut Self, &mut BytesMut) -> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":492},"children":[],"decl_id":null,"docs":" Attempts to decode a frame from the provided buffer of bytes.","sig":null,"attributes":[{"value":"/ Attempts to decode a frame from the provided buffer of bytes.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16244596,"byte_end":16244661,"line_start":56,"line_end":56,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16244666,"byte_end":16244669,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This method is called by [`FramedRead`] whenever bytes are ready to be","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16244674,"byte_end":16244748,"line_start":58,"line_end":58,"column_start":5,"column_end":79}},{"value":"/ parsed. The provided buffer of bytes is what's been read so far, and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16244753,"byte_end":16244825,"line_start":59,"line_end":59,"column_start":5,"column_end":77}},{"value":"/ this instance of `Decode` can determine whether an entire frame is in","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16244830,"byte_end":16244903,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ the buffer and is ready to be returned.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16244908,"byte_end":16244951,"line_start":61,"line_end":61,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16244956,"byte_end":16244959,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ If an entire frame is available, then this instance will remove those","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16244964,"byte_end":16245037,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ bytes from the buffer provided and return them as a decoded","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16245042,"byte_end":16245105,"line_start":64,"line_end":64,"column_start":5,"column_end":68}},{"value":"/ frame. Note that removing bytes from the provided buffer doesn't always","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16245110,"byte_end":16245185,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ necessarily copy the bytes, so this should be an efficient operation in","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16245190,"byte_end":16245265,"line_start":66,"line_end":66,"column_start":5,"column_end":80}},{"value":"/ most circumstances.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16245270,"byte_end":16245293,"line_start":67,"line_end":67,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16245298,"byte_end":16245301,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ If the bytes look valid, but a frame isn't fully available yet, then","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16245306,"byte_end":16245378,"line_start":69,"line_end":69,"column_start":5,"column_end":77}},{"value":"/ `Ok(None)` is returned. This indicates to the [`Framed`] instance that","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16245383,"byte_end":16245457,"line_start":70,"line_end":70,"column_start":5,"column_end":79}},{"value":"/ it needs to read some more bytes before calling this method again.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16245462,"byte_end":16245532,"line_start":71,"line_end":71,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16245537,"byte_end":16245540,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Note that the bytes provided may be empty. If a previous call to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16245545,"byte_end":16245613,"line_start":73,"line_end":73,"column_start":5,"column_end":73}},{"value":"/ `decode` consumed all the bytes in the buffer then `decode` will be","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16245618,"byte_end":16245689,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/ called again until it returns `Ok(None)`, indicating that more bytes need to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16245694,"byte_end":16245774,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ be read.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16245779,"byte_end":16245791,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16245796,"byte_end":16245799,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ Finally, if the bytes in the buffer are malformed then an error is","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16245804,"byte_end":16245874,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/ returned indicating why. This informs [`Framed`] that the stream is now","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16245879,"byte_end":16245954,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ corrupt and should be terminated.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16245959,"byte_end":16245996,"line_start":80,"line_end":80,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16246001,"byte_end":16246004,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16246009,"byte_end":16246045,"line_start":82,"line_end":82,"column_start":5,"column_end":41}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16246050,"byte_end":16246094,"line_start":83,"line_end":83,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16246099,"byte_end":16246102,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Buffer management","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16246107,"byte_end":16246130,"line_start":85,"line_end":85,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16246135,"byte_end":16246138,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Before returning from the function, implementations should ensure that","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16246143,"byte_end":16246217,"line_start":87,"line_end":87,"column_start":5,"column_end":79}},{"value":"/ the buffer has appropriate capacity in anticipation of future calls to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16246222,"byte_end":16246296,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ `decode`. Failing to do so leads to inefficiency.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16246301,"byte_end":16246354,"line_start":89,"line_end":89,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16246359,"byte_end":16246362,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ For example, if frames have a fixed length, or if the length of the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16246367,"byte_end":16246438,"line_start":91,"line_end":91,"column_start":5,"column_end":76}},{"value":"/ current frame is known from a header, a possible buffer management","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16246443,"byte_end":16246513,"line_start":92,"line_end":92,"column_start":5,"column_end":75}},{"value":"/ strategy is:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16246518,"byte_end":16246534,"line_start":93,"line_end":93,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16246539,"byte_end":16246542,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16246547,"byte_end":16246560,"line_start":95,"line_end":95,"column_start":5,"column_end":18}},{"value":"/ # use std::io;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16246565,"byte_end":16246583,"line_start":96,"line_end":96,"column_start":5,"column_end":23}},{"value":"/ #","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16246588,"byte_end":16246593,"line_start":97,"line_end":97,"column_start":5,"column_end":10}},{"value":"/ # use bytes::BytesMut;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16246598,"byte_end":16246624,"line_start":98,"line_end":98,"column_start":5,"column_end":31}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16246629,"byte_end":16246666,"line_start":99,"line_end":99,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16246671,"byte_end":16246676,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ # struct MyCodec;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16246681,"byte_end":16246702,"line_start":101,"line_end":101,"column_start":5,"column_end":26}},{"value":"/ #","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16246707,"byte_end":16246712,"line_start":102,"line_end":102,"column_start":5,"column_end":10}},{"value":"/ impl Decoder for MyCodec {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16246717,"byte_end":16246747,"line_start":103,"line_end":103,"column_start":5,"column_end":35}},{"value":"/     // ...","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16246752,"byte_end":16246766,"line_start":104,"line_end":104,"column_start":5,"column_end":19}},{"value":"/     # type Item = BytesMut;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16246771,"byte_end":16246802,"line_start":105,"line_end":105,"column_start":5,"column_end":36}},{"value":"/     # type Error = io::Error;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16246807,"byte_end":16246840,"line_start":106,"line_end":106,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16246845,"byte_end":16246848,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/     fn decode(&mut self, src: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16246853,"byte_end":16246946,"line_start":108,"line_end":108,"column_start":5,"column_end":98}},{"value":"/         // ...","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16246951,"byte_end":16246969,"line_start":109,"line_end":109,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16246974,"byte_end":16246977,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/         // Reserve enough to complete decoding of the current frame.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16246982,"byte_end":16247054,"line_start":111,"line_end":111,"column_start":5,"column_end":77}},{"value":"/         let current_frame_len: usize = 1000; // Example.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16247059,"byte_end":16247119,"line_start":112,"line_end":112,"column_start":5,"column_end":65}},{"value":"/         // And to start decoding the next frame.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16247124,"byte_end":16247176,"line_start":113,"line_end":113,"column_start":5,"column_end":57}},{"value":"/         let next_frame_header_len: usize = 10; // Example.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16247181,"byte_end":16247243,"line_start":114,"line_end":114,"column_start":5,"column_end":67}},{"value":"/         src.reserve(current_frame_len + next_frame_header_len);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16247248,"byte_end":16247315,"line_start":115,"line_end":115,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16247320,"byte_end":16247323,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/         return Ok(None);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16247328,"byte_end":16247356,"line_start":117,"line_end":117,"column_start":5,"column_end":33}},{"value":"/     }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16247361,"byte_end":16247370,"line_start":118,"line_end":118,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16247375,"byte_end":16247380,"line_start":119,"line_end":119,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16247385,"byte_end":16247392,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16247397,"byte_end":16247400,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ An optimal buffer management strategy minimizes reallocations and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16247405,"byte_end":16247474,"line_start":122,"line_end":122,"column_start":5,"column_end":74}},{"value":"/ over-allocations.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16247479,"byte_end":16247500,"line_start":123,"line_end":123,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16248680,"byte_end":16248690,"line_start":144,"line_end":144,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"::codec::decoder::Decoder::decode_eof","value":"fn decode_eof(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":492},"children":[],"decl_id":null,"docs":" A default method available to be called when there are no more bytes\n available to be read from the underlying I/O.","sig":null,"attributes":[{"value":"/ A default method available to be called when there are no more bytes","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16247595,"byte_end":16247667,"line_start":126,"line_end":126,"column_start":5,"column_end":77}},{"value":"/ available to be read from the underlying I/O.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16247672,"byte_end":16247721,"line_start":127,"line_end":127,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16247726,"byte_end":16247729,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This method defaults to calling `decode` and returns an error if","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16247734,"byte_end":16247802,"line_start":129,"line_end":129,"column_start":5,"column_end":73}},{"value":"/ `Ok(None)` is returned while there is unconsumed data in `buf`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16247807,"byte_end":16247874,"line_start":130,"line_end":130,"column_start":5,"column_end":72}},{"value":"/ Typically this doesn't need to be implemented unless the framing","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16247879,"byte_end":16247947,"line_start":131,"line_end":131,"column_start":5,"column_end":73}},{"value":"/ protocol differs near the end of the stream, or if you need to construct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16247952,"byte_end":16248028,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/ frames _across_ eof boundaries on sources that can be resumed.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16248033,"byte_end":16248099,"line_start":133,"line_end":133,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16248104,"byte_end":16248107,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Note that the `buf` argument may be empty. If a previous call to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16248112,"byte_end":16248180,"line_start":135,"line_end":135,"column_start":5,"column_end":73}},{"value":"/ `decode_eof` consumed all the bytes in the buffer, `decode_eof` will be","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16248185,"byte_end":16248260,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ called again until it returns `None`, indicating that there are no more","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16248265,"byte_end":16248340,"line_start":137,"line_end":137,"column_start":5,"column_end":80}},{"value":"/ frames to yield. This behavior enables returning finalization frames","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16248345,"byte_end":16248417,"line_start":138,"line_end":138,"column_start":5,"column_end":77}},{"value":"/ that may not be based on inbound data.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16248422,"byte_end":16248464,"line_start":139,"line_end":139,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16248469,"byte_end":16248472,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Once `None` has been returned, `decode_eof` won't be called again until","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16248477,"byte_end":16248552,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ an attempt to resume the stream has been made, where the underlying stream","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16248557,"byte_end":16248635,"line_start":142,"line_end":142,"column_start":5,"column_end":83}},{"value":"/ actually returned more data.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16248640,"byte_end":16248672,"line_start":143,"line_end":143,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":497},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16250298,"byte_end":16250304,"line_start":178,"line_end":178,"column_start":8,"column_end":14},"name":"framed","qualname":"::codec::decoder::Decoder::framed","value":"fn framed<T>(Self, T) -> Framed<T, Self> where T: AsyncRead + AsyncWrite +\nSized, Self: Sized","parent":{"krate":0,"index":492},"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16249108,"byte_end":16249188,"line_start":157,"line_end":157,"column_start":5,"column_end":85}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16249193,"byte_end":16249269,"line_start":158,"line_end":158,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16249274,"byte_end":16249277,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16249282,"byte_end":16249357,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16249362,"byte_end":16249432,"line_start":161,"line_end":161,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16249437,"byte_end":16249508,"line_start":162,"line_end":162,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16249513,"byte_end":16249585,"line_start":163,"line_end":163,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16249590,"byte_end":16249648,"line_start":164,"line_end":164,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16249653,"byte_end":16249656,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16249661,"byte_end":16249730,"line_start":166,"line_end":166,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16249735,"byte_end":16249810,"line_start":167,"line_end":167,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16249815,"byte_end":16249891,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16249896,"byte_end":16249918,"line_start":169,"line_end":169,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16249923,"byte_end":16249926,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16249931,"byte_end":16250004,"line_start":171,"line_end":171,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the [`Framed`] returned by this method, which will","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16250009,"byte_end":16250082,"line_start":172,"line_end":172,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16250087,"byte_end":16250163,"line_start":173,"line_end":173,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16250168,"byte_end":16250171,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16250176,"byte_end":16250212,"line_start":175,"line_end":175,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16250217,"byte_end":16250249,"line_start":176,"line_end":176,"column_start":5,"column_end":37}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/decoder.rs","byte_start":16250254,"byte_end":16250290,"line_start":177,"line_end":177,"column_start":5,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":509},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/encoder.rs","byte_start":16250638,"byte_end":16250645,"line_start":8,"line_end":8,"column_start":11,"column_end":18},"name":"Encoder","qualname":"::codec::encoder::Encoder","value":"Encoder<Item>","parent":null,"children":[{"krate":0,"index":511},{"krate":0,"index":512}],"decl_id":null,"docs":" Trait of helper objects to write out messages as bytes, for use with\n [`FramedWrite`].","sig":null,"attributes":[{"value":"/ Trait of helper objects to write out messages as bytes, for use with","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/encoder.rs","byte_start":16250483,"byte_end":16250555,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"/ [`FramedWrite`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/encoder.rs","byte_start":16250556,"byte_end":16250576,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/encoder.rs","byte_start":16250577,"byte_end":16250580,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/encoder.rs","byte_start":16250581,"byte_end":16250627,"line_start":7,"line_end":7,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":511},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/encoder.rs","byte_start":16250910,"byte_end":16250915,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::encoder::Encoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":509},"children":[],"decl_id":null,"docs":" The type of encoding errors.","sig":null,"attributes":[{"value":"/ The type of encoding errors.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/encoder.rs","byte_start":16250658,"byte_end":16250690,"line_start":9,"line_end":9,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/encoder.rs","byte_start":16250695,"byte_end":16250698,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`] requires `Encoder`s errors to implement `From<io::Error>`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/encoder.rs","byte_start":16250703,"byte_end":16250780,"line_start":11,"line_end":11,"column_start":5,"column_end":82}},{"value":"/ in the interest letting it return `Error`s directly.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/encoder.rs","byte_start":16250785,"byte_end":16250841,"line_start":12,"line_end":12,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/encoder.rs","byte_start":16250846,"byte_end":16250849,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/encoder.rs","byte_start":16250854,"byte_end":16250900,"line_start":14,"line_end":14,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":512},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/encoder.rs","byte_start":16251266,"byte_end":16251272,"line_start":24,"line_end":24,"column_start":8,"column_end":14},"name":"encode","qualname":"::codec::encoder::Encoder::encode","value":"fn encode(&mut Self, Item, &mut BytesMut) -> Result<(), Self::Error>","parent":{"krate":0,"index":509},"children":[],"decl_id":null,"docs":" Encodes a frame into the buffer provided.","sig":null,"attributes":[{"value":"/ Encodes a frame into the buffer provided.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/encoder.rs","byte_start":16250939,"byte_end":16250984,"line_start":17,"line_end":17,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/encoder.rs","byte_start":16250989,"byte_end":16250992,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This method will encode `item` into the byte buffer provided by `dst`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/encoder.rs","byte_start":16250997,"byte_end":16251071,"line_start":19,"line_end":19,"column_start":5,"column_end":79}},{"value":"/ The `dst` provided is an internal buffer of the [`FramedWrite`] instance and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/encoder.rs","byte_start":16251076,"byte_end":16251156,"line_start":20,"line_end":20,"column_start":5,"column_end":85}},{"value":"/ will be written out when possible.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/encoder.rs","byte_start":16251161,"byte_end":16251199,"line_start":21,"line_end":21,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/encoder.rs","byte_start":16251204,"byte_end":16251207,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/encoder.rs","byte_start":16251212,"byte_end":16251258,"line_start":23,"line_end":23,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1704},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16264912,"byte_end":16264918,"line_start":27,"line_end":27,"column_start":16,"column_end":22},"name":"Framed","qualname":"::codec::framed::Framed","value":"Framed {  }","parent":null,"children":[{"krate":0,"index":1707}],"decl_id":null,"docs":" A unified [`Stream`] and [`Sink`] interface to an underlying I/O object, using\n the `Encoder` and `Decoder` traits to encode and decode frames.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":684},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16266691,"byte_end":16266694,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<Framed<T, U>>::new","value":"fn new(T, U) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16265060,"byte_end":16265140,"line_start":37,"line_end":37,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16265145,"byte_end":16265226,"line_start":38,"line_end":38,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16265231,"byte_end":16265234,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16265239,"byte_end":16265314,"line_start":40,"line_end":40,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16265319,"byte_end":16265389,"line_start":41,"line_end":41,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16265394,"byte_end":16265463,"line_start":42,"line_end":42,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16265468,"byte_end":16265540,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16265545,"byte_end":16265603,"line_start":44,"line_end":44,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16265608,"byte_end":16265611,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16265616,"byte_end":16265687,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16265692,"byte_end":16265769,"line_start":47,"line_end":47,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16265774,"byte_end":16265850,"line_start":48,"line_end":48,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16265855,"byte_end":16265877,"line_start":49,"line_end":49,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16265882,"byte_end":16265885,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16265890,"byte_end":16265963,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16265968,"byte_end":16266041,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16266046,"byte_end":16266122,"line_start":53,"line_end":53,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16266127,"byte_end":16266130,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that, for some byte sources, the stream can be resumed after an EOF","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16266135,"byte_end":16266211,"line_start":55,"line_end":55,"column_start":5,"column_end":81}},{"value":"/ by reading from it, even after it has returned `None`. Repeated attempts","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16266216,"byte_end":16266292,"line_start":56,"line_end":56,"column_start":5,"column_end":81}},{"value":"/ to do so, without new data available, continue to return `None` without","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16266297,"byte_end":16266372,"line_start":57,"line_end":57,"column_start":5,"column_end":80}},{"value":"/ creating more (closing) frames.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16266377,"byte_end":16266412,"line_start":58,"line_end":58,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16266417,"byte_end":16266420,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16266425,"byte_end":16266461,"line_start":60,"line_end":60,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16266466,"byte_end":16266498,"line_start":61,"line_end":61,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16266503,"byte_end":16266540,"line_start":62,"line_end":62,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16266545,"byte_end":16266583,"line_start":63,"line_end":63,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16266588,"byte_end":16266679,"line_start":64,"line_end":64,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":685},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16268302,"byte_end":16268315,"line_start":99,"line_end":99,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Framed<T, U>>::with_capacity","value":"fn with_capacity(T, U, usize) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,\n with a specific read buffer initial capacity.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16266907,"byte_end":16266987,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16266992,"byte_end":16267073,"line_start":76,"line_end":76,"column_start":5,"column_end":86}},{"value":"/ with a specific read buffer initial capacity.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16267078,"byte_end":16267127,"line_start":77,"line_end":77,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16267132,"byte_end":16267135,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16267140,"byte_end":16267215,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16267220,"byte_end":16267290,"line_start":80,"line_end":80,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16267295,"byte_end":16267364,"line_start":81,"line_end":81,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16267369,"byte_end":16267441,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16267446,"byte_end":16267504,"line_start":83,"line_end":83,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16267509,"byte_end":16267512,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16267517,"byte_end":16267588,"line_start":85,"line_end":85,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16267593,"byte_end":16267670,"line_start":86,"line_end":86,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16267675,"byte_end":16267751,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16267756,"byte_end":16267778,"line_start":88,"line_end":88,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16267783,"byte_end":16267786,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16267791,"byte_end":16267864,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16267869,"byte_end":16267942,"line_start":91,"line_end":91,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16267947,"byte_end":16268023,"line_start":92,"line_end":92,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16268028,"byte_end":16268031,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16268036,"byte_end":16268072,"line_start":94,"line_end":94,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16268077,"byte_end":16268109,"line_start":95,"line_end":95,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16268114,"byte_end":16268151,"line_start":96,"line_end":96,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16268156,"byte_end":16268194,"line_start":97,"line_end":97,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16268199,"byte_end":16268290,"line_start":98,"line_end":98,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":689},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16270462,"byte_end":16270472,"line_start":146,"line_end":146,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Framed<T, U>>::from_parts","value":"fn from_parts(FramedParts<T, U>) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16268885,"byte_end":16268965,"line_start":119,"line_end":119,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16268970,"byte_end":16269051,"line_start":120,"line_end":120,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16269056,"byte_end":16269059,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16269064,"byte_end":16269139,"line_start":122,"line_end":122,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16269144,"byte_end":16269214,"line_start":123,"line_end":123,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16269219,"byte_end":16269290,"line_start":124,"line_end":124,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16269295,"byte_end":16269367,"line_start":125,"line_end":125,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16269372,"byte_end":16269430,"line_start":126,"line_end":126,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16269435,"byte_end":16269438,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16269443,"byte_end":16269514,"line_start":128,"line_end":128,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16269519,"byte_end":16269596,"line_start":129,"line_end":129,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16269601,"byte_end":16269677,"line_start":130,"line_end":130,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16269682,"byte_end":16269704,"line_start":131,"line_end":131,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16269709,"byte_end":16269712,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ This objects takes a stream and a readbuffer and a writebuffer. These field","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16269717,"byte_end":16269796,"line_start":133,"line_end":133,"column_start":5,"column_end":84}},{"value":"/ can be obtained from an existing `Framed` with the [`into_parts`] method.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16269801,"byte_end":16269878,"line_start":134,"line_end":134,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16269883,"byte_end":16269886,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16269891,"byte_end":16269964,"line_start":136,"line_end":136,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16269969,"byte_end":16270042,"line_start":137,"line_end":137,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16270047,"byte_end":16270123,"line_start":138,"line_end":138,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16270128,"byte_end":16270131,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16270136,"byte_end":16270172,"line_start":140,"line_end":140,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16270177,"byte_end":16270209,"line_start":141,"line_end":141,"column_start":5,"column_end":37}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16270214,"byte_end":16270252,"line_start":142,"line_end":142,"column_start":5,"column_end":43}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16270257,"byte_end":16270295,"line_start":143,"line_end":143,"column_start":5,"column_end":43}},{"value":"/ [`into_parts`]: crate::codec::Framed::into_parts()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16270300,"byte_end":16270354,"line_start":144,"line_end":144,"column_start":5,"column_end":59}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16270359,"byte_end":16270450,"line_start":145,"line_end":145,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":690},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16271107,"byte_end":16271114,"line_start":165,"line_end":165,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Framed<T, U>>::get_ref","value":"fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16270824,"byte_end":16270887,"line_start":159,"line_end":159,"column_start":5,"column_end":68}},{"value":"/ `Framed`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16270892,"byte_end":16270905,"line_start":160,"line_end":160,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16270910,"byte_end":16270913,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16270918,"byte_end":16270993,"line_start":162,"line_end":162,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16270998,"byte_end":16271068,"line_start":163,"line_end":163,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16271073,"byte_end":16271095,"line_start":164,"line_end":164,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":691},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16271458,"byte_end":16271465,"line_start":175,"line_end":175,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Framed<T, U>>::get_mut","value":"fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16271167,"byte_end":16271238,"line_start":169,"line_end":169,"column_start":5,"column_end":76}},{"value":"/ `Framed`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16271243,"byte_end":16271256,"line_start":170,"line_end":170,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16271261,"byte_end":16271264,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16271269,"byte_end":16271344,"line_start":172,"line_end":172,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16271349,"byte_end":16271419,"line_start":173,"line_end":173,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16271424,"byte_end":16271446,"line_start":174,"line_end":174,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":692},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16271828,"byte_end":16271839,"line_start":185,"line_end":185,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Framed<T, U>>::get_pin_mut","value":"fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16271530,"byte_end":16271608,"line_start":179,"line_end":179,"column_start":5,"column_end":83}},{"value":"/ `Framed`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16271613,"byte_end":16271626,"line_start":180,"line_end":180,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16271631,"byte_end":16271634,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16271639,"byte_end":16271714,"line_start":182,"line_end":182,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16271719,"byte_end":16271789,"line_start":183,"line_end":183,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16271794,"byte_end":16271816,"line_start":184,"line_end":184,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":693},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16272186,"byte_end":16272191,"line_start":194,"line_end":194,"column_start":12,"column_end":17},"name":"codec","qualname":"<Framed<T, U>>::codec","value":"fn codec(&Self) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying codec wrapped by","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16271935,"byte_end":16271993,"line_start":189,"line_end":189,"column_start":5,"column_end":63}},{"value":"/ `Framed`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16271998,"byte_end":16272011,"line_start":190,"line_end":190,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16272016,"byte_end":16272019,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16272024,"byte_end":16272098,"line_start":192,"line_end":192,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16272103,"byte_end":16272174,"line_start":193,"line_end":193,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":694},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16272503,"byte_end":16272512,"line_start":203,"line_end":203,"column_start":12,"column_end":21},"name":"codec_mut","qualname":"<Framed<T, U>>::codec_mut","value":"fn codec_mut(&mut Self) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16272244,"byte_end":16272310,"line_start":198,"line_end":198,"column_start":5,"column_end":71}},{"value":"/ `Framed`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16272315,"byte_end":16272328,"line_start":199,"line_end":199,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16272333,"byte_end":16272336,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16272341,"byte_end":16272415,"line_start":201,"line_end":201,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16272420,"byte_end":16272491,"line_start":202,"line_end":202,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":695},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16272849,"byte_end":16272858,"line_start":212,"line_end":212,"column_start":12,"column_end":21},"name":"map_codec","qualname":"<Framed<T, U>>::map_codec","value":"fn map_codec<C, F>(Self, F) -> Framed<T, C> where F: FnOnce(U) -> C","parent":null,"children":[],"decl_id":null,"docs":" Maps the codec `U` to `C`, preserving the read and write buffers\n wrapped by `Framed`.","sig":null,"attributes":[{"value":"/ Maps the codec `U` to `C`, preserving the read and write buffers","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16272577,"byte_end":16272645,"line_start":207,"line_end":207,"column_start":5,"column_end":73}},{"value":"/ wrapped by `Framed`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16272650,"byte_end":16272674,"line_start":208,"line_end":208,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16272679,"byte_end":16272682,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16272687,"byte_end":16272761,"line_start":210,"line_end":210,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16272766,"byte_end":16272837,"line_start":211,"line_end":211,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":698},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16273549,"byte_end":16273562,"line_start":232,"line_end":232,"column_start":12,"column_end":25},"name":"codec_pin_mut","qualname":"<Framed<T, U>>::codec_pin_mut","value":"fn codec_pin_mut(Pin<&mut Self>) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16273290,"byte_end":16273356,"line_start":227,"line_end":227,"column_start":5,"column_end":71}},{"value":"/ `Framed`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16273361,"byte_end":16273374,"line_start":228,"line_end":228,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16273379,"byte_end":16273382,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16273387,"byte_end":16273461,"line_start":230,"line_end":230,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16273466,"byte_end":16273537,"line_start":231,"line_end":231,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":699},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16273708,"byte_end":16273719,"line_start":237,"line_end":237,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<Framed<T, U>>::read_buffer","value":"fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16273653,"byte_end":16273696,"line_start":236,"line_end":236,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":700},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16273854,"byte_end":16273869,"line_start":242,"line_end":242,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<Framed<T, U>>::read_buffer_mut","value":"fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16273791,"byte_end":16273842,"line_start":241,"line_end":241,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":701},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16274009,"byte_end":16274021,"line_start":247,"line_end":247,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<Framed<T, U>>::write_buffer","value":"fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16273953,"byte_end":16273997,"line_start":246,"line_end":246,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":702},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16274158,"byte_end":16274174,"line_start":252,"line_end":252,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<Framed<T, U>>::write_buffer_mut","value":"fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16274094,"byte_end":16274146,"line_start":251,"line_end":251,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":703},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16274524,"byte_end":16274534,"line_start":261,"line_end":261,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Framed<T, U>>::into_inner","value":"fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16274259,"byte_end":16274322,"line_start":256,"line_end":256,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16274327,"byte_end":16274330,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16274335,"byte_end":16274410,"line_start":258,"line_end":258,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16274415,"byte_end":16274485,"line_start":259,"line_end":259,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16274490,"byte_end":16274512,"line_start":260,"line_end":260,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":704},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16274906,"byte_end":16274916,"line_start":271,"line_end":271,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Framed<T, U>>::into_parts","value":"fn into_parts(Self) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream, the buffer\n with unprocessed data, and the codec.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream, the buffer","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16274584,"byte_end":16274658,"line_start":265,"line_end":265,"column_start":5,"column_end":79}},{"value":"/ with unprocessed data, and the codec.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16274663,"byte_end":16274704,"line_start":266,"line_end":266,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16274709,"byte_end":16274712,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16274717,"byte_end":16274792,"line_start":268,"line_end":268,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16274797,"byte_end":16274867,"line_start":269,"line_end":269,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16274872,"byte_end":16274894,"line_start":270,"line_end":270,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16275369,"byte_end":16275378,"line_start":290,"line_end":290,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Framed<T, U> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":39,"index":96},"children":[],"decl_id":{"krate":39,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":715},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16275710,"byte_end":16275720,"line_start":304,"line_end":304,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"<Framed<T, U> as futures_sink::Sink>::poll_ready","value":"fn poll_ready(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":20},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":716},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16275858,"byte_end":16275868,"line_start":308,"line_end":308,"column_start":8,"column_end":18},"name":"start_send","qualname":"<Framed<T, U> as futures_sink::Sink>::start_send","value":"fn start_send(Pin<&mut Self>, I) -> Result<(), Self::Error>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":21},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":717},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16275989,"byte_end":16275999,"line_start":312,"line_end":312,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<Framed<T, U> as futures_sink::Sink>::poll_flush","value":"fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":22},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":718},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16276137,"byte_end":16276147,"line_start":316,"line_end":316,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<Framed<T, U> as futures_sink::Sink>::poll_close","value":"fn poll_close(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":23},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":722},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16276372,"byte_end":16276375,"line_start":326,"line_end":326,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Framed<T, U> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1182},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16276890,"byte_end":16276901,"line_start":341,"line_end":341,"column_start":12,"column_end":23},"name":"FramedParts","qualname":"::codec::framed::FramedParts","value":"FramedParts { io, codec, read_buf, write_buf }","parent":null,"children":[{"krate":0,"index":1185},{"krate":0,"index":1186},{"krate":0,"index":1187},{"krate":0,"index":1188},{"krate":0,"index":1189}],"decl_id":null,"docs":" `FramedParts` contains an export of the data of a Framed transport.\n It can be used to construct a new [`Framed`] with a different codec.\n It contains all current buffers and the inner transport.","sig":null,"attributes":[{"value":"/ `FramedParts` contains an export of the data of a Framed transport.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16276575,"byte_end":16276646,"line_start":334,"line_end":334,"column_start":1,"column_end":72}},{"value":"/ It can be used to construct a new [`Framed`] with a different codec.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16276647,"byte_end":16276719,"line_start":335,"line_end":335,"column_start":1,"column_end":73}},{"value":"/ It contains all current buffers and the inner transport.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16276720,"byte_end":16276780,"line_start":336,"line_end":336,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16276781,"byte_end":16276784,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16276785,"byte_end":16276821,"line_start":338,"line_end":338,"column_start":1,"column_end":37}},{"value":"allow(clippy :: manual_non_exhaustive)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16276839,"byte_end":16276878,"line_start":340,"line_end":340,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1185},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16276987,"byte_end":16276989,"line_start":343,"line_end":343,"column_start":9,"column_end":11},"name":"io","qualname":"::codec::framed::FramedParts::io","value":"T","parent":{"krate":0,"index":1182},"children":[],"decl_id":null,"docs":" The inner transport used to read bytes to and write bytes to\n","sig":null,"attributes":[{"value":"/ The inner transport used to read bytes to and write bytes to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16276914,"byte_end":16276978,"line_start":342,"line_end":342,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1186},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16277021,"byte_end":16277026,"line_start":346,"line_end":346,"column_start":9,"column_end":14},"name":"codec","qualname":"::codec::framed::FramedParts::codec","value":"U","parent":{"krate":0,"index":1182},"children":[],"decl_id":null,"docs":" The codec\n","sig":null,"attributes":[{"value":"/ The codec","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16276999,"byte_end":16277012,"line_start":345,"line_end":345,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1187},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16277091,"byte_end":16277099,"line_start":349,"line_end":349,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::codec::framed::FramedParts::read_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1182},"children":[],"decl_id":null,"docs":" The buffer with read but unprocessed data.\n","sig":null,"attributes":[{"value":"/ The buffer with read but unprocessed data.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16277036,"byte_end":16277082,"line_start":348,"line_end":348,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":1188},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16277186,"byte_end":16277195,"line_start":352,"line_end":352,"column_start":9,"column_end":18},"name":"write_buf","qualname":"::codec::framed::FramedParts::write_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1182},"children":[],"decl_id":null,"docs":" A buffer with unprocessed data which are not written yet.\n","sig":null,"attributes":[{"value":"/ A buffer with unprocessed data which are not written yet.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16277116,"byte_end":16277177,"line_start":351,"line_end":351,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":726},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16277428,"byte_end":16277431,"line_start":361,"line_end":361,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedParts<T, U>>::new","value":"fn new<I>(T, U) -> FramedParts<T, U> where U: Encoder<I>","parent":null,"children":[],"decl_id":null,"docs":" Create a new, default, `FramedParts`\n","sig":null,"attributes":[{"value":"/ Create a new, default, `FramedParts`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16277376,"byte_end":16277416,"line_start":360,"line_end":360,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":1663},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":16278160,"byte_end":16278170,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"name":"FramedRead","qualname":"::codec::framed_read::FramedRead","value":"FramedRead {  }","parent":null,"children":[{"krate":0,"index":1666}],"decl_id":null,"docs":" A [`Stream`] of messages decoded from an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":777},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":16278421,"byte_end":16278424,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedRead<T, D>>::new","value":"fn new(T, D) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":16278353,"byte_end":16278409,"line_start":32,"line_end":32,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":778},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":16278772,"byte_end":16278785,"line_start":45,"line_end":45,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<FramedRead<T, D>>::with_capacity","value":"fn with_capacity(T, D, usize) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`\n initial size.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":16278656,"byte_end":16278738,"line_start":43,"line_end":43,"column_start":5,"column_end":87}},{"value":"/ initial size.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":16278743,"byte_end":16278760,"line_start":44,"line_end":44,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":782},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":16279539,"byte_end":16279546,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedRead<T, D>>::get_ref","value":"fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":16279252,"byte_end":16279315,"line_start":62,"line_end":62,"column_start":5,"column_end":68}},{"value":"/ `FramedRead`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":16279320,"byte_end":16279337,"line_start":63,"line_end":63,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":16279342,"byte_end":16279345,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":16279350,"byte_end":16279425,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":16279430,"byte_end":16279500,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":16279505,"byte_end":16279527,"line_start":67,"line_end":67,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":783},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":16279894,"byte_end":16279901,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedRead<T, D>>::get_mut","value":"fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":16279599,"byte_end":16279670,"line_start":72,"line_end":72,"column_start":5,"column_end":76}},{"value":"/ `FramedRead`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":16279675,"byte_end":16279692,"line_start":73,"line_end":73,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":16279697,"byte_end":16279700,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":16279705,"byte_end":16279780,"line_start":75,"line_end":75,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":16279785,"byte_end":16279855,"line_start":76,"line_end":76,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":16279860,"byte_end":16279882,"line_start":77,"line_end":77,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":784},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":16280268,"byte_end":16280279,"line_start":88,"line_end":88,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedRead<T, D>>::get_pin_mut","value":"fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":16279966,"byte_end":16280044,"line_start":82,"line_end":82,"column_start":5,"column_end":83}},{"value":"/ `FramedRead`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":16280049,"byte_end":16280066,"line_start":83,"line_end":83,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":16280071,"byte_end":16280074,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":16280079,"byte_end":16280154,"line_start":85,"line_end":85,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":16280159,"byte_end":16280229,"line_start":86,"line_end":86,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":16280234,"byte_end":16280256,"line_start":87,"line_end":87,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":785},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":16280644,"byte_end":16280654,"line_start":97,"line_end":97,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedRead<T, D>>::into_inner","value":"fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedRead`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedRead`, returning its underlying I/O stream.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":16280375,"byte_end":16280442,"line_start":92,"line_end":92,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":16280447,"byte_end":16280450,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":16280455,"byte_end":16280530,"line_start":94,"line_end":94,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":16280535,"byte_end":16280605,"line_start":95,"line_end":95,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":16280610,"byte_end":16280632,"line_start":96,"line_end":96,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":786},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":16280766,"byte_end":16280773,"line_start":102,"line_end":102,"column_start":12,"column_end":19},"name":"decoder","qualname":"<FramedRead<T, D>>::decoder","value":"fn decoder(&Self) -> &D","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":16280704,"byte_end":16280754,"line_start":101,"line_end":101,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":787},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":16280896,"byte_end":16280907,"line_start":107,"line_end":107,"column_start":12,"column_end":23},"name":"decoder_mut","qualname":"<FramedRead<T, D>>::decoder_mut","value":"fn decoder_mut(&mut Self) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":16280826,"byte_end":16280884,"line_start":106,"line_end":106,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":788},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":16281072,"byte_end":16281083,"line_start":113,"line_end":113,"column_start":12,"column_end":23},"name":"map_decoder","qualname":"<FramedRead<T, D>>::map_decoder","value":"fn map_decoder<C, F>(Self, F) -> FramedRead<T, C> where F: FnOnce(D) -> C","parent":null,"children":[],"decl_id":null,"docs":" Maps the decoder `D` to `C`, preserving the read buffer\n wrapped by `Framed`.\n","sig":null,"attributes":[{"value":"/ Maps the decoder `D` to `C`, preserving the read buffer","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":16280972,"byte_end":16281031,"line_start":111,"line_end":111,"column_start":5,"column_end":64}},{"value":"/ wrapped by `Framed`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":16281036,"byte_end":16281060,"line_start":112,"line_end":112,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":791},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":16281599,"byte_end":16281614,"line_start":133,"line_end":133,"column_start":12,"column_end":27},"name":"decoder_pin_mut","qualname":"<FramedRead<T, D>>::decoder_pin_mut","value":"fn decoder_pin_mut(Pin<&mut Self>) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":16281529,"byte_end":16281587,"line_start":132,"line_end":132,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":792},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":16281760,"byte_end":16281771,"line_start":138,"line_end":138,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<FramedRead<T, D>>::read_buffer","value":"fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":16281705,"byte_end":16281748,"line_start":137,"line_end":137,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":793},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":16281901,"byte_end":16281916,"line_start":143,"line_end":143,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<FramedRead<T, D>>::read_buffer_mut","value":"fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":16281838,"byte_end":16281889,"line_start":142,"line_end":142,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":798},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":16282179,"byte_end":16282188,"line_start":156,"line_end":156,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<FramedRead<T, D> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":39,"index":96},"children":[],"decl_id":{"krate":39,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":804},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":16282468,"byte_end":16282478,"line_start":168,"line_end":168,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"<FramedRead<T, D> as futures_sink::Sink>::poll_ready","value":"fn poll_ready(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":20},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":805},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":16282632,"byte_end":16282642,"line_start":172,"line_end":172,"column_start":8,"column_end":18},"name":"start_send","qualname":"<FramedRead<T, D> as futures_sink::Sink>::start_send","value":"fn start_send(Pin<&mut Self>, I) -> Result<(), Self::Error>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":21},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":806},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":16282779,"byte_end":16282789,"line_start":176,"line_end":176,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<FramedRead<T, D> as futures_sink::Sink>::poll_flush","value":"fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":22},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":807},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":16282943,"byte_end":16282953,"line_start":180,"line_end":180,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<FramedRead<T, D> as futures_sink::Sink>::poll_close","value":"fn poll_close(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":23},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":811},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":16283198,"byte_end":16283201,"line_start":190,"line_end":190,"column_start":8,"column_end":11},"name":"fmt","qualname":"<FramedRead<T, D> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1622},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":16284017,"byte_end":16284028,"line_start":19,"line_end":19,"column_start":16,"column_end":27},"name":"FramedWrite","qualname":"::codec::framed_write::FramedWrite","value":"FramedWrite {  }","parent":null,"children":[{"krate":0,"index":1625}],"decl_id":null,"docs":" A [`Sink`] of frames encoded to an `AsyncWrite`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":860},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":16284235,"byte_end":16284238,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedWrite<T, E>>::new","value":"fn new(T, E) -> FramedWrite<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedWrite` with the given `encoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedWrite` with the given `encoder`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":16284166,"byte_end":16284223,"line_start":29,"line_end":29,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":864},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":16284796,"byte_end":16284803,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedWrite<T, E>>::get_ref","value":"fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":16284508,"byte_end":16284571,"line_start":42,"line_end":42,"column_start":5,"column_end":68}},{"value":"/ `FramedWrite`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":16284576,"byte_end":16284594,"line_start":43,"line_end":43,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":16284599,"byte_end":16284602,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":16284607,"byte_end":16284682,"line_start":45,"line_end":45,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":16284687,"byte_end":16284757,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":16284762,"byte_end":16284784,"line_start":47,"line_end":47,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":865},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":16285152,"byte_end":16285159,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedWrite<T, E>>::get_mut","value":"fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":16284856,"byte_end":16284927,"line_start":52,"line_end":52,"column_start":5,"column_end":76}},{"value":"/ `FramedWrite`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":16284932,"byte_end":16284950,"line_start":53,"line_end":53,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":16284955,"byte_end":16284958,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":16284963,"byte_end":16285038,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":16285043,"byte_end":16285113,"line_start":56,"line_end":56,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":16285118,"byte_end":16285140,"line_start":57,"line_end":57,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":866},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":16285527,"byte_end":16285538,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedWrite<T, E>>::get_pin_mut","value":"fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":16285224,"byte_end":16285302,"line_start":62,"line_end":62,"column_start":5,"column_end":83}},{"value":"/ `FramedWrite`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":16285307,"byte_end":16285325,"line_start":63,"line_end":63,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":16285330,"byte_end":16285333,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":16285338,"byte_end":16285413,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":16285418,"byte_end":16285488,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":16285493,"byte_end":16285515,"line_start":67,"line_end":67,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":867},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":16285904,"byte_end":16285914,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedWrite<T, E>>::into_inner","value":"fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedWrite`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedWrite`, returning its underlying I/O stream.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":16285634,"byte_end":16285702,"line_start":72,"line_end":72,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":16285707,"byte_end":16285710,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":16285715,"byte_end":16285790,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":16285795,"byte_end":16285865,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":16285870,"byte_end":16285892,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":868},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":16286026,"byte_end":16286033,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"encoder","qualname":"<FramedWrite<T, E>>::encoder","value":"fn encoder(&Self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying encoder.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":16285964,"byte_end":16286014,"line_start":81,"line_end":81,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":869},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":16286156,"byte_end":16286167,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"encoder_mut","qualname":"<FramedWrite<T, E>>::encoder_mut","value":"fn encoder_mut(&mut Self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying encoder.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":16286086,"byte_end":16286144,"line_start":86,"line_end":86,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":870},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":16286333,"byte_end":16286344,"line_start":93,"line_end":93,"column_start":12,"column_end":23},"name":"map_encoder","qualname":"<FramedWrite<T, E>>::map_encoder","value":"fn map_encoder<C, F>(Self, F) -> FramedWrite<T, C> where F: FnOnce(E) -> C","parent":null,"children":[],"decl_id":null,"docs":" Maps the encoder `E` to `C`, preserving the write buffer\n wrapped by `Framed`.\n","sig":null,"attributes":[{"value":"/ Maps the encoder `E` to `C`, preserving the write buffer","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":16286232,"byte_end":16286292,"line_start":91,"line_end":91,"column_start":5,"column_end":65}},{"value":"/ wrapped by `Framed`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":16286297,"byte_end":16286321,"line_start":92,"line_end":92,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":873},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":16286862,"byte_end":16286877,"line_start":113,"line_end":113,"column_start":12,"column_end":27},"name":"encoder_pin_mut","qualname":"<FramedWrite<T, E>>::encoder_pin_mut","value":"fn encoder_pin_mut(Pin<&mut Self>) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying encoder.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":16286792,"byte_end":16286850,"line_start":112,"line_end":112,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":874},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":16287024,"byte_end":16287036,"line_start":118,"line_end":118,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<FramedWrite<T, E>>::write_buffer","value":"fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":16286968,"byte_end":16287012,"line_start":117,"line_end":117,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":875},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":16287167,"byte_end":16287183,"line_start":123,"line_end":123,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<FramedWrite<T, E>>::write_buffer_mut","value":"fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":16287103,"byte_end":16287155,"line_start":122,"line_end":122,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":881},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":16287470,"byte_end":16287480,"line_start":137,"line_end":137,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"<FramedWrite<T, E> as futures_sink::Sink>::poll_ready","value":"fn poll_ready(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":20},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":882},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":16287618,"byte_end":16287628,"line_start":141,"line_end":141,"column_start":8,"column_end":18},"name":"start_send","qualname":"<FramedWrite<T, E> as futures_sink::Sink>::start_send","value":"fn start_send(Pin<&mut Self>, I) -> Result<(), Self::Error>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":21},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":883},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":16287749,"byte_end":16287759,"line_start":145,"line_end":145,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<FramedWrite<T, E> as futures_sink::Sink>::poll_flush","value":"fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":22},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":884},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":16287897,"byte_end":16287907,"line_start":149,"line_end":149,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<FramedWrite<T, E> as futures_sink::Sink>::poll_close","value":"fn poll_close(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":23},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":889},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":16288189,"byte_end":16288198,"line_start":161,"line_end":161,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<FramedWrite<T, D> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":39,"index":96},"children":[],"decl_id":{"krate":39,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":893},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":16288438,"byte_end":16288441,"line_start":171,"line_end":171,"column_start":8,"column_end":11},"name":"fmt","qualname":"<FramedWrite<T, U> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":897},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"length_delimited","qualname":"::codec::length_delimited","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","parent":null,"children":[{"krate":0,"index":898},{"krate":0,"index":899},{"krate":0,"index":902},{"krate":0,"index":905},{"krate":0,"index":908},{"krate":0,"index":911},{"krate":0,"index":914},{"krate":0,"index":915},{"krate":0,"index":918},{"krate":0,"index":921},{"krate":0,"index":922},{"krate":0,"index":925},{"krate":0,"index":928},{"krate":0,"index":931},{"krate":0,"index":934},{"krate":0,"index":937},{"krate":0,"index":938},{"krate":0,"index":941},{"krate":0,"index":944},{"krate":0,"index":945},{"krate":0,"index":948},{"krate":0,"index":951},{"krate":0,"index":1194},{"krate":0,"index":1201},{"krate":0,"index":1203},{"krate":0,"index":1205},{"krate":0,"index":954},{"krate":0,"index":1206},{"krate":0,"index":1209},{"krate":0,"index":1211},{"krate":0,"index":1213},{"krate":0,"index":1219},{"krate":0,"index":1221},{"krate":0,"index":1223},{"krate":0,"index":956},{"krate":0,"index":963},{"krate":0,"index":967},{"krate":0,"index":971},{"krate":0,"index":973},{"krate":0,"index":980},{"krate":0,"index":1001},{"krate":0,"index":1003},{"krate":0,"index":1005},{"krate":0,"index":1007}],"decl_id":null,"docs":" Frame a stream of bytes based on a length prefix","sig":null,"attributes":[{"value":"/ Frame a stream of bytes based on a length prefix","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16288710,"byte_end":16288762,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16288763,"byte_end":16288766,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Many protocols delimit their frames by prefacing frame data with a","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16288767,"byte_end":16288837,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ frame head that specifies the length of the frame. The","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16288838,"byte_end":16288896,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"/ `length_delimited` module provides utilities for handling the length","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16288897,"byte_end":16288969,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ based framing. This allows the consumer to work with entire frames","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16288970,"byte_end":16289040,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ without having to worry about buffering or other framing logic.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16289041,"byte_end":16289108,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16289109,"byte_end":16289112,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Getting started","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16289113,"byte_end":16289134,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16289135,"byte_end":16289138,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ If implementing a protocol from scratch, using length delimited framing","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16289139,"byte_end":16289214,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ is an easy way to get started. [`LengthDelimitedCodec::new()`] will","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16289215,"byte_end":16289286,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ return a length delimited codec using default configuration values.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16289287,"byte_end":16289358,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ This can then be used to construct a framer to adapt a full-duplex","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16289359,"byte_end":16289429,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/ byte stream into a stream of frames.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16289430,"byte_end":16289470,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16289471,"byte_end":16289474,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16289475,"byte_end":16289482,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16289483,"byte_end":16289526,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16289527,"byte_end":16289585,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16289586,"byte_end":16289589,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ fn bind_transport<T: AsyncRead + AsyncWrite>(io: T)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16289590,"byte_end":16289645,"line_start":21,"line_end":21,"column_start":1,"column_end":56}},{"value":"/     -> Framed<T, LengthDelimitedCodec>","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16289646,"byte_end":16289688,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16289689,"byte_end":16289694,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/     Framed::new(io, LengthDelimitedCodec::new())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16289695,"byte_end":16289747,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16289748,"byte_end":16289753,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16289754,"byte_end":16289776,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16289777,"byte_end":16289784,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16289785,"byte_end":16289788,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The returned transport implements `Sink + Stream` for `BytesMut`. It","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16289789,"byte_end":16289861,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ encodes the frame with a big-endian `u32` header denoting the frame","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16289862,"byte_end":16289933,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"/ payload length:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16289934,"byte_end":16289953,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16289954,"byte_end":16289957,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16289958,"byte_end":16289969,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16289970,"byte_end":16290019,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ | len: u32 |          frame payload         |","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16290020,"byte_end":16290069,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16290070,"byte_end":16290119,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16290120,"byte_end":16290127,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16290128,"byte_end":16290131,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Specifically, given the following:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16290132,"byte_end":16290170,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16290171,"byte_end":16290174,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16290175,"byte_end":16290182,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16290183,"byte_end":16290226,"line_start":42,"line_end":42,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16290227,"byte_end":16290285,"line_start":43,"line_end":43,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16290286,"byte_end":16290289,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ use futures::SinkExt;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16290290,"byte_end":16290315,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16290316,"byte_end":16290337,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16290338,"byte_end":16290341,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ async fn write_frame<T>(io: T) -> Result<(), Box<dyn std::error::Error>>","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16290342,"byte_end":16290418,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"/ where","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16290419,"byte_end":16290428,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"/     T: AsyncRead + AsyncWrite + Unpin,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16290429,"byte_end":16290471,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16290472,"byte_end":16290477,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/     let mut transport = Framed::new(io, LengthDelimitedCodec::new());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16290478,"byte_end":16290551,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/     let frame = Bytes::from(\"hello world\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16290552,"byte_end":16290599,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16290600,"byte_end":16290603,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     transport.send(frame).await?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16290604,"byte_end":16290641,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"/     Ok(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16290642,"byte_end":16290656,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16290657,"byte_end":16290662,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16290663,"byte_end":16290670,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16290671,"byte_end":16290674,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The encoded frame will look like this:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16290675,"byte_end":16290717,"line_start":60,"line_end":60,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16290718,"byte_end":16290721,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16290722,"byte_end":16290733,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"/ +---- len: u32 ----+---- data ----+","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16290734,"byte_end":16290773,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/ | \\x00\\x00\\x00\\x0b |  hello world |","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16290774,"byte_end":16290813,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/ +------------------+--------------+","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16290814,"byte_end":16290853,"line_start":65,"line_end":65,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16290854,"byte_end":16290861,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16290862,"byte_end":16290865,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # Decoding","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16290866,"byte_end":16290880,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16290881,"byte_end":16290884,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`FramedRead`] adapts an [`AsyncRead`] into a `Stream` of [`BytesMut`],","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16290885,"byte_end":16290960,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/ such that each yielded [`BytesMut`] value contains the contents of an","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16290961,"byte_end":16291034,"line_start":71,"line_end":71,"column_start":1,"column_end":74}},{"value":"/ entire frame. There are many configuration parameters enabling","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16291035,"byte_end":16291101,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/ [`FramedRead`] to handle a wide range of protocols. Here are some","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16291102,"byte_end":16291171,"line_start":73,"line_end":73,"column_start":1,"column_end":70}},{"value":"/ examples that will cover the various options at a high level.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16291172,"byte_end":16291237,"line_start":74,"line_end":74,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16291238,"byte_end":16291241,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ## Example 1","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16291242,"byte_end":16291258,"line_start":76,"line_end":76,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16291259,"byte_end":16291262,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16291263,"byte_end":16291339,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16291340,"byte_end":16291381,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16291382,"byte_end":16291385,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16291386,"byte_end":16291393,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16291394,"byte_end":16291425,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16291426,"byte_end":16291476,"line_start":83,"line_end":83,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16291477,"byte_end":16291518,"line_start":84,"line_end":84,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16291519,"byte_end":16291554,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16291555,"byte_end":16291603,"line_start":86,"line_end":86,"column_start":1,"column_end":49}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16291604,"byte_end":16291639,"line_start":87,"line_end":87,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16291640,"byte_end":16291688,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0) // Do not strip frame header","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16291689,"byte_end":16291738,"line_start":89,"line_end":89,"column_start":1,"column_end":50}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16291739,"byte_end":16291761,"line_start":90,"line_end":90,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16291762,"byte_end":16291769,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16291770,"byte_end":16291792,"line_start":92,"line_end":92,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16291793,"byte_end":16291800,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16291801,"byte_end":16291804,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16291805,"byte_end":16291853,"line_start":95,"line_end":95,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16291854,"byte_end":16291857,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16291858,"byte_end":16291869,"line_start":97,"line_end":97,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16291870,"byte_end":16291922,"line_start":98,"line_end":98,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16291923,"byte_end":16291988,"line_start":99,"line_end":99,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0B |  Hello world  | --> | \\x00\\x0B |  Hello world  |","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16291989,"byte_end":16292054,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16292055,"byte_end":16292120,"line_start":101,"line_end":101,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16292121,"byte_end":16292128,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16292129,"byte_end":16292132,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ The value of the length field is 11 (`\\x0B`) which represents the length","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16292133,"byte_end":16292209,"line_start":104,"line_end":104,"column_start":1,"column_end":77}},{"value":"/ of the payload, `hello world`. By default, [`FramedRead`] assumes that","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16292210,"byte_end":16292284,"line_start":105,"line_end":105,"column_start":1,"column_end":75}},{"value":"/ the length field represents the number of bytes that **follows** the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16292285,"byte_end":16292357,"line_start":106,"line_end":106,"column_start":1,"column_end":73}},{"value":"/ length field. Thus, the entire frame has a length of 13: 2 bytes for the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16292358,"byte_end":16292434,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/ frame head + 11 bytes for the payload.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16292435,"byte_end":16292477,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16292478,"byte_end":16292481,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ## Example 2","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16292482,"byte_end":16292498,"line_start":110,"line_end":110,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16292499,"byte_end":16292502,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, omitting the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16292503,"byte_end":16292578,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16292579,"byte_end":16292620,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16292621,"byte_end":16292624,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16292625,"byte_end":16292632,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16292633,"byte_end":16292664,"line_start":116,"line_end":116,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16292665,"byte_end":16292715,"line_start":117,"line_end":117,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16292716,"byte_end":16292757,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16292758,"byte_end":16292793,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16292794,"byte_end":16292842,"line_start":120,"line_end":120,"column_start":1,"column_end":49}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16292843,"byte_end":16292878,"line_start":121,"line_end":121,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16292879,"byte_end":16292927,"line_start":122,"line_end":122,"column_start":1,"column_end":49}},{"value":"/     // `num_skip` is not needed, the default is to skip","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16292928,"byte_end":16292987,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16292988,"byte_end":16293010,"line_start":124,"line_end":124,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16293011,"byte_end":16293018,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16293019,"byte_end":16293041,"line_start":126,"line_end":126,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16293042,"byte_end":16293049,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16293050,"byte_end":16293053,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16293054,"byte_end":16293102,"line_start":129,"line_end":129,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16293103,"byte_end":16293106,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16293107,"byte_end":16293118,"line_start":131,"line_end":131,"column_start":1,"column_end":12}},{"value":"/          INPUT                        DECODED","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16293119,"byte_end":16293168,"line_start":132,"line_end":132,"column_start":1,"column_end":50}},{"value":"/ +-- len ---+--- Payload ---+     +--- Payload ---+","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16293169,"byte_end":16293223,"line_start":133,"line_end":133,"column_start":1,"column_end":55}},{"value":"/ | \\x00\\x0B |  Hello world  | --> |  Hello world  |","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16293224,"byte_end":16293278,"line_start":134,"line_end":134,"column_start":1,"column_end":55}},{"value":"/ +----------+---------------+     +---------------+","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16293279,"byte_end":16293333,"line_start":135,"line_end":135,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16293334,"byte_end":16293341,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16293342,"byte_end":16293345,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This is similar to the first example, the only difference is that the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16293346,"byte_end":16293419,"line_start":138,"line_end":138,"column_start":1,"column_end":74}},{"value":"/ frame head is **not** included in the yielded `BytesMut` value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16293420,"byte_end":16293487,"line_start":139,"line_end":139,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16293488,"byte_end":16293491,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ ## Example 3","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16293492,"byte_end":16293508,"line_start":141,"line_end":141,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16293509,"byte_end":16293512,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16293513,"byte_end":16293589,"line_start":143,"line_end":143,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`. In this case, the length field","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16293590,"byte_end":16293662,"line_start":144,"line_end":144,"column_start":1,"column_end":73}},{"value":"/ **includes** the frame head length.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16293663,"byte_end":16293702,"line_start":145,"line_end":145,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16293703,"byte_end":16293706,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16293707,"byte_end":16293714,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16293715,"byte_end":16293746,"line_start":148,"line_end":148,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16293747,"byte_end":16293797,"line_start":149,"line_end":149,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16293798,"byte_end":16293839,"line_start":150,"line_end":150,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16293840,"byte_end":16293875,"line_start":151,"line_end":151,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16293876,"byte_end":16293924,"line_start":152,"line_end":152,"column_start":1,"column_end":49}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16293925,"byte_end":16293960,"line_start":153,"line_end":153,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(-2)  // size of head","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16293961,"byte_end":16294008,"line_start":154,"line_end":154,"column_start":1,"column_end":48}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16294009,"byte_end":16294029,"line_start":155,"line_end":155,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16294030,"byte_end":16294052,"line_start":156,"line_end":156,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16294053,"byte_end":16294060,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16294061,"byte_end":16294083,"line_start":158,"line_end":158,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16294084,"byte_end":16294091,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16294092,"byte_end":16294095,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16294096,"byte_end":16294144,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16294145,"byte_end":16294148,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16294149,"byte_end":16294160,"line_start":163,"line_end":163,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16294161,"byte_end":16294213,"line_start":164,"line_end":164,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16294214,"byte_end":16294279,"line_start":165,"line_end":165,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0D |  Hello world  | --> | \\x00\\x0D |  Hello world  |","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16294280,"byte_end":16294345,"line_start":166,"line_end":166,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16294346,"byte_end":16294411,"line_start":167,"line_end":167,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16294412,"byte_end":16294419,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16294420,"byte_end":16294423,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ In most cases, the length field represents the length of the payload","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16294424,"byte_end":16294496,"line_start":170,"line_end":170,"column_start":1,"column_end":73}},{"value":"/ only, as shown in the previous examples. However, in some protocols the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16294497,"byte_end":16294572,"line_start":171,"line_end":171,"column_start":1,"column_end":76}},{"value":"/ length field represents the length of the whole frame, including the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16294573,"byte_end":16294645,"line_start":172,"line_end":172,"column_start":1,"column_end":73}},{"value":"/ head. In such cases, we specify a negative `length_adjustment` to adjust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16294646,"byte_end":16294722,"line_start":173,"line_end":173,"column_start":1,"column_end":77}},{"value":"/ the value provided in the frame head to represent the payload length.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16294723,"byte_end":16294796,"line_start":174,"line_end":174,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16294797,"byte_end":16294800,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ ## Example 4","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16294801,"byte_end":16294817,"line_start":176,"line_end":176,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16294818,"byte_end":16294821,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 5 byte","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16294822,"byte_end":16294896,"line_start":178,"line_end":178,"column_start":1,"column_end":75}},{"value":"/ frame head, including the frame head in the yielded `BytesMut`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16294897,"byte_end":16294964,"line_start":179,"line_end":179,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16294965,"byte_end":16294968,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16294969,"byte_end":16294976,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16294977,"byte_end":16295008,"line_start":182,"line_end":182,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16295009,"byte_end":16295059,"line_start":183,"line_end":183,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16295060,"byte_end":16295101,"line_start":184,"line_end":184,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16295102,"byte_end":16295137,"line_start":185,"line_end":185,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16295138,"byte_end":16295186,"line_start":186,"line_end":186,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16295187,"byte_end":16295218,"line_start":187,"line_end":187,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(2)  // remaining head","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16295219,"byte_end":16295267,"line_start":188,"line_end":188,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16295268,"byte_end":16295288,"line_start":189,"line_end":189,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16295289,"byte_end":16295311,"line_start":190,"line_end":190,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16295312,"byte_end":16295319,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16295320,"byte_end":16295342,"line_start":192,"line_end":192,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16295343,"byte_end":16295350,"line_start":193,"line_end":193,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16295351,"byte_end":16295354,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16295355,"byte_end":16295403,"line_start":195,"line_end":195,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16295404,"byte_end":16295407,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16295408,"byte_end":16295419,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16295420,"byte_end":16295446,"line_start":198,"line_end":198,"column_start":1,"column_end":27}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16295447,"byte_end":16295492,"line_start":199,"line_end":199,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16295493,"byte_end":16295538,"line_start":200,"line_end":200,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16295539,"byte_end":16295584,"line_start":201,"line_end":201,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16295585,"byte_end":16295588,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/                  DECODED","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16295589,"byte_end":16295617,"line_start":203,"line_end":203,"column_start":1,"column_end":29}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16295618,"byte_end":16295663,"line_start":204,"line_end":204,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16295664,"byte_end":16295709,"line_start":205,"line_end":205,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16295710,"byte_end":16295755,"line_start":206,"line_end":206,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16295756,"byte_end":16295763,"line_start":207,"line_end":207,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16295764,"byte_end":16295767,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ A more advanced example that shows a case where there is extra frame","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16295768,"byte_end":16295840,"line_start":209,"line_end":209,"column_start":1,"column_end":73}},{"value":"/ head data between the length field and the payload. In such cases, it is","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16295841,"byte_end":16295917,"line_start":210,"line_end":210,"column_start":1,"column_end":77}},{"value":"/ usually desirable to include the frame head as part of the yielded","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16295918,"byte_end":16295988,"line_start":211,"line_end":211,"column_start":1,"column_end":71}},{"value":"/ `BytesMut`. This lets consumers of the length delimited framer to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16295989,"byte_end":16296058,"line_start":212,"line_end":212,"column_start":1,"column_end":70}},{"value":"/ process the frame head as needed.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16296059,"byte_end":16296096,"line_start":213,"line_end":213,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16296097,"byte_end":16296100,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ The positive `length_adjustment` value lets `FramedRead` factor in the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16296101,"byte_end":16296175,"line_start":215,"line_end":215,"column_start":1,"column_end":75}},{"value":"/ additional head into the frame length calculation.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16296176,"byte_end":16296230,"line_start":216,"line_end":216,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16296231,"byte_end":16296234,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ ## Example 5","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16296235,"byte_end":16296251,"line_start":218,"line_end":218,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16296252,"byte_end":16296255,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16296256,"byte_end":16296329,"line_start":220,"line_end":220,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16296330,"byte_end":16296406,"line_start":221,"line_end":221,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16296407,"byte_end":16296481,"line_start":222,"line_end":222,"column_start":1,"column_end":75}},{"value":"/ included.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16296482,"byte_end":16296495,"line_start":223,"line_end":223,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16296496,"byte_end":16296499,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16296500,"byte_end":16296507,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16296508,"byte_end":16296539,"line_start":226,"line_end":226,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16296540,"byte_end":16296590,"line_start":227,"line_end":227,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16296591,"byte_end":16296632,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16296633,"byte_end":16296668,"line_start":229,"line_end":229,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16296669,"byte_end":16296718,"line_start":230,"line_end":230,"column_start":1,"column_end":50}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16296719,"byte_end":16296754,"line_start":231,"line_end":231,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(1)  // length of hdr2","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16296755,"byte_end":16296803,"line_start":232,"line_end":232,"column_start":1,"column_end":49}},{"value":"/     .num_skip(3) // length of hdr1 + LEN","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16296804,"byte_end":16296848,"line_start":233,"line_end":233,"column_start":1,"column_end":45}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16296849,"byte_end":16296871,"line_start":234,"line_end":234,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16296872,"byte_end":16296879,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16296880,"byte_end":16296902,"line_start":236,"line_end":236,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16296903,"byte_end":16296910,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16296911,"byte_end":16296914,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16296915,"byte_end":16296963,"line_start":239,"line_end":239,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16296964,"byte_end":16296967,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16296968,"byte_end":16296979,"line_start":241,"line_end":241,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16296980,"byte_end":16297006,"line_start":242,"line_end":242,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16297007,"byte_end":16297057,"line_start":243,"line_end":243,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0B |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16297058,"byte_end":16297108,"line_start":244,"line_end":244,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16297109,"byte_end":16297159,"line_start":245,"line_end":245,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16297160,"byte_end":16297163,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16297164,"byte_end":16297184,"line_start":247,"line_end":247,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16297185,"byte_end":16297215,"line_start":248,"line_end":248,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16297216,"byte_end":16297246,"line_start":249,"line_end":249,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16297247,"byte_end":16297277,"line_start":250,"line_end":250,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16297278,"byte_end":16297285,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16297286,"byte_end":16297289,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ The length field is situated in the middle of the frame head. In this","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16297290,"byte_end":16297363,"line_start":253,"line_end":253,"column_start":1,"column_end":74}},{"value":"/ case, the first byte in the frame head could be a version or some other","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16297364,"byte_end":16297439,"line_start":254,"line_end":254,"column_start":1,"column_end":76}},{"value":"/ identifier that is not needed for processing. On the other hand, the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16297440,"byte_end":16297512,"line_start":255,"line_end":255,"column_start":1,"column_end":73}},{"value":"/ second half of the head is needed.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16297513,"byte_end":16297551,"line_start":256,"line_end":256,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16297552,"byte_end":16297555,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ `length_field_offset` indicates how many bytes to skip before starting","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16297556,"byte_end":16297630,"line_start":258,"line_end":258,"column_start":1,"column_end":75}},{"value":"/ to read the length field.  `length_adjustment` is the number of bytes to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16297631,"byte_end":16297707,"line_start":259,"line_end":259,"column_start":1,"column_end":77}},{"value":"/ skip starting at the end of the length field. In this case, it is the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16297708,"byte_end":16297781,"line_start":260,"line_end":260,"column_start":1,"column_end":74}},{"value":"/ second half of the head.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16297782,"byte_end":16297810,"line_start":261,"line_end":261,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16297811,"byte_end":16297814,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ ## Example 6","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16297815,"byte_end":16297831,"line_start":263,"line_end":263,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16297832,"byte_end":16297835,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16297836,"byte_end":16297909,"line_start":265,"line_end":265,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16297910,"byte_end":16297986,"line_start":266,"line_end":266,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16297987,"byte_end":16298061,"line_start":267,"line_end":267,"column_start":1,"column_end":75}},{"value":"/ included. In this case, the length field **includes** the frame head","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16298062,"byte_end":16298134,"line_start":268,"line_end":268,"column_start":1,"column_end":73}},{"value":"/ length.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16298135,"byte_end":16298146,"line_start":269,"line_end":269,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16298147,"byte_end":16298150,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16298151,"byte_end":16298158,"line_start":271,"line_end":271,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16298159,"byte_end":16298190,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16298191,"byte_end":16298241,"line_start":273,"line_end":273,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16298242,"byte_end":16298283,"line_start":274,"line_end":274,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16298284,"byte_end":16298319,"line_start":275,"line_end":275,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16298320,"byte_end":16298369,"line_start":276,"line_end":276,"column_start":1,"column_end":50}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16298370,"byte_end":16298405,"line_start":277,"line_end":277,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(-3)  // length of hdr1 + LEN, negative","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16298406,"byte_end":16298471,"line_start":278,"line_end":278,"column_start":1,"column_end":66}},{"value":"/     .num_skip(3)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16298472,"byte_end":16298492,"line_start":279,"line_end":279,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16298493,"byte_end":16298515,"line_start":280,"line_end":280,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16298516,"byte_end":16298523,"line_start":281,"line_end":281,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16298524,"byte_end":16298531,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16298532,"byte_end":16298535,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16298536,"byte_end":16298584,"line_start":284,"line_end":284,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16298585,"byte_end":16298588,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16298589,"byte_end":16298600,"line_start":286,"line_end":286,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16298601,"byte_end":16298627,"line_start":287,"line_end":287,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16298628,"byte_end":16298678,"line_start":288,"line_end":288,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0F |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16298679,"byte_end":16298729,"line_start":289,"line_end":289,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16298730,"byte_end":16298780,"line_start":290,"line_end":290,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16298781,"byte_end":16298784,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16298785,"byte_end":16298805,"line_start":292,"line_end":292,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16298806,"byte_end":16298836,"line_start":293,"line_end":293,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16298837,"byte_end":16298867,"line_start":294,"line_end":294,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16298868,"byte_end":16298898,"line_start":295,"line_end":295,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16298899,"byte_end":16298906,"line_start":296,"line_end":296,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16298907,"byte_end":16298910,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ Similar to the example above, the difference is that the length field","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16298911,"byte_end":16298984,"line_start":298,"line_end":298,"column_start":1,"column_end":74}},{"value":"/ represents the length of the entire frame instead of just the payload.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16298985,"byte_end":16299059,"line_start":299,"line_end":299,"column_start":1,"column_end":75}},{"value":"/ The length of `hdr1` and `len` must be counted in `length_adjustment`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16299060,"byte_end":16299134,"line_start":300,"line_end":300,"column_start":1,"column_end":75}},{"value":"/ Note that the length of `hdr2` does **not** need to be explicitly set","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16299135,"byte_end":16299208,"line_start":301,"line_end":301,"column_start":1,"column_end":74}},{"value":"/ anywhere because it already is factored into the total frame length that","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16299209,"byte_end":16299285,"line_start":302,"line_end":302,"column_start":1,"column_end":77}},{"value":"/ is read from the byte stream.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16299286,"byte_end":16299319,"line_start":303,"line_end":303,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16299320,"byte_end":16299323,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ ## Example 7","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16299324,"byte_end":16299340,"line_start":305,"line_end":305,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16299341,"byte_end":16299344,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 4 byte","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16299345,"byte_end":16299419,"line_start":307,"line_end":307,"column_start":1,"column_end":75}},{"value":"/ frame head, excluding the 4th byte from the yielded `BytesMut`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16299420,"byte_end":16299487,"line_start":308,"line_end":308,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16299488,"byte_end":16299491,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16299492,"byte_end":16299499,"line_start":310,"line_end":310,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16299500,"byte_end":16299531,"line_start":311,"line_end":311,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16299532,"byte_end":16299582,"line_start":312,"line_end":312,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16299583,"byte_end":16299624,"line_start":313,"line_end":313,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16299625,"byte_end":16299660,"line_start":314,"line_end":314,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16299661,"byte_end":16299709,"line_start":315,"line_end":315,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16299710,"byte_end":16299741,"line_start":316,"line_end":316,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)  // default value","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16299742,"byte_end":16299789,"line_start":317,"line_end":317,"column_start":1,"column_end":48}},{"value":"/     .num_skip(4) // skip the first 4 bytes","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16299790,"byte_end":16299836,"line_start":318,"line_end":318,"column_start":1,"column_end":47}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16299837,"byte_end":16299859,"line_start":319,"line_end":319,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16299860,"byte_end":16299867,"line_start":320,"line_end":320,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16299868,"byte_end":16299890,"line_start":321,"line_end":321,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16299891,"byte_end":16299898,"line_start":322,"line_end":322,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16299899,"byte_end":16299902,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16299903,"byte_end":16299951,"line_start":324,"line_end":324,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16299952,"byte_end":16299955,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16299956,"byte_end":16299967,"line_start":326,"line_end":326,"column_start":1,"column_end":12}},{"value":"/                  INPUT                       DECODED","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16299968,"byte_end":16300024,"line_start":327,"line_end":327,"column_start":1,"column_end":57}},{"value":"/ +------- len ------+--- Payload ---+    +--- Payload ---+","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16300025,"byte_end":16300086,"line_start":328,"line_end":328,"column_start":1,"column_end":62}},{"value":"/ | \\x00\\x00\\x0B\\xFF |  Hello world  | => |  Hello world  |","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16300087,"byte_end":16300148,"line_start":329,"line_end":329,"column_start":1,"column_end":62}},{"value":"/ +------------------+---------------+    +---------------+","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16300149,"byte_end":16300210,"line_start":330,"line_end":330,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16300211,"byte_end":16300218,"line_start":331,"line_end":331,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16300219,"byte_end":16300222,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ A simple example where there are unused bytes between the length field","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16300223,"byte_end":16300297,"line_start":333,"line_end":333,"column_start":1,"column_end":75}},{"value":"/ and the payload.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16300298,"byte_end":16300318,"line_start":334,"line_end":334,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16300319,"byte_end":16300322,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ # Encoding","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16300323,"byte_end":16300337,"line_start":336,"line_end":336,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16300338,"byte_end":16300341,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`] adapts an [`AsyncWrite`] into a `Sink` of [`BytesMut`],","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16300342,"byte_end":16300417,"line_start":338,"line_end":338,"column_start":1,"column_end":76}},{"value":"/ such that each submitted [`BytesMut`] is prefaced by a length field.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16300418,"byte_end":16300490,"line_start":339,"line_end":339,"column_start":1,"column_end":73}},{"value":"/ There are fewer configuration options than [`FramedRead`]. Given","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16300491,"byte_end":16300559,"line_start":340,"line_end":340,"column_start":1,"column_end":69}},{"value":"/ protocols that have more complex frame heads, an encoder should probably","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16300560,"byte_end":16300636,"line_start":341,"line_end":341,"column_start":1,"column_end":77}},{"value":"/ be written by hand using [`Encoder`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16300637,"byte_end":16300678,"line_start":342,"line_end":342,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16300679,"byte_end":16300682,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ Here is a simple example, given a `FramedWrite` with the following","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16300683,"byte_end":16300753,"line_start":344,"line_end":344,"column_start":1,"column_end":71}},{"value":"/ configuration:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16300754,"byte_end":16300772,"line_start":345,"line_end":345,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16300773,"byte_end":16300776,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16300777,"byte_end":16300784,"line_start":347,"line_end":347,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16300785,"byte_end":16300817,"line_start":348,"line_end":348,"column_start":1,"column_end":33}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16300818,"byte_end":16300868,"line_start":349,"line_end":349,"column_start":1,"column_end":51}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16300869,"byte_end":16300913,"line_start":350,"line_end":350,"column_start":1,"column_end":45}},{"value":"/ # let _ =","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16300914,"byte_end":16300927,"line_start":351,"line_end":351,"column_start":1,"column_end":14}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16300928,"byte_end":16300963,"line_start":352,"line_end":352,"column_start":1,"column_end":36}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16300964,"byte_end":16300999,"line_start":353,"line_end":353,"column_start":1,"column_end":36}},{"value":"/     .new_write(io);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16301000,"byte_end":16301023,"line_start":354,"line_end":354,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16301024,"byte_end":16301031,"line_start":355,"line_end":355,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16301032,"byte_end":16301054,"line_start":356,"line_end":356,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16301055,"byte_end":16301062,"line_start":357,"line_end":357,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16301063,"byte_end":16301066,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ A payload of `hello world` will be encoded as:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16301067,"byte_end":16301117,"line_start":359,"line_end":359,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16301118,"byte_end":16301121,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16301122,"byte_end":16301133,"line_start":361,"line_end":361,"column_start":1,"column_end":12}},{"value":"/ +- len: u16 -+---- data ----+","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16301134,"byte_end":16301167,"line_start":362,"line_end":362,"column_start":1,"column_end":34}},{"value":"/ |  \\x00\\x0b  |  hello world |","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16301168,"byte_end":16301201,"line_start":363,"line_end":363,"column_start":1,"column_end":34}},{"value":"/ +------------+--------------+","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16301202,"byte_end":16301235,"line_start":364,"line_end":364,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16301236,"byte_end":16301243,"line_start":365,"line_end":365,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16301244,"byte_end":16301247,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ [`LengthDelimitedCodec::new()`]: method@LengthDelimitedCodec::new","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16301248,"byte_end":16301317,"line_start":367,"line_end":367,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]: struct@FramedRead","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16301318,"byte_end":16301355,"line_start":368,"line_end":368,"column_start":1,"column_end":38}},{"value":"/ [`FramedWrite`]: struct@FramedWrite","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16301356,"byte_end":16301395,"line_start":369,"line_end":369,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: trait@tokio::io::AsyncRead","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16301396,"byte_end":16301441,"line_start":370,"line_end":370,"column_start":1,"column_end":46}},{"value":"/ [`AsyncWrite`]: trait@tokio::io::AsyncWrite","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16301442,"byte_end":16301489,"line_start":371,"line_end":371,"column_start":1,"column_end":48}},{"value":"/ [`Encoder`]: trait@Encoder","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16301490,"byte_end":16301520,"line_start":372,"line_end":372,"column_start":1,"column_end":31}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16301521,"byte_end":16301554,"line_start":373,"line_end":373,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1194},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16302121,"byte_end":16302128,"line_start":390,"line_end":390,"column_start":12,"column_end":19},"name":"Builder","qualname":"::codec::length_delimited::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":1195},{"krate":0,"index":1196},{"krate":0,"index":1197},{"krate":0,"index":1198},{"krate":0,"index":1199},{"krate":0,"index":1200}],"decl_id":null,"docs":" Configure length delimited `LengthDelimitedCodec`s.","sig":null,"attributes":[{"value":"/ Configure length delimited `LengthDelimitedCodec`s.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16301803,"byte_end":16301858,"line_start":384,"line_end":384,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16301859,"byte_end":16301862,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ `Builder` enables constructing configured length delimited codecs. Note","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16301863,"byte_end":16301938,"line_start":386,"line_end":386,"column_start":1,"column_end":76}},{"value":"/ that not all configuration settings apply to both encoding and decoding. See","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16301939,"byte_end":16302019,"line_start":387,"line_end":387,"column_start":1,"column_end":81}},{"value":"/ the documentation for specific methods for more detail.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16302020,"byte_end":16302079,"line_start":388,"line_end":388,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":954},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16302799,"byte_end":16302824,"line_start":412,"line_end":412,"column_start":12,"column_end":37},"name":"LengthDelimitedCodecError","qualname":"::codec::length_delimited::LengthDelimitedCodecError","value":"LengthDelimitedCodecError {  }","parent":null,"children":[{"krate":0,"index":955}],"decl_id":null,"docs":" An error when the number of bytes read is more than max frame length.\n","sig":null,"attributes":[{"value":"/ An error when the number of bytes read is more than max frame length.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16302714,"byte_end":16302787,"line_start":411,"line_end":411,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1206},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16303176,"byte_end":16303196,"line_start":425,"line_end":425,"column_start":12,"column_end":32},"name":"LengthDelimitedCodec","qualname":"::codec::length_delimited::LengthDelimitedCodec","value":"LengthDelimitedCodec {  }","parent":null,"children":[{"krate":0,"index":1207},{"krate":0,"index":1208}],"decl_id":null,"docs":" A codec for frames delimited by a frame head specifying their lengths.","sig":null,"attributes":[{"value":"/ A codec for frames delimited by a frame head specifying their lengths.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16302845,"byte_end":16302919,"line_start":416,"line_end":416,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16302920,"byte_end":16302923,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ This allows the consumer to work with entire frames without having to worry","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16302924,"byte_end":16303003,"line_start":418,"line_end":418,"column_start":1,"column_end":80}},{"value":"/ about buffering or other framing logic.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16303004,"byte_end":16303047,"line_start":419,"line_end":419,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16303048,"byte_end":16303051,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ See [module level] documentation for more detail.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16303052,"byte_end":16303105,"line_start":421,"line_end":421,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16303106,"byte_end":16303109,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ [module level]: index.html","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16303110,"byte_end":16303140,"line_start":423,"line_end":423,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":957},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16303540,"byte_end":16303543,"line_start":443,"line_end":443,"column_start":12,"column_end":15},"name":"new","qualname":"<LengthDelimitedCodec>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `LengthDelimitedCodec` with the default configuration values.\n","sig":null,"attributes":[{"value":"/ Creates a new `LengthDelimitedCodec` with the default configuration values.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16303449,"byte_end":16303528,"line_start":442,"line_end":442,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":958},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16303770,"byte_end":16303777,"line_start":452,"line_end":452,"column_start":12,"column_end":19},"name":"builder","qualname":"<LengthDelimitedCodec>::builder","value":"fn builder() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.\n","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16303667,"byte_end":16303742,"line_start":450,"line_end":450,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16303747,"byte_end":16303758,"line_start":451,"line_end":451,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":959},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16303999,"byte_end":16304015,"line_start":460,"line_end":460,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<LengthDelimitedCodec>::max_frame_length","value":"fn max_frame_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current max frame setting","sig":null,"attributes":[{"value":"/ Returns the current max frame setting","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16303827,"byte_end":16303868,"line_start":456,"line_end":456,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16303873,"byte_end":16303876,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ This is the largest size this codec will accept from the wire. Larger","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16303881,"byte_end":16303954,"line_start":458,"line_end":458,"column_start":5,"column_end":78}},{"value":"/ frames will be rejected.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16303959,"byte_end":16303987,"line_start":459,"line_end":459,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":960},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16304436,"byte_end":16304456,"line_start":470,"line_end":470,"column_start":12,"column_end":32},"name":"set_max_frame_length","qualname":"<LengthDelimitedCodec>::set_max_frame_length","value":"fn set_max_frame_length(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Updates the max frame setting.","sig":null,"attributes":[{"value":"/ Updates the max frame setting.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16304080,"byte_end":16304114,"line_start":464,"line_end":464,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16304119,"byte_end":16304122,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ The change takes effect the next time a frame is decoded. In other","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16304127,"byte_end":16304197,"line_start":466,"line_end":466,"column_start":5,"column_end":75}},{"value":"/ words, if a frame is currently in process of being decoded with a frame","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16304202,"byte_end":16304277,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ size greater than `val` but less than the max frame length in effect","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16304282,"byte_end":16304354,"line_start":468,"line_end":468,"column_start":5,"column_end":77}},{"value":"/ before calling this function, then the frame will be allowed.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16304359,"byte_end":16304424,"line_start":469,"line_end":469,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":966},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16306861,"byte_end":16306867,"line_start":553,"line_end":553,"column_start":8,"column_end":14},"name":"decode","qualname":"<LengthDelimitedCodec as codec::decoder::Decoder>::decode","value":"fn decode(&mut Self, &mut BytesMut) -> io::Result<Option<BytesMut>>","parent":{"krate":0,"index":492},"children":[],"decl_id":{"krate":0,"index":495},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":969},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16307741,"byte_end":16307747,"line_start":583,"line_end":583,"column_start":8,"column_end":14},"name":"encode","qualname":"<LengthDelimitedCodec as codec::encoder::Encoder>::encode","value":"fn encode(&mut Self, Bytes, &mut BytesMut) -> Result<(), io::Error>","parent":{"krate":0,"index":509},"children":[],"decl_id":{"krate":0,"index":512},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":972},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16309073,"byte_end":16309080,"line_start":625,"line_end":625,"column_start":8,"column_end":15},"name":"default","qualname":"<LengthDelimitedCodec as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":974},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16309245,"byte_end":16309260,"line_start":634,"line_end":634,"column_start":15,"column_end":30},"name":"LengthFieldType","qualname":"::codec::length_delimited::builder::LengthFieldType","value":"LengthFieldType","parent":null,"children":[],"decl_id":null,"docs":" Types that can be used with `Builder::length_field_type`.\n","sig":null,"attributes":[{"value":"/ Types that can be used with `Builder::length_field_type`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16309169,"byte_end":16309230,"line_start":633,"line_end":633,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":981},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16310185,"byte_end":16310188,"line_start":670,"line_end":670,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16309639,"byte_end":16309714,"line_start":651,"line_end":651,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16309719,"byte_end":16309730,"line_start":652,"line_end":652,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16309735,"byte_end":16309738,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16309743,"byte_end":16309757,"line_start":654,"line_end":654,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16309762,"byte_end":16309765,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16309770,"byte_end":16309777,"line_start":656,"line_end":656,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16309782,"byte_end":16309813,"line_start":657,"line_end":657,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16309818,"byte_end":16309866,"line_start":658,"line_end":658,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16309871,"byte_end":16309874,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16309879,"byte_end":16309920,"line_start":660,"line_end":660,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16309925,"byte_end":16309960,"line_start":661,"line_end":661,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16309965,"byte_end":16309996,"line_start":662,"line_end":662,"column_start":5,"column_end":36}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16310001,"byte_end":16310036,"line_start":663,"line_end":663,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16310041,"byte_end":16310070,"line_start":664,"line_end":664,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16310075,"byte_end":16310095,"line_start":665,"line_end":665,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16310100,"byte_end":16310122,"line_start":666,"line_end":666,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16310127,"byte_end":16310134,"line_start":667,"line_end":667,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16310139,"byte_end":16310161,"line_start":668,"line_end":668,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16310166,"byte_end":16310173,"line_start":669,"line_end":669,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":982},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16311373,"byte_end":16311383,"line_start":711,"line_end":711,"column_start":12,"column_end":22},"name":"big_endian","qualname":"<Builder>::big_endian","value":"fn big_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a big endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a big endian integer","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16310852,"byte_end":16310901,"line_start":692,"line_end":692,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16310906,"byte_end":16310909,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ This is the default setting.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16310914,"byte_end":16310946,"line_start":694,"line_end":694,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16310951,"byte_end":16310954,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16310959,"byte_end":16311027,"line_start":696,"line_end":696,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16311032,"byte_end":16311035,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16311040,"byte_end":16311054,"line_start":698,"line_end":698,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16311059,"byte_end":16311062,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16311067,"byte_end":16311074,"line_start":700,"line_end":700,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16311079,"byte_end":16311110,"line_start":701,"line_end":701,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16311115,"byte_end":16311163,"line_start":702,"line_end":702,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16311168,"byte_end":16311171,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16311176,"byte_end":16311217,"line_start":704,"line_end":704,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16311222,"byte_end":16311257,"line_start":705,"line_end":705,"column_start":5,"column_end":40}},{"value":"/     .big_endian()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16311262,"byte_end":16311283,"line_start":706,"line_end":706,"column_start":5,"column_end":26}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16311288,"byte_end":16311310,"line_start":707,"line_end":707,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16311315,"byte_end":16311322,"line_start":708,"line_end":708,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16311327,"byte_end":16311349,"line_start":709,"line_end":709,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16311354,"byte_end":16311361,"line_start":710,"line_end":710,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":983},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16312015,"byte_end":16312028,"line_start":735,"line_end":735,"column_start":12,"column_end":25},"name":"little_endian","qualname":"<Builder>::little_endian","value":"fn little_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a little endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a little endian integer","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16311482,"byte_end":16311534,"line_start":716,"line_end":716,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16311539,"byte_end":16311542,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16311547,"byte_end":16311585,"line_start":718,"line_end":718,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16311590,"byte_end":16311593,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16311598,"byte_end":16311666,"line_start":720,"line_end":720,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16311671,"byte_end":16311674,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16311679,"byte_end":16311693,"line_start":722,"line_end":722,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16311698,"byte_end":16311701,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16311706,"byte_end":16311713,"line_start":724,"line_end":724,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16311718,"byte_end":16311749,"line_start":725,"line_end":725,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16311754,"byte_end":16311802,"line_start":726,"line_end":726,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16311807,"byte_end":16311810,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16311815,"byte_end":16311856,"line_start":728,"line_end":728,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16311861,"byte_end":16311896,"line_start":729,"line_end":729,"column_start":5,"column_end":40}},{"value":"/     .little_endian()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16311901,"byte_end":16311925,"line_start":730,"line_end":730,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16311930,"byte_end":16311952,"line_start":731,"line_end":731,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16311957,"byte_end":16311964,"line_start":732,"line_end":732,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16311969,"byte_end":16311991,"line_start":733,"line_end":733,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16311996,"byte_end":16312003,"line_start":734,"line_end":734,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":984},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16312661,"byte_end":16312674,"line_start":759,"line_end":759,"column_start":12,"column_end":25},"name":"native_endian","qualname":"<Builder>::native_endian","value":"fn native_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a native endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a native endian integer","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16312128,"byte_end":16312180,"line_start":740,"line_end":740,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16312185,"byte_end":16312188,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16312193,"byte_end":16312231,"line_start":742,"line_end":742,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16312236,"byte_end":16312239,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16312244,"byte_end":16312312,"line_start":744,"line_end":744,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16312317,"byte_end":16312320,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16312325,"byte_end":16312339,"line_start":746,"line_end":746,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16312344,"byte_end":16312347,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16312352,"byte_end":16312359,"line_start":748,"line_end":748,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16312364,"byte_end":16312395,"line_start":749,"line_end":749,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16312400,"byte_end":16312448,"line_start":750,"line_end":750,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16312453,"byte_end":16312456,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16312461,"byte_end":16312502,"line_start":752,"line_end":752,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16312507,"byte_end":16312542,"line_start":753,"line_end":753,"column_start":5,"column_end":40}},{"value":"/     .native_endian()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16312547,"byte_end":16312571,"line_start":754,"line_end":754,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16312576,"byte_end":16312598,"line_start":755,"line_end":755,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16312603,"byte_end":16312610,"line_start":756,"line_end":756,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16312615,"byte_end":16312637,"line_start":757,"line_end":757,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16312642,"byte_end":16312649,"line_start":758,"line_end":758,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":985},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16313771,"byte_end":16313787,"line_start":793,"line_end":793,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<Builder>::max_frame_length","value":"fn max_frame_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max frame length in bytes","sig":null,"attributes":[{"value":"/ Sets the max frame length in bytes","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16312843,"byte_end":16312881,"line_start":767,"line_end":767,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16312886,"byte_end":16312889,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding. The","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16312894,"byte_end":16312966,"line_start":769,"line_end":769,"column_start":5,"column_end":77}},{"value":"/ default value is 8MB.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16312971,"byte_end":16312996,"line_start":770,"line_end":770,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16313001,"byte_end":16313004,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ When decoding, the length field read from the byte stream is checked","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16313009,"byte_end":16313081,"line_start":772,"line_end":772,"column_start":5,"column_end":77}},{"value":"/ against this setting **before** any adjustments are applied. When","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16313086,"byte_end":16313155,"line_start":773,"line_end":773,"column_start":5,"column_end":74}},{"value":"/ encoding, the length of the submitted payload is checked against this","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16313160,"byte_end":16313233,"line_start":774,"line_end":774,"column_start":5,"column_end":78}},{"value":"/ setting.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16313238,"byte_end":16313250,"line_start":775,"line_end":775,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16313255,"byte_end":16313258,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ When frames exceed the max length, an `io::Error` with the custom value","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16313263,"byte_end":16313338,"line_start":777,"line_end":777,"column_start":5,"column_end":80}},{"value":"/ of the `LengthDelimitedCodecError` type will be returned.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16313343,"byte_end":16313404,"line_start":778,"line_end":778,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16313409,"byte_end":16313412,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16313417,"byte_end":16313431,"line_start":780,"line_end":780,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16313436,"byte_end":16313439,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16313444,"byte_end":16313451,"line_start":782,"line_end":782,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16313456,"byte_end":16313487,"line_start":783,"line_end":783,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16313492,"byte_end":16313540,"line_start":784,"line_end":784,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16313545,"byte_end":16313548,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16313553,"byte_end":16313594,"line_start":786,"line_end":786,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16313599,"byte_end":16313634,"line_start":787,"line_end":787,"column_start":5,"column_end":40}},{"value":"/     .max_frame_length(8 * 1024 * 1024)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16313639,"byte_end":16313681,"line_start":788,"line_end":788,"column_start":5,"column_end":47}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16313686,"byte_end":16313708,"line_start":789,"line_end":789,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16313713,"byte_end":16313720,"line_start":790,"line_end":790,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16313725,"byte_end":16313747,"line_start":791,"line_end":791,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16313752,"byte_end":16313759,"line_start":792,"line_end":792,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":986},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16314886,"byte_end":16314903,"line_start":830,"line_end":830,"column_start":12,"column_end":29},"name":"length_field_type","qualname":"<Builder>::length_field_type","value":"fn length_field_type<T>(&mut Self) -> &mut Self where\nT: builder::LengthFieldType","parent":null,"children":[],"decl_id":null,"docs":" Sets the unsigned integer type used to represent the length field.","sig":null,"attributes":[{"value":"/ Sets the unsigned integer type used to represent the length field.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16313884,"byte_end":16313954,"line_start":798,"line_end":798,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16313959,"byte_end":16313962,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ The default type is [`u32`]. The max type is [`u64`] (or [`usize`] on","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16313967,"byte_end":16314040,"line_start":800,"line_end":800,"column_start":5,"column_end":78}},{"value":"/ 64-bit targets).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16314045,"byte_end":16314065,"line_start":801,"line_end":801,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16314070,"byte_end":16314073,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16314078,"byte_end":16314092,"line_start":803,"line_end":803,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16314097,"byte_end":16314100,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16314105,"byte_end":16314112,"line_start":805,"line_end":805,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16314117,"byte_end":16314148,"line_start":806,"line_end":806,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16314153,"byte_end":16314201,"line_start":807,"line_end":807,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16314206,"byte_end":16314209,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16314214,"byte_end":16314255,"line_start":809,"line_end":809,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16314260,"byte_end":16314295,"line_start":810,"line_end":810,"column_start":5,"column_end":40}},{"value":"/     .length_field_type::<u32>()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16314300,"byte_end":16314335,"line_start":811,"line_end":811,"column_start":5,"column_end":40}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16314340,"byte_end":16314362,"line_start":812,"line_end":812,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16314367,"byte_end":16314374,"line_start":813,"line_end":813,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16314379,"byte_end":16314401,"line_start":814,"line_end":814,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16314406,"byte_end":16314413,"line_start":815,"line_end":815,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16314418,"byte_end":16314421,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ Unlike [`Builder::length_field_length`], this does not fail at runtime","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16314426,"byte_end":16314500,"line_start":817,"line_end":817,"column_start":5,"column_end":79}},{"value":"/ and instead produces a compile error:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16314505,"byte_end":16314546,"line_start":818,"line_end":818,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16314551,"byte_end":16314554,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ ```compile_fail","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16314559,"byte_end":16314578,"line_start":820,"line_end":820,"column_start":5,"column_end":24}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16314583,"byte_end":16314614,"line_start":821,"line_end":821,"column_start":5,"column_end":36}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16314619,"byte_end":16314669,"line_start":822,"line_end":822,"column_start":5,"column_end":55}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16314674,"byte_end":16314715,"line_start":823,"line_end":823,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16314720,"byte_end":16314755,"line_start":824,"line_end":824,"column_start":5,"column_end":40}},{"value":"/     .length_field_type::<u128>()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16314760,"byte_end":16314796,"line_start":825,"line_end":825,"column_start":5,"column_end":41}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16314801,"byte_end":16314823,"line_start":826,"line_end":826,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16314828,"byte_end":16314835,"line_start":827,"line_end":827,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16314840,"byte_end":16314862,"line_start":828,"line_end":828,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16314867,"byte_end":16314874,"line_start":829,"line_end":829,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":988},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16315588,"byte_end":16315607,"line_start":853,"line_end":853,"column_start":12,"column_end":31},"name":"length_field_length","qualname":"<Builder>::length_field_length","value":"fn length_field_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes used to represent the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes used to represent the length field","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16315024,"byte_end":16315087,"line_start":834,"line_end":834,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16315092,"byte_end":16315095,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ The default value is `4`. The max value is `8`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16315100,"byte_end":16315151,"line_start":836,"line_end":836,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16315156,"byte_end":16315159,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16315164,"byte_end":16315232,"line_start":838,"line_end":838,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16315237,"byte_end":16315240,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16315245,"byte_end":16315259,"line_start":840,"line_end":840,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16315264,"byte_end":16315267,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16315272,"byte_end":16315279,"line_start":842,"line_end":842,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16315284,"byte_end":16315315,"line_start":843,"line_end":843,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16315320,"byte_end":16315368,"line_start":844,"line_end":844,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16315373,"byte_end":16315376,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16315381,"byte_end":16315422,"line_start":846,"line_end":846,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16315427,"byte_end":16315462,"line_start":847,"line_end":847,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(4)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16315467,"byte_end":16315498,"line_start":848,"line_end":848,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16315503,"byte_end":16315525,"line_start":849,"line_end":849,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16315530,"byte_end":16315537,"line_start":850,"line_end":850,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16315542,"byte_end":16315564,"line_start":851,"line_end":851,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16315569,"byte_end":16315576,"line_start":852,"line_end":852,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":989},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16316266,"byte_end":16316285,"line_start":876,"line_end":876,"column_start":12,"column_end":31},"name":"length_field_offset","qualname":"<Builder>::length_field_offset","value":"fn length_field_offset(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes in the header before the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes in the header before the length field","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16315776,"byte_end":16315842,"line_start":859,"line_end":859,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16315847,"byte_end":16315850,"line_start":860,"line_end":860,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16315855,"byte_end":16315910,"line_start":861,"line_end":861,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16315915,"byte_end":16315918,"line_start":862,"line_end":862,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16315923,"byte_end":16315937,"line_start":863,"line_end":863,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16315942,"byte_end":16315945,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16315950,"byte_end":16315957,"line_start":865,"line_end":865,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16315962,"byte_end":16315993,"line_start":866,"line_end":866,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16315998,"byte_end":16316046,"line_start":867,"line_end":867,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16316051,"byte_end":16316054,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16316059,"byte_end":16316100,"line_start":869,"line_end":869,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16316105,"byte_end":16316140,"line_start":870,"line_end":870,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(1)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16316145,"byte_end":16316176,"line_start":871,"line_end":871,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16316181,"byte_end":16316203,"line_start":872,"line_end":872,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16316208,"byte_end":16316215,"line_start":873,"line_end":873,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16316220,"byte_end":16316242,"line_start":874,"line_end":874,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16316247,"byte_end":16316254,"line_start":875,"line_end":875,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":990},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16316839,"byte_end":16316856,"line_start":897,"line_end":897,"column_start":12,"column_end":29},"name":"length_adjustment","qualname":"<Builder>::length_adjustment","value":"fn length_adjustment(&mut Self, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Delta between the payload length specified in the header and the real\n payload length","sig":null,"attributes":[{"value":"/ Delta between the payload length specified in the header and the real","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16316388,"byte_end":16316461,"line_start":881,"line_end":881,"column_start":5,"column_end":78}},{"value":"/ payload length","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16316466,"byte_end":16316484,"line_start":882,"line_end":882,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16316489,"byte_end":16316492,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16316497,"byte_end":16316511,"line_start":884,"line_end":884,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16316516,"byte_end":16316519,"line_start":885,"line_end":885,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16316524,"byte_end":16316531,"line_start":886,"line_end":886,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16316536,"byte_end":16316567,"line_start":887,"line_end":887,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16316572,"byte_end":16316620,"line_start":888,"line_end":888,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16316625,"byte_end":16316628,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16316633,"byte_end":16316674,"line_start":890,"line_end":890,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16316679,"byte_end":16316714,"line_start":891,"line_end":891,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(-2)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16316719,"byte_end":16316749,"line_start":892,"line_end":892,"column_start":5,"column_end":35}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16316754,"byte_end":16316776,"line_start":893,"line_end":893,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16316781,"byte_end":16316788,"line_start":894,"line_end":894,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16316793,"byte_end":16316815,"line_start":895,"line_end":895,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16316820,"byte_end":16316827,"line_start":896,"line_end":896,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":991},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16317506,"byte_end":16317514,"line_start":921,"line_end":921,"column_start":12,"column_end":20},"name":"num_skip","qualname":"<Builder>::num_skip","value":"fn num_skip(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes to skip before reading the payload","sig":null,"attributes":[{"value":"/ Sets the number of bytes to skip before reading the payload","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16316957,"byte_end":16317020,"line_start":902,"line_end":902,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16317025,"byte_end":16317028,"line_start":903,"line_end":903,"column_start":5,"column_end":8}},{"value":"/ Default value is `length_field_len + length_field_offset`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16317033,"byte_end":16317094,"line_start":904,"line_end":904,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16317099,"byte_end":16317102,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16317107,"byte_end":16317161,"line_start":906,"line_end":906,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16317166,"byte_end":16317169,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16317174,"byte_end":16317188,"line_start":908,"line_end":908,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16317193,"byte_end":16317196,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16317201,"byte_end":16317208,"line_start":910,"line_end":910,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16317213,"byte_end":16317244,"line_start":911,"line_end":911,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16317249,"byte_end":16317297,"line_start":912,"line_end":912,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16317302,"byte_end":16317305,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16317310,"byte_end":16317351,"line_start":914,"line_end":914,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16317356,"byte_end":16317391,"line_start":915,"line_end":915,"column_start":5,"column_end":40}},{"value":"/     .num_skip(4)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16317396,"byte_end":16317416,"line_start":916,"line_end":916,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16317421,"byte_end":16317443,"line_start":917,"line_end":917,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16317448,"byte_end":16317455,"line_start":918,"line_end":918,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16317460,"byte_end":16317482,"line_start":919,"line_end":919,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16317487,"byte_end":16317494,"line_start":920,"line_end":920,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":992},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16318038,"byte_end":16318047,"line_start":941,"line_end":941,"column_start":12,"column_end":21},"name":"new_codec","qualname":"<Builder>::new_codec","value":"fn new_codec(&Self) -> LengthDelimitedCodec","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `LengthDelimitedCodec`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `LengthDelimitedCodec`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16317612,"byte_end":16317675,"line_start":926,"line_end":926,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16317680,"byte_end":16317683,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16317688,"byte_end":16317702,"line_start":928,"line_end":928,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16317707,"byte_end":16317710,"line_start":929,"line_end":929,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16317715,"byte_end":16317722,"line_start":930,"line_end":930,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16317727,"byte_end":16317775,"line_start":931,"line_end":931,"column_start":5,"column_end":53}},{"value":"/ # pub fn main() {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16317780,"byte_end":16317801,"line_start":932,"line_end":932,"column_start":5,"column_end":26}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16317806,"byte_end":16317841,"line_start":933,"line_end":933,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16317846,"byte_end":16317877,"line_start":934,"line_end":934,"column_start":5,"column_end":36}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16317882,"byte_end":16317917,"line_start":935,"line_end":935,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16317922,"byte_end":16317951,"line_start":936,"line_end":936,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16317956,"byte_end":16317976,"line_start":937,"line_end":937,"column_start":5,"column_end":25}},{"value":"/     .new_codec();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16317981,"byte_end":16318002,"line_start":938,"line_end":938,"column_start":5,"column_end":26}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16318007,"byte_end":16318014,"line_start":939,"line_end":939,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16318019,"byte_end":16318026,"line_start":940,"line_end":940,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":993},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16318707,"byte_end":16318715,"line_start":966,"line_end":966,"column_start":12,"column_end":20},"name":"new_read","qualname":"<Builder>::new_read","value":"fn new_read<T>(&Self, T) -> FramedRead<T, LengthDelimitedCodec> where\nT: AsyncRead","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedRead`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedRead`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16318199,"byte_end":16318252,"line_start":948,"line_end":948,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16318257,"byte_end":16318260,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16318265,"byte_end":16318279,"line_start":950,"line_end":950,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16318284,"byte_end":16318287,"line_start":951,"line_end":951,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16318292,"byte_end":16318299,"line_start":952,"line_end":952,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16318304,"byte_end":16318335,"line_start":953,"line_end":953,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16318340,"byte_end":16318388,"line_start":954,"line_end":954,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16318393,"byte_end":16318396,"line_start":955,"line_end":955,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16318401,"byte_end":16318442,"line_start":956,"line_end":956,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16318447,"byte_end":16318482,"line_start":957,"line_end":957,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16318487,"byte_end":16318518,"line_start":958,"line_end":958,"column_start":5,"column_end":36}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16318523,"byte_end":16318558,"line_start":959,"line_end":959,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16318563,"byte_end":16318592,"line_start":960,"line_end":960,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16318597,"byte_end":16318617,"line_start":961,"line_end":961,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16318622,"byte_end":16318644,"line_start":962,"line_end":962,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16318649,"byte_end":16318656,"line_start":963,"line_end":963,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16318661,"byte_end":16318683,"line_start":964,"line_end":964,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16318688,"byte_end":16318695,"line_start":965,"line_end":965,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":995},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16319292,"byte_end":16319301,"line_start":987,"line_end":987,"column_start":12,"column_end":21},"name":"new_write","qualname":"<Builder>::new_write","value":"fn new_write<T>(&Self, T) -> FramedWrite<T, LengthDelimitedCodec> where\nT: AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedWrite`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedWrite`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16318879,"byte_end":16318933,"line_start":973,"line_end":973,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16318938,"byte_end":16318941,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16318946,"byte_end":16318960,"line_start":975,"line_end":975,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16318965,"byte_end":16318968,"line_start":976,"line_end":976,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16318973,"byte_end":16318980,"line_start":977,"line_end":977,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16318985,"byte_end":16319017,"line_start":978,"line_end":978,"column_start":5,"column_end":37}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16319022,"byte_end":16319072,"line_start":979,"line_end":979,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16319077,"byte_end":16319121,"line_start":980,"line_end":980,"column_start":5,"column_end":49}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16319126,"byte_end":16319161,"line_start":981,"line_end":981,"column_start":5,"column_end":40}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16319166,"byte_end":16319201,"line_start":982,"line_end":982,"column_start":5,"column_end":40}},{"value":"/     .new_write(io);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16319206,"byte_end":16319229,"line_start":983,"line_end":983,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16319234,"byte_end":16319241,"line_start":984,"line_end":984,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16319246,"byte_end":16319268,"line_start":985,"line_end":985,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16319273,"byte_end":16319280,"line_start":986,"line_end":986,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":997},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16319914,"byte_end":16319924,"line_start":1009,"line_end":1009,"column_start":12,"column_end":22},"name":"new_framed","qualname":"<Builder>::new_framed","value":"fn new_framed<T>(&Self, T) -> Framed<T, LengthDelimitedCodec> where\nT: AsyncRead + AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `Framed`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `Framed`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16319462,"byte_end":16319511,"line_start":994,"line_end":994,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16319516,"byte_end":16319519,"line_start":995,"line_end":995,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16319524,"byte_end":16319538,"line_start":996,"line_end":996,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16319543,"byte_end":16319546,"line_start":997,"line_end":997,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16319551,"byte_end":16319558,"line_start":998,"line_end":998,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16319563,"byte_end":16319608,"line_start":999,"line_end":999,"column_start":5,"column_end":50}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16319613,"byte_end":16319663,"line_start":1000,"line_end":1000,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncRead + AsyncWrite>(io: T) {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16319668,"byte_end":16319724,"line_start":1001,"line_end":1001,"column_start":5,"column_end":61}},{"value":"/ # let _ =","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16319729,"byte_end":16319742,"line_start":1002,"line_end":1002,"column_start":5,"column_end":18}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16319747,"byte_end":16319782,"line_start":1003,"line_end":1003,"column_start":5,"column_end":40}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16319787,"byte_end":16319822,"line_start":1004,"line_end":1004,"column_start":5,"column_end":40}},{"value":"/     .new_framed(io);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16319827,"byte_end":16319851,"line_start":1005,"line_end":1005,"column_start":5,"column_end":29}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16319856,"byte_end":16319863,"line_start":1006,"line_end":1006,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16319868,"byte_end":16319890,"line_start":1007,"line_end":1007,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16319895,"byte_end":16319902,"line_start":1008,"line_end":1008,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1002},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16320424,"byte_end":16320431,"line_start":1028,"line_end":1028,"column_start":8,"column_end":15},"name":"default","qualname":"<Builder as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1004},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16320575,"byte_end":16320578,"line_start":1036,"line_end":1036,"column_start":8,"column_end":11},"name":"fmt","qualname":"<LengthDelimitedCodecError as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1006},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16320758,"byte_end":16320761,"line_start":1042,"line_end":1042,"column_start":8,"column_end":11},"name":"fmt","qualname":"<LengthDelimitedCodecError as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10117},"children":[],"decl_id":{"krate":2,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1224},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16321303,"byte_end":16321313,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"LinesCodec","qualname":"::codec::lines_codec::LinesCodec","value":"LinesCodec {  }","parent":null,"children":[{"krate":0,"index":1225},{"krate":0,"index":1226},{"krate":0,"index":1227}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16321060,"byte_end":16321147,"line_start":7,"line_end":7,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16321148,"byte_end":16321151,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16321152,"byte_end":16321190,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16321191,"byte_end":16321229,"line_start":10,"line_end":10,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1049},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16322413,"byte_end":16322416,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<LinesCodec>::new","value":"fn new() -> LinesCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` for splitting up data into lines.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` for splitting up data into lines.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16321994,"byte_end":16322054,"line_start":31,"line_end":31,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16322059,"byte_end":16322062,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16322067,"byte_end":16322077,"line_start":33,"line_end":33,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16322082,"byte_end":16322085,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The returned `LinesCodec` will not have an upper bound on the length","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16322090,"byte_end":16322162,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ of a buffered line. See the documentation for [`new_with_max_length`]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16322167,"byte_end":16322240,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16322245,"byte_end":16322312,"line_start":37,"line_end":37,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16322317,"byte_end":16322320,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::LinesCodec::new_with_max_length()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16322325,"byte_end":16322401,"line_start":39,"line_end":39,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1050},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16323547,"byte_end":16323566,"line_start":66,"line_end":66,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<LinesCodec>::new_with_max_length","value":"fn new_with_max_length(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` with a maximum line length limit.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` with a maximum line length limit.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16322574,"byte_end":16322634,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16322639,"byte_end":16322642,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `LinesCodec::decode` will return a","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16322647,"byte_end":16322710,"line_start":50,"line_end":50,"column_start":5,"column_end":68}},{"value":"/ [`LinesCodecError`] when a line exceeds the length limit. Subsequent calls","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16322715,"byte_end":16322793,"line_start":51,"line_end":51,"column_start":5,"column_end":83}},{"value":"/ will discard up to `limit` bytes from that line until a newline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16322798,"byte_end":16322865,"line_start":52,"line_end":52,"column_start":5,"column_end":72}},{"value":"/ character is reached, returning `None` until the line over the limit","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16322870,"byte_end":16322942,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16322947,"byte_end":16323017,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16323022,"byte_end":16323045,"line_start":55,"line_end":55,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16323050,"byte_end":16323053,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16323058,"byte_end":16323068,"line_start":57,"line_end":57,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16323073,"byte_end":16323076,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `LinesCodec` which","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16323081,"byte_end":16323156,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16323161,"byte_end":16323234,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ that holds the line currently being read is unbounded. An attacker could","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16323239,"byte_end":16323315,"line_start":61,"line_end":61,"column_start":5,"column_end":81}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16323320,"byte_end":16323393,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ without any `\\n` characters, causing unbounded memory consumption.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16323398,"byte_end":16323468,"line_start":63,"line_end":63,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16323473,"byte_end":16323476,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ [`LinesCodecError`]: crate::codec::LinesCodecError","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16323481,"byte_end":16323535,"line_start":65,"line_end":65,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1051},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16324132,"byte_end":16324142,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"max_length","qualname":"<LinesCodec>::max_length","value":"fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum line length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum line length when decoding.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16323694,"byte_end":16323744,"line_start":73,"line_end":73,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16323749,"byte_end":16323752,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16323757,"byte_end":16323764,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16323769,"byte_end":16323788,"line_start":76,"line_end":76,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16323793,"byte_end":16323831,"line_start":77,"line_end":77,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16323836,"byte_end":16323839,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16323844,"byte_end":16323878,"line_start":79,"line_end":79,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16323883,"byte_end":16323930,"line_start":80,"line_end":80,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16323935,"byte_end":16323942,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16323947,"byte_end":16323954,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16323959,"byte_end":16323997,"line_start":83,"line_end":83,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16324002,"byte_end":16324005,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new_with_max_length(256);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16324010,"byte_end":16324063,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16324068,"byte_end":16324108,"line_start":86,"line_end":86,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16324113,"byte_end":16324120,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1058},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16324608,"byte_end":16324614,"line_start":110,"line_end":110,"column_start":8,"column_end":14},"name":"decode","qualname":"<LinesCodec as codec::decoder::Decoder>::decode","value":"fn decode(&mut Self, &mut BytesMut) -> Result<Option<String>, LinesCodecError>","parent":{"krate":0,"index":492},"children":[],"decl_id":{"krate":0,"index":495},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1060},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16327226,"byte_end":16327236,"line_start":166,"line_end":166,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"<LinesCodec as codec::decoder::Decoder>::decode_eof","value":"fn decode_eof(&mut Self, &mut BytesMut)\n-> Result<Option<String>, LinesCodecError>","parent":{"krate":0,"index":492},"children":[],"decl_id":{"krate":0,"index":496},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1064},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16327995,"byte_end":16328001,"line_start":191,"line_end":191,"column_start":8,"column_end":14},"name":"encode","qualname":"<LinesCodec as codec::encoder::Encoder>::encode","value":"fn encode(&mut Self, T, &mut BytesMut) -> Result<(), LinesCodecError>","parent":{"krate":0,"index":509},"children":[],"decl_id":{"krate":0,"index":512},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1066},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16328268,"byte_end":16328275,"line_start":201,"line_end":201,"column_start":8,"column_end":15},"name":"default","qualname":"<LinesCodec as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1247},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16328468,"byte_end":16328489,"line_start":210,"line_end":210,"column_start":5,"column_end":26},"name":"MaxLineLengthExceeded","qualname":"::codec::lines_codec::LinesCodecError::MaxLineLengthExceeded","value":"LinesCodecError::MaxLineLengthExceeded","parent":{"krate":0,"index":1246},"children":[],"decl_id":null,"docs":" The maximum line length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum line length was exceeded.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16328422,"byte_end":16328463,"line_start":209,"line_end":209,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1249},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16328525,"byte_end":16328527,"line_start":212,"line_end":212,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::lines_codec::LinesCodecError::Io","value":"LinesCodecError::Io(io::Error)","parent":{"krate":0,"index":1246},"children":[],"decl_id":null,"docs":" An IO error occurred.\n","sig":null,"attributes":[{"value":"/ An IO error occurred.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16328495,"byte_end":16328520,"line_start":211,"line_end":211,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":1251},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16328528,"byte_end":16328537,"line_start":212,"line_end":212,"column_start":8,"column_end":17},"name":"0","qualname":"::codec::lines_codec::LinesCodecError::Io::0","value":"std::io::Error","parent":{"krate":0,"index":1249},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1246},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16328400,"byte_end":16328415,"line_start":208,"line_end":208,"column_start":10,"column_end":25},"name":"LinesCodecError","qualname":"::codec::lines_codec::LinesCodecError","value":"enum LinesCodecError { MaxLineLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1247},{"krate":0,"index":1249}],"decl_id":null,"docs":" An error occurred while encoding or decoding a line.\n","sig":null,"attributes":[{"value":"/ An error occurred while encoding or decoding a line.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16328317,"byte_end":16328373,"line_start":206,"line_end":206,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1068},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16328590,"byte_end":16328593,"line_start":216,"line_end":216,"column_start":8,"column_end":11},"name":"fmt","qualname":"<LinesCodecError as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10117},"children":[],"decl_id":{"krate":2,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1070},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16328887,"byte_end":16328891,"line_start":225,"line_end":225,"column_start":8,"column_end":12},"name":"from","qualname":"<LinesCodecError as std::convert::From>::from","value":"fn from(io::Error) -> LinesCodecError","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1254},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16330449,"byte_end":16330466,"line_start":41,"line_end":41,"column_start":12,"column_end":29},"name":"AnyDelimiterCodec","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodec","value":"AnyDelimiterCodec {  }","parent":null,"children":[{"krate":0,"index":1255},{"krate":0,"index":1256},{"krate":0,"index":1257},{"krate":0,"index":1258},{"krate":0,"index":1259}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16329263,"byte_end":16329404,"line_start":9,"line_end":9,"column_start":1,"column_end":142}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16329405,"byte_end":16329408,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16329409,"byte_end":16329447,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16329448,"byte_end":16329486,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16329487,"byte_end":16329490,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16329491,"byte_end":16329504,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/ Decode string of bytes containing various different delimiters.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16329505,"byte_end":16329572,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16329573,"byte_end":16329576,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16329577,"byte_end":16329610,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16329611,"byte_end":16329640,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16329641,"byte_end":16329644,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16329645,"byte_end":16329652,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::{AnyDelimiterCodec, Decoder};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16329653,"byte_end":16329709,"line_start":21,"line_end":21,"column_start":1,"column_end":57}},{"value":"/ use bytes::{BufMut, BytesMut};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16329710,"byte_end":16329744,"line_start":22,"line_end":22,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16329745,"byte_end":16329748,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ #","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16329749,"byte_end":16329754,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16329755,"byte_end":16329802,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16329803,"byte_end":16329856,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/ let mut codec = AnyDelimiterCodec::new(b\",;\\r\\n\".to_vec(),b\";\".to_vec());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16329857,"byte_end":16329934,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ let buf = &mut BytesMut::new();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16329935,"byte_end":16329970,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"/ buf.reserve(200);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16329971,"byte_end":16329992,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/ buf.put_slice(b\"chunk 1,chunk 2;chunk 3\\n\\r\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16329993,"byte_end":16330043,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(\"chunk 1\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16330044,"byte_end":16330107,"line_start":31,"line_end":31,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 2\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16330108,"byte_end":16330171,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 3\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16330172,"byte_end":16330235,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16330236,"byte_end":16330292,"line_start":34,"line_end":34,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(None, codec.decode(buf).unwrap());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16330293,"byte_end":16330342,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16330343,"byte_end":16330355,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16330356,"byte_end":16330363,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16330364,"byte_end":16330371,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16330372,"byte_end":16330375,"line_start":39,"line_end":39,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":1118},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16331801,"byte_end":16331804,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<AnyDelimiterCodec>::new","value":"fn new(Vec<u8>, Vec<u8>) -> AnyDelimiterCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` for splitting up data into chunks.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` for splitting up data into chunks.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16331359,"byte_end":16331427,"line_start":66,"line_end":66,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16331432,"byte_end":16331435,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16331440,"byte_end":16331450,"line_start":68,"line_end":68,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16331455,"byte_end":16331458,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ The returned `AnyDelimiterCodec` will not have an upper bound on the length","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16331463,"byte_end":16331542,"line_start":70,"line_end":70,"column_start":5,"column_end":84}},{"value":"/ of a buffered chunk. See the documentation for [`new_with_max_length`]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16331547,"byte_end":16331621,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16331626,"byte_end":16331693,"line_start":72,"line_end":72,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16331698,"byte_end":16331701,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::AnyDelimiterCodec::new_with_max_length()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16331706,"byte_end":16331789,"line_start":74,"line_end":74,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1119},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16333115,"byte_end":16333134,"line_start":103,"line_end":103,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<AnyDelimiterCodec>::new_with_max_length","value":"fn new_with_max_length(Vec<u8>, Vec<u8>, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16332084,"byte_end":16332152,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16332157,"byte_end":16332160,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `AnyDelimiterCodec::decode` will return a","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16332165,"byte_end":16332235,"line_start":87,"line_end":87,"column_start":5,"column_end":75}},{"value":"/ [`AnyDelimiterCodecError`] when a chunk exceeds the length limit. Subsequent calls","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16332240,"byte_end":16332326,"line_start":88,"line_end":88,"column_start":5,"column_end":91}},{"value":"/ will discard up to `limit` bytes from that chunk until a delimiter","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16332331,"byte_end":16332401,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ character is reached, returning `None` until the delimiter over the limit","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16332406,"byte_end":16332483,"line_start":90,"line_end":90,"column_start":5,"column_end":82}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16332488,"byte_end":16332558,"line_start":91,"line_end":91,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16332563,"byte_end":16332586,"line_start":92,"line_end":92,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16332591,"byte_end":16332594,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16332599,"byte_end":16332609,"line_start":94,"line_end":94,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16332614,"byte_end":16332617,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `AnyDelimiterCodec` which","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16332622,"byte_end":16332704,"line_start":96,"line_end":96,"column_start":5,"column_end":87}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16332709,"byte_end":16332782,"line_start":97,"line_end":97,"column_start":5,"column_end":78}},{"value":"/ that holds the chunk currently being read is unbounded. An attacker could","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16332787,"byte_end":16332864,"line_start":98,"line_end":98,"column_start":5,"column_end":82}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16332869,"byte_end":16332942,"line_start":99,"line_end":99,"column_start":5,"column_end":78}},{"value":"/ without any delimiter characters, causing unbounded memory consumption.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16332947,"byte_end":16333022,"line_start":100,"line_end":100,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16333027,"byte_end":16333030,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [`AnyDelimiterCodecError`]: crate::codec::AnyDelimiterCodecError","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16333035,"byte_end":16333103,"line_start":102,"line_end":102,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1120},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16333922,"byte_end":16333932,"line_start":129,"line_end":129,"column_start":12,"column_end":22},"name":"max_length","qualname":"<AnyDelimiterCodec>::max_length","value":"fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum chunk length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum chunk length when decoding.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16333391,"byte_end":16333442,"line_start":114,"line_end":114,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16333447,"byte_end":16333450,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16333455,"byte_end":16333462,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16333467,"byte_end":16333486,"line_start":117,"line_end":117,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16333491,"byte_end":16333536,"line_start":118,"line_end":118,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16333541,"byte_end":16333544,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new(b\",;\\n\".to_vec(), b\";\".to_vec());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16333549,"byte_end":16333621,"line_start":120,"line_end":120,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16333626,"byte_end":16333673,"line_start":121,"line_end":121,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16333678,"byte_end":16333685,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16333690,"byte_end":16333697,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16333702,"byte_end":16333747,"line_start":124,"line_end":124,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16333752,"byte_end":16333755,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new_with_max_length(b\",;\\n\".to_vec(), b\";\".to_vec(), 256);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16333760,"byte_end":16333853,"line_start":126,"line_end":126,"column_start":5,"column_end":98}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16333858,"byte_end":16333898,"line_start":127,"line_end":127,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16333903,"byte_end":16333910,"line_start":128,"line_end":128,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1124},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16334093,"byte_end":16334099,"line_start":138,"line_end":138,"column_start":8,"column_end":14},"name":"decode","qualname":"<AnyDelimiterCodec as codec::decoder::Decoder>::decode","value":"fn decode(&mut Self, &mut BytesMut)\n-> Result<Option<Bytes>, AnyDelimiterCodecError>","parent":{"krate":0,"index":492},"children":[],"decl_id":{"krate":0,"index":495},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1127},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16336769,"byte_end":16336779,"line_start":195,"line_end":195,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"<AnyDelimiterCodec as codec::decoder::Decoder>::decode_eof","value":"fn decode_eof(&mut Self, &mut BytesMut)\n-> Result<Option<Bytes>, AnyDelimiterCodecError>","parent":{"krate":0,"index":492},"children":[],"decl_id":{"krate":0,"index":496},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1131},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16337404,"byte_end":16337410,"line_start":218,"line_end":218,"column_start":8,"column_end":14},"name":"encode","qualname":"<AnyDelimiterCodec as codec::encoder::Encoder>::encode","value":"fn encode(&mut Self, T, &mut BytesMut) -> Result<(), AnyDelimiterCodecError>","parent":{"krate":0,"index":509},"children":[],"decl_id":{"krate":0,"index":512},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1133},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16337718,"byte_end":16337725,"line_start":229,"line_end":229,"column_start":8,"column_end":15},"name":"default","qualname":"<AnyDelimiterCodec as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1279},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16338028,"byte_end":16338050,"line_start":241,"line_end":241,"column_start":5,"column_end":27},"name":"MaxChunkLengthExceeded","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::MaxChunkLengthExceeded","value":"AnyDelimiterCodecError::MaxChunkLengthExceeded","parent":{"krate":0,"index":1278},"children":[],"decl_id":null,"docs":" The maximum chunk length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum chunk length was exceeded.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16337981,"byte_end":16338023,"line_start":240,"line_end":240,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1281},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16338086,"byte_end":16338088,"line_start":243,"line_end":243,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::Io","value":"AnyDelimiterCodecError::Io(io::Error)","parent":{"krate":0,"index":1278},"children":[],"decl_id":null,"docs":" An IO error occurred.\n","sig":null,"attributes":[{"value":"/ An IO error occurred.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16338056,"byte_end":16338081,"line_start":242,"line_end":242,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":1283},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16338089,"byte_end":16338098,"line_start":243,"line_end":243,"column_start":8,"column_end":17},"name":"0","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::Io::0","value":"std::io::Error","parent":{"krate":0,"index":1281},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1278},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16337952,"byte_end":16337974,"line_start":239,"line_end":239,"column_start":10,"column_end":32},"name":"AnyDelimiterCodecError","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError","value":"enum AnyDelimiterCodecError { MaxChunkLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1279},{"krate":0,"index":1281}],"decl_id":null,"docs":" An error occurred while encoding or decoding a chunk.\n","sig":null,"attributes":[{"value":"/ An error occurred while encoding or decoding a chunk.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16337868,"byte_end":16337925,"line_start":237,"line_end":237,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1135},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16338158,"byte_end":16338161,"line_start":247,"line_end":247,"column_start":8,"column_end":11},"name":"fmt","qualname":"<AnyDelimiterCodecError as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10117},"children":[],"decl_id":{"krate":2,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1137},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16338509,"byte_end":16338513,"line_start":258,"line_end":258,"column_start":8,"column_end":12},"name":"from","qualname":"<AnyDelimiterCodecError as std::convert::From>::from","value":"fn from(io::Error) -> AnyDelimiterCodecError","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1286},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/mod.rs","parent":null,"children":[{"krate":0,"index":1287},{"krate":0,"index":1328},{"krate":0,"index":1367},{"krate":0,"index":1425},{"krate":0,"index":1428},{"krate":0,"index":1431},{"krate":0,"index":1434},{"krate":0,"index":1435},{"krate":0,"index":1438}],"decl_id":null,"docs":" Helpers for IO related tasks.","sig":null,"attributes":[{"value":"cfg(feature = \"io\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/cfg.rs","byte_start":6068,"byte_end":6090,"line_start":34,"line_end":34,"column_start":13,"column_end":35}},{"value":"/ Helpers for IO related tasks.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/mod.rs","byte_start":16338657,"byte_end":16338690,"line_start":1,"line_end":1,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/mod.rs","byte_start":16338691,"byte_end":16338694,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The stream types are often used in combination with hyper or reqwest, as they","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/mod.rs","byte_start":16338695,"byte_end":16338776,"line_start":3,"line_end":3,"column_start":1,"column_end":82}},{"value":"/ allow converting between a hyper [`Body`] and [`AsyncRead`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/mod.rs","byte_start":16338777,"byte_end":16338841,"line_start":4,"line_end":4,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/mod.rs","byte_start":16338842,"byte_end":16338845,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ The [`SyncIoBridge`] type converts from the world of async I/O","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/mod.rs","byte_start":16338846,"byte_end":16338912,"line_start":6,"line_end":6,"column_start":1,"column_end":67}},{"value":"/ to synchronous I/O; this may often come up when using synchronous APIs","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/mod.rs","byte_start":16338913,"byte_end":16338987,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/ inside [`tokio::task::spawn_blocking`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/mod.rs","byte_start":16338988,"byte_end":16339031,"line_start":8,"line_end":8,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/mod.rs","byte_start":16339032,"byte_end":16339035,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`Body`]: https://docs.rs/hyper/0.13/hyper/struct.Body.html","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/mod.rs","byte_start":16339036,"byte_end":16339099,"line_start":10,"line_end":10,"column_start":1,"column_end":64}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/mod.rs","byte_start":16339100,"byte_end":16339139,"line_start":11,"line_end":11,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1310},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/read_buf.rs","byte_start":16340510,"byte_end":16340518,"line_start":44,"line_end":44,"column_start":14,"column_end":22},"name":"read_buf","qualname":"::io::read_buf::read_buf","value":"async fn read_buf<R, B, '_, '_>(&'_ mut R, &'_ mut B) -> /*impl Trait*/ where\nR: AsyncRead + Unpin, B: BufMut","parent":null,"children":[],"decl_id":null,"docs":" Read data from an `AsyncRead` into an implementer of the [`BufMut`] trait.","sig":null,"attributes":[{"value":"/ Read data from an `AsyncRead` into an implementer of the [`BufMut`] trait.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/read_buf.rs","byte_start":16339587,"byte_end":16339665,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/read_buf.rs","byte_start":16339666,"byte_end":16339669,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`BufMut`]: bytes::BufMut","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/read_buf.rs","byte_start":16339670,"byte_end":16339699,"line_start":10,"line_end":10,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/read_buf.rs","byte_start":16339700,"byte_end":16339703,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/read_buf.rs","byte_start":16339704,"byte_end":16339717,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/read_buf.rs","byte_start":16339718,"byte_end":16339721,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/read_buf.rs","byte_start":16339722,"byte_end":16339729,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"/ use bytes::{Bytes, BytesMut};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/read_buf.rs","byte_start":16339730,"byte_end":16339763,"line_start":15,"line_end":15,"column_start":1,"column_end":34}},{"value":"/ use tokio_stream as stream;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/read_buf.rs","byte_start":16339764,"byte_end":16339795,"line_start":16,"line_end":16,"column_start":1,"column_end":32}},{"value":"/ use tokio::io::Result;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/read_buf.rs","byte_start":16339796,"byte_end":16339822,"line_start":17,"line_end":17,"column_start":1,"column_end":27}},{"value":"/ use tokio_util::io::{StreamReader, read_buf};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/read_buf.rs","byte_start":16339823,"byte_end":16339872,"line_start":18,"line_end":18,"column_start":1,"column_end":50}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/read_buf.rs","byte_start":16339873,"byte_end":16339893,"line_start":19,"line_end":19,"column_start":1,"column_end":21}},{"value":"/ # async fn main() -> std::io::Result<()> {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/read_buf.rs","byte_start":16339894,"byte_end":16339940,"line_start":20,"line_end":20,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/read_buf.rs","byte_start":16339941,"byte_end":16339944,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ // Create a reader from an iterator. This particular reader will always be","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/read_buf.rs","byte_start":16339945,"byte_end":16340023,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ // ready.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/read_buf.rs","byte_start":16340024,"byte_end":16340037,"line_start":23,"line_end":23,"column_start":1,"column_end":14}},{"value":"/ let mut read = StreamReader::new(stream::iter(vec![Result::Ok(Bytes::from_static(&[0, 1, 2, 3]))]));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/read_buf.rs","byte_start":16340038,"byte_end":16340142,"line_start":24,"line_end":24,"column_start":1,"column_end":105}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/read_buf.rs","byte_start":16340143,"byte_end":16340146,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let mut buf = BytesMut::new();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/read_buf.rs","byte_start":16340147,"byte_end":16340181,"line_start":26,"line_end":26,"column_start":1,"column_end":35}},{"value":"/ let mut reads = 0;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/read_buf.rs","byte_start":16340182,"byte_end":16340204,"line_start":27,"line_end":27,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/read_buf.rs","byte_start":16340205,"byte_end":16340208,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ loop {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/read_buf.rs","byte_start":16340209,"byte_end":16340219,"line_start":29,"line_end":29,"column_start":1,"column_end":11}},{"value":"/     reads += 1;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/read_buf.rs","byte_start":16340220,"byte_end":16340239,"line_start":30,"line_end":30,"column_start":1,"column_end":20}},{"value":"/     let n = read_buf(&mut read, &mut buf).await?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/read_buf.rs","byte_start":16340240,"byte_end":16340293,"line_start":31,"line_end":31,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/read_buf.rs","byte_start":16340294,"byte_end":16340297,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     if n == 0 {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/read_buf.rs","byte_start":16340298,"byte_end":16340317,"line_start":33,"line_end":33,"column_start":1,"column_end":20}},{"value":"/         break;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/read_buf.rs","byte_start":16340318,"byte_end":16340336,"line_start":34,"line_end":34,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/read_buf.rs","byte_start":16340337,"byte_end":16340346,"line_start":35,"line_end":35,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/read_buf.rs","byte_start":16340347,"byte_end":16340352,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/read_buf.rs","byte_start":16340353,"byte_end":16340356,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ // one or more reads might be necessary.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/read_buf.rs","byte_start":16340357,"byte_end":16340401,"line_start":38,"line_end":38,"column_start":1,"column_end":45}},{"value":"/ assert!(reads >= 1);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/read_buf.rs","byte_start":16340402,"byte_end":16340426,"line_start":39,"line_end":39,"column_start":1,"column_end":25}},{"value":"/ assert_eq!(&buf[..], &[0, 1, 2, 3]);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/read_buf.rs","byte_start":16340427,"byte_end":16340467,"line_start":40,"line_end":40,"column_start":1,"column_end":41}},{"value":"/ # Ok(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/read_buf.rs","byte_start":16340468,"byte_end":16340480,"line_start":41,"line_end":41,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/read_buf.rs","byte_start":16340481,"byte_end":16340488,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/read_buf.rs","byte_start":16340489,"byte_end":16340496,"line_start":43,"line_end":43,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1578},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/reader_stream.rs","byte_start":16342404,"byte_end":16342416,"line_start":45,"line_end":45,"column_start":16,"column_end":28},"name":"ReaderStream","qualname":"::io::reader_stream::ReaderStream","value":"ReaderStream {  }","parent":null,"children":[{"krate":0,"index":1580},{"krate":0,"index":1581},{"krate":0,"index":1582}],"decl_id":null,"docs":" Convert an [`AsyncRead`] into a [`Stream`] of byte chunks.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1358},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/reader_stream.rs","byte_start":16342925,"byte_end":16342928,"line_start":63,"line_end":63,"column_start":12,"column_end":15},"name":"new","qualname":"<ReaderStream<R>>::new","value":"fn new(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert an [`AsyncRead`] into a [`Stream`] with item type\n `Result<Bytes, std::io::Error>`.","sig":null,"attributes":[{"value":"/ Convert an [`AsyncRead`] into a [`Stream`] with item type","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/reader_stream.rs","byte_start":16342718,"byte_end":16342779,"line_start":58,"line_end":58,"column_start":5,"column_end":66}},{"value":"/ `Result<Bytes, std::io::Error>`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/reader_stream.rs","byte_start":16342784,"byte_end":16342820,"line_start":59,"line_end":59,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/reader_stream.rs","byte_start":16342825,"byte_end":16342828,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/reader_stream.rs","byte_start":16342833,"byte_end":16342872,"line_start":61,"line_end":61,"column_start":5,"column_end":44}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/reader_stream.rs","byte_start":16342877,"byte_end":16342913,"line_start":62,"line_end":62,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1359},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/reader_stream.rs","byte_start":16343363,"byte_end":16343376,"line_start":77,"line_end":77,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<ReaderStream<R>>::with_capacity","value":"fn with_capacity(R, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert an [`AsyncRead`] into a [`Stream`] with item type\n `Result<Bytes, std::io::Error>`,\n with a specific read buffer initial capacity.","sig":null,"attributes":[{"value":"/ Convert an [`AsyncRead`] into a [`Stream`] with item type","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/reader_stream.rs","byte_start":16343102,"byte_end":16343163,"line_start":71,"line_end":71,"column_start":5,"column_end":66}},{"value":"/ `Result<Bytes, std::io::Error>`,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/reader_stream.rs","byte_start":16343168,"byte_end":16343204,"line_start":72,"line_end":72,"column_start":5,"column_end":41}},{"value":"/ with a specific read buffer initial capacity.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/reader_stream.rs","byte_start":16343209,"byte_end":16343258,"line_start":73,"line_end":73,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/reader_stream.rs","byte_start":16343263,"byte_end":16343266,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/reader_stream.rs","byte_start":16343271,"byte_end":16343310,"line_start":75,"line_end":75,"column_start":5,"column_end":44}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/reader_stream.rs","byte_start":16343315,"byte_end":16343351,"line_start":76,"line_end":76,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1363},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/reader_stream.rs","byte_start":16343660,"byte_end":16343669,"line_start":88,"line_end":88,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<ReaderStream<R> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":39,"index":96},"children":[],"decl_id":{"krate":39,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1529},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/stream_reader.rs","byte_start":16346384,"byte_end":16346396,"line_start":57,"line_end":57,"column_start":16,"column_end":28},"name":"StreamReader","qualname":"::io::stream_reader::StreamReader","value":"StreamReader {  }","parent":null,"children":[{"krate":0,"index":1532},{"krate":0,"index":1533}],"decl_id":null,"docs":" Convert a [`Stream`] of byte chunks into an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1404},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/stream_reader.rs","byte_start":16347013,"byte_end":16347016,"line_start":79,"line_end":79,"column_start":12,"column_end":15},"name":"new","qualname":"<StreamReader<S, B>>::new","value":"fn new(S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert a stream of byte chunks into an [`AsyncRead`](tokio::io::AsyncRead).","sig":null,"attributes":[{"value":"/ Convert a stream of byte chunks into an [`AsyncRead`](tokio::io::AsyncRead).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/stream_reader.rs","byte_start":16346595,"byte_end":16346675,"line_start":70,"line_end":70,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/stream_reader.rs","byte_start":16346680,"byte_end":16346683,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ The item should be a [`Result`] with the ok variant being something that","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/stream_reader.rs","byte_start":16346688,"byte_end":16346764,"line_start":72,"line_end":72,"column_start":5,"column_end":81}},{"value":"/ implements the [`Buf`] trait (e.g. `Vec<u8>` or `Bytes`). The error","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/stream_reader.rs","byte_start":16346769,"byte_end":16346840,"line_start":73,"line_end":73,"column_start":5,"column_end":76}},{"value":"/ should be convertible into an [io error].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/stream_reader.rs","byte_start":16346845,"byte_end":16346890,"line_start":74,"line_end":74,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/stream_reader.rs","byte_start":16346895,"byte_end":16346898,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ [`Result`]: std::result::Result","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/stream_reader.rs","byte_start":16346903,"byte_end":16346938,"line_start":76,"line_end":76,"column_start":5,"column_end":40}},{"value":"/ [`Buf`]: bytes::Buf","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/stream_reader.rs","byte_start":16346943,"byte_end":16346966,"line_start":77,"line_end":77,"column_start":5,"column_end":28}},{"value":"/ [io error]: std::io::Error","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/stream_reader.rs","byte_start":16346971,"byte_end":16347001,"line_start":78,"line_end":78,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1406},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/stream_reader.rs","byte_start":16347544,"byte_end":16347565,"line_start":98,"line_end":98,"column_start":12,"column_end":33},"name":"into_inner_with_chunk","qualname":"<StreamReader<S, B>>::into_inner_with_chunk","value":"fn into_inner_with_chunk(Self) -> (S, Option<B>)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `StreamReader`, returning a Tuple consisting\n of the underlying stream and an Option of the interal buffer,\n which is Some in case the buffer contains elements.\n","sig":null,"attributes":[{"value":"/ Consumes this `StreamReader`, returning a Tuple consisting","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/stream_reader.rs","byte_start":16347340,"byte_end":16347402,"line_start":95,"line_end":95,"column_start":5,"column_end":67}},{"value":"/ of the underlying stream and an Option of the interal buffer,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/stream_reader.rs","byte_start":16347407,"byte_end":16347472,"line_start":96,"line_end":96,"column_start":5,"column_end":70}},{"value":"/ which is Some in case the buffer contains elements.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/stream_reader.rs","byte_start":16347477,"byte_end":16347532,"line_start":97,"line_end":97,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1410},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/stream_reader.rs","byte_start":16347899,"byte_end":16347906,"line_start":111,"line_end":111,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<StreamReader<S, B>>::get_ref","value":"fn get_ref(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying stream.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying stream.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/stream_reader.rs","byte_start":16347762,"byte_end":16347808,"line_start":108,"line_end":108,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/stream_reader.rs","byte_start":16347813,"byte_end":16347816,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying stream.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/stream_reader.rs","byte_start":16347821,"byte_end":16347887,"line_start":110,"line_end":110,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1411},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/stream_reader.rs","byte_start":16348098,"byte_end":16348105,"line_start":118,"line_end":118,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<StreamReader<S, B>>::get_mut","value":"fn get_mut(&mut Self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying stream.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying stream.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/stream_reader.rs","byte_start":16347953,"byte_end":16348007,"line_start":115,"line_end":115,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/stream_reader.rs","byte_start":16348012,"byte_end":16348015,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying stream.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/stream_reader.rs","byte_start":16348020,"byte_end":16348086,"line_start":117,"line_end":117,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1412},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/stream_reader.rs","byte_start":16348316,"byte_end":16348327,"line_start":125,"line_end":125,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<StreamReader<S, B>>::get_pin_mut","value":"fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut S>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying stream.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying stream.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/stream_reader.rs","byte_start":16348164,"byte_end":16348225,"line_start":122,"line_end":122,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/stream_reader.rs","byte_start":16348230,"byte_end":16348233,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying stream.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/stream_reader.rs","byte_start":16348238,"byte_end":16348304,"line_start":124,"line_end":124,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1413},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/stream_reader.rs","byte_start":16348750,"byte_end":16348760,"line_start":136,"line_end":136,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<StreamReader<S, B>>::into_inner","value":"fn into_inner(Self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufWriter`, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this `BufWriter`, returning the underlying stream.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/stream_reader.rs","byte_start":16348407,"byte_end":16348470,"line_start":129,"line_end":129,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/stream_reader.rs","byte_start":16348475,"byte_end":16348478,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/stream_reader.rs","byte_start":16348483,"byte_end":16348546,"line_start":131,"line_end":131,"column_start":5,"column_end":68}},{"value":"/ If you additionally want access to the internal buffer use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/stream_reader.rs","byte_start":16348551,"byte_end":16348613,"line_start":132,"line_end":132,"column_start":5,"column_end":67}},{"value":"/ [`into_inner_with_chunk`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/stream_reader.rs","byte_start":16348618,"byte_end":16348648,"line_start":133,"line_end":133,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/stream_reader.rs","byte_start":16348653,"byte_end":16348656,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ [`into_inner_with_chunk`]: crate::io::StreamReader::into_inner_with_chunk","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/stream_reader.rs","byte_start":16348661,"byte_end":16348738,"line_start":135,"line_end":135,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1418},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/stream_reader.rs","byte_start":16348941,"byte_end":16348950,"line_start":147,"line_end":147,"column_start":8,"column_end":17},"name":"poll_read","qualname":"<StreamReader<S, B> as tokio::io::AsyncRead>::poll_read","value":"fn poll_read(Pin<&mut Self>, &mut Context, &mut ReadBuf)\n-> Poll<io::Result<()>>","parent":{"krate":22,"index":227},"children":[],"decl_id":{"krate":22,"index":228},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1423},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/stream_reader.rs","byte_start":16349714,"byte_end":16349727,"line_start":175,"line_end":175,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"<StreamReader<S, B> as tokio::io::AsyncBufRead>::poll_fill_buf","value":"fn poll_fill_buf(Pin<&mut Self>, &mut Context) -> Poll<io::Result<&[u8]>>","parent":{"krate":22,"index":185},"children":[],"decl_id":{"krate":22,"index":186},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1424},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/stream_reader.rs","byte_start":16350632,"byte_end":16350639,"line_start":194,"line_end":194,"column_start":8,"column_end":15},"name":"consume","qualname":"<StreamReader<S, B> as tokio::io::AsyncBufRead>::consume","value":"fn consume(Pin<&mut Self>, usize)","parent":{"krate":22,"index":185},"children":[],"decl_id":{"krate":22,"index":187},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":14},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mod.rs","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":112},{"krate":0,"index":115},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":183},{"krate":0,"index":186},{"krate":0,"index":246},{"krate":0,"index":249},{"krate":0,"index":317}],"decl_id":null,"docs":" Synchronization primitives\n","sig":null,"attributes":[{"value":"/ Synchronization primitives","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mod.rs","byte_start":6853,"byte_end":6883,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":1441},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token/guard.rs","byte_start":14322,"byte_end":14331,"line_start":6,"line_end":6,"column_start":12,"column_end":21},"name":"DropGuard","qualname":"::sync::cancellation_token::guard::DropGuard","value":"DropGuard {  }","parent":null,"children":[{"krate":0,"index":1442}],"decl_id":null,"docs":" A wrapper for cancellation token which automatically cancels\n it on drop. It is created using `drop_guard` method on the `CancellationToken`.\n","sig":null,"attributes":[{"value":"/ A wrapper for cancellation token which automatically cancels","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token/guard.rs","byte_start":14145,"byte_end":14209,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"/ it on drop. It is created using `drop_guard` method on the `CancellationToken`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token/guard.rs","byte_start":14210,"byte_end":14293,"line_start":4,"line_end":4,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token/guard.rs","byte_start":14594,"byte_end":14600,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"disarm","qualname":"<DropGuard>::disarm","value":"fn disarm(Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Returns stored cancellation token and removes this drop guard instance\n (i.e. it will no longer cancel token). Other guards for this token\n are not affected.\n","sig":null,"attributes":[{"value":"/ Returns stored cancellation token and removes this drop guard instance","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token/guard.rs","byte_start":14407,"byte_end":14481,"line_start":11,"line_end":11,"column_start":5,"column_end":79}},{"value":"/ (i.e. it will no longer cancel token). Other guards for this token","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token/guard.rs","byte_start":14486,"byte_end":14556,"line_start":12,"line_end":12,"column_start":5,"column_end":75}},{"value":"/ are not affected.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token/guard.rs","byte_start":14561,"byte_end":14582,"line_start":13,"line_end":13,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token/guard.rs","byte_start":14779,"byte_end":14783,"line_start":22,"line_end":22,"column_start":8,"column_end":12},"name":"drop","qualname":"<DropGuard as std::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":2,"index":3422},"children":[],"decl_id":{"krate":2,"index":3423},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":81},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":8733,"byte_end":8750,"line_start":54,"line_end":54,"column_start":12,"column_end":29},"name":"CancellationToken","qualname":"::sync::cancellation_token::CancellationToken","value":"CancellationToken {  }","parent":null,"children":[{"krate":0,"index":82}],"decl_id":null,"docs":" A token which can be used to signal a cancellation request to one or more\n tasks.","sig":null,"attributes":[{"value":"/ A token which can be used to signal a cancellation request to one or more","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":7511,"byte_end":7588,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ tasks.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":7589,"byte_end":7599,"line_start":15,"line_end":15,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":7600,"byte_end":7603,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Tasks can call [`CancellationToken::cancelled()`] in order to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":7604,"byte_end":7669,"line_start":17,"line_end":17,"column_start":1,"column_end":66}},{"value":"/ obtain a Future which will be resolved when cancellation is requested.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":7670,"byte_end":7744,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":7745,"byte_end":7748,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Cancellation can be requested through the [`CancellationToken::cancel`] method.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":7749,"byte_end":7832,"line_start":20,"line_end":20,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":7833,"byte_end":7836,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":7837,"byte_end":7851,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":7852,"byte_end":7855,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":7856,"byte_end":7869,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/ use tokio::select;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":7870,"byte_end":7892,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/ use tokio_util::sync::CancellationToken;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":7893,"byte_end":7937,"line_start":26,"line_end":26,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":7938,"byte_end":7941,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":7942,"byte_end":7960,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":7961,"byte_end":7982,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":7983,"byte_end":8028,"line_start":30,"line_end":30,"column_start":1,"column_end":46}},{"value":"/     let cloned_token = token.clone();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":8029,"byte_end":8070,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":8071,"byte_end":8074,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":8075,"byte_end":8126,"line_start":33,"line_end":33,"column_start":1,"column_end":52}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":8127,"byte_end":8190,"line_start":34,"line_end":34,"column_start":1,"column_end":64}},{"value":"/         select! {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":8191,"byte_end":8212,"line_start":35,"line_end":35,"column_start":1,"column_end":22}},{"value":"/             _ = cloned_token.cancelled() => {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":8213,"byte_end":8262,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/                 // The token was cancelled","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":8263,"byte_end":8309,"line_start":37,"line_end":37,"column_start":1,"column_end":47}},{"value":"/                 5","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":8310,"byte_end":8331,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":8332,"byte_end":8349,"line_start":39,"line_end":39,"column_start":1,"column_end":18}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":8350,"byte_end":8431,"line_start":40,"line_end":40,"column_start":1,"column_end":82}},{"value":"/                 99","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":8432,"byte_end":8454,"line_start":41,"line_end":41,"column_start":1,"column_end":23}},{"value":"/             }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":8455,"byte_end":8472,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":8473,"byte_end":8486,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":8487,"byte_end":8498,"line_start":44,"line_end":44,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":8499,"byte_end":8502,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":8503,"byte_end":8536,"line_start":46,"line_end":46,"column_start":1,"column_end":34}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":8537,"byte_end":8612,"line_start":47,"line_end":47,"column_start":1,"column_end":76}},{"value":"/         token.cancel();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":8613,"byte_end":8640,"line_start":48,"line_end":48,"column_start":1,"column_end":28}},{"value":"/     });","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":8641,"byte_end":8652,"line_start":49,"line_end":49,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":8653,"byte_end":8656,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":8657,"byte_end":8707,"line_start":51,"line_end":51,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":8708,"byte_end":8713,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":8714,"byte_end":8721,"line_start":53,"line_end":53,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1445},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":8977,"byte_end":9002,"line_start":62,"line_end":62,"column_start":16,"column_end":41},"name":"WaitForCancellationFuture","qualname":"::sync::cancellation_token::WaitForCancellationFuture","value":"WaitForCancellationFuture {  }","parent":null,"children":[{"krate":0,"index":1447},{"krate":0,"index":1448}],"decl_id":null,"docs":" A Future that is resolved once the corresponding [`CancellationToken`]\n is cancelled.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14087011,"byte_end":14087020,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":9228,"byte_end":9231,"line_start":72,"line_end":72,"column_start":8,"column_end":11},"name":"fmt","qualname":"<CancellationToken as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut core::fmt::Formatter) -> core::fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":9470,"byte_end":9475,"line_start":80,"line_end":80,"column_start":8,"column_end":13},"name":"clone","qualname":"<CancellationToken as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":9678,"byte_end":9682,"line_start":89,"line_end":89,"column_start":8,"column_end":12},"name":"drop","qualname":"<CancellationToken as std::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":2,"index":3422},"children":[],"decl_id":{"krate":2,"index":3423},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":9807,"byte_end":9814,"line_start":95,"line_end":95,"column_start":8,"column_end":15},"name":"default","qualname":"<CancellationToken as std::default::Default>::default","value":"fn default() -> CancellationToken","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":9986,"byte_end":9989,"line_start":102,"line_end":102,"column_start":12,"column_end":15},"name":"new","qualname":"<CancellationToken>::new","value":"fn new() -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a new CancellationToken in the non-cancelled state.\n","sig":null,"attributes":[{"value":"/ Creates a new CancellationToken in the non-cancelled state.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":9911,"byte_end":9974,"line_start":101,"line_end":101,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":11388,"byte_end":11399,"line_start":146,"line_end":146,"column_start":12,"column_end":23},"name":"child_token","qualname":"<CancellationToken>::child_token","value":"fn child_token(&Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a `CancellationToken` which will get cancelled whenever the\n current token gets cancelled.","sig":null,"attributes":[{"value":"/ Creates a `CancellationToken` which will get cancelled whenever the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":10121,"byte_end":10192,"line_start":108,"line_end":108,"column_start":5,"column_end":76}},{"value":"/ current token gets cancelled.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":10197,"byte_end":10230,"line_start":109,"line_end":109,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":10235,"byte_end":10238,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ If the current token is already cancelled, the child token will get","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":10243,"byte_end":10314,"line_start":111,"line_end":111,"column_start":5,"column_end":76}},{"value":"/ returned in cancelled state.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":10319,"byte_end":10351,"line_start":112,"line_end":112,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":10356,"byte_end":10359,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":10364,"byte_end":10378,"line_start":114,"line_end":114,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":10383,"byte_end":10386,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":10391,"byte_end":10404,"line_start":116,"line_end":116,"column_start":5,"column_end":18}},{"value":"/ use tokio::select;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":10409,"byte_end":10431,"line_start":117,"line_end":117,"column_start":5,"column_end":27}},{"value":"/ use tokio_util::sync::CancellationToken;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":10436,"byte_end":10480,"line_start":118,"line_end":118,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":10485,"byte_end":10488,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":10493,"byte_end":10511,"line_start":120,"line_end":120,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":10516,"byte_end":10537,"line_start":121,"line_end":121,"column_start":5,"column_end":26}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":10542,"byte_end":10587,"line_start":122,"line_end":122,"column_start":5,"column_end":50}},{"value":"/     let child_token = token.child_token();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":10592,"byte_end":10638,"line_start":123,"line_end":123,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":10643,"byte_end":10646,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":10651,"byte_end":10702,"line_start":125,"line_end":125,"column_start":5,"column_end":56}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":10707,"byte_end":10770,"line_start":126,"line_end":126,"column_start":5,"column_end":68}},{"value":"/         select! {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":10775,"byte_end":10796,"line_start":127,"line_end":127,"column_start":5,"column_end":26}},{"value":"/             _ = child_token.cancelled() => {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":10801,"byte_end":10849,"line_start":128,"line_end":128,"column_start":5,"column_end":53}},{"value":"/                 // The token was cancelled","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":10854,"byte_end":10900,"line_start":129,"line_end":129,"column_start":5,"column_end":51}},{"value":"/                 5","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":10905,"byte_end":10926,"line_start":130,"line_end":130,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":10931,"byte_end":10948,"line_start":131,"line_end":131,"column_start":5,"column_end":22}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":10953,"byte_end":11034,"line_start":132,"line_end":132,"column_start":5,"column_end":86}},{"value":"/                 99","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":11039,"byte_end":11061,"line_start":133,"line_end":133,"column_start":5,"column_end":27}},{"value":"/             }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":11066,"byte_end":11083,"line_start":134,"line_end":134,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":11088,"byte_end":11101,"line_start":135,"line_end":135,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":11106,"byte_end":11117,"line_start":136,"line_end":136,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":11122,"byte_end":11125,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":11130,"byte_end":11163,"line_start":138,"line_end":138,"column_start":5,"column_end":38}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":11168,"byte_end":11243,"line_start":139,"line_end":139,"column_start":5,"column_end":80}},{"value":"/         token.cancel();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":11248,"byte_end":11275,"line_start":140,"line_end":140,"column_start":5,"column_end":32}},{"value":"/     });","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":11280,"byte_end":11291,"line_start":141,"line_end":141,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":11296,"byte_end":11299,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":11304,"byte_end":11354,"line_start":143,"line_end":143,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":11359,"byte_end":11364,"line_start":144,"line_end":144,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":11369,"byte_end":11376,"line_start":145,"line_end":145,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":12122,"byte_end":12128,"line_start":162,"line_end":162,"column_start":12,"column_end":18},"name":"cancel","qualname":"<CancellationToken>::cancel","value":"fn cancel(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Cancel the [`CancellationToken`] and all child tokens which had been\n derived from it.","sig":null,"attributes":[{"value":"/ Cancel the [`CancellationToken`] and all child tokens which had been","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":11534,"byte_end":11606,"line_start":152,"line_end":152,"column_start":5,"column_end":77}},{"value":"/ derived from it.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":11611,"byte_end":11631,"line_start":153,"line_end":153,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":11636,"byte_end":11639,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ This will wake up all tasks which are waiting for cancellation.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":11644,"byte_end":11711,"line_start":155,"line_end":155,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":11716,"byte_end":11719,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ Be aware that cancellation is not an atomic operation. It is possible","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":11724,"byte_end":11797,"line_start":157,"line_end":157,"column_start":5,"column_end":78}},{"value":"/ for another thread running in parallel with a call to `cancel` to first","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":11802,"byte_end":11877,"line_start":158,"line_end":158,"column_start":5,"column_end":80}},{"value":"/ receive `true` from `is_cancelled` on one child node, and then receive","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":11882,"byte_end":11956,"line_start":159,"line_end":159,"column_start":5,"column_end":79}},{"value":"/ `false` from `is_cancelled` on another child node. However, once the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":11961,"byte_end":12033,"line_start":160,"line_end":160,"column_start":5,"column_end":77}},{"value":"/ call to `cancel` returns, all child nodes have been fully cancelled.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":12038,"byte_end":12110,"line_start":161,"line_end":161,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":12260,"byte_end":12272,"line_start":167,"line_end":167,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<CancellationToken>::is_cancelled","value":"fn is_cancelled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `CancellationToken` is cancelled.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the `CancellationToken` is cancelled.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":12189,"byte_end":12248,"line_start":166,"line_end":166,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":12631,"byte_end":12640,"line_start":179,"line_end":179,"column_start":12,"column_end":21},"name":"cancelled","qualname":"<CancellationToken>::cancelled","value":"fn cancelled(&Self) -> WaitForCancellationFuture","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Future` that gets fulfilled when cancellation is requested.","sig":null,"attributes":[{"value":"/ Returns a `Future` that gets fulfilled when cancellation is requested.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":12346,"byte_end":12420,"line_start":171,"line_end":171,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":12425,"byte_end":12428,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ The future will complete immediately if the token is already cancelled","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":12433,"byte_end":12507,"line_start":173,"line_end":173,"column_start":5,"column_end":79}},{"value":"/ when this method is called.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":12512,"byte_end":12543,"line_start":174,"line_end":174,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":12548,"byte_end":12551,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":12556,"byte_end":12575,"line_start":176,"line_end":176,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":12580,"byte_end":12583,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ This method is cancel safe.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":12588,"byte_end":12619,"line_start":178,"line_end":178,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":12984,"byte_end":12994,"line_start":190,"line_end":190,"column_start":12,"column_end":22},"name":"drop_guard","qualname":"<CancellationToken>::drop_guard","value":"fn drop_guard(Self) -> DropGuard","parent":null,"children":[],"decl_id":null,"docs":" Creates a `DropGuard` for this token.","sig":null,"attributes":[{"value":"/ Creates a `DropGuard` for this token.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":12821,"byte_end":12862,"line_start":186,"line_end":186,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":12867,"byte_end":12870,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ Returned guard will cancel this token (and all its children) on drop","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":12875,"byte_end":12947,"line_start":188,"line_end":188,"column_start":5,"column_end":77}},{"value":"/ unless disarmed.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":12952,"byte_end":12972,"line_start":189,"line_end":189,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":13181,"byte_end":13184,"line_start":198,"line_end":198,"column_start":8,"column_end":11},"name":"fmt","qualname":"<WaitForCancellationFuture as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut core::fmt::Formatter) -> core::fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":13401,"byte_end":13405,"line_start":206,"line_end":206,"column_start":8,"column_end":12},"name":"poll","qualname":"<WaitForCancellationFuture as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<()>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1482},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":29397,"byte_end":29410,"line_start":12,"line_end":12,"column_start":12,"column_end":25},"name":"PollSendError","qualname":"::sync::mpsc::PollSendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `PollSender` when the channel is closed.\n","sig":null,"attributes":[{"value":"/ Error returned by the `PollSender` when the channel is closed.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":29302,"byte_end":29368,"line_start":10,"line_end":10,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":29689,"byte_end":29699,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollSendError<T>>::into_inner","value":"fn into_inner(Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the stored value, if any.","sig":null,"attributes":[{"value":"/ Consumes the stored value, if any.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":29458,"byte_end":29496,"line_start":15,"line_end":15,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":29501,"byte_end":29504,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ If this error was encountered when calling `start_send`/`send_item`, this will be the item","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":29509,"byte_end":29603,"line_start":17,"line_end":17,"column_start":5,"column_end":99}},{"value":"/ that the caller attempted to send.  Otherwise, it will be `None`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":29608,"byte_end":29677,"line_start":18,"line_end":18,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":29796,"byte_end":29799,"line_start":25,"line_end":25,"column_start":8,"column_end":11},"name":"fmt","qualname":"<PollSendError<T> as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10117},"children":[],"decl_id":{"krate":2,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1504},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":30219,"byte_end":30229,"line_start":44,"line_end":44,"column_start":12,"column_end":22},"name":"PollSender","qualname":"::sync::mpsc::PollSender","value":"PollSender {  }","parent":null,"children":[{"krate":0,"index":1506},{"krate":0,"index":1507},{"krate":0,"index":1508}],"decl_id":null,"docs":" A wrapper around [`mpsc::Sender`] that can be polled.","sig":null,"attributes":[{"value":"/ A wrapper around [`mpsc::Sender`] that can be polled.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":30081,"byte_end":30138,"line_start":40,"line_end":40,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":30139,"byte_end":30142,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ [`mpsc::Sender`]: tokio::sync::mpsc::Sender","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":30143,"byte_end":30190,"line_start":42,"line_end":42,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":31133,"byte_end":31136,"line_start":69,"line_end":69,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSender<T>>::new","value":"fn new(Sender<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `PollSender`.\n","sig":null,"attributes":[{"value":"/ Creates a new `PollSender`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":31090,"byte_end":31121,"line_start":68,"line_end":68,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":32120,"byte_end":32132,"line_start":94,"line_end":94,"column_start":12,"column_end":24},"name":"poll_reserve","qualname":"<PollSender<T>>::poll_reserve","value":"fn poll_reserve(&mut Self, &mut Context) -> Poll<Result<(), PollSendError<T>>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to prepare the sender to receive a value.","sig":null,"attributes":[{"value":"/ Attempts to prepare the sender to receive a value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":31459,"byte_end":31513,"line_start":81,"line_end":81,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":31518,"byte_end":31521,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This method must be called and return `Poll::Ready(Ok(()))` prior to each call to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":31526,"byte_end":31611,"line_start":83,"line_end":83,"column_start":5,"column_end":90}},{"value":"/ `send_item`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":31616,"byte_end":31632,"line_start":84,"line_end":84,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":31637,"byte_end":31640,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ This method returns `Poll::Ready` once the underlying channel is ready to receive a value,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":31645,"byte_end":31739,"line_start":86,"line_end":86,"column_start":5,"column_end":99}},{"value":"/ by reserving a slot in the channel for the item to be sent. If this method returns","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":31744,"byte_end":31830,"line_start":87,"line_end":87,"column_start":5,"column_end":91}},{"value":"/ `Poll::Pending`, the current task is registered to be notified (via","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":31835,"byte_end":31906,"line_start":88,"line_end":88,"column_start":5,"column_end":76}},{"value":"/ `cx.waker().wake_by_ref()`) when `poll_reserve` should be called again.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":31911,"byte_end":31986,"line_start":89,"line_end":89,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":31991,"byte_end":31994,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":31999,"byte_end":32011,"line_start":91,"line_end":91,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":32016,"byte_end":32019,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ If the channel is closed, an error will be returned.  This is a permanent state.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":32024,"byte_end":32108,"line_start":93,"line_end":93,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":34137,"byte_end":34146,"line_start":139,"line_end":139,"column_start":12,"column_end":21},"name":"send_item","qualname":"<PollSender<T>>::send_item","value":"fn send_item(&mut Self, T) -> Result<(), PollSendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sends an item to the channel.","sig":null,"attributes":[{"value":"/ Sends an item to the channel.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":33677,"byte_end":33710,"line_start":126,"line_end":126,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":33715,"byte_end":33718,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ Before calling `send_item`, `poll_reserve` must be called with a successful return","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":33723,"byte_end":33809,"line_start":128,"line_end":128,"column_start":5,"column_end":91}},{"value":"/ value of `Poll::Ready(Ok(()))`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":33814,"byte_end":33849,"line_start":129,"line_end":129,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":33854,"byte_end":33857,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":33862,"byte_end":33874,"line_start":131,"line_end":131,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":33879,"byte_end":33882,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ If the channel is closed, an error will be returned.  This is a permanent state.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":33887,"byte_end":33971,"line_start":133,"line_end":133,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":33976,"byte_end":33979,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":33984,"byte_end":33996,"line_start":135,"line_end":135,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":34001,"byte_end":34004,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ If `poll_reserve` was not successfully called prior to calling `send_item`, then this method","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":34009,"byte_end":34105,"line_start":137,"line_end":137,"column_start":5,"column_end":101}},{"value":"/ will panic.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":34110,"byte_end":34125,"line_start":138,"line_end":138,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":35165,"byte_end":35174,"line_start":162,"line_end":162,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<PollSender<T>>::is_closed","value":"fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether this sender is been closed.","sig":null,"attributes":[{"value":"/ Checks whether this sender is been closed.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":35019,"byte_end":35065,"line_start":159,"line_end":159,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":35070,"byte_end":35073,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ The underlying channel that this sender was wrapping may still be open.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":35078,"byte_end":35153,"line_start":161,"line_end":161,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":35496,"byte_end":35503,"line_start":170,"line_end":170,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<PollSender<T>>::get_ref","value":"fn get_ref(&Self) -> Option<&Sender<T>>","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the `Sender` of the underlying channel.","sig":null,"attributes":[{"value":"/ Gets a reference to the `Sender` of the underlying channel.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":35272,"byte_end":35335,"line_start":166,"line_end":166,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":35340,"byte_end":35343,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ If `PollSender` has been closed, `None` is returned. The underlying channel that this sender","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":35348,"byte_end":35444,"line_start":168,"line_end":168,"column_start":5,"column_end":101}},{"value":"/ was wrapping may still be open.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":35449,"byte_end":35484,"line_start":169,"line_end":169,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":36301,"byte_end":36306,"line_start":186,"line_end":186,"column_start":12,"column_end":17},"name":"close","qualname":"<PollSender<T>>::close","value":"fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes this sender.","sig":null,"attributes":[{"value":"/ Closes this sender.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":35575,"byte_end":35598,"line_start":174,"line_end":174,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":35603,"byte_end":35606,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ No more messages will be able to be sent from this sender, but the underlying channel will","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":35611,"byte_end":35705,"line_start":176,"line_end":176,"column_start":5,"column_end":99}},{"value":"/ remain open until all senders have dropped, or until the [`Receiver`] closes the channel.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":35710,"byte_end":35803,"line_start":177,"line_end":177,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":35808,"byte_end":35811,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ If a slot was previously reserved by calling `poll_reserve`, then a final call can be made","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":35816,"byte_end":35910,"line_start":179,"line_end":179,"column_start":5,"column_end":99}},{"value":"/ to `send_item` in order to consume the reserved slot.  After that, no further sends will be","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":35915,"byte_end":36010,"line_start":180,"line_end":180,"column_start":5,"column_end":100}},{"value":"/ possible.  If you do not intend to send another item, you can release the reserved slot back","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":36015,"byte_end":36111,"line_start":181,"line_end":181,"column_start":5,"column_end":101}},{"value":"/ to the underlying sender by calling [`abort_send`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":36116,"byte_end":36171,"line_start":182,"line_end":182,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":36176,"byte_end":36179,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ [`abort_send`]: crate::sync::PollSender::abort_send","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":36184,"byte_end":36239,"line_start":184,"line_end":184,"column_start":5,"column_end":60}},{"value":"/ [`Receiver`]: tokio::sync::mpsc::Receiver","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":36244,"byte_end":36289,"line_start":185,"line_end":185,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":37240,"byte_end":37250,"line_start":208,"line_end":208,"column_start":12,"column_end":22},"name":"abort_send","qualname":"<PollSender<T>>::abort_send","value":"fn abort_send(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Aborts the current in-progress send, if any.","sig":null,"attributes":[{"value":"/ Aborts the current in-progress send, if any.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":36944,"byte_end":36992,"line_start":203,"line_end":203,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":36997,"byte_end":37000,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if a send was aborted.  If the sender was closed prior to calling","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":37005,"byte_end":37089,"line_start":205,"line_end":205,"column_start":5,"column_end":89}},{"value":"/ `abort_send`, then the sender will remain in the closed state, otherwise the sender will be","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":37094,"byte_end":37189,"line_start":206,"line_end":206,"column_start":5,"column_end":100}},{"value":"/ ready to attempt another send.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":37194,"byte_end":37228,"line_start":207,"line_end":207,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":38888,"byte_end":38893,"line_start":248,"line_end":248,"column_start":8,"column_end":13},"name":"clone","qualname":"<PollSender<T> as std::clone::Clone>::clone","value":"fn clone(&Self) -> PollSender<T>","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":" Clones this `PollSender`.","sig":null,"attributes":[{"value":"/ Clones this `PollSender`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":38741,"byte_end":38770,"line_start":245,"line_end":245,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":38775,"byte_end":38778,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ The resulting `PollSender` will have an initial state identical to calling `PollSender::new`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":38783,"byte_end":38880,"line_start":247,"line_end":247,"column_start":5,"column_end":102}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":39520,"byte_end":39530,"line_start":267,"line_end":267,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"<PollSender<T> as futures_sink::Sink>::poll_ready","value":"fn poll_ready(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":20},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":39671,"byte_end":39681,"line_start":271,"line_end":271,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<PollSender<T> as futures_sink::Sink>::poll_flush","value":"fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":22},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":39804,"byte_end":39814,"line_start":275,"line_end":275,"column_start":8,"column_end":18},"name":"start_send","qualname":"<PollSender<T> as futures_sink::Sink>::start_send","value":"fn start_send(Pin<&mut Self>, T) -> Result<(), Self::Error>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":21},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":39935,"byte_end":39945,"line_start":279,"line_end":279,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<PollSender<T> as futures_sink::Sink>::poll_close","value":"fn poll_close(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":23},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":226},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":40468,"byte_end":40481,"line_start":13,"line_end":13,"column_start":12,"column_end":25},"name":"PollSemaphore","qualname":"::sync::poll_semaphore::PollSemaphore","value":"PollSemaphore {  }","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228}],"decl_id":null,"docs":" A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","sig":null,"attributes":[{"value":"/ A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":40337,"byte_end":40410,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":40411,"byte_end":40414,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Semaphore`]: tokio::sync::Semaphore","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":40415,"byte_end":40456,"line_start":12,"line_end":12,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":40684,"byte_end":40687,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSemaphore>::new","value":"fn new(Arc<Semaphore>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PollSemaphore`.\n","sig":null,"attributes":[{"value":"/ Create a new `PollSemaphore`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":40639,"byte_end":40672,"line_start":19,"line_end":19,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":40851,"byte_end":40856,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"name":"close","qualname":"<PollSemaphore>::close","value":"fn close(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the semaphore.\n","sig":null,"attributes":[{"value":"/ Closes the semaphore.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":40814,"byte_end":40839,"line_start":27,"line_end":27,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":40962,"byte_end":40973,"line_start":33,"line_end":33,"column_start":12,"column_end":23},"name":"clone_inner","qualname":"<PollSemaphore>::clone_inner","value":"fn clone_inner(&Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Obtain a clone of the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Obtain a clone of the inner semaphore.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":40908,"byte_end":40950,"line_start":32,"line_end":32,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":41088,"byte_end":41098,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollSemaphore>::into_inner","value":"fn into_inner(Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Get back the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Get back the inner semaphore.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":41043,"byte_end":41076,"line_start":37,"line_end":37,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":41832,"byte_end":41844,"line_start":55,"line_end":55,"column_start":12,"column_end":24},"name":"poll_acquire","qualname":"<PollSemaphore>::poll_acquire","value":"fn poll_acquire(&mut Self, &mut Context) -> Poll<Option<OwnedSemaphorePermit>>","parent":null,"children":[],"decl_id":null,"docs":" Poll to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Poll to acquire a permit from the semaphore.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":41159,"byte_end":41207,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":41212,"byte_end":41215,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This can return the following values:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":41220,"byte_end":41261,"line_start":44,"line_end":44,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":41266,"byte_end":41269,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/  - `Poll::Pending` if a permit is not currently available.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":41274,"byte_end":41336,"line_start":46,"line_end":46,"column_start":5,"column_end":67}},{"value":"/  - `Poll::Ready(Some(permit))` if a permit was acquired.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":41341,"byte_end":41401,"line_start":47,"line_end":47,"column_start":5,"column_end":65}},{"value":"/  - `Poll::Ready(None)` if the semaphore has been closed.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":41406,"byte_end":41466,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":41471,"byte_end":41474,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":41479,"byte_end":41554,"line_start":50,"line_end":50,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when a permit becomes available, or when the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":41559,"byte_end":41627,"line_start":51,"line_end":51,"column_start":5,"column_end":73}},{"value":"/ semaphore is closed. Note that on multiple calls to `poll_acquire`, only","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":41632,"byte_end":41708,"line_start":52,"line_end":52,"column_start":5,"column_end":81}},{"value":"/ the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":41713,"byte_end":41781,"line_start":53,"line_end":53,"column_start":5,"column_end":73}},{"value":"/ scheduled to receive a wakeup.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":41786,"byte_end":41820,"line_start":54,"line_end":54,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":43272,"byte_end":43289,"line_start":92,"line_end":92,"column_start":12,"column_end":29},"name":"available_permits","qualname":"<PollSemaphore>::available_permits","value":"fn available_permits(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of available permits.","sig":null,"attributes":[{"value":"/ Returns the current number of available permits.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":42988,"byte_end":43040,"line_start":86,"line_end":86,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":43045,"byte_end":43048,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::available_permits`] method on the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":43053,"byte_end":43129,"line_start":88,"line_end":88,"column_start":5,"column_end":81}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":43134,"byte_end":43168,"line_start":89,"line_end":89,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":43173,"byte_end":43176,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::available_permits`]: tokio::sync::Semaphore::available_permits","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":43181,"byte_end":43260,"line_start":91,"line_end":91,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":43749,"byte_end":43760,"line_start":105,"line_end":105,"column_start":12,"column_end":23},"name":"add_permits","qualname":"<PollSemaphore>::add_permits","value":"fn add_permits(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Adds `n` new permits to the semaphore.","sig":null,"attributes":[{"value":"/ Adds `n` new permits to the semaphore.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":43362,"byte_end":43404,"line_start":96,"line_end":96,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":43409,"byte_end":43412,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ The maximum number of permits is `usize::MAX >> 3`, and this function","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":43417,"byte_end":43490,"line_start":98,"line_end":98,"column_start":5,"column_end":78}},{"value":"/ will panic if the limit is exceeded.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":43495,"byte_end":43535,"line_start":99,"line_end":99,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":43540,"byte_end":43543,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::add_permits`] method on the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":43548,"byte_end":43618,"line_start":101,"line_end":101,"column_start":5,"column_end":75}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":43623,"byte_end":43657,"line_start":102,"line_end":102,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":43662,"byte_end":43665,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::add_permits`]: tokio::sync::Semaphore::add_permits","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":43670,"byte_end":43737,"line_start":104,"line_end":104,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":43906,"byte_end":43915,"line_start":113,"line_end":113,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<PollSemaphore as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context)\n-> Poll<Option<OwnedSemaphorePermit>>","parent":{"krate":39,"index":96},"children":[],"decl_id":{"krate":39,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":44094,"byte_end":44099,"line_start":119,"line_end":119,"column_start":8,"column_end":13},"name":"clone","qualname":"<PollSemaphore as std::clone::Clone>::clone","value":"fn clone(&Self) -> PollSemaphore","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":44225,"byte_end":44228,"line_start":125,"line_end":125,"column_start":8,"column_end":11},"name":"fmt","qualname":"<PollSemaphore as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":44450,"byte_end":44456,"line_start":133,"line_end":133,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<PollSemaphore as std::convert::AsRef>::as_ref","value":"fn as_ref(&Self) -> &Semaphore","parent":{"krate":2,"index":3076},"children":[],"decl_id":{"krate":2,"index":3078},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":283},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":44908,"byte_end":44925,"line_start":13,"line_end":13,"column_start":12,"column_end":29},"name":"ReusableBoxFuture","qualname":"::sync::reusable_box::ReusableBoxFuture","value":"ReusableBoxFuture {  }","parent":null,"children":[{"krate":0,"index":286}],"decl_id":null,"docs":" A reusable `Pin<Box<dyn Future<Output = T> + Send + 'a>>`.","sig":null,"attributes":[{"value":"/ A reusable `Pin<Box<dyn Future<Output = T> + Send + 'a>>`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":44703,"byte_end":44765,"line_start":9,"line_end":9,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":44766,"byte_end":44769,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This type lets you replace the future stored in the box without","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":44770,"byte_end":44837,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/ reallocating when the size and alignment permits this.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":44838,"byte_end":44896,"line_start":12,"line_end":12,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":45120,"byte_end":45123,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"new","qualname":"<ReusableBoxFuture>::new","value":"fn new<F>(F) -> Self where F: Future<Output = T> + Send + 'a","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ReusableBoxFuture<T>` containing the provided future.\n","sig":null,"attributes":[{"value":"/ Create a new `ReusableBoxFuture<T>` containing the provided future.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":45037,"byte_end":45108,"line_start":18,"line_end":18,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":45588,"byte_end":45591,"line_start":34,"line_end":34,"column_start":12,"column_end":15},"name":"set","qualname":"<ReusableBoxFuture>::set","value":"fn set<F>(&mut Self, F) where F: Future<Output = T> + Send + 'a","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":45373,"byte_end":45425,"line_start":30,"line_end":30,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":45430,"byte_end":45433,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ This reallocates if and only if the layout of the provided future is","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":45438,"byte_end":45510,"line_start":32,"line_end":32,"column_start":5,"column_end":77}},{"value":"/ different from the layout of the currently stored future.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":45515,"byte_end":45576,"line_start":33,"line_end":33,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":46029,"byte_end":46036,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"try_set","qualname":"<ReusableBoxFuture>::try_set","value":"fn try_set<F>(&mut Self, F) -> Result<(), F> where F: Future<Output = T> +\nSend + 'a","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":45788,"byte_end":45840,"line_start":43,"line_end":43,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":45845,"byte_end":45848,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ This function never reallocates, but returns an error if the provided","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":45853,"byte_end":45926,"line_start":45,"line_end":45,"column_start":5,"column_end":78}},{"value":"/ future has a different size or alignment from the currently stored","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":45931,"byte_end":46001,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ future.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":46006,"byte_end":46017,"line_start":47,"line_end":47,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":47866,"byte_end":47873,"line_start":104,"line_end":104,"column_start":12,"column_end":19},"name":"get_pin","qualname":"<ReusableBoxFuture>::get_pin","value":"fn get_pin(&mut Self) -> Pin<&mut dyn Future<Output = T> + Send>","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned reference to the underlying future.\n","sig":null,"attributes":[{"value":"/ Get a pinned reference to the underlying future.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":47802,"byte_end":47854,"line_start":103,"line_end":103,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":48159,"byte_end":48163,"line_start":111,"line_end":111,"column_start":12,"column_end":16},"name":"poll","qualname":"<ReusableBoxFuture>::poll","value":"fn poll(&mut Self, &mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Poll the future stored inside this box.\n","sig":null,"attributes":[{"value":"/ Poll the future stored inside this box.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":48104,"byte_end":48147,"line_start":110,"line_end":110,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":48374,"byte_end":48378,"line_start":120,"line_end":120,"column_start":8,"column_end":12},"name":"poll","qualname":"<ReusableBoxFuture as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<T>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":" Poll the future stored inside this box.\n","sig":null,"attributes":[{"value":"/ Poll the future stored inside this box.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":48323,"byte_end":48366,"line_start":119,"line_end":119,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":49021,"byte_end":49025,"line_start":137,"line_end":137,"column_start":8,"column_end":12},"name":"drop","qualname":"<ReusableBoxFuture as std::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":2,"index":3422},"children":[],"decl_id":{"krate":2,"index":3423},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":49186,"byte_end":49189,"line_start":145,"line_end":145,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ReusableBoxFuture as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":320},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"either","qualname":"::either","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","parent":null,"children":[{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":325},{"krate":0,"index":328},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":335},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":342},{"krate":0,"index":345},{"krate":0,"index":348},{"krate":0,"index":351},{"krate":0,"index":354},{"krate":0,"index":1512},{"krate":0,"index":1521},{"krate":0,"index":1525},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":364},{"krate":0,"index":368},{"krate":0,"index":373},{"krate":0,"index":378},{"krate":0,"index":384}],"decl_id":null,"docs":" Module defining an Either type.\n","sig":null,"attributes":[{"value":"/ Module defining an Either type.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":49304,"byte_end":49339,"line_start":1,"line_end":1,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1515},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":51286,"byte_end":51290,"line_start":65,"line_end":65,"column_start":5,"column_end":9},"name":"Left","qualname":"::either::Either::Left","value":"Either::Left(L)","parent":{"krate":0,"index":1512},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1517},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":51291,"byte_end":51292,"line_start":65,"line_end":65,"column_start":10,"column_end":11},"name":"0","qualname":"::either::Either::Left::0","value":"L","parent":{"krate":0,"index":1515},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1518},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":51299,"byte_end":51304,"line_start":66,"line_end":66,"column_start":5,"column_end":10},"name":"Right","qualname":"::either::Either::Right","value":"Either::Right(R)","parent":{"krate":0,"index":1512},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1520},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":51305,"byte_end":51306,"line_start":66,"line_end":66,"column_start":11,"column_end":12},"name":"0","qualname":"::either::Either::Right::0","value":"R","parent":{"krate":0,"index":1518},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1512},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":51267,"byte_end":51273,"line_start":64,"line_end":64,"column_start":10,"column_end":16},"name":"Either","qualname":"::either::Either","value":"enum Either<L, R> { Left(L), Right(R), }","parent":null,"children":[{"krate":0,"index":1515},{"krate":0,"index":1518}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single type.","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single type.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":49516,"byte_end":49622,"line_start":10,"line_end":10,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":49623,"byte_end":49626,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This type implements common asynchronous traits such as [`Future`] and those in Tokio.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":49627,"byte_end":49717,"line_start":12,"line_end":12,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":49718,"byte_end":49721,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Future`]: std::future::Future","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":49722,"byte_end":49757,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":49758,"byte_end":49761,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":49762,"byte_end":49775,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":49776,"byte_end":49779,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The following code will not work:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":49780,"byte_end":49817,"line_start":18,"line_end":18,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":49818,"byte_end":49821,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```compile_fail","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":49822,"byte_end":49841,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":49842,"byte_end":49884,"line_start":21,"line_end":21,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":49885,"byte_end":49935,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":49936,"byte_end":49987,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":49988,"byte_end":50006,"line_start":24,"line_end":24,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":50007,"byte_end":50028,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":50029,"byte_end":50071,"line_start":26,"line_end":26,"column_start":1,"column_end":43}},{"value":"/         some_async_function()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":50072,"byte_end":50105,"line_start":27,"line_end":27,"column_start":1,"column_end":34}},{"value":"/     } else {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":50106,"byte_end":50122,"line_start":28,"line_end":28,"column_start":1,"column_end":17}},{"value":"/         other_async_function() // <- Will print: \"`if` and `else` have incompatible types\"","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":50123,"byte_end":50217,"line_start":29,"line_end":29,"column_start":1,"column_end":95}},{"value":"/     };","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":50218,"byte_end":50228,"line_start":30,"line_end":30,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":50229,"byte_end":50232,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     println!(\"Result is {}\", result.await);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":50233,"byte_end":50280,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":50281,"byte_end":50286,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":50287,"byte_end":50294,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":50295,"byte_end":50298,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":50499,"byte_end":50502,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ When the output type is the same, we can wrap each future in `Either` to avoid the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":50503,"byte_end":50589,"line_start":40,"line_end":40,"column_start":1,"column_end":87}},{"value":"/ issue:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":50590,"byte_end":50600,"line_start":41,"line_end":41,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":50601,"byte_end":50604,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":50605,"byte_end":50612,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::either::Either;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":50613,"byte_end":50648,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":50649,"byte_end":50691,"line_start":45,"line_end":45,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":50692,"byte_end":50742,"line_start":46,"line_end":46,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":50743,"byte_end":50794,"line_start":47,"line_end":47,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":50795,"byte_end":50798,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":50799,"byte_end":50817,"line_start":49,"line_end":49,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":50818,"byte_end":50839,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":50840,"byte_end":50882,"line_start":51,"line_end":51,"column_start":1,"column_end":43}},{"value":"/         Either::Left(some_async_function())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":50883,"byte_end":50930,"line_start":52,"line_end":52,"column_start":1,"column_end":48}},{"value":"/     } else {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":50931,"byte_end":50947,"line_start":53,"line_end":53,"column_start":1,"column_end":17}},{"value":"/         Either::Right(other_async_function())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":50948,"byte_end":50997,"line_start":54,"line_end":54,"column_start":1,"column_end":50}},{"value":"/     };","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":50998,"byte_end":51008,"line_start":55,"line_end":55,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":51009,"byte_end":51012,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/     let value = result.await;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":51013,"byte_end":51046,"line_start":57,"line_end":57,"column_start":1,"column_end":34}},{"value":"/     println!(\"Result is {}\", value);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":51047,"byte_end":51087,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/     # assert_eq!(value, 10);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":51088,"byte_end":51120,"line_start":59,"line_end":59,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":51121,"byte_end":51126,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":51127,"byte_end":51134,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":51135,"byte_end":51157,"line_start":62,"line_end":62,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":52014,"byte_end":52018,"line_start":90,"line_end":90,"column_start":8,"column_end":12},"name":"poll","qualname":"<Either<L, R> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":52223,"byte_end":52232,"line_start":100,"line_end":100,"column_start":8,"column_end":17},"name":"poll_read","qualname":"<Either<L, R> as tokio::io::AsyncRead>::poll_read","value":"fn poll_read(Pin<&mut Self>, &mut Context, &mut ReadBuf) -> Poll<Result<()>>","parent":{"krate":22,"index":227},"children":[],"decl_id":{"krate":22,"index":228},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":52508,"byte_end":52521,"line_start":114,"line_end":114,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"<Either<L, R> as tokio::io::AsyncBufRead>::poll_fill_buf","value":"fn poll_fill_buf(Pin<&mut Self>, &mut Context) -> Poll<Result<&[u8]>>","parent":{"krate":22,"index":185},"children":[],"decl_id":{"krate":22,"index":186},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":372},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":52652,"byte_end":52659,"line_start":118,"line_end":118,"column_start":8,"column_end":15},"name":"consume","qualname":"<Either<L, R> as tokio::io::AsyncBufRead>::consume","value":"fn consume(Pin<&mut Self>, usize)","parent":{"krate":22,"index":185},"children":[],"decl_id":{"krate":22,"index":187},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":52836,"byte_end":52846,"line_start":128,"line_end":128,"column_start":8,"column_end":18},"name":"start_seek","qualname":"<Either<L, R> as tokio::io::AsyncSeek>::start_seek","value":"fn start_seek(Pin<&mut Self>, SeekFrom) -> Result<()>","parent":{"krate":22,"index":266},"children":[],"decl_id":{"krate":22,"index":267},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":377},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":52969,"byte_end":52982,"line_start":132,"line_end":132,"column_start":8,"column_end":21},"name":"poll_complete","qualname":"<Either<L, R> as tokio::io::AsyncSeek>::poll_complete","value":"fn poll_complete(Pin<&mut Self>, &mut Context) -> Poll<Result<u64>>","parent":{"krate":22,"index":266},"children":[],"decl_id":{"krate":22,"index":268},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":53198,"byte_end":53208,"line_start":142,"line_end":142,"column_start":8,"column_end":18},"name":"poll_write","qualname":"<Either<L, R> as tokio::io::AsyncWrite>::poll_write","value":"fn poll_write(Pin<&mut Self>, &mut Context, &[u8]) -> Poll<Result<usize>>","parent":{"krate":22,"index":306},"children":[],"decl_id":{"krate":22,"index":307},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":53353,"byte_end":53363,"line_start":146,"line_end":146,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<Either<L, R> as tokio::io::AsyncWrite>::poll_flush","value":"fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<tokio::io::Result<()>>","parent":{"krate":22,"index":306},"children":[],"decl_id":{"krate":22,"index":308},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":53499,"byte_end":53512,"line_start":150,"line_end":150,"column_start":8,"column_end":21},"name":"poll_shutdown","qualname":"<Either<L, R> as tokio::io::AsyncWrite>::poll_shutdown","value":"fn poll_shutdown(Pin<&mut Self>, &mut Context) -> Poll<tokio::io::Result<()>>","parent":{"krate":22,"index":306},"children":[],"decl_id":{"krate":22,"index":309},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":53834,"byte_end":53843,"line_start":162,"line_end":162,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Either<L, R> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":39,"index":96},"children":[],"decl_id":{"krate":39,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":430},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":2417,"byte_end":2430,"line_start":107,"line_end":107,"column_start":12,"column_end":25},"name":"poll_read_buf","qualname":"::util::poll_read_buf","value":"fn poll_read_buf<T, B>(Pin<&mut T>, &mut Context, &mut B)\n-> Poll<io::Result<usize>> where T: AsyncRead, B: BufMut","parent":null,"children":[],"decl_id":null,"docs":" Try to read data from an `AsyncRead` into an implementer of the [`BufMut`] trait.","sig":null,"attributes":[{"value":"/ Try to read data from an `AsyncRead` into an implementer of the [`BufMut`] trait.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":1188,"byte_end":1273,"line_start":68,"line_end":68,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":1278,"byte_end":1281,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ [`BufMut`]: bytes::Buf","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":1286,"byte_end":1312,"line_start":70,"line_end":70,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":1317,"byte_end":1320,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":1325,"byte_end":1338,"line_start":72,"line_end":72,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":1343,"byte_end":1346,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":1351,"byte_end":1358,"line_start":74,"line_end":74,"column_start":5,"column_end":12}},{"value":"/ use bytes::{Bytes, BytesMut};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":1363,"byte_end":1396,"line_start":75,"line_end":75,"column_start":5,"column_end":38}},{"value":"/ use tokio_stream as stream;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":1401,"byte_end":1432,"line_start":76,"line_end":76,"column_start":5,"column_end":36}},{"value":"/ use tokio::io::Result;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":1437,"byte_end":1463,"line_start":77,"line_end":77,"column_start":5,"column_end":31}},{"value":"/ use tokio_util::io::{StreamReader, poll_read_buf};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":1468,"byte_end":1522,"line_start":78,"line_end":78,"column_start":5,"column_end":59}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":1527,"byte_end":1560,"line_start":79,"line_end":79,"column_start":5,"column_end":38}},{"value":"/ use std::pin::Pin;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":1565,"byte_end":1587,"line_start":80,"line_end":80,"column_start":5,"column_end":27}},{"value":"/ # #[tokio::main]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":1592,"byte_end":1612,"line_start":81,"line_end":81,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> std::io::Result<()> {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":1617,"byte_end":1663,"line_start":82,"line_end":82,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":1668,"byte_end":1671,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ // Create a reader from an iterator. This particular reader will always be","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":1676,"byte_end":1754,"line_start":84,"line_end":84,"column_start":5,"column_end":83}},{"value":"/ // ready.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":1759,"byte_end":1772,"line_start":85,"line_end":85,"column_start":5,"column_end":18}},{"value":"/ let mut read = StreamReader::new(stream::iter(vec![Result::Ok(Bytes::from_static(&[0, 1, 2, 3]))]));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":1777,"byte_end":1881,"line_start":86,"line_end":86,"column_start":5,"column_end":109}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":1886,"byte_end":1889,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ let mut buf = BytesMut::new();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":1894,"byte_end":1928,"line_start":88,"line_end":88,"column_start":5,"column_end":39}},{"value":"/ let mut reads = 0;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":1933,"byte_end":1955,"line_start":89,"line_end":89,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":1960,"byte_end":1963,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ loop {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":1968,"byte_end":1978,"line_start":91,"line_end":91,"column_start":5,"column_end":15}},{"value":"/     reads += 1;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":1983,"byte_end":2002,"line_start":92,"line_end":92,"column_start":5,"column_end":24}},{"value":"/     let n = poll_fn(|cx| poll_read_buf(Pin::new(&mut read), cx, &mut buf)).await?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":2007,"byte_end":2093,"line_start":93,"line_end":93,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":2098,"byte_end":2101,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/     if n == 0 {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":2106,"byte_end":2125,"line_start":95,"line_end":95,"column_start":5,"column_end":24}},{"value":"/         break;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":2130,"byte_end":2148,"line_start":96,"line_end":96,"column_start":5,"column_end":23}},{"value":"/     }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":2153,"byte_end":2162,"line_start":97,"line_end":97,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":2167,"byte_end":2172,"line_start":98,"line_end":98,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":2177,"byte_end":2180,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ // one or more reads might be necessary.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":2185,"byte_end":2229,"line_start":100,"line_end":100,"column_start":5,"column_end":49}},{"value":"/ assert!(reads >= 1);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":2234,"byte_end":2258,"line_start":101,"line_end":101,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(&buf[..], &[0, 1, 2, 3]);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":2263,"byte_end":2303,"line_start":102,"line_end":102,"column_start":5,"column_end":45}},{"value":"/ # Ok(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":2308,"byte_end":2320,"line_start":103,"line_end":103,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":2325,"byte_end":2332,"line_start":104,"line_end":104,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":2337,"byte_end":2344,"line_start":105,"line_end":105,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":433},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":4718,"byte_end":4732,"line_start":178,"line_end":178,"column_start":12,"column_end":26},"name":"poll_write_buf","qualname":"::util::poll_write_buf","value":"fn poll_write_buf<T, B>(Pin<&mut T>, &mut Context, &mut B)\n-> Poll<io::Result<usize>> where T: AsyncWrite, B: Buf","parent":null,"children":[],"decl_id":null,"docs":" Try to write data from an implementer of the [`Buf`] trait to an\n [`AsyncWrite`], advancing the buffer's internal cursor.","sig":null,"attributes":[{"value":"/ Try to write data from an implementer of the [`Buf`] trait to an","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":3346,"byte_end":3414,"line_start":137,"line_end":137,"column_start":5,"column_end":73}},{"value":"/ [`AsyncWrite`], advancing the buffer's internal cursor.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":3419,"byte_end":3478,"line_start":138,"line_end":138,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":3483,"byte_end":3486,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ This function will use [vectored writes] when the [`AsyncWrite`] supports","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":3491,"byte_end":3568,"line_start":140,"line_end":140,"column_start":5,"column_end":82}},{"value":"/ vectored writes.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":3573,"byte_end":3593,"line_start":141,"line_end":141,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":3598,"byte_end":3601,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":3606,"byte_end":3620,"line_start":143,"line_end":143,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":3625,"byte_end":3628,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ [`File`] implements [`AsyncWrite`] and [`Cursor<&[u8]>`] implements","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":3633,"byte_end":3704,"line_start":145,"line_end":145,"column_start":5,"column_end":76}},{"value":"/ [`Buf`]:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":3709,"byte_end":3721,"line_start":146,"line_end":146,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":3726,"byte_end":3729,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":3734,"byte_end":3747,"line_start":148,"line_end":148,"column_start":5,"column_end":18}},{"value":"/ use tokio_util::io::poll_write_buf;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":3752,"byte_end":3791,"line_start":149,"line_end":149,"column_start":5,"column_end":44}},{"value":"/ use tokio::io;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":3796,"byte_end":3814,"line_start":150,"line_end":150,"column_start":5,"column_end":23}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":3819,"byte_end":3843,"line_start":151,"line_end":151,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":3848,"byte_end":3851,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ use bytes::Buf;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":3856,"byte_end":3875,"line_start":153,"line_end":153,"column_start":5,"column_end":24}},{"value":"/ use std::io::Cursor;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":3880,"byte_end":3904,"line_start":154,"line_end":154,"column_start":5,"column_end":29}},{"value":"/ use std::pin::Pin;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":3909,"byte_end":3931,"line_start":155,"line_end":155,"column_start":5,"column_end":27}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":3936,"byte_end":3969,"line_start":156,"line_end":156,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":3974,"byte_end":3977,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":3982,"byte_end":4000,"line_start":158,"line_end":158,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":4005,"byte_end":4044,"line_start":159,"line_end":159,"column_start":5,"column_end":44}},{"value":"/     let mut file = File::create(\"foo.txt\").await?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":4049,"byte_end":4103,"line_start":160,"line_end":160,"column_start":5,"column_end":59}},{"value":"/     let mut buf = Cursor::new(b\"data to write\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":4108,"byte_end":4160,"line_start":161,"line_end":161,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":4165,"byte_end":4168,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/     // Loop until the entire contents of the buffer are written to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":4173,"byte_end":4243,"line_start":163,"line_end":163,"column_start":5,"column_end":75}},{"value":"/     // the file.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":4248,"byte_end":4268,"line_start":164,"line_end":164,"column_start":5,"column_end":25}},{"value":"/     while buf.has_remaining() {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":4273,"byte_end":4308,"line_start":165,"line_end":165,"column_start":5,"column_end":40}},{"value":"/         poll_fn(|cx| poll_write_buf(Pin::new(&mut file), cx, &mut buf)).await?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":4313,"byte_end":4396,"line_start":166,"line_end":166,"column_start":5,"column_end":88}},{"value":"/     }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":4401,"byte_end":4410,"line_start":167,"line_end":167,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":4415,"byte_end":4418,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":4423,"byte_end":4437,"line_start":169,"line_end":169,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":4442,"byte_end":4447,"line_start":170,"line_end":170,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":4452,"byte_end":4459,"line_start":171,"line_end":171,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":4464,"byte_end":4467,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ [`Buf`]: bytes::Buf","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":4472,"byte_end":4495,"line_start":173,"line_end":173,"column_start":5,"column_end":28}},{"value":"/ [`AsyncWrite`]: tokio::io::AsyncWrite","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":4500,"byte_end":4541,"line_start":174,"line_end":174,"column_start":5,"column_end":46}},{"value":"/ [`File`]: tokio::fs::File","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":4546,"byte_end":4575,"line_start":175,"line_end":175,"column_start":5,"column_end":34}},{"value":"/ [vectored writes]: tokio::io::AsyncWrite::poll_write_vectored","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":4580,"byte_end":4645,"line_start":176,"line_end":176,"column_start":5,"column_end":70}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":16241411,"byte_end":16241421,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":16241572,"byte_end":16241582,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":463},{"krate":0,"index":464},{"krate":0,"index":465}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":16241909,"byte_end":16241919,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":467},{"krate":0,"index":468}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":16242143,"byte_end":16242153,"line_start":78,"line_end":78,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":470},{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_impl.rs","byte_start":16252390,"byte_end":16252399,"line_start":48,"line_end":48,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":573}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_impl.rs","byte_start":16252631,"byte_end":16252641,"line_start":59,"line_end":59,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_impl.rs","byte_start":16252792,"byte_end":16252801,"line_start":67,"line_end":67,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":577}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_impl.rs","byte_start":16253156,"byte_end":16253166,"line_start":83,"line_end":83,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":579}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_impl.rs","byte_start":16253412,"byte_end":16253420,"line_start":94,"line_end":94,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":581}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_impl.rs","byte_start":16253517,"byte_end":16253525,"line_start":99,"line_end":99,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":583}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_impl.rs","byte_start":16253636,"byte_end":16253644,"line_start":104,"line_end":104,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":585}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_impl.rs","byte_start":16253744,"byte_end":16253752,"line_start":109,"line_end":109,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":587}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_impl.rs","byte_start":16253862,"byte_end":16253872,"line_start":114,"line_end":114,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":592},{"krate":0,"index":593}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_impl.rs","byte_start":16262159,"byte_end":16262169,"line_start":249,"line_end":249,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16265004,"byte_end":16265010,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":684},{"krate":0,"index":685}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16268866,"byte_end":16268872,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":692},{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":700},{"krate":0,"index":701},{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":704}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16275263,"byte_end":16275269,"line_start":283,"line_end":283,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":708},{"krate":0,"index":709}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16275585,"byte_end":16275591,"line_start":296,"line_end":296,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16276306,"byte_end":16276312,"line_start":321,"line_end":321,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":722}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16277352,"byte_end":16277363,"line_start":359,"line_end":359,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":726}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":16278290,"byte_end":16278300,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":777},{"krate":0,"index":778}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":16279229,"byte_end":16279239,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":782},{"krate":0,"index":783},{"krate":0,"index":784},{"krate":0,"index":785},{"krate":0,"index":786},{"krate":0,"index":787},{"krate":0,"index":788},{"krate":0,"index":791},{"krate":0,"index":792},{"krate":0,"index":793}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":16282069,"byte_end":16282079,"line_start":149,"line_end":149,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":797},{"krate":0,"index":798}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":16282392,"byte_end":16282402,"line_start":162,"line_end":162,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":803},{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":806},{"krate":0,"index":807}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":16283128,"byte_end":16283138,"line_start":185,"line_end":185,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":811}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":16284117,"byte_end":16284128,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":860}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":16284484,"byte_end":16284495,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":864},{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":873},{"krate":0,"index":874},{"krate":0,"index":875}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":16287340,"byte_end":16287351,"line_start":129,"line_end":129,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":880},{"krate":0,"index":881},{"krate":0,"index":882},{"krate":0,"index":883},{"krate":0,"index":884}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":16288115,"byte_end":16288126,"line_start":155,"line_end":155,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":888},{"krate":0,"index":889}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":16288367,"byte_end":16288378,"line_start":166,"line_end":166,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":893}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16303422,"byte_end":16303442,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":957},{"krate":0,"index":958},{"krate":0,"index":959},{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":962}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16306776,"byte_end":16306796,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":964},{"krate":0,"index":965},{"krate":0,"index":966}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16307682,"byte_end":16307702,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":968},{"krate":0,"index":969}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16309043,"byte_end":16309063,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":972}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16309625,"byte_end":16309632,"line_start":650,"line_end":650,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":981},{"krate":0,"index":982},{"krate":0,"index":983},{"krate":0,"index":984},{"krate":0,"index":985},{"krate":0,"index":986},{"krate":0,"index":988},{"krate":0,"index":989},{"krate":0,"index":990},{"krate":0,"index":991},{"krate":0,"index":992},{"krate":0,"index":993},{"krate":0,"index":995},{"krate":0,"index":997},{"krate":0,"index":999},{"krate":0,"index":1000}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16320407,"byte_end":16320414,"line_start":1027,"line_end":1027,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1002}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16320540,"byte_end":16320565,"line_start":1035,"line_end":1035,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1004}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16320723,"byte_end":16320748,"line_start":1041,"line_end":1041,"column_start":23,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1006}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16320883,"byte_end":16320908,"line_start":1047,"line_end":1047,"column_start":19,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16321977,"byte_end":16321987,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1049},{"krate":0,"index":1050},{"krate":0,"index":1051}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16324529,"byte_end":16324539,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1056},{"krate":0,"index":1057},{"krate":0,"index":1058},{"krate":0,"index":1060}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16327915,"byte_end":16327925,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1063},{"krate":0,"index":1064}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16328248,"byte_end":16328258,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1066}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16328565,"byte_end":16328580,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1068}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16328862,"byte_end":16328877,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1070}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16328994,"byte_end":16329009,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16331335,"byte_end":16331352,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1118},{"krate":0,"index":1119},{"krate":0,"index":1120}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16334001,"byte_end":16334018,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1122},{"krate":0,"index":1123},{"krate":0,"index":1124},{"krate":0,"index":1127}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16337310,"byte_end":16337327,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1130},{"krate":0,"index":1131}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16337691,"byte_end":16337708,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1133}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16338126,"byte_end":16338148,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1135}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16338477,"byte_end":16338499,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1137}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16338630,"byte_end":16338652,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/read_buf.rs","byte_start":16340747,"byte_end":16340756,"line_start":53,"line_end":53,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1326},{"krate":0,"index":1327}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/reader_stream.rs","byte_start":16342696,"byte_end":16342708,"line_start":57,"line_end":57,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1358},{"krate":0,"index":1359}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/reader_stream.rs","byte_start":16343595,"byte_end":16343607,"line_start":86,"line_end":86,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1362},{"krate":0,"index":1363}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/stream_reader.rs","byte_start":16346487,"byte_end":16346499,"line_start":64,"line_end":64,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1404},{"krate":0,"index":1405},{"krate":0,"index":1406}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/stream_reader.rs","byte_start":16347737,"byte_end":16347749,"line_start":107,"line_end":107,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1410},{"krate":0,"index":1411},{"krate":0,"index":1412},{"krate":0,"index":1413}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/stream_reader.rs","byte_start":16348830,"byte_end":16348842,"line_start":141,"line_end":141,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1418}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/stream_reader.rs","byte_start":16349603,"byte_end":16349615,"line_start":169,"line_end":169,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1423},{"krate":0,"index":1424}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token/guard.rs","byte_start":14391,"byte_end":14400,"line_start":10,"line_end":10,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token/guard.rs","byte_start":14760,"byte_end":14769,"line_start":21,"line_end":21,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token/tree_node.rs","byte_start":17219,"byte_end":17227,"line_start":50,"line_end":50,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":39},{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":9201,"byte_end":9218,"line_start":71,"line_end":71,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":9443,"byte_end":9460,"line_start":79,"line_end":79,"column_start":16,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":9651,"byte_end":9668,"line_start":88,"line_end":88,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":9780,"byte_end":9797,"line_start":94,"line_end":94,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":9887,"byte_end":9904,"line_start":100,"line_end":100,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":13142,"byte_end":13167,"line_start":197,"line_end":197,"column_start":31,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":13339,"byte_end":13364,"line_start":203,"line_end":203,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":103},{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":29435,"byte_end":29448,"line_start":14,"line_end":14,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":29770,"byte_end":29783,"line_start":24,"line_end":24,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":29943,"byte_end":29956,"line_start":30,"line_end":30,"column_start":43,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":31070,"byte_end":31080,"line_start":67,"line_end":67,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":38721,"byte_end":38731,"line_start":244,"line_end":244,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":39461,"byte_end":39471,"line_start":264,"line_end":264,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":40619,"byte_end":40632,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":43844,"byte_end":43857,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":238},{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":44071,"byte_end":44084,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":44202,"byte_end":44215,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":44427,"byte_end":44440,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":245}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":45006,"byte_end":45023,"line_start":17,"line_end":17,"column_start":13,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":290},{"krate":0,"index":292},{"krate":0,"index":294},{"krate":0,"index":296},{"krate":0,"index":299},{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":48270,"byte_end":48287,"line_start":116,"line_end":116,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":48585,"byte_end":48602,"line_start":126,"line_end":126,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":48824,"byte_end":48841,"line_start":131,"line_end":131,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":48941,"byte_end":48958,"line_start":134,"line_end":134,"column_start":19,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":48987,"byte_end":49004,"line_start":136,"line_end":136,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":313}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":49152,"byte_end":49169,"line_start":144,"line_end":144,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":51910,"byte_end":51916,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":362},{"krate":0,"index":363}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":52159,"byte_end":52165,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":367}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":52438,"byte_end":52444,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":371},{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":52772,"byte_end":52778,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":376},{"krate":0,"index":377}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":53132,"byte_end":53138,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":53690,"byte_end":53696,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":387},{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":647,"byte_end":652,"line_start":28,"line_end":28,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":439}},{"kind":"Mod","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/mod.rs","byte_start":16239823,"byte_end":16239839,"line_start":283,"line_end":283,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":897}},{"kind":"Mod","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":764,"byte_end":766,"line_start":41,"line_end":41,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":1286}},{"kind":"Mod","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":864,"byte_end":868,"line_start":53,"line_end":53,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":14}},{"kind":"Mod","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/lib.rs","byte_start":879,"byte_end":885,"line_start":55,"line_end":55,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":320}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":16241411,"byte_end":16241421,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1146},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":16241572,"byte_end":16241582,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1146},"to":{"krate":0,"index":492}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":16241909,"byte_end":16241919,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1146},"to":{"krate":0,"index":509}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/bytes_codec.rs","byte_start":16242143,"byte_end":16242153,"line_start":78,"line_end":78,"column_start":28,"column_end":38},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1146},"to":{"krate":0,"index":509}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_impl.rs","byte_start":16252390,"byte_end":16252399,"line_start":48,"line_end":48,"column_start":18,"column_end":27},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1170},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_impl.rs","byte_start":16252631,"byte_end":16252641,"line_start":59,"line_end":59,"column_start":18,"column_end":28},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":570},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_impl.rs","byte_start":16252792,"byte_end":16252801,"line_start":67,"line_end":67,"column_start":25,"column_end":34},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1170},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_impl.rs","byte_start":16253156,"byte_end":16253166,"line_start":83,"line_end":83,"column_start":25,"column_end":35},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":570},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_impl.rs","byte_start":16253412,"byte_end":16253420,"line_start":94,"line_end":94,"column_start":28,"column_end":36},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1177},"to":{"krate":2,"index":2776}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_impl.rs","byte_start":16253517,"byte_end":16253525,"line_start":99,"line_end":99,"column_start":31,"column_end":39},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1177},"to":{"krate":2,"index":2779}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_impl.rs","byte_start":16253636,"byte_end":16253644,"line_start":104,"line_end":104,"column_start":29,"column_end":37},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1177},"to":{"krate":2,"index":2776}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_impl.rs","byte_start":16253744,"byte_end":16253752,"line_start":109,"line_end":109,"column_start":32,"column_end":40},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1177},"to":{"krate":2,"index":2779}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_impl.rs","byte_start":16253862,"byte_end":16253872,"line_start":114,"line_end":114,"column_start":26,"column_end":36},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":2033},"to":{"krate":39,"index":96}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_impl.rs","byte_start":16262159,"byte_end":16262169,"line_start":249,"line_end":249,"column_start":30,"column_end":40},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":2033},"to":{"krate":21,"index":17}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16265004,"byte_end":16265010,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1704},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16268866,"byte_end":16268872,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1704},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16275263,"byte_end":16275269,"line_start":283,"line_end":283,"column_start":23,"column_end":29},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1704},"to":{"krate":39,"index":96}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16275585,"byte_end":16275591,"line_start":296,"line_end":296,"column_start":27,"column_end":33},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1704},"to":{"krate":21,"index":17}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16276306,"byte_end":16276312,"line_start":321,"line_end":321,"column_start":27,"column_end":33},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1704},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed.rs","byte_start":16277352,"byte_end":16277363,"line_start":359,"line_end":359,"column_start":12,"column_end":23},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1182},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":16278290,"byte_end":16278300,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1663},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":16279229,"byte_end":16279239,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1663},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":16282069,"byte_end":16282079,"line_start":149,"line_end":149,"column_start":23,"column_end":33},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1663},"to":{"krate":39,"index":96}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":16282392,"byte_end":16282402,"line_start":162,"line_end":162,"column_start":27,"column_end":37},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1663},"to":{"krate":21,"index":17}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_read.rs","byte_start":16283128,"byte_end":16283138,"line_start":185,"line_end":185,"column_start":27,"column_end":37},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1663},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":16284117,"byte_end":16284128,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1622},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":16284484,"byte_end":16284495,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1622},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":16287340,"byte_end":16287351,"line_start":129,"line_end":129,"column_start":27,"column_end":38},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1622},"to":{"krate":21,"index":17}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":16288115,"byte_end":16288126,"line_start":155,"line_end":155,"column_start":23,"column_end":34},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1622},"to":{"krate":39,"index":96}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/framed_write.rs","byte_start":16288367,"byte_end":16288378,"line_start":166,"line_end":166,"column_start":27,"column_end":38},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1622},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16303422,"byte_end":16303442,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1206},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16306776,"byte_end":16306796,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1206},"to":{"krate":0,"index":492}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16307682,"byte_end":16307702,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1206},"to":{"krate":0,"index":509}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16309043,"byte_end":16309063,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1206},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16309625,"byte_end":16309632,"line_start":650,"line_end":650,"column_start":6,"column_end":13},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1194},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16320407,"byte_end":16320414,"line_start":1027,"line_end":1027,"column_start":18,"column_end":25},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1194},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16320540,"byte_end":16320565,"line_start":1035,"line_end":1035,"column_start":21,"column_end":46},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":954},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16320723,"byte_end":16320748,"line_start":1041,"line_end":1041,"column_start":23,"column_end":48},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":954},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/length_delimited.rs","byte_start":16320883,"byte_end":16320908,"line_start":1047,"line_end":1047,"column_start":19,"column_end":44},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":954},"to":{"krate":1,"index":2569}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16321977,"byte_end":16321987,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1224},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16324529,"byte_end":16324539,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1224},"to":{"krate":0,"index":492}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16327915,"byte_end":16327925,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1224},"to":{"krate":0,"index":509}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16328248,"byte_end":16328258,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1224},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16328565,"byte_end":16328580,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1246},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16328862,"byte_end":16328877,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1246},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/lines_codec.rs","byte_start":16328994,"byte_end":16329009,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1246},"to":{"krate":1,"index":2569}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16331335,"byte_end":16331352,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1254},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16334001,"byte_end":16334018,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1254},"to":{"krate":0,"index":492}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16337310,"byte_end":16337327,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1254},"to":{"krate":0,"index":509}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16337691,"byte_end":16337708,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1254},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16338126,"byte_end":16338148,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1278},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16338477,"byte_end":16338499,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1278},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/codec/any_delimiter_codec.rs","byte_start":16338630,"byte_end":16338652,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1278},"to":{"krate":1,"index":2569}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/read_buf.rs","byte_start":16340747,"byte_end":16340756,"line_start":53,"line_end":53,"column_start":31,"column_end":40},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1315},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/reader_stream.rs","byte_start":16342696,"byte_end":16342708,"line_start":57,"line_end":57,"column_start":20,"column_end":32},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1578},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/reader_stream.rs","byte_start":16343595,"byte_end":16343607,"line_start":86,"line_end":86,"column_start":31,"column_end":43},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1578},"to":{"krate":39,"index":96}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/stream_reader.rs","byte_start":16346487,"byte_end":16346499,"line_start":64,"line_end":64,"column_start":15,"column_end":27},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1529},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/stream_reader.rs","byte_start":16347737,"byte_end":16347749,"line_start":107,"line_end":107,"column_start":12,"column_end":24},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1529},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/stream_reader.rs","byte_start":16348830,"byte_end":16348842,"line_start":141,"line_end":141,"column_start":29,"column_end":41},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1529},"to":{"krate":22,"index":227}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/io/stream_reader.rs","byte_start":16349603,"byte_end":16349615,"line_start":169,"line_end":169,"column_start":32,"column_end":44},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1529},"to":{"krate":22,"index":185}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token/guard.rs","byte_start":14391,"byte_end":14400,"line_start":10,"line_end":10,"column_start":6,"column_end":15},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1441},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token/guard.rs","byte_start":14760,"byte_end":14769,"line_start":21,"line_end":21,"column_start":15,"column_end":24},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1441},"to":{"krate":2,"index":3422}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token/tree_node.rs","byte_start":17219,"byte_end":17227,"line_start":50,"line_end":50,"column_start":6,"column_end":14},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":35},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":9201,"byte_end":9218,"line_start":71,"line_end":71,"column_start":27,"column_end":44},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":9443,"byte_end":9460,"line_start":79,"line_end":79,"column_start":16,"column_end":33},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":9651,"byte_end":9668,"line_start":88,"line_end":88,"column_start":15,"column_end":32},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":3422}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":9780,"byte_end":9797,"line_start":94,"line_end":94,"column_start":18,"column_end":35},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":9887,"byte_end":9904,"line_start":100,"line_end":100,"column_start":6,"column_end":23},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":81},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":13142,"byte_end":13167,"line_start":197,"line_end":197,"column_start":31,"column_end":56},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1445},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/cancellation_token.rs","byte_start":13339,"byte_end":13364,"line_start":203,"line_end":203,"column_start":21,"column_end":46},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1445},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":29435,"byte_end":29448,"line_start":14,"line_end":14,"column_start":9,"column_end":22},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1482},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":29770,"byte_end":29783,"line_start":24,"line_end":24,"column_start":26,"column_end":39},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1482},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":29943,"byte_end":29956,"line_start":30,"line_end":30,"column_start":43,"column_end":56},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1482},"to":{"krate":1,"index":2569}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":31070,"byte_end":31080,"line_start":67,"line_end":67,"column_start":25,"column_end":35},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1504},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":38721,"byte_end":38731,"line_start":244,"line_end":244,"column_start":19,"column_end":29},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1504},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/mpsc.rs","byte_start":39461,"byte_end":39471,"line_start":264,"line_end":264,"column_start":37,"column_end":47},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1504},"to":{"krate":21,"index":17}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":40619,"byte_end":40632,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":226},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":43844,"byte_end":43857,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":226},"to":{"krate":39,"index":96}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":44071,"byte_end":44084,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":226},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":44202,"byte_end":44215,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":226},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/poll_semaphore.rs","byte_start":44427,"byte_end":44440,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":226},"to":{"krate":2,"index":3076}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":45006,"byte_end":45023,"line_start":17,"line_end":17,"column_start":13,"column_end":30},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":283},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":48270,"byte_end":48287,"line_start":116,"line_end":116,"column_start":20,"column_end":37},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":283},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":48585,"byte_end":48602,"line_start":126,"line_end":126,"column_start":25,"column_end":42},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":283},"to":{"krate":2,"index":3179}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":48824,"byte_end":48841,"line_start":131,"line_end":131,"column_start":25,"column_end":42},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":283},"to":{"krate":2,"index":3191}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":48941,"byte_end":48958,"line_start":134,"line_end":134,"column_start":19,"column_end":36},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":283},"to":{"krate":2,"index":3220}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":48987,"byte_end":49004,"line_start":136,"line_end":136,"column_start":18,"column_end":35},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":283},"to":{"krate":2,"index":3422}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/sync/reusable_box.rs","byte_start":49152,"byte_end":49169,"line_start":144,"line_end":144,"column_start":24,"column_end":41},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":283},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":51910,"byte_end":51916,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1512},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":52159,"byte_end":52165,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1512},"to":{"krate":22,"index":227}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":52438,"byte_end":52444,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1512},"to":{"krate":22,"index":185}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":52772,"byte_end":52778,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1512},"to":{"krate":22,"index":266}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":53132,"byte_end":53138,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1512},"to":{"krate":22,"index":306}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.2/src/either.rs","byte_start":53690,"byte_end":53696,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1512},"to":{"krate":39,"index":96}}]}