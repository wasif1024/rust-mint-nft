{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10","program":"/Users/air/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","crossbeam_epoch","--edition=2018","/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"once_cell\"","--cfg","feature=\"std\"","-C","metadata=982883c934cf7bd0","-C","extra-filename=-982883c934cf7bd0","--out-dir","/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps","-L","dependency=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps","--extern","cfg_if=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libcfg_if-b1443b6b385b5bbf.rmeta","--extern","crossbeam_utils=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libcrossbeam_utils-6537c51dea78ef02.rmeta","--extern","memoffset=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libmemoffset-7be0144f1dc9ad65.rmeta","--extern","once_cell=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libonce_cell-7899b5e5f5dbb873.rmeta","--extern","scopeguard=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libscopeguard-dbf9adb82997d6e6.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/air/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libcrossbeam_epoch-982883c934cf7bd0.rmeta"},"prelude":{"crate_id":{"name":"crossbeam_epoch","disambiguator":[11881514175437435003,0]},"crate_root":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src","external_crates":[{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[4485569597606079733,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[9994580471200982198,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13944031075627487246,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5133993387825513881,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[14116380118705386640,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6269322086078963025,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16152481959168563413,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7897074911849024150,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[7299104579826168146,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2669544452907545777,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[14288251452253695433,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[13943810077905921301,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[2237926517141734526,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[5541021343498733002,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[7188895526679788668,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[15555671723428220450,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[13375000548276363576,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[8920282723255285566,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[2397004371161247654,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","num":20,"id":{"name":"cfg_if","disambiguator":[13273704638852766021,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","num":21,"id":{"name":"crossbeam_utils","disambiguator":[1339298624939999906,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/default.rs","num":22,"id":{"name":"once_cell","disambiguator":[3525325367007617747,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","num":23,"id":{"name":"scopeguard","disambiguator":[12042798599719570489,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/internal.rs","num":24,"id":{"name":"memoffset","disambiguator":[10205436908858835015,0]}}],"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":0,"byte_end":6324,"line_start":1,"line_end":169,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":127},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":5873,"byte_end":5882,"line_start":153,"line_end":153,"column_start":13,"column_end":22},"alias_span":null,"name":"Pointable","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":161},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":5884,"byte_end":5890,"line_start":153,"line_end":153,"column_start":24,"column_end":30},"alias_span":null,"name":"Atomic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":100},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":5892,"byte_end":5912,"line_start":153,"line_end":153,"column_start":32,"column_end":52},"alias_span":null,"name":"CompareExchangeError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":247},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":5926,"byte_end":5931,"line_start":154,"line_end":154,"column_start":13,"column_end":18},"alias_span":null,"name":"Owned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":243},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":5933,"byte_end":5940,"line_start":154,"line_end":154,"column_start":20,"column_end":27},"alias_span":null,"name":"Pointer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":301},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":5942,"byte_end":5948,"line_start":154,"line_end":154,"column_start":29,"column_end":35},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":373},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":5995,"byte_end":6004,"line_start":156,"line_end":156,"column_start":35,"column_end":44},"alias_span":null,"name":"Collector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":389},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":6006,"byte_end":6017,"line_start":156,"line_end":156,"column_start":46,"column_end":57},"alias_span":null,"name":"LocalHandle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":503},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":6050,"byte_end":6061,"line_start":157,"line_end":157,"column_start":31,"column_end":42},"alias_span":null,"name":"unprotected","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":479},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":6063,"byte_end":6068,"line_start":157,"line_end":157,"column_start":44,"column_end":49},"alias_span":null,"name":"Guard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":96},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":6132,"byte_end":6150,"line_start":160,"line_end":160,"column_start":32,"column_end":50},"alias_span":null,"name":"CompareAndSetError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":110},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":6152,"byte_end":6173,"line_start":160,"line_end":160,"column_start":52,"column_end":73},"alias_span":null,"name":"CompareAndSetOrdering","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":897},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":6281,"byte_end":6298,"line_start":167,"line_end":167,"column_start":33,"column_end":50},"alias_span":null,"name":"default_collector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":895},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":6300,"byte_end":6309,"line_start":167,"line_end":167,"column_start":52,"column_end":61},"alias_span":null,"name":"is_pinned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":893},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":6311,"byte_end":6314,"line_start":167,"line_end":167,"column_start":63,"column_end":66},"alias_span":null,"name":"pin","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":0,"byte_end":6324,"line_start":1,"line_end":169,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":356},{"krate":0,"index":399},{"krate":0,"index":438},{"krate":0,"index":457},{"krate":0,"index":509},{"krate":0,"index":655},{"krate":0,"index":778},{"krate":0,"index":779},{"krate":0,"index":782},{"krate":0,"index":785},{"krate":0,"index":788},{"krate":0,"index":791},{"krate":0,"index":794},{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":801},{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":808},{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":815},{"krate":0,"index":875},{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":907},{"krate":0,"index":910}],"decl_id":null,"docs":" Epoch-based memory reclamation.","sig":null,"attributes":[{"value":"/ Epoch-based memory reclamation.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":0,"byte_end":35,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":36,"byte_end":39,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ An interesting problem concurrent collections deal with comes from the remove operation.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":40,"byte_end":132,"line_start":3,"line_end":3,"column_start":1,"column_end":93}},{"value":"/ Suppose that a thread removes an element from a lock-free map, while another thread is reading","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":133,"byte_end":231,"line_start":4,"line_end":4,"column_start":1,"column_end":99}},{"value":"/ that same element at the same time. The first thread must wait until the second thread stops","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":232,"byte_end":328,"line_start":5,"line_end":5,"column_start":1,"column_end":97}},{"value":"/ reading the element. Only then it is safe to destruct it.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":329,"byte_end":390,"line_start":6,"line_end":6,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":391,"byte_end":394,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Programming languages that come with garbage collectors solve this problem trivially. The","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":395,"byte_end":488,"line_start":8,"line_end":8,"column_start":1,"column_end":94}},{"value":"/ garbage collector will destruct the removed element when no thread can hold a reference to it","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":489,"byte_end":586,"line_start":9,"line_end":9,"column_start":1,"column_end":98}},{"value":"/ anymore.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":587,"byte_end":599,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":600,"byte_end":603,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This crate implements a basic memory reclamation mechanism, which is based on epochs. When an","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":604,"byte_end":701,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"/ element gets removed from a concurrent collection, it is inserted into a pile of garbage and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":702,"byte_end":798,"line_start":13,"line_end":13,"column_start":1,"column_end":97}},{"value":"/ marked with the current epoch. Every time a thread accesses a collection, it checks the current","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":799,"byte_end":898,"line_start":14,"line_end":14,"column_start":1,"column_end":100}},{"value":"/ epoch, attempts to increment it, and destructs some garbage that became so old that no thread","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":899,"byte_end":996,"line_start":15,"line_end":15,"column_start":1,"column_end":98}},{"value":"/ can be referencing it anymore.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":997,"byte_end":1031,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":1032,"byte_end":1035,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ That is the general mechanism behind epoch-based memory reclamation, but the details are a bit","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":1036,"byte_end":1134,"line_start":18,"line_end":18,"column_start":1,"column_end":99}},{"value":"/ more complicated. Anyhow, memory reclamation is designed to be fully automatic and something","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":1135,"byte_end":1231,"line_start":19,"line_end":19,"column_start":1,"column_end":97}},{"value":"/ users of concurrent collections don't have to worry much about.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":1232,"byte_end":1299,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":1300,"byte_end":1303,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Pointers","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":1304,"byte_end":1318,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":1319,"byte_end":1322,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Concurrent collections are built using atomic pointers. This module provides [`Atomic`], which","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":1323,"byte_end":1421,"line_start":24,"line_end":24,"column_start":1,"column_end":99}},{"value":"/ is just a shared atomic pointer to a heap-allocated object. Loading an [`Atomic`] yields a","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":1422,"byte_end":1516,"line_start":25,"line_end":25,"column_start":1,"column_end":95}},{"value":"/ [`Shared`], which is an epoch-protected pointer through which the loaded object can be safely","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":1517,"byte_end":1614,"line_start":26,"line_end":26,"column_start":1,"column_end":98}},{"value":"/ read.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":1615,"byte_end":1624,"line_start":27,"line_end":27,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":1625,"byte_end":1628,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Pinning","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":1629,"byte_end":1642,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":1643,"byte_end":1646,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Before an [`Atomic`] can be loaded, a participant must be [`pin`]ned. By pinning a participant","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":1647,"byte_end":1745,"line_start":31,"line_end":31,"column_start":1,"column_end":99}},{"value":"/ we declare that any object that gets removed from now on must not be destructed just","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":1746,"byte_end":1834,"line_start":32,"line_end":32,"column_start":1,"column_end":89}},{"value":"/ yet. Garbage collection of newly removed objects is suspended until the participant gets","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":1835,"byte_end":1927,"line_start":33,"line_end":33,"column_start":1,"column_end":93}},{"value":"/ unpinned.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":1928,"byte_end":1941,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":1942,"byte_end":1945,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Garbage","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":1946,"byte_end":1959,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":1960,"byte_end":1963,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Objects that get removed from concurrent collections must be stashed away until all currently","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":1964,"byte_end":2061,"line_start":38,"line_end":38,"column_start":1,"column_end":98}},{"value":"/ pinned participants get unpinned. Such objects can be stored into a thread-local or global","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":2062,"byte_end":2156,"line_start":39,"line_end":39,"column_start":1,"column_end":95}},{"value":"/ storage, where they are kept until the right time for their destruction comes.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":2157,"byte_end":2239,"line_start":40,"line_end":40,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":2240,"byte_end":2243,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ There is a global shared instance of garbage queue. You can [`defer`](Guard::defer) the execution of an","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":2244,"byte_end":2351,"line_start":42,"line_end":42,"column_start":1,"column_end":108}},{"value":"/ arbitrary function until the global epoch is advanced enough. Most notably, concurrent data","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":2352,"byte_end":2447,"line_start":43,"line_end":43,"column_start":1,"column_end":96}},{"value":"/ structures may defer the deallocation of an object.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":2448,"byte_end":2503,"line_start":44,"line_end":44,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":2504,"byte_end":2507,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # APIs","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":2508,"byte_end":2518,"line_start":46,"line_end":46,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":2519,"byte_end":2522,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ For majority of use cases, just use the default garbage collector by invoking [`pin`]. If you","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":2523,"byte_end":2620,"line_start":48,"line_end":48,"column_start":1,"column_end":98}},{"value":"/ want to create your own garbage collector, use the [`Collector`] API.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":2621,"byte_end":2694,"line_start":49,"line_end":49,"column_start":1,"column_end":74}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\nunreachable_pub)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":2855,"byte_end":2961,"line_start":58,"line_end":63,"column_start":1,"column_end":3}}]},{"kind":"Type","id":{"krate":0,"index":96},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14023599,"byte_end":14023617,"line_start":31,"line_end":31,"column_start":10,"column_end":28},"name":"CompareAndSetError","qualname":"::atomic::CompareAndSetError","value":"CompareExchangeError","parent":null,"children":[],"decl_id":null,"docs":" The error returned on failed compare-and-set operation.\n","sig":null,"attributes":[{"value":"/ The error returned on failed compare-and-set operation.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14023428,"byte_end":14023487,"line_start":28,"line_end":28,"column_start":1,"column_end":60}},{"value":"deprecated(note = \"Use `CompareExchangeError` instead\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14023531,"byte_end":14023589,"line_start":30,"line_end":30,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":100},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14023735,"byte_end":14023755,"line_start":34,"line_end":34,"column_start":12,"column_end":32},"name":"CompareExchangeError","qualname":"::atomic::CompareExchangeError","value":"CompareExchangeError { current, new }","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":105}],"decl_id":null,"docs":" The error returned on failed compare-and-swap operation.\n","sig":null,"attributes":[{"value":"/ The error returned on failed compare-and-swap operation.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14023663,"byte_end":14023723,"line_start":33,"line_end":33,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":104},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14023885,"byte_end":14023892,"line_start":36,"line_end":36,"column_start":9,"column_end":16},"name":"current","qualname":"::atomic::CompareExchangeError::current","value":"atomic::Shared<'g, T>","parent":{"krate":0,"index":100},"children":[],"decl_id":null,"docs":" The value in the atomic pointer at the time of the failed operation.\n","sig":null,"attributes":[{"value":"/ The value in the atomic pointer at the time of the failed operation.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14023804,"byte_end":14023876,"line_start":35,"line_end":35,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":105},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14023978,"byte_end":14023981,"line_start":39,"line_end":39,"column_start":9,"column_end":12},"name":"new","qualname":"::atomic::CompareExchangeError::new","value":"P","parent":{"krate":0,"index":100},"children":[],"decl_id":null,"docs":" The new value, which the operation failed to store.\n","sig":null,"attributes":[{"value":"/ The new value, which the operation failed to store.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14023914,"byte_end":14023969,"line_start":38,"line_end":38,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14024080,"byte_end":14024083,"line_start":43,"line_end":43,"column_start":8,"column_end":11},"name":"fmt","qualname":"<CompareExchangeError as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":110},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14025092,"byte_end":14025113,"line_start":67,"line_end":67,"column_start":11,"column_end":32},"name":"CompareAndSetOrdering","qualname":"::atomic::CompareAndSetOrdering","value":"CompareAndSetOrdering","parent":null,"children":[{"krate":0,"index":111},{"krate":0,"index":112}],"decl_id":null,"docs":" Memory orderings for compare-and-set operations.","sig":null,"attributes":[{"value":"/ Memory orderings for compare-and-set operations.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14024296,"byte_end":14024348,"line_start":51,"line_end":51,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14024349,"byte_end":14024352,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ A compare-and-set operation can have different memory orderings depending on whether it","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14024353,"byte_end":14024444,"line_start":53,"line_end":53,"column_start":1,"column_end":92}},{"value":"/ succeeds or fails. This trait generalizes different ways of specifying memory orderings.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14024445,"byte_end":14024537,"line_start":54,"line_end":54,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14024538,"byte_end":14024541,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The two ways of specifying orderings for compare-and-set are:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14024542,"byte_end":14024607,"line_start":56,"line_end":56,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14024608,"byte_end":14024611,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ 1. Just one `Ordering` for the success case. In case of failure, the strongest appropriate","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14024612,"byte_end":14024706,"line_start":58,"line_end":58,"column_start":1,"column_end":95}},{"value":"/    ordering is chosen.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14024707,"byte_end":14024733,"line_start":59,"line_end":59,"column_start":1,"column_end":27}},{"value":"/ 2. A pair of `Ordering`s. The first one is for the success case, while the second one is","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14024734,"byte_end":14024826,"line_start":60,"line_end":60,"column_start":1,"column_end":93}},{"value":"/    for the failure case.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14024827,"byte_end":14024855,"line_start":61,"line_end":61,"column_start":1,"column_end":29}},{"value":"deprecated(note =\n\"`compare_and_set` and `compare_and_set_weak` that use this trait are deprecated, \\\n            use `compare_exchange` or `compare_exchange_weak instead`\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14024899,"byte_end":14025081,"line_start":63,"line_end":66,"column_start":1,"column_end":3}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14025179,"byte_end":14025186,"line_start":69,"line_end":69,"column_start":8,"column_end":15},"name":"success","qualname":"::atomic::CompareAndSetOrdering::success","value":"fn success(&Self) -> Ordering","parent":{"krate":0,"index":110},"children":[],"decl_id":null,"docs":" The ordering of the operation when it succeeds.\n","sig":null,"attributes":[{"value":"/ The ordering of the operation when it succeeds.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14025120,"byte_end":14025171,"line_start":68,"line_end":68,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14025404,"byte_end":14025411,"line_start":75,"line_end":75,"column_start":8,"column_end":15},"name":"failure","qualname":"::atomic::CompareAndSetOrdering::failure","value":"fn failure(&Self) -> Ordering","parent":{"krate":0,"index":110},"children":[],"decl_id":null,"docs":" The ordering of the operation when it fails.","sig":null,"attributes":[{"value":"/ The ordering of the operation when it fails.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14025212,"byte_end":14025260,"line_start":71,"line_end":71,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14025265,"byte_end":14025268,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ The failure ordering can't be `Release` or `AcqRel` and must be equivalent or weaker than","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14025273,"byte_end":14025366,"line_start":73,"line_end":73,"column_start":5,"column_end":98}},{"value":"/ the success ordering.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14025371,"byte_end":14025396,"line_start":74,"line_end":74,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14025519,"byte_end":14025526,"line_start":81,"line_end":81,"column_start":8,"column_end":15},"name":"success","qualname":"<Ordering as atomic::CompareAndSetOrdering>::success","value":"fn success(&Self) -> Ordering","parent":{"krate":0,"index":110},"children":[],"decl_id":{"krate":0,"index":111},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14025502,"byte_end":14025511,"line_start":80,"line_end":80,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14025590,"byte_end":14025597,"line_start":86,"line_end":86,"column_start":8,"column_end":15},"name":"failure","qualname":"<Ordering as atomic::CompareAndSetOrdering>::failure","value":"fn failure(&Self) -> Ordering","parent":{"krate":0,"index":110},"children":[],"decl_id":{"krate":0,"index":112},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14025573,"byte_end":14025582,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14025766,"byte_end":14025773,"line_start":94,"line_end":94,"column_start":8,"column_end":15},"name":"success","qualname":"<(Ordering, Ordering) as atomic::CompareAndSetOrdering>::success","value":"fn success(&Self) -> Ordering","parent":{"krate":0,"index":110},"children":[],"decl_id":{"krate":0,"index":111},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14025749,"byte_end":14025758,"line_start":93,"line_end":93,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14025838,"byte_end":14025845,"line_start":99,"line_end":99,"column_start":8,"column_end":15},"name":"failure","qualname":"<(Ordering, Ordering) as atomic::CompareAndSetOrdering>::failure","value":"fn failure(&Self) -> Ordering","parent":{"krate":0,"index":110},"children":[],"decl_id":{"krate":0,"index":112},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14025821,"byte_end":14025830,"line_start":98,"line_end":98,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":127},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14027761,"byte_end":14027770,"line_start":150,"line_end":150,"column_start":11,"column_end":20},"name":"Pointable","qualname":"::atomic::Pointable","value":"Pointable","parent":null,"children":[{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":133},{"krate":0,"index":135}],"decl_id":null,"docs":" Types that are pointed to by a single word.","sig":null,"attributes":[{"value":"/ Types that are pointed to by a single word.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14026788,"byte_end":14026835,"line_start":130,"line_end":130,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14026836,"byte_end":14026839,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ In concurrent programming, it is necessary to represent an object within a word because atomic","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14026840,"byte_end":14026938,"line_start":132,"line_end":132,"column_start":1,"column_end":99}},{"value":"/ operations (e.g., reads, writes, read-modify-writes) support only single words.  This trait","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14026939,"byte_end":14027034,"line_start":133,"line_end":133,"column_start":1,"column_end":96}},{"value":"/ qualifies such types that are pointed to by a single word.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14027035,"byte_end":14027097,"line_start":134,"line_end":134,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14027098,"byte_end":14027101,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ The trait generalizes `Box<T>` for a sized type `T`.  In a box, an object of type `T` is","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14027102,"byte_end":14027194,"line_start":136,"line_end":136,"column_start":1,"column_end":93}},{"value":"/ allocated in heap and it is owned by a single-word pointer.  This trait is also implemented for","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14027195,"byte_end":14027294,"line_start":137,"line_end":137,"column_start":1,"column_end":100}},{"value":"/ `[MaybeUninit<T>]` by storing its size along with its elements and pointing to the pair of array","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14027295,"byte_end":14027395,"line_start":138,"line_end":138,"column_start":1,"column_end":101}},{"value":"/ size and elements.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14027396,"byte_end":14027418,"line_start":139,"line_end":139,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14027419,"byte_end":14027422,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ Pointers to `Pointable` types can be stored in [`Atomic`], [`Owned`], and [`Shared`].  In","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14027423,"byte_end":14027516,"line_start":141,"line_end":141,"column_start":1,"column_end":94}},{"value":"/ particular, Crossbeam supports dynamically sized slices as follows.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14027517,"byte_end":14027588,"line_start":142,"line_end":142,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14027589,"byte_end":14027592,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14027593,"byte_end":14027600,"line_start":144,"line_end":144,"column_start":1,"column_end":8}},{"value":"/ use std::mem::MaybeUninit;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14027601,"byte_end":14027631,"line_start":145,"line_end":145,"column_start":1,"column_end":31}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14027632,"byte_end":14027663,"line_start":146,"line_end":146,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14027664,"byte_end":14027667,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ let o = Owned::<[MaybeUninit<i32>]>::init(10); // allocating [i32; 10]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14027668,"byte_end":14027742,"line_start":148,"line_end":148,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14027743,"byte_end":14027750,"line_start":149,"line_end":149,"column_start":1,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":128},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14027817,"byte_end":14027822,"line_start":152,"line_end":152,"column_start":11,"column_end":16},"name":"ALIGN","qualname":"::atomic::Pointable::ALIGN","value":"usize","parent":{"krate":0,"index":127},"children":[],"decl_id":null,"docs":" The alignment of pointer.\n","sig":null,"attributes":[{"value":"/ The alignment of pointer.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14027777,"byte_end":14027806,"line_start":151,"line_end":151,"column_start":5,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":129},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14027876,"byte_end":14027880,"line_start":155,"line_end":155,"column_start":10,"column_end":14},"name":"Init","qualname":"::atomic::Pointable::Init","value":"type Init;","parent":{"krate":0,"index":127},"children":[],"decl_id":null,"docs":" The type for initializers.\n","sig":null,"attributes":[{"value":"/ The type for initializers.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14027836,"byte_end":14027866,"line_start":154,"line_end":154,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14028032,"byte_end":14028036,"line_start":162,"line_end":162,"column_start":15,"column_end":19},"name":"init","qualname":"::atomic::Pointable::init","value":"unsafe fn init(Self::Init) -> usize","parent":{"krate":0,"index":127},"children":[],"decl_id":null,"docs":" Initializes a with the given initializer.","sig":null,"attributes":[{"value":"/ Initializes a with the given initializer.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14027887,"byte_end":14027932,"line_start":157,"line_end":157,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14027937,"byte_end":14027940,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14027945,"byte_end":14027957,"line_start":159,"line_end":159,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14027962,"byte_end":14027965,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ The result should be a multiple of `ALIGN`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14027970,"byte_end":14028017,"line_start":161,"line_end":161,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14028400,"byte_end":14028405,"line_start":171,"line_end":171,"column_start":15,"column_end":20},"name":"deref","qualname":"::atomic::Pointable::deref","value":"unsafe fn deref<'a>(usize) -> &'a Self","parent":{"krate":0,"index":127},"children":[],"decl_id":null,"docs":" Dereferences the given pointer.","sig":null,"attributes":[{"value":"/ Dereferences the given pointer.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14028070,"byte_end":14028105,"line_start":164,"line_end":164,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14028110,"byte_end":14028113,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14028118,"byte_end":14028130,"line_start":166,"line_end":166,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14028135,"byte_end":14028138,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14028143,"byte_end":14028219,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14028224,"byte_end":14028292,"line_start":169,"line_end":169,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be mutably dereferenced by [`Pointable::deref_mut`] concurrently.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14028297,"byte_end":14028385,"line_start":170,"line_end":170,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14028804,"byte_end":14028813,"line_start":181,"line_end":181,"column_start":15,"column_end":24},"name":"deref_mut","qualname":"::atomic::Pointable::deref_mut","value":"unsafe fn deref_mut<'a>(usize) -> &'a mut Self","parent":{"krate":0,"index":127},"children":[],"decl_id":null,"docs":" Mutably dereferences the given pointer.","sig":null,"attributes":[{"value":"/ Mutably dereferences the given pointer.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14028440,"byte_end":14028483,"line_start":173,"line_end":173,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14028488,"byte_end":14028491,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14028496,"byte_end":14028508,"line_start":175,"line_end":175,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14028513,"byte_end":14028516,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14028521,"byte_end":14028597,"line_start":177,"line_end":177,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14028602,"byte_end":14028670,"line_start":178,"line_end":178,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be dereferenced by [`Pointable::deref`] or [`Pointable::deref_mut`]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14028675,"byte_end":14028765,"line_start":179,"line_end":179,"column_start":5,"column_end":95}},{"value":"/   concurrently.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14028770,"byte_end":14028789,"line_start":180,"line_end":180,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14029226,"byte_end":14029230,"line_start":191,"line_end":191,"column_start":15,"column_end":19},"name":"drop","qualname":"::atomic::Pointable::drop","value":"unsafe fn drop(usize)","parent":{"krate":0,"index":127},"children":[],"decl_id":null,"docs":" Drops the object pointed to by the given pointer.","sig":null,"attributes":[{"value":"/ Drops the object pointed to by the given pointer.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14028852,"byte_end":14028905,"line_start":183,"line_end":183,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14028910,"byte_end":14028913,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14028918,"byte_end":14028930,"line_start":185,"line_end":185,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14028935,"byte_end":14028938,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14028943,"byte_end":14029019,"line_start":187,"line_end":187,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14029024,"byte_end":14029092,"line_start":188,"line_end":188,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be dereferenced by [`Pointable::deref`] or [`Pointable::deref_mut`]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14029097,"byte_end":14029187,"line_start":189,"line_end":189,"column_start":5,"column_end":95}},{"value":"/   concurrently.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14029192,"byte_end":14029211,"line_start":190,"line_end":190,"column_start":5,"column_end":24}}]},{"kind":"Const","id":{"krate":0,"index":138},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14029283,"byte_end":14029288,"line_start":195,"line_end":195,"column_start":11,"column_end":16},"name":"ALIGN","qualname":"::<T as atomic::Pointable>::ALIGN","value":"usize","parent":{"krate":0,"index":136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14029355,"byte_end":14029359,"line_start":199,"line_end":199,"column_start":15,"column_end":19},"name":"init","qualname":"<T as atomic::Pointable>::init","value":"unsafe fn init(Self::Init) -> usize","parent":{"krate":0,"index":127},"children":[],"decl_id":{"krate":0,"index":130},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14029457,"byte_end":14029462,"line_start":203,"line_end":203,"column_start":15,"column_end":20},"name":"deref","qualname":"<T as atomic::Pointable>::deref","value":"unsafe fn deref<'a>(usize) -> &'a Self","parent":{"krate":0,"index":127},"children":[],"decl_id":{"krate":0,"index":131},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14029542,"byte_end":14029551,"line_start":207,"line_end":207,"column_start":15,"column_end":24},"name":"deref_mut","qualname":"<T as atomic::Pointable>::deref_mut","value":"unsafe fn deref_mut<'a>(usize) -> &'a mut Self","parent":{"krate":0,"index":127},"children":[],"decl_id":{"krate":0,"index":133},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14029637,"byte_end":14029641,"line_start":211,"line_end":211,"column_start":15,"column_end":19},"name":"drop","qualname":"<T as atomic::Pointable>::drop","value":"unsafe fn drop(usize)","parent":{"krate":0,"index":127},"children":[],"decl_id":{"krate":0,"index":135},"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":153},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14030570,"byte_end":14030575,"line_start":247,"line_end":247,"column_start":11,"column_end":16},"name":"ALIGN","qualname":"::<[std::mem::MaybeUninit<T>] as atomic::Pointable>::ALIGN","value":"usize","parent":{"krate":0,"index":151},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14030653,"byte_end":14030657,"line_start":251,"line_end":251,"column_start":15,"column_end":19},"name":"init","qualname":"<[MaybeUninit<T>] as atomic::Pointable>::init","value":"unsafe fn init(Self::Init) -> usize","parent":{"krate":0,"index":127},"children":[],"decl_id":{"krate":0,"index":130},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14031109,"byte_end":14031114,"line_start":263,"line_end":263,"column_start":15,"column_end":20},"name":"deref","qualname":"<[MaybeUninit<T>] as atomic::Pointable>::deref","value":"unsafe fn deref<'a>(usize) -> &'a Self","parent":{"krate":0,"index":127},"children":[],"decl_id":{"krate":0,"index":131},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14031292,"byte_end":14031301,"line_start":268,"line_end":268,"column_start":15,"column_end":24},"name":"deref_mut","qualname":"<[MaybeUninit<T>] as atomic::Pointable>::deref_mut","value":"unsafe fn deref_mut<'a>(usize) -> &'a mut Self","parent":{"krate":0,"index":127},"children":[],"decl_id":{"krate":0,"index":133},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14031483,"byte_end":14031487,"line_start":273,"line_end":273,"column_start":15,"column_end":19},"name":"drop","qualname":"<[MaybeUninit<T>] as atomic::Pointable>::drop","value":"unsafe fn drop(usize)","parent":{"krate":0,"index":127},"children":[],"decl_id":{"krate":0,"index":135},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":161},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14032341,"byte_end":14032347,"line_start":291,"line_end":291,"column_start":12,"column_end":18},"name":"Atomic","qualname":"::atomic::Atomic","value":"Atomic {  }","parent":null,"children":[{"krate":0,"index":163},{"krate":0,"index":164}],"decl_id":null,"docs":" An atomic pointer that can be safely shared between threads.","sig":null,"attributes":[{"value":"/ An atomic pointer that can be safely shared between threads.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14031823,"byte_end":14031887,"line_start":282,"line_end":282,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14031888,"byte_end":14031891,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14031892,"byte_end":14031990,"line_start":284,"line_end":284,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address. For example, the tag for a pointer to a sized type `T`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14031991,"byte_end":14032088,"line_start":285,"line_end":285,"column_start":1,"column_end":98}},{"value":"/ should be less than `(1 << mem::align_of::<T>().trailing_zeros())`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14032089,"byte_end":14032160,"line_start":286,"line_end":286,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14032161,"byte_end":14032164,"line_start":287,"line_end":287,"column_start":1,"column_end":4}},{"value":"/ Any method that loads the pointer must be passed a reference to a [`Guard`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14032165,"byte_end":14032245,"line_start":288,"line_end":288,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14032246,"byte_end":14032249,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/ Crossbeam supports dynamically sized types.  See [`Pointable`] for details.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14032250,"byte_end":14032329,"line_start":290,"line_end":290,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14032890,"byte_end":14032893,"line_start":310,"line_end":310,"column_start":12,"column_end":15},"name":"new","qualname":"<Atomic<T>>::new","value":"fn new(T) -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new atomic pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new atomic pointer pointing to it.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14032600,"byte_end":14032682,"line_start":300,"line_end":300,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14032687,"byte_end":14032690,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14032695,"byte_end":14032709,"line_start":302,"line_end":302,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14032714,"byte_end":14032717,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14032722,"byte_end":14032729,"line_start":304,"line_end":304,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14032734,"byte_end":14032766,"line_start":305,"line_end":305,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14032771,"byte_end":14032774,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14032779,"byte_end":14032809,"line_start":307,"line_end":307,"column_start":5,"column_end":35}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14032814,"byte_end":14032866,"line_start":308,"line_end":308,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14032871,"byte_end":14032878,"line_start":309,"line_end":309,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14033294,"byte_end":14033298,"line_start":326,"line_end":326,"column_start":12,"column_end":16},"name":"init","qualname":"<Atomic<T>>::init","value":"fn init(T::Init) -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new atomic pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new atomic pointer pointing to it.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14032996,"byte_end":14033078,"line_start":316,"line_end":316,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14033083,"byte_end":14033086,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14033091,"byte_end":14033105,"line_start":318,"line_end":318,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14033110,"byte_end":14033113,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14033118,"byte_end":14033125,"line_start":320,"line_end":320,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14033130,"byte_end":14033162,"line_start":321,"line_end":321,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14033167,"byte_end":14033170,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::init(1234);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14033175,"byte_end":14033213,"line_start":323,"line_end":323,"column_start":5,"column_end":43}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14033218,"byte_end":14033270,"line_start":324,"line_end":324,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14033275,"byte_end":14033282,"line_start":325,"line_end":325,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14033879,"byte_end":14033883,"line_start":348,"line_end":348,"column_start":18,"column_end":22},"name":"null","qualname":"<Atomic<T>>::null","value":"const fn null() -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new null atomic pointer.","sig":null,"attributes":[{"value":"/ Returns a new null atomic pointer.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14033603,"byte_end":14033641,"line_start":338,"line_end":338,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14033646,"byte_end":14033649,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14033654,"byte_end":14033668,"line_start":340,"line_end":340,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14033673,"byte_end":14033676,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14033681,"byte_end":14033688,"line_start":342,"line_end":342,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14033693,"byte_end":14033725,"line_start":343,"line_end":343,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14033730,"byte_end":14033733,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::null();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14033738,"byte_end":14033772,"line_start":345,"line_end":345,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14033777,"byte_end":14033784,"line_start":346,"line_end":346,"column_start":5,"column_end":12}},{"value":"cfg(all(not(crossbeam_no_const_fn_trait_bound), not(crossbeam_loom)))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14033789,"byte_end":14033861,"line_start":347,"line_end":347,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14034788,"byte_end":14034792,"line_start":380,"line_end":380,"column_start":12,"column_end":16},"name":"load","qualname":"<Atomic<T>>::load","value":"fn load<'g>(&Self, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Loads a `Shared` from the atomic pointer.","sig":null,"attributes":[{"value":"/ Loads a `Shared` from the atomic pointer.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14034273,"byte_end":14034318,"line_start":364,"line_end":364,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14034323,"byte_end":14034326,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14034331,"byte_end":14034421,"line_start":366,"line_end":366,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14034426,"byte_end":14034440,"line_start":367,"line_end":367,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14034445,"byte_end":14034448,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14034453,"byte_end":14034467,"line_start":369,"line_end":369,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14034472,"byte_end":14034475,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14034480,"byte_end":14034487,"line_start":371,"line_end":371,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14034492,"byte_end":14034541,"line_start":372,"line_end":372,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14034546,"byte_end":14034590,"line_start":373,"line_end":373,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14034595,"byte_end":14034598,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14034603,"byte_end":14034633,"line_start":375,"line_end":375,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14034638,"byte_end":14034668,"line_start":376,"line_end":376,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14034673,"byte_end":14034707,"line_start":377,"line_end":377,"column_start":5,"column_end":39}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14034712,"byte_end":14034764,"line_start":378,"line_end":378,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14034769,"byte_end":14034776,"line_start":379,"line_end":379,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14035856,"byte_end":14035868,"line_start":406,"line_end":406,"column_start":12,"column_end":24},"name":"load_consume","qualname":"<Atomic<T>>::load_consume","value":"fn load_consume<'g>(&Self, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Loads a `Shared` from the atomic pointer using a \"consume\" memory ordering.","sig":null,"attributes":[{"value":"/ Loads a `Shared` from the atomic pointer using a \"consume\" memory ordering.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14034922,"byte_end":14035001,"line_start":384,"line_end":384,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14035006,"byte_end":14035009,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ This is similar to the \"acquire\" ordering, except that an ordering is","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14035014,"byte_end":14035087,"line_start":386,"line_end":386,"column_start":5,"column_end":78}},{"value":"/ only guaranteed with operations that \"depend on\" the result of the load.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14035092,"byte_end":14035168,"line_start":387,"line_end":387,"column_start":5,"column_end":81}},{"value":"/ However consume loads are usually much faster than acquire loads on","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14035173,"byte_end":14035244,"line_start":388,"line_end":388,"column_start":5,"column_end":76}},{"value":"/ architectures with a weak memory model since they don't require memory","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14035249,"byte_end":14035323,"line_start":389,"line_end":389,"column_start":5,"column_end":79}},{"value":"/ fence instructions.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14035328,"byte_end":14035351,"line_start":390,"line_end":390,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14035356,"byte_end":14035359,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ The exact definition of \"depend on\" is a bit vague, but it works as you","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14035364,"byte_end":14035439,"line_start":392,"line_end":392,"column_start":5,"column_end":80}},{"value":"/ would expect in practice since a lot of software, especially the Linux","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14035444,"byte_end":14035518,"line_start":393,"line_end":393,"column_start":5,"column_end":79}},{"value":"/ kernel, rely on this behavior.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14035523,"byte_end":14035557,"line_start":394,"line_end":394,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14035562,"byte_end":14035565,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14035570,"byte_end":14035584,"line_start":396,"line_end":396,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14035589,"byte_end":14035592,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14035597,"byte_end":14035604,"line_start":398,"line_end":398,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14035609,"byte_end":14035658,"line_start":399,"line_end":399,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14035663,"byte_end":14035666,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14035671,"byte_end":14035701,"line_start":401,"line_end":401,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14035706,"byte_end":14035736,"line_start":402,"line_end":402,"column_start":5,"column_end":35}},{"value":"/ let p = a.load_consume(guard);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14035741,"byte_end":14035775,"line_start":403,"line_end":403,"column_start":5,"column_end":39}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14035780,"byte_end":14035832,"line_start":404,"line_end":404,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14035837,"byte_end":14035844,"line_start":405,"line_end":405,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14036628,"byte_end":14036633,"line_start":427,"line_end":427,"column_start":12,"column_end":17},"name":"store","qualname":"<Atomic<T>>::store","value":"fn store<P>(&Self, P, Ordering) where P: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores a `Shared` or `Owned` pointer into the atomic pointer.","sig":null,"attributes":[{"value":"/ Stores a `Shared` or `Owned` pointer into the atomic pointer.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14035988,"byte_end":14036053,"line_start":410,"line_end":410,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14036058,"byte_end":14036061,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14036066,"byte_end":14036156,"line_start":412,"line_end":412,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14036161,"byte_end":14036175,"line_start":413,"line_end":413,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14036180,"byte_end":14036183,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14036188,"byte_end":14036202,"line_start":415,"line_end":415,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14036207,"byte_end":14036210,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14036215,"byte_end":14036222,"line_start":417,"line_end":417,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{Atomic, Owned, Shared};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14036227,"byte_end":14036276,"line_start":418,"line_end":418,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14036281,"byte_end":14036325,"line_start":419,"line_end":419,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14036330,"byte_end":14036333,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14036338,"byte_end":14036368,"line_start":421,"line_end":421,"column_start":5,"column_end":35}},{"value":"/ # unsafe { drop(a.load(SeqCst, &crossbeam_epoch::pin()).into_owned()); } // avoid leak","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14036373,"byte_end":14036463,"line_start":422,"line_end":422,"column_start":5,"column_end":95}},{"value":"/ a.store(Shared::null(), SeqCst);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14036468,"byte_end":14036504,"line_start":423,"line_end":423,"column_start":5,"column_end":41}},{"value":"/ a.store(Owned::new(1234), SeqCst);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14036509,"byte_end":14036547,"line_start":424,"line_end":424,"column_start":5,"column_end":43}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14036552,"byte_end":14036604,"line_start":425,"line_end":425,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14036609,"byte_end":14036616,"line_start":426,"line_end":426,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14037340,"byte_end":14037344,"line_start":448,"line_end":448,"column_start":12,"column_end":16},"name":"swap","qualname":"<Atomic<T>>::swap","value":"fn swap<'g, P>(&Self, P, Ordering, &'g Guard) -> Shared where P: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores a `Shared` or `Owned` pointer into the atomic pointer, returning the previous\n `Shared`.","sig":null,"attributes":[{"value":"/ Stores a `Shared` or `Owned` pointer into the atomic pointer, returning the previous","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14036740,"byte_end":14036828,"line_start":431,"line_end":431,"column_start":5,"column_end":93}},{"value":"/ `Shared`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14036833,"byte_end":14036846,"line_start":432,"line_end":432,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14036851,"byte_end":14036854,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14036859,"byte_end":14036949,"line_start":434,"line_end":434,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14036954,"byte_end":14036968,"line_start":435,"line_end":435,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14036973,"byte_end":14036976,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14036981,"byte_end":14036995,"line_start":437,"line_end":437,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14037000,"byte_end":14037003,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14037008,"byte_end":14037015,"line_start":439,"line_end":439,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14037020,"byte_end":14037077,"line_start":440,"line_end":440,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14037082,"byte_end":14037126,"line_start":441,"line_end":441,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14037131,"byte_end":14037134,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14037139,"byte_end":14037169,"line_start":443,"line_end":443,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14037174,"byte_end":14037204,"line_start":444,"line_end":444,"column_start":5,"column_end":35}},{"value":"/ let p = a.swap(Shared::null(), SeqCst, guard);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14037209,"byte_end":14037259,"line_start":445,"line_end":445,"column_start":5,"column_end":55}},{"value":"/ # unsafe { drop(p.into_owned()); } // avoid leak","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14037264,"byte_end":14037316,"line_start":446,"line_end":446,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14037321,"byte_end":14037328,"line_start":447,"line_end":447,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14039240,"byte_end":14039256,"line_start":483,"line_end":483,"column_start":12,"column_end":28},"name":"compare_exchange","qualname":"<Atomic<T>>::compare_exchange","value":"fn compare_exchange<'g,\nP>(&Self, Shared<, T>, P, Ordering, Ordering, &'g Guard)\n-> Result<Shared, CompareExchangeError> where P: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14037515,"byte_end":14037611,"line_start":452,"line_end":452,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14037616,"byte_end":14037710,"line_start":453,"line_end":453,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14037715,"byte_end":14037786,"line_start":454,"line_end":454,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14037791,"byte_end":14037794,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ The return value is a result indicating whether the new pointer was written. On success the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14037799,"byte_end":14037894,"line_start":456,"line_end":456,"column_start":5,"column_end":100}},{"value":"/ pointer that was written is returned. On failure the actual current value and `new` are","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14037899,"byte_end":14037990,"line_start":457,"line_end":457,"column_start":5,"column_end":96}},{"value":"/ returned.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14037995,"byte_end":14038008,"line_start":458,"line_end":458,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14038013,"byte_end":14038016,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ This method takes two `Ordering` arguments to describe the memory","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14038021,"byte_end":14038090,"line_start":460,"line_end":460,"column_start":5,"column_end":74}},{"value":"/ ordering of this operation. `success` describes the required ordering for the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14038095,"byte_end":14038176,"line_start":461,"line_end":461,"column_start":5,"column_end":86}},{"value":"/ read-modify-write operation that takes place if the comparison with `current` succeeds.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14038181,"byte_end":14038272,"line_start":462,"line_end":462,"column_start":5,"column_end":96}},{"value":"/ `failure` describes the required ordering for the load operation that takes place when","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14038277,"byte_end":14038367,"line_start":463,"line_end":463,"column_start":5,"column_end":95}},{"value":"/ the comparison fails. Using `Acquire` as success ordering makes the store part","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14038372,"byte_end":14038454,"line_start":464,"line_end":464,"column_start":5,"column_end":87}},{"value":"/ of this operation `Relaxed`, and using `Release` makes the successful load","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14038459,"byte_end":14038537,"line_start":465,"line_end":465,"column_start":5,"column_end":83}},{"value":"/ `Relaxed`. The failure ordering can only be `SeqCst`, `Acquire` or `Relaxed`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14038542,"byte_end":14038622,"line_start":466,"line_end":466,"column_start":5,"column_end":85}},{"value":"/ and must be equivalent to or weaker than the success ordering.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14038627,"byte_end":14038693,"line_start":467,"line_end":467,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14038698,"byte_end":14038701,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14038706,"byte_end":14038720,"line_start":469,"line_end":469,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14038725,"byte_end":14038728,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14038733,"byte_end":14038740,"line_start":471,"line_end":471,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14038745,"byte_end":14038809,"line_start":472,"line_end":472,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14038814,"byte_end":14038858,"line_start":473,"line_end":473,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14038863,"byte_end":14038866,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14038871,"byte_end":14038901,"line_start":475,"line_end":475,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14038906,"byte_end":14038909,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14038914,"byte_end":14038944,"line_start":477,"line_end":477,"column_start":5,"column_end":35}},{"value":"/ let curr = a.load(SeqCst, guard);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14038949,"byte_end":14038986,"line_start":478,"line_end":478,"column_start":5,"column_end":42}},{"value":"/ let res1 = a.compare_exchange(curr, Shared::null(), SeqCst, SeqCst, guard);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14038991,"byte_end":14039070,"line_start":479,"line_end":479,"column_start":5,"column_end":84}},{"value":"/ let res2 = a.compare_exchange(curr, Owned::new(5678), SeqCst, SeqCst, guard);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14039075,"byte_end":14039156,"line_start":480,"line_end":480,"column_start":5,"column_end":86}},{"value":"/ # unsafe { drop(curr.into_owned()); } // avoid leak","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14039161,"byte_end":14039216,"line_start":481,"line_end":481,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14039221,"byte_end":14039228,"line_start":482,"line_end":482,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14042427,"byte_end":14042448,"line_start":560,"line_end":560,"column_start":12,"column_end":33},"name":"compare_exchange_weak","qualname":"<Atomic<T>>::compare_exchange_weak","value":"fn compare_exchange_weak<'g,\nP>(&Self, Shared<, T>, P, Ordering, Ordering, &'g Guard)\n-> Result<Shared, CompareExchangeError> where P: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14039918,"byte_end":14040014,"line_start":506,"line_end":506,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14040019,"byte_end":14040113,"line_start":507,"line_end":507,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14040118,"byte_end":14040189,"line_start":508,"line_end":508,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14040194,"byte_end":14040197,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ Unlike [`compare_exchange`], this method is allowed to spuriously fail even when comparison","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14040202,"byte_end":14040297,"line_start":510,"line_end":510,"column_start":5,"column_end":100}},{"value":"/ succeeds, which can result in more efficient code on some platforms.  The return value is a","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14040302,"byte_end":14040397,"line_start":511,"line_end":511,"column_start":5,"column_end":100}},{"value":"/ result indicating whether the new pointer was written. On success the pointer that was","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14040402,"byte_end":14040492,"line_start":512,"line_end":512,"column_start":5,"column_end":95}},{"value":"/ written is returned. On failure the actual current value and `new` are returned.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14040497,"byte_end":14040581,"line_start":513,"line_end":513,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14040586,"byte_end":14040589,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ This method takes two `Ordering` arguments to describe the memory","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14040594,"byte_end":14040663,"line_start":515,"line_end":515,"column_start":5,"column_end":74}},{"value":"/ ordering of this operation. `success` describes the required ordering for the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14040668,"byte_end":14040749,"line_start":516,"line_end":516,"column_start":5,"column_end":86}},{"value":"/ read-modify-write operation that takes place if the comparison with `current` succeeds.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14040754,"byte_end":14040845,"line_start":517,"line_end":517,"column_start":5,"column_end":96}},{"value":"/ `failure` describes the required ordering for the load operation that takes place when","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14040850,"byte_end":14040940,"line_start":518,"line_end":518,"column_start":5,"column_end":95}},{"value":"/ the comparison fails. Using `Acquire` as success ordering makes the store part","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14040945,"byte_end":14041027,"line_start":519,"line_end":519,"column_start":5,"column_end":87}},{"value":"/ of this operation `Relaxed`, and using `Release` makes the successful load","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14041032,"byte_end":14041110,"line_start":520,"line_end":520,"column_start":5,"column_end":83}},{"value":"/ `Relaxed`. The failure ordering can only be `SeqCst`, `Acquire` or `Relaxed`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14041115,"byte_end":14041195,"line_start":521,"line_end":521,"column_start":5,"column_end":85}},{"value":"/ and must be equivalent to or weaker than the success ordering.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14041200,"byte_end":14041266,"line_start":522,"line_end":522,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14041271,"byte_end":14041274,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ [`compare_exchange`]: Atomic::compare_exchange","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14041279,"byte_end":14041329,"line_start":524,"line_end":524,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14041334,"byte_end":14041337,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14041342,"byte_end":14041356,"line_start":526,"line_end":526,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14041361,"byte_end":14041364,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14041369,"byte_end":14041376,"line_start":528,"line_end":528,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14041381,"byte_end":14041445,"line_start":529,"line_end":529,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14041450,"byte_end":14041494,"line_start":530,"line_end":530,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14041499,"byte_end":14041502,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14041507,"byte_end":14041537,"line_start":532,"line_end":532,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14041542,"byte_end":14041572,"line_start":533,"line_end":533,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14041577,"byte_end":14041580,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ let mut new = Owned::new(5678);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14041585,"byte_end":14041620,"line_start":535,"line_end":535,"column_start":5,"column_end":40}},{"value":"/ let mut ptr = a.load(SeqCst, guard);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14041625,"byte_end":14041665,"line_start":536,"line_end":536,"column_start":5,"column_end":45}},{"value":"/ # unsafe { drop(a.load(SeqCst, guard).into_owned()); } // avoid leak","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14041670,"byte_end":14041742,"line_start":537,"line_end":537,"column_start":5,"column_end":77}},{"value":"/ loop {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14041747,"byte_end":14041757,"line_start":538,"line_end":538,"column_start":5,"column_end":15}},{"value":"/     match a.compare_exchange_weak(ptr, new, SeqCst, SeqCst, guard) {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14041762,"byte_end":14041834,"line_start":539,"line_end":539,"column_start":5,"column_end":77}},{"value":"/         Ok(p) => {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14041839,"byte_end":14041861,"line_start":540,"line_end":540,"column_start":5,"column_end":27}},{"value":"/             ptr = p;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14041866,"byte_end":14041890,"line_start":541,"line_end":541,"column_start":5,"column_end":29}},{"value":"/             break;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14041895,"byte_end":14041917,"line_start":542,"line_end":542,"column_start":5,"column_end":27}},{"value":"/         }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14041922,"byte_end":14041935,"line_start":543,"line_end":543,"column_start":5,"column_end":18}},{"value":"/         Err(err) => {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14041940,"byte_end":14041965,"line_start":544,"line_end":544,"column_start":5,"column_end":30}},{"value":"/             ptr = err.current;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14041970,"byte_end":14042004,"line_start":545,"line_end":545,"column_start":5,"column_end":39}},{"value":"/             new = err.new;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14042009,"byte_end":14042039,"line_start":546,"line_end":546,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14042044,"byte_end":14042057,"line_start":547,"line_end":547,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14042062,"byte_end":14042071,"line_start":548,"line_end":548,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14042076,"byte_end":14042081,"line_start":549,"line_end":549,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14042086,"byte_end":14042089,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ let mut curr = a.load(SeqCst, guard);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14042094,"byte_end":14042135,"line_start":551,"line_end":551,"column_start":5,"column_end":46}},{"value":"/ loop {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14042140,"byte_end":14042150,"line_start":552,"line_end":552,"column_start":5,"column_end":15}},{"value":"/     match a.compare_exchange_weak(curr, Shared::null(), SeqCst, SeqCst, guard) {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14042155,"byte_end":14042239,"line_start":553,"line_end":553,"column_start":5,"column_end":89}},{"value":"/         Ok(_) => break,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14042244,"byte_end":14042271,"line_start":554,"line_end":554,"column_start":5,"column_end":32}},{"value":"/         Err(err) => curr = err.current,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14042276,"byte_end":14042319,"line_start":555,"line_end":555,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14042324,"byte_end":14042333,"line_start":556,"line_end":556,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14042338,"byte_end":14042343,"line_start":557,"line_end":557,"column_start":5,"column_end":10}},{"value":"/ # unsafe { drop(curr.into_owned()); } // avoid leak","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14042348,"byte_end":14042403,"line_start":558,"line_end":558,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14042408,"byte_end":14042415,"line_start":559,"line_end":559,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14045002,"byte_end":14045014,"line_start":623,"line_end":623,"column_start":12,"column_end":24},"name":"fetch_update","qualname":"<Atomic<T>>::fetch_update","value":"fn fetch_update<'g, F>(&Self, Ordering, Ordering, &'g Guard, F)\n-> Result<Shared, Shared> where F: FnMut(Shared) -> Option<Shared>","parent":null,"children":[],"decl_id":null,"docs":" Fetches the pointer, and then applies a function to it that returns a new value.\n Returns a `Result` of `Ok(previous_value)` if the function returned `Some`, else `Err(_)`.","sig":null,"attributes":[{"value":"/ Fetches the pointer, and then applies a function to it that returns a new value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14043115,"byte_end":14043199,"line_start":583,"line_end":583,"column_start":5,"column_end":89}},{"value":"/ Returns a `Result` of `Ok(previous_value)` if the function returned `Some`, else `Err(_)`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14043204,"byte_end":14043298,"line_start":584,"line_end":584,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14043303,"byte_end":14043306,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ Note that the given function may be called multiple times if the value has been changed by","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14043311,"byte_end":14043405,"line_start":586,"line_end":586,"column_start":5,"column_end":99}},{"value":"/ other threads in the meantime, as long as the function returns `Some(_)`, but the function","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14043410,"byte_end":14043504,"line_start":587,"line_end":587,"column_start":5,"column_end":99}},{"value":"/ will have been applied only once to the stored value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14043509,"byte_end":14043566,"line_start":588,"line_end":588,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14043571,"byte_end":14043574,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ `fetch_update` takes two [`Ordering`] arguments to describe the memory","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14043579,"byte_end":14043653,"line_start":590,"line_end":590,"column_start":5,"column_end":79}},{"value":"/ ordering of this operation. The first describes the required ordering for","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14043658,"byte_end":14043735,"line_start":591,"line_end":591,"column_start":5,"column_end":82}},{"value":"/ when the operation finally succeeds while the second describes the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14043740,"byte_end":14043810,"line_start":592,"line_end":592,"column_start":5,"column_end":75}},{"value":"/ required ordering for loads. These correspond to the success and failure","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14043815,"byte_end":14043891,"line_start":593,"line_end":593,"column_start":5,"column_end":81}},{"value":"/ orderings of [`Atomic::compare_exchange`] respectively.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14043896,"byte_end":14043955,"line_start":594,"line_end":594,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14043960,"byte_end":14043963,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ Using [`Acquire`] as success ordering makes the store part of this","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14043968,"byte_end":14044038,"line_start":596,"line_end":596,"column_start":5,"column_end":75}},{"value":"/ operation [`Relaxed`], and using [`Release`] makes the final successful","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14044043,"byte_end":14044118,"line_start":597,"line_end":597,"column_start":5,"column_end":80}},{"value":"/ load [`Relaxed`]. The (failed) load ordering can only be [`SeqCst`],","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14044123,"byte_end":14044195,"line_start":598,"line_end":598,"column_start":5,"column_end":77}},{"value":"/ [`Acquire`] or [`Relaxed`] and must be equivalent to or weaker than the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14044200,"byte_end":14044275,"line_start":599,"line_end":599,"column_start":5,"column_end":80}},{"value":"/ success ordering.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14044280,"byte_end":14044301,"line_start":600,"line_end":600,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14044306,"byte_end":14044309,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ [`Relaxed`]: Ordering::Relaxed","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14044314,"byte_end":14044348,"line_start":602,"line_end":602,"column_start":5,"column_end":39}},{"value":"/ [`Acquire`]: Ordering::Acquire","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14044353,"byte_end":14044387,"line_start":603,"line_end":603,"column_start":5,"column_end":39}},{"value":"/ [`Release`]: Ordering::Release","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14044392,"byte_end":14044426,"line_start":604,"line_end":604,"column_start":5,"column_end":39}},{"value":"/ [`SeqCst`]: Ordering::SeqCst","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14044431,"byte_end":14044463,"line_start":605,"line_end":605,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14044468,"byte_end":14044471,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14044476,"byte_end":14044490,"line_start":607,"line_end":607,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14044495,"byte_end":14044498,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14044503,"byte_end":14044510,"line_start":609,"line_end":609,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14044515,"byte_end":14044564,"line_start":610,"line_end":610,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14044569,"byte_end":14044613,"line_start":611,"line_end":611,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14044618,"byte_end":14044621,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14044626,"byte_end":14044656,"line_start":613,"line_end":613,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14044661,"byte_end":14044691,"line_start":614,"line_end":614,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14044696,"byte_end":14044699,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ let res1 = a.fetch_update(SeqCst, SeqCst, guard, |x| Some(x.with_tag(1)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14044704,"byte_end":14044782,"line_start":616,"line_end":616,"column_start":5,"column_end":83}},{"value":"/ assert!(res1.is_ok());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14044787,"byte_end":14044813,"line_start":617,"line_end":617,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14044818,"byte_end":14044821,"line_start":618,"line_end":618,"column_start":5,"column_end":8}},{"value":"/ let res2 = a.fetch_update(SeqCst, SeqCst, guard, |x| None);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14044826,"byte_end":14044889,"line_start":619,"line_end":619,"column_start":5,"column_end":68}},{"value":"/ assert!(res2.is_err());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14044894,"byte_end":14044921,"line_start":620,"line_end":620,"column_start":5,"column_end":32}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14044926,"byte_end":14044978,"line_start":621,"line_end":621,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14044983,"byte_end":14044990,"line_start":622,"line_end":622,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14047374,"byte_end":14047389,"line_start":685,"line_end":685,"column_start":12,"column_end":27},"name":"compare_and_set","qualname":"<Atomic<T>>::compare_and_set","value":"fn compare_and_set<'g, O, P>(&Self, Shared<, T>, P, O, &'g Guard)\n-> Result<Shared, CompareAndSetError> where O: CompareAndSetOrdering,\nP: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14045612,"byte_end":14045708,"line_start":643,"line_end":643,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14045713,"byte_end":14045807,"line_start":644,"line_end":644,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14045812,"byte_end":14045883,"line_start":645,"line_end":645,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14045888,"byte_end":14045891,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ The return value is a result indicating whether the new pointer was written. On success the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14045896,"byte_end":14045991,"line_start":647,"line_end":647,"column_start":5,"column_end":100}},{"value":"/ pointer that was written is returned. On failure the actual current value and `new` are","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14045996,"byte_end":14046087,"line_start":648,"line_end":648,"column_start":5,"column_end":96}},{"value":"/ returned.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14046092,"byte_end":14046105,"line_start":649,"line_end":649,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14046110,"byte_end":14046113,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ This method takes a [`CompareAndSetOrdering`] argument which describes the memory","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14046118,"byte_end":14046203,"line_start":651,"line_end":651,"column_start":5,"column_end":90}},{"value":"/ ordering of this operation.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14046208,"byte_end":14046239,"line_start":652,"line_end":652,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14046244,"byte_end":14046247,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ # Migrating to `compare_exchange`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14046252,"byte_end":14046289,"line_start":654,"line_end":654,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14046294,"byte_end":14046297,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ `compare_and_set` is equivalent to `compare_exchange` with the following mapping for","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14046302,"byte_end":14046390,"line_start":656,"line_end":656,"column_start":5,"column_end":93}},{"value":"/ memory orderings:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14046395,"byte_end":14046416,"line_start":657,"line_end":657,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14046421,"byte_end":14046424,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ Original | Success | Failure","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14046429,"byte_end":14046461,"line_start":659,"line_end":659,"column_start":5,"column_end":37}},{"value":"/ -------- | ------- | -------","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14046466,"byte_end":14046498,"line_start":660,"line_end":660,"column_start":5,"column_end":37}},{"value":"/ Relaxed  | Relaxed | Relaxed","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14046503,"byte_end":14046535,"line_start":661,"line_end":661,"column_start":5,"column_end":37}},{"value":"/ Acquire  | Acquire | Acquire","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14046540,"byte_end":14046572,"line_start":662,"line_end":662,"column_start":5,"column_end":37}},{"value":"/ Release  | Release | Relaxed","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14046577,"byte_end":14046609,"line_start":663,"line_end":663,"column_start":5,"column_end":37}},{"value":"/ AcqRel   | AcqRel  | Acquire","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14046614,"byte_end":14046646,"line_start":664,"line_end":664,"column_start":5,"column_end":37}},{"value":"/ SeqCst   | SeqCst  | SeqCst","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14046651,"byte_end":14046682,"line_start":665,"line_end":665,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14046687,"byte_end":14046690,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14046695,"byte_end":14046709,"line_start":667,"line_end":667,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14046714,"byte_end":14046717,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14046722,"byte_end":14046729,"line_start":669,"line_end":669,"column_start":5,"column_end":12}},{"value":"/ # #![allow(deprecated)]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14046734,"byte_end":14046761,"line_start":670,"line_end":670,"column_start":5,"column_end":32}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14046766,"byte_end":14046830,"line_start":671,"line_end":671,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14046835,"byte_end":14046879,"line_start":672,"line_end":672,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14046884,"byte_end":14046887,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14046892,"byte_end":14046922,"line_start":674,"line_end":674,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14046927,"byte_end":14046930,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14046935,"byte_end":14046965,"line_start":676,"line_end":676,"column_start":5,"column_end":35}},{"value":"/ let curr = a.load(SeqCst, guard);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14046970,"byte_end":14047007,"line_start":677,"line_end":677,"column_start":5,"column_end":42}},{"value":"/ let res1 = a.compare_and_set(curr, Shared::null(), SeqCst, guard);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14047012,"byte_end":14047082,"line_start":678,"line_end":678,"column_start":5,"column_end":75}},{"value":"/ let res2 = a.compare_and_set(curr, Owned::new(5678), SeqCst, guard);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14047087,"byte_end":14047159,"line_start":679,"line_end":679,"column_start":5,"column_end":77}},{"value":"/ # unsafe { drop(curr.into_owned()); } // avoid leak","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14047164,"byte_end":14047219,"line_start":680,"line_end":680,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14047224,"byte_end":14047231,"line_start":681,"line_end":681,"column_start":5,"column_end":12}},{"value":"allow(deprecated)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14047283,"byte_end":14047303,"line_start":683,"line_end":683,"column_start":5,"column_end":25}},{"value":"deprecated(note = \"Use `compare_exchange` instead\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14047308,"byte_end":14047362,"line_start":684,"line_end":684,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14050295,"byte_end":14050315,"line_start":764,"line_end":764,"column_start":12,"column_end":32},"name":"compare_and_set_weak","qualname":"<Atomic<T>>::compare_and_set_weak","value":"fn compare_and_set_weak<'g, O, P>(&Self, Shared<, T>, P, O, &'g Guard)\n-> Result<Shared, CompareAndSetError> where O: CompareAndSetOrdering,\nP: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14047732,"byte_end":14047828,"line_start":699,"line_end":699,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14047833,"byte_end":14047927,"line_start":700,"line_end":700,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14047932,"byte_end":14048003,"line_start":701,"line_end":701,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14048008,"byte_end":14048011,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ Unlike [`compare_and_set`], this method is allowed to spuriously fail even when comparison","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14048016,"byte_end":14048110,"line_start":703,"line_end":703,"column_start":5,"column_end":99}},{"value":"/ succeeds, which can result in more efficient code on some platforms.  The return value is a","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14048115,"byte_end":14048210,"line_start":704,"line_end":704,"column_start":5,"column_end":100}},{"value":"/ result indicating whether the new pointer was written. On success the pointer that was","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14048215,"byte_end":14048305,"line_start":705,"line_end":705,"column_start":5,"column_end":95}},{"value":"/ written is returned. On failure the actual current value and `new` are returned.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14048310,"byte_end":14048394,"line_start":706,"line_end":706,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14048399,"byte_end":14048402,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ This method takes a [`CompareAndSetOrdering`] argument which describes the memory","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14048407,"byte_end":14048492,"line_start":708,"line_end":708,"column_start":5,"column_end":90}},{"value":"/ ordering of this operation.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14048497,"byte_end":14048528,"line_start":709,"line_end":709,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14048533,"byte_end":14048536,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ [`compare_and_set`]: Atomic::compare_and_set","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14048541,"byte_end":14048589,"line_start":711,"line_end":711,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14048594,"byte_end":14048597,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ # Migrating to `compare_exchange_weak`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14048602,"byte_end":14048644,"line_start":713,"line_end":713,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14048649,"byte_end":14048652,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/ `compare_and_set_weak` is equivalent to `compare_exchange_weak` with the following mapping for","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14048657,"byte_end":14048755,"line_start":715,"line_end":715,"column_start":5,"column_end":103}},{"value":"/ memory orderings:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14048760,"byte_end":14048781,"line_start":716,"line_end":716,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14048786,"byte_end":14048789,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ Original | Success | Failure","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14048794,"byte_end":14048826,"line_start":718,"line_end":718,"column_start":5,"column_end":37}},{"value":"/ -------- | ------- | -------","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14048831,"byte_end":14048863,"line_start":719,"line_end":719,"column_start":5,"column_end":37}},{"value":"/ Relaxed  | Relaxed | Relaxed","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14048868,"byte_end":14048900,"line_start":720,"line_end":720,"column_start":5,"column_end":37}},{"value":"/ Acquire  | Acquire | Acquire","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14048905,"byte_end":14048937,"line_start":721,"line_end":721,"column_start":5,"column_end":37}},{"value":"/ Release  | Release | Relaxed","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14048942,"byte_end":14048974,"line_start":722,"line_end":722,"column_start":5,"column_end":37}},{"value":"/ AcqRel   | AcqRel  | Acquire","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14048979,"byte_end":14049011,"line_start":723,"line_end":723,"column_start":5,"column_end":37}},{"value":"/ SeqCst   | SeqCst  | SeqCst","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14049016,"byte_end":14049047,"line_start":724,"line_end":724,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14049052,"byte_end":14049055,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14049060,"byte_end":14049074,"line_start":726,"line_end":726,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14049079,"byte_end":14049082,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14049087,"byte_end":14049094,"line_start":728,"line_end":728,"column_start":5,"column_end":12}},{"value":"/ # #![allow(deprecated)]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14049099,"byte_end":14049126,"line_start":729,"line_end":729,"column_start":5,"column_end":32}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14049131,"byte_end":14049195,"line_start":730,"line_end":730,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14049200,"byte_end":14049244,"line_start":731,"line_end":731,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14049249,"byte_end":14049252,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14049257,"byte_end":14049287,"line_start":733,"line_end":733,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14049292,"byte_end":14049322,"line_start":734,"line_end":734,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14049327,"byte_end":14049330,"line_start":735,"line_end":735,"column_start":5,"column_end":8}},{"value":"/ let mut new = Owned::new(5678);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14049335,"byte_end":14049370,"line_start":736,"line_end":736,"column_start":5,"column_end":40}},{"value":"/ let mut ptr = a.load(SeqCst, guard);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14049375,"byte_end":14049415,"line_start":737,"line_end":737,"column_start":5,"column_end":45}},{"value":"/ # unsafe { drop(a.load(SeqCst, guard).into_owned()); } // avoid leak","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14049420,"byte_end":14049492,"line_start":738,"line_end":738,"column_start":5,"column_end":77}},{"value":"/ loop {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14049497,"byte_end":14049507,"line_start":739,"line_end":739,"column_start":5,"column_end":15}},{"value":"/     match a.compare_and_set_weak(ptr, new, SeqCst, guard) {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14049512,"byte_end":14049575,"line_start":740,"line_end":740,"column_start":5,"column_end":68}},{"value":"/         Ok(p) => {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14049580,"byte_end":14049602,"line_start":741,"line_end":741,"column_start":5,"column_end":27}},{"value":"/             ptr = p;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14049607,"byte_end":14049631,"line_start":742,"line_end":742,"column_start":5,"column_end":29}},{"value":"/             break;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14049636,"byte_end":14049658,"line_start":743,"line_end":743,"column_start":5,"column_end":27}},{"value":"/         }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14049663,"byte_end":14049676,"line_start":744,"line_end":744,"column_start":5,"column_end":18}},{"value":"/         Err(err) => {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14049681,"byte_end":14049706,"line_start":745,"line_end":745,"column_start":5,"column_end":30}},{"value":"/             ptr = err.current;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14049711,"byte_end":14049745,"line_start":746,"line_end":746,"column_start":5,"column_end":39}},{"value":"/             new = err.new;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14049750,"byte_end":14049780,"line_start":747,"line_end":747,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14049785,"byte_end":14049798,"line_start":748,"line_end":748,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14049803,"byte_end":14049812,"line_start":749,"line_end":749,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14049817,"byte_end":14049822,"line_start":750,"line_end":750,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14049827,"byte_end":14049830,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ let mut curr = a.load(SeqCst, guard);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14049835,"byte_end":14049876,"line_start":752,"line_end":752,"column_start":5,"column_end":46}},{"value":"/ loop {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14049881,"byte_end":14049891,"line_start":753,"line_end":753,"column_start":5,"column_end":15}},{"value":"/     match a.compare_and_set_weak(curr, Shared::null(), SeqCst, guard) {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14049896,"byte_end":14049971,"line_start":754,"line_end":754,"column_start":5,"column_end":80}},{"value":"/         Ok(_) => break,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14049976,"byte_end":14050003,"line_start":755,"line_end":755,"column_start":5,"column_end":32}},{"value":"/         Err(err) => curr = err.current,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14050008,"byte_end":14050051,"line_start":756,"line_end":756,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14050056,"byte_end":14050065,"line_start":757,"line_end":757,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14050070,"byte_end":14050075,"line_start":758,"line_end":758,"column_start":5,"column_end":10}},{"value":"/ # unsafe { drop(curr.into_owned()); } // avoid leak","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14050080,"byte_end":14050135,"line_start":759,"line_end":759,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14050140,"byte_end":14050147,"line_start":760,"line_end":760,"column_start":5,"column_end":12}},{"value":"allow(deprecated)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14050199,"byte_end":14050219,"line_start":762,"line_end":762,"column_start":5,"column_end":25}},{"value":"deprecated(note = \"Use `compare_exchange_weak` instead\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14050224,"byte_end":14050283,"line_start":763,"line_end":763,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14051394,"byte_end":14051403,"line_start":797,"line_end":797,"column_start":12,"column_end":21},"name":"fetch_and","qualname":"<Atomic<T>>::fetch_and","value":"fn fetch_and<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"and\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"and\" with the current tag.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14050663,"byte_end":14050702,"line_start":778,"line_end":778,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14050707,"byte_end":14050710,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"and\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14050715,"byte_end":14050809,"line_start":780,"line_end":780,"column_start":5,"column_end":99}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14050814,"byte_end":14050870,"line_start":781,"line_end":781,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14050875,"byte_end":14050878,"line_start":782,"line_end":782,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14050883,"byte_end":14050973,"line_start":783,"line_end":783,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14050978,"byte_end":14050992,"line_start":784,"line_end":784,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14050997,"byte_end":14051000,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14051005,"byte_end":14051019,"line_start":786,"line_end":786,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14051024,"byte_end":14051027,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14051032,"byte_end":14051039,"line_start":788,"line_end":788,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14051044,"byte_end":14051101,"line_start":789,"line_end":789,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14051106,"byte_end":14051150,"line_start":790,"line_end":790,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14051155,"byte_end":14051158,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(3));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14051163,"byte_end":14051223,"line_start":792,"line_end":792,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14051228,"byte_end":14051258,"line_start":793,"line_end":793,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_and(2, SeqCst, guard).tag(), 3);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14051263,"byte_end":14051318,"line_start":794,"line_end":794,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 2);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14051323,"byte_end":14051370,"line_start":795,"line_end":795,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14051375,"byte_end":14051382,"line_start":796,"line_end":796,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14052302,"byte_end":14052310,"line_start":820,"line_end":820,"column_start":12,"column_end":20},"name":"fetch_or","qualname":"<Atomic<T>>::fetch_or","value":"fn fetch_or<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"or\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"or\" with the current tag.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14051574,"byte_end":14051612,"line_start":801,"line_end":801,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14051617,"byte_end":14051620,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"or\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14051625,"byte_end":14051718,"line_start":803,"line_end":803,"column_start":5,"column_end":98}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14051723,"byte_end":14051779,"line_start":804,"line_end":804,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14051784,"byte_end":14051787,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14051792,"byte_end":14051882,"line_start":806,"line_end":806,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14051887,"byte_end":14051901,"line_start":807,"line_end":807,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14051906,"byte_end":14051909,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14051914,"byte_end":14051928,"line_start":809,"line_end":809,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14051933,"byte_end":14051936,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14051941,"byte_end":14051948,"line_start":811,"line_end":811,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14051953,"byte_end":14052010,"line_start":812,"line_end":812,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14052015,"byte_end":14052059,"line_start":813,"line_end":813,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14052064,"byte_end":14052067,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(1));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14052072,"byte_end":14052132,"line_start":815,"line_end":815,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14052137,"byte_end":14052167,"line_start":816,"line_end":816,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_or(2, SeqCst, guard).tag(), 1);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14052172,"byte_end":14052226,"line_start":817,"line_end":817,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 3);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14052231,"byte_end":14052278,"line_start":818,"line_end":818,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14052283,"byte_end":14052290,"line_start":819,"line_end":819,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14053210,"byte_end":14053219,"line_start":843,"line_end":843,"column_start":12,"column_end":21},"name":"fetch_xor","qualname":"<Atomic<T>>::fetch_xor","value":"fn fetch_xor<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"xor\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"xor\" with the current tag.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14052479,"byte_end":14052518,"line_start":824,"line_end":824,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14052523,"byte_end":14052526,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"xor\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14052531,"byte_end":14052625,"line_start":826,"line_end":826,"column_start":5,"column_end":99}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14052630,"byte_end":14052686,"line_start":827,"line_end":827,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14052691,"byte_end":14052694,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14052699,"byte_end":14052789,"line_start":829,"line_end":829,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14052794,"byte_end":14052808,"line_start":830,"line_end":830,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14052813,"byte_end":14052816,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14052821,"byte_end":14052835,"line_start":832,"line_end":832,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14052840,"byte_end":14052843,"line_start":833,"line_end":833,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14052848,"byte_end":14052855,"line_start":834,"line_end":834,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14052860,"byte_end":14052917,"line_start":835,"line_end":835,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14052922,"byte_end":14052966,"line_start":836,"line_end":836,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14052971,"byte_end":14052974,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(1));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14052979,"byte_end":14053039,"line_start":838,"line_end":838,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14053044,"byte_end":14053074,"line_start":839,"line_end":839,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_xor(3, SeqCst, guard).tag(), 1);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14053079,"byte_end":14053134,"line_start":840,"line_end":840,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 2);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14053139,"byte_end":14053186,"line_start":841,"line_end":841,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14053191,"byte_end":14053198,"line_start":842,"line_end":842,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14054516,"byte_end":14054526,"line_start":881,"line_end":881,"column_start":19,"column_end":29},"name":"into_owned","qualname":"<Atomic<T>>::into_owned","value":"unsafe fn into_owned(Self) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14053389,"byte_end":14053424,"line_start":847,"line_end":847,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14053429,"byte_end":14053432,"line_start":848,"line_end":848,"column_start":5,"column_end":8}},{"value":"/ This consumes the atomic and converts it into [`Owned`]. As [`Atomic`] doesn't have a","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14053437,"byte_end":14053526,"line_start":849,"line_end":849,"column_start":5,"column_end":94}},{"value":"/ destructor and doesn't drop the pointee while [`Owned`] does, this is suitable for","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14053531,"byte_end":14053617,"line_start":850,"line_end":850,"column_start":5,"column_end":91}},{"value":"/ destructors of data structures.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14053622,"byte_end":14053657,"line_start":851,"line_end":851,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14053662,"byte_end":14053665,"line_start":852,"line_end":852,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14053670,"byte_end":14053682,"line_start":853,"line_end":853,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14053687,"byte_end":14053690,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ Panics if this pointer is null, but only in debug mode.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14053695,"byte_end":14053754,"line_start":855,"line_end":855,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14053759,"byte_end":14053762,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14053767,"byte_end":14053779,"line_start":857,"line_end":857,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14053784,"byte_end":14053787,"line_start":858,"line_end":858,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14053792,"byte_end":14053879,"line_start":859,"line_end":859,"column_start":5,"column_end":92}},{"value":"/ reference to the same object.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14053884,"byte_end":14053917,"line_start":860,"line_end":860,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14053922,"byte_end":14053925,"line_start":861,"line_end":861,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14053930,"byte_end":14053944,"line_start":862,"line_end":862,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14053949,"byte_end":14053952,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14053957,"byte_end":14053968,"line_start":864,"line_end":864,"column_start":5,"column_end":16}},{"value":"/ # use std::mem;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14053973,"byte_end":14053992,"line_start":865,"line_end":865,"column_start":5,"column_end":24}},{"value":"/ # use crossbeam_epoch::Atomic;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14053997,"byte_end":14054031,"line_start":866,"line_end":866,"column_start":5,"column_end":39}},{"value":"/ struct DataStructure {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14054036,"byte_end":14054062,"line_start":867,"line_end":867,"column_start":5,"column_end":31}},{"value":"/     ptr: Atomic<usize>,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14054067,"byte_end":14054094,"line_start":868,"line_end":868,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14054099,"byte_end":14054104,"line_start":869,"line_end":869,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14054109,"byte_end":14054112,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ impl Drop for DataStructure {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14054117,"byte_end":14054150,"line_start":871,"line_end":871,"column_start":5,"column_end":38}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14054155,"byte_end":14054183,"line_start":872,"line_end":872,"column_start":5,"column_end":33}},{"value":"/         // By now the DataStructure lives only in our thread and we are sure we don't hold","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14054188,"byte_end":14054282,"line_start":873,"line_end":873,"column_start":5,"column_end":99}},{"value":"/         // any Shared or & to it ourselves.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14054287,"byte_end":14054334,"line_start":874,"line_end":874,"column_start":5,"column_end":52}},{"value":"/         unsafe {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14054339,"byte_end":14054359,"line_start":875,"line_end":875,"column_start":5,"column_end":25}},{"value":"/             drop(mem::replace(&mut self.ptr, Atomic::null()).into_owned());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14054364,"byte_end":14054443,"line_start":876,"line_end":876,"column_start":5,"column_end":84}},{"value":"/         }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14054448,"byte_end":14054461,"line_start":877,"line_end":877,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14054466,"byte_end":14054475,"line_start":878,"line_end":878,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14054480,"byte_end":14054485,"line_start":879,"line_end":879,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14054490,"byte_end":14054497,"line_start":880,"line_end":880,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14056213,"byte_end":14056227,"line_start":928,"line_end":928,"column_start":19,"column_end":33},"name":"try_into_owned","qualname":"<Atomic<T>>::try_into_owned","value":"unsafe fn try_into_owned(Self) -> Option<Owned<T>>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee if it is non-null.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee if it is non-null.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14054994,"byte_end":14055047,"line_start":895,"line_end":895,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14055052,"byte_end":14055055,"line_start":896,"line_end":896,"column_start":5,"column_end":8}},{"value":"/ This consumes the atomic and converts it into [`Owned`]. As [`Atomic`] doesn't have a","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14055060,"byte_end":14055149,"line_start":897,"line_end":897,"column_start":5,"column_end":94}},{"value":"/ destructor and doesn't drop the pointee while [`Owned`] does, this is suitable for","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14055154,"byte_end":14055240,"line_start":898,"line_end":898,"column_start":5,"column_end":91}},{"value":"/ destructors of data structures.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14055245,"byte_end":14055280,"line_start":899,"line_end":899,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14055285,"byte_end":14055288,"line_start":900,"line_end":900,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14055293,"byte_end":14055305,"line_start":901,"line_end":901,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14055310,"byte_end":14055313,"line_start":902,"line_end":902,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14055318,"byte_end":14055405,"line_start":903,"line_end":903,"column_start":5,"column_end":92}},{"value":"/ reference to the same object, or the pointer is null.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14055410,"byte_end":14055467,"line_start":904,"line_end":904,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14055472,"byte_end":14055475,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14055480,"byte_end":14055494,"line_start":906,"line_end":906,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14055499,"byte_end":14055502,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14055507,"byte_end":14055518,"line_start":908,"line_end":908,"column_start":5,"column_end":16}},{"value":"/ # use std::mem;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14055523,"byte_end":14055542,"line_start":909,"line_end":909,"column_start":5,"column_end":24}},{"value":"/ # use crossbeam_epoch::Atomic;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14055547,"byte_end":14055581,"line_start":910,"line_end":910,"column_start":5,"column_end":39}},{"value":"/ struct DataStructure {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14055586,"byte_end":14055612,"line_start":911,"line_end":911,"column_start":5,"column_end":31}},{"value":"/     ptr: Atomic<usize>,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14055617,"byte_end":14055644,"line_start":912,"line_end":912,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14055649,"byte_end":14055654,"line_start":913,"line_end":913,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14055659,"byte_end":14055662,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/ impl Drop for DataStructure {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14055667,"byte_end":14055700,"line_start":915,"line_end":915,"column_start":5,"column_end":38}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14055705,"byte_end":14055733,"line_start":916,"line_end":916,"column_start":5,"column_end":33}},{"value":"/         // By now the DataStructure lives only in our thread and we are sure we don't hold","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14055738,"byte_end":14055832,"line_start":917,"line_end":917,"column_start":5,"column_end":99}},{"value":"/         // any Shared or & to it ourselves, but it may be null, so we have to be careful.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14055837,"byte_end":14055930,"line_start":918,"line_end":918,"column_start":5,"column_end":98}},{"value":"/         let old = mem::replace(&mut self.ptr, Atomic::null());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14055935,"byte_end":14056001,"line_start":919,"line_end":919,"column_start":5,"column_end":71}},{"value":"/         unsafe {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14056006,"byte_end":14056026,"line_start":920,"line_end":920,"column_start":5,"column_end":25}},{"value":"/             if let Some(x) = old.try_into_owned() {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14056031,"byte_end":14056086,"line_start":921,"line_end":921,"column_start":5,"column_end":60}},{"value":"/                 drop(x)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14056091,"byte_end":14056118,"line_start":922,"line_end":922,"column_start":5,"column_end":32}},{"value":"/             }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14056123,"byte_end":14056140,"line_start":923,"line_end":923,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14056145,"byte_end":14056158,"line_start":924,"line_end":924,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14056163,"byte_end":14056172,"line_start":925,"line_end":925,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14056177,"byte_end":14056182,"line_start":926,"line_end":926,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14056187,"byte_end":14056194,"line_start":927,"line_end":927,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14056652,"byte_end":14056655,"line_start":943,"line_end":943,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Atomic<T> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14057005,"byte_end":14057008,"line_start":955,"line_end":955,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Atomic<T> as std::fmt::Pointer>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10127},"children":[],"decl_id":{"krate":2,"index":10128},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14057474,"byte_end":14057479,"line_start":967,"line_end":967,"column_start":8,"column_end":13},"name":"clone","qualname":"<Atomic<T> as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":" Returns a copy of the atomic value.","sig":null,"attributes":[{"value":"/ Returns a copy of the atomic value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14057296,"byte_end":14057335,"line_start":963,"line_end":963,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14057340,"byte_end":14057343,"line_start":964,"line_end":964,"column_start":5,"column_end":8}},{"value":"/ Note that a `Relaxed` load is used here. If you need synchronization, use it with other","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14057348,"byte_end":14057439,"line_start":965,"line_end":965,"column_start":5,"column_end":96}},{"value":"/ atomics or fences.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14057444,"byte_end":14057466,"line_start":966,"line_end":966,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14057652,"byte_end":14057659,"line_start":974,"line_end":974,"column_start":8,"column_end":15},"name":"default","qualname":"<Atomic<T> as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14058053,"byte_end":14058057,"line_start":990,"line_end":990,"column_start":8,"column_end":12},"name":"from","qualname":"<Atomic<T> as std::convert::From>::from","value":"fn from(Owned<T>) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":" Returns a new atomic pointer pointing to `owned`.","sig":null,"attributes":[{"value":"/ Returns a new atomic pointer pointing to `owned`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14057767,"byte_end":14057820,"line_start":980,"line_end":980,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14057825,"byte_end":14057828,"line_start":981,"line_end":981,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14057833,"byte_end":14057847,"line_start":982,"line_end":982,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14057852,"byte_end":14057855,"line_start":983,"line_end":983,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14057860,"byte_end":14057867,"line_start":984,"line_end":984,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{Atomic, Owned};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14057872,"byte_end":14057913,"line_start":985,"line_end":985,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14057918,"byte_end":14057921,"line_start":986,"line_end":986,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Owned::new(1234));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14057926,"byte_end":14057976,"line_start":987,"line_end":987,"column_start":5,"column_end":55}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14057981,"byte_end":14058033,"line_start":988,"line_end":988,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14058038,"byte_end":14058045,"line_start":989,"line_end":989,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14058228,"byte_end":14058232,"line_start":998,"line_end":998,"column_start":8,"column_end":12},"name":"from","qualname":"<Atomic<T> as std::convert::From>::from","value":"fn from(Box<T>) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14058337,"byte_end":14058341,"line_start":1004,"line_end":1004,"column_start":8,"column_end":12},"name":"from","qualname":"<Atomic<T> as std::convert::From>::from","value":"fn from(T) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14058693,"byte_end":14058697,"line_start":1019,"line_end":1019,"column_start":8,"column_end":12},"name":"from","qualname":"<Atomic<T> as std::convert::From>::from","value":"fn from(Shared) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":" Returns a new atomic pointer pointing to `ptr`.","sig":null,"attributes":[{"value":"/ Returns a new atomic pointer pointing to `ptr`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14058460,"byte_end":14058511,"line_start":1010,"line_end":1010,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14058516,"byte_end":14058519,"line_start":1011,"line_end":1011,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14058524,"byte_end":14058538,"line_start":1012,"line_end":1012,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14058543,"byte_end":14058546,"line_start":1013,"line_end":1013,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14058551,"byte_end":14058558,"line_start":1014,"line_end":1014,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{Atomic, Shared};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14058563,"byte_end":14058605,"line_start":1015,"line_end":1015,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14058610,"byte_end":14058613,"line_start":1016,"line_end":1016,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::<i32>::null());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14058618,"byte_end":14058673,"line_start":1017,"line_end":1017,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14058678,"byte_end":14058685,"line_start":1018,"line_end":1018,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14059057,"byte_end":14059061,"line_start":1035,"line_end":1035,"column_start":8,"column_end":12},"name":"from","qualname":"<Atomic<T> as std::convert::From>::from","value":"fn from(*const T) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":" Returns a new atomic pointer pointing to `raw`.","sig":null,"attributes":[{"value":"/ Returns a new atomic pointer pointing to `raw`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14058815,"byte_end":14058866,"line_start":1025,"line_end":1025,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14058871,"byte_end":14058874,"line_start":1026,"line_end":1026,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14058879,"byte_end":14058893,"line_start":1027,"line_end":1027,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14058898,"byte_end":14058901,"line_start":1028,"line_end":1028,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14058906,"byte_end":14058913,"line_start":1029,"line_end":1029,"column_start":5,"column_end":12}},{"value":"/ use std::ptr;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14058918,"byte_end":14058935,"line_start":1030,"line_end":1030,"column_start":5,"column_end":22}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14058940,"byte_end":14058972,"line_start":1031,"line_end":1031,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14058977,"byte_end":14058980,"line_start":1032,"line_end":1032,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(ptr::null::<i32>());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14058985,"byte_end":14059037,"line_start":1033,"line_end":1033,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14059042,"byte_end":14059049,"line_start":1034,"line_end":1034,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":243},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14059198,"byte_end":14059205,"line_start":1041,"line_end":1041,"column_start":11,"column_end":18},"name":"Pointer","qualname":"::atomic::Pointer","value":"Pointer<T>","parent":null,"children":[{"krate":0,"index":245},{"krate":0,"index":246}],"decl_id":null,"docs":" A trait for either `Owned` or `Shared` pointers.\n","sig":null,"attributes":[{"value":"/ A trait for either `Owned` or `Shared` pointers.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14059135,"byte_end":14059187,"line_start":1040,"line_end":1040,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14059297,"byte_end":14059307,"line_start":1043,"line_end":1043,"column_start":8,"column_end":18},"name":"into_usize","qualname":"::atomic::Pointer::into_usize","value":"fn into_usize(Self) -> usize","parent":{"krate":0,"index":243},"children":[],"decl_id":null,"docs":" Returns the machine representation of the pointer.\n","sig":null,"attributes":[{"value":"/ Returns the machine representation of the pointer.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14059235,"byte_end":14059289,"line_start":1042,"line_end":1042,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14059614,"byte_end":14059624,"line_start":1051,"line_end":1051,"column_start":15,"column_end":25},"name":"from_usize","qualname":"::atomic::Pointer::from_usize","value":"unsafe fn from_usize(usize) -> Self","parent":{"krate":0,"index":243},"children":[],"decl_id":null,"docs":" Returns a new pointer pointing to the tagged pointer `data`.","sig":null,"attributes":[{"value":"/ Returns a new pointer pointing to the tagged pointer `data`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14059329,"byte_end":14059393,"line_start":1045,"line_end":1045,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14059398,"byte_end":14059401,"line_start":1046,"line_end":1046,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14059406,"byte_end":14059418,"line_start":1047,"line_end":1047,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14059423,"byte_end":14059426,"line_start":1048,"line_end":1048,"column_start":5,"column_end":8}},{"value":"/ The given `data` should have been created by `Pointer::into_usize()`, and one `data` should","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14059431,"byte_end":14059526,"line_start":1049,"line_end":1049,"column_start":5,"column_end":100}},{"value":"/ not be converted back by `Pointer::from_usize()` multiple times.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14059531,"byte_end":14059599,"line_start":1050,"line_end":1050,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":247},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14059890,"byte_end":14059895,"line_start":1060,"line_end":1060,"column_start":12,"column_end":17},"name":"Owned","qualname":"::atomic::Owned","value":"Owned {  }","parent":null,"children":[{"krate":0,"index":249},{"krate":0,"index":250}],"decl_id":null,"docs":" An owned heap-allocated object.","sig":null,"attributes":[{"value":"/ An owned heap-allocated object.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14059650,"byte_end":14059685,"line_start":1054,"line_end":1054,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14059686,"byte_end":14059689,"line_start":1055,"line_end":1055,"column_start":1,"column_end":4}},{"value":"/ This type is very similar to `Box<T>`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14059690,"byte_end":14059732,"line_start":1056,"line_end":1056,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14059733,"byte_end":14059736,"line_start":1057,"line_end":1057,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14059737,"byte_end":14059835,"line_start":1058,"line_end":1058,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14059836,"byte_end":14059878,"line_start":1059,"line_end":1059,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14060050,"byte_end":14060060,"line_start":1067,"line_end":1067,"column_start":8,"column_end":18},"name":"into_usize","qualname":"<Owned<T> as atomic::Pointer>::into_usize","value":"fn into_usize(Self) -> usize","parent":{"krate":0,"index":243},"children":[],"decl_id":{"krate":0,"index":245},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14060033,"byte_end":14060042,"line_start":1066,"line_end":1066,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14060335,"byte_end":14060345,"line_start":1079,"line_end":1079,"column_start":15,"column_end":25},"name":"from_usize","qualname":"<Owned<T> as atomic::Pointer>::from_usize","value":"unsafe fn from_usize(usize) -> Self","parent":{"krate":0,"index":243},"children":[],"decl_id":{"krate":0,"index":246},"docs":" Returns a new pointer pointing to the tagged pointer `data`.","sig":null,"attributes":[{"value":"/ Returns a new pointer pointing to the tagged pointer `data`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14060159,"byte_end":14060223,"line_start":1073,"line_end":1073,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14060228,"byte_end":14060231,"line_start":1074,"line_end":1074,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14060236,"byte_end":14060248,"line_start":1075,"line_end":1075,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14060253,"byte_end":14060256,"line_start":1076,"line_end":1076,"column_start":5,"column_end":8}},{"value":"/ Panics if the data is zero in debug mode.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14060261,"byte_end":14060306,"line_start":1077,"line_end":1077,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14060311,"byte_end":14060320,"line_start":1078,"line_end":1078,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14061293,"byte_end":14061301,"line_start":1111,"line_end":1111,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<Owned<T>>::from_raw","value":"unsafe fn from_raw(*mut T) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new owned pointer pointing to `raw`.","sig":null,"attributes":[{"value":"/ Returns a new owned pointer pointing to `raw`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14060545,"byte_end":14060595,"line_start":1089,"line_end":1089,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14060600,"byte_end":14060603,"line_start":1090,"line_end":1090,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because improper use may lead to memory problems. Argument `raw`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14060608,"byte_end":14060700,"line_start":1091,"line_end":1091,"column_start":5,"column_end":97}},{"value":"/ must be a valid pointer. Also, a double-free may occur if the function is called twice on","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14060705,"byte_end":14060798,"line_start":1092,"line_end":1092,"column_start":5,"column_end":98}},{"value":"/ the same raw pointer.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14060803,"byte_end":14060828,"line_start":1093,"line_end":1093,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14060833,"byte_end":14060836,"line_start":1094,"line_end":1094,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14060841,"byte_end":14060853,"line_start":1095,"line_end":1095,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14060858,"byte_end":14060861,"line_start":1096,"line_end":1096,"column_start":5,"column_end":8}},{"value":"/ Panics if `raw` is not properly aligned.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14060866,"byte_end":14060910,"line_start":1097,"line_end":1097,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14060915,"byte_end":14060918,"line_start":1098,"line_end":1098,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14060923,"byte_end":14060935,"line_start":1099,"line_end":1099,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14060940,"byte_end":14060943,"line_start":1100,"line_end":1100,"column_start":5,"column_end":8}},{"value":"/ The given `raw` should have been derived from `Owned`, and one `raw` should not be converted","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14060948,"byte_end":14061044,"line_start":1101,"line_end":1101,"column_start":5,"column_end":101}},{"value":"/ back by `Owned::from_raw()` multiple times.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14061049,"byte_end":14061096,"line_start":1102,"line_end":1102,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14061101,"byte_end":14061104,"line_start":1103,"line_end":1103,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14061109,"byte_end":14061123,"line_start":1104,"line_end":1104,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14061128,"byte_end":14061131,"line_start":1105,"line_end":1105,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14061136,"byte_end":14061143,"line_start":1106,"line_end":1106,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14061148,"byte_end":14061179,"line_start":1107,"line_end":1107,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14061184,"byte_end":14061187,"line_start":1108,"line_end":1108,"column_start":5,"column_end":8}},{"value":"/ let o = unsafe { Owned::from_raw(Box::into_raw(Box::new(1234))) };","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14061192,"byte_end":14061262,"line_start":1109,"line_end":1109,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14061267,"byte_end":14061274,"line_start":1110,"line_end":1110,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14061699,"byte_end":14061707,"line_start":1128,"line_end":1128,"column_start":12,"column_end":20},"name":"into_box","qualname":"<Owned<T>>::into_box","value":"fn into_box(Self) -> Box<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the owned pointer into a `Box`.","sig":null,"attributes":[{"value":"/ Converts the owned pointer into a `Box`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14061436,"byte_end":14061480,"line_start":1117,"line_end":1117,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14061485,"byte_end":14061488,"line_start":1118,"line_end":1118,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14061493,"byte_end":14061507,"line_start":1119,"line_end":1119,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14061512,"byte_end":14061515,"line_start":1120,"line_end":1120,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14061520,"byte_end":14061527,"line_start":1121,"line_end":1121,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14061532,"byte_end":14061563,"line_start":1122,"line_end":1122,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14061568,"byte_end":14061571,"line_start":1123,"line_end":1123,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14061576,"byte_end":14061605,"line_start":1124,"line_end":1124,"column_start":5,"column_end":34}},{"value":"/ let b: Box<i32> = o.into_box();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14061610,"byte_end":14061645,"line_start":1125,"line_end":1125,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(*b, 1234);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14061650,"byte_end":14061675,"line_start":1126,"line_end":1126,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14061680,"byte_end":14061687,"line_start":1127,"line_end":1127,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14062096,"byte_end":14062099,"line_start":1143,"line_end":1143,"column_start":12,"column_end":15},"name":"new","qualname":"<Owned<T>>::new","value":"fn new(T) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new owned pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new owned pointer pointing to it.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14061866,"byte_end":14061947,"line_start":1134,"line_end":1134,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14061952,"byte_end":14061955,"line_start":1135,"line_end":1135,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14061960,"byte_end":14061974,"line_start":1136,"line_end":1136,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14061979,"byte_end":14061982,"line_start":1137,"line_end":1137,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14061987,"byte_end":14061994,"line_start":1138,"line_end":1138,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14061999,"byte_end":14062030,"line_start":1139,"line_end":1139,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14062035,"byte_end":14062038,"line_start":1140,"line_end":1140,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14062043,"byte_end":14062072,"line_start":1141,"line_end":1141,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14062077,"byte_end":14062084,"line_start":1142,"line_end":1142,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14062438,"byte_end":14062442,"line_start":1158,"line_end":1158,"column_start":12,"column_end":16},"name":"init","qualname":"<Owned<T>>::init","value":"fn init(T::Init) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new owned pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new owned pointer pointing to it.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14062200,"byte_end":14062281,"line_start":1149,"line_end":1149,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14062286,"byte_end":14062289,"line_start":1150,"line_end":1150,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14062294,"byte_end":14062308,"line_start":1151,"line_end":1151,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14062313,"byte_end":14062316,"line_start":1152,"line_end":1152,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14062321,"byte_end":14062328,"line_start":1153,"line_end":1153,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14062333,"byte_end":14062364,"line_start":1154,"line_end":1154,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14062369,"byte_end":14062372,"line_start":1155,"line_end":1155,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::<i32>::init(1234);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14062377,"byte_end":14062414,"line_start":1156,"line_end":1156,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14062419,"byte_end":14062426,"line_start":1157,"line_end":1157,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14062920,"byte_end":14062931,"line_start":1175,"line_end":1175,"column_start":12,"column_end":23},"name":"into_shared","qualname":"<Owned<T>>::into_shared","value":"fn into_shared<'g>(Self, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Converts the owned pointer into a [`Shared`].","sig":null,"attributes":[{"value":"/ Converts the owned pointer into a [`Shared`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14062534,"byte_end":14062583,"line_start":1162,"line_end":1162,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14062588,"byte_end":14062591,"line_start":1163,"line_end":1163,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14062596,"byte_end":14062610,"line_start":1164,"line_end":1164,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14062615,"byte_end":14062618,"line_start":1165,"line_end":1165,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14062623,"byte_end":14062630,"line_start":1166,"line_end":1166,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Owned};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14062635,"byte_end":14062683,"line_start":1167,"line_end":1167,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14062688,"byte_end":14062691,"line_start":1168,"line_end":1168,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14062696,"byte_end":14062725,"line_start":1169,"line_end":1169,"column_start":5,"column_end":34}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14062730,"byte_end":14062760,"line_start":1170,"line_end":1170,"column_start":5,"column_end":35}},{"value":"/ let p = o.into_shared(guard);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14062765,"byte_end":14062798,"line_start":1171,"line_end":1171,"column_start":5,"column_end":38}},{"value":"/ # unsafe { drop(p.into_owned()); } // avoid leak","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14062803,"byte_end":14062855,"line_start":1172,"line_end":1172,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14062860,"byte_end":14062867,"line_start":1173,"line_end":1173,"column_start":5,"column_end":12}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14062872,"byte_end":14062908,"line_start":1174,"line_end":1174,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14063251,"byte_end":14063254,"line_start":1188,"line_end":1188,"column_start":12,"column_end":15},"name":"tag","qualname":"<Owned<T>>::tag","value":"fn tag(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the tag stored within the pointer.","sig":null,"attributes":[{"value":"/ Returns the tag stored within the pointer.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14063043,"byte_end":14063089,"line_start":1179,"line_end":1179,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14063094,"byte_end":14063097,"line_start":1180,"line_end":1180,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14063102,"byte_end":14063116,"line_start":1181,"line_end":1181,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14063121,"byte_end":14063124,"line_start":1182,"line_end":1182,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14063129,"byte_end":14063136,"line_start":1183,"line_end":1183,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14063141,"byte_end":14063172,"line_start":1184,"line_end":1184,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14063177,"byte_end":14063180,"line_start":1185,"line_end":1185,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Owned::new(1234).tag(), 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14063185,"byte_end":14063227,"line_start":1186,"line_end":1186,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14063232,"byte_end":14063239,"line_start":1187,"line_end":1187,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14063727,"byte_end":14063735,"line_start":1206,"line_end":1206,"column_start":12,"column_end":20},"name":"with_tag","qualname":"<Owned<T>>::with_tag","value":"fn with_tag(Self, usize) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the\n unused bits of the pointer to `T`.","sig":null,"attributes":[{"value":"/ Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14063350,"byte_end":14063440,"line_start":1193,"line_end":1193,"column_start":5,"column_end":95}},{"value":"/ unused bits of the pointer to `T`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14063445,"byte_end":14063483,"line_start":1194,"line_end":1194,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14063488,"byte_end":14063491,"line_start":1195,"line_end":1195,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14063496,"byte_end":14063510,"line_start":1196,"line_end":1196,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14063515,"byte_end":14063518,"line_start":1197,"line_end":1197,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14063523,"byte_end":14063530,"line_start":1198,"line_end":1198,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14063535,"byte_end":14063566,"line_start":1199,"line_end":1199,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14063571,"byte_end":14063574,"line_start":1200,"line_end":1200,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(0u64);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14063579,"byte_end":14063608,"line_start":1201,"line_end":1201,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(o.tag(), 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14063613,"byte_end":14063640,"line_start":1202,"line_end":1202,"column_start":5,"column_end":32}},{"value":"/ let o = o.with_tag(2);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14063645,"byte_end":14063671,"line_start":1203,"line_end":1203,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(o.tag(), 2);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14063676,"byte_end":14063703,"line_start":1204,"line_end":1204,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14063708,"byte_end":14063715,"line_start":1205,"line_end":1205,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14063935,"byte_end":14063939,"line_start":1213,"line_end":1213,"column_start":8,"column_end":12},"name":"drop","qualname":"<Owned<T> as std::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":2,"index":3422},"children":[],"decl_id":{"krate":2,"index":3423},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14064130,"byte_end":14064133,"line_start":1222,"line_end":1222,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Owned<T> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14064413,"byte_end":14064418,"line_start":1233,"line_end":1233,"column_start":8,"column_end":13},"name":"clone","qualname":"<Owned<T> as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14064581,"byte_end":14064586,"line_start":1241,"line_end":1241,"column_start":8,"column_end":13},"name":"deref","qualname":"<Owned<T> as std::ops::Deref>::deref","value":"fn deref(&Self) -> &T","parent":{"krate":2,"index":3398},"children":[],"decl_id":{"krate":2,"index":3400},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14064757,"byte_end":14064766,"line_start":1248,"line_end":1248,"column_start":8,"column_end":17},"name":"deref_mut","qualname":"<Owned<T> as std::ops::DerefMut>::deref_mut","value":"fn deref_mut(&mut Self) -> &mut T","parent":{"krate":2,"index":3411},"children":[],"decl_id":{"krate":2,"index":3412},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14064928,"byte_end":14064932,"line_start":1255,"line_end":1255,"column_start":8,"column_end":12},"name":"from","qualname":"<Owned<T> as std::convert::From>::from","value":"fn from(T) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14065354,"byte_end":14065358,"line_start":1274,"line_end":1274,"column_start":8,"column_end":12},"name":"from","qualname":"<Owned<T> as std::convert::From>::from","value":"fn from(Box<T>) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":" Returns a new owned pointer pointing to `b`.","sig":null,"attributes":[{"value":"/ Returns a new owned pointer pointing to `b`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14065020,"byte_end":14065068,"line_start":1261,"line_end":1261,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14065073,"byte_end":14065076,"line_start":1262,"line_end":1262,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14065081,"byte_end":14065093,"line_start":1263,"line_end":1263,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14065098,"byte_end":14065101,"line_start":1264,"line_end":1264,"column_start":5,"column_end":8}},{"value":"/ Panics if the pointer (the `Box`) is not properly aligned.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14065106,"byte_end":14065168,"line_start":1265,"line_end":1265,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14065173,"byte_end":14065176,"line_start":1266,"line_end":1266,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14065181,"byte_end":14065195,"line_start":1267,"line_end":1267,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14065200,"byte_end":14065203,"line_start":1268,"line_end":1268,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14065208,"byte_end":14065215,"line_start":1269,"line_end":1269,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14065220,"byte_end":14065251,"line_start":1270,"line_end":1270,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14065256,"byte_end":14065259,"line_start":1271,"line_end":1271,"column_start":5,"column_end":8}},{"value":"/ let o = unsafe { Owned::from_raw(Box::into_raw(Box::new(1234))) };","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14065264,"byte_end":14065334,"line_start":1272,"line_end":1272,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14065339,"byte_end":14065346,"line_start":1273,"line_end":1273,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14065501,"byte_end":14065507,"line_start":1280,"line_end":1280,"column_start":8,"column_end":14},"name":"borrow","qualname":"<Owned<T> as std::borrow::Borrow>::borrow","value":"fn borrow(&Self) -> &T","parent":{"krate":2,"index":2776},"children":[],"decl_id":{"krate":2,"index":2778},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14065616,"byte_end":14065626,"line_start":1286,"line_end":1286,"column_start":8,"column_end":18},"name":"borrow_mut","qualname":"<Owned<T> as std::borrow::BorrowMut>::borrow_mut","value":"fn borrow_mut(&mut Self) -> &mut T","parent":{"krate":2,"index":2779},"children":[],"decl_id":{"krate":2,"index":2781},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14065743,"byte_end":14065749,"line_start":1292,"line_end":1292,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<Owned<T> as std::convert::AsRef>::as_ref","value":"fn as_ref(&Self) -> &T","parent":{"krate":2,"index":3076},"children":[],"decl_id":{"krate":2,"index":3078},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14065854,"byte_end":14065860,"line_start":1298,"line_end":1298,"column_start":8,"column_end":14},"name":"as_mut","qualname":"<Owned<T> as std::convert::AsMut>::as_mut","value":"fn as_mut(&mut Self) -> &mut T","parent":{"krate":2,"index":3079},"children":[],"decl_id":{"krate":2,"index":3081},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":301},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14066197,"byte_end":14066203,"line_start":1309,"line_end":1309,"column_start":12,"column_end":18},"name":"Shared","qualname":"::atomic::Shared","value":"Shared {  }","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":305}],"decl_id":null,"docs":" A pointer to an object protected by the epoch GC.","sig":null,"attributes":[{"value":"/ A pointer to an object protected by the epoch GC.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14065918,"byte_end":14065971,"line_start":1303,"line_end":1303,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14065972,"byte_end":14065975,"line_start":1304,"line_end":1304,"column_start":1,"column_end":4}},{"value":"/ The pointer is valid for use only during the lifetime `'g`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14065976,"byte_end":14066039,"line_start":1305,"line_end":1305,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14066040,"byte_end":14066043,"line_start":1306,"line_end":1306,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14066044,"byte_end":14066142,"line_start":1307,"line_end":1307,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14066143,"byte_end":14066185,"line_start":1308,"line_end":1308,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14066365,"byte_end":14066370,"line_start":1315,"line_end":1315,"column_start":8,"column_end":13},"name":"clone","qualname":"<Shared as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14066620,"byte_end":14066630,"line_start":1327,"line_end":1327,"column_start":8,"column_end":18},"name":"into_usize","qualname":"<Shared as atomic::Pointer>::into_usize","value":"fn into_usize(Self) -> usize","parent":{"krate":0,"index":243},"children":[],"decl_id":{"krate":0,"index":245},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14066603,"byte_end":14066612,"line_start":1326,"line_end":1326,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14066701,"byte_end":14066711,"line_start":1332,"line_end":1332,"column_start":15,"column_end":25},"name":"from_usize","qualname":"<Shared as atomic::Pointer>::from_usize","value":"unsafe fn from_usize(usize) -> Self","parent":{"krate":0,"index":243},"children":[],"decl_id":{"krate":0,"index":246},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14066677,"byte_end":14066686,"line_start":1331,"line_end":1331,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14067382,"byte_end":14067388,"line_start":1358,"line_end":1358,"column_start":12,"column_end":18},"name":"as_raw","qualname":"<Shared>::as_raw","value":"fn as_raw(&Self) -> *const T","parent":null,"children":[],"decl_id":null,"docs":" Converts the pointer to a raw pointer (without the tag).","sig":null,"attributes":[{"value":"/ Converts the pointer to a raw pointer (without the tag).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14066855,"byte_end":14066915,"line_start":1341,"line_end":1341,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14066920,"byte_end":14066923,"line_start":1342,"line_end":1342,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14066928,"byte_end":14066942,"line_start":1343,"line_end":1343,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14066947,"byte_end":14066950,"line_start":1344,"line_end":1344,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14066955,"byte_end":14066962,"line_start":1345,"line_end":1345,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14066967,"byte_end":14067023,"line_start":1346,"line_end":1346,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14067028,"byte_end":14067072,"line_start":1347,"line_end":1347,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14067077,"byte_end":14067080,"line_start":1348,"line_end":1348,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14067085,"byte_end":14067114,"line_start":1349,"line_end":1349,"column_start":5,"column_end":34}},{"value":"/ let raw = &*o as *const _;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14067119,"byte_end":14067149,"line_start":1350,"line_end":1350,"column_start":5,"column_end":35}},{"value":"/ let a = Atomic::from(o);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14067154,"byte_end":14067182,"line_start":1351,"line_end":1351,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14067187,"byte_end":14067190,"line_start":1352,"line_end":1352,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14067195,"byte_end":14067225,"line_start":1353,"line_end":1353,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14067230,"byte_end":14067264,"line_start":1354,"line_end":1354,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(p.as_raw(), raw);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14067269,"byte_end":14067301,"line_start":1355,"line_end":1355,"column_start":5,"column_end":37}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14067306,"byte_end":14067358,"line_start":1356,"line_end":1356,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14067363,"byte_end":14067370,"line_start":1357,"line_end":1357,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14067765,"byte_end":14067769,"line_start":1375,"line_end":1375,"column_start":12,"column_end":16},"name":"null","qualname":"<Shared>::null","value":"fn null() -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Returns a new null pointer.","sig":null,"attributes":[{"value":"/ Returns a new null pointer.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14067549,"byte_end":14067580,"line_start":1365,"line_end":1365,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14067585,"byte_end":14067588,"line_start":1366,"line_end":1366,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14067593,"byte_end":14067607,"line_start":1367,"line_end":1367,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14067612,"byte_end":14067615,"line_start":1368,"line_end":1368,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14067620,"byte_end":14067627,"line_start":1369,"line_end":1369,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Shared;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14067632,"byte_end":14067664,"line_start":1370,"line_end":1370,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14067669,"byte_end":14067672,"line_start":1371,"line_end":1371,"column_start":5,"column_end":8}},{"value":"/ let p = Shared::<i32>::null();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14067677,"byte_end":14067711,"line_start":1372,"line_end":1372,"column_start":5,"column_end":39}},{"value":"/ assert!(p.is_null());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14067716,"byte_end":14067741,"line_start":1373,"line_end":1373,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14067746,"byte_end":14067753,"line_start":1374,"line_end":1374,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14068383,"byte_end":14068390,"line_start":1397,"line_end":1397,"column_start":12,"column_end":19},"name":"is_null","qualname":"<Shared>::is_null","value":"fn is_null(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the pointer is null.","sig":null,"attributes":[{"value":"/ Returns `true` if the pointer is null.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14067884,"byte_end":14067926,"line_start":1382,"line_end":1382,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14067931,"byte_end":14067934,"line_start":1383,"line_end":1383,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14067939,"byte_end":14067953,"line_start":1384,"line_end":1384,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14067958,"byte_end":14067961,"line_start":1385,"line_end":1385,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14067966,"byte_end":14067973,"line_start":1386,"line_end":1386,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14067978,"byte_end":14068034,"line_start":1387,"line_end":1387,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14068039,"byte_end":14068083,"line_start":1388,"line_end":1388,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14068088,"byte_end":14068091,"line_start":1389,"line_end":1389,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::null();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14068096,"byte_end":14068123,"line_start":1390,"line_end":1390,"column_start":5,"column_end":32}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14068128,"byte_end":14068158,"line_start":1391,"line_end":1391,"column_start":5,"column_end":35}},{"value":"/ assert!(a.load(SeqCst, guard).is_null());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14068163,"byte_end":14068208,"line_start":1392,"line_end":1392,"column_start":5,"column_end":50}},{"value":"/ a.store(Owned::new(1234), SeqCst);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14068213,"byte_end":14068251,"line_start":1393,"line_end":1393,"column_start":5,"column_end":43}},{"value":"/ assert!(!a.load(SeqCst, guard).is_null());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14068256,"byte_end":14068302,"line_start":1394,"line_end":1394,"column_start":5,"column_end":51}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14068307,"byte_end":14068359,"line_start":1395,"line_end":1395,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14068364,"byte_end":14068371,"line_start":1396,"line_end":1396,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14069727,"byte_end":14069732,"line_start":1434,"line_end":1434,"column_start":19,"column_end":24},"name":"deref","qualname":"<Shared>::deref","value":"unsafe fn deref(&Self) -> &'g T","parent":null,"children":[],"decl_id":null,"docs":" Dereferences the pointer.","sig":null,"attributes":[{"value":"/ Dereferences the pointer.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14068490,"byte_end":14068519,"line_start":1402,"line_end":1402,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14068524,"byte_end":14068527,"line_start":1403,"line_end":1403,"column_start":5,"column_end":8}},{"value":"/ Returns a reference to the pointee that is valid during the lifetime `'g`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14068532,"byte_end":14068610,"line_start":1404,"line_end":1404,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14068615,"byte_end":14068618,"line_start":1405,"line_end":1405,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14068623,"byte_end":14068635,"line_start":1406,"line_end":1406,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14068640,"byte_end":14068643,"line_start":1407,"line_end":1407,"column_start":5,"column_end":8}},{"value":"/ Dereferencing a pointer is unsafe because it could be pointing to invalid memory.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14068648,"byte_end":14068733,"line_start":1408,"line_end":1408,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14068738,"byte_end":14068741,"line_start":1409,"line_end":1409,"column_start":5,"column_end":8}},{"value":"/ Another concern is the possibility of data races due to lack of proper synchronization.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14068746,"byte_end":14068837,"line_start":1410,"line_end":1410,"column_start":5,"column_end":96}},{"value":"/ For example, consider the following scenario:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14068842,"byte_end":14068891,"line_start":1411,"line_end":1411,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14068896,"byte_end":14068899,"line_start":1412,"line_end":1412,"column_start":5,"column_end":8}},{"value":"/ 1. A thread creates a new object: `a.store(Owned::new(10), Relaxed)`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14068904,"byte_end":14068976,"line_start":1413,"line_end":1413,"column_start":5,"column_end":77}},{"value":"/ 2. Another thread reads it: `*a.load(Relaxed, guard).as_ref().unwrap()`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14068981,"byte_end":14069056,"line_start":1414,"line_end":1414,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14069061,"byte_end":14069064,"line_start":1415,"line_end":1415,"column_start":5,"column_end":8}},{"value":"/ The problem is that relaxed orderings don't synchronize initialization of the object with","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14069069,"byte_end":14069162,"line_start":1416,"line_end":1416,"column_start":5,"column_end":98}},{"value":"/ the read from the second thread. This is a data race. A possible solution would be to use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14069167,"byte_end":14069260,"line_start":1417,"line_end":1417,"column_start":5,"column_end":98}},{"value":"/ `Release` and `Acquire` orderings.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14069265,"byte_end":14069303,"line_start":1418,"line_end":1418,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14069308,"byte_end":14069311,"line_start":1419,"line_end":1419,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14069316,"byte_end":14069330,"line_start":1420,"line_end":1420,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14069335,"byte_end":14069338,"line_start":1421,"line_end":1421,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14069343,"byte_end":14069350,"line_start":1422,"line_end":1422,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14069355,"byte_end":14069404,"line_start":1423,"line_end":1423,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14069409,"byte_end":14069453,"line_start":1424,"line_end":1424,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14069458,"byte_end":14069461,"line_start":1425,"line_end":1425,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14069466,"byte_end":14069496,"line_start":1426,"line_end":1426,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14069501,"byte_end":14069531,"line_start":1427,"line_end":1427,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14069536,"byte_end":14069570,"line_start":1428,"line_end":1428,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14069575,"byte_end":14069587,"line_start":1429,"line_end":1429,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.deref(), &1234);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14069592,"byte_end":14069629,"line_start":1430,"line_end":1430,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14069634,"byte_end":14069639,"line_start":1431,"line_end":1431,"column_start":5,"column_end":10}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14069644,"byte_end":14069696,"line_start":1432,"line_end":1432,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14069701,"byte_end":14069708,"line_start":1433,"line_end":1433,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14071055,"byte_end":14071064,"line_start":1476,"line_end":1476,"column_start":19,"column_end":28},"name":"deref_mut","qualname":"<Shared>::deref_mut","value":"unsafe fn deref_mut(&mut Self) -> &'g mut T","parent":null,"children":[],"decl_id":null,"docs":" Dereferences the pointer.","sig":null,"attributes":[{"value":"/ Dereferences the pointer.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14069838,"byte_end":14069867,"line_start":1439,"line_end":1439,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14069872,"byte_end":14069875,"line_start":1440,"line_end":1440,"column_start":5,"column_end":8}},{"value":"/ Returns a mutable reference to the pointee that is valid during the lifetime `'g`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14069880,"byte_end":14069966,"line_start":1441,"line_end":1441,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14069971,"byte_end":14069974,"line_start":1442,"line_end":1442,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14069979,"byte_end":14069991,"line_start":1443,"line_end":1443,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14069996,"byte_end":14069999,"line_start":1444,"line_end":1444,"column_start":5,"column_end":8}},{"value":"/ * There is no guarantee that there are no more threads attempting to read/write from/to the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14070004,"byte_end":14070099,"line_start":1445,"line_end":1445,"column_start":5,"column_end":100}},{"value":"/   actual object at the same time.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14070104,"byte_end":14070141,"line_start":1446,"line_end":1446,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14070146,"byte_end":14070149,"line_start":1447,"line_end":1447,"column_start":5,"column_end":8}},{"value":"/   The user must know that there are no concurrent accesses towards the object itself.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14070154,"byte_end":14070243,"line_start":1448,"line_end":1448,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14070248,"byte_end":14070251,"line_start":1449,"line_end":1449,"column_start":5,"column_end":8}},{"value":"/ * Other than the above, all safety concerns of `deref()` applies here.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14070256,"byte_end":14070330,"line_start":1450,"line_end":1450,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14070335,"byte_end":14070338,"line_start":1451,"line_end":1451,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14070343,"byte_end":14070357,"line_start":1452,"line_end":1452,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14070362,"byte_end":14070365,"line_start":1453,"line_end":1453,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14070370,"byte_end":14070377,"line_start":1454,"line_end":1454,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14070382,"byte_end":14070431,"line_start":1455,"line_end":1455,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14070436,"byte_end":14070480,"line_start":1456,"line_end":1456,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14070485,"byte_end":14070488,"line_start":1457,"line_end":1457,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(vec![1, 2, 3, 4]);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14070493,"byte_end":14070535,"line_start":1458,"line_end":1458,"column_start":5,"column_end":47}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14070540,"byte_end":14070570,"line_start":1459,"line_end":1459,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14070575,"byte_end":14070578,"line_start":1460,"line_end":1460,"column_start":5,"column_end":8}},{"value":"/ let mut p = a.load(SeqCst, guard);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14070583,"byte_end":14070621,"line_start":1461,"line_end":1461,"column_start":5,"column_end":43}},{"value":"/ unsafe {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14070626,"byte_end":14070638,"line_start":1462,"line_end":1462,"column_start":5,"column_end":17}},{"value":"/     assert!(!p.is_null());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14070643,"byte_end":14070673,"line_start":1463,"line_end":1463,"column_start":5,"column_end":35}},{"value":"/     let b = p.deref_mut();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14070678,"byte_end":14070708,"line_start":1464,"line_end":1464,"column_start":5,"column_end":35}},{"value":"/     assert_eq!(b, &vec![1, 2, 3, 4]);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14070713,"byte_end":14070754,"line_start":1465,"line_end":1465,"column_start":5,"column_end":46}},{"value":"/     b.push(5);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14070759,"byte_end":14070777,"line_start":1466,"line_end":1466,"column_start":5,"column_end":23}},{"value":"/     assert_eq!(b, &vec![1, 2, 3, 4, 5]);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14070782,"byte_end":14070826,"line_start":1467,"line_end":1467,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14070831,"byte_end":14070836,"line_start":1468,"line_end":1468,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14070841,"byte_end":14070844,"line_start":1469,"line_end":1469,"column_start":5,"column_end":8}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14070849,"byte_end":14070883,"line_start":1470,"line_end":1470,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14070888,"byte_end":14070900,"line_start":1471,"line_end":1471,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.deref(), &vec![1, 2, 3, 4, 5]);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14070905,"byte_end":14070957,"line_start":1472,"line_end":1472,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14070962,"byte_end":14070967,"line_start":1473,"line_end":1473,"column_start":5,"column_end":10}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14070972,"byte_end":14071024,"line_start":1474,"line_end":1474,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14071029,"byte_end":14071036,"line_start":1475,"line_end":1475,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14072454,"byte_end":14072460,"line_start":1513,"line_end":1513,"column_start":19,"column_end":25},"name":"as_ref","qualname":"<Shared>::as_ref","value":"unsafe fn as_ref(&Self) -> Option<&'g T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the pointer to a reference.","sig":null,"attributes":[{"value":"/ Converts the pointer to a reference.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14071182,"byte_end":14071222,"line_start":1481,"line_end":1481,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14071227,"byte_end":14071230,"line_start":1482,"line_end":1482,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the pointer is null, or else a reference to the object wrapped in `Some`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14071235,"byte_end":14071330,"line_start":1483,"line_end":1483,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14071335,"byte_end":14071338,"line_start":1484,"line_end":1484,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14071343,"byte_end":14071355,"line_start":1485,"line_end":1485,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14071360,"byte_end":14071363,"line_start":1486,"line_end":1486,"column_start":5,"column_end":8}},{"value":"/ Dereferencing a pointer is unsafe because it could be pointing to invalid memory.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14071368,"byte_end":14071453,"line_start":1487,"line_end":1487,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14071458,"byte_end":14071461,"line_start":1488,"line_end":1488,"column_start":5,"column_end":8}},{"value":"/ Another concern is the possibility of data races due to lack of proper synchronization.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14071466,"byte_end":14071557,"line_start":1489,"line_end":1489,"column_start":5,"column_end":96}},{"value":"/ For example, consider the following scenario:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14071562,"byte_end":14071611,"line_start":1490,"line_end":1490,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14071616,"byte_end":14071619,"line_start":1491,"line_end":1491,"column_start":5,"column_end":8}},{"value":"/ 1. A thread creates a new object: `a.store(Owned::new(10), Relaxed)`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14071624,"byte_end":14071696,"line_start":1492,"line_end":1492,"column_start":5,"column_end":77}},{"value":"/ 2. Another thread reads it: `*a.load(Relaxed, guard).as_ref().unwrap()`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14071701,"byte_end":14071776,"line_start":1493,"line_end":1493,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14071781,"byte_end":14071784,"line_start":1494,"line_end":1494,"column_start":5,"column_end":8}},{"value":"/ The problem is that relaxed orderings don't synchronize initialization of the object with","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14071789,"byte_end":14071882,"line_start":1495,"line_end":1495,"column_start":5,"column_end":98}},{"value":"/ the read from the second thread. This is a data race. A possible solution would be to use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14071887,"byte_end":14071980,"line_start":1496,"line_end":1496,"column_start":5,"column_end":98}},{"value":"/ `Release` and `Acquire` orderings.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14071985,"byte_end":14072023,"line_start":1497,"line_end":1497,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14072028,"byte_end":14072031,"line_start":1498,"line_end":1498,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14072036,"byte_end":14072050,"line_start":1499,"line_end":1499,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14072055,"byte_end":14072058,"line_start":1500,"line_end":1500,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14072063,"byte_end":14072070,"line_start":1501,"line_end":1501,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14072075,"byte_end":14072124,"line_start":1502,"line_end":1502,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14072129,"byte_end":14072173,"line_start":1503,"line_end":1503,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14072178,"byte_end":14072181,"line_start":1504,"line_end":1504,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14072186,"byte_end":14072216,"line_start":1505,"line_end":1505,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14072221,"byte_end":14072251,"line_start":1506,"line_end":1506,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14072256,"byte_end":14072290,"line_start":1507,"line_end":1507,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14072295,"byte_end":14072307,"line_start":1508,"line_end":1508,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.as_ref(), Some(&1234));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14072312,"byte_end":14072356,"line_start":1509,"line_end":1509,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14072361,"byte_end":14072366,"line_start":1510,"line_end":1510,"column_start":5,"column_end":10}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14072371,"byte_end":14072423,"line_start":1511,"line_end":1511,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14072428,"byte_end":14072435,"line_start":1512,"line_end":1512,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14073320,"byte_end":14073330,"line_start":1546,"line_end":1546,"column_start":19,"column_end":29},"name":"into_owned","qualname":"<Shared>::into_owned","value":"unsafe fn into_owned(Self) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14072650,"byte_end":14072685,"line_start":1522,"line_end":1522,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14072690,"byte_end":14072693,"line_start":1523,"line_end":1523,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14072698,"byte_end":14072710,"line_start":1524,"line_end":1524,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14072715,"byte_end":14072718,"line_start":1525,"line_end":1525,"column_start":5,"column_end":8}},{"value":"/ Panics if this pointer is null, but only in debug mode.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14072723,"byte_end":14072782,"line_start":1526,"line_end":1526,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14072787,"byte_end":14072790,"line_start":1527,"line_end":1527,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14072795,"byte_end":14072807,"line_start":1528,"line_end":1528,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14072812,"byte_end":14072815,"line_start":1529,"line_end":1529,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14072820,"byte_end":14072907,"line_start":1530,"line_end":1530,"column_start":5,"column_end":92}},{"value":"/ reference to the same object.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14072912,"byte_end":14072945,"line_start":1531,"line_end":1531,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14072950,"byte_end":14072953,"line_start":1532,"line_end":1532,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14072958,"byte_end":14072972,"line_start":1533,"line_end":1533,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14072977,"byte_end":14072980,"line_start":1534,"line_end":1534,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14072985,"byte_end":14072992,"line_start":1535,"line_end":1535,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14072997,"byte_end":14073046,"line_start":1536,"line_end":1536,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14073051,"byte_end":14073095,"line_start":1537,"line_end":1537,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14073100,"byte_end":14073103,"line_start":1538,"line_end":1538,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14073108,"byte_end":14073138,"line_start":1539,"line_end":1539,"column_start":5,"column_end":35}},{"value":"/ unsafe {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14073143,"byte_end":14073155,"line_start":1540,"line_end":1540,"column_start":5,"column_end":17}},{"value":"/     let guard = &epoch::unprotected();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14073160,"byte_end":14073202,"line_start":1541,"line_end":1541,"column_start":5,"column_end":47}},{"value":"/     let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14073207,"byte_end":14073245,"line_start":1542,"line_end":1542,"column_start":5,"column_end":43}},{"value":"/     drop(p.into_owned());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14073250,"byte_end":14073279,"line_start":1543,"line_end":1543,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14073284,"byte_end":14073289,"line_start":1544,"line_end":1544,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14073294,"byte_end":14073301,"line_start":1545,"line_end":1545,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14074155,"byte_end":14074169,"line_start":1573,"line_end":1573,"column_start":19,"column_end":33},"name":"try_into_owned","qualname":"<Shared>::try_into_owned","value":"unsafe fn try_into_owned(Self) -> Option<Owned<T>>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee if it is not null.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee if it is not null.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14073482,"byte_end":14073535,"line_start":1551,"line_end":1551,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14073540,"byte_end":14073543,"line_start":1552,"line_end":1552,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14073548,"byte_end":14073560,"line_start":1553,"line_end":1553,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14073565,"byte_end":14073568,"line_start":1554,"line_end":1554,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14073573,"byte_end":14073660,"line_start":1555,"line_end":1555,"column_start":5,"column_end":92}},{"value":"/ reference to the same object, or if the pointer is null.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14073665,"byte_end":14073725,"line_start":1556,"line_end":1556,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14073730,"byte_end":14073733,"line_start":1557,"line_end":1557,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14073738,"byte_end":14073752,"line_start":1558,"line_end":1558,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14073757,"byte_end":14073760,"line_start":1559,"line_end":1559,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14073765,"byte_end":14073772,"line_start":1560,"line_end":1560,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14073777,"byte_end":14073826,"line_start":1561,"line_end":1561,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14073831,"byte_end":14073875,"line_start":1562,"line_end":1562,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14073880,"byte_end":14073883,"line_start":1563,"line_end":1563,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14073888,"byte_end":14073918,"line_start":1564,"line_end":1564,"column_start":5,"column_end":35}},{"value":"/ unsafe {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14073923,"byte_end":14073935,"line_start":1565,"line_end":1565,"column_start":5,"column_end":17}},{"value":"/     let guard = &epoch::unprotected();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14073940,"byte_end":14073982,"line_start":1566,"line_end":1566,"column_start":5,"column_end":47}},{"value":"/     let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14073987,"byte_end":14074025,"line_start":1567,"line_end":1567,"column_start":5,"column_end":43}},{"value":"/     if let Some(x) = p.try_into_owned() {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14074030,"byte_end":14074075,"line_start":1568,"line_end":1568,"column_start":5,"column_end":50}},{"value":"/         drop(x);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14074080,"byte_end":14074100,"line_start":1569,"line_end":1569,"column_start":5,"column_end":25}},{"value":"/     }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14074105,"byte_end":14074114,"line_start":1570,"line_end":1570,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14074119,"byte_end":14074124,"line_start":1571,"line_end":1571,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14074129,"byte_end":14074136,"line_start":1572,"line_end":1572,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":329},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14074793,"byte_end":14074796,"line_start":1595,"line_end":1595,"column_start":12,"column_end":15},"name":"tag","qualname":"<Shared>::tag","value":"fn tag(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the tag stored within the pointer.","sig":null,"attributes":[{"value":"/ Returns the tag stored within the pointer.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14074328,"byte_end":14074374,"line_start":1581,"line_end":1581,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14074379,"byte_end":14074382,"line_start":1582,"line_end":1582,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14074387,"byte_end":14074401,"line_start":1583,"line_end":1583,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14074406,"byte_end":14074409,"line_start":1584,"line_end":1584,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14074414,"byte_end":14074421,"line_start":1585,"line_end":1585,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14074426,"byte_end":14074482,"line_start":1586,"line_end":1586,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14074487,"byte_end":14074531,"line_start":1587,"line_end":1587,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14074536,"byte_end":14074539,"line_start":1588,"line_end":1588,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<u64>::from(Owned::new(0u64).with_tag(2));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14074544,"byte_end":14074606,"line_start":1589,"line_end":1589,"column_start":5,"column_end":67}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14074611,"byte_end":14074641,"line_start":1590,"line_end":1590,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14074646,"byte_end":14074680,"line_start":1591,"line_end":1591,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(p.tag(), 2);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14074685,"byte_end":14074712,"line_start":1592,"line_end":1592,"column_start":5,"column_end":32}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14074717,"byte_end":14074769,"line_start":1593,"line_end":1593,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14074774,"byte_end":14074781,"line_start":1594,"line_end":1594,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14075527,"byte_end":14075535,"line_start":1619,"line_end":1619,"column_start":12,"column_end":20},"name":"with_tag","qualname":"<Shared>::with_tag","value":"fn with_tag(&Self, usize) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the\n unused bits of the pointer to `T`.","sig":null,"attributes":[{"value":"/ Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14074892,"byte_end":14074982,"line_start":1600,"line_end":1600,"column_start":5,"column_end":95}},{"value":"/ unused bits of the pointer to `T`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14074987,"byte_end":14075025,"line_start":1601,"line_end":1601,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14075030,"byte_end":14075033,"line_start":1602,"line_end":1602,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14075038,"byte_end":14075052,"line_start":1603,"line_end":1603,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14075057,"byte_end":14075060,"line_start":1604,"line_end":1604,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14075065,"byte_end":14075072,"line_start":1605,"line_end":1605,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14075077,"byte_end":14075126,"line_start":1606,"line_end":1606,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14075131,"byte_end":14075175,"line_start":1607,"line_end":1607,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14075180,"byte_end":14075183,"line_start":1608,"line_end":1608,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(0u64);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14075188,"byte_end":14075218,"line_start":1609,"line_end":1609,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14075223,"byte_end":14075253,"line_start":1610,"line_end":1610,"column_start":5,"column_end":35}},{"value":"/ let p1 = a.load(SeqCst, guard);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14075258,"byte_end":14075293,"line_start":1611,"line_end":1611,"column_start":5,"column_end":40}},{"value":"/ let p2 = p1.with_tag(2);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14075298,"byte_end":14075326,"line_start":1612,"line_end":1612,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14075331,"byte_end":14075334,"line_start":1613,"line_end":1613,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(p1.tag(), 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14075339,"byte_end":14075367,"line_start":1614,"line_end":1614,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(p2.tag(), 2);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14075372,"byte_end":14075400,"line_start":1615,"line_end":1615,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(p1.as_raw(), p2.as_raw());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14075405,"byte_end":14075446,"line_start":1616,"line_end":1616,"column_start":5,"column_end":46}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14075451,"byte_end":14075503,"line_start":1617,"line_end":1617,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14075508,"byte_end":14075515,"line_start":1618,"line_end":1618,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14076099,"byte_end":14076103,"line_start":1640,"line_end":1640,"column_start":8,"column_end":12},"name":"from","qualname":"<Shared as std::convert::From>::from","value":"fn from(*const T) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":" Returns a new pointer pointing to `raw`.","sig":null,"attributes":[{"value":"/ Returns a new pointer pointing to `raw`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14075700,"byte_end":14075744,"line_start":1625,"line_end":1625,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14075749,"byte_end":14075752,"line_start":1626,"line_end":1626,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14075757,"byte_end":14075769,"line_start":1627,"line_end":1627,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14075774,"byte_end":14075777,"line_start":1628,"line_end":1628,"column_start":5,"column_end":8}},{"value":"/ Panics if `raw` is not properly aligned.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14075782,"byte_end":14075826,"line_start":1629,"line_end":1629,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14075831,"byte_end":14075834,"line_start":1630,"line_end":1630,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14075839,"byte_end":14075853,"line_start":1631,"line_end":1631,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14075858,"byte_end":14075861,"line_start":1632,"line_end":1632,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14075866,"byte_end":14075873,"line_start":1633,"line_end":1633,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Shared;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14075878,"byte_end":14075910,"line_start":1634,"line_end":1634,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14075915,"byte_end":14075918,"line_start":1635,"line_end":1635,"column_start":5,"column_end":8}},{"value":"/ let p = Shared::from(Box::into_raw(Box::new(1234)) as *const _);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14075923,"byte_end":14075991,"line_start":1636,"line_end":1636,"column_start":5,"column_end":73}},{"value":"/ assert!(!p.is_null());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14075996,"byte_end":14076022,"line_start":1637,"line_end":1637,"column_start":5,"column_end":31}},{"value":"/ # unsafe { drop(p.into_owned()); } // avoid leak","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14076027,"byte_end":14076079,"line_start":1638,"line_end":1638,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14076084,"byte_end":14076091,"line_start":1639,"line_end":1639,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14076329,"byte_end":14076331,"line_start":1648,"line_end":1648,"column_start":8,"column_end":10},"name":"eq","qualname":"<Shared as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &Self) -> bool","parent":{"krate":2,"index":2831},"children":[],"decl_id":{"krate":2,"index":2833},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14076542,"byte_end":14076553,"line_start":1656,"line_end":1656,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<Shared as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp(&Self, &Self) -> Option<cmp::Ordering>","parent":{"krate":2,"index":2877},"children":[],"decl_id":{"krate":2,"index":2879},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14076713,"byte_end":14076716,"line_start":1662,"line_end":1662,"column_start":8,"column_end":11},"name":"cmp","qualname":"<Shared as std::cmp::Ord>::cmp","value":"fn cmp(&Self, &Self) -> cmp::Ordering","parent":{"krate":2,"index":2867},"children":[],"decl_id":{"krate":2,"index":2868},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14076867,"byte_end":14076870,"line_start":1668,"line_end":1668,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Shared as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14077176,"byte_end":14077179,"line_start":1679,"line_end":1679,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Shared as std::fmt::Pointer>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10127},"children":[],"decl_id":{"krate":2,"index":10128},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14077373,"byte_end":14077380,"line_start":1685,"line_end":1685,"column_start":8,"column_end":15},"name":"default","qualname":"<Shared as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":373},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":14078520,"byte_end":14078529,"line_start":22,"line_end":22,"column_start":12,"column_end":21},"name":"Collector","qualname":"::collector::Collector","value":"Collector {  }","parent":null,"children":[{"krate":0,"index":374}],"decl_id":null,"docs":" An epoch-based garbage collector.\n","sig":null,"attributes":[{"value":"/ An epoch-based garbage collector.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":14078471,"byte_end":14078508,"line_start":21,"line_end":21,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":14078676,"byte_end":14078683,"line_start":30,"line_end":30,"column_start":8,"column_end":15},"name":"default","qualname":"<Collector as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":14078836,"byte_end":14078839,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<Collector>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new collector.\n","sig":null,"attributes":[{"value":"/ Creates a new collector.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":14078796,"byte_end":14078824,"line_start":38,"line_end":38,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":14078944,"byte_end":14078952,"line_start":44,"line_end":44,"column_start":12,"column_end":20},"name":"register","qualname":"<Collector>::register","value":"fn register(&Self) -> LocalHandle","parent":null,"children":[],"decl_id":null,"docs":" Registers a new handle for the collector.\n","sig":null,"attributes":[{"value":"/ Registers a new handle for the collector.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":14078887,"byte_end":14078932,"line_start":43,"line_end":43,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":14079115,"byte_end":14079120,"line_start":51,"line_end":51,"column_start":8,"column_end":13},"name":"clone","qualname":"<Collector as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":" Creates another reference to the same garbage collector.\n","sig":null,"attributes":[{"value":"/ Creates another reference to the same garbage collector.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":14079047,"byte_end":14079107,"line_start":50,"line_end":50,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":14079257,"byte_end":14079260,"line_start":59,"line_end":59,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Collector as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":14079454,"byte_end":14079456,"line_start":66,"line_end":66,"column_start":8,"column_end":10},"name":"eq","qualname":"<Collector as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &Collector) -> bool","parent":{"krate":2,"index":2831},"children":[],"decl_id":{"krate":2,"index":2833},"docs":" Checks if both handles point to the same collector.\n","sig":null,"attributes":[{"value":"/ Checks if both handles point to the same collector.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":14079391,"byte_end":14079446,"line_start":65,"line_end":65,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":389},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":14079620,"byte_end":14079631,"line_start":73,"line_end":73,"column_start":12,"column_end":23},"name":"LocalHandle","qualname":"::collector::LocalHandle","value":"LocalHandle {  }","parent":null,"children":[{"krate":0,"index":390}],"decl_id":null,"docs":" A handle to a garbage collector.\n","sig":null,"attributes":[{"value":"/ A handle to a garbage collector.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":14079572,"byte_end":14079608,"line_start":72,"line_end":72,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":14079742,"byte_end":14079745,"line_start":80,"line_end":80,"column_start":12,"column_end":15},"name":"pin","qualname":"<LocalHandle>::pin","value":"fn pin(&Self) -> Guard","parent":null,"children":[],"decl_id":null,"docs":" Pins the handle.\n","sig":null,"attributes":[{"value":"/ Pins the handle.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":14079696,"byte_end":14079716,"line_start":78,"line_end":78,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":14079721,"byte_end":14079730,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":14079883,"byte_end":14079892,"line_start":86,"line_end":86,"column_start":12,"column_end":21},"name":"is_pinned","qualname":"<LocalHandle>::is_pinned","value":"fn is_pinned(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the handle is pinned.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the handle is pinned.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":14079814,"byte_end":14079857,"line_start":84,"line_end":84,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":14079862,"byte_end":14079871,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":14080048,"byte_end":14080057,"line_start":92,"line_end":92,"column_start":12,"column_end":21},"name":"collector","qualname":"<LocalHandle>::collector","value":"fn collector(&Self) -> &Collector","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Collector` associated with this handle.\n","sig":null,"attributes":[{"value":"/ Returns the `Collector` associated with this handle.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":14079966,"byte_end":14080022,"line_start":90,"line_end":90,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":14080027,"byte_end":14080036,"line_start":91,"line_end":91,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":14080184,"byte_end":14080188,"line_start":99,"line_end":99,"column_start":8,"column_end":12},"name":"drop","qualname":"<LocalHandle as std::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":2,"index":3422},"children":[],"decl_id":{"krate":2,"index":3423},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":14080167,"byte_end":14080176,"line_start":98,"line_end":98,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":14080328,"byte_end":14080331,"line_start":107,"line_end":107,"column_start":8,"column_end":11},"name":"fmt","qualname":"<LocalHandle as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":479},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14100991,"byte_end":14100996,"line_start":71,"line_end":71,"column_start":12,"column_end":17},"name":"Guard","qualname":"::guard::Guard","value":"Guard {  }","parent":null,"children":[{"krate":0,"index":480}],"decl_id":null,"docs":" A guard that keeps the current thread pinned.","sig":null,"attributes":[{"value":"/ A guard that keeps the current thread pinned.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14099222,"byte_end":14099271,"line_start":11,"line_end":11,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14099272,"byte_end":14099275,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Pinning","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14099276,"byte_end":14099289,"line_start":13,"line_end":13,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14099290,"byte_end":14099293,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The current thread is pinned by calling [`pin`], which returns a new guard:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14099294,"byte_end":14099373,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14099374,"byte_end":14099377,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14099378,"byte_end":14099385,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14099386,"byte_end":14099419,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14099420,"byte_end":14099423,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ // It is often convenient to prefix a call to `pin` with a `&` in order to create a reference.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14099424,"byte_end":14099522,"line_start":20,"line_end":20,"column_start":1,"column_end":99}},{"value":"/ // This is not really necessary, but makes passing references to the guard a bit easier.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14099523,"byte_end":14099615,"line_start":21,"line_end":21,"column_start":1,"column_end":93}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14099616,"byte_end":14099646,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14099647,"byte_end":14099654,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14099655,"byte_end":14099658,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ When a guard gets dropped, the current thread is automatically unpinned.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14099659,"byte_end":14099735,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14099736,"byte_end":14099739,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Pointers on the stack","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14099740,"byte_end":14099767,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14099768,"byte_end":14099771,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Having a guard allows us to create pointers on the stack to heap-allocated objects.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14099772,"byte_end":14099859,"line_start":29,"line_end":29,"column_start":1,"column_end":88}},{"value":"/ For example:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14099860,"byte_end":14099876,"line_start":30,"line_end":30,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14099877,"byte_end":14099880,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14099881,"byte_end":14099888,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14099889,"byte_end":14099938,"line_start":33,"line_end":33,"column_start":1,"column_end":50}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14099939,"byte_end":14099983,"line_start":34,"line_end":34,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14099984,"byte_end":14099987,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ // Create a heap-allocated number.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14099988,"byte_end":14100026,"line_start":36,"line_end":36,"column_start":1,"column_end":39}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14100027,"byte_end":14100056,"line_start":37,"line_end":37,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14100057,"byte_end":14100060,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ // Pin the current thread.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14100061,"byte_end":14100091,"line_start":39,"line_end":39,"column_start":1,"column_end":31}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14100092,"byte_end":14100122,"line_start":40,"line_end":40,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14100123,"byte_end":14100126,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ // Load the heap-allocated object and create pointer `p` on the stack.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14100127,"byte_end":14100201,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14100202,"byte_end":14100236,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14100237,"byte_end":14100240,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ // Dereference the pointer and print the value:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14100241,"byte_end":14100292,"line_start":45,"line_end":45,"column_start":1,"column_end":52}},{"value":"/ if let Some(num) = unsafe { p.as_ref() } {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14100293,"byte_end":14100339,"line_start":46,"line_end":46,"column_start":1,"column_end":47}},{"value":"/     println!(\"The number is {}.\", num);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14100340,"byte_end":14100383,"line_start":47,"line_end":47,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14100384,"byte_end":14100389,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14100390,"byte_end":14100442,"line_start":49,"line_end":49,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14100443,"byte_end":14100450,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14100451,"byte_end":14100454,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ # Multiple guards","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14100455,"byte_end":14100476,"line_start":52,"line_end":52,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14100477,"byte_end":14100480,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ Pinning is reentrant and it is perfectly legal to create multiple guards. In that case, the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14100481,"byte_end":14100576,"line_start":54,"line_end":54,"column_start":1,"column_end":96}},{"value":"/ thread will actually be pinned only when the first guard is created and unpinned when the last","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14100577,"byte_end":14100675,"line_start":55,"line_end":55,"column_start":1,"column_end":99}},{"value":"/ one is dropped:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14100676,"byte_end":14100695,"line_start":56,"line_end":56,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14100696,"byte_end":14100699,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14100700,"byte_end":14100707,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14100708,"byte_end":14100741,"line_start":59,"line_end":59,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14100742,"byte_end":14100745,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ let guard1 = epoch::pin();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14100746,"byte_end":14100776,"line_start":61,"line_end":61,"column_start":1,"column_end":31}},{"value":"/ let guard2 = epoch::pin();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14100777,"byte_end":14100807,"line_start":62,"line_end":62,"column_start":1,"column_end":31}},{"value":"/ assert!(epoch::is_pinned());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14100808,"byte_end":14100840,"line_start":63,"line_end":63,"column_start":1,"column_end":33}},{"value":"/ drop(guard1);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14100841,"byte_end":14100858,"line_start":64,"line_end":64,"column_start":1,"column_end":18}},{"value":"/ assert!(epoch::is_pinned());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14100859,"byte_end":14100891,"line_start":65,"line_end":65,"column_start":1,"column_end":33}},{"value":"/ drop(guard2);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14100892,"byte_end":14100909,"line_start":66,"line_end":66,"column_start":1,"column_end":18}},{"value":"/ assert!(!epoch::is_pinned());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14100910,"byte_end":14100943,"line_start":67,"line_end":67,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14100944,"byte_end":14100951,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14100952,"byte_end":14100955,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`pin`]: super::pin","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14100956,"byte_end":14100979,"line_start":70,"line_end":70,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14101971,"byte_end":14101976,"line_start":91,"line_end":91,"column_start":12,"column_end":17},"name":"defer","qualname":"<Guard>::defer","value":"fn defer<F, R>(&Self, F) where F: FnOnce() -> R, F: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Stores a function so that it can be executed at some point after all currently pinned\n threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a function so that it can be executed at some point after all currently pinned","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14101055,"byte_end":14101144,"line_start":76,"line_end":76,"column_start":5,"column_end":94}},{"value":"/ threads get unpinned.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14101149,"byte_end":14101174,"line_start":77,"line_end":77,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14101179,"byte_end":14101182,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ This method first stores `f` into the thread-local (or handle-local) cache. If this cache","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14101187,"byte_end":14101280,"line_start":79,"line_end":79,"column_start":5,"column_end":98}},{"value":"/ becomes full, some functions are moved into the global cache. At the same time, some","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14101285,"byte_end":14101373,"line_start":80,"line_end":80,"column_start":5,"column_end":93}},{"value":"/ functions from both local and global caches may get executed in order to incrementally","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14101378,"byte_end":14101468,"line_start":81,"line_end":81,"column_start":5,"column_end":95}},{"value":"/ clean up the caches as they fill up.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14101473,"byte_end":14101513,"line_start":82,"line_end":82,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14101518,"byte_end":14101521,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly `f` will be executed. The only guarantee is that it","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14101526,"byte_end":14101616,"line_start":84,"line_end":84,"column_start":5,"column_end":95}},{"value":"/ won't be executed until all currently pinned threads get unpinned. In theory, `f` might","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14101621,"byte_end":14101712,"line_start":85,"line_end":85,"column_start":5,"column_end":96}},{"value":"/ never run, but the epoch-based garbage collection will make an effort to execute it","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14101717,"byte_end":14101804,"line_start":86,"line_end":86,"column_start":5,"column_end":92}},{"value":"/ reasonably soon.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14101809,"byte_end":14101829,"line_start":87,"line_end":87,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14101834,"byte_end":14101837,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the function will simply be","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14101842,"byte_end":14101929,"line_start":89,"line_end":89,"column_start":5,"column_end":92}},{"value":"/ executed immediately.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14101934,"byte_end":14101959,"line_start":90,"line_end":90,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14106333,"byte_end":14106348,"line_start":190,"line_end":190,"column_start":19,"column_end":34},"name":"defer_unchecked","qualname":"<Guard>::defer_unchecked","value":"unsafe fn defer_unchecked<F, R>(&Self, F) where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Stores a function so that it can be executed at some point after all currently pinned\n threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a function so that it can be executed at some point after all currently pinned","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14102140,"byte_end":14102229,"line_start":101,"line_end":101,"column_start":5,"column_end":94}},{"value":"/ threads get unpinned.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14102234,"byte_end":14102259,"line_start":102,"line_end":102,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14102264,"byte_end":14102267,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ This method first stores `f` into the thread-local (or handle-local) cache. If this cache","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14102272,"byte_end":14102365,"line_start":104,"line_end":104,"column_start":5,"column_end":98}},{"value":"/ becomes full, some functions are moved into the global cache. At the same time, some","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14102370,"byte_end":14102458,"line_start":105,"line_end":105,"column_start":5,"column_end":93}},{"value":"/ functions from both local and global caches may get executed in order to incrementally","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14102463,"byte_end":14102553,"line_start":106,"line_end":106,"column_start":5,"column_end":95}},{"value":"/ clean up the caches as they fill up.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14102558,"byte_end":14102598,"line_start":107,"line_end":107,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14102603,"byte_end":14102606,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly `f` will be executed. The only guarantee is that it","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14102611,"byte_end":14102701,"line_start":109,"line_end":109,"column_start":5,"column_end":95}},{"value":"/ won't be executed until all currently pinned threads get unpinned. In theory, `f` might","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14102706,"byte_end":14102797,"line_start":110,"line_end":110,"column_start":5,"column_end":96}},{"value":"/ never run, but the epoch-based garbage collection will make an effort to execute it","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14102802,"byte_end":14102889,"line_start":111,"line_end":111,"column_start":5,"column_end":92}},{"value":"/ reasonably soon.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14102894,"byte_end":14102914,"line_start":112,"line_end":112,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14102919,"byte_end":14102922,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the function will simply be","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14102927,"byte_end":14103014,"line_start":114,"line_end":114,"column_start":5,"column_end":92}},{"value":"/ executed immediately.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14103019,"byte_end":14103044,"line_start":115,"line_end":115,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14103049,"byte_end":14103052,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14103057,"byte_end":14103069,"line_start":117,"line_end":117,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14103074,"byte_end":14103077,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ The given function must not hold reference onto the stack. It is highly recommended that","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14103082,"byte_end":14103174,"line_start":119,"line_end":119,"column_start":5,"column_end":97}},{"value":"/ the passed function is **always** marked with `move` in order to prevent accidental","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14103179,"byte_end":14103266,"line_start":120,"line_end":120,"column_start":5,"column_end":92}},{"value":"/ borrows.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14103271,"byte_end":14103283,"line_start":121,"line_end":121,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14103288,"byte_end":14103291,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14103296,"byte_end":14103303,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14103308,"byte_end":14103341,"line_start":124,"line_end":124,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14103346,"byte_end":14103349,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14103354,"byte_end":14103384,"line_start":126,"line_end":126,"column_start":5,"column_end":35}},{"value":"/ let message = \"Hello!\";","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14103389,"byte_end":14103416,"line_start":127,"line_end":127,"column_start":5,"column_end":32}},{"value":"/ unsafe {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14103421,"byte_end":14103433,"line_start":128,"line_end":128,"column_start":5,"column_end":17}},{"value":"/     // ALWAYS use `move` when sending a closure into `defer_unchecked`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14103438,"byte_end":14103513,"line_start":129,"line_end":129,"column_start":5,"column_end":80}},{"value":"/     guard.defer_unchecked(move || {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14103518,"byte_end":14103557,"line_start":130,"line_end":130,"column_start":5,"column_end":44}},{"value":"/         println!(\"{}\", message);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14103562,"byte_end":14103598,"line_start":131,"line_end":131,"column_start":5,"column_end":41}},{"value":"/     });","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14103603,"byte_end":14103614,"line_start":132,"line_end":132,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14103619,"byte_end":14103624,"line_start":133,"line_end":133,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14103629,"byte_end":14103636,"line_start":134,"line_end":134,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14103641,"byte_end":14103644,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ Apart from that, keep in mind that another thread may execute `f`, so anything accessed by","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14103649,"byte_end":14103743,"line_start":136,"line_end":136,"column_start":5,"column_end":99}},{"value":"/ the closure must be `Send`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14103748,"byte_end":14103779,"line_start":137,"line_end":137,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14103784,"byte_end":14103787,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ We intentionally didn't require `F: Send`, because Rust's type systems usually cannot prove","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14103792,"byte_end":14103887,"line_start":139,"line_end":139,"column_start":5,"column_end":100}},{"value":"/ `F: Send` for typical use cases. For example, consider the following code snippet, which","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14103892,"byte_end":14103984,"line_start":140,"line_end":140,"column_start":5,"column_end":97}},{"value":"/ exemplifies the typical use case of deferring the deallocation of a shared reference:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14103989,"byte_end":14104078,"line_start":141,"line_end":141,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14104083,"byte_end":14104086,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14104091,"byte_end":14104104,"line_start":143,"line_end":143,"column_start":5,"column_end":18}},{"value":"/ let shared = Owned::new(7i32).into_shared(guard);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14104109,"byte_end":14104162,"line_start":144,"line_end":144,"column_start":5,"column_end":58}},{"value":"/ guard.defer_unchecked(move || shared.into_owned()); // `Shared` is not `Send`!","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14104167,"byte_end":14104249,"line_start":145,"line_end":145,"column_start":5,"column_end":87}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14104254,"byte_end":14104261,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14104266,"byte_end":14104269,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ While `Shared` is not `Send`, it's safe for another thread to call the deferred function,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14104274,"byte_end":14104367,"line_start":148,"line_end":148,"column_start":5,"column_end":98}},{"value":"/ because it's called only after the grace period and `shared` is no longer shared with other","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14104372,"byte_end":14104467,"line_start":149,"line_end":149,"column_start":5,"column_end":100}},{"value":"/ threads. But we don't expect type systems to prove this.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14104472,"byte_end":14104532,"line_start":150,"line_end":150,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14104537,"byte_end":14104540,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14104545,"byte_end":14104559,"line_start":152,"line_end":152,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14104564,"byte_end":14104567,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ When a heap-allocated object in a data structure becomes unreachable, it has to be","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14104572,"byte_end":14104658,"line_start":154,"line_end":154,"column_start":5,"column_end":91}},{"value":"/ deallocated. However, the current thread and other threads may be still holding references","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14104663,"byte_end":14104757,"line_start":155,"line_end":155,"column_start":5,"column_end":99}},{"value":"/ on the stack to that same object. Therefore it cannot be deallocated before those references","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14104762,"byte_end":14104858,"line_start":156,"line_end":156,"column_start":5,"column_end":101}},{"value":"/ get dropped. This method can defer deallocation until all those threads get unpinned and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14104863,"byte_end":14104955,"line_start":157,"line_end":157,"column_start":5,"column_end":97}},{"value":"/ consequently drop all their references on the stack.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14104960,"byte_end":14105016,"line_start":158,"line_end":158,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14105021,"byte_end":14105024,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14105029,"byte_end":14105036,"line_start":160,"line_end":160,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14105041,"byte_end":14105097,"line_start":161,"line_end":161,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14105102,"byte_end":14105146,"line_start":162,"line_end":162,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14105151,"byte_end":14105154,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(\"foo\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14105159,"byte_end":14105190,"line_start":164,"line_end":164,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14105195,"byte_end":14105198,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ // Now suppose that `a` is shared among multiple threads and concurrently","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14105203,"byte_end":14105280,"line_start":166,"line_end":166,"column_start":5,"column_end":82}},{"value":"/ // accessed and modified...","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14105285,"byte_end":14105316,"line_start":167,"line_end":167,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14105321,"byte_end":14105324,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ // Pin the current thread.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14105329,"byte_end":14105359,"line_start":169,"line_end":169,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14105364,"byte_end":14105394,"line_start":170,"line_end":170,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14105399,"byte_end":14105402,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ // Steal the object currently stored in `a` and swap it with another one.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14105407,"byte_end":14105484,"line_start":172,"line_end":172,"column_start":5,"column_end":82}},{"value":"/ let p = a.swap(Owned::new(\"bar\").into_shared(guard), SeqCst, guard);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14105489,"byte_end":14105561,"line_start":173,"line_end":173,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14105566,"byte_end":14105569,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ if !p.is_null() {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14105574,"byte_end":14105595,"line_start":175,"line_end":175,"column_start":5,"column_end":26}},{"value":"/     // The object `p` is pointing to is now unreachable.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14105600,"byte_end":14105660,"line_start":176,"line_end":176,"column_start":5,"column_end":65}},{"value":"/     // Defer its deallocation until all currently pinned threads get unpinned.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14105665,"byte_end":14105747,"line_start":177,"line_end":177,"column_start":5,"column_end":87}},{"value":"/     unsafe {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14105752,"byte_end":14105768,"line_start":178,"line_end":178,"column_start":5,"column_end":21}},{"value":"/         // ALWAYS use `move` when sending a closure into `defer_unchecked`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14105773,"byte_end":14105852,"line_start":179,"line_end":179,"column_start":5,"column_end":84}},{"value":"/         guard.defer_unchecked(move || {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14105857,"byte_end":14105900,"line_start":180,"line_end":180,"column_start":5,"column_end":48}},{"value":"/             println!(\"{} is now being deallocated.\", p.deref());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14105905,"byte_end":14105973,"line_start":181,"line_end":181,"column_start":5,"column_end":73}},{"value":"/             // Now we have unique access to the object pointed to by `p` and can turn it","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14105978,"byte_end":14106070,"line_start":182,"line_end":182,"column_start":5,"column_end":97}},{"value":"/             // into an `Owned`. Dropping the `Owned` will deallocate the object.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14106075,"byte_end":14106159,"line_start":183,"line_end":183,"column_start":5,"column_end":89}},{"value":"/             drop(p.into_owned());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14106164,"byte_end":14106201,"line_start":184,"line_end":184,"column_start":5,"column_end":42}},{"value":"/         });","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14106206,"byte_end":14106221,"line_start":185,"line_end":185,"column_start":5,"column_end":20}},{"value":"/     }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14106226,"byte_end":14106235,"line_start":186,"line_end":186,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14106240,"byte_end":14106245,"line_start":187,"line_end":187,"column_start":5,"column_end":10}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14106250,"byte_end":14106302,"line_start":188,"line_end":188,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14106307,"byte_end":14106314,"line_start":189,"line_end":189,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14109992,"byte_end":14110005,"line_start":270,"line_end":270,"column_start":19,"column_end":32},"name":"defer_destroy","qualname":"<Guard>::defer_destroy","value":"unsafe fn defer_destroy<T>(&Self, Shared<, T>)","parent":null,"children":[],"decl_id":null,"docs":" Stores a destructor for an object so that it can be deallocated and dropped at some point\n after all currently pinned threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a destructor for an object so that it can be deallocated and dropped at some point","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14106587,"byte_end":14106680,"line_start":201,"line_end":201,"column_start":5,"column_end":98}},{"value":"/ after all currently pinned threads get unpinned.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14106685,"byte_end":14106737,"line_start":202,"line_end":202,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14106742,"byte_end":14106745,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ This method first stores the destructor into the thread-local (or handle-local) cache. If","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14106750,"byte_end":14106843,"line_start":204,"line_end":204,"column_start":5,"column_end":98}},{"value":"/ this cache becomes full, some destructors are moved into the global cache. At the same","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14106848,"byte_end":14106938,"line_start":205,"line_end":205,"column_start":5,"column_end":95}},{"value":"/ time, some destructors from both local and global caches may get executed in order to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14106943,"byte_end":14107032,"line_start":206,"line_end":206,"column_start":5,"column_end":94}},{"value":"/ incrementally clean up the caches as they fill up.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14107037,"byte_end":14107091,"line_start":207,"line_end":207,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14107096,"byte_end":14107099,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly the destructor will be executed. The only guarantee is","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14107104,"byte_end":14107197,"line_start":209,"line_end":209,"column_start":5,"column_end":98}},{"value":"/ that it won't be executed until all currently pinned threads get unpinned. In theory, the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14107202,"byte_end":14107295,"line_start":210,"line_end":210,"column_start":5,"column_end":98}},{"value":"/ destructor might never run, but the epoch-based garbage collection will make an effort to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14107300,"byte_end":14107393,"line_start":211,"line_end":211,"column_start":5,"column_end":98}},{"value":"/ execute it reasonably soon.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14107398,"byte_end":14107429,"line_start":212,"line_end":212,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14107434,"byte_end":14107437,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the destructor will simply be","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14107442,"byte_end":14107531,"line_start":214,"line_end":214,"column_start":5,"column_end":94}},{"value":"/ executed immediately.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14107536,"byte_end":14107561,"line_start":215,"line_end":215,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14107566,"byte_end":14107569,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14107574,"byte_end":14107586,"line_start":217,"line_end":217,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14107591,"byte_end":14107594,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ The object must not be reachable by other threads anymore, otherwise it might be still in","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14107599,"byte_end":14107692,"line_start":219,"line_end":219,"column_start":5,"column_end":98}},{"value":"/ use when the destructor runs.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14107697,"byte_end":14107730,"line_start":220,"line_end":220,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14107735,"byte_end":14107738,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ Apart from that, keep in mind that another thread may execute the destructor, so the object","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14107743,"byte_end":14107838,"line_start":222,"line_end":222,"column_start":5,"column_end":100}},{"value":"/ must be sendable to other threads.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14107843,"byte_end":14107881,"line_start":223,"line_end":223,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14107886,"byte_end":14107889,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ We intentionally didn't require `T: Send`, because Rust's type systems usually cannot prove","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14107894,"byte_end":14107989,"line_start":225,"line_end":225,"column_start":5,"column_end":100}},{"value":"/ `T: Send` for typical use cases. For example, consider the following code snippet, which","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14107994,"byte_end":14108086,"line_start":226,"line_end":226,"column_start":5,"column_end":97}},{"value":"/ exemplifies the typical use case of deferring the deallocation of a shared reference:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14108091,"byte_end":14108180,"line_start":227,"line_end":227,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14108185,"byte_end":14108188,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14108193,"byte_end":14108206,"line_start":229,"line_end":229,"column_start":5,"column_end":18}},{"value":"/ let shared = Owned::new(7i32).into_shared(guard);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14108211,"byte_end":14108264,"line_start":230,"line_end":230,"column_start":5,"column_end":58}},{"value":"/ guard.defer_destroy(shared); // `Shared` is not `Send`!","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14108269,"byte_end":14108328,"line_start":231,"line_end":231,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14108333,"byte_end":14108340,"line_start":232,"line_end":232,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14108345,"byte_end":14108348,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ While `Shared` is not `Send`, it's safe for another thread to call the destructor, because","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14108353,"byte_end":14108447,"line_start":234,"line_end":234,"column_start":5,"column_end":99}},{"value":"/ it's called only after the grace period and `shared` is no longer shared with other","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14108452,"byte_end":14108539,"line_start":235,"line_end":235,"column_start":5,"column_end":92}},{"value":"/ threads. But we don't expect type systems to prove this.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14108544,"byte_end":14108604,"line_start":236,"line_end":236,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14108609,"byte_end":14108612,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14108617,"byte_end":14108631,"line_start":238,"line_end":238,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14108636,"byte_end":14108639,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ When a heap-allocated object in a data structure becomes unreachable, it has to be","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14108644,"byte_end":14108730,"line_start":240,"line_end":240,"column_start":5,"column_end":91}},{"value":"/ deallocated. However, the current thread and other threads may be still holding references","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14108735,"byte_end":14108829,"line_start":241,"line_end":241,"column_start":5,"column_end":99}},{"value":"/ on the stack to that same object. Therefore it cannot be deallocated before those references","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14108834,"byte_end":14108930,"line_start":242,"line_end":242,"column_start":5,"column_end":101}},{"value":"/ get dropped. This method can defer deallocation until all those threads get unpinned and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14108935,"byte_end":14109027,"line_start":243,"line_end":243,"column_start":5,"column_end":97}},{"value":"/ consequently drop all their references on the stack.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14109032,"byte_end":14109088,"line_start":244,"line_end":244,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14109093,"byte_end":14109096,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14109101,"byte_end":14109108,"line_start":246,"line_end":246,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14109113,"byte_end":14109169,"line_start":247,"line_end":247,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14109174,"byte_end":14109218,"line_start":248,"line_end":248,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14109223,"byte_end":14109226,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(\"foo\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14109231,"byte_end":14109262,"line_start":250,"line_end":250,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14109267,"byte_end":14109270,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ // Now suppose that `a` is shared among multiple threads and concurrently","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14109275,"byte_end":14109352,"line_start":252,"line_end":252,"column_start":5,"column_end":82}},{"value":"/ // accessed and modified...","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14109357,"byte_end":14109388,"line_start":253,"line_end":253,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14109393,"byte_end":14109396,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ // Pin the current thread.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14109401,"byte_end":14109431,"line_start":255,"line_end":255,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14109436,"byte_end":14109466,"line_start":256,"line_end":256,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14109471,"byte_end":14109474,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ // Steal the object currently stored in `a` and swap it with another one.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14109479,"byte_end":14109556,"line_start":258,"line_end":258,"column_start":5,"column_end":82}},{"value":"/ let p = a.swap(Owned::new(\"bar\").into_shared(guard), SeqCst, guard);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14109561,"byte_end":14109633,"line_start":259,"line_end":259,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14109638,"byte_end":14109641,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ if !p.is_null() {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14109646,"byte_end":14109667,"line_start":261,"line_end":261,"column_start":5,"column_end":26}},{"value":"/     // The object `p` is pointing to is now unreachable.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14109672,"byte_end":14109732,"line_start":262,"line_end":262,"column_start":5,"column_end":65}},{"value":"/     // Defer its deallocation until all currently pinned threads get unpinned.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14109737,"byte_end":14109819,"line_start":263,"line_end":263,"column_start":5,"column_end":87}},{"value":"/     unsafe {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14109824,"byte_end":14109840,"line_start":264,"line_end":264,"column_start":5,"column_end":21}},{"value":"/         guard.defer_destroy(p);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14109845,"byte_end":14109880,"line_start":265,"line_end":265,"column_start":5,"column_end":40}},{"value":"/     }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14109885,"byte_end":14109894,"line_start":266,"line_end":266,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14109899,"byte_end":14109904,"line_start":267,"line_end":267,"column_start":5,"column_end":10}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14109909,"byte_end":14109961,"line_start":268,"line_end":268,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14109966,"byte_end":14109973,"line_start":269,"line_end":269,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14110890,"byte_end":14110895,"line_start":294,"line_end":294,"column_start":12,"column_end":17},"name":"flush","qualname":"<Guard>::flush","value":"fn flush(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears up the thread-local cache of deferred functions by executing them or moving into the\n global cache.","sig":null,"attributes":[{"value":"/ Clears up the thread-local cache of deferred functions by executing them or moving into the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14110105,"byte_end":14110200,"line_start":274,"line_end":274,"column_start":5,"column_end":100}},{"value":"/ global cache.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14110205,"byte_end":14110222,"line_start":275,"line_end":275,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14110227,"byte_end":14110230,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ Call this method after deferring execution of a function if you want to get it executed as","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14110235,"byte_end":14110329,"line_start":277,"line_end":277,"column_start":5,"column_end":99}},{"value":"/ soon as possible. Flushing will make sure it is residing in in the global cache, so that","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14110334,"byte_end":14110426,"line_start":278,"line_end":278,"column_start":5,"column_end":97}},{"value":"/ any thread has a chance of taking the function and executing it.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14110431,"byte_end":14110499,"line_start":279,"line_end":279,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14110504,"byte_end":14110507,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, it is a no-op (nothing happens).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14110512,"byte_end":14110604,"line_start":281,"line_end":281,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14110609,"byte_end":14110612,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14110617,"byte_end":14110631,"line_start":283,"line_end":283,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14110636,"byte_end":14110639,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14110644,"byte_end":14110651,"line_start":285,"line_end":285,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14110656,"byte_end":14110689,"line_start":286,"line_end":286,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14110694,"byte_end":14110697,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14110702,"byte_end":14110732,"line_start":288,"line_end":288,"column_start":5,"column_end":35}},{"value":"/ guard.defer(move || {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14110737,"byte_end":14110762,"line_start":289,"line_end":289,"column_start":5,"column_end":30}},{"value":"/     println!(\"This better be printed as soon as possible!\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14110767,"byte_end":14110831,"line_start":290,"line_end":290,"column_start":5,"column_end":69}},{"value":"/ });","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14110836,"byte_end":14110843,"line_start":291,"line_end":291,"column_start":5,"column_end":12}},{"value":"/ guard.flush();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14110848,"byte_end":14110866,"line_start":292,"line_end":292,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14110871,"byte_end":14110878,"line_start":293,"line_end":293,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14112114,"byte_end":14112119,"line_start":328,"line_end":328,"column_start":12,"column_end":17},"name":"repin","qualname":"<Guard>::repin","value":"fn repin(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Unpins and then immediately re-pins the thread.","sig":null,"attributes":[{"value":"/ Unpins and then immediately re-pins the thread.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14111019,"byte_end":14111070,"line_start":300,"line_end":300,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14111075,"byte_end":14111078,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you don't want delay the advancement of the global epoch by","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14111083,"byte_end":14111173,"line_start":302,"line_end":302,"column_start":5,"column_end":95}},{"value":"/ holding an old epoch. For safety, you should not maintain any guard-based reference across","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14111178,"byte_end":14111272,"line_start":303,"line_end":303,"column_start":5,"column_end":99}},{"value":"/ the call (the latter is enforced by `&mut self`). The thread will only be repinned if this","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14111277,"byte_end":14111371,"line_start":304,"line_end":304,"column_start":5,"column_end":99}},{"value":"/ is the only active guard for the current thread.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14111376,"byte_end":14111428,"line_start":305,"line_end":305,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14111433,"byte_end":14111436,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then the call will be just no-op.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14111441,"byte_end":14111534,"line_start":307,"line_end":307,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14111539,"byte_end":14111542,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14111547,"byte_end":14111561,"line_start":309,"line_end":309,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14111566,"byte_end":14111569,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14111574,"byte_end":14111581,"line_start":311,"line_end":311,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14111586,"byte_end":14111635,"line_start":312,"line_end":312,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14111640,"byte_end":14111684,"line_start":313,"line_end":313,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14111689,"byte_end":14111692,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14111697,"byte_end":14111726,"line_start":315,"line_end":315,"column_start":5,"column_end":34}},{"value":"/ let mut guard = epoch::pin();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14111731,"byte_end":14111764,"line_start":316,"line_end":316,"column_start":5,"column_end":38}},{"value":"/ {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14111769,"byte_end":14111774,"line_start":317,"line_end":317,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14111779,"byte_end":14111818,"line_start":318,"line_end":318,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14111823,"byte_end":14111877,"line_start":319,"line_end":319,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14111882,"byte_end":14111887,"line_start":320,"line_end":320,"column_start":5,"column_end":10}},{"value":"/ guard.repin();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14111892,"byte_end":14111910,"line_start":321,"line_end":321,"column_start":5,"column_end":23}},{"value":"/ {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14111915,"byte_end":14111920,"line_start":322,"line_end":322,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14111925,"byte_end":14111964,"line_start":323,"line_end":323,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14111969,"byte_end":14112023,"line_start":324,"line_end":324,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14112028,"byte_end":14112033,"line_start":325,"line_end":325,"column_start":5,"column_end":10}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14112038,"byte_end":14112090,"line_start":326,"line_end":326,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14112095,"byte_end":14112102,"line_start":327,"line_end":327,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14113503,"byte_end":14113514,"line_start":365,"line_end":365,"column_start":12,"column_end":23},"name":"repin_after","qualname":"<Guard>::repin_after","value":"fn repin_after<F, R>(&mut Self, F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Temporarily unpins the thread, executes the given function and then re-pins the thread.","sig":null,"attributes":[{"value":"/ Temporarily unpins the thread, executes the given function and then re-pins the thread.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14112243,"byte_end":14112334,"line_start":334,"line_end":334,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14112339,"byte_end":14112342,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you need to perform a long-running operation (e.g. sleeping)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14112347,"byte_end":14112438,"line_start":336,"line_end":336,"column_start":5,"column_end":96}},{"value":"/ and don't need to maintain any guard-based reference across the call (the latter is enforced","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14112443,"byte_end":14112539,"line_start":337,"line_end":337,"column_start":5,"column_end":101}},{"value":"/ by `&mut self`). The thread will only be unpinned if this is the only active guard for the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14112544,"byte_end":14112638,"line_start":338,"line_end":338,"column_start":5,"column_end":99}},{"value":"/ current thread.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14112643,"byte_end":14112662,"line_start":339,"line_end":339,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14112667,"byte_end":14112670,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then the passed function is called","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14112675,"byte_end":14112769,"line_start":341,"line_end":341,"column_start":5,"column_end":99}},{"value":"/ directly without unpinning the thread.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14112774,"byte_end":14112816,"line_start":342,"line_end":342,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14112821,"byte_end":14112824,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14112829,"byte_end":14112843,"line_start":344,"line_end":344,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14112848,"byte_end":14112851,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14112856,"byte_end":14112863,"line_start":346,"line_end":346,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14112868,"byte_end":14112917,"line_start":347,"line_end":347,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14112922,"byte_end":14112966,"line_start":348,"line_end":348,"column_start":5,"column_end":49}},{"value":"/ use std::thread;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14112971,"byte_end":14112991,"line_start":349,"line_end":349,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14112996,"byte_end":14113024,"line_start":350,"line_end":350,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14113029,"byte_end":14113032,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14113037,"byte_end":14113066,"line_start":352,"line_end":352,"column_start":5,"column_end":34}},{"value":"/ let mut guard = epoch::pin();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14113071,"byte_end":14113104,"line_start":353,"line_end":353,"column_start":5,"column_end":38}},{"value":"/ {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14113109,"byte_end":14113114,"line_start":354,"line_end":354,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14113119,"byte_end":14113158,"line_start":355,"line_end":355,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14113163,"byte_end":14113217,"line_start":356,"line_end":356,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14113222,"byte_end":14113227,"line_start":357,"line_end":357,"column_start":5,"column_end":10}},{"value":"/ guard.repin_after(|| thread::sleep(Duration::from_millis(50)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14113232,"byte_end":14113299,"line_start":358,"line_end":358,"column_start":5,"column_end":72}},{"value":"/ {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14113304,"byte_end":14113309,"line_start":359,"line_end":359,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14113314,"byte_end":14113353,"line_start":360,"line_end":360,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14113358,"byte_end":14113412,"line_start":361,"line_end":361,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14113417,"byte_end":14113422,"line_start":362,"line_end":362,"column_start":5,"column_end":10}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14113427,"byte_end":14113479,"line_start":363,"line_end":363,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14113484,"byte_end":14113491,"line_start":364,"line_end":364,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":497},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14114660,"byte_end":14114669,"line_start":403,"line_end":403,"column_start":12,"column_end":21},"name":"collector","qualname":"<Guard>::collector","value":"fn collector(&Self) -> Option<&Collector>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Collector` associated with this guard.","sig":null,"attributes":[{"value":"/ Returns the `Collector` associated with this guard.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14114119,"byte_end":14114174,"line_start":387,"line_end":387,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14114179,"byte_end":14114182,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you need to ensure that all guards used with","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14114187,"byte_end":14114262,"line_start":389,"line_end":389,"column_start":5,"column_end":80}},{"value":"/ a data structure come from the same collector.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14114267,"byte_end":14114317,"line_start":390,"line_end":390,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14114322,"byte_end":14114325,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then `None` is returned.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14114330,"byte_end":14114414,"line_start":392,"line_end":392,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14114419,"byte_end":14114422,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14114427,"byte_end":14114441,"line_start":394,"line_end":394,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14114446,"byte_end":14114449,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14114454,"byte_end":14114461,"line_start":396,"line_end":396,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14114466,"byte_end":14114499,"line_start":397,"line_end":397,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14114504,"byte_end":14114507,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ let guard1 = epoch::pin();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14114512,"byte_end":14114542,"line_start":399,"line_end":399,"column_start":5,"column_end":35}},{"value":"/ let guard2 = epoch::pin();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14114547,"byte_end":14114577,"line_start":400,"line_end":400,"column_start":5,"column_end":35}},{"value":"/ assert!(guard1.collector() == guard2.collector());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14114582,"byte_end":14114636,"line_start":401,"line_end":401,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14114641,"byte_end":14114648,"line_start":402,"line_end":402,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14114823,"byte_end":14114827,"line_start":410,"line_end":410,"column_start":8,"column_end":12},"name":"drop","qualname":"<Guard as std::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":2,"index":3422},"children":[],"decl_id":{"krate":2,"index":3423},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14114806,"byte_end":14114815,"line_start":409,"line_end":409,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14114984,"byte_end":14114987,"line_start":418,"line_end":418,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Guard as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":503},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14118021,"byte_end":14118032,"line_start":510,"line_end":510,"column_start":15,"column_end":26},"name":"unprotected","qualname":"::guard::unprotected","value":"unsafe fn unprotected() -> &'static Guard","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to a dummy guard that allows unprotected access to [`Atomic`]s.","sig":null,"attributes":[{"value":"/ Returns a reference to a dummy guard that allows unprotected access to [`Atomic`]s.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14115079,"byte_end":14115166,"line_start":423,"line_end":423,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14115167,"byte_end":14115170,"line_start":424,"line_end":424,"column_start":1,"column_end":4}},{"value":"/ This guard should be used in special occasions only. Note that it doesn't actually keep any","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14115171,"byte_end":14115266,"line_start":425,"line_end":425,"column_start":1,"column_end":96}},{"value":"/ thread pinned - it's just a fake guard that allows loading from [`Atomic`]s unsafely.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14115267,"byte_end":14115356,"line_start":426,"line_end":426,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14115357,"byte_end":14115360,"line_start":427,"line_end":427,"column_start":1,"column_end":4}},{"value":"/ Note that calling [`defer`] with a dummy guard will not defer the function - it will just","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14115361,"byte_end":14115454,"line_start":428,"line_end":428,"column_start":1,"column_end":94}},{"value":"/ execute the function immediately.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14115455,"byte_end":14115492,"line_start":429,"line_end":429,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14115493,"byte_end":14115496,"line_start":430,"line_end":430,"column_start":1,"column_end":4}},{"value":"/ If necessary, it's possible to create more dummy guards by cloning: `unprotected().clone()`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14115497,"byte_end":14115593,"line_start":431,"line_end":431,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14115594,"byte_end":14115597,"line_start":432,"line_end":432,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14115598,"byte_end":14115610,"line_start":433,"line_end":433,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14115611,"byte_end":14115614,"line_start":434,"line_end":434,"column_start":1,"column_end":4}},{"value":"/ Loading and dereferencing data from an [`Atomic`] using this guard is safe only if the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14115615,"byte_end":14115705,"line_start":435,"line_end":435,"column_start":1,"column_end":91}},{"value":"/ [`Atomic`] is not being concurrently modified by other threads.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14115706,"byte_end":14115773,"line_start":436,"line_end":436,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14115774,"byte_end":14115777,"line_start":437,"line_end":437,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14115778,"byte_end":14115792,"line_start":438,"line_end":438,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14115793,"byte_end":14115796,"line_start":439,"line_end":439,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14115797,"byte_end":14115804,"line_start":440,"line_end":440,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14115805,"byte_end":14115854,"line_start":441,"line_end":441,"column_start":1,"column_end":50}},{"value":"/ use std::sync::atomic::Ordering::Relaxed;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14115855,"byte_end":14115900,"line_start":442,"line_end":442,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14115901,"byte_end":14115904,"line_start":443,"line_end":443,"column_start":1,"column_end":4}},{"value":"/ let a = Atomic::new(7);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14115905,"byte_end":14115932,"line_start":444,"line_end":444,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14115933,"byte_end":14115936,"line_start":445,"line_end":445,"column_start":1,"column_end":4}},{"value":"/ unsafe {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14115937,"byte_end":14115949,"line_start":446,"line_end":446,"column_start":1,"column_end":13}},{"value":"/     // Load `a` without pinning the current thread.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14115950,"byte_end":14116005,"line_start":447,"line_end":447,"column_start":1,"column_end":56}},{"value":"/     a.load(Relaxed, epoch::unprotected());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14116006,"byte_end":14116052,"line_start":448,"line_end":448,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14116053,"byte_end":14116056,"line_start":449,"line_end":449,"column_start":1,"column_end":4}},{"value":"/     // It's possible to create more dummy guards by calling `clone()`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14116057,"byte_end":14116131,"line_start":450,"line_end":450,"column_start":1,"column_end":75}},{"value":"/     let dummy = &epoch::unprotected().clone();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14116132,"byte_end":14116182,"line_start":451,"line_end":451,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14116183,"byte_end":14116186,"line_start":452,"line_end":452,"column_start":1,"column_end":4}},{"value":"/     dummy.defer(move || {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14116187,"byte_end":14116216,"line_start":453,"line_end":453,"column_start":1,"column_end":30}},{"value":"/         println!(\"This gets executed immediately.\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14116217,"byte_end":14116273,"line_start":454,"line_end":454,"column_start":1,"column_end":57}},{"value":"/     });","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14116274,"byte_end":14116285,"line_start":455,"line_end":455,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14116286,"byte_end":14116289,"line_start":456,"line_end":456,"column_start":1,"column_end":4}},{"value":"/     // Dropping `dummy` doesn't affect the current thread - it's just a noop.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14116290,"byte_end":14116371,"line_start":457,"line_end":457,"column_start":1,"column_end":82}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14116372,"byte_end":14116377,"line_start":458,"line_end":458,"column_start":1,"column_end":6}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14116378,"byte_end":14116430,"line_start":459,"line_end":459,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14116431,"byte_end":14116438,"line_start":460,"line_end":460,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14116439,"byte_end":14116442,"line_start":461,"line_end":461,"column_start":1,"column_end":4}},{"value":"/ The most common use of this function is when constructing or destructing a data structure.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14116443,"byte_end":14116537,"line_start":462,"line_end":462,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14116538,"byte_end":14116541,"line_start":463,"line_end":463,"column_start":1,"column_end":4}},{"value":"/ For example, we can use a dummy guard in the destructor of a Treiber stack because at that","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14116542,"byte_end":14116636,"line_start":464,"line_end":464,"column_start":1,"column_end":95}},{"value":"/ point no other thread could concurrently modify the [`Atomic`]s we are accessing.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14116637,"byte_end":14116722,"line_start":465,"line_end":465,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14116723,"byte_end":14116726,"line_start":466,"line_end":466,"column_start":1,"column_end":4}},{"value":"/ If we were to actually pin the current thread during destruction, that would just unnecessarily","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14116727,"byte_end":14116826,"line_start":467,"line_end":467,"column_start":1,"column_end":100}},{"value":"/ delay garbage collection and incur some performance cost, so in cases like these `unprotected`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14116827,"byte_end":14116925,"line_start":468,"line_end":468,"column_start":1,"column_end":99}},{"value":"/ is very helpful.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14116926,"byte_end":14116946,"line_start":469,"line_end":469,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14116947,"byte_end":14116950,"line_start":470,"line_end":470,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14116951,"byte_end":14116958,"line_start":471,"line_end":471,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14116959,"byte_end":14117008,"line_start":472,"line_end":472,"column_start":1,"column_end":50}},{"value":"/ use std::mem::ManuallyDrop;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14117009,"byte_end":14117040,"line_start":473,"line_end":473,"column_start":1,"column_end":32}},{"value":"/ use std::sync::atomic::Ordering::Relaxed;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14117041,"byte_end":14117086,"line_start":474,"line_end":474,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14117087,"byte_end":14117090,"line_start":475,"line_end":475,"column_start":1,"column_end":4}},{"value":"/ struct Stack<T> {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14117091,"byte_end":14117112,"line_start":476,"line_end":476,"column_start":1,"column_end":22}},{"value":"/     head: Atomic<Node<T>>,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14117113,"byte_end":14117143,"line_start":477,"line_end":477,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14117144,"byte_end":14117149,"line_start":478,"line_end":478,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14117150,"byte_end":14117153,"line_start":479,"line_end":479,"column_start":1,"column_end":4}},{"value":"/ struct Node<T> {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14117154,"byte_end":14117174,"line_start":480,"line_end":480,"column_start":1,"column_end":21}},{"value":"/     data: ManuallyDrop<T>,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14117175,"byte_end":14117205,"line_start":481,"line_end":481,"column_start":1,"column_end":31}},{"value":"/     next: Atomic<Node<T>>,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14117206,"byte_end":14117236,"line_start":482,"line_end":482,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14117237,"byte_end":14117242,"line_start":483,"line_end":483,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14117243,"byte_end":14117246,"line_start":484,"line_end":484,"column_start":1,"column_end":4}},{"value":"/ impl<T> Drop for Stack<T> {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14117247,"byte_end":14117278,"line_start":485,"line_end":485,"column_start":1,"column_end":32}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14117279,"byte_end":14117307,"line_start":486,"line_end":486,"column_start":1,"column_end":29}},{"value":"/         unsafe {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14117308,"byte_end":14117328,"line_start":487,"line_end":487,"column_start":1,"column_end":21}},{"value":"/             // Unprotected load.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14117329,"byte_end":14117365,"line_start":488,"line_end":488,"column_start":1,"column_end":37}},{"value":"/             let mut node = self.head.load(Relaxed, epoch::unprotected());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14117366,"byte_end":14117443,"line_start":489,"line_end":489,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14117444,"byte_end":14117447,"line_start":490,"line_end":490,"column_start":1,"column_end":4}},{"value":"/             while let Some(n) = node.as_ref() {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14117448,"byte_end":14117499,"line_start":491,"line_end":491,"column_start":1,"column_end":52}},{"value":"/                 // Unprotected load.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14117500,"byte_end":14117540,"line_start":492,"line_end":492,"column_start":1,"column_end":41}},{"value":"/                 let next = n.next.load(Relaxed, epoch::unprotected());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14117541,"byte_end":14117615,"line_start":493,"line_end":493,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14117616,"byte_end":14117619,"line_start":494,"line_end":494,"column_start":1,"column_end":4}},{"value":"/                 // Take ownership of the node, then drop its data and deallocate it.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14117620,"byte_end":14117708,"line_start":495,"line_end":495,"column_start":1,"column_end":89}},{"value":"/                 let mut o = node.into_owned();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14117709,"byte_end":14117759,"line_start":496,"line_end":496,"column_start":1,"column_end":51}},{"value":"/                 ManuallyDrop::drop(&mut o.data);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14117760,"byte_end":14117812,"line_start":497,"line_end":497,"column_start":1,"column_end":53}},{"value":"/                 drop(o);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14117813,"byte_end":14117841,"line_start":498,"line_end":498,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14117842,"byte_end":14117845,"line_start":499,"line_end":499,"column_start":1,"column_end":4}},{"value":"/                 node = next;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14117846,"byte_end":14117878,"line_start":500,"line_end":500,"column_start":1,"column_end":33}},{"value":"/             }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14117879,"byte_end":14117896,"line_start":501,"line_end":501,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14117897,"byte_end":14117910,"line_start":502,"line_end":502,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14117911,"byte_end":14117920,"line_start":503,"line_end":503,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14117921,"byte_end":14117926,"line_start":504,"line_end":504,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14117927,"byte_end":14117934,"line_start":505,"line_end":505,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14117935,"byte_end":14117938,"line_start":506,"line_end":506,"column_start":1,"column_end":4}},{"value":"/ [`Atomic`]: super::Atomic","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14117939,"byte_end":14117968,"line_start":507,"line_end":507,"column_start":1,"column_end":30}},{"value":"/ [`defer`]: Guard::defer","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14117969,"byte_end":14117996,"line_start":508,"line_end":508,"column_start":1,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14117997,"byte_end":14118006,"line_start":509,"line_end":509,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":893},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/default.rs","byte_start":14171444,"byte_end":14171447,"line_start":31,"line_end":31,"column_start":8,"column_end":11},"name":"pin","qualname":"::default::pin","value":"fn pin() -> Guard","parent":null,"children":[],"decl_id":null,"docs":" Pins the current thread.\n","sig":null,"attributes":[{"value":"/ Pins the current thread.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/default.rs","byte_start":14171398,"byte_end":14171426,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/default.rs","byte_start":14171427,"byte_end":14171436,"line_start":30,"line_end":30,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":895},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/default.rs","byte_start":14171572,"byte_end":14171581,"line_start":37,"line_end":37,"column_start":8,"column_end":17},"name":"is_pinned","qualname":"::default::is_pinned","value":"fn is_pinned() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the current thread is pinned.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the current thread is pinned.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/default.rs","byte_start":14171503,"byte_end":14171554,"line_start":35,"line_end":35,"column_start":1,"column_end":52}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/default.rs","byte_start":14171555,"byte_end":14171564,"line_start":36,"line_end":36,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":897},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/default.rs","byte_start":14171691,"byte_end":14171708,"line_start":42,"line_end":42,"column_start":8,"column_end":25},"name":"default_collector","qualname":"::default::default_collector","value":"fn default_collector() -> &'static Collector","parent":null,"children":[],"decl_id":null,"docs":" Returns the default global collector.\n","sig":null,"attributes":[{"value":"/ Returns the default global collector.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/default.rs","byte_start":14171642,"byte_end":14171683,"line_start":41,"line_end":41,"column_start":1,"column_end":42}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":4694,"byte_end":4704,"line_start":108,"line_end":108,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":14}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14024040,"byte_end":14024060,"line_start":42,"line_end":42,"column_start":52,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14025487,"byte_end":14025495,"line_start":79,"line_end":79,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14029269,"byte_end":14029270,"line_start":194,"line_end":194,"column_start":23,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":143},{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14032491,"byte_end":14032497,"line_start":296,"line_end":296,"column_start":59,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14032562,"byte_end":14032568,"line_start":297,"line_end":297,"column_start":59,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14032584,"byte_end":14032590,"line_start":299,"line_end":299,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14032980,"byte_end":14032986,"line_start":315,"line_end":315,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":179},{"krate":0,"index":181},{"krate":0,"index":183},{"krate":0,"index":186},{"krate":0,"index":191},{"krate":0,"index":196},{"krate":0,"index":199},{"krate":0,"index":203},{"krate":0,"index":207},{"krate":0,"index":209},{"krate":0,"index":211},{"krate":0,"index":213},{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14056633,"byte_end":14056639,"line_start":942,"line_end":942,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14056986,"byte_end":14056992,"line_start":954,"line_end":954,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14057280,"byte_end":14057286,"line_start":962,"line_end":962,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14057633,"byte_end":14057639,"line_start":973,"line_end":973,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14057751,"byte_end":14057757,"line_start":979,"line_end":979,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14058209,"byte_end":14058215,"line_start":997,"line_end":997,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14058318,"byte_end":14058324,"line_start":1003,"line_end":1003,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14058444,"byte_end":14058450,"line_start":1009,"line_end":1009,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14058799,"byte_end":14058805,"line_start":1024,"line_end":1024,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14060018,"byte_end":14060023,"line_start":1065,"line_end":1065,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":253},{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14060530,"byte_end":14060535,"line_start":1088,"line_end":1088,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14062185,"byte_end":14062190,"line_start":1148,"line_end":1148,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":265},{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14063917,"byte_end":14063922,"line_start":1212,"line_end":1212,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14064112,"byte_end":14064117,"line_start":1221,"line_end":1221,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14064395,"byte_end":14064400,"line_start":1232,"line_end":1232,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14064541,"byte_end":14064546,"line_start":1238,"line_end":1238,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":278},{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14064739,"byte_end":14064744,"line_start":1247,"line_end":1247,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14064910,"byte_end":14064915,"line_start":1254,"line_end":1254,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":285}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14065005,"byte_end":14065010,"line_start":1260,"line_end":1260,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14065483,"byte_end":14065488,"line_start":1279,"line_end":1279,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":291}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14065598,"byte_end":14065603,"line_start":1285,"line_end":1285,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14065725,"byte_end":14065730,"line_start":1291,"line_end":1291,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14065836,"byte_end":14065841,"line_start":1297,"line_end":1297,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14066342,"byte_end":14066348,"line_start":1314,"line_end":1314,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14066522,"byte_end":14066528,"line_start":1323,"line_end":1323,"column_start":38,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14066583,"byte_end":14066589,"line_start":1325,"line_end":1325,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":313},{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14066835,"byte_end":14066841,"line_start":1340,"line_end":1340,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14067529,"byte_end":14067535,"line_start":1364,"line_end":1364,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14075680,"byte_end":14075686,"line_start":1624,"line_end":1624,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":333}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14076306,"byte_end":14076312,"line_start":1647,"line_end":1647,"column_start":62,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14076439,"byte_end":14076445,"line_start":1653,"line_end":1653,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14076519,"byte_end":14076525,"line_start":1655,"line_end":1655,"column_start":63,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14076690,"byte_end":14076696,"line_start":1661,"line_end":1661,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14076844,"byte_end":14076850,"line_start":1667,"line_end":1667,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14077153,"byte_end":14077159,"line_start":1678,"line_end":1678,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14077350,"byte_end":14077356,"line_start":1684,"line_end":1684,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":355}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":14078592,"byte_end":14078601,"line_start":26,"line_end":26,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":14078626,"byte_end":14078635,"line_start":27,"line_end":27,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":14078657,"byte_end":14078666,"line_start":29,"line_end":29,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":378}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":14078780,"byte_end":14078789,"line_start":37,"line_end":37,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":380},{"krate":0,"index":381}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":14079031,"byte_end":14079040,"line_start":49,"line_end":49,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":14079238,"byte_end":14079247,"line_start":58,"line_end":58,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":14079375,"byte_end":14079384,"line_start":64,"line_end":64,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":387}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":14079558,"byte_end":14079567,"line_start":70,"line_end":70,"column_start":13,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":14079678,"byte_end":14079689,"line_start":77,"line_end":77,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":14080149,"byte_end":14080160,"line_start":97,"line_end":97,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":396}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":14080307,"byte_end":14080318,"line_start":106,"line_end":106,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/deferred.rs","byte_start":14091065,"byte_end":14091073,"line_start":25,"line_end":25,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":427}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/deferred.rs","byte_start":14091197,"byte_end":14091205,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":429},{"krate":0,"index":431},{"krate":0,"index":437}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/epoch.rs","byte_start":14095290,"byte_end":14095295,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/epoch.rs","byte_start":14097099,"byte_end":14097110,"line_start":82,"line_end":82,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14101043,"byte_end":14101048,"line_start":75,"line_end":75,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":482},{"krate":0,"index":485},{"krate":0,"index":489},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":497}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14114794,"byte_end":14114799,"line_start":408,"line_end":408,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14114969,"byte_end":14114974,"line_start":417,"line_end":417,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14118311,"byte_end":14118323,"line_start":515,"line_end":515,"column_start":26,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/internal.rs","byte_start":14121479,"byte_end":14121482,"line_start":72,"line_end":72,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/internal.rs","byte_start":14121492,"byte_end":14121495,"line_start":74,"line_end":74,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/internal.rs","byte_start":14122444,"byte_end":14122447,"line_start":109,"line_end":109,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/internal.rs","byte_start":14122599,"byte_end":14122602,"line_start":118,"line_end":118,"column_start":15,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":607}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/internal.rs","byte_start":14122991,"byte_end":14122994,"line_start":130,"line_end":130,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/internal.rs","byte_start":14123401,"byte_end":14123410,"line_start":146,"line_end":146,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/internal.rs","byte_start":14123420,"byte_end":14123429,"line_start":148,"line_end":148,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/internal.rs","byte_start":14124111,"byte_end":14124117,"line_start":169,"line_end":169,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":623}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/internal.rs","byte_start":14129340,"byte_end":14129345,"line_start":311,"line_end":311,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":641},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":646},{"krate":0,"index":647},{"krate":0,"index":648}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/internal.rs","byte_start":14138132,"byte_end":14138137,"line_start":538,"line_end":538,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":654}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/sync/list.rs","byte_start":14144202,"byte_end":14144207,"line_start":131,"line_end":131,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":698}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/sync/list.rs","byte_start":14144343,"byte_end":14144348,"line_start":140,"line_end":140,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":700}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/sync/list.rs","byte_start":14144861,"byte_end":14144865,"line_start":153,"line_end":153,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":707}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/sync/list.rs","byte_start":14147448,"byte_end":14147452,"line_start":218,"line_end":218,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":712}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/sync/list.rs","byte_start":14147984,"byte_end":14147988,"line_start":235,"line_end":235,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":717},{"krate":0,"index":718}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/sync/queue.rs","byte_start":14157809,"byte_end":14157814,"line_start":40,"line_end":40,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/sync/queue.rs","byte_start":14157851,"byte_end":14157856,"line_start":41,"line_end":41,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/sync/queue.rs","byte_start":14157872,"byte_end":14157877,"line_start":43,"line_end":43,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":768},{"krate":0,"index":772},{"krate":0,"index":773}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/sync/queue.rs","byte_start":14163797,"byte_end":14163802,"line_start":204,"line_end":204,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":777}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":4694,"byte_end":4704,"line_start":108,"line_end":108,"column_start":17,"column_end":27},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":34},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14024040,"byte_end":14024060,"line_start":42,"line_end":42,"column_start":52,"column_end":72},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":100},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14025487,"byte_end":14025495,"line_start":79,"line_end":79,"column_start":32,"column_end":40},"kind":{"Impl":{"id":2}},"from":{"krate":2,"index":47379},"to":{"krate":0,"index":110}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14029269,"byte_end":14029270,"line_start":194,"line_end":194,"column_start":23,"column_end":24},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":137},"to":{"krate":0,"index":127}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14032491,"byte_end":14032497,"line_start":296,"line_end":296,"column_start":59,"column_end":65},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":3179}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14032562,"byte_end":14032568,"line_start":297,"line_end":297,"column_start":59,"column_end":65},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":3191}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14032584,"byte_end":14032590,"line_start":299,"line_end":299,"column_start":9,"column_end":15},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":161},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14032980,"byte_end":14032986,"line_start":315,"line_end":315,"column_start":29,"column_end":35},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":161},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14056633,"byte_end":14056639,"line_start":942,"line_end":942,"column_start":44,"column_end":50},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14056986,"byte_end":14056992,"line_start":954,"line_end":954,"column_start":46,"column_end":52},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":10127}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14057280,"byte_end":14057286,"line_start":962,"line_end":962,"column_start":39,"column_end":45},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14057633,"byte_end":14057639,"line_start":973,"line_end":973,"column_start":41,"column_end":47},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14057751,"byte_end":14057757,"line_start":979,"line_end":979,"column_start":48,"column_end":54},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14058209,"byte_end":14058215,"line_start":997,"line_end":997,"column_start":26,"column_end":32},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14058318,"byte_end":14058324,"line_start":1003,"line_end":1003,"column_start":21,"column_end":27},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14058444,"byte_end":14058450,"line_start":1009,"line_end":1009,"column_start":57,"column_end":63},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14058799,"byte_end":14058805,"line_start":1024,"line_end":1024,"column_start":28,"column_end":34},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14060018,"byte_end":14060023,"line_start":1065,"line_end":1065,"column_start":44,"column_end":49},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":247},"to":{"krate":0,"index":243}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14060530,"byte_end":14060535,"line_start":1088,"line_end":1088,"column_start":9,"column_end":14},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":247},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14062185,"byte_end":14062190,"line_start":1148,"line_end":1148,"column_start":29,"column_end":34},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":247},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14063917,"byte_end":14063922,"line_start":1212,"line_end":1212,"column_start":38,"column_end":43},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":3422}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14064112,"byte_end":14064117,"line_start":1221,"line_end":1221,"column_start":44,"column_end":49},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14064395,"byte_end":14064400,"line_start":1232,"line_end":1232,"column_start":26,"column_end":31},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14064541,"byte_end":14064546,"line_start":1238,"line_end":1238,"column_start":39,"column_end":44},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":3398}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14064739,"byte_end":14064744,"line_start":1247,"line_end":1247,"column_start":42,"column_end":47},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":3411}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14064910,"byte_end":14064915,"line_start":1254,"line_end":1254,"column_start":21,"column_end":26},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14065005,"byte_end":14065010,"line_start":1260,"line_end":1260,"column_start":26,"column_end":31},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14065483,"byte_end":14065488,"line_start":1279,"line_end":1279,"column_start":43,"column_end":48},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":2776}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14065598,"byte_end":14065603,"line_start":1285,"line_end":1285,"column_start":46,"column_end":51},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":2779}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14065725,"byte_end":14065730,"line_start":1291,"line_end":1291,"column_start":42,"column_end":47},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":3076}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14065836,"byte_end":14065841,"line_start":1297,"line_end":1297,"column_start":42,"column_end":47},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":3079}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14066342,"byte_end":14066348,"line_start":1314,"line_end":1314,"column_start":39,"column_end":45},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14066522,"byte_end":14066528,"line_start":1323,"line_end":1323,"column_start":38,"column_end":44},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":3189}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14066583,"byte_end":14066589,"line_start":1325,"line_end":1325,"column_start":44,"column_end":50},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":301},"to":{"krate":0,"index":243}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14066835,"byte_end":14066841,"line_start":1340,"line_end":1340,"column_start":13,"column_end":19},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14067529,"byte_end":14067535,"line_start":1364,"line_end":1364,"column_start":33,"column_end":39},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14075680,"byte_end":14075686,"line_start":1624,"line_end":1624,"column_start":28,"column_end":34},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14076306,"byte_end":14076312,"line_start":1647,"line_end":1647,"column_start":62,"column_end":68},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14076439,"byte_end":14076445,"line_start":1653,"line_end":1653,"column_start":36,"column_end":42},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":2836}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14076519,"byte_end":14076525,"line_start":1655,"line_end":1655,"column_start":63,"column_end":69},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":2877}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14076690,"byte_end":14076696,"line_start":1661,"line_end":1661,"column_start":37,"column_end":43},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":2867}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14076844,"byte_end":14076850,"line_start":1667,"line_end":1667,"column_start":44,"column_end":50},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14077153,"byte_end":14077159,"line_start":1678,"line_end":1678,"column_start":46,"column_end":52},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":10127}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":14077350,"byte_end":14077356,"line_start":1684,"line_end":1684,"column_start":41,"column_end":47},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":14078592,"byte_end":14078601,"line_start":26,"line_end":26,"column_start":22,"column_end":31},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":373},"to":{"krate":2,"index":3179}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":14078626,"byte_end":14078635,"line_start":27,"line_end":27,"column_start":22,"column_end":31},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":373},"to":{"krate":2,"index":3191}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":14078657,"byte_end":14078666,"line_start":29,"line_end":29,"column_start":18,"column_end":27},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":373},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":14078780,"byte_end":14078789,"line_start":37,"line_end":37,"column_start":6,"column_end":15},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":373},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":14079031,"byte_end":14079040,"line_start":49,"line_end":49,"column_start":16,"column_end":25},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":373},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":14079238,"byte_end":14079247,"line_start":58,"line_end":58,"column_start":21,"column_end":30},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":373},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":14079375,"byte_end":14079384,"line_start":64,"line_end":64,"column_start":20,"column_end":29},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":373},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":14079558,"byte_end":14079567,"line_start":70,"line_end":70,"column_start":13,"column_end":22},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":373},"to":{"krate":2,"index":2836}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":14079678,"byte_end":14079689,"line_start":77,"line_end":77,"column_start":6,"column_end":17},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":389},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":14080149,"byte_end":14080160,"line_start":97,"line_end":97,"column_start":15,"column_end":26},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":389},"to":{"krate":2,"index":3422}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":14080307,"byte_end":14080318,"line_start":106,"line_end":106,"column_start":21,"column_end":32},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":389},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/deferred.rs","byte_start":14091065,"byte_end":14091073,"line_start":25,"line_end":25,"column_start":21,"column_end":29},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":422},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/deferred.rs","byte_start":14091197,"byte_end":14091205,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":422},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/epoch.rs","byte_start":14095290,"byte_end":14095295,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":818},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/epoch.rs","byte_start":14097099,"byte_end":14097110,"line_start":82,"line_end":82,"column_start":6,"column_end":17},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":834},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14101043,"byte_end":14101048,"line_start":75,"line_end":75,"column_start":6,"column_end":11},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":479},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14114794,"byte_end":14114799,"line_start":408,"line_end":408,"column_start":15,"column_end":20},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":479},"to":{"krate":2,"index":3422}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14114969,"byte_end":14114974,"line_start":417,"line_end":417,"column_start":21,"column_end":26},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":479},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":14118311,"byte_end":14118323,"line_start":515,"line_end":515,"column_start":26,"column_end":38},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":504},"to":{"krate":2,"index":3191}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/internal.rs","byte_start":14121479,"byte_end":14121482,"line_start":72,"line_end":72,"column_start":22,"column_end":25},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":593},"to":{"krate":2,"index":3179}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/internal.rs","byte_start":14121492,"byte_end":14121495,"line_start":74,"line_end":74,"column_start":6,"column_end":9},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":593},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/internal.rs","byte_start":14122444,"byte_end":14122447,"line_start":109,"line_end":109,"column_start":18,"column_end":21},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":593},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/internal.rs","byte_start":14122599,"byte_end":14122602,"line_start":118,"line_end":118,"column_start":15,"column_end":18},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":593},"to":{"krate":2,"index":3422}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/internal.rs","byte_start":14122991,"byte_end":14122994,"line_start":130,"line_end":130,"column_start":21,"column_end":24},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":593},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/internal.rs","byte_start":14123401,"byte_end":14123410,"line_start":146,"line_end":146,"column_start":22,"column_end":31},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":840},"to":{"krate":2,"index":3191}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/internal.rs","byte_start":14123420,"byte_end":14123429,"line_start":148,"line_end":148,"column_start":6,"column_end":15},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":840},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/internal.rs","byte_start":14124111,"byte_end":14124117,"line_start":169,"line_end":169,"column_start":6,"column_end":12},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":613},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/internal.rs","byte_start":14129340,"byte_end":14129345,"line_start":311,"line_end":311,"column_start":6,"column_end":11},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":624},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/internal.rs","byte_start":14138132,"byte_end":14138137,"line_start":538,"line_end":538,"column_start":27,"column_end":32},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":624},"to":{"krate":0,"index":683}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/sync/list.rs","byte_start":14144202,"byte_end":14144207,"line_start":131,"line_end":131,"column_start":18,"column_end":23},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":847},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/sync/list.rs","byte_start":14144343,"byte_end":14144348,"line_start":140,"line_end":140,"column_start":6,"column_end":11},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":847},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/sync/list.rs","byte_start":14144861,"byte_end":14144865,"line_start":153,"line_end":153,"column_start":26,"column_end":30},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":851},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/sync/list.rs","byte_start":14147448,"byte_end":14147452,"line_start":218,"line_end":218,"column_start":35,"column_end":39},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":851},"to":{"krate":2,"index":3422}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/sync/list.rs","byte_start":14147984,"byte_end":14147988,"line_start":235,"line_end":235,"column_start":47,"column_end":51},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":688},"to":{"krate":2,"index":8474}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/sync/queue.rs","byte_start":14157809,"byte_end":14157814,"line_start":40,"line_end":40,"column_start":31,"column_end":36},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":868},"to":{"krate":2,"index":3191}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/sync/queue.rs","byte_start":14157851,"byte_end":14157856,"line_start":41,"line_end":41,"column_start":31,"column_end":36},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":868},"to":{"krate":2,"index":3179}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/sync/queue.rs","byte_start":14157872,"byte_end":14157877,"line_start":43,"line_end":43,"column_start":9,"column_end":14},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":868},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/sync/queue.rs","byte_start":14163797,"byte_end":14163802,"line_start":204,"line_end":204,"column_start":18,"column_end":23},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":868},"to":{"krate":2,"index":3422}}]}