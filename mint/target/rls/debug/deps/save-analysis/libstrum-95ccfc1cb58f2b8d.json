{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1","program":"/Users/air/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","strum","--edition=2018","/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"derive\"","--cfg","feature=\"std\"","--cfg","feature=\"strum_macros\"","-C","metadata=95ccfc1cb58f2b8d","-C","extra-filename=-95ccfc1cb58f2b8d","--out-dir","/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps","-L","dependency=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps","--extern","strum_macros=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libstrum_macros-c9556ff9a4c7f9e4.dylib","--cap-lints","allow","--error-format=json","--sysroot","/Users/air/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libstrum-95ccfc1cb58f2b8d.rmeta"},"prelude":{"crate_id":{"name":"strum","disambiguator":[18238615760261947004,0]},"crate_root":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src","external_crates":[{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[4485569597606079733,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[9994580471200982198,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13944031075627487246,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5133993387825513881,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[14116380118705386640,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6269322086078963025,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16152481959168563413,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7897074911849024150,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[7299104579826168146,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2669544452907545777,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[14288251452253695433,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[13943810077905921301,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[2237926517141734526,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[5541021343498733002,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[7188895526679788668,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[15555671723428220450,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[13375000548276363576,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[8920282723255285566,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[2397004371161247654,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","num":20,"id":{"name":"strum_macros","disambiguator":[3617585798672730562,0]}}],"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":0,"byte_end":6920,"line_start":1,"line_end":232,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":6097,"byte_end":6098,"line_start":202,"line_end":202,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":0,"byte_end":6920,"line_start":1,"line_end":232,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":34},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":43},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":16},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":25},{"krate":0,"index":27},{"krate":0,"index":28}],"decl_id":null,"docs":" # Strum","sig":null,"attributes":[{"value":"/ # Strum","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":0,"byte_end":11,"line_start":1,"line_end":1,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":12,"byte_end":15,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ [![Build Status](https://travis-ci.org/Peternator7/strum.svg?branch=master)](https://travis-ci.org/Peternator7/strum)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":16,"byte_end":137,"line_start":3,"line_end":3,"column_start":1,"column_end":122}},{"value":"/ [![Latest Version](https://img.shields.io/crates/v/strum.svg)](https://crates.io/crates/strum)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":138,"byte_end":236,"line_start":4,"line_end":4,"column_start":1,"column_end":99}},{"value":"/ [![Rust Documentation](https://docs.rs/strum/badge.svg)](https://docs.rs/strum)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":237,"byte_end":320,"line_start":5,"line_end":5,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":321,"byte_end":324,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Strum is a set of macros and traits for working with","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":325,"byte_end":381,"line_start":7,"line_end":7,"column_start":1,"column_end":57}},{"value":"/ enums and strings easier in Rust.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":382,"byte_end":419,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":420,"byte_end":423,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The full version of the README can be found on [Github](https://github.com/Peternator7/strum).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":424,"byte_end":522,"line_start":10,"line_end":10,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":523,"byte_end":526,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Including Strum in Your Project","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":527,"byte_end":564,"line_start":12,"line_end":12,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":565,"byte_end":568,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Import strum and `strum_macros` into your project by adding the following lines to your","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":569,"byte_end":660,"line_start":14,"line_end":14,"column_start":1,"column_end":92}},{"value":"/ Cargo.toml. `strum_macros` contains the macros needed to derive all the traits in Strum.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":661,"byte_end":753,"line_start":15,"line_end":15,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":754,"byte_end":757,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":758,"byte_end":769,"line_start":17,"line_end":17,"column_start":1,"column_end":12}},{"value":"/ [dependencies]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":770,"byte_end":788,"line_start":18,"line_end":18,"column_start":1,"column_end":19}},{"value":"/ strum = \"0.24\"","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":789,"byte_end":807,"line_start":19,"line_end":19,"column_start":1,"column_end":19}},{"value":"/ strum_macros = \"0.24\"","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":808,"byte_end":833,"line_start":20,"line_end":20,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":834,"byte_end":837,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # You can also access strum_macros exports directly through strum using the \"derive\" feature","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":838,"byte_end":934,"line_start":22,"line_end":22,"column_start":1,"column_end":97}},{"value":"/ strum = { version = \"0.24\", features = [\"derive\"] }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":935,"byte_end":990,"line_start":23,"line_end":23,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":991,"byte_end":998,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":999,"byte_end":1002,"line_start":25,"line_end":25,"column_start":1,"column_end":4}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"additional_attributes","qualname":"::additional_attributes","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","parent":null,"children":[],"decl_id":null,"docs":" # Documentation for Additional Attributes","sig":null,"attributes":[{"value":"/ # Documentation for Additional Attributes","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":6922,"byte_end":6967,"line_start":1,"line_end":1,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":6968,"byte_end":6971,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ## Attributes on Enums","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":6972,"byte_end":6998,"line_start":3,"line_end":3,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":6999,"byte_end":7002,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Strum supports several custom attributes to modify the generated code. At the enum level, the following attributes are supported:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":7003,"byte_end":7136,"line_start":5,"line_end":5,"column_start":1,"column_end":134}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":7137,"byte_end":7140,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ - `#[strum(serialize_all = \"case_style\")]` attribute can be used to change the case used when serializing to and deserializing","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":7141,"byte_end":7271,"line_start":7,"line_end":7,"column_start":1,"column_end":131}},{"value":"/   from strings. This feature is enabled by [withoutboats/heck](https://github.com/withoutboats/heck) and supported case styles are:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":7272,"byte_end":7407,"line_start":8,"line_end":8,"column_start":1,"column_end":136}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":7408,"byte_end":7411,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/   - `camelCase`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":7412,"byte_end":7431,"line_start":10,"line_end":10,"column_start":1,"column_end":20}},{"value":"/   - `PascalCase`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":7432,"byte_end":7452,"line_start":11,"line_end":11,"column_start":1,"column_end":21}},{"value":"/   - `kebab-case`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":7453,"byte_end":7473,"line_start":12,"line_end":12,"column_start":1,"column_end":21}},{"value":"/   - `snake_case`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":7474,"byte_end":7494,"line_start":13,"line_end":13,"column_start":1,"column_end":21}},{"value":"/   - `SCREAMING_SNAKE_CASE`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":7495,"byte_end":7525,"line_start":14,"line_end":14,"column_start":1,"column_end":31}},{"value":"/   - `SCREAMING-KEBAB-CASE`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":7526,"byte_end":7556,"line_start":15,"line_end":15,"column_start":1,"column_end":31}},{"value":"/   - `lowercase`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":7557,"byte_end":7576,"line_start":16,"line_end":16,"column_start":1,"column_end":20}},{"value":"/   - `UPPERCASE`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":7577,"byte_end":7596,"line_start":17,"line_end":17,"column_start":1,"column_end":20}},{"value":"/   - `title_case`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":7597,"byte_end":7617,"line_start":18,"line_end":18,"column_start":1,"column_end":21}},{"value":"/   - `mixed_case`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":7618,"byte_end":7638,"line_start":19,"line_end":19,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":7639,"byte_end":7642,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/   ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":7643,"byte_end":7656,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/   use std::string::ToString;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":7657,"byte_end":7689,"line_start":22,"line_end":22,"column_start":1,"column_end":33}},{"value":"/   use strum;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":7690,"byte_end":7706,"line_start":23,"line_end":23,"column_start":1,"column_end":17}},{"value":"/   use strum_macros;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":7707,"byte_end":7730,"line_start":24,"line_end":24,"column_start":1,"column_end":24}},{"value":"/   ","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":7731,"byte_end":7737,"line_start":25,"line_end":25,"column_start":1,"column_end":7}},{"value":"/   #[derive(Debug, Eq, PartialEq, strum_macros::ToString)]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":7738,"byte_end":7799,"line_start":26,"line_end":26,"column_start":1,"column_end":62}},{"value":"/   #[strum(serialize_all = \"snake_case\")]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":7800,"byte_end":7844,"line_start":27,"line_end":27,"column_start":1,"column_end":45}},{"value":"/   enum Brightness {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":7845,"byte_end":7868,"line_start":28,"line_end":28,"column_start":1,"column_end":24}},{"value":"/       DarkBlack,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":7869,"byte_end":7889,"line_start":29,"line_end":29,"column_start":1,"column_end":21}},{"value":"/       Dim {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":7890,"byte_end":7905,"line_start":30,"line_end":30,"column_start":1,"column_end":16}},{"value":"/           glow: usize,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":7906,"byte_end":7932,"line_start":31,"line_end":31,"column_start":1,"column_end":27}},{"value":"/       },","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":7933,"byte_end":7945,"line_start":32,"line_end":32,"column_start":1,"column_end":13}},{"value":"/       #[strum(serialize = \"bright\")]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":7946,"byte_end":7986,"line_start":33,"line_end":33,"column_start":1,"column_end":41}},{"value":"/       BrightWhite,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":7987,"byte_end":8009,"line_start":34,"line_end":34,"column_start":1,"column_end":23}},{"value":"/   }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":8010,"byte_end":8017,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/   ","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":8018,"byte_end":8024,"line_start":36,"line_end":36,"column_start":1,"column_end":7}},{"value":"/   assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":8025,"byte_end":8042,"line_start":37,"line_end":37,"column_start":1,"column_end":18}},{"value":"/       String::from(\"dark_black\"),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":8043,"byte_end":8080,"line_start":38,"line_end":38,"column_start":1,"column_end":38}},{"value":"/       Brightness::DarkBlack.to_string().as_ref()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":8081,"byte_end":8133,"line_start":39,"line_end":39,"column_start":1,"column_end":53}},{"value":"/   );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":8134,"byte_end":8142,"line_start":40,"line_end":40,"column_start":1,"column_end":9}},{"value":"/   assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":8143,"byte_end":8160,"line_start":41,"line_end":41,"column_start":1,"column_end":18}},{"value":"/       String::from(\"dim\"),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":8161,"byte_end":8191,"line_start":42,"line_end":42,"column_start":1,"column_end":31}},{"value":"/       Brightness::Dim { glow: 0 }.to_string().as_ref()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":8192,"byte_end":8250,"line_start":43,"line_end":43,"column_start":1,"column_end":59}},{"value":"/   );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":8251,"byte_end":8259,"line_start":44,"line_end":44,"column_start":1,"column_end":9}},{"value":"/   assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":8260,"byte_end":8277,"line_start":45,"line_end":45,"column_start":1,"column_end":18}},{"value":"/       String::from(\"bright\"),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":8278,"byte_end":8311,"line_start":46,"line_end":46,"column_start":1,"column_end":34}},{"value":"/       Brightness::BrightWhite.to_string().as_ref()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":8312,"byte_end":8366,"line_start":47,"line_end":47,"column_start":1,"column_end":55}},{"value":"/   );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":8367,"byte_end":8375,"line_start":48,"line_end":48,"column_start":1,"column_end":9}},{"value":"/   ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":8376,"byte_end":8385,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":8386,"byte_end":8389,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ - You can also apply the `#[strum(ascii_case_insensitive)]` attribute to the enum,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":8390,"byte_end":8476,"line_start":51,"line_end":51,"column_start":1,"column_end":87}},{"value":"/   and this has the same effect of applying it to every variant.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":8477,"byte_end":8544,"line_start":52,"line_end":52,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":8545,"byte_end":8548,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ## Attributes on Variants","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":8549,"byte_end":8578,"line_start":54,"line_end":54,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":8579,"byte_end":8582,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ Custom attributes are applied to a variant by adding `#[strum(parameter=\"value\")]` to the variant.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":8583,"byte_end":8685,"line_start":56,"line_end":56,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":8686,"byte_end":8689,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ - `serialize=\"...\"`: Changes the text that `FromStr()` looks for when parsing a string. This attribute can","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":8690,"byte_end":8800,"line_start":58,"line_end":58,"column_start":1,"column_end":111}},{"value":"/    be applied multiple times to an element and the enum variant will be parsed if any of them match.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":8801,"byte_end":8905,"line_start":59,"line_end":59,"column_start":1,"column_end":105}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":8906,"byte_end":8909,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ - `to_string=\"...\"`: Similar to `serialize`. This value will be included when using `FromStr()`. More importantly,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":8910,"byte_end":9028,"line_start":61,"line_end":61,"column_start":1,"column_end":119}},{"value":"/    this specifies what text to use when calling `variant.to_string()` with the `Display` derivation, or when calling `variant.as_ref()` with `AsRefStr`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":9029,"byte_end":9185,"line_start":62,"line_end":62,"column_start":1,"column_end":157}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":9186,"byte_end":9189,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ - `default`: Applied to a single variant of an enum. The variant must be a Tuple-like","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":9190,"byte_end":9279,"line_start":64,"line_end":64,"column_start":1,"column_end":90}},{"value":"/    variant with a single piece of data that can be create from a `&str` i.e. `T: From<&str>`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":9280,"byte_end":9377,"line_start":65,"line_end":65,"column_start":1,"column_end":98}},{"value":"/    The generated code will now return the variant with the input string captured as shown below","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":9378,"byte_end":9477,"line_start":66,"line_end":66,"column_start":1,"column_end":100}},{"value":"/    instead of failing.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":9478,"byte_end":9504,"line_start":67,"line_end":67,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":9505,"byte_end":9508,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/     ```text","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":9509,"byte_end":9524,"line_start":69,"line_end":69,"column_start":1,"column_end":16}},{"value":"/     // Replaces this:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":9525,"byte_end":9550,"line_start":70,"line_end":70,"column_start":1,"column_end":26}},{"value":"/     _ => Err(strum::ParseError::VariantNotFound)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":9551,"byte_end":9603,"line_start":71,"line_end":71,"column_start":1,"column_end":53}},{"value":"/     // With this in generated code:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":9604,"byte_end":9643,"line_start":72,"line_end":72,"column_start":1,"column_end":40}},{"value":"/     default => Ok(Variant(default.into()))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":9644,"byte_end":9690,"line_start":73,"line_end":73,"column_start":1,"column_end":47}},{"value":"/     ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":9691,"byte_end":9702,"line_start":74,"line_end":74,"column_start":1,"column_end":12}},{"value":"/     The plugin will fail if the data doesn't implement From<&str>. You can only have one `default`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":9703,"byte_end":9805,"line_start":75,"line_end":75,"column_start":1,"column_end":103}},{"value":"/     on your enum.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":9806,"byte_end":9827,"line_start":76,"line_end":76,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":9828,"byte_end":9831,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ - `disabled`: removes variant from generated code.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":9832,"byte_end":9886,"line_start":78,"line_end":78,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":9887,"byte_end":9890,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ - `ascii_case_insensitive`: makes the comparison to this variant case insensitive (ASCII only).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":9891,"byte_end":9990,"line_start":80,"line_end":80,"column_start":1,"column_end":100}},{"value":"/   If the whole enum is marked `ascii_case_insensitive`, you can specify `ascii_case_insensitive = false`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":9991,"byte_end":10099,"line_start":81,"line_end":81,"column_start":1,"column_end":109}},{"value":"/   to disable case insensitivity on this v ariant.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":10100,"byte_end":10153,"line_start":82,"line_end":82,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":10154,"byte_end":10157,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ - `message=\"..\"`: Adds a message to enum variant. This is used in conjunction with the `EnumMessage`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":10158,"byte_end":10262,"line_start":84,"line_end":84,"column_start":1,"column_end":105}},{"value":"/    trait to associate a message with a variant. If `detailed_message` is not provided,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":10263,"byte_end":10353,"line_start":85,"line_end":85,"column_start":1,"column_end":91}},{"value":"/    then `message` will also be returned when `get_detailed_message` is called.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":10354,"byte_end":10436,"line_start":86,"line_end":86,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":10437,"byte_end":10440,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ - `detailed_message=\"..\"`: Adds a more detailed message to a variant. If this value is omitted, then","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":10441,"byte_end":10545,"line_start":88,"line_end":88,"column_start":1,"column_end":105}},{"value":"/    `message` will be used in it's place.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":10546,"byte_end":10590,"line_start":89,"line_end":89,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":10591,"byte_end":10594,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ - Structured documentation, as in `/// ...`: If using `EnumMessage`, is accessible via get_documentation().","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":10595,"byte_end":10706,"line_start":91,"line_end":91,"column_start":1,"column_end":112}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":10707,"byte_end":10710,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ - `props(key=\"value\")`: Enables associating additional information with a given variant.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/additional_attributes.rs","byte_start":10711,"byte_end":10803,"line_start":93,"line_end":93,"column_start":1,"column_end":93}}]},{"kind":"TupleVariant","id":{"krate":0,"index":30},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":1449,"byte_end":1464,"line_start":41,"line_end":41,"column_start":5,"column_end":20},"name":"VariantNotFound","qualname":"::ParseError::VariantNotFound","value":"ParseError::VariantNotFound","parent":{"krate":0,"index":29},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":29},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":1432,"byte_end":1442,"line_start":40,"line_end":40,"column_start":10,"column_end":20},"name":"ParseError","qualname":"::ParseError","value":"enum ParseError { VariantNotFound, }","parent":null,"children":[{"krate":0,"index":30}],"decl_id":null,"docs":" The `ParseError` enum is a collection of all the possible reasons\n an enum can fail to parse from a string.\n","sig":null,"attributes":[{"value":"/ The `ParseError` enum is a collection of all the possible reasons","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":1257,"byte_end":1326,"line_start":37,"line_end":37,"column_start":1,"column_end":70}},{"value":"/ an enum can fail to parse from a string.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":1327,"byte_end":1371,"line_start":38,"line_end":38,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":5},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":1540,"byte_end":1543,"line_start":46,"line_end":46,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ParseError as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut std::fmt::Formatter) -> Result<(), std::fmt::Error>","parent":{"krate":2,"index":10117},"children":[],"decl_id":{"krate":2,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":1920,"byte_end":1931,"line_start":57,"line_end":57,"column_start":8,"column_end":19},"name":"description","qualname":"<ParseError as std::error::Error>::description","value":"fn description(&Self) -> &str","parent":{"krate":1,"index":2569},"children":[],"decl_id":{"krate":1,"index":2573},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":8},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":3001,"byte_end":3017,"line_start":98,"line_end":98,"column_start":11,"column_end":27},"name":"IntoEnumIterator","qualname":"::IntoEnumIterator","value":"IntoEnumIterator: Sized","parent":null,"children":[{"krate":0,"index":9},{"krate":0,"index":10}],"decl_id":null,"docs":" This trait designates that an `Enum` can be iterated over. It can\n be auto generated using `strum_macros` on your behalf.","sig":null,"attributes":[{"value":"/ This trait designates that an `Enum` can be iterated over. It can","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":2232,"byte_end":2301,"line_start":67,"line_end":67,"column_start":1,"column_end":70}},{"value":"/ be auto generated using `strum_macros` on your behalf.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":2302,"byte_end":2360,"line_start":68,"line_end":68,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":2361,"byte_end":2364,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":2365,"byte_end":2378,"line_start":70,"line_end":70,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":2379,"byte_end":2382,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":2383,"byte_end":2394,"line_start":72,"line_end":72,"column_start":1,"column_end":12}},{"value":"/ # use std::fmt::Debug;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":2395,"byte_end":2421,"line_start":73,"line_end":73,"column_start":1,"column_end":27}},{"value":"/ // You need to bring the type into scope to use it!!!","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":2422,"byte_end":2479,"line_start":74,"line_end":74,"column_start":1,"column_end":58}},{"value":"/ use strum::{EnumIter, IntoEnumIterator};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":2480,"byte_end":2524,"line_start":75,"line_end":75,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":2525,"byte_end":2528,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ #[derive(EnumIter, Debug)]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":2529,"byte_end":2559,"line_start":77,"line_end":77,"column_start":1,"column_end":31}},{"value":"/ enum Color {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":2560,"byte_end":2576,"line_start":78,"line_end":78,"column_start":1,"column_end":17}},{"value":"/     Red,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":2577,"byte_end":2589,"line_start":79,"line_end":79,"column_start":1,"column_end":13}},{"value":"/     Green { range: usize },","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":2590,"byte_end":2621,"line_start":80,"line_end":80,"column_start":1,"column_end":32}},{"value":"/     Blue(usize),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":2622,"byte_end":2642,"line_start":81,"line_end":81,"column_start":1,"column_end":21}},{"value":"/     Yellow,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":2643,"byte_end":2658,"line_start":82,"line_end":82,"column_start":1,"column_end":16}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":2659,"byte_end":2664,"line_start":83,"line_end":83,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":2665,"byte_end":2668,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ // Iterate over the items in an enum and perform some function on them.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":2669,"byte_end":2744,"line_start":85,"line_end":85,"column_start":1,"column_end":76}},{"value":"/ fn generic_iterator<E, F>(pred: F)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":2745,"byte_end":2783,"line_start":86,"line_end":86,"column_start":1,"column_end":39}},{"value":"/ where","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":2784,"byte_end":2793,"line_start":87,"line_end":87,"column_start":1,"column_end":10}},{"value":"/     E: IntoEnumIterator,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":2794,"byte_end":2822,"line_start":88,"line_end":88,"column_start":1,"column_end":29}},{"value":"/     F: Fn(E),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":2823,"byte_end":2840,"line_start":89,"line_end":89,"column_start":1,"column_end":18}},{"value":"/ {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":2841,"byte_end":2846,"line_start":90,"line_end":90,"column_start":1,"column_end":6}},{"value":"/     for e in E::iter() {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":2847,"byte_end":2875,"line_start":91,"line_end":91,"column_start":1,"column_end":29}},{"value":"/         pred(e)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":2876,"byte_end":2895,"line_start":92,"line_end":92,"column_start":1,"column_end":20}},{"value":"/     }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":2896,"byte_end":2905,"line_start":93,"line_end":93,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":2906,"byte_end":2911,"line_start":94,"line_end":94,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":2912,"byte_end":2915,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ generic_iterator::<Color, _>(|color| println!(\"{:?}\", color));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":2916,"byte_end":2982,"line_start":96,"line_end":96,"column_start":1,"column_end":67}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":2983,"byte_end":2990,"line_start":97,"line_end":97,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":9},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":3036,"byte_end":3044,"line_start":99,"line_end":99,"column_start":10,"column_end":18},"name":"Iterator","qualname":"::IntoEnumIterator::Iterator","value":"type Iterator: Iterator<Item = Self>;","parent":{"krate":0,"index":8},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":3077,"byte_end":3081,"line_start":101,"line_end":101,"column_start":8,"column_end":12},"name":"iter","qualname":"::IntoEnumIterator::iter","value":"fn iter() -> Self::Iterator","parent":{"krate":0,"index":8},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":11},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":3827,"byte_end":3838,"line_start":128,"line_end":128,"column_start":11,"column_end":22},"name":"EnumMessage","qualname":"::EnumMessage","value":"EnumMessage","parent":null,"children":[{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15}],"decl_id":null,"docs":" Associates additional pieces of information with an Enum. This can be\n autoimplemented by deriving `EnumMessage` and annotating your variants with\n `#[strum(message=\"...\")]`.","sig":null,"attributes":[{"value":"/ Associates additional pieces of information with an Enum. This can be","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":3106,"byte_end":3179,"line_start":104,"line_end":104,"column_start":1,"column_end":74}},{"value":"/ autoimplemented by deriving `EnumMessage` and annotating your variants with","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":3180,"byte_end":3259,"line_start":105,"line_end":105,"column_start":1,"column_end":80}},{"value":"/ `#[strum(message=\"...\")]`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":3260,"byte_end":3290,"line_start":106,"line_end":106,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":3291,"byte_end":3294,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":3295,"byte_end":3308,"line_start":108,"line_end":108,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":3309,"byte_end":3312,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":3313,"byte_end":3324,"line_start":110,"line_end":110,"column_start":1,"column_end":12}},{"value":"/ # use std::fmt::Debug;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":3325,"byte_end":3351,"line_start":111,"line_end":111,"column_start":1,"column_end":27}},{"value":"/ // You need to bring the type into scope to use it!!!","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":3352,"byte_end":3409,"line_start":112,"line_end":112,"column_start":1,"column_end":58}},{"value":"/ use strum::EnumMessage;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":3410,"byte_end":3437,"line_start":113,"line_end":113,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":3438,"byte_end":3441,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ #[derive(PartialEq, Eq, Debug, EnumMessage)]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":3442,"byte_end":3490,"line_start":115,"line_end":115,"column_start":1,"column_end":49}},{"value":"/ enum Pet {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":3491,"byte_end":3505,"line_start":116,"line_end":116,"column_start":1,"column_end":15}},{"value":"/     #[strum(message=\"I have a dog\")]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":3506,"byte_end":3546,"line_start":117,"line_end":117,"column_start":1,"column_end":41}},{"value":"/     #[strum(detailed_message=\"My dog's name is Spots\")]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":3547,"byte_end":3606,"line_start":118,"line_end":118,"column_start":1,"column_end":60}},{"value":"/     Dog,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":3607,"byte_end":3619,"line_start":119,"line_end":119,"column_start":1,"column_end":13}},{"value":"/     /// I am documented.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":3620,"byte_end":3648,"line_start":120,"line_end":120,"column_start":1,"column_end":29}},{"value":"/     #[strum(message=\"I don't have a cat\")]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":3649,"byte_end":3695,"line_start":121,"line_end":121,"column_start":1,"column_end":47}},{"value":"/     Cat,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":3696,"byte_end":3708,"line_start":122,"line_end":122,"column_start":1,"column_end":13}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":3709,"byte_end":3714,"line_start":123,"line_end":123,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":3715,"byte_end":3718,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ let my_pet = Pet::Dog;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":3719,"byte_end":3745,"line_start":125,"line_end":125,"column_start":1,"column_end":27}},{"value":"/ assert_eq!(\"I have a dog\", my_pet.get_message().unwrap());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":3746,"byte_end":3808,"line_start":126,"line_end":126,"column_start":1,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":3809,"byte_end":3816,"line_start":127,"line_end":127,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":12},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":3848,"byte_end":3859,"line_start":129,"line_end":129,"column_start":8,"column_end":19},"name":"get_message","qualname":"::EnumMessage::get_message","value":"fn get_message(&Self) -> Option<&'static str>","parent":{"krate":0,"index":11},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":13},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":3899,"byte_end":3919,"line_start":130,"line_end":130,"column_start":8,"column_end":28},"name":"get_detailed_message","qualname":"::EnumMessage::get_detailed_message","value":"fn get_detailed_message(&Self) -> Option<&'static str>","parent":{"krate":0,"index":11},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":14},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":4028,"byte_end":4045,"line_start":133,"line_end":133,"column_start":8,"column_end":25},"name":"get_documentation","qualname":"::EnumMessage::get_documentation","value":"fn get_documentation(&Self) -> Option<&'static str>","parent":{"krate":0,"index":11},"children":[],"decl_id":null,"docs":" Get the doc comment associated with a variant if it exists.\n","sig":null,"attributes":[{"value":"/ Get the doc comment associated with a variant if it exists.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":3957,"byte_end":4020,"line_start":132,"line_end":132,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":15},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":4085,"byte_end":4103,"line_start":134,"line_end":134,"column_start":8,"column_end":26},"name":"get_serializations","qualname":"::EnumMessage::get_serializations","value":"fn get_serializations(&Self) -> &'static [&'static str]","parent":{"krate":0,"index":11},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":16},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":5088,"byte_end":5100,"line_start":164,"line_end":164,"column_start":11,"column_end":23},"name":"EnumProperty","qualname":"::EnumProperty","value":"EnumProperty","parent":null,"children":[{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19}],"decl_id":null,"docs":" `EnumProperty` is a trait that makes it possible to store additional information\n with enum variants. This trait is designed to be used with the macro of the same\n name in the `strum_macros` crate. Currently, the only string literals are supported\n in attributes, the other methods will be implemented as additional attribute types\n become stabilized.","sig":null,"attributes":[{"value":"/ `EnumProperty` is a trait that makes it possible to store additional information","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":4142,"byte_end":4226,"line_start":137,"line_end":137,"column_start":1,"column_end":85}},{"value":"/ with enum variants. This trait is designed to be used with the macro of the same","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":4227,"byte_end":4311,"line_start":138,"line_end":138,"column_start":1,"column_end":85}},{"value":"/ name in the `strum_macros` crate. Currently, the only string literals are supported","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":4312,"byte_end":4399,"line_start":139,"line_end":139,"column_start":1,"column_end":88}},{"value":"/ in attributes, the other methods will be implemented as additional attribute types","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":4400,"byte_end":4486,"line_start":140,"line_end":140,"column_start":1,"column_end":87}},{"value":"/ become stabilized.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":4487,"byte_end":4509,"line_start":141,"line_end":141,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":4510,"byte_end":4513,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":4514,"byte_end":4527,"line_start":143,"line_end":143,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":4528,"byte_end":4531,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":4532,"byte_end":4543,"line_start":145,"line_end":145,"column_start":1,"column_end":12}},{"value":"/ # use std::fmt::Debug;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":4544,"byte_end":4570,"line_start":146,"line_end":146,"column_start":1,"column_end":27}},{"value":"/ // You need to bring the type into scope to use it!!!","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":4571,"byte_end":4628,"line_start":147,"line_end":147,"column_start":1,"column_end":58}},{"value":"/ use strum::EnumProperty;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":4629,"byte_end":4657,"line_start":148,"line_end":148,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":4658,"byte_end":4661,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ #[derive(PartialEq, Eq, Debug, EnumProperty)]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":4662,"byte_end":4711,"line_start":150,"line_end":150,"column_start":1,"column_end":50}},{"value":"/ enum Class {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":4712,"byte_end":4728,"line_start":151,"line_end":151,"column_start":1,"column_end":17}},{"value":"/     #[strum(props(Teacher=\"Ms.Frizzle\", Room=\"201\"))]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":4729,"byte_end":4786,"line_start":152,"line_end":152,"column_start":1,"column_end":58}},{"value":"/     History,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":4787,"byte_end":4803,"line_start":153,"line_end":153,"column_start":1,"column_end":17}},{"value":"/     #[strum(props(Teacher=\"Mr.Smith\"))]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":4804,"byte_end":4847,"line_start":154,"line_end":154,"column_start":1,"column_end":44}},{"value":"/     #[strum(props(Room=\"103\"))]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":4848,"byte_end":4883,"line_start":155,"line_end":155,"column_start":1,"column_end":36}},{"value":"/     Mathematics,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":4884,"byte_end":4904,"line_start":156,"line_end":156,"column_start":1,"column_end":21}},{"value":"/     #[strum(props(Time=\"2:30\"))]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":4905,"byte_end":4941,"line_start":157,"line_end":157,"column_start":1,"column_end":37}},{"value":"/     Science,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":4942,"byte_end":4958,"line_start":158,"line_end":158,"column_start":1,"column_end":17}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":4959,"byte_end":4964,"line_start":159,"line_end":159,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":4965,"byte_end":4968,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ let history = Class::History;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":4969,"byte_end":5002,"line_start":161,"line_end":161,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(\"Ms.Frizzle\", history.get_str(\"Teacher\").unwrap());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":5003,"byte_end":5069,"line_start":162,"line_end":162,"column_start":1,"column_end":67}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":5070,"byte_end":5077,"line_start":163,"line_end":163,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":17},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":5110,"byte_end":5117,"line_start":165,"line_end":165,"column_start":8,"column_end":15},"name":"get_str","qualname":"::EnumProperty::get_str","value":"fn get_str(&Self, &str) -> Option<&'static str>","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":5169,"byte_end":5176,"line_start":166,"line_end":166,"column_start":8,"column_end":15},"name":"get_int","qualname":"::EnumProperty::get_int","value":"fn get_int(&Self, &str) -> Option<usize>","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":19},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":5251,"byte_end":5259,"line_start":170,"line_end":170,"column_start":8,"column_end":16},"name":"get_bool","qualname":"::EnumProperty::get_bool","value":"fn get_bool(&Self, &str) -> Option<bool>","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":20},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":5577,"byte_end":5588,"line_start":181,"line_end":181,"column_start":11,"column_end":22},"name":"AsStaticRef","qualname":"::AsStaticRef","value":"AsStaticRef<T>","parent":null,"children":[{"krate":0,"index":22}],"decl_id":null,"docs":" A cheap reference-to-reference conversion. Used to convert a value to a\n reference value with `'static` lifetime within generic code.\n","sig":null,"attributes":[{"value":"/ A cheap reference-to-reference conversion. Used to convert a value to a","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":5328,"byte_end":5403,"line_start":175,"line_end":175,"column_start":1,"column_end":76}},{"value":"/ reference value with `'static` lifetime within generic code.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":5404,"byte_end":5468,"line_start":176,"line_end":176,"column_start":1,"column_end":65}},{"value":"deprecated(since = \"0.22.0\", note =\n\"please use `#[derive(IntoStaticStr)]` instead\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":5469,"byte_end":5566,"line_start":177,"line_end":180,"column_start":1,"column_end":3}}]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":5622,"byte_end":5631,"line_start":185,"line_end":185,"column_start":8,"column_end":17},"name":"as_static","qualname":"::AsStaticRef::as_static","value":"fn as_static(&Self) -> &'static T","parent":{"krate":0,"index":20},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":23},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":5778,"byte_end":5787,"line_start":190,"line_end":190,"column_start":11,"column_end":20},"name":"EnumCount","qualname":"::EnumCount","value":"EnumCount","parent":null,"children":[{"krate":0,"index":24}],"decl_id":null,"docs":" A trait for capturing the number of variants in Enum. This trait can be autoderived by\n `strum_macros`.\n","sig":null,"attributes":[{"value":"/ A trait for capturing the number of variants in Enum. This trait can be autoderived by","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":5657,"byte_end":5747,"line_start":188,"line_end":188,"column_start":1,"column_end":91}},{"value":"/ `strum_macros`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":5748,"byte_end":5767,"line_start":189,"line_end":189,"column_start":1,"column_end":20}}]},{"kind":"Const","id":{"krate":0,"index":24},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":5800,"byte_end":5805,"line_start":191,"line_end":191,"column_start":11,"column_end":16},"name":"COUNT","qualname":"::EnumCount::COUNT","value":"usize","parent":{"krate":0,"index":23},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":25},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":5942,"byte_end":5954,"line_start":196,"line_end":196,"column_start":11,"column_end":23},"name":"VariantNames","qualname":"::VariantNames","value":"VariantNames","parent":null,"children":[{"krate":0,"index":26}],"decl_id":null,"docs":" A trait for retrieving the names of each variant in Enum. This trait can\n be autoderived by `strum_macros`.\n","sig":null,"attributes":[{"value":"/ A trait for retrieving the names of each variant in Enum. This trait can","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":5817,"byte_end":5893,"line_start":194,"line_end":194,"column_start":1,"column_end":77}},{"value":"/ be autoderived by `strum_macros`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":5894,"byte_end":5931,"line_start":195,"line_end":195,"column_start":1,"column_end":38}}]},{"kind":"Const","id":{"krate":0,"index":26},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":6010,"byte_end":6018,"line_start":198,"line_end":198,"column_start":11,"column_end":19},"name":"VARIANTS","qualname":"::VariantNames::VARIANTS","value":"&'static [&'static str]","parent":{"krate":0,"index":25},"children":[],"decl_id":null,"docs":" Names of the variants of this enum\n","sig":null,"attributes":[{"value":"/ Names of the variants of this enum","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":5961,"byte_end":5999,"line_start":197,"line_end":197,"column_start":5,"column_end":43}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":1520,"byte_end":1530,"line_start":45,"line_end":45,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":1900,"byte_end":1910,"line_start":56,"line_end":56,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":7}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":1130,"byte_end":1151,"line_start":31,"line_end":31,"column_start":9,"column_end":30},"ref_id":{"krate":0,"index":3}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":1520,"byte_end":1530,"line_start":45,"line_end":45,"column_start":28,"column_end":38},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":29},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":1900,"byte_end":1910,"line_start":56,"line_end":56,"column_start":28,"column_end":38},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":29},"to":{"krate":1,"index":2569}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/strum-0.24.1/src/lib.rs","byte_start":3019,"byte_end":3024,"line_start":98,"line_end":98,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":3184},"to":{"krate":0,"index":8}}]}