{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5","program":"/Users/air/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","quinn","--edition=2018","/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"native-certs\"","--cfg","feature=\"ring\"","--cfg","feature=\"rustls\"","--cfg","feature=\"tls-rustls\"","--cfg","feature=\"webpki\"","-C","metadata=6f5c24a974b0a156","-C","extra-filename=-6f5c24a974b0a156","--out-dir","/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps","-L","dependency=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps","--extern","bytes=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libbytes-9550d149b9a13b85.rmeta","--extern","futures_channel=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libfutures_channel-bca3dff8d90e59ec.rmeta","--extern","futures_util=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libfutures_util-81f9e6b97075001b.rmeta","--extern","fxhash=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libfxhash-8312242ee437f180.rmeta","--extern","proto=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libquinn_proto-14ec72422d263939.rmeta","--extern","udp=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libquinn_udp-6852c341d9f415f1.rmeta","--extern","rustls=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/librustls-4ba4a5556f79cdf4.rmeta","--extern","thiserror=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libthiserror-1556a11d29ffccd0.rmeta","--extern","tokio=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libtokio-7b04bdd9b09c183b.rmeta","--extern","tracing=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libtracing-3e600055b7b49bc0.rmeta","--extern","webpki=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libwebpki-9fda25e5920a04fa.rmeta","--cap-lints","allow","-L","native=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/build/ring-9065ae91f74d10ea/out","--error-format=json","--sysroot","/Users/air/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libquinn-6f5c24a974b0a156.rmeta"},"prelude":{"crate_id":{"name":"quinn","disambiguator":[17944643368234540567,0]},"crate_root":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src","external_crates":[{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[4485569597606079733,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[9994580471200982198,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13944031075627487246,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5133993387825513881,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[14116380118705386640,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6269322086078963025,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16152481959168563413,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7897074911849024150,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[7299104579826168146,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2669544452907545777,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[14288251452253695433,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[13943810077905921301,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[2237926517141734526,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[5541021343498733002,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[7188895526679788668,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[15555671723428220450,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[13375000548276363576,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[8920282723255285566,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[2397004371161247654,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","num":20,"id":{"name":"bytes","disambiguator":[17363037860664117862,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","num":21,"id":{"name":"futures_channel","disambiguator":[3240050653023664947,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","num":22,"id":{"name":"futures_core","disambiguator":[17540173836599093021,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","num":23,"id":{"name":"futures_sink","disambiguator":[9497018450691456923,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","num":24,"id":{"name":"futures_util","disambiguator":[1827647315185954280,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","num":25,"id":{"name":"pin_utils","disambiguator":[8174305404796104042,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","num":26,"id":{"name":"futures_macro","disambiguator":[6235696014418951871,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","num":27,"id":{"name":"futures_task","disambiguator":[5950390365963764595,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","num":28,"id":{"name":"pin_project_lite","disambiguator":[16214617887468495849,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","num":29,"id":{"name":"slab","disambiguator":[17204978413451154944,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","num":30,"id":{"name":"futures_io","disambiguator":[10931676305668356181,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","num":31,"id":{"name":"memchr","disambiguator":[14228028058314693917,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","num":32,"id":{"name":"fxhash","disambiguator":[15757250643897861550,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","num":33,"id":{"name":"byteorder","disambiguator":[4343033449561927691,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","num":34,"id":{"name":"quinn_proto","disambiguator":[18324525303447875356,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","num":35,"id":{"name":"thiserror","disambiguator":[18020888330255438696,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","num":36,"id":{"name":"thiserror_impl","disambiguator":[1864002684930853046,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","num":37,"id":{"name":"tinyvec","disambiguator":[1921248162494027452,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","num":38,"id":{"name":"tinyvec_macros","disambiguator":[1861254164420090656,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","num":39,"id":{"name":"rand","disambiguator":[5737921661166445283,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","num":40,"id":{"name":"rand_core","disambiguator":[16845283938616561134,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","num":41,"id":{"name":"getrandom","disambiguator":[11134963274789204374,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","num":42,"id":{"name":"cfg_if","disambiguator":[13273704638852766021,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","num":43,"id":{"name":"libc","disambiguator":[2594694148884002105,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","num":44,"id":{"name":"rand_chacha","disambiguator":[14300429071441946605,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","num":45,"id":{"name":"ppv_lite86","disambiguator":[10001865238345273388,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","num":46,"id":{"name":"tracing","disambiguator":[15319995027613217254,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","num":47,"id":{"name":"tracing_core","disambiguator":[11049412947218707615,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","num":48,"id":{"name":"once_cell","disambiguator":[3525325367007617747,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","num":49,"id":{"name":"tracing_attributes","disambiguator":[10017155599886563945,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","num":50,"id":{"name":"log","disambiguator":[14675233967093799413,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","num":51,"id":{"name":"ring","disambiguator":[11862796602207275207,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","num":52,"id":{"name":"untrusted","disambiguator":[3488854708692986494,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","num":53,"id":{"name":"spin","disambiguator":[16282530221687026775,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","num":54,"id":{"name":"rustls","disambiguator":[13214070087561825703,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","num":55,"id":{"name":"webpki","disambiguator":[12753995509790438548,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","num":56,"id":{"name":"sct","disambiguator":[10623624661003900290,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","num":57,"id":{"name":"rustls_native_certs","disambiguator":[14259521559712094684,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","num":58,"id":{"name":"security_framework","disambiguator":[8742892707486800119,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","num":59,"id":{"name":"core_foundation","disambiguator":[5708716109515941372,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","num":60,"id":{"name":"core_foundation_sys","disambiguator":[12650069415418419591,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","num":61,"id":{"name":"security_framework_sys","disambiguator":[12505730022858295939,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","num":62,"id":{"name":"bitflags","disambiguator":[9318451903173197607,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","num":63,"id":{"name":"rustls_pemfile","disambiguator":[6042804704172837771,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","num":64,"id":{"name":"base64","disambiguator":[9889278033999334830,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","num":65,"id":{"name":"tokio","disambiguator":[2962388683323727077,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","num":66,"id":{"name":"parking_lot","disambiguator":[14966253135049045735,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","num":67,"id":{"name":"instant","disambiguator":[9036241402852550211,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","num":68,"id":{"name":"lock_api","disambiguator":[10127763897422863905,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","num":69,"id":{"name":"scopeguard","disambiguator":[12042798599719570489,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","num":70,"id":{"name":"parking_lot_core","disambiguator":[8453746460189032009,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","num":71,"id":{"name":"smallvec","disambiguator":[5856184447480448040,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","num":72,"id":{"name":"mio","disambiguator":[7927576646673556845,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","num":73,"id":{"name":"tokio_macros","disambiguator":[11852345796106455181,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","num":74,"id":{"name":"num_cpus","disambiguator":[5214853325863455532,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","num":75,"id":{"name":"signal_hook_registry","disambiguator":[15936637214480815235,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","num":76,"id":{"name":"quinn_udp","disambiguator":[929667258869228936,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","num":77,"id":{"name":"socket2","disambiguator":[15352271864930777361,0]}}],"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":0,"byte_end":4602,"line_start":1,"line_end":105,"column_start":1,"column_end":61}},"imports":[{"kind":"Use","ref_id":{"krate":34,"index":3140},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":2654,"byte_end":2664,"line_start":53,"line_end":53,"column_start":5,"column_end":15},"alias_span":null,"name":"congestion","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":34,"index":2254},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":2666,"byte_end":2672,"line_start":53,"line_end":53,"column_start":17,"column_end":23},"alias_span":null,"name":"crypto","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":34,"index":8018},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":2674,"byte_end":2690,"line_start":53,"line_end":53,"column_start":25,"column_end":41},"alias_span":null,"name":"ApplicationClose","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":34,"index":3947},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":2692,"byte_end":2697,"line_start":53,"line_end":53,"column_start":43,"column_end":48},"alias_span":null,"name":"Chunk","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":34,"index":7732},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":2699,"byte_end":2711,"line_start":53,"line_end":53,"column_start":50,"column_end":62},"alias_span":null,"name":"ClientConfig","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":34,"index":7802},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":2713,"byte_end":2724,"line_start":53,"line_end":53,"column_start":64,"column_end":75},"alias_span":null,"name":"ConfigError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":34,"index":8831},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":2726,"byte_end":2738,"line_start":53,"line_end":53,"column_start":77,"column_end":89},"alias_span":null,"name":"ConnectError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":34,"index":8003},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":2744,"byte_end":2759,"line_start":54,"line_end":54,"column_start":5,"column_end":20},"alias_span":null,"name":"ConnectionClose","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":34,"index":7623},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":2761,"byte_end":2776,"line_start":54,"line_end":54,"column_start":22,"column_end":37},"alias_span":null,"name":"ConnectionError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":34,"index":7715},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":2778,"byte_end":2792,"line_start":54,"line_end":54,"column_start":39,"column_end":53},"alias_span":null,"name":"EndpointConfig","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":34,"index":7818},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":2794,"byte_end":2805,"line_start":54,"line_end":54,"column_start":55,"column_end":66},"alias_span":null,"name":"IdleTimeout","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":34,"index":7722},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":2807,"byte_end":2819,"line_start":54,"line_end":54,"column_start":68,"column_end":80},"alias_span":null,"name":"ServerConfig","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":34,"index":9316},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":2821,"byte_end":2829,"line_start":54,"line_end":54,"column_start":82,"column_end":90},"alias_span":null,"name":"StreamId","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":34,"index":9317},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":2821,"byte_end":2829,"line_start":54,"line_end":54,"column_start":82,"column_end":90},"alias_span":null,"name":"StreamId","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":34,"index":9338},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":2835,"byte_end":2843,"line_start":55,"line_end":55,"column_start":5,"column_end":13},"alias_span":null,"name":"Transmit","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":34,"index":2146},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":2845,"byte_end":2860,"line_start":55,"line_end":55,"column_start":15,"column_end":30},"alias_span":null,"name":"TransportConfig","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":34,"index":3898},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":2862,"byte_end":2868,"line_start":55,"line_end":55,"column_start":32,"column_end":38},"alias_span":null,"name":"VarInt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":970},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":2907,"byte_end":2917,"line_start":59,"line_end":59,"column_start":5,"column_end":15},"alias_span":null,"name":"Connecting","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1013},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":2919,"byte_end":2929,"line_start":59,"line_end":59,"column_start":17,"column_end":27},"alias_span":null,"name":"Connection","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1028},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":2931,"byte_end":2940,"line_start":59,"line_end":59,"column_start":29,"column_end":38},"alias_span":null,"name":"Datagrams","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1023},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":2942,"byte_end":2959,"line_start":59,"line_end":59,"column_start":40,"column_end":57},"alias_span":null,"name":"IncomingBiStreams","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1018},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":2961,"byte_end":2979,"line_start":59,"line_end":59,"column_start":59,"column_end":77},"alias_span":null,"name":"IncomingUniStreams","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":976},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":2981,"byte_end":2994,"line_start":59,"line_end":59,"column_start":79,"column_end":92},"alias_span":null,"name":"NewConnection","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":216},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":3000,"byte_end":3006,"line_start":60,"line_end":60,"column_start":5,"column_end":11},"alias_span":null,"name":"OpenBi","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":210},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":3008,"byte_end":3015,"line_start":60,"line_end":60,"column_start":13,"column_end":20},"alias_span":null,"name":"OpenUni","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1038},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":3017,"byte_end":3034,"line_start":60,"line_end":60,"column_start":22,"column_end":39},"alias_span":null,"name":"SendDatagramError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":167},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":3036,"byte_end":3051,"line_start":60,"line_end":60,"column_start":41,"column_end":56},"alias_span":null,"name":"ZeroRttAccepted","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1068},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":3082,"byte_end":3090,"line_start":62,"line_end":62,"column_start":27,"column_end":35},"alias_span":null,"name":"Endpoint","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1137},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":3092,"byte_end":3100,"line_start":62,"line_end":62,"column_start":37,"column_end":45},"alias_span":null,"name":"Incoming","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":608},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":3137,"byte_end":3141,"line_start":64,"line_end":64,"column_start":5,"column_end":9},"alias_span":null,"name":"Read","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":624},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":3143,"byte_end":3152,"line_start":64,"line_end":64,"column_start":11,"column_end":20},"alias_span":null,"name":"ReadChunk","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":633},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":3154,"byte_end":3164,"line_start":64,"line_end":64,"column_start":22,"column_end":32},"alias_span":null,"name":"ReadChunks","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1194},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":3166,"byte_end":3175,"line_start":64,"line_end":64,"column_start":34,"column_end":43},"alias_span":null,"name":"ReadError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":616},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":3177,"byte_end":3186,"line_start":64,"line_end":64,"column_start":45,"column_end":54},"alias_span":null,"name":"ReadExact","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1234},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":3188,"byte_end":3202,"line_start":64,"line_end":64,"column_start":56,"column_end":70},"alias_span":null,"name":"ReadExactError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":588},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":3204,"byte_end":3213,"line_start":64,"line_end":64,"column_start":72,"column_end":81},"alias_span":null,"name":"ReadToEnd","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1161},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":3215,"byte_end":3229,"line_start":64,"line_end":64,"column_start":83,"column_end":97},"alias_span":null,"name":"ReadToEndError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1153},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":3235,"byte_end":3245,"line_start":65,"line_end":65,"column_start":5,"column_end":15},"alias_span":null,"name":"RecvStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1276},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":3284,"byte_end":3294,"line_start":68,"line_end":68,"column_start":5,"column_end":15},"alias_span":null,"name":"SendStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1324},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":3296,"byte_end":3308,"line_start":68,"line_end":68,"column_start":17,"column_end":29},"alias_span":null,"name":"StoppedError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":754},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":3310,"byte_end":3315,"line_start":68,"line_end":68,"column_start":31,"column_end":36},"alias_span":null,"name":"Write","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":763},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":3317,"byte_end":3325,"line_start":68,"line_end":68,"column_start":38,"column_end":46},"alias_span":null,"name":"WriteAll","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":789},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":3327,"byte_end":3341,"line_start":68,"line_end":68,"column_start":48,"column_end":62},"alias_span":null,"name":"WriteAllChunks","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":780},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":3343,"byte_end":3353,"line_start":68,"line_end":68,"column_start":64,"column_end":74},"alias_span":null,"name":"WriteChunk","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":771},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":3355,"byte_end":3366,"line_start":68,"line_end":68,"column_start":76,"column_end":87},"alias_span":null,"name":"WriteChunks","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1286},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":3368,"byte_end":3378,"line_start":68,"line_end":68,"column_start":89,"column_end":99},"alias_span":null,"name":"WriteError","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":0,"byte_end":4602,"line_start":1,"line_end":105,"column_start":1,"column_end":61},"name":"","qualname":"::","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":18},{"krate":0,"index":273},{"krate":0,"index":452},{"krate":0,"index":490},{"krate":0,"index":643},{"krate":0,"index":801},{"krate":0,"index":817},{"krate":0,"index":818},{"krate":0,"index":821},{"krate":0,"index":824},{"krate":0,"index":827},{"krate":0,"index":830},{"krate":0,"index":833},{"krate":0,"index":836},{"krate":0,"index":839},{"krate":0,"index":842},{"krate":0,"index":845},{"krate":0,"index":848},{"krate":0,"index":851},{"krate":0,"index":854},{"krate":0,"index":855},{"krate":0,"index":857},{"krate":0,"index":860},{"krate":0,"index":863},{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":870},{"krate":0,"index":873},{"krate":0,"index":876},{"krate":0,"index":879},{"krate":0,"index":882},{"krate":0,"index":885},{"krate":0,"index":888},{"krate":0,"index":891},{"krate":0,"index":894},{"krate":0,"index":897},{"krate":0,"index":898},{"krate":0,"index":901},{"krate":0,"index":904},{"krate":0,"index":905},{"krate":0,"index":908},{"krate":0,"index":911},{"krate":0,"index":914},{"krate":0,"index":917},{"krate":0,"index":920},{"krate":0,"index":923},{"krate":0,"index":926},{"krate":0,"index":929},{"krate":0,"index":932},{"krate":0,"index":933},{"krate":0,"index":936},{"krate":0,"index":939},{"krate":0,"index":942},{"krate":0,"index":945},{"krate":0,"index":948},{"krate":0,"index":951},{"krate":0,"index":954},{"krate":0,"index":1378},{"krate":0,"index":1387},{"krate":0,"index":1389},{"krate":0,"index":1396},{"krate":0,"index":957},{"krate":0,"index":958},{"krate":0,"index":959}],"decl_id":null,"docs":" QUIC transport protocol support for Tokio","sig":null,"attributes":[{"value":"/ QUIC transport protocol support for Tokio","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":0,"byte_end":45,"line_start":1,"line_end":1,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":46,"byte_end":49,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ [QUIC](https://en.wikipedia.org/wiki/QUIC) is a modern transport protocol addressing","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":50,"byte_end":138,"line_start":3,"line_end":3,"column_start":1,"column_end":89}},{"value":"/ shortcomings of TCP, such as head-of-line blocking, poor security, slow handshakes, and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":139,"byte_end":230,"line_start":4,"line_end":4,"column_start":1,"column_end":92}},{"value":"/ inefficient congestion control. This crate provides a portable userspace implementation. It","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":231,"byte_end":326,"line_start":5,"line_end":5,"column_start":1,"column_end":96}},{"value":"/ builds on top of quinn-proto, which implements protocol logic independent of any particular","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":327,"byte_end":422,"line_start":6,"line_end":6,"column_start":1,"column_end":96}},{"value":"/ runtime.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":423,"byte_end":435,"line_start":7,"line_end":7,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":436,"byte_end":439,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ The entry point of this crate is the [`Endpoint`](struct.Endpoint.html).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":440,"byte_end":516,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":517,"byte_end":520,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # About QUIC","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":521,"byte_end":537,"line_start":11,"line_end":11,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":538,"byte_end":541,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ A QUIC connection is an association between two endpoints. The endpoint which initiates the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":542,"byte_end":637,"line_start":13,"line_end":13,"column_start":1,"column_end":96}},{"value":"/ connection is termed the client, and the endpoint which accepts it is termed the server. A","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":638,"byte_end":732,"line_start":14,"line_end":14,"column_start":1,"column_end":95}},{"value":"/ single endpoint may function as both client and server for different connections, for example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":733,"byte_end":830,"line_start":15,"line_end":15,"column_start":1,"column_end":98}},{"value":"/ in a peer-to-peer application. To communicate application data, each endpoint may open streams","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":831,"byte_end":929,"line_start":16,"line_end":16,"column_start":1,"column_end":99}},{"value":"/ up to a limit dictated by its peer. Typically, that limit is increased as old streams are","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":930,"byte_end":1023,"line_start":17,"line_end":17,"column_start":1,"column_end":94}},{"value":"/ finished.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":1024,"byte_end":1037,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":1038,"byte_end":1041,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Streams may be unidirectional or bidirectional, and are cheap to create and disposable. For","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":1042,"byte_end":1137,"line_start":20,"line_end":20,"column_start":1,"column_end":96}},{"value":"/ example, a traditionally datagram-oriented application could use a new stream for every","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":1138,"byte_end":1229,"line_start":21,"line_end":21,"column_start":1,"column_end":92}},{"value":"/ message it wants to send, no longer needing to worry about MTUs. Bidirectional streams behave","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":1230,"byte_end":1327,"line_start":22,"line_end":22,"column_start":1,"column_end":98}},{"value":"/ much like a traditional TCP connection, and are useful for sending messages that have an","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":1328,"byte_end":1420,"line_start":23,"line_end":23,"column_start":1,"column_end":93}},{"value":"/ immediate response, such as an HTTP request. Stream data is delivered reliably, and there is no","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":1421,"byte_end":1520,"line_start":24,"line_end":24,"column_start":1,"column_end":100}},{"value":"/ ordering enforced between data on different streams.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":1521,"byte_end":1577,"line_start":25,"line_end":25,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":1578,"byte_end":1581,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ By avoiding head-of-line blocking and providing unified congestion control across all streams","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":1582,"byte_end":1679,"line_start":27,"line_end":27,"column_start":1,"column_end":98}},{"value":"/ of a connection, QUIC is able to provide higher throughput and lower latency than one or","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":1680,"byte_end":1772,"line_start":28,"line_end":28,"column_start":1,"column_end":93}},{"value":"/ multiple TCP connections between the same two hosts, while providing more useful behavior than","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":1773,"byte_end":1871,"line_start":29,"line_end":29,"column_start":1,"column_end":99}},{"value":"/ raw UDP sockets.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":1872,"byte_end":1892,"line_start":30,"line_end":30,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":1893,"byte_end":1896,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Quinn also exposes unreliable datagrams, which are a low-level primitive preferred when","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":1897,"byte_end":1988,"line_start":32,"line_end":32,"column_start":1,"column_end":92}},{"value":"/ automatic fragmentation and retransmission of certain data is not desired.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":1989,"byte_end":2067,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":2068,"byte_end":2071,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ QUIC uses encryption and identity verification built directly on TLS 1.3. Just as with a TLS","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":2072,"byte_end":2168,"line_start":35,"line_end":35,"column_start":1,"column_end":97}},{"value":"/ server, it is useful for a QUIC server to be identified by a certificate signed by a trusted","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":2169,"byte_end":2265,"line_start":36,"line_end":36,"column_start":1,"column_end":97}},{"value":"/ authority. If this is infeasible--for example, if servers are short-lived or not associated","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":2266,"byte_end":2361,"line_start":37,"line_end":37,"column_start":1,"column_end":96}},{"value":"/ with a domain name--then as with TLS, self-signed certificates can be used to provide","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":2362,"byte_end":2451,"line_start":38,"line_end":38,"column_start":1,"column_end":90}},{"value":"/ encryption alone.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":2452,"byte_end":2473,"line_start":39,"line_end":39,"column_start":1,"column_end":22}},{"value":"warn(missing_docs)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/lib.rs","byte_start":2474,"byte_end":2496,"line_start":40,"line_end":40,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":970},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":8044,"byte_end":8054,"line_start":35,"line_end":35,"column_start":12,"column_end":22},"name":"Connecting","qualname":"::connection::Connecting","value":"Connecting {  }","parent":null,"children":[{"krate":0,"index":971},{"krate":0,"index":972},{"krate":0,"index":973}],"decl_id":null,"docs":" In-progress connection attempt future\n","sig":null,"attributes":[{"value":"/ In-progress connection attempt future","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":7892,"byte_end":7933,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":7951,"byte_end":8032,"line_start":34,"line_end":34,"column_start":1,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":10530,"byte_end":10539,"line_start":95,"line_end":95,"column_start":12,"column_end":21},"name":"into_0rtt","qualname":"<Connecting>::into_0rtt","value":"fn into_0rtt(Self) -> Result<(NewConnection, ZeroRttAccepted), Self>","parent":null,"children":[],"decl_id":null,"docs":" Convert into a 0-RTT or 0.5-RTT connection at the cost of weakened security","sig":null,"attributes":[{"value":"/ Convert into a 0-RTT or 0.5-RTT connection at the cost of weakened security","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":9122,"byte_end":9201,"line_start":70,"line_end":70,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":9206,"byte_end":9209,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ Opens up the connection for use before the handshake finishes, allowing the API user to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":9214,"byte_end":9305,"line_start":72,"line_end":72,"column_start":5,"column_end":96}},{"value":"/ send data with 0-RTT encryption if the necessary key material is available. This is useful","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":9310,"byte_end":9404,"line_start":73,"line_end":73,"column_start":5,"column_end":99}},{"value":"/ for reducing start-up latency by beginning transmission of application data without waiting","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":9409,"byte_end":9504,"line_start":74,"line_end":74,"column_start":5,"column_end":100}},{"value":"/ for the handshake's cryptographic security guarantees to be established.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":9509,"byte_end":9585,"line_start":75,"line_end":75,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":9590,"byte_end":9593,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ When the `ZeroRttAccepted` future completes, the connection has been fully established.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":9598,"byte_end":9689,"line_start":77,"line_end":77,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":9694,"byte_end":9697,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ # Security","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":9702,"byte_end":9716,"line_start":79,"line_end":79,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":9721,"byte_end":9724,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ On outgoing connections, this enables transmission of 0-RTT data, which might be vulnerable","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":9729,"byte_end":9824,"line_start":81,"line_end":81,"column_start":5,"column_end":100}},{"value":"/ to replay attacks, and should therefore never invoke non-idempotent operations.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":9829,"byte_end":9912,"line_start":82,"line_end":82,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":9917,"byte_end":9920,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ On incoming connections, this enables transmission of 0.5-RTT data, which might be","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":9925,"byte_end":10011,"line_start":84,"line_end":84,"column_start":5,"column_end":91}},{"value":"/ intercepted by a man-in-the-middle. If this occurs, the handshake will not complete","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":10016,"byte_end":10103,"line_start":85,"line_end":85,"column_start":5,"column_end":92}},{"value":"/ successfully.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":10108,"byte_end":10125,"line_start":86,"line_end":86,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":10130,"byte_end":10133,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":10138,"byte_end":10150,"line_start":88,"line_end":88,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":10155,"byte_end":10158,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ Outgoing connections are only 0-RTT-capable when a cryptographic session ticket cached from","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":10163,"byte_end":10258,"line_start":90,"line_end":90,"column_start":5,"column_end":100}},{"value":"/ a previous connection to the same server is available, and includes a 0-RTT key. If no such","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":10263,"byte_end":10358,"line_start":91,"line_end":91,"column_start":5,"column_end":100}},{"value":"/ ticket is found, `self` is returned unmodified.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":10363,"byte_end":10414,"line_start":92,"line_end":92,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":10419,"byte_end":10422,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ For incoming connections, a 0.5-RTT connection will always be successfully constructed.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":10427,"byte_end":10518,"line_start":94,"line_end":94,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":11512,"byte_end":11526,"line_start":117,"line_end":117,"column_start":18,"column_end":32},"name":"handshake_data","qualname":"<Connecting>::handshake_data","value":"async fn handshake_data<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Parameters negotiated during the handshake","sig":null,"attributes":[{"value":"/ Parameters negotiated during the handshake","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":11149,"byte_end":11195,"line_start":111,"line_end":111,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":11200,"byte_end":11203,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ The dynamic type returned is determined by the configured","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":11208,"byte_end":11269,"line_start":113,"line_end":113,"column_start":5,"column_end":66}},{"value":"/ [`Session`](proto::crypto::Session). For the default `rustls` session, the return value can","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":11274,"byte_end":11369,"line_start":114,"line_end":114,"column_start":5,"column_end":100}},{"value":"/ be [`downcast`](Box::downcast) to a","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":11374,"byte_end":11413,"line_start":115,"line_end":115,"column_start":5,"column_end":44}},{"value":"/ [`crypto::rustls::HandshakeData`](crate::crypto::rustls::HandshakeData).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":11418,"byte_end":11494,"line_start":116,"line_end":116,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":12861,"byte_end":12869,"line_start":152,"line_end":152,"column_start":12,"column_end":20},"name":"local_ip","qualname":"<Connecting>::local_ip","value":"fn local_ip(&Self) -> Option<IpAddr>","parent":null,"children":[],"decl_id":null,"docs":" The local IP address which was used when the peer established\n the connection","sig":null,"attributes":[{"value":"/ The local IP address which was used when the peer established","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":12286,"byte_end":12351,"line_start":138,"line_end":138,"column_start":5,"column_end":70}},{"value":"/ the connection","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":12356,"byte_end":12374,"line_start":139,"line_end":139,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":12379,"byte_end":12382,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ This can be different from the address the endpoint is bound to, in case","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":12387,"byte_end":12463,"line_start":141,"line_end":141,"column_start":5,"column_end":81}},{"value":"/ the endpoint is bound to a wildcard address like `0.0.0.0` or `::`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":12468,"byte_end":12539,"line_start":142,"line_end":142,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":12544,"byte_end":12547,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ This will return `None` for clients.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":12552,"byte_end":12592,"line_start":144,"line_end":144,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":12597,"byte_end":12600,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ Retrieving the local IP address is currently supported on the following","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":12605,"byte_end":12680,"line_start":146,"line_end":146,"column_start":5,"column_end":80}},{"value":"/ platforms:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":12685,"byte_end":12699,"line_start":147,"line_end":147,"column_start":5,"column_end":19}},{"value":"/ - Linux","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":12704,"byte_end":12715,"line_start":148,"line_end":148,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":12720,"byte_end":12723,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ On all non-supported platforms the local IP address will not be available,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":12728,"byte_end":12806,"line_start":150,"line_end":150,"column_start":5,"column_end":83}},{"value":"/ and the method will return `None`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":12811,"byte_end":12849,"line_start":151,"line_end":151,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":13123,"byte_end":13127,"line_start":162,"line_end":162,"column_start":8,"column_end":12},"name":"poll","qualname":"<Connecting as futures_util::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":13807,"byte_end":13821,"line_start":183,"line_end":183,"column_start":12,"column_end":26},"name":"remote_address","qualname":"<Connecting>::remote_address","value":"fn remote_address(&Self) -> SocketAddr","parent":null,"children":[],"decl_id":null,"docs":" The peer's UDP address.","sig":null,"attributes":[{"value":"/ The peer's UDP address.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":13696,"byte_end":13723,"line_start":180,"line_end":180,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":13728,"byte_end":13731,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ Will panic if called after `poll` has returned `Ready`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":13736,"byte_end":13795,"line_start":182,"line_end":182,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":167},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":14297,"byte_end":14312,"line_start":194,"line_end":194,"column_start":12,"column_end":27},"name":"ZeroRttAccepted","qualname":"::connection::ZeroRttAccepted","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future that completes when a connection is fully established","sig":null,"attributes":[{"value":"/ Future that completes when a connection is fully established","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":14012,"byte_end":14076,"line_start":189,"line_end":189,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":14077,"byte_end":14080,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ For clients, the resulting value indicates if 0-RTT was accepted. For servers, the resulting","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":14081,"byte_end":14177,"line_start":191,"line_end":191,"column_start":1,"column_end":97}},{"value":"/ value is meaningless.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":14178,"byte_end":14203,"line_start":192,"line_end":192,"column_start":1,"column_end":26}},{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":14204,"byte_end":14285,"line_start":193,"line_end":193,"column_start":1,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":14405,"byte_end":14409,"line_start":198,"line_end":198,"column_start":8,"column_end":12},"name":"poll","qualname":"<ZeroRttAccepted as futures_util::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":976},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":15579,"byte_end":15592,"line_start":228,"line_end":228,"column_start":12,"column_end":25},"name":"NewConnection","qualname":"::connection::NewConnection","value":"NewConnection { connection, uni_streams, bi_streams, datagrams }","parent":null,"children":[{"krate":0,"index":977},{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":980}],"decl_id":null,"docs":" Components of a newly established connection","sig":null,"attributes":[{"value":"/ Components of a newly established connection","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":14545,"byte_end":14593,"line_start":203,"line_end":203,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":14594,"byte_end":14597,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ All fields of this struct, in addition to any other handles constructed later, must be dropped","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":14598,"byte_end":14696,"line_start":205,"line_end":205,"column_start":1,"column_end":99}},{"value":"/ for a connection to be implicitly closed. If the `NewConnection` is stored in a long-lived","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":14697,"byte_end":14791,"line_start":206,"line_end":206,"column_start":1,"column_end":95}},{"value":"/ variable, moving individual fields won't cause remaining unused fields to be dropped, even with","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":14792,"byte_end":14891,"line_start":207,"line_end":207,"column_start":1,"column_end":100}},{"value":"/ pattern-matching. The easiest way to ensure unused fields are dropped is to pattern-match on the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":14892,"byte_end":14992,"line_start":208,"line_end":208,"column_start":1,"column_end":101}},{"value":"/ variable wrapped in brackets, which forces the entire `NewConnection` to be moved out of the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":14993,"byte_end":15089,"line_start":209,"line_end":209,"column_start":1,"column_end":97}},{"value":"/ variable and into a temporary, ensuring all unused fields are dropped at the end of the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":15090,"byte_end":15181,"line_start":210,"line_end":210,"column_start":1,"column_end":92}},{"value":"/ statement:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":15182,"byte_end":15196,"line_start":211,"line_end":211,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":15197,"byte_end":15200,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":15399,"byte_end":15402,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ You can also explicitly invoke [`Connection::close()`] at any time.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":15403,"byte_end":15474,"line_start":223,"line_end":223,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":15475,"byte_end":15478,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ [`Connection::close()`]: crate::Connection::close","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":15479,"byte_end":15532,"line_start":225,"line_end":225,"column_start":1,"column_end":54}},{"value":"non_exhaustive","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":15550,"byte_end":15567,"line_start":227,"line_end":227,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":977},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":15654,"byte_end":15664,"line_start":230,"line_end":230,"column_start":9,"column_end":19},"name":"connection","qualname":"::connection::NewConnection::connection","value":"connection::Connection","parent":{"krate":0,"index":976},"children":[],"decl_id":null,"docs":" Handle for interacting with the connection\n","sig":null,"attributes":[{"value":"/ Handle for interacting with the connection","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":15599,"byte_end":15645,"line_start":229,"line_end":229,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":978},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":16056,"byte_end":16067,"line_start":238,"line_end":238,"column_start":9,"column_end":20},"name":"uni_streams","qualname":"::connection::NewConnection::uni_streams","value":"connection::IncomingUniStreams","parent":{"krate":0,"index":976},"children":[],"decl_id":null,"docs":" Unidirectional streams initiated by the peer, in the order they were opened","sig":null,"attributes":[{"value":"/ Unidirectional streams initiated by the peer, in the order they were opened","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":15682,"byte_end":15761,"line_start":231,"line_end":231,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":15766,"byte_end":15769,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ Note that data for separate streams may be delivered in any order. In other words, reading","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":15774,"byte_end":15868,"line_start":233,"line_end":233,"column_start":5,"column_end":99}},{"value":"/ from streams in the order they're opened is not optimal. See [`IncomingUniStreams`] for","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":15873,"byte_end":15964,"line_start":234,"line_end":234,"column_start":5,"column_end":96}},{"value":"/ details.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":15969,"byte_end":15981,"line_start":235,"line_end":235,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":15986,"byte_end":15989,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ [`IncomingUniStreams`]: crate::IncomingUniStreams","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":15994,"byte_end":16047,"line_start":237,"line_end":237,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":979},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":16180,"byte_end":16190,"line_start":240,"line_end":240,"column_start":9,"column_end":19},"name":"bi_streams","qualname":"::connection::NewConnection::bi_streams","value":"connection::IncomingBiStreams","parent":{"krate":0,"index":976},"children":[],"decl_id":null,"docs":" Bidirectional streams initiated by the peer, in the order they were opened\n","sig":null,"attributes":[{"value":"/ Bidirectional streams initiated by the peer, in the order they were opened","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":16093,"byte_end":16171,"line_start":239,"line_end":239,"column_start":5,"column_end":83}}]},{"kind":"Field","id":{"krate":0,"index":980},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":16276,"byte_end":16285,"line_start":242,"line_end":242,"column_start":9,"column_end":18},"name":"datagrams","qualname":"::connection::NewConnection::datagrams","value":"connection::Datagrams","parent":{"krate":0,"index":976},"children":[],"decl_id":null,"docs":" Unordered, unreliable datagrams sent by the peer\n","sig":null,"attributes":[{"value":"/ Unordered, unreliable datagrams sent by the peer","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":16215,"byte_end":16267,"line_start":241,"line_end":241,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":1013},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":19218,"byte_end":19228,"line_start":318,"line_end":318,"column_start":12,"column_end":22},"name":"Connection","qualname":"::connection::Connection","value":"","parent":null,"children":[],"decl_id":null,"docs":" A QUIC connection.","sig":null,"attributes":[{"value":"/ A QUIC connection.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":18683,"byte_end":18705,"line_start":307,"line_end":307,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":18706,"byte_end":18709,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ If all references to a connection (including every clone of the `Connection` handle, streams of","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":18710,"byte_end":18809,"line_start":309,"line_end":309,"column_start":1,"column_end":100}},{"value":"/ incoming streams, and the various stream types) have been dropped, then the connection will be","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":18810,"byte_end":18908,"line_start":310,"line_end":310,"column_start":1,"column_end":99}},{"value":"/ automatically closed with an `error_code` of 0 and an empty `reason`. You can also close the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":18909,"byte_end":19005,"line_start":311,"line_end":311,"column_start":1,"column_end":97}},{"value":"/ connection explicitly by calling [`Connection::close()`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":19006,"byte_end":19067,"line_start":312,"line_end":312,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":19068,"byte_end":19071,"line_start":313,"line_end":313,"column_start":1,"column_end":4}},{"value":"/ May be cloned to obtain another handle to the same connection.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":19072,"byte_end":19138,"line_start":314,"line_end":314,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":19139,"byte_end":19142,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"/ [`Connection::close()`]: Connection::close","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":19143,"byte_end":19189,"line_start":316,"line_end":316,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":19548,"byte_end":19556,"line_start":326,"line_end":326,"column_start":12,"column_end":20},"name":"open_uni","qualname":"<Connection>::open_uni","value":"fn open_uni(&Self) -> OpenUni","parent":null,"children":[],"decl_id":null,"docs":" Initiate a new outgoing unidirectional stream.","sig":null,"attributes":[{"value":"/ Initiate a new outgoing unidirectional stream.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":19268,"byte_end":19318,"line_start":321,"line_end":321,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":19323,"byte_end":19326,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ Streams are cheap and instantaneous to open unless blocked by flow control. As a","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":19331,"byte_end":19415,"line_start":323,"line_end":323,"column_start":5,"column_end":89}},{"value":"/ consequence, the peer won't be notified that a stream has been opened until the stream is","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":19420,"byte_end":19513,"line_start":324,"line_end":324,"column_start":5,"column_end":98}},{"value":"/ actually used.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":19518,"byte_end":19536,"line_start":325,"line_end":325,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":19977,"byte_end":19984,"line_start":338,"line_end":338,"column_start":12,"column_end":19},"name":"open_bi","qualname":"<Connection>::open_bi","value":"fn open_bi(&Self) -> OpenBi","parent":null,"children":[],"decl_id":null,"docs":" Initiate a new outgoing bidirectional stream.","sig":null,"attributes":[{"value":"/ Initiate a new outgoing bidirectional stream.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":19698,"byte_end":19747,"line_start":333,"line_end":333,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":19752,"byte_end":19755,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ Streams are cheap and instantaneous to open unless blocked by flow control. As a","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":19760,"byte_end":19844,"line_start":335,"line_end":335,"column_start":5,"column_end":89}},{"value":"/ consequence, the peer won't be notified that a stream has been opened until the stream is","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":19849,"byte_end":19942,"line_start":336,"line_end":336,"column_start":5,"column_end":98}},{"value":"/ actually used.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":19947,"byte_end":19965,"line_start":337,"line_end":337,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":21004,"byte_end":21009,"line_start":360,"line_end":360,"column_start":12,"column_end":17},"name":"close","qualname":"<Connection>::close","value":"fn close(&Self, VarInt, &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Close the connection immediately.","sig":null,"attributes":[{"value":"/ Close the connection immediately.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":20124,"byte_end":20161,"line_start":345,"line_end":345,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":20166,"byte_end":20169,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ Pending operations will fail immediately with [`ConnectionError::LocallyClosed`]. Delivery","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":20174,"byte_end":20268,"line_start":347,"line_end":347,"column_start":5,"column_end":99}},{"value":"/ of data on unfinished streams is not guaranteed, so the application must call this only","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":20273,"byte_end":20364,"line_start":348,"line_end":348,"column_start":5,"column_end":96}},{"value":"/ when all important communications have been completed, e.g. by calling [`finish`] on","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":20369,"byte_end":20457,"line_start":349,"line_end":349,"column_start":5,"column_end":93}},{"value":"/ outstanding [`SendStream`]s and waiting for the resulting futures to complete.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":20462,"byte_end":20544,"line_start":350,"line_end":350,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":20549,"byte_end":20552,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ `error_code` and `reason` are not interpreted, and are provided directly to the peer.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":20557,"byte_end":20646,"line_start":352,"line_end":352,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":20651,"byte_end":20654,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ `reason` will be truncated to fit in a single packet with overhead; to improve odds that it","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":20659,"byte_end":20754,"line_start":354,"line_end":354,"column_start":5,"column_end":100}},{"value":"/ is preserved in full, it should be kept under 1KiB.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":20759,"byte_end":20814,"line_start":355,"line_end":355,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":20819,"byte_end":20822,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ [`ConnectionError::LocallyClosed`]: crate::ConnectionError::LocallyClosed","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":20827,"byte_end":20904,"line_start":357,"line_end":357,"column_start":5,"column_end":82}},{"value":"/ [`finish`]: crate::SendStream::finish","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":20909,"byte_end":20950,"line_start":358,"line_end":358,"column_start":5,"column_end":46}},{"value":"/ [`SendStream`]: crate::SendStream","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":20955,"byte_end":20992,"line_start":359,"line_end":359,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":21488,"byte_end":21501,"line_start":370,"line_end":370,"column_start":12,"column_end":25},"name":"send_datagram","qualname":"<Connection>::send_datagram","value":"fn send_datagram(&Self, Bytes) -> Result<(), SendDatagramError>","parent":null,"children":[],"decl_id":null,"docs":" Transmit `data` as an unreliable, unordered application datagram","sig":null,"attributes":[{"value":"/ Transmit `data` as an unreliable, unordered application datagram","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":21176,"byte_end":21244,"line_start":365,"line_end":365,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":21249,"byte_end":21252,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ Application datagrams are a low-level primitive. They may be lost or delivered out of order,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":21257,"byte_end":21353,"line_start":367,"line_end":367,"column_start":5,"column_end":101}},{"value":"/ and `data` must both fit inside a single QUIC packet and be smaller than the maximum","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":21358,"byte_end":21446,"line_start":368,"line_end":368,"column_start":5,"column_end":93}},{"value":"/ dictated by the peer.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":21451,"byte_end":21476,"line_start":369,"line_end":369,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":22787,"byte_end":22804,"line_start":400,"line_end":400,"column_start":12,"column_end":29},"name":"max_datagram_size","qualname":"<Connection>::max_datagram_size","value":"fn max_datagram_size(&Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Compute the maximum size of datagrams that may be passed to [`send_datagram()`].","sig":null,"attributes":[{"value":"/ Compute the maximum size of datagrams that may be passed to [`send_datagram()`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":22177,"byte_end":22261,"line_start":389,"line_end":389,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":22266,"byte_end":22269,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if datagrams are unsupported by the peer or disabled locally.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":22274,"byte_end":22354,"line_start":391,"line_end":391,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":22359,"byte_end":22362,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ This may change over the lifetime of a connection according to variation in the path MTU","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":22367,"byte_end":22459,"line_start":393,"line_end":393,"column_start":5,"column_end":97}},{"value":"/ estimate. The peer can also enforce an arbitrarily small fixed limit, but if the peer's","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":22464,"byte_end":22555,"line_start":394,"line_end":394,"column_start":5,"column_end":96}},{"value":"/ limit is large this is guaranteed to be a little over a kilobyte at minimum.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":22560,"byte_end":22640,"line_start":395,"line_end":395,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":22645,"byte_end":22648,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ Not necessarily the maximum size of received datagrams.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":22653,"byte_end":22712,"line_start":397,"line_end":397,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":22717,"byte_end":22720,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ [`send_datagram()`]: Connection::send_datagram","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":22725,"byte_end":22775,"line_start":399,"line_end":399,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":23159,"byte_end":23173,"line_start":412,"line_end":412,"column_start":12,"column_end":26},"name":"remote_address","qualname":"<Connection>::remote_address","value":"fn remote_address(&Self) -> SocketAddr","parent":null,"children":[],"decl_id":null,"docs":" The peer's UDP address","sig":null,"attributes":[{"value":"/ The peer's UDP address","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":22964,"byte_end":22990,"line_start":408,"line_end":408,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":22995,"byte_end":22998,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ If `ServerConfig::migration` is `true`, clients may change addresses at will, e.g. when","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":23003,"byte_end":23094,"line_start":410,"line_end":410,"column_start":5,"column_end":96}},{"value":"/ switching to a cellular internet connection.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":23099,"byte_end":23147,"line_start":411,"line_end":411,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":23844,"byte_end":23852,"line_start":430,"line_end":430,"column_start":12,"column_end":20},"name":"local_ip","qualname":"<Connection>::local_ip","value":"fn local_ip(&Self) -> Option<IpAddr>","parent":null,"children":[],"decl_id":null,"docs":" The local IP address which was used when the peer established\n the connection","sig":null,"attributes":[{"value":"/ The local IP address which was used when the peer established","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":23269,"byte_end":23334,"line_start":416,"line_end":416,"column_start":5,"column_end":70}},{"value":"/ the connection","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":23339,"byte_end":23357,"line_start":417,"line_end":417,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":23362,"byte_end":23365,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ This can be different from the address the endpoint is bound to, in case","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":23370,"byte_end":23446,"line_start":419,"line_end":419,"column_start":5,"column_end":81}},{"value":"/ the endpoint is bound to a wildcard address like `0.0.0.0` or `::`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":23451,"byte_end":23522,"line_start":420,"line_end":420,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":23527,"byte_end":23530,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ This will return `None` for clients.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":23535,"byte_end":23575,"line_start":422,"line_end":422,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":23580,"byte_end":23583,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ Retrieving the local IP address is currently supported on the following","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":23588,"byte_end":23663,"line_start":424,"line_end":424,"column_start":5,"column_end":80}},{"value":"/ platforms:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":23668,"byte_end":23682,"line_start":425,"line_end":425,"column_start":5,"column_end":19}},{"value":"/ - Linux","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":23687,"byte_end":23698,"line_start":426,"line_end":426,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":23703,"byte_end":23706,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ On all non-supported platforms the local IP address will not be available,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":23711,"byte_end":23789,"line_start":428,"line_end":428,"column_start":5,"column_end":83}},{"value":"/ and the method will return `None`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":23794,"byte_end":23832,"line_start":429,"line_end":429,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":24024,"byte_end":24027,"line_start":435,"line_end":435,"column_start":12,"column_end":15},"name":"rtt","qualname":"<Connection>::rtt","value":"fn rtt(&Self) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Current best estimate of this connection's latency (round-trip-time)\n","sig":null,"attributes":[{"value":"/ Current best estimate of this connection's latency (round-trip-time)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":23940,"byte_end":24012,"line_start":434,"line_end":434,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":24144,"byte_end":24149,"line_start":440,"line_end":440,"column_start":12,"column_end":17},"name":"stats","qualname":"<Connection>::stats","value":"fn stats(&Self) -> ConnectionStats","parent":null,"children":[],"decl_id":null,"docs":" Returns connection statistics\n","sig":null,"attributes":[{"value":"/ Returns connection statistics","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":24099,"byte_end":24132,"line_start":439,"line_end":439,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":24321,"byte_end":24337,"line_start":445,"line_end":445,"column_start":12,"column_end":28},"name":"congestion_state","qualname":"<Connection>::congestion_state","value":"fn congestion_state(&Self) -> Box<dyn Controller>","parent":null,"children":[],"decl_id":null,"docs":" Current state of the congestion control algorithm, for debugging purposes\n","sig":null,"attributes":[{"value":"/ Current state of the congestion control algorithm, for debugging purposes","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":24232,"byte_end":24309,"line_start":444,"line_end":444,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":24865,"byte_end":24879,"line_start":460,"line_end":460,"column_start":12,"column_end":26},"name":"handshake_data","qualname":"<Connection>::handshake_data","value":"fn handshake_data(&Self) -> Option<Box<dyn Any>>","parent":null,"children":[],"decl_id":null,"docs":" Parameters negotiated during the handshake","sig":null,"attributes":[{"value":"/ Parameters negotiated during the handshake","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":24510,"byte_end":24556,"line_start":453,"line_end":453,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":24561,"byte_end":24564,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ Guaranteed to return `Some` on fully established connections or after","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":24569,"byte_end":24642,"line_start":455,"line_end":455,"column_start":5,"column_end":78}},{"value":"/ [`Connecting::handshake_data()`] succeeds. See that method's documentations for details on","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":24647,"byte_end":24741,"line_start":456,"line_end":456,"column_start":5,"column_end":99}},{"value":"/ the returned value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":24746,"byte_end":24769,"line_start":457,"line_end":457,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":24774,"byte_end":24777,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ [`Connection::handshake_data()`]: crate::Connecting::handshake_data","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":24782,"byte_end":24853,"line_start":459,"line_end":459,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":25383,"byte_end":25396,"line_start":473,"line_end":473,"column_start":12,"column_end":25},"name":"peer_identity","qualname":"<Connection>::peer_identity","value":"fn peer_identity(&Self) -> Option<Box<dyn Any>>","parent":null,"children":[],"decl_id":null,"docs":" Cryptographic identity of the peer","sig":null,"attributes":[{"value":"/ Cryptographic identity of the peer","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":25054,"byte_end":25092,"line_start":468,"line_end":468,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":25097,"byte_end":25100,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ The dynamic type returned is determined by the configured","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":25105,"byte_end":25166,"line_start":470,"line_end":470,"column_start":5,"column_end":66}},{"value":"/ [`Session`](proto::crypto::Session). For the default `rustls` session, the return value can","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":25171,"byte_end":25266,"line_start":471,"line_end":471,"column_start":5,"column_end":100}},{"value":"/ be [`downcast`](Box::downcast) to a <code>Vec<[rustls::Certificate](rustls::Certificate)></code>","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":25271,"byte_end":25371,"line_start":472,"line_end":472,"column_start":5,"column_end":105}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":25763,"byte_end":25772,"line_start":485,"line_end":485,"column_start":12,"column_end":21},"name":"stable_id","qualname":"<Connection>::stable_id","value":"fn stable_id(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" A stable identifier for this connection","sig":null,"attributes":[{"value":"/ A stable identifier for this connection","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":25569,"byte_end":25612,"line_start":481,"line_end":481,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":25617,"byte_end":25620,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ Peer addresses and connection IDs can change, but this value will remain","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":25625,"byte_end":25701,"line_start":483,"line_end":483,"column_start":5,"column_end":81}},{"value":"/ fixed for the lifetime of the connection.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":25706,"byte_end":25751,"line_start":484,"line_end":484,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":25918,"byte_end":25934,"line_start":491,"line_end":491,"column_start":12,"column_end":28},"name":"force_key_update","qualname":"<Connection>::force_key_update","value":"fn force_key_update(&Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":26509,"byte_end":26531,"line_start":503,"line_end":503,"column_start":12,"column_end":34},"name":"export_keying_material","qualname":"<Connection>::export_keying_material","value":"fn export_keying_material(&Self, &mut [u8], &[u8], &[u8])\n-> Result<(), proto::crypto::ExportKeyingMaterialError>","parent":null,"children":[],"decl_id":null,"docs":" Derive keying material from this connection's TLS session secrets.","sig":null,"attributes":[{"value":"/ Derive keying material from this connection's TLS session secrets.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":26023,"byte_end":26093,"line_start":495,"line_end":495,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":26098,"byte_end":26101,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ When both peers call this method with the same `label` and `context`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":26106,"byte_end":26178,"line_start":497,"line_end":497,"column_start":5,"column_end":77}},{"value":"/ arguments and `output` buffers of equal length, they will get the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":26183,"byte_end":26252,"line_start":498,"line_end":498,"column_start":5,"column_end":74}},{"value":"/ same sequence of bytes in `output`. These bytes are cryptographically","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":26257,"byte_end":26330,"line_start":499,"line_end":499,"column_start":5,"column_end":78}},{"value":"/ strong and pseudorandom, and are suitable for use as keying material.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":26335,"byte_end":26408,"line_start":500,"line_end":500,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":26413,"byte_end":26416,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ See [RFC5705](https://tools.ietf.org/html/rfc5705) for more information.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":26421,"byte_end":26497,"line_start":502,"line_end":502,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":27149,"byte_end":27179,"line_start":520,"line_end":520,"column_start":12,"column_end":42},"name":"set_max_concurrent_uni_streams","qualname":"<Connection>::set_max_concurrent_uni_streams","value":"fn set_max_concurrent_uni_streams(&Self, VarInt)","parent":null,"children":[],"decl_id":null,"docs":" Modify the number of remotely initiated unidirectional streams that may be concurrently open","sig":null,"attributes":[{"value":"/ Modify the number of remotely initiated unidirectional streams that may be concurrently open","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":26864,"byte_end":26960,"line_start":516,"line_end":516,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":26965,"byte_end":26968,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ No streams may be opened by the peer unless fewer than `count` are already open. Large","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":26973,"byte_end":27063,"line_start":518,"line_end":518,"column_start":5,"column_end":95}},{"value":"/ `count`s increase both minimum and worst-case memory consumption.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":27068,"byte_end":27137,"line_start":519,"line_end":519,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":27491,"byte_end":27509,"line_start":528,"line_end":528,"column_start":12,"column_end":30},"name":"set_receive_window","qualname":"<Connection>::set_receive_window","value":"fn set_receive_window(&Self, VarInt)","parent":null,"children":[],"decl_id":null,"docs":" See [`proto::TransportConfig::receive_window()`]\n","sig":null,"attributes":[{"value":"/ See [`proto::TransportConfig::receive_window()`]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":27427,"byte_end":27479,"line_start":527,"line_end":527,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":27972,"byte_end":28001,"line_start":538,"line_end":538,"column_start":12,"column_end":41},"name":"set_max_concurrent_bi_streams","qualname":"<Connection>::set_max_concurrent_bi_streams","value":"fn set_max_concurrent_bi_streams(&Self, VarInt)","parent":null,"children":[],"decl_id":null,"docs":" Modify the number of remotely initiated bidirectional streams that may be concurrently open","sig":null,"attributes":[{"value":"/ Modify the number of remotely initiated bidirectional streams that may be concurrently open","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":27688,"byte_end":27783,"line_start":534,"line_end":534,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":27788,"byte_end":27791,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ No streams may be opened by the peer unless fewer than `count` are already open. Large","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":27796,"byte_end":27886,"line_start":536,"line_end":536,"column_start":5,"column_end":95}},{"value":"/ `count`s increase both minimum and worst-case memory consumption.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":27891,"byte_end":27960,"line_start":537,"line_end":537,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":28280,"byte_end":28285,"line_start":547,"line_end":547,"column_start":8,"column_end":13},"name":"clone","qualname":"<Connection as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1018},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":29074,"byte_end":29092,"line_start":563,"line_end":563,"column_start":12,"column_end":30},"name":"IncomingUniStreams","qualname":"::connection::IncomingUniStreams","value":"","parent":null,"children":[],"decl_id":null,"docs":" A stream of unidirectional QUIC streams initiated by a remote peer.","sig":null,"attributes":[{"value":"/ A stream of unidirectional QUIC streams initiated by a remote peer.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":28347,"byte_end":28418,"line_start":552,"line_end":552,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":28419,"byte_end":28422,"line_start":553,"line_end":553,"column_start":1,"column_end":4}},{"value":"/ Incoming streams are *always* opened in the same order that the peer created them, but data can","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":28423,"byte_end":28522,"line_start":554,"line_end":554,"column_start":1,"column_end":100}},{"value":"/ be delivered to open streams in any order. This allows meaning to be assigned to the sequence in","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":28523,"byte_end":28623,"line_start":555,"line_end":555,"column_start":1,"column_end":101}},{"value":"/ which streams are opened. For example, a file transfer protocol might designate the first stream","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":28624,"byte_end":28724,"line_start":556,"line_end":556,"column_start":1,"column_end":101}},{"value":"/ the client opens as a \"control\" stream, using all others for exchanging file data.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":28725,"byte_end":28811,"line_start":557,"line_end":557,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":28812,"byte_end":28815,"line_start":558,"line_end":558,"column_start":1,"column_end":4}},{"value":"/ Processing streams in the order they're opened will produce head-of-line blocking. For best","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":28816,"byte_end":28911,"line_start":559,"line_end":559,"column_start":1,"column_end":96}},{"value":"/ performance, an application should be prepared to fully process later streams before any data is","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":28912,"byte_end":29012,"line_start":560,"line_end":560,"column_start":1,"column_end":101}},{"value":"/ received on earlier streams.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":29013,"byte_end":29045,"line_start":561,"line_end":561,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":29230,"byte_end":29239,"line_start":568,"line_end":568,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<IncomingUniStreams as futures_util::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":22,"index":96},"children":[],"decl_id":{"krate":22,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1023},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":30172,"byte_end":30189,"line_start":589,"line_end":589,"column_start":12,"column_end":29},"name":"IncomingBiStreams","qualname":"::connection::IncomingBiStreams","value":"","parent":null,"children":[],"decl_id":null,"docs":" A stream of bidirectional QUIC streams initiated by a remote peer.","sig":null,"attributes":[{"value":"/ A stream of bidirectional QUIC streams initiated by a remote peer.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":29989,"byte_end":30059,"line_start":585,"line_end":585,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":30060,"byte_end":30063,"line_start":586,"line_end":586,"column_start":1,"column_end":4}},{"value":"/ See `IncomingUniStreams` for information about incoming streams in general.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":30064,"byte_end":30143,"line_start":587,"line_end":587,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":30340,"byte_end":30349,"line_start":594,"line_end":594,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<IncomingBiStreams as futures_util::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":22,"index":96},"children":[],"decl_id":{"krate":22,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1028},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":31338,"byte_end":31347,"line_start":617,"line_end":617,"column_start":12,"column_end":21},"name":"Datagrams","qualname":"::connection::Datagrams","value":"","parent":null,"children":[],"decl_id":null,"docs":" Stream of unordered, unreliable datagrams sent by the peer\n","sig":null,"attributes":[{"value":"/ Stream of unordered, unreliable datagrams sent by the peer","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":31247,"byte_end":31309,"line_start":615,"line_end":615,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":31471,"byte_end":31480,"line_start":622,"line_end":622,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Datagrams as futures_util::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":22,"index":96},"children":[],"decl_id":{"krate":22,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":210},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":32197,"byte_end":32204,"line_start":639,"line_end":639,"column_start":12,"column_end":19},"name":"OpenUni","qualname":"::connection::OpenUni","value":"OpenUni {  }","parent":null,"children":[{"krate":0,"index":211},{"krate":0,"index":212}],"decl_id":null,"docs":" A future that will resolve into an opened outgoing unidirectional stream\n","sig":null,"attributes":[{"value":"/ A future that will resolve into an opened outgoing unidirectional stream","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":32027,"byte_end":32103,"line_start":637,"line_end":637,"column_start":1,"column_end":77}},{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":32104,"byte_end":32185,"line_start":638,"line_end":638,"column_start":1,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":32353,"byte_end":32357,"line_start":647,"line_end":647,"column_start":8,"column_end":12},"name":"poll","qualname":"<OpenUni as futures_util::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":216},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":33166,"byte_end":33172,"line_start":665,"line_end":665,"column_start":12,"column_end":18},"name":"OpenBi","qualname":"::connection::OpenBi","value":"OpenBi {  }","parent":null,"children":[{"krate":0,"index":217},{"krate":0,"index":218}],"decl_id":null,"docs":" A future that will resolve into an opened outgoing bidirectional stream\n","sig":null,"attributes":[{"value":"/ A future that will resolve into an opened outgoing bidirectional stream","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":32997,"byte_end":33072,"line_start":663,"line_end":663,"column_start":1,"column_end":76}},{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":33073,"byte_end":33154,"line_start":664,"line_end":664,"column_start":1,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":33334,"byte_end":33338,"line_start":673,"line_end":673,"column_start":8,"column_end":12},"name":"poll","qualname":"<OpenBi as futures_util::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1059},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":47740,"byte_end":47757,"line_start":1069,"line_end":1069,"column_start":5,"column_end":22},"name":"UnsupportedByPeer","qualname":"::connection::SendDatagramError::UnsupportedByPeer","value":"SendDatagramError::UnsupportedByPeer","parent":{"krate":0,"index":1038},"children":[],"decl_id":null,"docs":" The peer does not support receiving datagram frames\n","sig":null,"attributes":[{"value":"/ The peer does not support receiving datagram frames","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":47632,"byte_end":47687,"line_start":1067,"line_end":1067,"column_start":5,"column_end":60}},{"value":"error(\"datagrams not supported by peer\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":47692,"byte_end":47735,"line_start":1068,"line_end":1068,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1061},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":47850,"byte_end":47858,"line_start":1072,"line_end":1072,"column_start":5,"column_end":13},"name":"Disabled","qualname":"::connection::SendDatagramError::Disabled","value":"SendDatagramError::Disabled","parent":{"krate":0,"index":1038},"children":[],"decl_id":null,"docs":" Datagram support is disabled locally\n","sig":null,"attributes":[{"value":"/ Datagram support is disabled locally","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":47763,"byte_end":47803,"line_start":1070,"line_end":1070,"column_start":5,"column_end":45}},{"value":"error(\"datagram support disabled\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":47808,"byte_end":47845,"line_start":1071,"line_end":1071,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1063},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":48098,"byte_end":48106,"line_start":1078,"line_end":1078,"column_start":5,"column_end":13},"name":"TooLarge","qualname":"::connection::SendDatagramError::TooLarge","value":"SendDatagramError::TooLarge","parent":{"krate":0,"index":1038},"children":[],"decl_id":null,"docs":" The datagram is larger than the connection can currently accommodate","sig":null,"attributes":[{"value":"/ The datagram is larger than the connection can currently accommodate","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":47864,"byte_end":47936,"line_start":1073,"line_end":1073,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":47941,"byte_end":47944,"line_start":1074,"line_end":1074,"column_start":5,"column_end":8}},{"value":"/ Indicates that the path MTU minus overhead or the limit advertised by the peer has been","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":47949,"byte_end":48040,"line_start":1075,"line_end":1075,"column_start":5,"column_end":96}},{"value":"/ exceeded.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":48045,"byte_end":48058,"line_start":1076,"line_end":1076,"column_start":5,"column_end":18}},{"value":"error(\"datagram too large\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":48063,"byte_end":48093,"line_start":1077,"line_end":1077,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1065},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":48176,"byte_end":48190,"line_start":1081,"line_end":1081,"column_start":5,"column_end":19},"name":"ConnectionLost","qualname":"::connection::SendDatagramError::ConnectionLost","value":"SendDatagramError::ConnectionLost(ConnectionError)","parent":{"krate":0,"index":1038},"children":[],"decl_id":null,"docs":" The connection was lost\n","sig":null,"attributes":[{"value":"/ The connection was lost","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":48112,"byte_end":48139,"line_start":1079,"line_end":1079,"column_start":5,"column_end":32}},{"value":"error(\"connection lost\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":48144,"byte_end":48171,"line_start":1080,"line_end":1080,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":1067},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":48199,"byte_end":48214,"line_start":1081,"line_end":1081,"column_start":28,"column_end":43},"name":"0","qualname":"::connection::SendDatagramError::ConnectionLost::0","value":"quinn_proto::ConnectionError","parent":{"krate":0,"index":1065},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"from","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":48191,"byte_end":48198,"line_start":1081,"line_end":1081,"column_start":20,"column_end":27}}]},{"kind":"Enum","id":{"krate":0,"index":1038},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":47608,"byte_end":47625,"line_start":1066,"line_end":1066,"column_start":10,"column_end":27},"name":"SendDatagramError","qualname":"::connection::SendDatagramError","value":"enum SendDatagramError {\n    UnsupportedByPeer,\n    Disabled,\n    TooLarge,\n    ConnectionLost(ConnectionError),\n}","parent":null,"children":[{"krate":0,"index":1059},{"krate":0,"index":1061},{"krate":0,"index":1063},{"krate":0,"index":1065}],"decl_id":null,"docs":" Errors that can arise when sending a datagram\n","sig":null,"attributes":[{"value":"/ Errors that can arise when sending a datagram","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":47503,"byte_end":47552,"line_start":1064,"line_end":1064,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":1068},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":49516,"byte_end":49524,"line_start":39,"line_end":39,"column_start":12,"column_end":20},"name":"Endpoint","qualname":"::endpoint::Endpoint","value":"Endpoint {  }","parent":null,"children":[{"krate":0,"index":1069},{"krate":0,"index":1070}],"decl_id":null,"docs":" A QUIC endpoint.","sig":null,"attributes":[{"value":"/ A QUIC endpoint.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":49239,"byte_end":49259,"line_start":32,"line_end":32,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":49260,"byte_end":49263,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ An endpoint corresponds to a single UDP socket, may host many connections, and may act as both","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":49264,"byte_end":49362,"line_start":34,"line_end":34,"column_start":1,"column_end":99}},{"value":"/ client and server for different connections.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":49363,"byte_end":49411,"line_start":35,"line_end":35,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":49412,"byte_end":49415,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ May be cloned to obtain another handle to the same endpoint.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":49416,"byte_end":49480,"line_start":37,"line_end":37,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":50403,"byte_end":50409,"line_start":57,"line_end":57,"column_start":12,"column_end":18},"name":"client","qualname":"<Endpoint>::client","value":"fn client(SocketAddr) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Helper to construct an endpoint for use with outgoing connections only","sig":null,"attributes":[{"value":"/ Helper to construct an endpoint for use with outgoing connections only","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":49645,"byte_end":49719,"line_start":45,"line_end":45,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":49724,"byte_end":49727,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ Must be called from within a tokio runtime context. Note that `addr` is the *local* address","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":49732,"byte_end":49827,"line_start":47,"line_end":47,"column_start":5,"column_end":100}},{"value":"/ to bind to, which should usually be a wildcard address like `0.0.0.0:0` or `[::]:0`, which","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":49832,"byte_end":49926,"line_start":48,"line_end":48,"column_start":5,"column_end":99}},{"value":"/ allow communication with any reachable IPv4 or IPv6 address respectively from an OS-assigned","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":49931,"byte_end":50027,"line_start":49,"line_end":49,"column_start":5,"column_end":101}},{"value":"/ port.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":50032,"byte_end":50041,"line_start":50,"line_end":50,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":50046,"byte_end":50049,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ Platform defaults for dual-stack sockets vary. For example, any socket bound to a wildcard","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":50054,"byte_end":50148,"line_start":52,"line_end":52,"column_start":5,"column_end":99}},{"value":"/ IPv6 address on Windows will not by default be able to communicate with IPv4","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":50153,"byte_end":50233,"line_start":53,"line_end":53,"column_start":5,"column_end":85}},{"value":"/ addresses. Portable applications should bind an address that matches the family they wish to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":50238,"byte_end":50334,"line_start":54,"line_end":54,"column_start":5,"column_end":101}},{"value":"/ communicate within.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":50339,"byte_end":50362,"line_start":55,"line_end":55,"column_start":5,"column_end":28}},{"value":"cfg(feature = \"ring\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":50367,"byte_end":50391,"line_start":56,"line_end":56,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":51099,"byte_end":51105,"line_start":71,"line_end":71,"column_start":12,"column_end":18},"name":"server","qualname":"<Endpoint>::server","value":"fn server(ServerConfig, SocketAddr) -> io::Result<(Self, Incoming)>","parent":null,"children":[],"decl_id":null,"docs":" Helper to construct an endpoint for use with both incoming and outgoing connections","sig":null,"attributes":[{"value":"/ Helper to construct an endpoint for use with both incoming and outgoing connections","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":50582,"byte_end":50669,"line_start":62,"line_end":62,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":50674,"byte_end":50677,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ Must be called from within a tokio runtime context.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":50682,"byte_end":50737,"line_start":64,"line_end":64,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":50742,"byte_end":50745,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ Platform defaults for dual-stack sockets vary. For example, any socket bound to a wildcard","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":50750,"byte_end":50844,"line_start":66,"line_end":66,"column_start":5,"column_end":99}},{"value":"/ IPv6 address on Windows will not by default be able to communicate with IPv4","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":50849,"byte_end":50929,"line_start":67,"line_end":67,"column_start":5,"column_end":85}},{"value":"/ addresses. Portable applications should bind an address that matches the family they wish to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":50934,"byte_end":51030,"line_start":68,"line_end":68,"column_start":5,"column_end":101}},{"value":"/ communicate within.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":51035,"byte_end":51058,"line_start":69,"line_end":69,"column_start":5,"column_end":28}},{"value":"cfg(feature = \"ring\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":51063,"byte_end":51087,"line_start":70,"line_end":70,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":51447,"byte_end":51450,"line_start":79,"line_end":79,"column_start":12,"column_end":15},"name":"new","qualname":"<Endpoint>::new","value":"fn new(EndpointConfig, Option<ServerConfig>, std::net::UdpSocket)\n-> io::Result<(Self, Incoming)>","parent":null,"children":[],"decl_id":null,"docs":" Construct an endpoint with arbitrary configuration","sig":null,"attributes":[{"value":"/ Construct an endpoint with arbitrary configuration","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":51313,"byte_end":51367,"line_start":76,"line_end":76,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":51372,"byte_end":51375,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ Must be called from within a tokio runtime context.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":51380,"byte_end":51435,"line_start":78,"line_end":78,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":52315,"byte_end":52340,"line_start":107,"line_end":107,"column_start":12,"column_end":37},"name":"set_default_client_config","qualname":"<Endpoint>::set_default_client_config","value":"fn set_default_client_config(&mut Self, ClientConfig)","parent":null,"children":[],"decl_id":null,"docs":" Set the client configuration used by `connect`\n","sig":null,"attributes":[{"value":"/ Set the client configuration used by `connect`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":52253,"byte_end":52303,"line_start":106,"line_end":106,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":52836,"byte_end":52843,"line_start":119,"line_end":119,"column_start":12,"column_end":19},"name":"connect","qualname":"<Endpoint>::connect","value":"fn connect(&Self, SocketAddr, &str) -> Result<Connecting, ConnectError>","parent":null,"children":[],"decl_id":null,"docs":" Connect to a remote endpoint","sig":null,"attributes":[{"value":"/ Connect to a remote endpoint","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":52438,"byte_end":52470,"line_start":111,"line_end":111,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":52475,"byte_end":52478,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ `server_name` must be covered by the certificate presented by the server. This prevents a","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":52483,"byte_end":52576,"line_start":113,"line_end":113,"column_start":5,"column_end":98}},{"value":"/ connection from being intercepted by an attacker with a valid certificate for some other","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":52581,"byte_end":52673,"line_start":114,"line_end":114,"column_start":5,"column_end":97}},{"value":"/ server.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":52678,"byte_end":52689,"line_start":115,"line_end":115,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":52694,"byte_end":52697,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ May fail immediately due to configuration errors, or in the future if the connection could","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":52702,"byte_end":52796,"line_start":117,"line_end":117,"column_start":5,"column_end":99}},{"value":"/ not be established.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":52801,"byte_end":52824,"line_start":118,"line_end":118,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":409},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":53342,"byte_end":53354,"line_start":133,"line_end":133,"column_start":12,"column_end":24},"name":"connect_with","qualname":"<Endpoint>::connect_with","value":"fn connect_with(&Self, ClientConfig, SocketAddr, &str)\n-> Result<Connecting, ConnectError>","parent":null,"children":[],"decl_id":null,"docs":" Connect to a remote endpoint using a custom configuration.","sig":null,"attributes":[{"value":"/ Connect to a remote endpoint using a custom configuration.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":53172,"byte_end":53234,"line_start":128,"line_end":128,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":53239,"byte_end":53242,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ See [`connect()`] for details.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":53247,"byte_end":53281,"line_start":130,"line_end":130,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":53286,"byte_end":53289,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ [`connect()`]: Endpoint::connect","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":53294,"byte_end":53330,"line_start":132,"line_end":132,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":54408,"byte_end":54414,"line_start":162,"line_end":162,"column_start":12,"column_end":18},"name":"rebind","qualname":"<Endpoint>::rebind","value":"fn rebind(&Self, std::net::UdpSocket) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Switch to a new UDP socket","sig":null,"attributes":[{"value":"/ Switch to a new UDP socket","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":54105,"byte_end":54135,"line_start":156,"line_end":156,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":54140,"byte_end":54143,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Allows the endpoint's address to be updated live, affecting all active connections. Incoming","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":54148,"byte_end":54244,"line_start":158,"line_end":158,"column_start":5,"column_end":101}},{"value":"/ connections and connections to servers unreachable from the new address will be lost.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":54249,"byte_end":54338,"line_start":159,"line_end":159,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":54343,"byte_end":54346,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ On error, the old UDP socket is retained.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":54351,"byte_end":54396,"line_start":161,"line_end":161,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":411},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":55153,"byte_end":55170,"line_start":181,"line_end":181,"column_start":12,"column_end":29},"name":"set_server_config","qualname":"<Endpoint>::set_server_config","value":"fn set_server_config(&Self, Option<ServerConfig>)","parent":null,"children":[],"decl_id":null,"docs":" Replace the server configuration, affecting new incoming connections only","sig":null,"attributes":[{"value":"/ Replace the server configuration, affecting new incoming connections only","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":54963,"byte_end":55040,"line_start":178,"line_end":178,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":55045,"byte_end":55048,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ Useful for e.g. refreshing TLS certificates without disrupting existing connections.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":55053,"byte_end":55141,"line_start":180,"line_end":180,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":412},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":55444,"byte_end":55454,"line_start":190,"line_end":190,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<Endpoint>::local_addr","value":"fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Get the local `SocketAddr` the underlying socket is bound to\n","sig":null,"attributes":[{"value":"/ Get the local `SocketAddr` the underlying socket is bound to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":55368,"byte_end":55432,"line_start":189,"line_end":189,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":413},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":55784,"byte_end":55789,"line_start":199,"line_end":199,"column_start":12,"column_end":17},"name":"close","qualname":"<Endpoint>::close","value":"fn close(&Self, VarInt, &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Close all of this endpoint's connections immediately and cease accepting new connections.","sig":null,"attributes":[{"value":"/ Close all of this endpoint's connections immediately and cease accepting new connections.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":55556,"byte_end":55649,"line_start":194,"line_end":194,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":55654,"byte_end":55657,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ See [`Connection::close()`] for details.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":55662,"byte_end":55706,"line_start":196,"line_end":196,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":55711,"byte_end":55714,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ [`Connection::close()`]: crate::Connection::close","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":55719,"byte_end":55772,"line_start":198,"line_end":198,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":414},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":57025,"byte_end":57034,"line_start":227,"line_end":227,"column_start":18,"column_end":27},"name":"wait_idle","qualname":"<Endpoint>::wait_idle","value":"async fn wait_idle<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Wait for all connections on the endpoint to be cleanly shut down","sig":null,"attributes":[{"value":"/ Wait for all connections on the endpoint to be cleanly shut down","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":56402,"byte_end":56470,"line_start":215,"line_end":215,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":56475,"byte_end":56478,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ Waiting for this condition before exiting ensures that a good-faith effort is made to notify","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":56483,"byte_end":56579,"line_start":217,"line_end":217,"column_start":5,"column_end":101}},{"value":"/ peers of recent connection closes, whereas exiting immediately could force them to wait out","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":56584,"byte_end":56679,"line_start":218,"line_end":218,"column_start":5,"column_end":100}},{"value":"/ the idle timeout period.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":56684,"byte_end":56712,"line_start":219,"line_end":219,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":56717,"byte_end":56720,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ Does not proactively close existing connections or cause incoming connections to be","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":56725,"byte_end":56812,"line_start":221,"line_end":221,"column_start":5,"column_end":92}},{"value":"/ rejected. Consider calling [`close()`] and dropping the [`Incoming`] stream if","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":56817,"byte_end":56899,"line_start":222,"line_end":222,"column_start":5,"column_end":87}},{"value":"/ that is desired.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":56904,"byte_end":56924,"line_start":223,"line_end":223,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":56929,"byte_end":56932,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ [`close()`]: Endpoint::close","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":56937,"byte_end":56969,"line_start":225,"line_end":225,"column_start":5,"column_end":37}},{"value":"/ [`Incoming`]: crate::Incoming","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":56974,"byte_end":57007,"line_start":226,"line_end":226,"column_start":5,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":1137},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":67314,"byte_end":67322,"line_start":513,"line_end":513,"column_start":12,"column_end":20},"name":"Incoming","qualname":"::endpoint::Incoming","value":"","parent":null,"children":[],"decl_id":null,"docs":" Stream of incoming connections.\n","sig":null,"attributes":[{"value":"/ Stream of incoming connections.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":67250,"byte_end":67285,"line_start":511,"line_end":511,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":67553,"byte_end":67562,"line_start":525,"line_end":525,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Incoming as futures_util::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":22,"index":96},"children":[],"decl_id":{"krate":22,"index":98},"docs":"","sig":null,"attributes":[{"value":"allow(unused_mut)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":67517,"byte_end":67537,"line_start":524,"line_end":524,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":442},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":68103,"byte_end":68107,"line_start":541,"line_end":541,"column_start":8,"column_end":12},"name":"drop","qualname":"<Incoming as std::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":2,"index":3422},"children":[],"decl_id":{"krate":2,"index":3423},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1153},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":75077,"byte_end":75087,"line_start":25,"line_end":25,"column_start":12,"column_end":22},"name":"RecvStream","qualname":"::recv_stream::RecvStream","value":"RecvStream {  }","parent":null,"children":[{"krate":0,"index":1154},{"krate":0,"index":1155},{"krate":0,"index":1156},{"krate":0,"index":1157},{"krate":0,"index":1158}],"decl_id":null,"docs":" A stream that can only be used to receive data","sig":null,"attributes":[{"value":"/ A stream that can only be used to receive data","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":74766,"byte_end":74816,"line_start":16,"line_end":16,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":74817,"byte_end":74820,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ `stop(0)` is implicitly called on drop unless:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":74821,"byte_end":74871,"line_start":18,"line_end":18,"column_start":1,"column_end":51}},{"value":"/ - A variant of [`ReadError`] has been yielded by a read call","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":74872,"byte_end":74936,"line_start":19,"line_end":19,"column_start":1,"column_end":65}},{"value":"/ - [`stop()`] was called explicitly","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":74937,"byte_end":74975,"line_start":20,"line_end":20,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":74976,"byte_end":74979,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ [`ReadError`]: crate::ReadError","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":74980,"byte_end":75015,"line_start":22,"line_end":22,"column_start":1,"column_end":36}},{"value":"/ [`stop()`]: RecvStream::stop","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":75016,"byte_end":75048,"line_start":23,"line_end":23,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":549},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":75633,"byte_end":75637,"line_start":47,"line_end":47,"column_start":12,"column_end":16},"name":"read","qualname":"<RecvStream>::read","value":"fn read<'a>(&'a mut Self, &'a mut [u8]) -> Read","parent":null,"children":[],"decl_id":null,"docs":" Read data contiguously from the stream.","sig":null,"attributes":[{"value":"/ Read data contiguously from the stream.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":75469,"byte_end":75512,"line_start":44,"line_end":44,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":75517,"byte_end":75520,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Yields the number of bytes read into `buf` on success, or `None` if the stream was finished.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":75525,"byte_end":75621,"line_start":46,"line_end":46,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":75951,"byte_end":75961,"line_start":59,"line_end":59,"column_start":12,"column_end":22},"name":"read_exact","qualname":"<RecvStream>::read_exact","value":"fn read_exact<'a>(&'a mut Self, &'a mut [u8]) -> ReadExact","parent":null,"children":[],"decl_id":null,"docs":" Read an exact number of bytes contiguously from the stream.","sig":null,"attributes":[{"value":"/ Read an exact number of bytes contiguously from the stream.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":75787,"byte_end":75850,"line_start":54,"line_end":54,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":75855,"byte_end":75858,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ See [`read()`] for details.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":75863,"byte_end":75894,"line_start":56,"line_end":56,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":75899,"byte_end":75902,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ [`read()`]: RecvStream::read","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":75907,"byte_end":75939,"line_start":58,"line_end":58,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":557},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":77819,"byte_end":77829,"line_start":106,"line_end":106,"column_start":12,"column_end":22},"name":"read_chunk","qualname":"<RecvStream>::read_chunk","value":"fn read_chunk(&mut Self, usize, bool) -> ReadChunk","parent":null,"children":[],"decl_id":null,"docs":" Read the next segment of data","sig":null,"attributes":[{"value":"/ Read the next segment of data","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":77031,"byte_end":77064,"line_start":95,"line_end":95,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":77069,"byte_end":77072,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ Yields `None` if the stream was finished. Otherwise, yields a segment of data and its","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":77077,"byte_end":77166,"line_start":97,"line_end":97,"column_start":5,"column_end":94}},{"value":"/ offset in the stream. If `ordered` is `true`, the chunk's offset will be immediately after","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":77171,"byte_end":77265,"line_start":98,"line_end":98,"column_start":5,"column_end":99}},{"value":"/ the last data yielded by `read()` or `read_chunk()`. If `ordered` is `false`, segments may","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":77270,"byte_end":77364,"line_start":99,"line_end":99,"column_start":5,"column_end":99}},{"value":"/ be received in any order, and the `Chunk`'s `offset` field can be used to determine","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":77369,"byte_end":77456,"line_start":100,"line_end":100,"column_start":5,"column_end":92}},{"value":"/ ordering in the caller. Unordered reads are less prone to head-of-line blocking within a","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":77461,"byte_end":77553,"line_start":101,"line_end":101,"column_start":5,"column_end":97}},{"value":"/ stream, but require the application to manage reassembling the original data.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":77558,"byte_end":77639,"line_start":102,"line_end":102,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":77644,"byte_end":77647,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ Slightly more efficient than `read` due to not copying. Chunk boundaries do not correspond","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":77652,"byte_end":77746,"line_start":104,"line_end":104,"column_start":5,"column_end":99}},{"value":"/ to peer writes, and hence cannot be used as framing.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":77751,"byte_end":77807,"line_start":105,"line_end":105,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":560},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":78846,"byte_end":78857,"line_start":135,"line_end":135,"column_start":12,"column_end":23},"name":"read_chunks","qualname":"<RecvStream>::read_chunks","value":"fn read_chunks<'a>(&'a mut Self, &'a mut [Bytes]) -> ReadChunks","parent":null,"children":[],"decl_id":null,"docs":" Read the next segments of data","sig":null,"attributes":[{"value":"/ Read the next segments of data","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":78446,"byte_end":78480,"line_start":127,"line_end":127,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":78485,"byte_end":78488,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ Fills `bufs` with the segments of data beginning immediately after the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":78493,"byte_end":78567,"line_start":129,"line_end":129,"column_start":5,"column_end":79}},{"value":"/ last data yielded by `read` or `read_chunk`, or `None` if the stream was","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":78572,"byte_end":78648,"line_start":130,"line_end":130,"column_start":5,"column_end":81}},{"value":"/ finished.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":78653,"byte_end":78666,"line_start":131,"line_end":131,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":78671,"byte_end":78674,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ Slightly more efficient than `read` due to not copying. Chunk boundaries","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":78679,"byte_end":78755,"line_start":133,"line_end":133,"column_start":5,"column_end":81}},{"value":"/ do not correspond to peer writes, and hence cannot be used as framing.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":78760,"byte_end":78834,"line_start":134,"line_end":134,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":80454,"byte_end":80465,"line_start":178,"line_end":178,"column_start":12,"column_end":23},"name":"read_to_end","qualname":"<RecvStream>::read_to_end","value":"fn read_to_end(Self, usize) -> ReadToEnd","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to read all remaining data into a buffer","sig":null,"attributes":[{"value":"/ Convenience method to read all remaining data into a buffer","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":79906,"byte_end":79969,"line_start":168,"line_end":168,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":79974,"byte_end":79977,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ The returned future fails with [`ReadToEndError::TooLong`] if it's longer than `size_limit`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":79982,"byte_end":80077,"line_start":170,"line_end":170,"column_start":5,"column_end":100}},{"value":"/ bytes. Uses unordered reads to be more efficient than using `AsyncRead` would allow.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":80082,"byte_end":80170,"line_start":171,"line_end":171,"column_start":5,"column_end":93}},{"value":"/ `size_limit` should be set to limit worst-case memory use.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":80175,"byte_end":80237,"line_start":172,"line_end":172,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":80242,"byte_end":80245,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ If unordered reads have already been made, the resulting buffer may have gaps containing","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":80250,"byte_end":80342,"line_start":174,"line_end":174,"column_start":5,"column_end":97}},{"value":"/ arbitrary data.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":80347,"byte_end":80366,"line_start":175,"line_end":175,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":80371,"byte_end":80374,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ [`ReadToEndError::TooLong`]: crate::ReadToEndError::TooLong","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":80379,"byte_end":80442,"line_start":177,"line_end":177,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":80897,"byte_end":80901,"line_start":192,"line_end":192,"column_start":12,"column_end":16},"name":"stop","qualname":"<RecvStream>::stop","value":"fn stop(&mut Self, VarInt) -> Result<(), UnknownStream>","parent":null,"children":[],"decl_id":null,"docs":" Stop accepting data","sig":null,"attributes":[{"value":"/ Stop accepting data","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":80684,"byte_end":80707,"line_start":188,"line_end":188,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":80712,"byte_end":80715,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Discards unread data and notifies the peer to stop transmitting. Once stopped, further","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":80720,"byte_end":80810,"line_start":190,"line_end":190,"column_start":5,"column_end":95}},{"value":"/ attempts to operate on a stream will yield `UnknownStream` errors.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":80815,"byte_end":80885,"line_start":191,"line_end":191,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":81497,"byte_end":81504,"line_start":207,"line_end":207,"column_start":12,"column_end":19},"name":"is_0rtt","qualname":"<RecvStream>::is_0rtt","value":"fn is_0rtt(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if this stream has been opened during 0-RTT.","sig":null,"attributes":[{"value":"/ Check if this stream has been opened during 0-RTT.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":81261,"byte_end":81315,"line_start":203,"line_end":203,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":81320,"byte_end":81323,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ In which case any non-idempotent request should be considered dangerous at the application","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":81328,"byte_end":81422,"line_start":205,"line_end":205,"column_start":5,"column_end":99}},{"value":"/ level. Because read data is subject to replay attacks.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":81427,"byte_end":81485,"line_start":206,"line_end":206,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":567},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":81601,"byte_end":81603,"line_start":212,"line_end":212,"column_start":12,"column_end":14},"name":"id","qualname":"<RecvStream>::id","value":"fn id(&Self) -> StreamId","parent":null,"children":[],"decl_id":null,"docs":" Get the identity of this stream\n","sig":null,"attributes":[{"value":"/ Get the identity of this stream","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":81554,"byte_end":81589,"line_start":211,"line_end":211,"column_start":5,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":588},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":84991,"byte_end":85000,"line_start":305,"line_end":305,"column_start":12,"column_end":21},"name":"ReadToEnd","qualname":"::recv_stream::ReadToEnd","value":"ReadToEnd {  }","parent":null,"children":[{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":593}],"decl_id":null,"docs":" Future produced by [`RecvStream::read_to_end()`].","sig":null,"attributes":[{"value":"/ Future produced by [`RecvStream::read_to_end()`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":84774,"byte_end":84827,"line_start":301,"line_end":301,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":84828,"byte_end":84831,"line_start":302,"line_end":302,"column_start":1,"column_end":4}},{"value":"/ [`RecvStream::read_to_end()`]: crate::RecvStream::read_to_end","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":84832,"byte_end":84897,"line_start":303,"line_end":303,"column_start":1,"column_end":66}},{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":84898,"byte_end":84979,"line_start":304,"line_end":304,"column_start":1,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":596},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":85198,"byte_end":85202,"line_start":315,"line_end":315,"column_start":8,"column_end":12},"name":"poll","qualname":"<ReadToEnd as futures_util::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1189},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":86715,"byte_end":86719,"line_start":352,"line_end":352,"column_start":5,"column_end":9},"name":"Read","qualname":"::recv_stream::ReadToEndError::Read","value":"ReadToEndError::Read(ReadError)","parent":{"krate":0,"index":1161},"children":[],"decl_id":null,"docs":" An error occurred during reading\n","sig":null,"attributes":[{"value":"/ An error occurred during reading","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":86642,"byte_end":86678,"line_start":350,"line_end":350,"column_start":5,"column_end":41}},{"value":"error(\"read error: {0}\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":86683,"byte_end":86710,"line_start":351,"line_end":351,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":1191},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":86728,"byte_end":86737,"line_start":352,"line_end":352,"column_start":18,"column_end":27},"name":"0","qualname":"::recv_stream::ReadToEndError::Read::0","value":"recv_stream::ReadError","parent":{"krate":0,"index":1189},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"from","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":86720,"byte_end":86727,"line_start":352,"line_end":352,"column_start":10,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1192},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":86834,"byte_end":86841,"line_start":355,"line_end":355,"column_start":5,"column_end":12},"name":"TooLong","qualname":"::recv_stream::ReadToEndError::TooLong","value":"ReadToEndError::TooLong","parent":{"krate":0,"index":1161},"children":[],"decl_id":null,"docs":" The stream is larger than the user-supplied limit\n","sig":null,"attributes":[{"value":"/ The stream is larger than the user-supplied limit","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":86744,"byte_end":86797,"line_start":353,"line_end":353,"column_start":5,"column_end":58}},{"value":"error(\"stream too long\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":86802,"byte_end":86829,"line_start":354,"line_end":354,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":1161},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":86621,"byte_end":86635,"line_start":349,"line_end":349,"column_start":10,"column_end":24},"name":"ReadToEndError","qualname":"::recv_stream::ReadToEndError","value":"enum ReadToEndError { Read(ReadError), TooLong, }","parent":null,"children":[{"krate":0,"index":1189},{"krate":0,"index":1192}],"decl_id":null,"docs":" Error from the [`ReadToEnd`] future.","sig":null,"attributes":[{"value":"/ Error from the [`ReadToEnd`] future.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":86485,"byte_end":86525,"line_start":345,"line_end":345,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":86526,"byte_end":86529,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ [`ReadToEnd`]: crate::ReadToEnd","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":86530,"byte_end":86565,"line_start":347,"line_end":347,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":86885,"byte_end":86894,"line_start":359,"line_end":359,"column_start":8,"column_end":17},"name":"poll_read","qualname":"<RecvStream as futures_util::AsyncRead>::poll_read","value":"fn poll_read(Pin<&mut Self>, &mut Context, &mut [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":30,"index":39},"children":[],"decl_id":{"krate":30,"index":40},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":600},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":87225,"byte_end":87234,"line_start":371,"line_end":371,"column_start":8,"column_end":17},"name":"poll_read","qualname":"<RecvStream as tokio::io::AsyncRead>::poll_read","value":"fn poll_read(Pin<&mut Self>, &mut Context, &mut ReadBuf)\n-> Poll<io::Result<()>>","parent":{"krate":65,"index":227},"children":[],"decl_id":{"krate":65,"index":228},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":602},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":87495,"byte_end":87499,"line_start":382,"line_end":382,"column_start":8,"column_end":12},"name":"drop","qualname":"<RecvStream as std::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":2,"index":3422},"children":[],"decl_id":{"krate":2,"index":3423},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1222},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":88167,"byte_end":88172,"line_start":402,"line_end":402,"column_start":5,"column_end":10},"name":"Reset","qualname":"::recv_stream::ReadError::Reset","value":"ReadError::Reset(VarInt)","parent":{"krate":0,"index":1194},"children":[],"decl_id":null,"docs":" The peer abandoned transmitting data on this stream","sig":null,"attributes":[{"value":"/ The peer abandoned transmitting data on this stream","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":88000,"byte_end":88055,"line_start":398,"line_end":398,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":88060,"byte_end":88063,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ Carries an application-defined error code.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":88068,"byte_end":88114,"line_start":400,"line_end":400,"column_start":5,"column_end":51}},{"value":"error(\"stream reset by peer: error {0}\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":88119,"byte_end":88162,"line_start":401,"line_end":401,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":1224},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":88173,"byte_end":88179,"line_start":402,"line_end":402,"column_start":11,"column_end":17},"name":"0","qualname":"::recv_stream::ReadError::Reset::0","value":"quinn_proto::VarInt","parent":{"krate":0,"index":1222},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1225},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":88250,"byte_end":88264,"line_start":405,"line_end":405,"column_start":5,"column_end":19},"name":"ConnectionLost","qualname":"::recv_stream::ReadError::ConnectionLost","value":"ReadError::ConnectionLost(ConnectionError)","parent":{"krate":0,"index":1194},"children":[],"decl_id":null,"docs":" The connection was lost\n","sig":null,"attributes":[{"value":"/ The connection was lost","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":88186,"byte_end":88213,"line_start":403,"line_end":403,"column_start":5,"column_end":32}},{"value":"error(\"connection lost\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":88218,"byte_end":88245,"line_start":404,"line_end":404,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":1227},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":88273,"byte_end":88288,"line_start":405,"line_end":405,"column_start":28,"column_end":43},"name":"0","qualname":"::recv_stream::ReadError::ConnectionLost::0","value":"quinn_proto::ConnectionError","parent":{"krate":0,"index":1225},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"from","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":88265,"byte_end":88272,"line_start":405,"line_end":405,"column_start":20,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1228},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":88390,"byte_end":88403,"line_start":408,"line_end":408,"column_start":5,"column_end":18},"name":"UnknownStream","qualname":"::recv_stream::ReadError::UnknownStream","value":"ReadError::UnknownStream","parent":{"krate":0,"index":1194},"children":[],"decl_id":null,"docs":" The stream has already been stopped, finished, or reset\n","sig":null,"attributes":[{"value":"/ The stream has already been stopped, finished, or reset","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":88295,"byte_end":88354,"line_start":406,"line_end":406,"column_start":5,"column_end":64}},{"value":"error(\"unknown stream\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":88359,"byte_end":88385,"line_start":407,"line_end":407,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1230},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":88708,"byte_end":88726,"line_start":414,"line_end":414,"column_start":5,"column_end":23},"name":"IllegalOrderedRead","qualname":"::recv_stream::ReadError::IllegalOrderedRead","value":"ReadError::IllegalOrderedRead","parent":{"krate":0,"index":1194},"children":[],"decl_id":null,"docs":" Attempted an ordered read following an unordered read","sig":null,"attributes":[{"value":"/ Attempted an ordered read following an unordered read","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":88409,"byte_end":88466,"line_start":409,"line_end":409,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":88471,"byte_end":88474,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ Performing an unordered read allows discontinuities to arise in the receive buffer of a","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":88479,"byte_end":88570,"line_start":411,"line_end":411,"column_start":5,"column_end":96}},{"value":"/ stream which cannot be recovered, making further ordered reads impossible.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":88575,"byte_end":88653,"line_start":412,"line_end":412,"column_start":5,"column_end":83}},{"value":"error(\"ordered read after unordered read\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":88658,"byte_end":88703,"line_start":413,"line_end":413,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1232},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":89022,"byte_end":89037,"line_start":422,"line_end":422,"column_start":5,"column_end":20},"name":"ZeroRttRejected","qualname":"::recv_stream::ReadError::ZeroRttRejected","value":"ReadError::ZeroRttRejected","parent":{"krate":0,"index":1194},"children":[],"decl_id":null,"docs":" This was a 0-RTT stream and the server rejected it","sig":null,"attributes":[{"value":"/ This was a 0-RTT stream and the server rejected it","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":88732,"byte_end":88786,"line_start":415,"line_end":415,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":88791,"byte_end":88794,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ Can only occur on clients for 0-RTT streams, which can be opened using","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":88799,"byte_end":88873,"line_start":417,"line_end":417,"column_start":5,"column_end":79}},{"value":"/ [`Connecting::into_0rtt()`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":88878,"byte_end":88910,"line_start":418,"line_end":418,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":88915,"byte_end":88918,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ [`Connecting::into_0rtt()`]: crate::Connecting::into_0rtt()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":88923,"byte_end":88986,"line_start":420,"line_end":420,"column_start":5,"column_end":68}},{"value":"error(\"0-RTT rejected\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":88991,"byte_end":89017,"line_start":421,"line_end":421,"column_start":5,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":1194},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":87984,"byte_end":87993,"line_start":397,"line_end":397,"column_start":10,"column_end":19},"name":"ReadError","qualname":"::recv_stream::ReadError","value":"enum ReadError {\n    Reset(VarInt),\n    ConnectionLost(ConnectionError),\n    UnknownStream,\n    IllegalOrderedRead,\n    ZeroRttRejected,\n}","parent":null,"children":[{"krate":0,"index":1222},{"krate":0,"index":1225},{"krate":0,"index":1228},{"krate":0,"index":1230},{"krate":0,"index":1232}],"decl_id":null,"docs":" Errors that arise from reading from a stream.\n","sig":null,"attributes":[{"value":"/ Errors that arise from reading from a stream.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":87879,"byte_end":87928,"line_start":395,"line_end":395,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":89090,"byte_end":89094,"line_start":426,"line_end":426,"column_start":8,"column_end":12},"name":"from","qualname":"<ReadError as std::convert::From>::from","value":"fn from(ReadableError) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":606},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":89354,"byte_end":89358,"line_start":435,"line_end":435,"column_start":8,"column_end":12},"name":"from","qualname":"<io::Error as std::convert::From>::from","value":"fn from(ReadError) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":608},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":89911,"byte_end":89915,"line_start":450,"line_end":450,"column_start":12,"column_end":16},"name":"Read","qualname":"::recv_stream::Read","value":"Read {  }","parent":null,"children":[{"krate":0,"index":610},{"krate":0,"index":611}],"decl_id":null,"docs":" Future produced by [`RecvStream::read()`].","sig":null,"attributes":[{"value":"/ Future produced by [`RecvStream::read()`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":89715,"byte_end":89761,"line_start":446,"line_end":446,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":89762,"byte_end":89765,"line_start":447,"line_end":447,"column_start":1,"column_end":4}},{"value":"/ [`RecvStream::read()`]: crate::RecvStream::read","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":89766,"byte_end":89817,"line_start":448,"line_end":448,"column_start":1,"column_end":52}},{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":89818,"byte_end":89899,"line_start":449,"line_end":449,"column_start":1,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":615},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":90070,"byte_end":90074,"line_start":458,"line_end":458,"column_start":8,"column_end":12},"name":"poll","qualname":"<Read as futures_util::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":616},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":90617,"byte_end":90626,"line_start":472,"line_end":472,"column_start":12,"column_end":21},"name":"ReadExact","qualname":"::recv_stream::ReadExact","value":"ReadExact {  }","parent":null,"children":[{"krate":0,"index":618},{"krate":0,"index":619}],"decl_id":null,"docs":" Future produced by [`RecvStream::read_exact()`].","sig":null,"attributes":[{"value":"/ Future produced by [`RecvStream::read_exact()`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":90403,"byte_end":90455,"line_start":468,"line_end":468,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":90456,"byte_end":90459,"line_start":469,"line_end":469,"column_start":1,"column_end":4}},{"value":"/ [`RecvStream::read_exact()`]: crate::RecvStream::read_exact","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":90460,"byte_end":90523,"line_start":470,"line_end":470,"column_start":1,"column_end":64}},{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":90524,"byte_end":90605,"line_start":471,"line_end":471,"column_start":1,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":623},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":90779,"byte_end":90783,"line_start":479,"line_end":479,"column_start":8,"column_end":12},"name":"poll","qualname":"<ReadExact as futures_util::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1255},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":91485,"byte_end":91498,"line_start":499,"line_end":499,"column_start":5,"column_end":18},"name":"FinishedEarly","qualname":"::recv_stream::ReadExactError::FinishedEarly","value":"ReadExactError::FinishedEarly","parent":{"krate":0,"index":1234},"children":[],"decl_id":null,"docs":" The stream finished before all bytes were read\n","sig":null,"attributes":[{"value":"/ The stream finished before all bytes were read","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":91392,"byte_end":91442,"line_start":497,"line_end":497,"column_start":5,"column_end":55}},{"value":"error(\"stream finished early\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":91447,"byte_end":91480,"line_start":498,"line_end":498,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1257},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":91560,"byte_end":91569,"line_start":502,"line_end":502,"column_start":5,"column_end":14},"name":"ReadError","qualname":"::recv_stream::ReadExactError::ReadError","value":"ReadExactError::ReadError(ReadError)","parent":{"krate":0,"index":1234},"children":[],"decl_id":null,"docs":" A read error occurred\n","sig":null,"attributes":[{"value":"/ A read error occurred","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":91504,"byte_end":91529,"line_start":500,"line_end":500,"column_start":5,"column_end":30}},{"value":"error(transparent)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":91534,"byte_end":91555,"line_start":501,"line_end":501,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":1259},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":91578,"byte_end":91587,"line_start":502,"line_end":502,"column_start":23,"column_end":32},"name":"0","qualname":"::recv_stream::ReadExactError::ReadError::0","value":"recv_stream::ReadError","parent":{"krate":0,"index":1257},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"from","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":91570,"byte_end":91577,"line_start":502,"line_end":502,"column_start":15,"column_end":22}}]},{"kind":"Enum","id":{"krate":0,"index":1234},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":91371,"byte_end":91385,"line_start":496,"line_end":496,"column_start":10,"column_end":24},"name":"ReadExactError","qualname":"::recv_stream::ReadExactError","value":"enum ReadExactError { FinishedEarly, ReadError(ReadError), }","parent":null,"children":[{"krate":0,"index":1255},{"krate":0,"index":1257}],"decl_id":null,"docs":" Errors that arise from reading from a stream.\n","sig":null,"attributes":[{"value":"/ Errors that arise from reading from a stream.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":91266,"byte_end":91315,"line_start":494,"line_end":494,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":624},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":91807,"byte_end":91816,"line_start":509,"line_end":509,"column_start":12,"column_end":21},"name":"ReadChunk","qualname":"::recv_stream::ReadChunk","value":"ReadChunk {  }","parent":null,"children":[{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":628}],"decl_id":null,"docs":" Future produced by [`RecvStream::read_chunk()`].","sig":null,"attributes":[{"value":"/ Future produced by [`RecvStream::read_chunk()`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":91593,"byte_end":91645,"line_start":505,"line_end":505,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":91646,"byte_end":91649,"line_start":506,"line_end":506,"column_start":1,"column_end":4}},{"value":"/ [`RecvStream::read_chunk()`]: crate::RecvStream::read_chunk","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":91650,"byte_end":91713,"line_start":507,"line_end":507,"column_start":1,"column_end":64}},{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":91714,"byte_end":91795,"line_start":508,"line_end":508,"column_start":1,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":91995,"byte_end":91999,"line_start":517,"line_end":517,"column_start":8,"column_end":12},"name":"poll","qualname":"<ReadChunk as futures_util::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":633},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":92424,"byte_end":92434,"line_start":527,"line_end":527,"column_start":12,"column_end":22},"name":"ReadChunks","qualname":"::recv_stream::ReadChunks","value":"ReadChunks {  }","parent":null,"children":[{"krate":0,"index":635},{"krate":0,"index":636}],"decl_id":null,"docs":" Future produced by [`RecvStream::read_chunks()`].","sig":null,"attributes":[{"value":"/ Future produced by [`RecvStream::read_chunks()`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":92207,"byte_end":92260,"line_start":523,"line_end":523,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":92261,"byte_end":92264,"line_start":524,"line_end":524,"column_start":1,"column_end":4}},{"value":"/ [`RecvStream::read_chunks()`]: crate::RecvStream::read_chunks","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":92265,"byte_end":92330,"line_start":525,"line_end":525,"column_start":1,"column_end":66}},{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":92331,"byte_end":92412,"line_start":526,"line_end":526,"column_start":1,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":640},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":92599,"byte_end":92603,"line_start":534,"line_end":534,"column_start":8,"column_end":12},"name":"poll","qualname":"<ReadChunks as futures_util::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1274},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":92918,"byte_end":92931,"line_start":543,"line_end":543,"column_start":12,"column_end":25},"name":"UnknownStream","qualname":"::recv_stream::UnknownStream","value":"UnknownStream {  }","parent":null,"children":[{"krate":0,"index":1275}],"decl_id":null,"docs":" Error indicating that a stream has already been finished or reset\n","sig":null,"attributes":[{"value":"/ Error indicating that a stream has already been finished or reset","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":92764,"byte_end":92833,"line_start":540,"line_end":540,"column_start":1,"column_end":70}},{"value":"error(\"unknown stream\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":92880,"byte_end":92906,"line_start":542,"line_end":542,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":642},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":93014,"byte_end":93018,"line_start":548,"line_end":548,"column_start":8,"column_end":12},"name":"from","qualname":"<UnknownStream as std::convert::From>::from","value":"fn from(proto::UnknownStream) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1276},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":93758,"byte_end":93768,"line_start":23,"line_end":23,"column_start":12,"column_end":22},"name":"SendStream","qualname":"::send_stream::SendStream","value":"SendStream {  }","parent":null,"children":[{"krate":0,"index":1277},{"krate":0,"index":1278},{"krate":0,"index":1279},{"krate":0,"index":1280}],"decl_id":null,"docs":" A stream that can only be used to send data","sig":null,"attributes":[{"value":"/ A stream that can only be used to send data","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":93450,"byte_end":93497,"line_start":16,"line_end":16,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":93498,"byte_end":93501,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ If dropped, streams that haven't been explicitly [`reset()`] will continue to (re)transmit","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":93502,"byte_end":93596,"line_start":18,"line_end":18,"column_start":1,"column_end":95}},{"value":"/ previously written data until it has been fully acknowledged or the connection is closed.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":93597,"byte_end":93690,"line_start":19,"line_end":19,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":93691,"byte_end":93694,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [`reset()`]: SendStream::reset","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":93695,"byte_end":93729,"line_start":21,"line_end":21,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":705},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":94369,"byte_end":94374,"line_start":44,"line_end":44,"column_start":12,"column_end":17},"name":"write","qualname":"<SendStream>::write","value":"fn write<'a>(&'a mut Self, &'a [u8]) -> Write","parent":null,"children":[],"decl_id":null,"docs":" Write bytes to the stream","sig":null,"attributes":[{"value":"/ Write bytes to the stream","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":94130,"byte_end":94159,"line_start":40,"line_end":40,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":94164,"byte_end":94167,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ Yields the number of bytes written on success. Congestion and flow control may cause this to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":94172,"byte_end":94268,"line_start":42,"line_end":42,"column_start":5,"column_end":101}},{"value":"/ be shorter than `buf.len()`, indicating that only a prefix of `buf` was written.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":94273,"byte_end":94357,"line_start":43,"line_end":43,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":707},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":94544,"byte_end":94553,"line_start":49,"line_end":49,"column_start":12,"column_end":21},"name":"write_all","qualname":"<SendStream>::write_all","value":"fn write_all<'a>(&'a mut Self, &'a [u8]) -> WriteAll","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to write an entire buffer to the stream\n","sig":null,"attributes":[{"value":"/ Convenience method to write an entire buffer to the stream","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":94470,"byte_end":94532,"line_start":48,"line_end":48,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":94914,"byte_end":94926,"line_start":58,"line_end":58,"column_start":12,"column_end":24},"name":"write_chunks","qualname":"<SendStream>::write_chunks","value":"fn write_chunks<'a>(&'a mut Self, &'a mut [Bytes]) -> WriteChunks","parent":null,"children":[],"decl_id":null,"docs":" Write chunks to the stream","sig":null,"attributes":[{"value":"/ Write chunks to the stream","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":94655,"byte_end":94685,"line_start":53,"line_end":53,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":94690,"byte_end":94693,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Yields the number of bytes and chunks written on success.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":94698,"byte_end":94759,"line_start":55,"line_end":55,"column_start":5,"column_end":66}},{"value":"/ Congestion and flow control may cause this to be shorter than `buf.len()`,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":94764,"byte_end":94842,"line_start":56,"line_end":56,"column_start":5,"column_end":83}},{"value":"/ indicating that only a prefix of `bufs` was written","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":94847,"byte_end":94902,"line_start":57,"line_end":57,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":711},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":95131,"byte_end":95142,"line_start":63,"line_end":63,"column_start":12,"column_end":23},"name":"write_chunk","qualname":"<SendStream>::write_chunk","value":"fn write_chunk(&mut Self, Bytes) -> WriteChunk","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to write a single chunk in its entirety to the stream\n","sig":null,"attributes":[{"value":"/ Convenience method to write a single chunk in its entirety to the stream","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":95043,"byte_end":95119,"line_start":62,"line_end":62,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":712},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":95360,"byte_end":95376,"line_start":71,"line_end":71,"column_start":12,"column_end":28},"name":"write_all_chunks","qualname":"<SendStream>::write_all_chunks","value":"fn write_all_chunks<'a>(&'a mut Self, &'a mut [Bytes]) -> WriteAllChunks","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to write an entire list of chunks to the stream\n","sig":null,"attributes":[{"value":"/ Convenience method to write an entire list of chunks to the stream","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":95278,"byte_end":95348,"line_start":70,"line_end":70,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":719},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":96912,"byte_end":96918,"line_start":115,"line_end":115,"column_start":12,"column_end":18},"name":"finish","qualname":"<SendStream>::finish","value":"fn finish(&mut Self) -> Finish","parent":null,"children":[],"decl_id":null,"docs":" Shut down the send stream gracefully.","sig":null,"attributes":[{"value":"/ Shut down the send stream gracefully.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":96694,"byte_end":96735,"line_start":111,"line_end":111,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":96740,"byte_end":96743,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ No new data may be written after calling this method. Completes when the peer has","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":96748,"byte_end":96833,"line_start":113,"line_end":113,"column_start":5,"column_end":90}},{"value":"/ acknowledged all sent data, retransmitting data as needed.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":96838,"byte_end":96900,"line_start":114,"line_end":114,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":720},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":97015,"byte_end":97026,"line_start":120,"line_end":120,"column_start":12,"column_end":23},"name":"poll_finish","qualname":"<SendStream>::poll_finish","value":"fn poll_finish(&mut Self, &mut Context) -> Poll<Result<(), WriteError>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":724},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":99107,"byte_end":99112,"line_start":167,"line_end":167,"column_start":12,"column_end":17},"name":"reset","qualname":"<SendStream>::reset","value":"fn reset(&mut Self, VarInt) -> Result<(), UnknownStream>","parent":null,"children":[],"decl_id":null,"docs":" Close the send stream immediately.","sig":null,"attributes":[{"value":"/ Close the send stream immediately.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":98761,"byte_end":98799,"line_start":162,"line_end":162,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":98804,"byte_end":98807,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ No new data can be written after calling this method. Locally buffered data is dropped, and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":98812,"byte_end":98907,"line_start":164,"line_end":164,"column_start":5,"column_end":100}},{"value":"/ previously transmitted data will no longer be retransmitted if lost. If an attempt has","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":98912,"byte_end":99002,"line_start":165,"line_end":165,"column_start":5,"column_end":95}},{"value":"/ already been made to finish the stream, the peer may still receive all written data.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":99007,"byte_end":99095,"line_start":166,"line_end":166,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":725},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":99914,"byte_end":99926,"line_start":184,"line_end":184,"column_start":12,"column_end":24},"name":"set_priority","qualname":"<SendStream>::set_priority","value":"fn set_priority(&Self, i32) -> Result<(), UnknownStream>","parent":null,"children":[],"decl_id":null,"docs":" Set the priority of the send stream","sig":null,"attributes":[{"value":"/ Set the priority of the send stream","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":99439,"byte_end":99478,"line_start":177,"line_end":177,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":99483,"byte_end":99486,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ Every send stream has an initial priority of 0. Locally buffered data from streams with","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":99491,"byte_end":99582,"line_start":179,"line_end":179,"column_start":5,"column_end":96}},{"value":"/ higher priority will be transmitted before data from streams with lower priority. Changing","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":99587,"byte_end":99681,"line_start":180,"line_end":180,"column_start":5,"column_end":99}},{"value":"/ the priority of a stream with pending data may only take effect after that data has been","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":99686,"byte_end":99778,"line_start":181,"line_end":181,"column_start":5,"column_end":97}},{"value":"/ transmitted. Using many different priority levels per connection may have a negative","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":99783,"byte_end":99871,"line_start":182,"line_end":182,"column_start":5,"column_end":93}},{"value":"/ impact on performance.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":99876,"byte_end":99902,"line_start":183,"line_end":183,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":726},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":100193,"byte_end":100201,"line_start":191,"line_end":191,"column_start":12,"column_end":20},"name":"priority","qualname":"<SendStream>::priority","value":"fn priority(&Self) -> Result<i32, UnknownStream>","parent":null,"children":[],"decl_id":null,"docs":" Get the priority of the send stream\n","sig":null,"attributes":[{"value":"/ Get the priority of the send stream","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":100142,"byte_end":100181,"line_start":190,"line_end":190,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":727},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":100459,"byte_end":100466,"line_start":197,"line_end":197,"column_start":12,"column_end":19},"name":"stopped","qualname":"<SendStream>::stopped","value":"fn stopped(&mut Self) -> Stopped","parent":null,"children":[],"decl_id":null,"docs":" Completes if/when the peer stops the stream, yielding the error code\n","sig":null,"attributes":[{"value":"/ Completes if/when the peer stops the stream, yielding the error code","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":100375,"byte_end":100447,"line_start":196,"line_end":196,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":728},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":100565,"byte_end":100577,"line_start":202,"line_end":202,"column_start":12,"column_end":24},"name":"poll_stopped","qualname":"<SendStream>::poll_stopped","value":"fn poll_stopped(&mut Self, &mut Context) -> Poll<Result<VarInt, StoppedError>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":730},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":101249,"byte_end":101251,"line_start":221,"line_end":221,"column_start":12,"column_end":14},"name":"id","qualname":"<SendStream>::id","value":"fn id(&Self) -> StreamId","parent":null,"children":[],"decl_id":null,"docs":" Get the identity of this stream\n","sig":null,"attributes":[{"value":"/ Get the identity of this stream","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":101202,"byte_end":101237,"line_start":220,"line_end":220,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":732},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":101342,"byte_end":101352,"line_start":227,"line_end":227,"column_start":8,"column_end":18},"name":"poll_write","qualname":"<SendStream as futures_util::AsyncWrite>::poll_write","value":"fn poll_write(Pin<&mut Self>, &mut Context, &[u8]) -> Poll<io::Result<usize>>","parent":{"krate":30,"index":42},"children":[],"decl_id":{"krate":30,"index":43},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":734},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":101549,"byte_end":101559,"line_start":231,"line_end":231,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<SendStream as futures_util::AsyncWrite>::poll_flush","value":"fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<io::Result<()>>","parent":{"krate":30,"index":42},"children":[],"decl_id":{"krate":30,"index":45},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":735},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":101669,"byte_end":101679,"line_start":235,"line_end":235,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<SendStream as futures_util::AsyncWrite>::poll_close","value":"fn poll_close(Pin<&mut Self>, &mut Context) -> Poll<io::Result<()>>","parent":{"krate":30,"index":42},"children":[],"decl_id":{"krate":30,"index":46},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":737},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":101865,"byte_end":101875,"line_start":241,"line_end":241,"column_start":8,"column_end":18},"name":"poll_write","qualname":"<SendStream as tokio::io::AsyncWrite>::poll_write","value":"fn poll_write(Pin<&mut Self>, &mut Context, &[u8]) -> Poll<io::Result<usize>>","parent":{"krate":65,"index":306},"children":[],"decl_id":{"krate":65,"index":307},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":738},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":102052,"byte_end":102062,"line_start":249,"line_end":249,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<SendStream as tokio::io::AsyncWrite>::poll_flush","value":"fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<io::Result<()>>","parent":{"krate":65,"index":306},"children":[],"decl_id":{"krate":65,"index":308},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":739},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":102172,"byte_end":102185,"line_start":253,"line_end":253,"column_start":8,"column_end":21},"name":"poll_shutdown","qualname":"<SendStream as tokio::io::AsyncWrite>::poll_shutdown","value":"fn poll_shutdown(Pin<&mut Self>, &mut Context) -> Poll<io::Result<()>>","parent":{"krate":65,"index":306},"children":[],"decl_id":{"krate":65,"index":309},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":741},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":102336,"byte_end":102340,"line_start":259,"line_end":259,"column_start":8,"column_end":12},"name":"drop","qualname":"<SendStream as std::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":2,"index":3422},"children":[],"decl_id":{"krate":2,"index":3423},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":742},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":103167,"byte_end":103173,"line_start":281,"line_end":281,"column_start":12,"column_end":18},"name":"Finish","qualname":"::send_stream::Finish","value":"Finish {  }","parent":null,"children":[{"krate":0,"index":744}],"decl_id":null,"docs":" Future produced by `SendStream::finish`\n","sig":null,"attributes":[{"value":"/ Future produced by `SendStream::finish`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":103030,"byte_end":103073,"line_start":279,"line_end":279,"column_start":1,"column_end":44}},{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":103074,"byte_end":103155,"line_start":280,"line_end":280,"column_start":1,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":747},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":103294,"byte_end":103298,"line_start":288,"line_end":288,"column_start":8,"column_end":12},"name":"poll","qualname":"<Finish as futures_util::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":748},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":103556,"byte_end":103563,"line_start":295,"line_end":295,"column_start":12,"column_end":19},"name":"Stopped","qualname":"::send_stream::Stopped","value":"Stopped {  }","parent":null,"children":[{"krate":0,"index":750}],"decl_id":null,"docs":" Future produced by `SendStream::stopped`\n","sig":null,"attributes":[{"value":"/ Future produced by `SendStream::stopped`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":103418,"byte_end":103462,"line_start":293,"line_end":293,"column_start":1,"column_end":45}},{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":103463,"byte_end":103544,"line_start":294,"line_end":294,"column_start":1,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":753},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":103691,"byte_end":103695,"line_start":302,"line_end":302,"column_start":8,"column_end":12},"name":"poll","qualname":"<Stopped as futures_util::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":754},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":104015,"byte_end":104020,"line_start":311,"line_end":311,"column_start":12,"column_end":17},"name":"Write","qualname":"::send_stream::Write","value":"Write {  }","parent":null,"children":[{"krate":0,"index":756},{"krate":0,"index":757}],"decl_id":null,"docs":" Future produced by [`SendStream::write()`].","sig":null,"attributes":[{"value":"/ Future produced by [`SendStream::write()`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":103816,"byte_end":103863,"line_start":307,"line_end":307,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":103864,"byte_end":103867,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ [`SendStream::write()`]: crate::SendStream::write","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":103868,"byte_end":103921,"line_start":309,"line_end":309,"column_start":1,"column_end":54}},{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":103922,"byte_end":104003,"line_start":310,"line_end":310,"column_start":1,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":761},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":104165,"byte_end":104169,"line_start":318,"line_end":318,"column_start":8,"column_end":12},"name":"poll","qualname":"<Write as futures_util::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":763},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":104572,"byte_end":104580,"line_start":329,"line_end":329,"column_start":12,"column_end":20},"name":"WriteAll","qualname":"::send_stream::WriteAll","value":"WriteAll {  }","parent":null,"children":[{"krate":0,"index":765},{"krate":0,"index":766}],"decl_id":null,"docs":" Future produced by [`SendStream::write_all()`].","sig":null,"attributes":[{"value":"/ Future produced by [`SendStream::write_all()`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":104361,"byte_end":104412,"line_start":325,"line_end":325,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":104413,"byte_end":104416,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"/ [`SendStream::write_all()`]: crate::SendStream::write_all","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":104417,"byte_end":104478,"line_start":327,"line_end":327,"column_start":1,"column_end":62}},{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":104479,"byte_end":104560,"line_start":328,"line_end":328,"column_start":1,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":770},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":104725,"byte_end":104729,"line_start":336,"line_end":336,"column_start":8,"column_end":12},"name":"poll","qualname":"<WriteAll as futures_util::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":771},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":105326,"byte_end":105337,"line_start":353,"line_end":353,"column_start":12,"column_end":23},"name":"WriteChunks","qualname":"::send_stream::WriteChunks","value":"WriteChunks {  }","parent":null,"children":[{"krate":0,"index":773},{"krate":0,"index":774}],"decl_id":null,"docs":" Future produced by [`SendStream::write_chunks()`].","sig":null,"attributes":[{"value":"/ Future produced by [`SendStream::write_chunks()`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":105106,"byte_end":105160,"line_start":349,"line_end":349,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":105161,"byte_end":105164,"line_start":350,"line_end":350,"column_start":1,"column_end":4}},{"value":"/ [`SendStream::write_chunks()`]: crate::SendStream::write_chunks","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":105165,"byte_end":105232,"line_start":351,"line_end":351,"column_start":1,"column_end":68}},{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":105233,"byte_end":105314,"line_start":352,"line_end":352,"column_start":1,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":778},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":105498,"byte_end":105502,"line_start":360,"line_end":360,"column_start":8,"column_end":12},"name":"poll","qualname":"<WriteChunks as futures_util::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":780},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":105927,"byte_end":105937,"line_start":371,"line_end":371,"column_start":12,"column_end":22},"name":"WriteChunk","qualname":"::send_stream::WriteChunk","value":"WriteChunk {  }","parent":null,"children":[{"krate":0,"index":782},{"krate":0,"index":783}],"decl_id":null,"docs":" Future produced by [`SendStream::write_chunk()`].","sig":null,"attributes":[{"value":"/ Future produced by [`SendStream::write_chunk()`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":105710,"byte_end":105763,"line_start":367,"line_end":367,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":105764,"byte_end":105767,"line_start":368,"line_end":368,"column_start":1,"column_end":4}},{"value":"/ [`SendStream::write_chunk()`]: crate::SendStream::write_chunk","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":105768,"byte_end":105833,"line_start":369,"line_end":369,"column_start":1,"column_end":66}},{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":105834,"byte_end":105915,"line_start":370,"line_end":370,"column_start":1,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":788},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":106086,"byte_end":106090,"line_start":378,"line_end":378,"column_start":8,"column_end":12},"name":"poll","qualname":"<WriteChunk as futures_util::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":789},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":106673,"byte_end":106687,"line_start":394,"line_end":394,"column_start":12,"column_end":26},"name":"WriteAllChunks","qualname":"::send_stream::WriteAllChunks","value":"WriteAllChunks {  }","parent":null,"children":[{"krate":0,"index":791},{"krate":0,"index":792},{"krate":0,"index":793}],"decl_id":null,"docs":" Future produced by [`SendStream::write_all_chunks()`].","sig":null,"attributes":[{"value":"/ Future produced by [`SendStream::write_all_chunks()`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":106441,"byte_end":106499,"line_start":390,"line_end":390,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":106500,"byte_end":106503,"line_start":391,"line_end":391,"column_start":1,"column_end":4}},{"value":"/ [`SendStream::write_all_chunks()`]: crate::SendStream::write_all_chunks","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":106504,"byte_end":106579,"line_start":392,"line_end":392,"column_start":1,"column_end":76}},{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":106580,"byte_end":106661,"line_start":393,"line_end":393,"column_start":1,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":797},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":106865,"byte_end":106869,"line_start":402,"line_end":402,"column_start":8,"column_end":12},"name":"poll","qualname":"<WriteAllChunks as futures_util::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1314},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":107586,"byte_end":107593,"line_start":422,"line_end":422,"column_start":5,"column_end":12},"name":"Stopped","qualname":"::send_stream::WriteError::Stopped","value":"WriteError::Stopped(VarInt)","parent":{"krate":0,"index":1286},"children":[],"decl_id":null,"docs":" The peer is no longer accepting data on this stream","sig":null,"attributes":[{"value":"/ The peer is no longer accepting data on this stream","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":107416,"byte_end":107471,"line_start":418,"line_end":418,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":107476,"byte_end":107479,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ Carries an application-defined error code.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":107484,"byte_end":107530,"line_start":420,"line_end":420,"column_start":5,"column_end":51}},{"value":"error(\"sending stopped by peer: error {0}\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":107535,"byte_end":107581,"line_start":421,"line_end":421,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":1316},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":107594,"byte_end":107600,"line_start":422,"line_end":422,"column_start":13,"column_end":19},"name":"0","qualname":"::send_stream::WriteError::Stopped::0","value":"quinn_proto::VarInt","parent":{"krate":0,"index":1314},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1317},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":107671,"byte_end":107685,"line_start":425,"line_end":425,"column_start":5,"column_end":19},"name":"ConnectionLost","qualname":"::send_stream::WriteError::ConnectionLost","value":"WriteError::ConnectionLost(ConnectionError)","parent":{"krate":0,"index":1286},"children":[],"decl_id":null,"docs":" The connection was lost\n","sig":null,"attributes":[{"value":"/ The connection was lost","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":107607,"byte_end":107634,"line_start":423,"line_end":423,"column_start":5,"column_end":32}},{"value":"error(\"connection lost\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":107639,"byte_end":107666,"line_start":424,"line_end":424,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":1319},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":107694,"byte_end":107709,"line_start":425,"line_end":425,"column_start":28,"column_end":43},"name":"0","qualname":"::send_stream::WriteError::ConnectionLost::0","value":"quinn_proto::ConnectionError","parent":{"krate":0,"index":1317},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"from","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":107686,"byte_end":107693,"line_start":425,"line_end":425,"column_start":20,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1320},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":107801,"byte_end":107814,"line_start":428,"line_end":428,"column_start":5,"column_end":18},"name":"UnknownStream","qualname":"::send_stream::WriteError::UnknownStream","value":"WriteError::UnknownStream","parent":{"krate":0,"index":1286},"children":[],"decl_id":null,"docs":" The stream has already been finished or reset\n","sig":null,"attributes":[{"value":"/ The stream has already been finished or reset","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":107716,"byte_end":107765,"line_start":426,"line_end":426,"column_start":5,"column_end":54}},{"value":"error(\"unknown stream\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":107770,"byte_end":107796,"line_start":427,"line_end":427,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1322},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":108110,"byte_end":108125,"line_start":436,"line_end":436,"column_start":5,"column_end":20},"name":"ZeroRttRejected","qualname":"::send_stream::WriteError::ZeroRttRejected","value":"WriteError::ZeroRttRejected","parent":{"krate":0,"index":1286},"children":[],"decl_id":null,"docs":" This was a 0-RTT stream and the server rejected it","sig":null,"attributes":[{"value":"/ This was a 0-RTT stream and the server rejected it","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":107820,"byte_end":107874,"line_start":429,"line_end":429,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":107879,"byte_end":107882,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ Can only occur on clients for 0-RTT streams, which can be opened using","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":107887,"byte_end":107961,"line_start":431,"line_end":431,"column_start":5,"column_end":79}},{"value":"/ [`Connecting::into_0rtt()`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":107966,"byte_end":107998,"line_start":432,"line_end":432,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":108003,"byte_end":108006,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ [`Connecting::into_0rtt()`]: crate::Connecting::into_0rtt()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":108011,"byte_end":108074,"line_start":434,"line_end":434,"column_start":5,"column_end":68}},{"value":"error(\"0-RTT rejected\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":108079,"byte_end":108105,"line_start":435,"line_end":435,"column_start":5,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":1286},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":107399,"byte_end":107409,"line_start":417,"line_end":417,"column_start":10,"column_end":20},"name":"WriteError","qualname":"::send_stream::WriteError","value":"enum WriteError {\n    Stopped(VarInt),\n    ConnectionLost(ConnectionError),\n    UnknownStream,\n    ZeroRttRejected,\n}","parent":null,"children":[{"krate":0,"index":1314},{"krate":0,"index":1317},{"krate":0,"index":1320},{"krate":0,"index":1322}],"decl_id":null,"docs":" Errors that arise from writing to a stream\n","sig":null,"attributes":[{"value":"/ Errors that arise from writing to a stream","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":107297,"byte_end":107343,"line_start":415,"line_end":415,"column_start":1,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1345},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":108344,"byte_end":108358,"line_start":444,"line_end":444,"column_start":5,"column_end":19},"name":"ConnectionLost","qualname":"::send_stream::StoppedError::ConnectionLost","value":"StoppedError::ConnectionLost(ConnectionError)","parent":{"krate":0,"index":1324},"children":[],"decl_id":null,"docs":" The connection was lost\n","sig":null,"attributes":[{"value":"/ The connection was lost","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":108280,"byte_end":108307,"line_start":442,"line_end":442,"column_start":5,"column_end":32}},{"value":"error(\"connection lost\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":108312,"byte_end":108339,"line_start":443,"line_end":443,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":1347},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":108367,"byte_end":108382,"line_start":444,"line_end":444,"column_start":28,"column_end":43},"name":"0","qualname":"::send_stream::StoppedError::ConnectionLost::0","value":"quinn_proto::ConnectionError","parent":{"krate":0,"index":1345},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"from","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":108359,"byte_end":108366,"line_start":444,"line_end":444,"column_start":20,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1348},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":108474,"byte_end":108487,"line_start":447,"line_end":447,"column_start":5,"column_end":18},"name":"UnknownStream","qualname":"::send_stream::StoppedError::UnknownStream","value":"StoppedError::UnknownStream","parent":{"krate":0,"index":1324},"children":[],"decl_id":null,"docs":" The stream has already been finished or reset\n","sig":null,"attributes":[{"value":"/ The stream has already been finished or reset","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":108389,"byte_end":108438,"line_start":445,"line_end":445,"column_start":5,"column_end":54}},{"value":"error(\"unknown stream\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":108443,"byte_end":108469,"line_start":446,"line_end":446,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1350},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":108783,"byte_end":108798,"line_start":455,"line_end":455,"column_start":5,"column_end":20},"name":"ZeroRttRejected","qualname":"::send_stream::StoppedError::ZeroRttRejected","value":"StoppedError::ZeroRttRejected","parent":{"krate":0,"index":1324},"children":[],"decl_id":null,"docs":" This was a 0-RTT stream and the server rejected it","sig":null,"attributes":[{"value":"/ This was a 0-RTT stream and the server rejected it","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":108493,"byte_end":108547,"line_start":448,"line_end":448,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":108552,"byte_end":108555,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ Can only occur on clients for 0-RTT streams, which can be opened using","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":108560,"byte_end":108634,"line_start":450,"line_end":450,"column_start":5,"column_end":79}},{"value":"/ [`Connecting::into_0rtt()`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":108639,"byte_end":108671,"line_start":451,"line_end":451,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":108676,"byte_end":108679,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ [`Connecting::into_0rtt()`]: crate::Connecting::into_0rtt()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":108684,"byte_end":108747,"line_start":453,"line_end":453,"column_start":5,"column_end":68}},{"value":"error(\"0-RTT rejected\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":108752,"byte_end":108778,"line_start":454,"line_end":454,"column_start":5,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":1324},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":108261,"byte_end":108273,"line_start":441,"line_end":441,"column_start":10,"column_end":22},"name":"StoppedError","qualname":"::send_stream::StoppedError","value":"enum StoppedError {\n    ConnectionLost(ConnectionError),\n    UnknownStream,\n    ZeroRttRejected,\n}","parent":null,"children":[{"krate":0,"index":1345},{"krate":0,"index":1348},{"krate":0,"index":1350}],"decl_id":null,"docs":" Errors that arise while monitoring for a send stream stop from the peer\n","sig":null,"attributes":[{"value":"/ Errors that arise while monitoring for a send stream stop from the peer","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":108130,"byte_end":108205,"line_start":439,"line_end":439,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":799},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":108848,"byte_end":108852,"line_start":459,"line_end":459,"column_start":8,"column_end":12},"name":"from","qualname":"<io::Error as std::convert::From>::from","value":"fn from(WriteError) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/broadcast.rs","byte_start":6044,"byte_end":6053,"line_start":28,"line_end":28,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":8195,"byte_end":8205,"line_start":41,"line_end":41,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":13045,"byte_end":13055,"line_start":160,"line_end":160,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":162},{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":13679,"byte_end":13689,"line_start":179,"line_end":179,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":14356,"byte_end":14371,"line_start":196,"line_end":196,"column_start":17,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":16306,"byte_end":16319,"line_start":245,"line_end":245,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":17429,"byte_end":17445,"line_start":270,"line_end":270,"column_start":17,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":177},{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":19251,"byte_end":19261,"line_start":320,"line_end":320,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":28260,"byte_end":28270,"line_start":546,"line_end":546,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":29148,"byte_end":29166,"line_start":565,"line_end":565,"column_start":39,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":202},{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":30245,"byte_end":30262,"line_start":591,"line_end":591,"column_start":39,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":205},{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":31403,"byte_end":31412,"line_start":619,"line_end":619,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":208},{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":32280,"byte_end":32287,"line_start":644,"line_end":644,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":214},{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":33248,"byte_end":33254,"line_start":670,"line_end":670,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":220},{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":34151,"byte_end":34164,"line_start":695,"line_end":695,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":223},{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":35496,"byte_end":35509,"line_start":736,"line_end":736,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":35637,"byte_end":35650,"line_start":743,"line_end":743,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":36320,"byte_end":36333,"line_start":759,"line_end":759,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":230},{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":37616,"byte_end":37631,"line_start":793,"line_end":793,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":261},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":46971,"byte_end":46986,"line_start":1044,"line_end":1044,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":47312,"byte_end":47327,"line_start":1056,"line_end":1056,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":271}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":49630,"byte_end":49638,"line_start":44,"line_end":44,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":414}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":58187,"byte_end":58201,"line_start":255,"line_end":255,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":419},{"krate":0,"index":420}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":59399,"byte_end":59413,"line_start":292,"line_end":292,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":422}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":60452,"byte_end":60465,"line_start":326,"line_end":326,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":424},{"krate":0,"index":429},{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":66405,"byte_end":66418,"line_start":480,"line_end":480,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":433},{"krate":0,"index":434}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":67343,"byte_end":67351,"line_start":515,"line_end":515,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":437}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":67473,"byte_end":67481,"line_start":521,"line_end":521,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":439},{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":68085,"byte_end":68093,"line_start":540,"line_end":540,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":68354,"byte_end":68365,"line_start":551,"line_end":551,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":69392,"byte_end":69403,"line_start":581,"line_end":581,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":69535,"byte_end":69546,"line_start":588,"line_end":588,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":448}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":70053,"byte_end":70064,"line_start":604,"line_end":604,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":450},{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/mutex.rs","byte_start":73504,"byte_end":73509,"line_start":126,"line_end":126,"column_start":13,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":468},{"krate":0,"index":469}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/mutex.rs","byte_start":74078,"byte_end":74088,"line_start":147,"line_end":147,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":477},{"krate":0,"index":478}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/mutex.rs","byte_start":74244,"byte_end":74254,"line_start":155,"line_end":155,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":482}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":75216,"byte_end":75226,"line_start":33,"line_end":33,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":551},{"krate":0,"index":553},{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":560},{"krate":0,"index":562},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":568}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":84531,"byte_end":84541,"line_start":292,"line_end":292,"column_start":57,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":587}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":85128,"byte_end":85137,"line_start":313,"line_end":313,"column_start":17,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":595},{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":86865,"byte_end":86875,"line_start":358,"line_end":358,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":87205,"byte_end":87215,"line_start":370,"line_end":370,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":87475,"byte_end":87485,"line_start":381,"line_end":381,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":89071,"byte_end":89080,"line_start":425,"line_end":425,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":89339,"byte_end":89344,"line_start":434,"line_end":434,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":606}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":89999,"byte_end":90003,"line_start":455,"line_end":455,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":614},{"krate":0,"index":615}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":90710,"byte_end":90719,"line_start":477,"line_end":477,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":622},{"krate":0,"index":623}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":91920,"byte_end":91929,"line_start":515,"line_end":515,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":631},{"krate":0,"index":632}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":92523,"byte_end":92533,"line_start":532,"line_end":532,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":639},{"krate":0,"index":640}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":92991,"byte_end":93004,"line_start":547,"line_end":547,"column_start":37,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":642}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":93907,"byte_end":93917,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":707},{"krate":0,"index":709},{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":714},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":724},{"krate":0,"index":725},{"krate":0,"index":726},{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":730}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":101322,"byte_end":101332,"line_start":226,"line_end":226,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":732},{"krate":0,"index":734},{"krate":0,"index":735}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":101845,"byte_end":101855,"line_start":240,"line_end":240,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":737},{"krate":0,"index":738},{"krate":0,"index":739}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":102316,"byte_end":102326,"line_start":258,"line_end":258,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":741}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":103231,"byte_end":103237,"line_start":285,"line_end":285,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":746},{"krate":0,"index":747}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":103621,"byte_end":103628,"line_start":299,"line_end":299,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":752},{"krate":0,"index":753}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":104101,"byte_end":104106,"line_start":316,"line_end":316,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":760},{"krate":0,"index":761}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":104661,"byte_end":104669,"line_start":334,"line_end":334,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":769},{"krate":0,"index":770}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":105426,"byte_end":105437,"line_start":358,"line_end":358,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":777},{"krate":0,"index":778}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":106020,"byte_end":106030,"line_start":376,"line_end":376,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":787},{"krate":0,"index":788}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":106795,"byte_end":106809,"line_start":400,"line_end":400,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":796},{"krate":0,"index":797}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":108833,"byte_end":108838,"line_start":458,"line_end":458,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":799}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/work_limiter.rs","byte_start":110698,"byte_end":110709,"line_start":39,"line_end":39,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":810},{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":813},{"krate":0,"index":814},{"krate":0,"index":815}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/broadcast.rs","byte_start":6044,"byte_end":6053,"line_start":28,"line_end":28,"column_start":6,"column_end":15},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":960},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":8195,"byte_end":8205,"line_start":41,"line_end":41,"column_start":6,"column_end":16},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":970},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":13045,"byte_end":13055,"line_start":160,"line_end":160,"column_start":17,"column_end":27},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":970},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":13679,"byte_end":13689,"line_start":179,"line_end":179,"column_start":6,"column_end":16},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":970},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":14356,"byte_end":14371,"line_start":196,"line_end":196,"column_start":17,"column_end":32},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":167},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":16306,"byte_end":16319,"line_start":245,"line_end":245,"column_start":6,"column_end":19},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":976},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":17429,"byte_end":17445,"line_start":270,"line_end":270,"column_start":17,"column_end":33},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":983},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":19251,"byte_end":19261,"line_start":320,"line_end":320,"column_start":6,"column_end":16},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1013},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":28260,"byte_end":28270,"line_start":546,"line_end":546,"column_start":16,"column_end":26},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1013},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":29148,"byte_end":29166,"line_start":565,"line_end":565,"column_start":39,"column_end":57},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1018},"to":{"krate":22,"index":96}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":30245,"byte_end":30262,"line_start":591,"line_end":591,"column_start":39,"column_end":56},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1023},"to":{"krate":22,"index":96}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":31403,"byte_end":31412,"line_start":619,"line_end":619,"column_start":39,"column_end":48},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1028},"to":{"krate":22,"index":96}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":32280,"byte_end":32287,"line_start":644,"line_end":644,"column_start":17,"column_end":24},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":210},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":33248,"byte_end":33254,"line_start":670,"line_end":670,"column_start":17,"column_end":23},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":216},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":34151,"byte_end":34164,"line_start":695,"line_end":695,"column_start":6,"column_end":19},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1033},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":35496,"byte_end":35509,"line_start":736,"line_end":736,"column_start":16,"column_end":29},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1033},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":35637,"byte_end":35650,"line_start":743,"line_end":743,"column_start":15,"column_end":28},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1033},"to":{"krate":2,"index":3422}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":36320,"byte_end":36333,"line_start":759,"line_end":759,"column_start":26,"column_end":39},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1033},"to":{"krate":2,"index":3398}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":37616,"byte_end":37631,"line_start":793,"line_end":793,"column_start":6,"column_end":21},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":232},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":46971,"byte_end":46986,"line_start":1044,"line_end":1044,"column_start":15,"column_end":30},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":232},"to":{"krate":2,"index":3422}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/connection.rs","byte_start":47312,"byte_end":47327,"line_start":1056,"line_end":1056,"column_start":21,"column_end":36},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":232},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":49630,"byte_end":49638,"line_start":44,"line_end":44,"column_start":6,"column_end":14},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1068},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":58187,"byte_end":58201,"line_start":255,"line_end":255,"column_start":17,"column_end":31},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1107},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":59399,"byte_end":59413,"line_start":292,"line_end":292,"column_start":15,"column_end":29},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1107},"to":{"krate":2,"index":3422}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":60452,"byte_end":60465,"line_start":326,"line_end":326,"column_start":6,"column_end":19},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1112},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":66405,"byte_end":66418,"line_start":480,"line_end":480,"column_start":6,"column_end":19},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1131},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":67343,"byte_end":67351,"line_start":515,"line_end":515,"column_start":6,"column_end":14},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1137},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":67473,"byte_end":67481,"line_start":521,"line_end":521,"column_start":39,"column_end":47},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1137},"to":{"krate":22,"index":96}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":68085,"byte_end":68093,"line_start":540,"line_end":540,"column_start":15,"column_end":23},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1137},"to":{"krate":2,"index":3422}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":68354,"byte_end":68365,"line_start":551,"line_end":551,"column_start":6,"column_end":17},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1142},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":69392,"byte_end":69403,"line_start":581,"line_end":581,"column_start":16,"column_end":27},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1142},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":69535,"byte_end":69546,"line_start":588,"line_end":588,"column_start":15,"column_end":26},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1142},"to":{"krate":2,"index":3422}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/endpoint.rs","byte_start":70053,"byte_end":70064,"line_start":604,"line_end":604,"column_start":26,"column_end":37},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1142},"to":{"krate":2,"index":3398}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/mutex.rs","byte_start":73504,"byte_end":73509,"line_start":126,"line_end":126,"column_start":13,"column_end":18},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1147},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/mutex.rs","byte_start":74078,"byte_end":74088,"line_start":147,"line_end":147,"column_start":27,"column_end":37},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":470},"to":{"krate":2,"index":3398}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/mutex.rs","byte_start":74244,"byte_end":74254,"line_start":155,"line_end":155,"column_start":30,"column_end":40},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":470},"to":{"krate":2,"index":3411}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":75216,"byte_end":75226,"line_start":33,"line_end":33,"column_start":6,"column_end":16},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1153},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":84531,"byte_end":84541,"line_start":292,"line_end":292,"column_start":57,"column_end":67},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":573},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":85128,"byte_end":85137,"line_start":313,"line_end":313,"column_start":17,"column_end":26},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":588},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":86865,"byte_end":86875,"line_start":358,"line_end":358,"column_start":20,"column_end":30},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1153},"to":{"krate":30,"index":39}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":87205,"byte_end":87215,"line_start":370,"line_end":370,"column_start":31,"column_end":41},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1153},"to":{"krate":65,"index":227}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":87475,"byte_end":87485,"line_start":381,"line_end":381,"column_start":15,"column_end":25},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1153},"to":{"krate":2,"index":3422}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":89071,"byte_end":89080,"line_start":425,"line_end":425,"column_start":30,"column_end":39},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1194},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":89339,"byte_end":89344,"line_start":434,"line_end":434,"column_start":30,"column_end":35},"kind":{"Impl":{"id":52}},"from":{"krate":1,"index":3959},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":89999,"byte_end":90003,"line_start":455,"line_end":455,"column_start":21,"column_end":25},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":608},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":90710,"byte_end":90719,"line_start":477,"line_end":477,"column_start":21,"column_end":30},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":616},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":91920,"byte_end":91929,"line_start":515,"line_end":515,"column_start":21,"column_end":30},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":624},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":92523,"byte_end":92533,"line_start":532,"line_end":532,"column_start":21,"column_end":31},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":633},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/recv_stream.rs","byte_start":92991,"byte_end":93004,"line_start":547,"line_end":547,"column_start":37,"column_end":50},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1274},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":93907,"byte_end":93917,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1276},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":101322,"byte_end":101332,"line_start":226,"line_end":226,"column_start":21,"column_end":31},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1276},"to":{"krate":30,"index":42}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":101845,"byte_end":101855,"line_start":240,"line_end":240,"column_start":32,"column_end":42},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1276},"to":{"krate":65,"index":306}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":102316,"byte_end":102326,"line_start":258,"line_end":258,"column_start":15,"column_end":25},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1276},"to":{"krate":2,"index":3422}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":103231,"byte_end":103237,"line_start":285,"line_end":285,"column_start":17,"column_end":23},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":742},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":103621,"byte_end":103628,"line_start":299,"line_end":299,"column_start":17,"column_end":24},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":748},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":104101,"byte_end":104106,"line_start":316,"line_end":316,"column_start":21,"column_end":26},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":754},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":104661,"byte_end":104669,"line_start":334,"line_end":334,"column_start":21,"column_end":29},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":763},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":105426,"byte_end":105437,"line_start":358,"line_end":358,"column_start":21,"column_end":32},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":771},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":106020,"byte_end":106030,"line_start":376,"line_end":376,"column_start":21,"column_end":31},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":780},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":106795,"byte_end":106809,"line_start":400,"line_end":400,"column_start":21,"column_end":35},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":789},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/send_stream.rs","byte_start":108833,"byte_end":108838,"line_start":458,"line_end":458,"column_start":31,"column_end":36},"kind":{"Impl":{"id":80}},"from":{"krate":1,"index":3959},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/quinn-0.8.5/src/work_limiter.rs","byte_start":110698,"byte_end":110709,"line_start":39,"line_end":39,"column_start":6,"column_end":17},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1352},"to":{"krate":4294967295,"index":4294967295}}]}