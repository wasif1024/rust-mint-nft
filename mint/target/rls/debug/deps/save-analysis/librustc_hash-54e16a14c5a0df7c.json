{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0","program":"/Users/air/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","rustc_hash","/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=54e16a14c5a0df7c","-C","extra-filename=-54e16a14c5a0df7c","--out-dir","/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps","-L","dependency=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/air/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/librustc_hash-54e16a14c5a0df7c.rmeta"},"prelude":{"crate_id":{"name":"rustc_hash","disambiguator":[4500966511170700026,0]},"crate_root":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src","external_crates":[{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[9994580471200982198,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[13944031075627487246,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[5133993387825513881,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","num":4,"id":{"name":"std","disambiguator":[4485569597606079733,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[14116380118705386640,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6269322086078963025,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16152481959168563413,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7897074911849024150,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[7299104579826168146,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2669544452907545777,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[14288251452253695433,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[13943810077905921301,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[2237926517141734526,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[5541021343498733002,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[7188895526679788668,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[15555671723428220450,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[13375000548276363576,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[8920282723255285566,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[2397004371161247654,0]}}],"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","byte_start":467,"byte_end":4505,"line_start":11,"line_end":148,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","byte_start":467,"byte_end":4505,"line_start":11,"line_end":148,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":33},{"krate":0,"index":35},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":42}],"decl_id":null,"docs":" Fast, non-cryptographic hash used by rustc and Firefox.","sig":null,"attributes":[{"value":"/ Fast, non-cryptographic hash used by rustc and Firefox.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","byte_start":467,"byte_end":526,"line_start":11,"line_end":11,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","byte_start":527,"byte_end":530,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","byte_start":531,"byte_end":544,"line_start":13,"line_end":13,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","byte_start":545,"byte_end":548,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","byte_start":549,"byte_end":560,"line_start":15,"line_end":15,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(feature = \"std\")]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","byte_start":561,"byte_end":590,"line_start":16,"line_end":16,"column_start":1,"column_end":30}},{"value":"/ # fn main() {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","byte_start":591,"byte_end":608,"line_start":17,"line_end":17,"column_start":1,"column_end":18}},{"value":"/ use rustc_hash::FxHashMap;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","byte_start":609,"byte_end":639,"line_start":18,"line_end":18,"column_start":1,"column_end":31}},{"value":"/ let mut map: FxHashMap<u32, u32> = FxHashMap::default();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","byte_start":640,"byte_end":700,"line_start":19,"line_end":19,"column_start":1,"column_end":61}},{"value":"/ map.insert(22, 44);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","byte_start":701,"byte_end":724,"line_start":20,"line_end":20,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","byte_start":725,"byte_end":732,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(not(feature = \"std\"))]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","byte_start":733,"byte_end":767,"line_start":22,"line_end":22,"column_start":1,"column_end":35}},{"value":"/ # fn main() { }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","byte_start":768,"byte_end":787,"line_start":23,"line_end":23,"column_start":1,"column_end":20}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","byte_start":788,"byte_end":795,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"no_std","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","byte_start":797,"byte_end":807,"line_start":26,"line_end":26,"column_start":1,"column_end":11}}]},{"kind":"Type","id":{"krate":0,"index":30},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","byte_start":1199,"byte_end":1208,"line_start":43,"line_end":43,"column_start":10,"column_end":19},"name":"FxHashMap","qualname":"::FxHashMap","value":"HashMap<K, V, BuildHasherDefault<FxHasher>>","parent":null,"children":[],"decl_id":null,"docs":" Type alias for a hashmap using the `fx` hash algorithm.\n","sig":null,"attributes":[{"value":"/ Type alias for a hashmap using the `fx` hash algorithm.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","byte_start":1106,"byte_end":1165,"line_start":41,"line_end":41,"column_start":1,"column_end":60}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","byte_start":1166,"byte_end":1189,"line_start":42,"line_end":42,"column_start":1,"column_end":24}}]},{"kind":"Type","id":{"krate":0,"index":33},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","byte_start":1356,"byte_end":1365,"line_start":47,"line_end":47,"column_start":10,"column_end":19},"name":"FxHashSet","qualname":"::FxHashSet","value":"HashSet<V, BuildHasherDefault<FxHasher>>","parent":null,"children":[],"decl_id":null,"docs":" Type alias for a hashmap using the `fx` hash algorithm.\n","sig":null,"attributes":[{"value":"/ Type alias for a hashmap using the `fx` hash algorithm.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","byte_start":1263,"byte_end":1322,"line_start":45,"line_end":45,"column_start":1,"column_end":60}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","byte_start":1323,"byte_end":1346,"line_start":46,"line_end":46,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":35},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","byte_start":2132,"byte_end":2140,"line_start":60,"line_end":60,"column_start":12,"column_end":20},"name":"FxHasher","qualname":"::FxHasher","value":"FxHasher {  }","parent":null,"children":[{"krate":0,"index":36}],"decl_id":null,"docs":" A speedy hash algorithm for use within rustc. The hashmap in liballoc\n by default uses SipHash which isn't quite as speedy as we want. In the\n compiler we're not really worried about DOS attempts, so we use a fast\n non-cryptographic hash.","sig":null,"attributes":[{"value":"/ A speedy hash algorithm for use within rustc. The hashmap in liballoc","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","byte_start":1414,"byte_end":1487,"line_start":49,"line_end":49,"column_start":1,"column_end":74}},{"value":"/ by default uses SipHash which isn't quite as speedy as we want. In the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","byte_start":1488,"byte_end":1562,"line_start":50,"line_end":50,"column_start":1,"column_end":75}},{"value":"/ compiler we're not really worried about DOS attempts, so we use a fast","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","byte_start":1563,"byte_end":1637,"line_start":51,"line_end":51,"column_start":1,"column_end":75}},{"value":"/ non-cryptographic hash.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","byte_start":1638,"byte_end":1665,"line_start":52,"line_end":52,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","byte_start":1666,"byte_end":1669,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ This is the same as the algorithm used by Firefox -- which is a homespun","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","byte_start":1670,"byte_end":1746,"line_start":54,"line_end":54,"column_start":1,"column_end":77}},{"value":"/ one not based on any widely-known algorithm -- though modified to produce","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","byte_start":1747,"byte_end":1824,"line_start":55,"line_end":55,"column_start":1,"column_end":78}},{"value":"/ 64-bit hash values instead of 32-bit hash values. It consistently","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","byte_start":1825,"byte_end":1894,"line_start":56,"line_end":56,"column_start":1,"column_end":70}},{"value":"/ out-performs an FNV-based hash within rustc itself -- the collision rate is","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","byte_start":1895,"byte_end":1974,"line_start":57,"line_end":57,"column_start":1,"column_end":80}},{"value":"/ similar or slightly worse than FNV, but the speed of the hash function","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","byte_start":1975,"byte_end":2049,"line_start":58,"line_end":58,"column_start":1,"column_end":75}},{"value":"/ itself is much higher because it works on up to 8 bytes at a time.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","byte_start":2050,"byte_end":2120,"line_start":59,"line_end":59,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","byte_start":2351,"byte_end":2358,"line_start":71,"line_end":71,"column_start":8,"column_end":15},"name":"default","qualname":"<FxHasher as core::default::Default>::default","value":"fn default() -> FxHasher","parent":{"krate":1,"index":3157},"children":[],"decl_id":{"krate":1,"index":3158},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","byte_start":2334,"byte_end":2343,"line_start":70,"line_end":70,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","byte_start":2614,"byte_end":2619,"line_start":85,"line_end":85,"column_start":8,"column_end":13},"name":"write","qualname":"<FxHasher as core::hash::Hasher>::write","value":"fn write(&mut Self, &[u8])","parent":{"krate":1,"index":10334},"children":[],"decl_id":{"krate":1,"index":10336},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","byte_start":2597,"byte_end":2606,"line_start":84,"line_end":84,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","byte_start":3749,"byte_end":3757,"line_start":112,"line_end":112,"column_start":8,"column_end":16},"name":"write_u8","qualname":"<FxHasher as core::hash::Hasher>::write_u8","value":"fn write_u8(&mut Self, u8)","parent":{"krate":1,"index":10334},"children":[],"decl_id":{"krate":1,"index":10337},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","byte_start":3732,"byte_end":3741,"line_start":111,"line_end":111,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","byte_start":3844,"byte_end":3853,"line_start":117,"line_end":117,"column_start":8,"column_end":17},"name":"write_u16","qualname":"<FxHasher as core::hash::Hasher>::write_u16","value":"fn write_u16(&mut Self, u16)","parent":{"krate":1,"index":10334},"children":[],"decl_id":{"krate":1,"index":10338},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","byte_start":3827,"byte_end":3836,"line_start":116,"line_end":116,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","byte_start":3941,"byte_end":3950,"line_start":122,"line_end":122,"column_start":8,"column_end":17},"name":"write_u32","qualname":"<FxHasher as core::hash::Hasher>::write_u32","value":"fn write_u32(&mut Self, u32)","parent":{"krate":1,"index":10334},"children":[],"decl_id":{"krate":1,"index":10339},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","byte_start":3924,"byte_end":3933,"line_start":121,"line_end":121,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","byte_start":4261,"byte_end":4270,"line_start":135,"line_end":135,"column_start":8,"column_end":17},"name":"write_u64","qualname":"<FxHasher as core::hash::Hasher>::write_u64","value":"fn write_u64(&mut Self, u64)","parent":{"krate":1,"index":10334},"children":[],"decl_id":{"krate":1,"index":10340},"docs":"","sig":null,"attributes":[{"value":"cfg(target_pointer_width = \"64\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","byte_start":4204,"byte_end":4239,"line_start":133,"line_end":133,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","byte_start":4244,"byte_end":4253,"line_start":134,"line_end":134,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","byte_start":4358,"byte_end":4369,"line_start":140,"line_end":140,"column_start":8,"column_end":19},"name":"write_usize","qualname":"<FxHasher as core::hash::Hasher>::write_usize","value":"fn write_usize(&mut Self, usize)","parent":{"krate":1,"index":10334},"children":[],"decl_id":{"krate":1,"index":10342},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","byte_start":4341,"byte_end":4350,"line_start":139,"line_end":139,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","byte_start":4450,"byte_end":4456,"line_start":145,"line_end":145,"column_start":8,"column_end":14},"name":"finish","qualname":"<FxHasher as core::hash::Hasher>::finish","value":"fn finish(&Self) -> u64","parent":{"krate":1,"index":10334},"children":[],"decl_id":{"krate":1,"index":10335},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","byte_start":4433,"byte_end":4442,"line_start":144,"line_end":144,"column_start":5,"column_end":14}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","byte_start":2319,"byte_end":2327,"line_start":69,"line_end":69,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","byte_start":2418,"byte_end":2426,"line_start":76,"line_end":76,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","byte_start":2582,"byte_end":2590,"line_start":83,"line_end":83,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":43},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","byte_start":2319,"byte_end":2327,"line_start":69,"line_end":69,"column_start":18,"column_end":26},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":35},"to":{"krate":1,"index":3157}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","byte_start":2418,"byte_end":2426,"line_start":76,"line_end":76,"column_start":6,"column_end":14},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":35},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hash-1.1.0/src/lib.rs","byte_start":2582,"byte_end":2590,"line_start":83,"line_end":83,"column_start":17,"column_end":25},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":35},"to":{"krate":1,"index":10334}}]}