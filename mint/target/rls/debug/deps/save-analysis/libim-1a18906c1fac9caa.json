{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0","program":"/Users/air/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","im","--edition=2018","/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"rayon\"","--cfg","feature=\"serde\"","-C","metadata=1a18906c1fac9caa","-C","extra-filename=-1a18906c1fac9caa","--out-dir","/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps","-L","dependency=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps","--extern","bitmaps=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libbitmaps-cb97c5ae2ff14234.rmeta","--extern","rand_core=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/librand_core-1f751c94fc3f4a6c.rmeta","--extern","rand_xoshiro=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/librand_xoshiro-ddea5aae77725210.rmeta","--extern","rayon=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/librayon-2ef85df7ebb68ca1.rmeta","--extern","serde=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libserde-2e6e0464b7ba0e58.rmeta","--extern","sized_chunks=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libsized_chunks-42d284df98e4468a.rmeta","--extern","typenum=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libtypenum-18c716705879fc4a.rmeta","--cap-lints","allow","--cfg","threadsafe","--error-format=json","--sysroot","/Users/air/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libim-1a18906c1fac9caa.rmeta"},"prelude":{"crate_id":{"name":"im","disambiguator":[18297094742304548054,0]},"crate_root":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src","external_crates":[{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","num":1,"id":{"name":"std","disambiguator":[4485569597606079733,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","num":2,"id":{"name":"core","disambiguator":[9994580471200982198,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13944031075627487246,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5133993387825513881,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[14116380118705386640,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6269322086078963025,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16152481959168563413,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7897074911849024150,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[7299104579826168146,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2669544452907545777,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[14288251452253695433,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[13943810077905921301,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[2237926517141734526,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[5541021343498733002,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[7188895526679788668,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[15555671723428220450,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","num":17,"id":{"name":"object","disambiguator":[13375000548276363576,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[8920282723255285566,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[2397004371161247654,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/config.rs","num":20,"id":{"name":"typenum","disambiguator":[10767619991598477718,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/btree.rs","num":21,"id":{"name":"sized_chunks","disambiguator":[1200708782621978020,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/hamt.rs","num":22,"id":{"name":"bitmaps","disambiguator":[6026907835376759263,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/sort.rs","num":23,"id":{"name":"rand_core","disambiguator":[16845283938616561134,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/sort.rs","num":24,"id":{"name":"getrandom","disambiguator":[11134963274789204374,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/sort.rs","num":25,"id":{"name":"cfg_if","disambiguator":[13273704638852766021,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/sort.rs","num":26,"id":{"name":"libc","disambiguator":[2594694148884002105,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/rayon.rs","num":27,"id":{"name":"rayon","disambiguator":[9169189669646942175,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/rayon.rs","num":28,"id":{"name":"either","disambiguator":[2075722773216910906,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/rayon.rs","num":29,"id":{"name":"rayon_core","disambiguator":[1107194749897732973,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/rayon.rs","num":30,"id":{"name":"crossbeam_channel","disambiguator":[13496712704375229448,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/rayon.rs","num":31,"id":{"name":"crossbeam_utils","disambiguator":[1339298624939999906,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/rayon.rs","num":32,"id":{"name":"once_cell","disambiguator":[3525325367007617747,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/rayon.rs","num":33,"id":{"name":"crossbeam_deque","disambiguator":[4034708680362299587,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/rayon.rs","num":34,"id":{"name":"crossbeam_epoch","disambiguator":[11881514175437435003,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/rayon.rs","num":35,"id":{"name":"scopeguard","disambiguator":[12042798599719570489,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/rayon.rs","num":36,"id":{"name":"memoffset","disambiguator":[10205436908858835015,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/rayon.rs","num":37,"id":{"name":"num_cpus","disambiguator":[5214853325863455532,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ser.rs","num":38,"id":{"name":"serde","disambiguator":[18037409615073048381,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ser.rs","num":39,"id":{"name":"serde_derive","disambiguator":[8793957035152621601,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/sort.rs","num":40,"id":{"name":"rand_xoshiro","disambiguator":[13384709552084312001,0]}}],"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":203,"byte_end":24179,"line_start":5,"line_end":507,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":238},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":150417,"byte_end":150430,"line_start":36,"line_end":36,"column_start":5,"column_end":18},"alias_span":null,"name":"ConsumingIter","value":"","parent":{"krate":0,"index":761}},{"kind":"Use","ref_id":{"krate":0,"index":3566},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":150432,"byte_end":150440,"line_start":36,"line_end":36,"column_start":20,"column_end":28},"alias_span":null,"name":"NodeDiffItem","value":"","parent":{"krate":0,"index":761}},{"kind":"Use","ref_id":{"krate":0,"index":263},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":150458,"byte_end":150466,"line_start":36,"line_end":36,"column_start":46,"column_end":54},"alias_span":null,"name":"NodeDiffIter","value":"","parent":{"krate":0,"index":761}},{"kind":"Use","ref_id":{"krate":0,"index":205},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":150484,"byte_end":150488,"line_start":36,"line_end":36,"column_start":72,"column_end":76},"alias_span":null,"name":"RangedIter","value":"","parent":{"krate":0,"index":761}},{"kind":"Use","ref_id":{"krate":0,"index":3566},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":226576,"byte_end":226584,"line_start":37,"line_end":37,"column_start":30,"column_end":38},"alias_span":null,"name":"DiffItem","value":"","parent":{"krate":0,"index":1327}},{"kind":"Use","ref_id":{"krate":0,"index":761},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":19856,"byte_end":19859,"line_start":357,"line_end":357,"column_start":21,"column_end":24},"alias_span":null,"name":"ordmap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1327},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":19891,"byte_end":19894,"line_start":358,"line_end":358,"column_start":21,"column_end":24},"alias_span":null,"name":"ordset","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1656},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":19951,"byte_end":19954,"line_start":362,"line_end":362,"column_start":22,"column_end":25},"alias_span":null,"name":"hashmap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2208},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":19988,"byte_end":19991,"line_start":363,"line_end":363,"column_start":22,"column_end":25},"alias_span":null,"name":"hashset","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2724},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":357135,"byte_end":357140,"line_start":66,"line_end":66,"column_start":23,"column_end":28},"alias_span":null,"name":"Focus","value":"","parent":{"krate":0,"index":2542}},{"kind":"Use","ref_id":{"krate":0,"index":2783},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":357142,"byte_end":357150,"line_start":66,"line_end":66,"column_start":30,"column_end":38},"alias_span":null,"name":"FocusMut","value":"","parent":{"krate":0,"index":2542}},{"kind":"Use","ref_id":{"krate":0,"index":2871},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":357184,"byte_end":357191,"line_start":69,"line_end":69,"column_start":21,"column_end":28},"alias_span":null,"name":"RRBPool","value":"","parent":{"krate":0,"index":2542}},{"kind":"Use","ref_id":{"krate":0,"index":1745},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":20570,"byte_end":20577,"line_start":393,"line_end":393,"column_start":25,"column_end":32},"alias_span":null,"name":"HashMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2301},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":20603,"byte_end":20610,"line_start":394,"line_end":394,"column_start":25,"column_end":32},"alias_span":null,"name":"HashSet","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":867},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":20635,"byte_end":20641,"line_start":395,"line_end":395,"column_start":24,"column_end":30},"alias_span":null,"name":"OrdMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1432},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":20666,"byte_end":20672,"line_start":396,"line_end":396,"column_start":24,"column_end":30},"alias_span":null,"name":"OrdSet","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2995},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":20712,"byte_end":20718,"line_start":398,"line_end":398,"column_start":24,"column_end":30},"alias_span":null,"name":"Vector","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":203,"byte_end":24179,"line_start":5,"line_end":507,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":9},{"krate":0,"index":661},{"krate":0,"index":687},{"krate":0,"index":712},{"krate":0,"index":760},{"krate":0,"index":1649},{"krate":0,"index":1652},{"krate":0,"index":1655},{"krate":0,"index":2536},{"krate":0,"index":2539},{"krate":0,"index":2542},{"krate":0,"index":3299},{"krate":0,"index":3307},{"krate":0,"index":3465},{"krate":0,"index":3549},{"krate":0,"index":3552},{"krate":0,"index":3555},{"krate":0,"index":3558},{"krate":0,"index":3561},{"krate":0,"index":3564},{"krate":0,"index":3565}],"decl_id":null,"docs":" # Immutable Data Structures for Rust","sig":null,"attributes":[{"value":"/ # Immutable Data Structures for Rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":203,"byte_end":243,"line_start":5,"line_end":5,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":244,"byte_end":247,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This library implements several of the more commonly useful immutable data","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":248,"byte_end":326,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/ structures for Rust.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":327,"byte_end":351,"line_start":8,"line_end":8,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":352,"byte_end":355,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ ## What are immutable data structures?","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":356,"byte_end":398,"line_start":10,"line_end":10,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":399,"byte_end":402,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Immutable data structures are data structures which can be copied and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":403,"byte_end":476,"line_start":12,"line_end":12,"column_start":1,"column_end":74}},{"value":"/ modified efficiently without altering the original. The most uncomplicated","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":477,"byte_end":555,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ example of this is the venerable [cons list][cons-list]. This crate offers a","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":556,"byte_end":636,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/ selection of more modern and flexible data structures with similar","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":637,"byte_end":707,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ properties, tuned for the needs of Rust developers.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":708,"byte_end":763,"line_start":16,"line_end":16,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":764,"byte_end":767,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Briefly, the following data structures are provided:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":768,"byte_end":824,"line_start":18,"line_end":18,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":825,"byte_end":828,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ * [Vectors][vector::Vector] based on [RRB trees][rrb-tree]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":829,"byte_end":891,"line_start":20,"line_end":20,"column_start":1,"column_end":63}},{"value":"/ * [Hash maps][hashmap::HashMap]/[sets][hashset::HashSet] based on [hash","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":892,"byte_end":967,"line_start":21,"line_end":21,"column_start":1,"column_end":76}},{"value":"/   array mapped tries][hamt]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":968,"byte_end":999,"line_start":22,"line_end":22,"column_start":1,"column_end":32}},{"value":"/ * [Ordered maps][ordmap::OrdMap]/[sets][ordset::OrdSet] based on","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":1000,"byte_end":1068,"line_start":23,"line_end":23,"column_start":1,"column_end":69}},{"value":"/   [B-trees][b-tree]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":1069,"byte_end":1092,"line_start":24,"line_end":24,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":1093,"byte_end":1096,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ## Why Would I Want This?","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":1097,"byte_end":1126,"line_start":26,"line_end":26,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":1127,"byte_end":1130,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ While immutable data structures can be a game changer for other","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":1131,"byte_end":1198,"line_start":28,"line_end":28,"column_start":1,"column_end":68}},{"value":"/ programming languages, the most obvious benefit - avoiding the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":1199,"byte_end":1265,"line_start":29,"line_end":29,"column_start":1,"column_end":67}},{"value":"/ accidental mutation of data - is already handled so well by Rust's","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":1266,"byte_end":1336,"line_start":30,"line_end":30,"column_start":1,"column_end":71}},{"value":"/ type system that it's just not something a Rust programmer needs","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":1337,"byte_end":1405,"line_start":31,"line_end":31,"column_start":1,"column_end":69}},{"value":"/ to worry about even when using data structures that would send a","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":1406,"byte_end":1474,"line_start":32,"line_end":32,"column_start":1,"column_end":69}},{"value":"/ conscientious Clojure programmer into a panic.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":1475,"byte_end":1525,"line_start":33,"line_end":33,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":1526,"byte_end":1529,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Immutable data structures offer other benefits, though, some of","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":1530,"byte_end":1597,"line_start":35,"line_end":35,"column_start":1,"column_end":68}},{"value":"/ which are useful even in a language like Rust. The most prominent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":1598,"byte_end":1667,"line_start":36,"line_end":36,"column_start":1,"column_end":70}},{"value":"/ is *structural sharing*, which means that if two data structures","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":1668,"byte_end":1736,"line_start":37,"line_end":37,"column_start":1,"column_end":69}},{"value":"/ are mostly copies of each other, most of the memory they take up","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":1737,"byte_end":1805,"line_start":38,"line_end":38,"column_start":1,"column_end":69}},{"value":"/ will be shared between them. This implies that making copies of an","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":1806,"byte_end":1876,"line_start":39,"line_end":39,"column_start":1,"column_end":71}},{"value":"/ immutable data structure is cheap: it's really only a matter of","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":1877,"byte_end":1944,"line_start":40,"line_end":40,"column_start":1,"column_end":68}},{"value":"/ copying a pointer and increasing a reference counter, where in the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":1945,"byte_end":2015,"line_start":41,"line_end":41,"column_start":1,"column_end":71}},{"value":"/ case of [`Vec`][std::vec::Vec] you have to allocate the same","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":2016,"byte_end":2080,"line_start":42,"line_end":42,"column_start":1,"column_end":65}},{"value":"/ amount of memory all over again and make a copy of every element","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":2081,"byte_end":2149,"line_start":43,"line_end":43,"column_start":1,"column_end":69}},{"value":"/ it contains. For immutable data structures, extra memory isn't","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":2150,"byte_end":2216,"line_start":44,"line_end":44,"column_start":1,"column_end":67}},{"value":"/ allocated until you modify either the copy or the original, and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":2217,"byte_end":2284,"line_start":45,"line_end":45,"column_start":1,"column_end":68}},{"value":"/ then only the memory needed to record the difference.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":2285,"byte_end":2342,"line_start":46,"line_end":46,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":2343,"byte_end":2346,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ Another goal of this library has been the idea that you shouldn't","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":2347,"byte_end":2416,"line_start":48,"line_end":48,"column_start":1,"column_end":70}},{"value":"/ even have to think about what data structure to use in any given","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":2417,"byte_end":2485,"line_start":49,"line_end":49,"column_start":1,"column_end":69}},{"value":"/ situation, until the point where you need to start worrying about","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":2486,"byte_end":2555,"line_start":50,"line_end":50,"column_start":1,"column_end":70}},{"value":"/ optimisation - which, in practice, often never comes. Beyond the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":2556,"byte_end":2624,"line_start":51,"line_end":51,"column_start":1,"column_end":69}},{"value":"/ shape of your data (ie. whether to use a list or a map), it should","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":2625,"byte_end":2695,"line_start":52,"line_end":52,"column_start":1,"column_end":71}},{"value":"/ be fine not to think too carefully about data structures - you can","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":2696,"byte_end":2766,"line_start":53,"line_end":53,"column_start":1,"column_end":71}},{"value":"/ just pick the one that has the right shape and it should have","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":2767,"byte_end":2832,"line_start":54,"line_end":54,"column_start":1,"column_end":66}},{"value":"/ acceptable performance characteristics for every operation you","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":2833,"byte_end":2899,"line_start":55,"line_end":55,"column_start":1,"column_end":67}},{"value":"/ might need. Specialised data structures will always be faster at","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":2900,"byte_end":2968,"line_start":56,"line_end":56,"column_start":1,"column_end":69}},{"value":"/ what they've been specialised for, but `im` aims to provide the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":2969,"byte_end":3036,"line_start":57,"line_end":57,"column_start":1,"column_end":68}},{"value":"/ data structures which deliver the least chance of accidentally","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":3037,"byte_end":3103,"line_start":58,"line_end":58,"column_start":1,"column_end":67}},{"value":"/ using them for the wrong thing.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":3104,"byte_end":3139,"line_start":59,"line_end":59,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":3140,"byte_end":3143,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ For instance, [`Vec`][std::vec::Vec] beats everything at memory","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":3144,"byte_end":3211,"line_start":61,"line_end":61,"column_start":1,"column_end":68}},{"value":"/ usage, indexing and operations that happen at the back of the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":3212,"byte_end":3277,"line_start":62,"line_end":62,"column_start":1,"column_end":66}},{"value":"/ list, but is terrible at insertion and removal, and gets worse the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":3278,"byte_end":3348,"line_start":63,"line_end":63,"column_start":1,"column_end":71}},{"value":"/ closer to the front of the list you get.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":3349,"byte_end":3393,"line_start":64,"line_end":64,"column_start":1,"column_end":45}},{"value":"/ [`VecDeque`][std::collections::VecDeque] adds a little bit of","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":3394,"byte_end":3459,"line_start":65,"line_end":65,"column_start":1,"column_end":66}},{"value":"/ complexity in order to make operations at the front as efficient","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":3460,"byte_end":3528,"line_start":66,"line_end":66,"column_start":1,"column_end":69}},{"value":"/ as operations at the back, but is still bad at insertion and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":3529,"byte_end":3593,"line_start":67,"line_end":67,"column_start":1,"column_end":65}},{"value":"/ especially concatenation. [`Vector`][vector::Vector] adds another","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":3594,"byte_end":3663,"line_start":68,"line_end":68,"column_start":1,"column_end":70}},{"value":"/ bit of complexity, and could never match [`Vec`][std::vec::Vec] at","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":3664,"byte_end":3734,"line_start":69,"line_end":69,"column_start":1,"column_end":71}},{"value":"/ what it's best at, but in return every operation you can throw at","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":3735,"byte_end":3804,"line_start":70,"line_end":70,"column_start":1,"column_end":70}},{"value":"/ it can be completed in a reasonable amount of time - even normally","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":3805,"byte_end":3875,"line_start":71,"line_end":71,"column_start":1,"column_end":71}},{"value":"/ expensive operations like copying and especially concatenation are","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":3876,"byte_end":3946,"line_start":72,"line_end":72,"column_start":1,"column_end":71}},{"value":"/ reasonably cheap when using a [`Vector`][vector::Vector].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":3947,"byte_end":4008,"line_start":73,"line_end":73,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":4009,"byte_end":4012,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ It should be noted, however, that because of its simplicity,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":4013,"byte_end":4077,"line_start":75,"line_end":75,"column_start":1,"column_end":65}},{"value":"/ [`Vec`][std::vec::Vec] actually beats [`Vector`][vector::Vector] even at its","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":4078,"byte_end":4158,"line_start":76,"line_end":76,"column_start":1,"column_end":81}},{"value":"/ strongest operations at small sizes, just because modern CPUs are","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":4159,"byte_end":4228,"line_start":77,"line_end":77,"column_start":1,"column_end":70}},{"value":"/ hyperoptimised for things like copying small chunks of contiguous memory -","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":4229,"byte_end":4307,"line_start":78,"line_end":78,"column_start":1,"column_end":79}},{"value":"/ you actually need to go past a certain size (usually in the vicinity of","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":4308,"byte_end":4383,"line_start":79,"line_end":79,"column_start":1,"column_end":76}},{"value":"/ several hundred elements) before you get to the point where","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":4384,"byte_end":4447,"line_start":80,"line_end":80,"column_start":1,"column_end":64}},{"value":"/ [`Vec`][std::vec::Vec] isn't always going to be the fastest choice.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":4448,"byte_end":4519,"line_start":81,"line_end":81,"column_start":1,"column_end":72}},{"value":"/ [`Vector`][vector::Vector] attempts to overcome this by actually just being","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":4520,"byte_end":4599,"line_start":82,"line_end":82,"column_start":1,"column_end":80}},{"value":"/ an array at very small sizes, and being able to switch efficiently to the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":4600,"byte_end":4677,"line_start":83,"line_end":83,"column_start":1,"column_end":78}},{"value":"/ full data structure when it grows large enough. Thus,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":4678,"byte_end":4735,"line_start":84,"line_end":84,"column_start":1,"column_end":58}},{"value":"/ [`Vector`][vector::Vector] will actually be equivalent to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":4736,"byte_end":4797,"line_start":85,"line_end":85,"column_start":1,"column_end":62}},{"value":"/ [Vec][std::vec::Vec] until it grows past the size of a single chunk.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":4798,"byte_end":4870,"line_start":86,"line_end":86,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":4871,"byte_end":4874,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ The maps - [`HashMap`][hashmap::HashMap] and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":4875,"byte_end":4923,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"/ [`OrdMap`][ordmap::OrdMap] - generally perform similarly to their","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":4924,"byte_end":4993,"line_start":89,"line_end":89,"column_start":1,"column_end":70}},{"value":"/ equivalents in the standard library, but tend to run a bit slower","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":4994,"byte_end":5063,"line_start":90,"line_end":90,"column_start":1,"column_end":70}},{"value":"/ on the basic operations ([`HashMap`][hashmap::HashMap] is almost","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":5064,"byte_end":5132,"line_start":91,"line_end":91,"column_start":1,"column_end":69}},{"value":"/ neck and neck with its counterpart, while","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":5133,"byte_end":5178,"line_start":92,"line_end":92,"column_start":1,"column_end":46}},{"value":"/ [`OrdMap`][ordmap::OrdMap] currently tends to run 2-3x slower). On","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":5179,"byte_end":5249,"line_start":93,"line_end":93,"column_start":1,"column_end":71}},{"value":"/ the other hand, they offer the cheap copy and structural sharing","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":5250,"byte_end":5318,"line_start":94,"line_end":94,"column_start":1,"column_end":69}},{"value":"/ between copies that you'd expect from immutable data structures.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":5319,"byte_end":5387,"line_start":95,"line_end":95,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":5388,"byte_end":5391,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ In conclusion, the aim of this library is to provide a safe","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":5392,"byte_end":5455,"line_start":97,"line_end":97,"column_start":1,"column_end":64}},{"value":"/ default choice for the most common kinds of data structures,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":5456,"byte_end":5520,"line_start":98,"line_end":98,"column_start":1,"column_end":65}},{"value":"/ allowing you to defer careful thinking about the right data","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":5521,"byte_end":5584,"line_start":99,"line_end":99,"column_start":1,"column_end":64}},{"value":"/ structure for the job until you need to start looking for","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":5585,"byte_end":5646,"line_start":100,"line_end":100,"column_start":1,"column_end":62}},{"value":"/ optimisations - and you may find, especially for larger data sets,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":5647,"byte_end":5717,"line_start":101,"line_end":101,"column_start":1,"column_end":71}},{"value":"/ that immutable data structures are still the right choice.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":5718,"byte_end":5780,"line_start":102,"line_end":102,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":5781,"byte_end":5784,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ ## Values","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":5785,"byte_end":5798,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":5799,"byte_end":5802,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ Because we need to make copies of shared nodes in these data structures","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":5803,"byte_end":5878,"line_start":106,"line_end":106,"column_start":1,"column_end":76}},{"value":"/ before updating them, the values you store in them must implement","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":5879,"byte_end":5948,"line_start":107,"line_end":107,"column_start":1,"column_end":70}},{"value":"/ [`Clone`][std::clone::Clone].  For primitive values that implement","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":5949,"byte_end":6019,"line_start":108,"line_end":108,"column_start":1,"column_end":71}},{"value":"/ [`Copy`][std::marker::Copy], such as numbers, everything is fine: this is","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":6020,"byte_end":6097,"line_start":109,"line_end":109,"column_start":1,"column_end":78}},{"value":"/ the case for which the data structures are optimised, and performance is","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":6098,"byte_end":6174,"line_start":110,"line_end":110,"column_start":1,"column_end":77}},{"value":"/ going to be great.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":6175,"byte_end":6197,"line_start":111,"line_end":111,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":6198,"byte_end":6201,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ On the other hand, if you want to store values for which cloning is","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":6202,"byte_end":6273,"line_start":113,"line_end":113,"column_start":1,"column_end":72}},{"value":"/ expensive, or values that don't implement [`Clone`][std::clone::Clone], you","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":6274,"byte_end":6353,"line_start":114,"line_end":114,"column_start":1,"column_end":80}},{"value":"/ need to wrap them in [`Rc`][std::rc::Rc] or [`Arc`][std::sync::Arc]. Thus,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":6354,"byte_end":6432,"line_start":115,"line_end":115,"column_start":1,"column_end":79}},{"value":"/ if you have a complex structure `BigBlobOfData` and you want to store a list","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":6433,"byte_end":6513,"line_start":116,"line_end":116,"column_start":1,"column_end":81}},{"value":"/ of them as a `Vector<BigBlobOfData>`, you should instead use a","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":6514,"byte_end":6580,"line_start":117,"line_end":117,"column_start":1,"column_end":67}},{"value":"/ `Vector<Rc<BigBlobOfData>>`, which is going to save you not only the time","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":6581,"byte_end":6658,"line_start":118,"line_end":118,"column_start":1,"column_end":78}},{"value":"/ spent cloning the big blobs of data, but also the memory spent keeping","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":6659,"byte_end":6733,"line_start":119,"line_end":119,"column_start":1,"column_end":75}},{"value":"/ multiple copies of it around, as [`Rc`][std::rc::Rc] keeps a single","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":6734,"byte_end":6805,"line_start":120,"line_end":120,"column_start":1,"column_end":72}},{"value":"/ reference counted copy around instead.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":6806,"byte_end":6848,"line_start":121,"line_end":121,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":6849,"byte_end":6852,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ If you're storing smaller values that aren't","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":6853,"byte_end":6901,"line_start":123,"line_end":123,"column_start":1,"column_end":49}},{"value":"/ [`Copy`][std::marker::Copy]able, you'll need to exercise judgement: if your","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":6902,"byte_end":6981,"line_start":124,"line_end":124,"column_start":1,"column_end":80}},{"value":"/ values are going to be very cheap to clone, as would be the case for short","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":6982,"byte_end":7060,"line_start":125,"line_end":125,"column_start":1,"column_end":79}},{"value":"/ [`String`][std::string::String]s or small [`Vec`][std::vec::Vec]s, you're","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":7061,"byte_end":7138,"line_start":126,"line_end":126,"column_start":1,"column_end":78}},{"value":"/ probably better off storing them directly without wrapping them in an","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":7139,"byte_end":7212,"line_start":127,"line_end":127,"column_start":1,"column_end":74}},{"value":"/ [`Rc`][std::rc::Rc], because, like the [`Rc`][std::rc::Rc], they're just","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":7213,"byte_end":7289,"line_start":128,"line_end":128,"column_start":1,"column_end":77}},{"value":"/ pointers to some data on the heap, and that data isn't expensive to clone -","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":7290,"byte_end":7369,"line_start":129,"line_end":129,"column_start":1,"column_end":80}},{"value":"/ you might actually lose more performance from the extra redirection of","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":7370,"byte_end":7444,"line_start":130,"line_end":130,"column_start":1,"column_end":75}},{"value":"/ wrapping them in an [`Rc`][std::rc::Rc] than you would from occasionally","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":7445,"byte_end":7521,"line_start":131,"line_end":131,"column_start":1,"column_end":77}},{"value":"/ cloning them.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":7522,"byte_end":7539,"line_start":132,"line_end":132,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":7540,"byte_end":7543,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ ### When does cloning happen?","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":7544,"byte_end":7577,"line_start":134,"line_end":134,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":7578,"byte_end":7581,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ So when will your values actually be cloned? The easy answer is only if you","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":7582,"byte_end":7661,"line_start":136,"line_end":136,"column_start":1,"column_end":80}},{"value":"/ [`clone`][std::clone::Clone::clone] the data structure itself, and then only","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":7662,"byte_end":7742,"line_start":137,"line_end":137,"column_start":1,"column_end":81}},{"value":"/ lazily as you change it. Values are stored in tree nodes inside the data","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":7743,"byte_end":7819,"line_start":138,"line_end":138,"column_start":1,"column_end":77}},{"value":"/ structure, each node of which contains up to 64 values. When you","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":7820,"byte_end":7888,"line_start":139,"line_end":139,"column_start":1,"column_end":69}},{"value":"/ [`clone`][std::clone::Clone::clone] a data structure, nothing is actually","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":7889,"byte_end":7966,"line_start":140,"line_end":140,"column_start":1,"column_end":78}},{"value":"/ copied - it's just the reference count on the root node that's incremented,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":7967,"byte_end":8046,"line_start":141,"line_end":141,"column_start":1,"column_end":80}},{"value":"/ to indicate that it's shared between two data structures. It's only when you","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":8047,"byte_end":8127,"line_start":142,"line_end":142,"column_start":1,"column_end":81}},{"value":"/ actually modify one of the shared data structures that nodes are cloned:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":8128,"byte_end":8204,"line_start":143,"line_end":143,"column_start":1,"column_end":77}},{"value":"/ when you make a change somewhere in the tree, the node containing the change","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":8205,"byte_end":8285,"line_start":144,"line_end":144,"column_start":1,"column_end":81}},{"value":"/ needs to be cloned, and then its parent nodes need to be updated to contain","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":8286,"byte_end":8365,"line_start":145,"line_end":145,"column_start":1,"column_end":80}},{"value":"/ the new child node instead of the old version, and so they're cloned as","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":8366,"byte_end":8441,"line_start":146,"line_end":146,"column_start":1,"column_end":76}},{"value":"/ well.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":8442,"byte_end":8451,"line_start":147,"line_end":147,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":8452,"byte_end":8455,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ We can call this \"lazy\" cloning - if you make two copies of a data structure","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":8456,"byte_end":8536,"line_start":149,"line_end":149,"column_start":1,"column_end":81}},{"value":"/ and you never change either of them, there's never any need to clone the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":8537,"byte_end":8613,"line_start":150,"line_end":150,"column_start":1,"column_end":77}},{"value":"/ data they contain. It's only when you start making changes that cloning","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":8614,"byte_end":8689,"line_start":151,"line_end":151,"column_start":1,"column_end":76}},{"value":"/ starts to happen, and then only on the specific tree nodes that are part of","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":8690,"byte_end":8769,"line_start":152,"line_end":152,"column_start":1,"column_end":80}},{"value":"/ the change. Note that the implications of lazily cloning the data structure","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":8770,"byte_end":8849,"line_start":153,"line_end":153,"column_start":1,"column_end":80}},{"value":"/ extend to memory usage as well as the CPU workload of copying the data","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":8850,"byte_end":8924,"line_start":154,"line_end":154,"column_start":1,"column_end":75}},{"value":"/ around - cloning an immutable data structure means both copies share the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":8925,"byte_end":9001,"line_start":155,"line_end":155,"column_start":1,"column_end":77}},{"value":"/ same allocated memory, until you start making changes.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":9002,"byte_end":9060,"line_start":156,"line_end":156,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":9061,"byte_end":9064,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ Most crucially, if you never clone the data structure, the data inside it is","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":9065,"byte_end":9145,"line_start":158,"line_end":158,"column_start":1,"column_end":81}},{"value":"/ also never cloned, and in this case it acts just like a mutable data","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":9146,"byte_end":9218,"line_start":159,"line_end":159,"column_start":1,"column_end":73}},{"value":"/ structure, with minimal performance differences (but still non-zero, as we","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":9219,"byte_end":9297,"line_start":160,"line_end":160,"column_start":1,"column_end":79}},{"value":"/ still have to check for shared nodes).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":9298,"byte_end":9340,"line_start":161,"line_end":161,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":9341,"byte_end":9344,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ## Data Structures","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":9345,"byte_end":9367,"line_start":163,"line_end":163,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":9368,"byte_end":9371,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ We'll attempt to provide a comprehensive guide to the available","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":9372,"byte_end":9439,"line_start":165,"line_end":165,"column_start":1,"column_end":68}},{"value":"/ data structures below.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":9440,"byte_end":9466,"line_start":166,"line_end":166,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":9467,"byte_end":9470,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ ### Performance Notes","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":9471,"byte_end":9496,"line_start":168,"line_end":168,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":9497,"byte_end":9500,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ \"Big O notation\" is the standard way of talking about the time","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":9501,"byte_end":9567,"line_start":170,"line_end":170,"column_start":1,"column_end":67}},{"value":"/ complexity of data structure operations. If you're not familiar","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":9568,"byte_end":9635,"line_start":171,"line_end":171,"column_start":1,"column_end":68}},{"value":"/ with big O notation, here's a quick cheat sheet:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":9636,"byte_end":9688,"line_start":172,"line_end":172,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":9689,"byte_end":9692,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ *O(1)* means an operation runs in constant time: it will take the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":9693,"byte_end":9762,"line_start":174,"line_end":174,"column_start":1,"column_end":70}},{"value":"/ same time to complete regardless of the size of the data","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":9763,"byte_end":9823,"line_start":175,"line_end":175,"column_start":1,"column_end":61}},{"value":"/ structure.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":9824,"byte_end":9838,"line_start":176,"line_end":176,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":9839,"byte_end":9842,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ *O(n)* means an operation runs in linear time: if you double the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":9843,"byte_end":9911,"line_start":178,"line_end":178,"column_start":1,"column_end":69}},{"value":"/ size of your data structure, the operation will take twice as long","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":9912,"byte_end":9982,"line_start":179,"line_end":179,"column_start":1,"column_end":71}},{"value":"/ to complete; if you quadruple the size, it will take four times as","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":9983,"byte_end":10053,"line_start":180,"line_end":180,"column_start":1,"column_end":71}},{"value":"/ long, etc.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":10054,"byte_end":10068,"line_start":181,"line_end":181,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":10069,"byte_end":10072,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ *O(log n)* means an operation runs in logarithmic time: for","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":10073,"byte_end":10136,"line_start":183,"line_end":183,"column_start":1,"column_end":64}},{"value":"/ *log<sub>2</sub>*, if you double the size of your data structure,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":10137,"byte_end":10206,"line_start":184,"line_end":184,"column_start":1,"column_end":70}},{"value":"/ the operation will take one step longer to complete; if you","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":10207,"byte_end":10270,"line_start":185,"line_end":185,"column_start":1,"column_end":64}},{"value":"/ quadruple the size, it will need two steps more; and so on.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":10271,"byte_end":10334,"line_start":186,"line_end":186,"column_start":1,"column_end":64}},{"value":"/ However, the data structures in this library generally run in","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":10335,"byte_end":10400,"line_start":187,"line_end":187,"column_start":1,"column_end":66}},{"value":"/ *log<sub>64</sub>* time, meaning you have to make your data","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":10401,"byte_end":10464,"line_start":188,"line_end":188,"column_start":1,"column_end":64}},{"value":"/ structure 64 times bigger to need one extra step, and 4096 times","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":10465,"byte_end":10533,"line_start":189,"line_end":189,"column_start":1,"column_end":69}},{"value":"/ bigger to need two steps. This means that, while they still count","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":10534,"byte_end":10603,"line_start":190,"line_end":190,"column_start":1,"column_end":70}},{"value":"/ as O(log n), operations on all but really large data sets will run","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":10604,"byte_end":10674,"line_start":191,"line_end":191,"column_start":1,"column_end":71}},{"value":"/ at near enough to O(1) that you won't usually notice.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":10675,"byte_end":10732,"line_start":192,"line_end":192,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":10733,"byte_end":10736,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ *O(n log n)* is the most expensive operation you'll see in this","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":10737,"byte_end":10804,"line_start":194,"line_end":194,"column_start":1,"column_end":68}},{"value":"/ library: it means that for every one of the *n* elements in your","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":10805,"byte_end":10873,"line_start":195,"line_end":195,"column_start":1,"column_end":69}},{"value":"/ data structure, you have to perform *log n* operations. In our","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":10874,"byte_end":10940,"line_start":196,"line_end":196,"column_start":1,"column_end":67}},{"value":"/ case, as noted above, this is often close enough to O(n) that it's","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":10941,"byte_end":11011,"line_start":197,"line_end":197,"column_start":1,"column_end":71}},{"value":"/ not usually as bad as it sounds, but even O(n) isn't cheap and the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":11012,"byte_end":11082,"line_start":198,"line_end":198,"column_start":1,"column_end":71}},{"value":"/ cost still increases logarithmically, if slowly, as the size of","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":11083,"byte_end":11150,"line_start":199,"line_end":199,"column_start":1,"column_end":68}},{"value":"/ your data increases. O(n log n) basically means \"are you sure you","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":11151,"byte_end":11220,"line_start":200,"line_end":200,"column_start":1,"column_end":70}},{"value":"/ need to do this?\"","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":11221,"byte_end":11242,"line_start":201,"line_end":201,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":11243,"byte_end":11246,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ *O(1)** means 'amortised O(1),' which means that an operation","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":11247,"byte_end":11312,"line_start":203,"line_end":203,"column_start":1,"column_end":66}},{"value":"/ usually runs in constant time but will occasionally be more","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":11313,"byte_end":11376,"line_start":204,"line_end":204,"column_start":1,"column_end":64}},{"value":"/ expensive: for instance,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":11377,"byte_end":11405,"line_start":205,"line_end":205,"column_start":1,"column_end":29}},{"value":"/ [`Vector::push_back`][vector::Vector::push_back], if called in","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":11406,"byte_end":11472,"line_start":206,"line_end":206,"column_start":1,"column_end":67}},{"value":"/ sequence, will be O(1) most of the time but every 64th time it","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":11473,"byte_end":11539,"line_start":207,"line_end":207,"column_start":1,"column_end":67}},{"value":"/ will be O(log n), as it fills up its tail chunk and needs to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":11540,"byte_end":11604,"line_start":208,"line_end":208,"column_start":1,"column_end":65}},{"value":"/ insert it into the tree. Please note that the O(1) with the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":11605,"byte_end":11668,"line_start":209,"line_end":209,"column_start":1,"column_end":64}},{"value":"/ asterisk attached is not a common notation; it's just a convention","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":11669,"byte_end":11739,"line_start":210,"line_end":210,"column_start":1,"column_end":71}},{"value":"/ I've used in these docs to save myself from having to type","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":11740,"byte_end":11802,"line_start":211,"line_end":211,"column_start":1,"column_end":63}},{"value":"/ 'amortised' everywhere.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":11803,"byte_end":11830,"line_start":212,"line_end":212,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":11831,"byte_end":11834,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ ### Lists","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":11835,"byte_end":11848,"line_start":214,"line_end":214,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":11849,"byte_end":11852,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ Lists are sequences of single elements which maintain the order in","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":11853,"byte_end":11923,"line_start":216,"line_end":216,"column_start":1,"column_end":71}},{"value":"/ which you inserted them. The only list in this library is","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":11924,"byte_end":11985,"line_start":217,"line_end":217,"column_start":1,"column_end":62}},{"value":"/ [`Vector`][vector::Vector], which offers the best all round","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":11986,"byte_end":12049,"line_start":218,"line_end":218,"column_start":1,"column_end":64}},{"value":"/ performance characteristics: it's pretty good at everything, even","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":12050,"byte_end":12119,"line_start":219,"line_end":219,"column_start":1,"column_end":70}},{"value":"/ if there's always another kind of list that's better at something.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":12120,"byte_end":12190,"line_start":220,"line_end":220,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":12191,"byte_end":12194,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/ | Type | Algorithm | Constraints | Order | Push | Pop | Split | Append | Lookup |","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":12195,"byte_end":12280,"line_start":222,"line_end":222,"column_start":1,"column_end":86}},{"value":"/ | --- | --- | --- | --- | --- | --- | --- | --- | --- |","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":12281,"byte_end":12340,"line_start":223,"line_end":223,"column_start":1,"column_end":60}},{"value":"/ | [`Vector<A>`][vector::Vector] | [RRB tree][rrb-tree] | [`Clone`][std::clone::Clone] | insertion | O(1)\\* | O(1)\\* | O(log n) | O(log n) | O(log n) |","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":12341,"byte_end":12495,"line_start":224,"line_end":224,"column_start":1,"column_end":155}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":12496,"byte_end":12499,"line_start":225,"line_end":225,"column_start":1,"column_end":4}},{"value":"/ ### Maps","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":12500,"byte_end":12512,"line_start":226,"line_end":226,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":12513,"byte_end":12516,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ Maps are mappings of keys to values, where the most common read","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":12517,"byte_end":12584,"line_start":228,"line_end":228,"column_start":1,"column_end":68}},{"value":"/ operation is to find the value associated with a given key. Maps","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":12585,"byte_end":12653,"line_start":229,"line_end":229,"column_start":1,"column_end":69}},{"value":"/ may or may not have a defined order. Any given key can only occur","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":12654,"byte_end":12723,"line_start":230,"line_end":230,"column_start":1,"column_end":70}},{"value":"/ once inside a map, and setting a key to a different value will","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":12724,"byte_end":12790,"line_start":231,"line_end":231,"column_start":1,"column_end":67}},{"value":"/ overwrite the previous value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":12791,"byte_end":12824,"line_start":232,"line_end":232,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":12825,"byte_end":12828,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ | Type | Algorithm | Key Constraints | Order | Insert | Remove | Lookup |","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":12829,"byte_end":12906,"line_start":234,"line_end":234,"column_start":1,"column_end":78}},{"value":"/ | --- | --- | --- | --- | --- | --- | --- |","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":12907,"byte_end":12954,"line_start":235,"line_end":235,"column_start":1,"column_end":48}},{"value":"/ | [`HashMap<K, V>`][hashmap::HashMap] | [HAMT][hamt] | [`Clone`][std::clone::Clone] + [`Hash`][std::hash::Hash] + [`Eq`][std::cmp::Eq] | undefined | O(log n) | O(log n) | O(log n) |","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":12955,"byte_end":13140,"line_start":236,"line_end":236,"column_start":1,"column_end":186}},{"value":"/ | [`OrdMap<K, V>`][ordmap::OrdMap] | [B-tree][b-tree] | [`Clone`][std::clone::Clone] + [`Ord`][std::cmp::Ord] | sorted | O(log n) | O(log n) | O(log n) |","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":13141,"byte_end":13298,"line_start":237,"line_end":237,"column_start":1,"column_end":158}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":13299,"byte_end":13302,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ ### Sets","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":13303,"byte_end":13315,"line_start":239,"line_end":239,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":13316,"byte_end":13319,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ Sets are collections of unique values, and may or may not have a","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":13320,"byte_end":13388,"line_start":241,"line_end":241,"column_start":1,"column_end":69}},{"value":"/ defined order. Their crucial property is that any given value can","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":13389,"byte_end":13458,"line_start":242,"line_end":242,"column_start":1,"column_end":70}},{"value":"/ only exist once in a given set.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":13459,"byte_end":13494,"line_start":243,"line_end":243,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":13495,"byte_end":13498,"line_start":244,"line_end":244,"column_start":1,"column_end":4}},{"value":"/ | Type | Algorithm | Constraints | Order | Insert | Remove | Lookup |","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":13499,"byte_end":13572,"line_start":245,"line_end":245,"column_start":1,"column_end":74}},{"value":"/ | --- | --- | --- | --- | --- | --- | --- |","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":13573,"byte_end":13620,"line_start":246,"line_end":246,"column_start":1,"column_end":48}},{"value":"/ | [`HashSet<A>`][hashset::HashSet] | [HAMT][hamt] | [`Clone`][std::clone::Clone] + [`Hash`][std::hash::Hash] + [`Eq`][std::cmp::Eq] | undefined | O(log n) | O(log n) | O(log n) |","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":13621,"byte_end":13803,"line_start":247,"line_end":247,"column_start":1,"column_end":183}},{"value":"/ | [`OrdSet<A>`][ordset::OrdSet] | [B-tree][b-tree] | [`Clone`][std::clone::Clone] + [`Ord`][std::cmp::Ord] | sorted | O(log n) | O(log n) | O(log n) |","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":13804,"byte_end":13958,"line_start":248,"line_end":248,"column_start":1,"column_end":155}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":13959,"byte_end":13962,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ ## In-place Mutation","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":13963,"byte_end":13987,"line_start":250,"line_end":250,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":13988,"byte_end":13991,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ All of these data structures support in-place copy-on-write","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":13992,"byte_end":14055,"line_start":252,"line_end":252,"column_start":1,"column_end":64}},{"value":"/ mutation, which means that if you're the sole user of a data","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":14056,"byte_end":14120,"line_start":253,"line_end":253,"column_start":1,"column_end":65}},{"value":"/ structure, you can update it in place without taking the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":14121,"byte_end":14181,"line_start":254,"line_end":254,"column_start":1,"column_end":61}},{"value":"/ performance hit of making a copy of the data structure before","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":14182,"byte_end":14247,"line_start":255,"line_end":255,"column_start":1,"column_end":66}},{"value":"/ modifying it (this is about an order of magnitude faster than","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":14248,"byte_end":14313,"line_start":256,"line_end":256,"column_start":1,"column_end":66}},{"value":"/ immutable operations, almost as fast as","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":14314,"byte_end":14357,"line_start":257,"line_end":257,"column_start":1,"column_end":44}},{"value":"/ [`std::collections`][std::collections]'s mutable data structures).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":14358,"byte_end":14428,"line_start":258,"line_end":258,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":14429,"byte_end":14432,"line_start":259,"line_end":259,"column_start":1,"column_end":4}},{"value":"/ Thanks to [`Rc`][std::rc::Rc]'s reference counting, we are able to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":14433,"byte_end":14503,"line_start":260,"line_end":260,"column_start":1,"column_end":71}},{"value":"/ determine whether a node in a data structure is being shared with","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":14504,"byte_end":14573,"line_start":261,"line_end":261,"column_start":1,"column_end":70}},{"value":"/ other data structures, or whether it's safe to mutate it in place.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":14574,"byte_end":14644,"line_start":262,"line_end":262,"column_start":1,"column_end":71}},{"value":"/ When it's shared, we'll automatically make a copy of the node","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":14645,"byte_end":14710,"line_start":263,"line_end":263,"column_start":1,"column_end":66}},{"value":"/ before modifying it. The consequence of this is that cloning a","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":14711,"byte_end":14777,"line_start":264,"line_end":264,"column_start":1,"column_end":67}},{"value":"/ data structure becomes a lazy operation: the initial clone is","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":14778,"byte_end":14843,"line_start":265,"line_end":265,"column_start":1,"column_end":66}},{"value":"/ instant, and as you modify the cloned data structure it will clone","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":14844,"byte_end":14914,"line_start":266,"line_end":266,"column_start":1,"column_end":71}},{"value":"/ chunks only where you change them, so that if you change the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":14915,"byte_end":14979,"line_start":267,"line_end":267,"column_start":1,"column_end":65}},{"value":"/ entire thing you will eventually have performed a full clone.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":14980,"byte_end":15045,"line_start":268,"line_end":268,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":15046,"byte_end":15049,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/ This also gives us a couple of other optimisations for free:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":15050,"byte_end":15114,"line_start":270,"line_end":270,"column_start":1,"column_end":65}},{"value":"/ implementations of immutable data structures in other languages","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":15115,"byte_end":15182,"line_start":271,"line_end":271,"column_start":1,"column_end":68}},{"value":"/ often have the idea of local mutation, like Clojure's transients","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":15183,"byte_end":15251,"line_start":272,"line_end":272,"column_start":1,"column_end":69}},{"value":"/ or Haskell's `ST` monad - a managed scope where you can treat an","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":15252,"byte_end":15320,"line_start":273,"line_end":273,"column_start":1,"column_end":69}},{"value":"/ immutable data structure like a mutable one, gaining a","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":15321,"byte_end":15379,"line_start":274,"line_end":274,"column_start":1,"column_end":59}},{"value":"/ considerable amount of performance because you no longer need to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":15380,"byte_end":15448,"line_start":275,"line_end":275,"column_start":1,"column_end":69}},{"value":"/ copy your changed nodes for every operation, just the first time","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":15449,"byte_end":15517,"line_start":276,"line_end":276,"column_start":1,"column_end":69}},{"value":"/ you hit a node that's sharing structure. In Rust, we don't need to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":15518,"byte_end":15588,"line_start":277,"line_end":277,"column_start":1,"column_end":71}},{"value":"/ think about this kind of managed scope, it's all taken care of","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":15589,"byte_end":15655,"line_start":278,"line_end":278,"column_start":1,"column_end":67}},{"value":"/ behind the scenes because of our low level access to the garbage","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":15656,"byte_end":15724,"line_start":279,"line_end":279,"column_start":1,"column_end":69}},{"value":"/ collector (which, in our case, is just a simple","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":15725,"byte_end":15776,"line_start":280,"line_end":280,"column_start":1,"column_end":52}},{"value":"/ [`Rc`][std::rc::Rc]).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":15777,"byte_end":15802,"line_start":281,"line_end":281,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":15803,"byte_end":15806,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"/ ## Thread Safety","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":15807,"byte_end":15827,"line_start":283,"line_end":283,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":15828,"byte_end":15831,"line_start":284,"line_end":284,"column_start":1,"column_end":4}},{"value":"/ The data structures in the `im` crate are thread safe, through","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":15832,"byte_end":15898,"line_start":285,"line_end":285,"column_start":1,"column_end":67}},{"value":"/ [`Arc`][std::sync::Arc]. This comes with a slight performance impact, so","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":15899,"byte_end":15975,"line_start":286,"line_end":286,"column_start":1,"column_end":77}},{"value":"/ that if you prioritise speed over thread safety, you may want to use the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":15976,"byte_end":16052,"line_start":287,"line_end":287,"column_start":1,"column_end":77}},{"value":"/ `im-rc` crate instead, which is identical to `im` except that it uses","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":16053,"byte_end":16126,"line_start":288,"line_end":288,"column_start":1,"column_end":74}},{"value":"/ [`Rc`][std::rc::Rc] instead of [`Arc`][std::sync::Arc], implying that the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":16127,"byte_end":16204,"line_start":289,"line_end":289,"column_start":1,"column_end":78}},{"value":"/ data structures in `im-rc` do not implement [`Send`][std::marker::Send] and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":16205,"byte_end":16284,"line_start":290,"line_end":290,"column_start":1,"column_end":80}},{"value":"/ [`Sync`][std::marker::Sync]. This yields approximately a 20-25% increase in","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":16285,"byte_end":16364,"line_start":291,"line_end":291,"column_start":1,"column_end":80}},{"value":"/ general performance.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":16365,"byte_end":16389,"line_start":292,"line_end":292,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":16390,"byte_end":16393,"line_start":293,"line_end":293,"column_start":1,"column_end":4}},{"value":"/ ## Feature Flags","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":16394,"byte_end":16414,"line_start":294,"line_end":294,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":16415,"byte_end":16418,"line_start":295,"line_end":295,"column_start":1,"column_end":4}},{"value":"/ `im` comes with optional support for the following crates through Cargo","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":16419,"byte_end":16494,"line_start":296,"line_end":296,"column_start":1,"column_end":76}},{"value":"/ feature flags. You can enable them in your `Cargo.toml` file like this:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":16495,"byte_end":16570,"line_start":297,"line_end":297,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":16571,"byte_end":16574,"line_start":298,"line_end":298,"column_start":1,"column_end":4}},{"value":"/ ```no_compile","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":16575,"byte_end":16592,"line_start":299,"line_end":299,"column_start":1,"column_end":18}},{"value":"/ [dependencies]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":16593,"byte_end":16611,"line_start":300,"line_end":300,"column_start":1,"column_end":19}},{"value":"/ im = { version = \"*\", features = [\"proptest\", \"serde\"] }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":16612,"byte_end":16672,"line_start":301,"line_end":301,"column_start":1,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":16673,"byte_end":16680,"line_start":302,"line_end":302,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":16681,"byte_end":16684,"line_start":303,"line_end":303,"column_start":1,"column_end":4}},{"value":"/ | Feature | Description |","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":16685,"byte_end":16714,"line_start":304,"line_end":304,"column_start":1,"column_end":30}},{"value":"/ | ------- | ----------- |","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":16715,"byte_end":16744,"line_start":305,"line_end":305,"column_start":1,"column_end":30}},{"value":"/ | [`pool`](https://crates.io/crates/refpool) | Constructors and pool types for [`refpool`](https://crates.io/crates/refpool) memory pools (only available in `im-rc`) |","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":16745,"byte_end":16916,"line_start":306,"line_end":306,"column_start":1,"column_end":172}},{"value":"/ | [`proptest`](https://crates.io/crates/proptest) | Strategies for all `im` datatypes under a `proptest` namespace, eg. `im::vector::proptest::vector()` |","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":16917,"byte_end":17075,"line_start":307,"line_end":307,"column_start":1,"column_end":159}},{"value":"/ | [`quickcheck`](https://crates.io/crates/quickcheck) | [`quickcheck::Arbitrary`](https://docs.rs/quickcheck/latest/quickcheck/trait.Arbitrary.html) implementations for all `im` datatypes (not available in `im-rc`) |","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":17076,"byte_end":17296,"line_start":308,"line_end":308,"column_start":1,"column_end":221}},{"value":"/ | [`rayon`](https://crates.io/crates/rayon) | parallel iterator implementations for [`Vector`][vector::Vector] (not available in `im-rc`) |","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":17297,"byte_end":17440,"line_start":309,"line_end":309,"column_start":1,"column_end":144}},{"value":"/ | [`serde`](https://crates.io/crates/serde) | [`Serialize`](https://docs.rs/serde/latest/serde/trait.Serialize.html) and [`Deserialize`](https://docs.rs/serde/latest/serde/trait.Deserialize.html) implementations for all `im` datatypes |","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":17441,"byte_end":17681,"line_start":310,"line_end":310,"column_start":1,"column_end":241}},{"value":"/ | [`arbitrary`](https://crates.io/crates/arbitrary/) | [`arbitrary::Arbitrary`](https://docs.rs/arbitrary/latest/arbitrary/trait.Arbitrary.html) implementations for all `im` datatypes |","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":17682,"byte_end":17871,"line_start":311,"line_end":311,"column_start":1,"column_end":190}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":17872,"byte_end":17875,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"/ [std::collections]: https://doc.rust-lang.org/std/collections/index.html","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":17876,"byte_end":17952,"line_start":313,"line_end":313,"column_start":1,"column_end":77}},{"value":"/ [std::collections::VecDeque]: https://doc.rust-lang.org/std/collections/struct.VecDeque.html","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":17953,"byte_end":18049,"line_start":314,"line_end":314,"column_start":1,"column_end":97}},{"value":"/ [std::vec::Vec]: https://doc.rust-lang.org/std/vec/struct.Vec.html","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":18050,"byte_end":18120,"line_start":315,"line_end":315,"column_start":1,"column_end":71}},{"value":"/ [std::string::String]: https://doc.rust-lang.org/std/string/struct.String.html","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":18121,"byte_end":18203,"line_start":316,"line_end":316,"column_start":1,"column_end":83}},{"value":"/ [std::rc::Rc]: https://doc.rust-lang.org/std/rc/struct.Rc.html","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":18204,"byte_end":18270,"line_start":317,"line_end":317,"column_start":1,"column_end":67}},{"value":"/ [std::sync::Arc]: https://doc.rust-lang.org/std/sync/struct.Arc.html","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":18271,"byte_end":18343,"line_start":318,"line_end":318,"column_start":1,"column_end":73}},{"value":"/ [std::cmp::Eq]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":18344,"byte_end":18411,"line_start":319,"line_end":319,"column_start":1,"column_end":68}},{"value":"/ [std::cmp::Ord]: https://doc.rust-lang.org/std/cmp/trait.Ord.html","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":18412,"byte_end":18481,"line_start":320,"line_end":320,"column_start":1,"column_end":70}},{"value":"/ [std::clone::Clone]: https://doc.rust-lang.org/std/clone/trait.Clone.html","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":18482,"byte_end":18559,"line_start":321,"line_end":321,"column_start":1,"column_end":78}},{"value":"/ [std::clone::Clone::clone]: https://doc.rust-lang.org/std/clone/trait.Clone.html#tymethod.clone","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":18560,"byte_end":18659,"line_start":322,"line_end":322,"column_start":1,"column_end":100}},{"value":"/ [std::marker::Copy]: https://doc.rust-lang.org/std/marker/trait.Copy.html","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":18660,"byte_end":18737,"line_start":323,"line_end":323,"column_start":1,"column_end":78}},{"value":"/ [std::hash::Hash]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":18738,"byte_end":18811,"line_start":324,"line_end":324,"column_start":1,"column_end":74}},{"value":"/ [std::marker::Send]: https://doc.rust-lang.org/std/marker/trait.Send.html","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":18812,"byte_end":18889,"line_start":325,"line_end":325,"column_start":1,"column_end":78}},{"value":"/ [std::marker::Sync]: https://doc.rust-lang.org/std/marker/trait.Sync.html","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":18890,"byte_end":18967,"line_start":326,"line_end":326,"column_start":1,"column_end":78}},{"value":"/ [hashmap::HashMap]: ./struct.HashMap.html","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":18968,"byte_end":19013,"line_start":327,"line_end":327,"column_start":1,"column_end":46}},{"value":"/ [hashset::HashSet]: ./struct.HashSet.html","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":19014,"byte_end":19059,"line_start":328,"line_end":328,"column_start":1,"column_end":46}},{"value":"/ [ordmap::OrdMap]: ./struct.OrdMap.html","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":19060,"byte_end":19102,"line_start":329,"line_end":329,"column_start":1,"column_end":43}},{"value":"/ [ordset::OrdSet]: ./struct.OrdSet.html","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":19103,"byte_end":19145,"line_start":330,"line_end":330,"column_start":1,"column_end":43}},{"value":"/ [vector::Vector]: ./struct.Vector.html","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":19146,"byte_end":19188,"line_start":331,"line_end":331,"column_start":1,"column_end":43}},{"value":"/ [vector::Vector::push_back]: ./vector/enum.Vector.html#method.push_back","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":19189,"byte_end":19264,"line_start":332,"line_end":332,"column_start":1,"column_end":76}},{"value":"/ [rrb-tree]: https://infoscience.epfl.ch/record/213452/files/rrbvector.pdf","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":19265,"byte_end":19342,"line_start":333,"line_end":333,"column_start":1,"column_end":78}},{"value":"/ [hamt]: https://en.wikipedia.org/wiki/Hash_array_mapped_trie","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":19343,"byte_end":19407,"line_start":334,"line_end":334,"column_start":1,"column_end":65}},{"value":"/ [b-tree]: https://en.wikipedia.org/wiki/B-tree","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":19408,"byte_end":19458,"line_start":335,"line_end":335,"column_start":1,"column_end":51}},{"value":"/ [cons-list]: https://en.wikipedia.org/wiki/Cons#Lists","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":19459,"byte_end":19516,"line_start":336,"line_end":336,"column_start":1,"column_end":58}},{"value":"forbid(rust_2018_idioms)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":19518,"byte_end":19546,"line_start":338,"line_end":338,"column_start":1,"column_end":29}},{"value":"deny(unsafe_code, nonstandard_style)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":19547,"byte_end":19587,"line_start":339,"line_end":339,"column_start":1,"column_end":41}},{"value":"warn(unreachable_pub, missing_docs)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":19588,"byte_end":19627,"line_start":340,"line_end":340,"column_start":1,"column_end":40}}]},{"kind":"Trait","id":{"krate":0,"index":57},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/btree.rs","byte_start":26121,"byte_end":26131,"line_start":22,"line_end":22,"column_start":11,"column_end":21},"name":"BTreeValue","qualname":"::nodes::btree::BTreeValue","value":"BTreeValue","parent":null,"children":[{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":65}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":58},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/btree.rs","byte_start":26143,"byte_end":26146,"line_start":23,"line_end":23,"column_start":10,"column_end":13},"name":"Key","qualname":"::nodes::btree::BTreeValue::Key","value":"type Key;","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/btree.rs","byte_start":26155,"byte_end":26161,"line_start":24,"line_end":24,"column_start":8,"column_end":14},"name":"ptr_eq","qualname":"::nodes::btree::BTreeValue::ptr_eq","value":"fn ptr_eq(&Self, &Self) -> bool","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/btree.rs","byte_start":26199,"byte_end":26209,"line_start":25,"line_end":25,"column_start":8,"column_end":18},"name":"search_key","qualname":"::nodes::btree::BTreeValue::search_key","value":"fn search_key<BK>(&[Self], &BK) -> Result<usize, usize> where BK: Ord +\n?Sized, Self: Sized, Self::Key: Borrow<BK>","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/btree.rs","byte_start":26359,"byte_end":26371,"line_start":30,"line_end":30,"column_start":8,"column_end":20},"name":"search_value","qualname":"::nodes::btree::BTreeValue::search_value","value":"fn search_value(&[Self], &Self) -> Result<usize, usize> where Self: Sized","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/btree.rs","byte_start":26464,"byte_end":26472,"line_start":33,"line_end":33,"column_start":8,"column_end":16},"name":"cmp_keys","qualname":"::nodes::btree::BTreeValue::cmp_keys","value":"fn cmp_keys<BK>(&Self, &BK) -> Ordering where BK: Ord + ?Sized,\nSelf::Key: Borrow<BK>","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/btree.rs","byte_start":26582,"byte_end":26592,"line_start":37,"line_end":37,"column_start":8,"column_end":18},"name":"cmp_values","qualname":"::nodes::btree::BTreeValue::cmp_values","value":"fn cmp_values(&Self, &Self) -> Ordering","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":205},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/btree.rs","byte_start":58359,"byte_end":58363,"line_start":933,"line_end":933,"column_start":12,"column_end":16},"name":"Iter","qualname":"::nodes::btree::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210}],"decl_id":null,"docs":" An iterator over an ordered set.\n","sig":null,"attributes":[{"value":"/ An iterator over an ordered set.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/btree.rs","byte_start":58311,"byte_end":58347,"line_start":932,"line_end":932,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/btree.rs","byte_start":63647,"byte_end":63651,"line_start":1075,"line_end":1075,"column_start":8,"column_end":12},"name":"next","qualname":"<Iter as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8476},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/btree.rs","byte_start":64161,"byte_end":64170,"line_start":1090,"line_end":1090,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Iter as std::iter::Iterator>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8477},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/btree.rs","byte_start":64344,"byte_end":64353,"line_start":1097,"line_end":1097,"column_start":8,"column_end":17},"name":"next_back","qualname":"<Iter as std::iter::DoubleEndedIterator>::next_back","value":"fn next_back(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8323},"children":[],"decl_id":{"krate":2,"index":8324},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":238},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/btree.rs","byte_start":65001,"byte_end":65014,"line_start":1121,"line_end":1121,"column_start":12,"column_end":25},"name":"ConsumingIter","qualname":"::nodes::btree::ConsumingIter","value":"ConsumingIter {  }","parent":null,"children":[{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244}],"decl_id":null,"docs":" A consuming iterator over an ordered set.\n","sig":null,"attributes":[{"value":"/ A consuming iterator over an ordered set.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/btree.rs","byte_start":64944,"byte_end":64989,"line_start":1120,"line_end":1120,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/btree.rs","byte_start":66896,"byte_end":66900,"line_start":1181,"line_end":1181,"column_start":8,"column_end":12},"name":"next","qualname":"<ConsumingIter<A> as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8476},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/btree.rs","byte_start":67815,"byte_end":67824,"line_start":1206,"line_end":1206,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<ConsumingIter<A> as std::iter::Iterator>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8477},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/btree.rs","byte_start":68007,"byte_end":68016,"line_start":1215,"line_end":1215,"column_start":8,"column_end":17},"name":"next_back","qualname":"<ConsumingIter<A> as std::iter::DoubleEndedIterator>::next_back","value":"fn next_back(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8323},"children":[],"decl_id":{"krate":2,"index":8324},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":263},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/btree.rs","byte_start":69089,"byte_end":69097,"line_start":1246,"line_end":1246,"column_start":12,"column_end":20},"name":"DiffIter","qualname":"::nodes::btree::DiffIter","value":"DiffIter {  }","parent":null,"children":[{"krate":0,"index":266},{"krate":0,"index":267}],"decl_id":null,"docs":" An iterator over the differences between two ordered sets.\n","sig":null,"attributes":[{"value":"/ An iterator over the differences between two ordered sets.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/btree.rs","byte_start":69015,"byte_end":69077,"line_start":1245,"line_end":1245,"column_start":1,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3569},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/btree.rs","byte_start":69357,"byte_end":69360,"line_start":1255,"line_end":1255,"column_start":5,"column_end":8},"name":"Add","qualname":"::nodes::btree::DiffItem::Add","value":"DiffItem::Add(&'a A)","parent":{"krate":0,"index":3566},"children":[],"decl_id":null,"docs":" This value has been added to the new set.\n","sig":null,"attributes":[{"value":"/ This value has been added to the new set.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/btree.rs","byte_start":69307,"byte_end":69352,"line_start":1254,"line_end":1254,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":3571},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/btree.rs","byte_start":69361,"byte_end":69366,"line_start":1255,"line_end":1255,"column_start":9,"column_end":14},"name":"0","qualname":"::nodes::btree::DiffItem::Add::0","value":"&'a A","parent":{"krate":0,"index":3569},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3572},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/btree.rs","byte_start":69431,"byte_end":69437,"line_start":1257,"line_end":1257,"column_start":5,"column_end":11},"name":"Update","qualname":"::nodes::btree::DiffItem::Update","value":"DiffItem::Update { old, new }","parent":{"krate":0,"index":3566},"children":[],"decl_id":null,"docs":" This value has been changed between the two sets.\n","sig":null,"attributes":[{"value":"/ This value has been changed between the two sets.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/btree.rs","byte_start":69373,"byte_end":69426,"line_start":1256,"line_end":1256,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":3573},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/btree.rs","byte_start":69475,"byte_end":69478,"line_start":1259,"line_end":1259,"column_start":9,"column_end":12},"name":"old","qualname":"::nodes::btree::DiffItem::Update::old","value":"&'a A","parent":{"krate":0,"index":3572},"children":[],"decl_id":null,"docs":" The old value.\n","sig":null,"attributes":[{"value":"/ The old value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/btree.rs","byte_start":69448,"byte_end":69466,"line_start":1258,"line_end":1258,"column_start":9,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":3574},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/btree.rs","byte_start":69522,"byte_end":69525,"line_start":1261,"line_end":1261,"column_start":9,"column_end":12},"name":"new","qualname":"::nodes::btree::DiffItem::Update::new","value":"&'a A","parent":{"krate":0,"index":3572},"children":[],"decl_id":null,"docs":" The new value.\n","sig":null,"attributes":[{"value":"/ The new value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/btree.rs","byte_start":69495,"byte_end":69513,"line_start":1260,"line_end":1260,"column_start":9,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3575},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/btree.rs","byte_start":69599,"byte_end":69605,"line_start":1264,"line_end":1264,"column_start":5,"column_end":11},"name":"Remove","qualname":"::nodes::btree::DiffItem::Remove","value":"DiffItem::Remove(&'a A)","parent":{"krate":0,"index":3566},"children":[],"decl_id":null,"docs":" This value has been removed from the new set.\n","sig":null,"attributes":[{"value":"/ This value has been removed from the new set.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/btree.rs","byte_start":69545,"byte_end":69594,"line_start":1263,"line_end":1263,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":3577},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/btree.rs","byte_start":69606,"byte_end":69611,"line_start":1264,"line_end":1264,"column_start":12,"column_end":17},"name":"0","qualname":"::nodes::btree::DiffItem::Remove::0","value":"&'a A","parent":{"krate":0,"index":3575},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3566},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/btree.rs","byte_start":69285,"byte_end":69293,"line_start":1253,"line_end":1253,"column_start":10,"column_end":18},"name":"DiffItem","qualname":"::nodes::btree::DiffItem","value":"enum DiffItem<'a, A> {\n    Add(&'a A),\n    Update {\n            old: &'a A,\n            new: &'a A,\n        },\n    Remove(&'a A),\n}","parent":null,"children":[{"krate":0,"index":3569},{"krate":0,"index":3572},{"krate":0,"index":3575}],"decl_id":null,"docs":" A description of a difference between two ordered sets.\n","sig":null,"attributes":[{"value":"/ A description of a difference between two ordered sets.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/btree.rs","byte_start":69184,"byte_end":69243,"line_start":1251,"line_end":1251,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/btree.rs","byte_start":70804,"byte_end":70808,"line_start":1310,"line_end":1310,"column_start":8,"column_end":12},"name":"next","qualname":"<DiffIter as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8476},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":376},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/hamt.rs","byte_start":75025,"byte_end":75034,"line_start":36,"line_end":36,"column_start":11,"column_end":20},"name":"HashValue","qualname":"::nodes::hamt::HashValue","value":"HashValue","parent":null,"children":[{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":379}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":377},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/hamt.rs","byte_start":75046,"byte_end":75049,"line_start":37,"line_end":37,"column_start":10,"column_end":13},"name":"Key","qualname":"::nodes::hamt::HashValue::Key","value":"type Key: Eq;","parent":{"krate":0,"index":376},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/hamt.rs","byte_start":75063,"byte_end":75074,"line_start":39,"line_end":39,"column_start":8,"column_end":19},"name":"extract_key","qualname":"::nodes::hamt::HashValue::extract_key","value":"fn extract_key(&Self) -> &Self::Key","parent":{"krate":0,"index":376},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/hamt.rs","byte_start":75104,"byte_end":75110,"line_start":40,"line_end":40,"column_start":8,"column_end":14},"name":"ptr_eq","qualname":"::nodes::hamt::HashValue::ptr_eq","value":"fn ptr_eq(&Self, &Self) -> bool","parent":{"krate":0,"index":376},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":761},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"map","qualname":"::ord::map","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","parent":null,"children":[{"krate":0,"index":762},{"krate":0,"index":765},{"krate":0,"index":768},{"krate":0,"index":771},{"krate":0,"index":772},{"krate":0,"index":773},{"krate":0,"index":775},{"krate":0,"index":776},{"krate":0,"index":778},{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":785},{"krate":0,"index":786},{"krate":0,"index":788},{"krate":0,"index":791},{"krate":0,"index":792},{"krate":0,"index":795},{"krate":0,"index":798},{"krate":0,"index":801},{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":808},{"krate":0,"index":811},{"krate":0,"index":814},{"krate":0,"index":817},{"krate":0,"index":820},{"krate":0,"index":821},{"krate":0,"index":824},{"krate":0,"index":827},{"krate":0,"index":830},{"krate":0,"index":833},{"krate":0,"index":834},{"krate":0,"index":837},{"krate":0,"index":840},{"krate":0,"index":841},{"krate":0,"index":844},{"krate":0,"index":847},{"krate":0,"index":850},{"krate":0,"index":853},{"krate":0,"index":854},{"krate":0,"index":3635},{"krate":0,"index":3640},{"krate":0,"index":3646},{"krate":0,"index":3650},{"krate":0,"index":867},{"krate":0,"index":873},{"krate":0,"index":882},{"krate":0,"index":923},{"krate":0,"index":1021},{"krate":0,"index":1031},{"krate":0,"index":1043},{"krate":0,"index":1049},{"krate":0,"index":1060},{"krate":0,"index":1066},{"krate":0,"index":1073},{"krate":0,"index":1077},{"krate":0,"index":1081},{"krate":0,"index":1084},{"krate":0,"index":1088},{"krate":0,"index":1092},{"krate":0,"index":1097},{"krate":0,"index":1101},{"krate":0,"index":1107},{"krate":0,"index":1112},{"krate":0,"index":1118},{"krate":0,"index":1125},{"krate":0,"index":1132},{"krate":0,"index":1138},{"krate":0,"index":1142},{"krate":0,"index":1147},{"krate":0,"index":1155},{"krate":0,"index":1161},{"krate":0,"index":1165},{"krate":0,"index":3654},{"krate":0,"index":3669},{"krate":0,"index":3673},{"krate":0,"index":3679},{"krate":0,"index":3683},{"krate":0,"index":3688},{"krate":0,"index":1170},{"krate":0,"index":1177},{"krate":0,"index":1182},{"krate":0,"index":1190},{"krate":0,"index":1196},{"krate":0,"index":1200},{"krate":0,"index":1205},{"krate":0,"index":1213},{"krate":0,"index":1219},{"krate":0,"index":1223},{"krate":0,"index":1230},{"krate":0,"index":1237},{"krate":0,"index":1243},{"krate":0,"index":1247},{"krate":0,"index":1257},{"krate":0,"index":1267},{"krate":0,"index":1273},{"krate":0,"index":1283},{"krate":0,"index":1289},{"krate":0,"index":1299},{"krate":0,"index":1305},{"krate":0,"index":1315},{"krate":0,"index":1320}],"decl_id":null,"docs":" An ordered map.","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/mod.rs","byte_start":149014,"byte_end":149026,"line_start":5,"line_end":5,"column_start":1,"column_end":13}},{"value":"/ An ordered map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":149270,"byte_end":149289,"line_start":5,"line_end":5,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":149290,"byte_end":149293,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ An immutable ordered map implemented as a [B-tree] [1].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":149294,"byte_end":149353,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":149354,"byte_end":149357,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Most operations on this type of map are O(log n). A","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":149358,"byte_end":149413,"line_start":9,"line_end":9,"column_start":1,"column_end":56}},{"value":"/ [`HashMap`][hashmap::HashMap] is usually a better choice for","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":149414,"byte_end":149478,"line_start":10,"line_end":10,"column_start":1,"column_end":65}},{"value":"/ performance, but the `OrdMap` has the advantage of only requiring","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":149479,"byte_end":149548,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/ an [`Ord`][std::cmp::Ord] constraint on the key, and of being","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":149549,"byte_end":149614,"line_start":12,"line_end":12,"column_start":1,"column_end":66}},{"value":"/ ordered, so that keys always come out from lowest to highest,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":149615,"byte_end":149680,"line_start":13,"line_end":13,"column_start":1,"column_end":66}},{"value":"/ where a [`HashMap`][hashmap::HashMap] has no guaranteed ordering.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":149681,"byte_end":149750,"line_start":14,"line_end":14,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":149751,"byte_end":149754,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [1]: https://en.wikipedia.org/wiki/B-tree","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":149755,"byte_end":149800,"line_start":16,"line_end":16,"column_start":1,"column_end":46}},{"value":"/ [hashmap::HashMap]: ../hashmap/struct.HashMap.html","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":149801,"byte_end":149855,"line_start":17,"line_end":17,"column_start":1,"column_end":55}},{"value":"/ [std::cmp::Ord]: https://doc.rust-lang.org/std/cmp/trait.Ord.html","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":149856,"byte_end":149925,"line_start":18,"line_end":18,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":858},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":151211,"byte_end":151217,"line_start":74,"line_end":74,"column_start":8,"column_end":14},"name":"ptr_eq","qualname":"<(K, V) as nodes::btree::BTreeValue>::ptr_eq","value":"fn ptr_eq(&Self, &Self) -> bool","parent":{"krate":0,"index":57},"children":[],"decl_id":{"krate":0,"index":59},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":859},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":151278,"byte_end":151288,"line_start":78,"line_end":78,"column_start":8,"column_end":18},"name":"search_key","qualname":"<(K, V) as nodes::btree::BTreeValue>::search_key","value":"fn search_key<BK>(&[Self], &BK) -> Result<usize, usize> where BK: Ord +\n?Sized, Self::Key: Borrow<BK>","parent":{"krate":0,"index":57},"children":[],"decl_id":{"krate":0,"index":60},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":862},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":151507,"byte_end":151519,"line_start":86,"line_end":86,"column_start":8,"column_end":20},"name":"search_value","qualname":"<(K, V) as nodes::btree::BTreeValue>::search_value","value":"fn search_value(&[Self], &Self) -> Result<usize, usize>","parent":{"krate":0,"index":57},"children":[],"decl_id":{"krate":0,"index":62},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":864},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":151648,"byte_end":151656,"line_start":90,"line_end":90,"column_start":8,"column_end":16},"name":"cmp_keys","qualname":"<(K, V) as nodes::btree::BTreeValue>::cmp_keys","value":"fn cmp_keys<BK>(&Self, &BK) -> Ordering where BK: Ord + ?Sized,\nSelf::Key: Borrow<BK>","parent":{"krate":0,"index":57},"children":[],"decl_id":{"krate":0,"index":63},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":866},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":151825,"byte_end":151835,"line_start":98,"line_end":98,"column_start":8,"column_end":18},"name":"cmp_values","qualname":"<(K, V) as nodes::btree::BTreeValue>::cmp_values","value":"fn cmp_values(&Self, &Self) -> Ordering","parent":{"krate":0,"index":57},"children":[],"decl_id":{"krate":0,"index":65},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3635},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":153174,"byte_end":153184,"line_start":151,"line_end":151,"column_start":11,"column_end":21},"name":"OrdMapPool","qualname":"::ord::map::OrdMapPool","value":"","parent":null,"children":[],"decl_id":null,"docs":" A memory pool for the appropriate node type.\n","sig":null,"attributes":[{"value":"/ A memory pool for the appropriate node type.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/util.rs","byte_start":147885,"byte_end":147933,"line_start":110,"line_end":110,"column_start":9,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":867},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":153823,"byte_end":153829,"line_start":166,"line_end":166,"column_start":12,"column_end":18},"name":"OrdMap","qualname":"::ord::map::OrdMap","value":"OrdMap {  }","parent":null,"children":[{"krate":0,"index":870},{"krate":0,"index":871},{"krate":0,"index":872}],"decl_id":null,"docs":" An ordered map.","sig":null,"attributes":[{"value":"/ An ordered map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":153208,"byte_end":153227,"line_start":153,"line_end":153,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":153228,"byte_end":153231,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ An immutable ordered map implemented as a B-tree.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":153232,"byte_end":153285,"line_start":155,"line_end":155,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":153286,"byte_end":153289,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ Most operations on this type of map are O(log n). A","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":153290,"byte_end":153345,"line_start":157,"line_end":157,"column_start":1,"column_end":56}},{"value":"/ [`HashMap`][hashmap::HashMap] is usually a better choice for","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":153346,"byte_end":153410,"line_start":158,"line_end":158,"column_start":1,"column_end":65}},{"value":"/ performance, but the `OrdMap` has the advantage of only requiring","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":153411,"byte_end":153480,"line_start":159,"line_end":159,"column_start":1,"column_end":70}},{"value":"/ an [`Ord`][std::cmp::Ord] constraint on the key, and of being","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":153481,"byte_end":153546,"line_start":160,"line_end":160,"column_start":1,"column_end":66}},{"value":"/ ordered, so that keys always come out from lowest to highest,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":153547,"byte_end":153612,"line_start":161,"line_end":161,"column_start":1,"column_end":66}},{"value":"/ where a [`HashMap`][hashmap::HashMap] has no guaranteed ordering.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":153613,"byte_end":153682,"line_start":162,"line_end":162,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":153683,"byte_end":153686,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ [hashmap::HashMap]: ../hashmap/struct.HashMap.html","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":153687,"byte_end":153741,"line_start":164,"line_end":164,"column_start":1,"column_end":55}},{"value":"/ [std::cmp::Ord]: https://doc.rust-lang.org/std/cmp/trait.Ord.html","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":153742,"byte_end":153811,"line_start":165,"line_end":165,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":876},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":154004,"byte_end":154007,"line_start":175,"line_end":175,"column_start":12,"column_end":15},"name":"new","qualname":"<OrdMap<K, V>>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct an empty map.\n","sig":null,"attributes":[{"value":"/ Construct an empty map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":153949,"byte_end":153976,"line_start":173,"line_end":173,"column_start":5,"column_end":32}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":153981,"byte_end":153992,"line_start":174,"line_end":174,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":877},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":154872,"byte_end":154876,"line_start":212,"line_end":212,"column_start":12,"column_end":16},"name":"unit","qualname":"<OrdMap<K, V>>::unit","value":"fn unit(K, V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a map with a single mapping.","sig":null,"attributes":[{"value":"/ Construct a map with a single mapping.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":154516,"byte_end":154558,"line_start":197,"line_end":197,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":154563,"byte_end":154566,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":154571,"byte_end":154585,"line_start":199,"line_end":199,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":154590,"byte_end":154593,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":154598,"byte_end":154605,"line_start":201,"line_end":201,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":154610,"byte_end":154645,"line_start":202,"line_end":202,"column_start":5,"column_end":40}},{"value":"/ # use im::ordmap::OrdMap;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":154650,"byte_end":154679,"line_start":203,"line_end":203,"column_start":5,"column_end":34}},{"value":"/ let map = OrdMap::unit(123, \"onetwothree\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":154684,"byte_end":154731,"line_start":204,"line_end":204,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":154736,"byte_end":154751,"line_start":205,"line_end":205,"column_start":5,"column_end":20}},{"value":"/   map.get(&123),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":154756,"byte_end":154776,"line_start":206,"line_end":206,"column_start":5,"column_end":25}},{"value":"/   Some(&\"onetwothree\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":154781,"byte_end":154807,"line_start":207,"line_end":207,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":154812,"byte_end":154818,"line_start":208,"line_end":208,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":154823,"byte_end":154830,"line_start":209,"line_end":209,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":154835,"byte_end":154844,"line_start":210,"line_end":210,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":154849,"byte_end":154860,"line_start":211,"line_end":211,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":878},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":155485,"byte_end":155493,"line_start":240,"line_end":240,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<OrdMap<K, V>>::is_empty","value":"fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test whether a map is empty.","sig":null,"attributes":[{"value":"/ Test whether a map is empty.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":155110,"byte_end":155142,"line_start":222,"line_end":222,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":155147,"byte_end":155150,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ Time: O(1)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":155155,"byte_end":155169,"line_start":224,"line_end":224,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":155174,"byte_end":155177,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":155182,"byte_end":155196,"line_start":226,"line_end":226,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":155201,"byte_end":155204,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":155209,"byte_end":155216,"line_start":228,"line_end":228,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":155221,"byte_end":155256,"line_start":229,"line_end":229,"column_start":5,"column_end":40}},{"value":"/ # use im::ordmap::OrdMap;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":155261,"byte_end":155290,"line_start":230,"line_end":230,"column_start":5,"column_end":34}},{"value":"/ assert!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":155295,"byte_end":155307,"line_start":231,"line_end":231,"column_start":5,"column_end":17}},{"value":"/   !ordmap!{1 => 2}.is_empty()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":155312,"byte_end":155345,"line_start":232,"line_end":232,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":155350,"byte_end":155356,"line_start":233,"line_end":233,"column_start":5,"column_end":11}},{"value":"/ assert!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":155361,"byte_end":155373,"line_start":234,"line_end":234,"column_start":5,"column_end":17}},{"value":"/   OrdMap::<i32, i32>::new().is_empty()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":155378,"byte_end":155420,"line_start":235,"line_end":235,"column_start":5,"column_end":47}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":155425,"byte_end":155431,"line_start":236,"line_end":236,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":155436,"byte_end":155443,"line_start":237,"line_end":237,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":155448,"byte_end":155457,"line_start":238,"line_end":238,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":155462,"byte_end":155473,"line_start":239,"line_end":239,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":879},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":155922,"byte_end":155928,"line_start":253,"line_end":253,"column_start":12,"column_end":18},"name":"ptr_eq","qualname":"<OrdMap<K, V>>::ptr_eq","value":"fn ptr_eq(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test whether two maps refer to the same content in memory.","sig":null,"attributes":[{"value":"/ Test whether two maps refer to the same content in memory.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":155546,"byte_end":155608,"line_start":244,"line_end":244,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":155613,"byte_end":155616,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ This is true if the two sides are references to the same map,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":155621,"byte_end":155686,"line_start":246,"line_end":246,"column_start":5,"column_end":70}},{"value":"/ or if the two maps refer to the same root node.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":155691,"byte_end":155742,"line_start":247,"line_end":247,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":155747,"byte_end":155750,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ This would return true if you're comparing a map to itself, or","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":155755,"byte_end":155821,"line_start":249,"line_end":249,"column_start":5,"column_end":71}},{"value":"/ if you're comparing a map to a fresh clone of itself.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":155826,"byte_end":155883,"line_start":250,"line_end":250,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":155888,"byte_end":155891,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ Time: O(1)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":155896,"byte_end":155910,"line_start":252,"line_end":252,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":880},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":156382,"byte_end":156385,"line_start":274,"line_end":274,"column_start":12,"column_end":15},"name":"len","qualname":"<OrdMap<K, V>>::len","value":"fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the size of a map.","sig":null,"attributes":[{"value":"/ Get the size of a map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":156049,"byte_end":156075,"line_start":257,"line_end":257,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":156080,"byte_end":156083,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ Time: O(1)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":156088,"byte_end":156102,"line_start":259,"line_end":259,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":156107,"byte_end":156110,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":156115,"byte_end":156129,"line_start":261,"line_end":261,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":156134,"byte_end":156137,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":156142,"byte_end":156149,"line_start":263,"line_end":263,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":156154,"byte_end":156189,"line_start":264,"line_end":264,"column_start":5,"column_end":40}},{"value":"/ # use im::ordmap::OrdMap;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":156194,"byte_end":156223,"line_start":265,"line_end":265,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(3, ordmap!{","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":156228,"byte_end":156254,"line_start":266,"line_end":266,"column_start":5,"column_end":31}},{"value":"/   1 => 11,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":156259,"byte_end":156273,"line_start":267,"line_end":267,"column_start":5,"column_end":19}},{"value":"/   2 => 22,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":156278,"byte_end":156292,"line_start":268,"line_end":268,"column_start":5,"column_end":19}},{"value":"/   3 => 33","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":156297,"byte_end":156310,"line_start":269,"line_end":269,"column_start":5,"column_end":18}},{"value":"/ }.len());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":156315,"byte_end":156328,"line_start":270,"line_end":270,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":156333,"byte_end":156340,"line_start":271,"line_end":271,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":156345,"byte_end":156354,"line_start":272,"line_end":272,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":156359,"byte_end":156370,"line_start":273,"line_end":273,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":881},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":157156,"byte_end":157161,"line_start":303,"line_end":303,"column_start":12,"column_end":17},"name":"clear","qualname":"<OrdMap<K, V>>::clear","value":"fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Discard all elements from the map.","sig":null,"attributes":[{"value":"/ Discard all elements from the map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":156731,"byte_end":156769,"line_start":287,"line_end":287,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":156774,"byte_end":156777,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ This leaves you with an empty map, and all elements that","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":156782,"byte_end":156842,"line_start":289,"line_end":289,"column_start":5,"column_end":65}},{"value":"/ were previously inside it are dropped.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":156847,"byte_end":156889,"line_start":290,"line_end":290,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":156894,"byte_end":156897,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ Time: O(n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":156902,"byte_end":156916,"line_start":292,"line_end":292,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":156921,"byte_end":156924,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":156929,"byte_end":156943,"line_start":294,"line_end":294,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":156948,"byte_end":156951,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":156956,"byte_end":156963,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":156968,"byte_end":157003,"line_start":297,"line_end":297,"column_start":5,"column_end":40}},{"value":"/ # use im::OrdMap;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":157008,"byte_end":157029,"line_start":298,"line_end":298,"column_start":5,"column_end":26}},{"value":"/ let mut map = ordmap![1=>1, 2=>2, 3=>3];","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":157034,"byte_end":157078,"line_start":299,"line_end":299,"column_start":5,"column_end":49}},{"value":"/ map.clear();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":157083,"byte_end":157099,"line_start":300,"line_end":300,"column_start":5,"column_end":21}},{"value":"/ assert!(map.is_empty());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":157104,"byte_end":157132,"line_start":301,"line_end":301,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":157137,"byte_end":157144,"line_start":302,"line_end":302,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":885},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":157768,"byte_end":157775,"line_start":332,"line_end":332,"column_start":12,"column_end":19},"name":"get_max","qualname":"<OrdMap<K, V>>::get_max","value":"fn get_max(&Self) -> Option<&(K, V)>","parent":null,"children":[],"decl_id":null,"docs":" Get the largest key in a map, along with its value. If the map\n is empty, return `None`.","sig":null,"attributes":[{"value":"/ Get the largest key in a map, along with its value. If the map","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":157355,"byte_end":157421,"line_start":315,"line_end":315,"column_start":5,"column_end":71}},{"value":"/ is empty, return `None`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":157426,"byte_end":157454,"line_start":316,"line_end":316,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":157459,"byte_end":157462,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":157467,"byte_end":157485,"line_start":318,"line_end":318,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":157490,"byte_end":157493,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":157498,"byte_end":157512,"line_start":320,"line_end":320,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":157517,"byte_end":157520,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":157525,"byte_end":157532,"line_start":322,"line_end":322,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":157537,"byte_end":157572,"line_start":323,"line_end":323,"column_start":5,"column_end":40}},{"value":"/ # use im::ordmap::OrdMap;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":157577,"byte_end":157606,"line_start":324,"line_end":324,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(Some(&(3, 33)), ordmap!{","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":157611,"byte_end":157650,"line_start":325,"line_end":325,"column_start":5,"column_end":44}},{"value":"/   1 => 11,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":157655,"byte_end":157669,"line_start":326,"line_end":326,"column_start":5,"column_end":19}},{"value":"/   2 => 22,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":157674,"byte_end":157688,"line_start":327,"line_end":327,"column_start":5,"column_end":19}},{"value":"/   3 => 33","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":157693,"byte_end":157706,"line_start":328,"line_end":328,"column_start":5,"column_end":18}},{"value":"/ }.get_max());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":157711,"byte_end":157728,"line_start":329,"line_end":329,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":157733,"byte_end":157740,"line_start":330,"line_end":330,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":157745,"byte_end":157756,"line_start":331,"line_end":331,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":886},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":158253,"byte_end":158260,"line_start":353,"line_end":353,"column_start":12,"column_end":19},"name":"get_min","qualname":"<OrdMap<K, V>>::get_min","value":"fn get_min(&Self) -> Option<&(K, V)>","parent":null,"children":[],"decl_id":null,"docs":" Get the smallest key in a map, along with its value. If the\n map is empty, return `None`.","sig":null,"attributes":[{"value":"/ Get the smallest key in a map, along with its value. If the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":157839,"byte_end":157902,"line_start":336,"line_end":336,"column_start":5,"column_end":68}},{"value":"/ map is empty, return `None`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":157907,"byte_end":157939,"line_start":337,"line_end":337,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":157944,"byte_end":157947,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":157952,"byte_end":157970,"line_start":339,"line_end":339,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":157975,"byte_end":157978,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":157983,"byte_end":157997,"line_start":341,"line_end":341,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":158002,"byte_end":158005,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":158010,"byte_end":158017,"line_start":343,"line_end":343,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":158022,"byte_end":158057,"line_start":344,"line_end":344,"column_start":5,"column_end":40}},{"value":"/ # use im::ordmap::OrdMap;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":158062,"byte_end":158091,"line_start":345,"line_end":345,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(Some(&(1, 11)), ordmap!{","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":158096,"byte_end":158135,"line_start":346,"line_end":346,"column_start":5,"column_end":44}},{"value":"/   1 => 11,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":158140,"byte_end":158154,"line_start":347,"line_end":347,"column_start":5,"column_end":19}},{"value":"/   2 => 22,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":158159,"byte_end":158173,"line_start":348,"line_end":348,"column_start":5,"column_end":19}},{"value":"/   3 => 33","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":158178,"byte_end":158191,"line_start":349,"line_end":349,"column_start":5,"column_end":18}},{"value":"/ }.get_min());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":158196,"byte_end":158213,"line_start":350,"line_end":350,"column_start":5,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":158218,"byte_end":158225,"line_start":351,"line_end":351,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":158230,"byte_end":158241,"line_start":352,"line_end":352,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":887},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":158406,"byte_end":158410,"line_start":359,"line_end":359,"column_start":12,"column_end":16},"name":"iter","qualname":"<OrdMap<K, V>>::iter","value":"fn iter(&Self) -> Iter<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Get an iterator over the key/value pairs of a map.\n","sig":null,"attributes":[{"value":"/ Get an iterator over the key/value pairs of a map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":158324,"byte_end":158378,"line_start":357,"line_end":357,"column_start":5,"column_end":59}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":158383,"byte_end":158394,"line_start":358,"line_end":358,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":888},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":158617,"byte_end":158622,"line_start":367,"line_end":367,"column_start":12,"column_end":17},"name":"range","qualname":"<OrdMap<K, V>>::range","value":"fn range<R, BK>(&Self, R) -> Iter<, K, V> where R: RangeBounds<BK>,\nK: Borrow<BK>, BK: Ord + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator over a range of key/value pairs.\n","sig":null,"attributes":[{"value":"/ Create an iterator over a range of key/value pairs.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":158534,"byte_end":158589,"line_start":365,"line_end":365,"column_start":5,"column_end":60}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":158594,"byte_end":158605,"line_start":366,"line_end":366,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":891},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":158923,"byte_end":158927,"line_start":380,"line_end":380,"column_start":12,"column_end":16},"name":"keys","qualname":"<OrdMap<K, V>>::keys","value":"fn keys(&Self) -> Keys<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Get an iterator over a map's keys.\n","sig":null,"attributes":[{"value":"/ Get an iterator over a map's keys.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":158857,"byte_end":158895,"line_start":378,"line_end":378,"column_start":5,"column_end":43}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":158900,"byte_end":158911,"line_start":379,"line_end":379,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":892},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":159067,"byte_end":159073,"line_start":386,"line_end":386,"column_start":12,"column_end":18},"name":"values","qualname":"<OrdMap<K, V>>::values","value":"fn values(&Self) -> Values<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Get an iterator over a map's values.\n","sig":null,"attributes":[{"value":"/ Get an iterator over a map's values.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":158999,"byte_end":159039,"line_start":384,"line_end":384,"column_start":5,"column_end":45}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":159044,"byte_end":159055,"line_start":385,"line_end":385,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":893},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":159751,"byte_end":159755,"line_start":402,"line_end":402,"column_start":12,"column_end":16},"name":"diff","qualname":"<OrdMap<K, V>>::diff","value":"fn diff<'a>(&'a Self, &'a Self) -> DiffIter","parent":null,"children":[],"decl_id":null,"docs":" Get an iterator over the differences between this map and\n another, i.e. the set of entries to add, update, or remove to\n this map in order to make it equal to the other map.","sig":null,"attributes":[{"value":"/ Get an iterator over the differences between this map and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":159149,"byte_end":159210,"line_start":390,"line_end":390,"column_start":5,"column_end":66}},{"value":"/ another, i.e. the set of entries to add, update, or remove to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":159215,"byte_end":159280,"line_start":391,"line_end":391,"column_start":5,"column_end":70}},{"value":"/ this map in order to make it equal to the other map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":159285,"byte_end":159341,"line_start":392,"line_end":392,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":159346,"byte_end":159349,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ This function will avoid visiting nodes which are shared","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":159354,"byte_end":159414,"line_start":394,"line_end":394,"column_start":5,"column_end":65}},{"value":"/ between the two maps, meaning that even very large maps can be","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":159419,"byte_end":159485,"line_start":395,"line_end":395,"column_start":5,"column_end":71}},{"value":"/ compared quickly if most of their structure is shared.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":159490,"byte_end":159548,"line_start":396,"line_end":396,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":159553,"byte_end":159556,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ Time: O(n) (where n is the number of unique elements across","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":159561,"byte_end":159624,"line_start":398,"line_end":398,"column_start":5,"column_end":68}},{"value":"/ the two maps, minus the number of elements belonging to nodes","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":159629,"byte_end":159694,"line_start":399,"line_end":399,"column_start":5,"column_end":70}},{"value":"/ shared between them)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":159699,"byte_end":159723,"line_start":400,"line_end":400,"column_start":5,"column_end":29}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":159728,"byte_end":159739,"line_start":401,"line_end":401,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":895},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":160262,"byte_end":160265,"line_start":424,"line_end":424,"column_start":12,"column_end":15},"name":"get","qualname":"<OrdMap<K, V>>::get","value":"fn get<BK>(&Self, &BK) -> Option<&V> where BK: Ord + ?Sized, K: Borrow<BK>","parent":null,"children":[],"decl_id":null,"docs":" Get the value for a key from a map.","sig":null,"attributes":[{"value":"/ Get the value for a key from a map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":159911,"byte_end":159950,"line_start":408,"line_end":408,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":159955,"byte_end":159958,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":159963,"byte_end":159981,"line_start":410,"line_end":410,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":159986,"byte_end":159989,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":159994,"byte_end":160008,"line_start":412,"line_end":412,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":160013,"byte_end":160016,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":160021,"byte_end":160028,"line_start":414,"line_end":414,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":160033,"byte_end":160068,"line_start":415,"line_end":415,"column_start":5,"column_end":40}},{"value":"/ # use im::ordmap::OrdMap;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":160073,"byte_end":160102,"line_start":416,"line_end":416,"column_start":5,"column_end":34}},{"value":"/ let map = ordmap!{123 => \"lol\"};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":160107,"byte_end":160143,"line_start":417,"line_end":417,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":160148,"byte_end":160163,"line_start":418,"line_end":418,"column_start":5,"column_end":20}},{"value":"/   map.get(&123),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":160168,"byte_end":160188,"line_start":419,"line_end":419,"column_start":5,"column_end":25}},{"value":"/   Some(&\"lol\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":160193,"byte_end":160211,"line_start":420,"line_end":420,"column_start":5,"column_end":23}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":160216,"byte_end":160222,"line_start":421,"line_end":421,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":160227,"byte_end":160234,"line_start":422,"line_end":422,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":160239,"byte_end":160250,"line_start":423,"line_end":423,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":898},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":160801,"byte_end":160814,"line_start":448,"line_end":448,"column_start":12,"column_end":25},"name":"get_key_value","qualname":"<OrdMap<K, V>>::get_key_value","value":"fn get_key_value<BK>(&Self, &BK) -> Option<(&K, &V)> where BK: Ord + ?Sized,\nK: Borrow<BK>","parent":null,"children":[],"decl_id":null,"docs":" Get the key/value pair for a key from a map.","sig":null,"attributes":[{"value":"/ Get the key/value pair for a key from a map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":160423,"byte_end":160471,"line_start":432,"line_end":432,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":160476,"byte_end":160479,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":160484,"byte_end":160502,"line_start":434,"line_end":434,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":160507,"byte_end":160510,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":160515,"byte_end":160529,"line_start":436,"line_end":436,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":160534,"byte_end":160537,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":160542,"byte_end":160549,"line_start":438,"line_end":438,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":160554,"byte_end":160589,"line_start":439,"line_end":439,"column_start":5,"column_end":40}},{"value":"/ # use im::ordmap::OrdMap;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":160594,"byte_end":160623,"line_start":440,"line_end":440,"column_start":5,"column_end":34}},{"value":"/ let map = ordmap!{123 => \"lol\"};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":160628,"byte_end":160664,"line_start":441,"line_end":441,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":160669,"byte_end":160684,"line_start":442,"line_end":442,"column_start":5,"column_end":20}},{"value":"/   map.get_key_value(&123),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":160689,"byte_end":160719,"line_start":443,"line_end":443,"column_start":5,"column_end":35}},{"value":"/   Some((&123, &\"lol\"))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":160724,"byte_end":160750,"line_start":444,"line_end":444,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":160755,"byte_end":160761,"line_start":445,"line_end":445,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":160766,"byte_end":160773,"line_start":446,"line_end":446,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":160778,"byte_end":160789,"line_start":447,"line_end":447,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":901},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":161597,"byte_end":161605,"line_start":473,"line_end":473,"column_start":12,"column_end":20},"name":"get_prev","qualname":"<OrdMap<K, V>>::get_prev","value":"fn get_prev<BK>(&Self, &BK) -> Option<(&K, &V)> where BK: Ord + ?Sized,\nK: Borrow<BK>","parent":null,"children":[],"decl_id":null,"docs":" Get the closest smaller entry in a map to a given key\n as a mutable reference.","sig":null,"attributes":[{"value":"/ Get the closest smaller entry in a map to a given key","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":160992,"byte_end":161049,"line_start":456,"line_end":456,"column_start":5,"column_end":62}},{"value":"/ as a mutable reference.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":161054,"byte_end":161081,"line_start":457,"line_end":457,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":161086,"byte_end":161089,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ If the map contains the given key, this is returned.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":161094,"byte_end":161150,"line_start":459,"line_end":459,"column_start":5,"column_end":61}},{"value":"/ Otherwise, the closest key in the map smaller than the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":161155,"byte_end":161213,"line_start":460,"line_end":460,"column_start":5,"column_end":63}},{"value":"/ given value is returned. If the smallest key in the map","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":161218,"byte_end":161277,"line_start":461,"line_end":461,"column_start":5,"column_end":64}},{"value":"/ is larger than the given key, `None` is returned.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":161282,"byte_end":161335,"line_start":462,"line_end":462,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":161340,"byte_end":161343,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":161348,"byte_end":161362,"line_start":464,"line_end":464,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":161367,"byte_end":161370,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":161375,"byte_end":161386,"line_start":466,"line_end":466,"column_start":5,"column_end":16}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":161391,"byte_end":161426,"line_start":467,"line_end":467,"column_start":5,"column_end":40}},{"value":"/ # use im::OrdMap;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":161431,"byte_end":161452,"line_start":468,"line_end":468,"column_start":5,"column_end":26}},{"value":"/ let map = ordmap![1 => 1, 3 => 3, 5 => 5];","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":161457,"byte_end":161503,"line_start":469,"line_end":469,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(Some((&3, &3)), map.get_prev(&4));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":161508,"byte_end":161557,"line_start":470,"line_end":470,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":161562,"byte_end":161569,"line_start":471,"line_end":471,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":161574,"byte_end":161585,"line_start":472,"line_end":472,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":904},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":162390,"byte_end":162398,"line_start":498,"line_end":498,"column_start":12,"column_end":20},"name":"get_next","qualname":"<OrdMap<K, V>>::get_next","value":"fn get_next<BK>(&Self, &BK) -> Option<(&K, &V)> where BK: Ord + ?Sized,\nK: Borrow<BK>","parent":null,"children":[],"decl_id":null,"docs":" Get the closest larger entry in a map to a given key\n as a mutable reference.","sig":null,"attributes":[{"value":"/ Get the closest larger entry in a map to a given key","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":161779,"byte_end":161835,"line_start":481,"line_end":481,"column_start":5,"column_end":61}},{"value":"/ as a mutable reference.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":161840,"byte_end":161867,"line_start":482,"line_end":482,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":161872,"byte_end":161875,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ If the set contains the given value, this is returned.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":161880,"byte_end":161938,"line_start":484,"line_end":484,"column_start":5,"column_end":63}},{"value":"/ Otherwise, the closest value in the set larger than the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":161943,"byte_end":162002,"line_start":485,"line_end":485,"column_start":5,"column_end":64}},{"value":"/ given value is returned. If the largest value in the set","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":162007,"byte_end":162067,"line_start":486,"line_end":486,"column_start":5,"column_end":65}},{"value":"/ is smaller than the given value, `None` is returned.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":162072,"byte_end":162128,"line_start":487,"line_end":487,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":162133,"byte_end":162136,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":162141,"byte_end":162155,"line_start":489,"line_end":489,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":162160,"byte_end":162163,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":162168,"byte_end":162179,"line_start":491,"line_end":491,"column_start":5,"column_end":16}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":162184,"byte_end":162219,"line_start":492,"line_end":492,"column_start":5,"column_end":40}},{"value":"/ # use im::OrdMap;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":162224,"byte_end":162245,"line_start":493,"line_end":493,"column_start":5,"column_end":26}},{"value":"/ let map = ordmap![1 => 1, 3 => 3, 5 => 5];","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":162250,"byte_end":162296,"line_start":494,"line_end":494,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(Some((&5, &5)), map.get_next(&4));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":162301,"byte_end":162350,"line_start":495,"line_end":495,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":162355,"byte_end":162362,"line_start":496,"line_end":496,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":162367,"byte_end":162378,"line_start":497,"line_end":497,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":907},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":162972,"byte_end":162984,"line_start":524,"line_end":524,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<OrdMap<K, V>>::contains_key","value":"fn contains_key<BK>(&Self, &BK) -> bool where BK: Ord + ?Sized, K: Borrow<BK>","parent":null,"children":[],"decl_id":null,"docs":" Test for the presence of a key in a map.","sig":null,"attributes":[{"value":"/ Test for the presence of a key in a map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":162572,"byte_end":162616,"line_start":506,"line_end":506,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":162621,"byte_end":162624,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":162629,"byte_end":162647,"line_start":508,"line_end":508,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":162652,"byte_end":162655,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":162660,"byte_end":162674,"line_start":510,"line_end":510,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":162679,"byte_end":162682,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":162687,"byte_end":162694,"line_start":512,"line_end":512,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":162699,"byte_end":162734,"line_start":513,"line_end":513,"column_start":5,"column_end":40}},{"value":"/ # use im::ordmap::OrdMap;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":162739,"byte_end":162768,"line_start":514,"line_end":514,"column_start":5,"column_end":34}},{"value":"/ let map = ordmap!{123 => \"lol\"};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":162773,"byte_end":162809,"line_start":515,"line_end":515,"column_start":5,"column_end":41}},{"value":"/ assert!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":162814,"byte_end":162826,"line_start":516,"line_end":516,"column_start":5,"column_end":17}},{"value":"/   map.contains_key(&123)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":162831,"byte_end":162859,"line_start":517,"line_end":517,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":162864,"byte_end":162870,"line_start":518,"line_end":518,"column_start":5,"column_end":11}},{"value":"/ assert!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":162875,"byte_end":162887,"line_start":519,"line_end":519,"column_start":5,"column_end":17}},{"value":"/   !map.contains_key(&321)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":162892,"byte_end":162921,"line_start":520,"line_end":520,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":162926,"byte_end":162932,"line_start":521,"line_end":521,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":162937,"byte_end":162944,"line_start":522,"line_end":522,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":162949,"byte_end":162960,"line_start":523,"line_end":523,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":909},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":163409,"byte_end":163421,"line_start":540,"line_end":540,"column_start":12,"column_end":24},"name":"is_submap_by","qualname":"<OrdMap<K, V>>::is_submap_by","value":"fn is_submap_by<B, RM, F>(&Self, RM, F) -> bool where\nF: for<'_, '_> FnMut(&'_ V, &'_ B) -> bool, RM: Borrow<OrdMap<K, B>>","parent":null,"children":[],"decl_id":null,"docs":" Test whether a map is a submap of another map, meaning that\n all keys in our map must also be in the other map, with the\n same values.","sig":null,"attributes":[{"value":"/ Test whether a map is a submap of another map, meaning that","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":163118,"byte_end":163181,"line_start":532,"line_end":532,"column_start":5,"column_end":68}},{"value":"/ all keys in our map must also be in the other map, with the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":163186,"byte_end":163249,"line_start":533,"line_end":533,"column_start":5,"column_end":68}},{"value":"/ same values.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":163254,"byte_end":163270,"line_start":534,"line_end":534,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":163275,"byte_end":163278,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ Use the provided function to decide whether values are equal.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":163283,"byte_end":163348,"line_start":536,"line_end":536,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":163353,"byte_end":163356,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":163361,"byte_end":163381,"line_start":538,"line_end":538,"column_start":5,"column_end":25}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":163386,"byte_end":163397,"line_start":539,"line_end":539,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":915},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":164055,"byte_end":164074,"line_start":558,"line_end":558,"column_start":12,"column_end":31},"name":"is_proper_submap_by","qualname":"<OrdMap<K, V>>::is_proper_submap_by","value":"fn is_proper_submap_by<B, RM, F>(&Self, RM, F) -> bool where\nF: for<'_, '_> FnMut(&'_ V, &'_ B) -> bool, RM: Borrow<OrdMap<K, B>>","parent":null,"children":[],"decl_id":null,"docs":" Test whether a map is a proper submap of another map, meaning\n that all keys in our map must also be in the other map, with\n the same values. To be a proper submap, ours must also contain\n fewer keys than the other map.","sig":null,"attributes":[{"value":"/ Test whether a map is a proper submap of another map, meaning","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":163672,"byte_end":163737,"line_start":549,"line_end":549,"column_start":5,"column_end":70}},{"value":"/ that all keys in our map must also be in the other map, with","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":163742,"byte_end":163806,"line_start":550,"line_end":550,"column_start":5,"column_end":69}},{"value":"/ the same values. To be a proper submap, ours must also contain","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":163811,"byte_end":163877,"line_start":551,"line_end":551,"column_start":5,"column_end":71}},{"value":"/ fewer keys than the other map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":163882,"byte_end":163916,"line_start":552,"line_end":552,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":163921,"byte_end":163924,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ Use the provided function to decide whether values are equal.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":163929,"byte_end":163994,"line_start":554,"line_end":554,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":163999,"byte_end":164002,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":164007,"byte_end":164027,"line_start":556,"line_end":556,"column_start":5,"column_end":25}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":164032,"byte_end":164043,"line_start":557,"line_end":557,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":919},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":164771,"byte_end":164780,"line_start":582,"line_end":582,"column_start":12,"column_end":21},"name":"is_submap","qualname":"<OrdMap<K, V>>::is_submap","value":"fn is_submap<RM>(&Self, RM) -> bool where V: PartialEq, RM: Borrow<Self>","parent":null,"children":[],"decl_id":null,"docs":" Test whether a map is a submap of another map, meaning that\n all keys in our map must also be in the other map, with the\n same values.","sig":null,"attributes":[{"value":"/ Test whether a map is a submap of another map, meaning that","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":164290,"byte_end":164353,"line_start":566,"line_end":566,"column_start":5,"column_end":68}},{"value":"/ all keys in our map must also be in the other map, with the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":164358,"byte_end":164421,"line_start":567,"line_end":567,"column_start":5,"column_end":68}},{"value":"/ same values.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":164426,"byte_end":164442,"line_start":568,"line_end":568,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":164447,"byte_end":164450,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":164455,"byte_end":164475,"line_start":570,"line_end":570,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":164480,"byte_end":164483,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":164488,"byte_end":164502,"line_start":572,"line_end":572,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":164507,"byte_end":164510,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":164515,"byte_end":164522,"line_start":574,"line_end":574,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":164527,"byte_end":164562,"line_start":575,"line_end":575,"column_start":5,"column_end":40}},{"value":"/ # use im::ordmap::OrdMap;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":164567,"byte_end":164596,"line_start":576,"line_end":576,"column_start":5,"column_end":34}},{"value":"/ let map1 = ordmap!{1 => 1, 2 => 2};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":164601,"byte_end":164640,"line_start":577,"line_end":577,"column_start":5,"column_end":44}},{"value":"/ let map2 = ordmap!{1 => 1, 2 => 2, 3 => 3};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":164645,"byte_end":164692,"line_start":578,"line_end":578,"column_start":5,"column_end":52}},{"value":"/ assert!(map1.is_submap(map2));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":164697,"byte_end":164731,"line_start":579,"line_end":579,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":164736,"byte_end":164743,"line_start":580,"line_end":580,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":164748,"byte_end":164759,"line_start":581,"line_end":581,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":921},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":165666,"byte_end":165682,"line_start":611,"line_end":611,"column_start":12,"column_end":28},"name":"is_proper_submap","qualname":"<OrdMap<K, V>>::is_proper_submap","value":"fn is_proper_submap<RM>(&Self, RM) -> bool where V: PartialEq,\nRM: Borrow<Self>","parent":null,"children":[],"decl_id":null,"docs":" Test whether a map is a proper submap of another map, meaning\n that all keys in our map must also be in the other map, with\n the same values. To be a proper submap, ours must also contain\n fewer keys than the other map.","sig":null,"attributes":[{"value":"/ Test whether a map is a proper submap of another map, meaning","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":164943,"byte_end":165008,"line_start":590,"line_end":590,"column_start":5,"column_end":70}},{"value":"/ that all keys in our map must also be in the other map, with","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":165013,"byte_end":165077,"line_start":591,"line_end":591,"column_start":5,"column_end":69}},{"value":"/ the same values. To be a proper submap, ours must also contain","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":165082,"byte_end":165148,"line_start":592,"line_end":592,"column_start":5,"column_end":71}},{"value":"/ fewer keys than the other map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":165153,"byte_end":165187,"line_start":593,"line_end":593,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":165192,"byte_end":165195,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":165200,"byte_end":165220,"line_start":595,"line_end":595,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":165225,"byte_end":165228,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":165233,"byte_end":165247,"line_start":597,"line_end":597,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":165252,"byte_end":165255,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":165260,"byte_end":165267,"line_start":599,"line_end":599,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":165272,"byte_end":165307,"line_start":600,"line_end":600,"column_start":5,"column_end":40}},{"value":"/ # use im::ordmap::OrdMap;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":165312,"byte_end":165341,"line_start":601,"line_end":601,"column_start":5,"column_end":34}},{"value":"/ let map1 = ordmap!{1 => 1, 2 => 2};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":165346,"byte_end":165385,"line_start":602,"line_end":602,"column_start":5,"column_end":44}},{"value":"/ let map2 = ordmap!{1 => 1, 2 => 2, 3 => 3};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":165390,"byte_end":165437,"line_start":603,"line_end":603,"column_start":5,"column_end":52}},{"value":"/ assert!(map1.is_proper_submap(map2));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":165442,"byte_end":165483,"line_start":604,"line_end":604,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":165488,"byte_end":165491,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ let map3 = ordmap!{1 => 1, 2 => 2};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":165496,"byte_end":165535,"line_start":606,"line_end":606,"column_start":5,"column_end":44}},{"value":"/ let map4 = ordmap!{1 => 1, 2 => 2};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":165540,"byte_end":165579,"line_start":607,"line_end":607,"column_start":5,"column_end":44}},{"value":"/ assert!(!map3.is_proper_submap(map4));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":165584,"byte_end":165626,"line_start":608,"line_end":608,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":165631,"byte_end":165638,"line_start":609,"line_end":609,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":165643,"byte_end":165654,"line_start":610,"line_end":610,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":926},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":166385,"byte_end":166392,"line_start":644,"line_end":644,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OrdMap<K, V>>::get_mut","value":"fn get_mut<BK>(&mut Self, &BK) -> Option<&mut V> where BK: Ord + ?Sized,\nK: Borrow<BK>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the value for a key from a map.","sig":null,"attributes":[{"value":"/ Get a mutable reference to the value for a key from a map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":165920,"byte_end":165982,"line_start":625,"line_end":625,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":165987,"byte_end":165990,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":165995,"byte_end":166013,"line_start":627,"line_end":627,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":166018,"byte_end":166021,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":166026,"byte_end":166040,"line_start":629,"line_end":629,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":166045,"byte_end":166048,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":166053,"byte_end":166060,"line_start":631,"line_end":631,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":166065,"byte_end":166100,"line_start":632,"line_end":632,"column_start":5,"column_end":40}},{"value":"/ # use im::ordmap::OrdMap;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":166105,"byte_end":166134,"line_start":633,"line_end":633,"column_start":5,"column_end":34}},{"value":"/ let mut map = ordmap!{123 => \"lol\"};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":166139,"byte_end":166179,"line_start":634,"line_end":634,"column_start":5,"column_end":45}},{"value":"/ if let Some(value) = map.get_mut(&123) {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":166184,"byte_end":166228,"line_start":635,"line_end":635,"column_start":5,"column_end":49}},{"value":"/     *value = \"omg\";","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":166233,"byte_end":166256,"line_start":636,"line_end":636,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":166261,"byte_end":166266,"line_start":637,"line_end":637,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":166271,"byte_end":166286,"line_start":638,"line_end":638,"column_start":5,"column_end":20}},{"value":"/   map.get(&123),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":166291,"byte_end":166311,"line_start":639,"line_end":639,"column_start":5,"column_end":25}},{"value":"/   Some(&\"omg\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":166316,"byte_end":166334,"line_start":640,"line_end":640,"column_start":5,"column_end":23}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":166339,"byte_end":166345,"line_start":641,"line_end":641,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":166350,"byte_end":166357,"line_start":642,"line_end":642,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":166362,"byte_end":166373,"line_start":643,"line_end":643,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":929},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":167345,"byte_end":167357,"line_start":673,"line_end":673,"column_start":12,"column_end":24},"name":"get_prev_mut","qualname":"<OrdMap<K, V>>::get_prev_mut","value":"fn get_prev_mut<BK>(&mut Self, &BK) -> Option<(&K, &mut V)> where BK: Ord +\n?Sized, K: Borrow<BK>","parent":null,"children":[],"decl_id":null,"docs":" Get the closest smaller entry in a map to a given key\n as a mutable reference.","sig":null,"attributes":[{"value":"/ Get the closest smaller entry in a map to a given key","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":166639,"byte_end":166696,"line_start":653,"line_end":653,"column_start":5,"column_end":62}},{"value":"/ as a mutable reference.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":166701,"byte_end":166728,"line_start":654,"line_end":654,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":166733,"byte_end":166736,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ If the map contains the given key, this is returned.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":166741,"byte_end":166797,"line_start":656,"line_end":656,"column_start":5,"column_end":61}},{"value":"/ Otherwise, the closest key in the map smaller than the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":166802,"byte_end":166860,"line_start":657,"line_end":657,"column_start":5,"column_end":63}},{"value":"/ given value is returned. If the smallest key in the map","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":166865,"byte_end":166924,"line_start":658,"line_end":658,"column_start":5,"column_end":64}},{"value":"/ is larger than the given key, `None` is returned.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":166929,"byte_end":166982,"line_start":659,"line_end":659,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":166987,"byte_end":166990,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":166995,"byte_end":167009,"line_start":661,"line_end":661,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":167014,"byte_end":167017,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":167022,"byte_end":167033,"line_start":663,"line_end":663,"column_start":5,"column_end":16}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":167038,"byte_end":167073,"line_start":664,"line_end":664,"column_start":5,"column_end":40}},{"value":"/ # use im::OrdMap;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":167078,"byte_end":167099,"line_start":665,"line_end":665,"column_start":5,"column_end":26}},{"value":"/ let mut map = ordmap![1 => 1, 3 => 3, 5 => 5];","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":167104,"byte_end":167154,"line_start":666,"line_end":666,"column_start":5,"column_end":55}},{"value":"/ if let Some((key, value)) = map.get_prev_mut(&4) {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":167159,"byte_end":167213,"line_start":667,"line_end":667,"column_start":5,"column_end":59}},{"value":"/     *value = 4;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":167218,"byte_end":167237,"line_start":668,"line_end":668,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":167242,"byte_end":167247,"line_start":669,"line_end":669,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(ordmap![1 => 1, 3 => 4, 5 => 5], map);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":167252,"byte_end":167305,"line_start":670,"line_end":670,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":167310,"byte_end":167317,"line_start":671,"line_end":671,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":167322,"byte_end":167333,"line_start":672,"line_end":672,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":932},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":168362,"byte_end":168374,"line_start":704,"line_end":704,"column_start":12,"column_end":24},"name":"get_next_mut","qualname":"<OrdMap<K, V>>::get_next_mut","value":"fn get_next_mut<BK>(&mut Self, &BK) -> Option<(&K, &mut V)> where BK: Ord +\n?Sized, K: Borrow<BK>","parent":null,"children":[],"decl_id":null,"docs":" Get the closest larger entry in a map to a given key\n as a mutable reference.","sig":null,"attributes":[{"value":"/ Get the closest larger entry in a map to a given key","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":167650,"byte_end":167706,"line_start":684,"line_end":684,"column_start":5,"column_end":61}},{"value":"/ as a mutable reference.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":167711,"byte_end":167738,"line_start":685,"line_end":685,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":167743,"byte_end":167746,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ If the set contains the given value, this is returned.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":167751,"byte_end":167809,"line_start":687,"line_end":687,"column_start":5,"column_end":63}},{"value":"/ Otherwise, the closest value in the set larger than the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":167814,"byte_end":167873,"line_start":688,"line_end":688,"column_start":5,"column_end":64}},{"value":"/ given value is returned. If the largest value in the set","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":167878,"byte_end":167938,"line_start":689,"line_end":689,"column_start":5,"column_end":65}},{"value":"/ is smaller than the given value, `None` is returned.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":167943,"byte_end":167999,"line_start":690,"line_end":690,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":168004,"byte_end":168007,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":168012,"byte_end":168026,"line_start":692,"line_end":692,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":168031,"byte_end":168034,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":168039,"byte_end":168050,"line_start":694,"line_end":694,"column_start":5,"column_end":16}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":168055,"byte_end":168090,"line_start":695,"line_end":695,"column_start":5,"column_end":40}},{"value":"/ # use im::OrdMap;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":168095,"byte_end":168116,"line_start":696,"line_end":696,"column_start":5,"column_end":26}},{"value":"/ let mut map = ordmap![1 => 1, 3 => 3, 5 => 5];","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":168121,"byte_end":168171,"line_start":697,"line_end":697,"column_start":5,"column_end":55}},{"value":"/ if let Some((key, value)) = map.get_next_mut(&4) {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":168176,"byte_end":168230,"line_start":698,"line_end":698,"column_start":5,"column_end":59}},{"value":"/     *value = 4;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":168235,"byte_end":168254,"line_start":699,"line_end":699,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":168259,"byte_end":168264,"line_start":700,"line_end":700,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(ordmap![1 => 1, 3 => 3, 5 => 4], map);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":168269,"byte_end":168322,"line_start":701,"line_end":701,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":168327,"byte_end":168334,"line_start":702,"line_end":702,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":168339,"byte_end":168350,"line_start":703,"line_end":703,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":935},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":169420,"byte_end":169426,"line_start":742,"line_end":742,"column_start":12,"column_end":18},"name":"insert","qualname":"<OrdMap<K, V>>::insert","value":"fn insert(&mut Self, K, V) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Insert a key/value mapping into a map.","sig":null,"attributes":[{"value":"/ Insert a key/value mapping into a map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":168667,"byte_end":168709,"line_start":715,"line_end":715,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":168714,"byte_end":168717,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ This is a copy-on-write operation, so that the parts of the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":168722,"byte_end":168785,"line_start":717,"line_end":717,"column_start":5,"column_end":68}},{"value":"/ map's structure which are shared with other maps will be","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":168790,"byte_end":168850,"line_start":718,"line_end":718,"column_start":5,"column_end":65}},{"value":"/ safely copied before mutating.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":168855,"byte_end":168889,"line_start":719,"line_end":719,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":168894,"byte_end":168897,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ If the map already has a mapping for the given key, the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":168902,"byte_end":168961,"line_start":721,"line_end":721,"column_start":5,"column_end":64}},{"value":"/ previous value is overwritten.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":168966,"byte_end":169000,"line_start":722,"line_end":722,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":169005,"byte_end":169008,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":169013,"byte_end":169031,"line_start":724,"line_end":724,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":169036,"byte_end":169039,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":169044,"byte_end":169058,"line_start":726,"line_end":726,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":169063,"byte_end":169066,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":169071,"byte_end":169078,"line_start":728,"line_end":728,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":169083,"byte_end":169118,"line_start":729,"line_end":729,"column_start":5,"column_end":40}},{"value":"/ # use im::ordmap::OrdMap;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":169123,"byte_end":169152,"line_start":730,"line_end":730,"column_start":5,"column_end":34}},{"value":"/ let mut map = ordmap!{};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":169157,"byte_end":169185,"line_start":731,"line_end":731,"column_start":5,"column_end":33}},{"value":"/ map.insert(123, \"123\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":169190,"byte_end":169217,"line_start":732,"line_end":732,"column_start":5,"column_end":32}},{"value":"/ map.insert(456, \"456\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":169222,"byte_end":169249,"line_start":733,"line_end":733,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":169254,"byte_end":169269,"line_start":734,"line_end":734,"column_start":5,"column_end":20}},{"value":"/   map,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":169274,"byte_end":169284,"line_start":735,"line_end":735,"column_start":5,"column_end":15}},{"value":"/   ordmap!{123 => \"123\", 456 => \"456\"}","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":169289,"byte_end":169330,"line_start":736,"line_end":736,"column_start":5,"column_end":46}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":169335,"byte_end":169341,"line_start":737,"line_end":737,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":169346,"byte_end":169353,"line_start":738,"line_end":738,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":169358,"byte_end":169361,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ [insert]: #method.insert","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":169366,"byte_end":169394,"line_start":740,"line_end":740,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":169399,"byte_end":169408,"line_start":741,"line_end":741,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":936},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":170557,"byte_end":170563,"line_start":779,"line_end":779,"column_start":12,"column_end":18},"name":"remove","qualname":"<OrdMap<K, V>>::remove","value":"fn remove<BK>(&mut Self, &BK) -> Option<V> where BK: Ord + ?Sized,\nK: Borrow<BK>","parent":null,"children":[],"decl_id":null,"docs":" Remove a key/value mapping from a map if it exists.","sig":null,"attributes":[{"value":"/ Remove a key/value mapping from a map if it exists.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":170127,"byte_end":170182,"line_start":762,"line_end":762,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":170187,"byte_end":170190,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":170195,"byte_end":170213,"line_start":764,"line_end":764,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":170218,"byte_end":170221,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":170226,"byte_end":170240,"line_start":766,"line_end":766,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":170245,"byte_end":170248,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":170253,"byte_end":170260,"line_start":768,"line_end":768,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":170265,"byte_end":170300,"line_start":769,"line_end":769,"column_start":5,"column_end":40}},{"value":"/ # use im::ordmap::OrdMap;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":170305,"byte_end":170334,"line_start":770,"line_end":770,"column_start":5,"column_end":34}},{"value":"/ let mut map = ordmap!{123 => \"123\", 456 => \"456\"};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":170339,"byte_end":170393,"line_start":771,"line_end":771,"column_start":5,"column_end":59}},{"value":"/ map.remove(&123);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":170398,"byte_end":170419,"line_start":772,"line_end":772,"column_start":5,"column_end":26}},{"value":"/ map.remove(&456);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":170424,"byte_end":170445,"line_start":773,"line_end":773,"column_start":5,"column_end":26}},{"value":"/ assert!(map.is_empty());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":170450,"byte_end":170478,"line_start":774,"line_end":774,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":170483,"byte_end":170490,"line_start":775,"line_end":775,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":170495,"byte_end":170498,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ [remove]: #method.remove","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":170503,"byte_end":170531,"line_start":777,"line_end":777,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":170536,"byte_end":170545,"line_start":778,"line_end":778,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":939},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":170866,"byte_end":170881,"line_start":791,"line_end":791,"column_start":12,"column_end":27},"name":"remove_with_key","qualname":"<OrdMap<K, V>>::remove_with_key","value":"fn remove_with_key<BK>(&mut Self, &BK) -> Option<(K, V)> where BK: Ord +\n?Sized, K: Borrow<BK>","parent":null,"children":[],"decl_id":null,"docs":" Remove a key/value pair from a map, if it exists, and return\n the removed key and value.","sig":null,"attributes":[{"value":"/ Remove a key/value pair from a map, if it exists, and return","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":170724,"byte_end":170788,"line_start":787,"line_end":787,"column_start":5,"column_end":69}},{"value":"/ the removed key and value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":170793,"byte_end":170823,"line_start":788,"line_end":788,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":170828,"byte_end":170831,"line_start":789,"line_end":789,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":170836,"byte_end":170854,"line_start":790,"line_end":790,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":941},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":172047,"byte_end":172053,"line_start":832,"line_end":832,"column_start":12,"column_end":18},"name":"update","qualname":"<OrdMap<K, V>>::update","value":"fn update(&Self, K, V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new map by inserting a key/value mapping into a\n map.","sig":null,"attributes":[{"value":"/ Construct a new map by inserting a key/value mapping into a","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":171542,"byte_end":171605,"line_start":812,"line_end":812,"column_start":5,"column_end":68}},{"value":"/ map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":171610,"byte_end":171618,"line_start":813,"line_end":813,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":171623,"byte_end":171626,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ If the map already has a mapping for the given key, the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":171631,"byte_end":171690,"line_start":815,"line_end":815,"column_start":5,"column_end":64}},{"value":"/ previous value is overwritten.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":171695,"byte_end":171729,"line_start":816,"line_end":816,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":171734,"byte_end":171737,"line_start":817,"line_end":817,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":171742,"byte_end":171760,"line_start":818,"line_end":818,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":171765,"byte_end":171768,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":171773,"byte_end":171787,"line_start":820,"line_end":820,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":171792,"byte_end":171795,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":171800,"byte_end":171807,"line_start":822,"line_end":822,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":171812,"byte_end":171847,"line_start":823,"line_end":823,"column_start":5,"column_end":40}},{"value":"/ # use im::ordmap::OrdMap;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":171852,"byte_end":171881,"line_start":824,"line_end":824,"column_start":5,"column_end":34}},{"value":"/ let map = ordmap!{};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":171886,"byte_end":171910,"line_start":825,"line_end":825,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":171915,"byte_end":171930,"line_start":826,"line_end":826,"column_start":5,"column_end":20}},{"value":"/   map.update(123, \"123\"),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":171935,"byte_end":171964,"line_start":827,"line_end":827,"column_start":5,"column_end":34}},{"value":"/   ordmap!{123 => \"123\"}","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":171969,"byte_end":171996,"line_start":828,"line_end":828,"column_start":5,"column_end":32}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":172001,"byte_end":172007,"line_start":829,"line_end":829,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":172012,"byte_end":172019,"line_start":830,"line_end":830,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":172024,"byte_end":172035,"line_start":831,"line_end":831,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":942},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":172507,"byte_end":172518,"line_start":847,"line_end":847,"column_start":12,"column_end":23},"name":"update_with","qualname":"<OrdMap<K, V>>::update_with","value":"fn update_with<F>(Self, K, V, F) -> Self where F: FnOnce(V, V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Construct a new map by inserting a key/value mapping into a\n map.","sig":null,"attributes":[{"value":"/ Construct a new map by inserting a key/value mapping into a","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":172180,"byte_end":172243,"line_start":838,"line_end":838,"column_start":5,"column_end":68}},{"value":"/ map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":172248,"byte_end":172256,"line_start":839,"line_end":839,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":172261,"byte_end":172264,"line_start":840,"line_end":840,"column_start":5,"column_end":8}},{"value":"/ If the map already has a mapping for the given key, we call","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":172269,"byte_end":172332,"line_start":841,"line_end":841,"column_start":5,"column_end":68}},{"value":"/ the provided function with the old value and the new value,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":172337,"byte_end":172400,"line_start":842,"line_end":842,"column_start":5,"column_end":68}},{"value":"/ and insert the result as the new value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":172405,"byte_end":172448,"line_start":843,"line_end":843,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":172453,"byte_end":172456,"line_start":844,"line_end":844,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":172461,"byte_end":172479,"line_start":845,"line_end":845,"column_start":5,"column_end":23}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":172484,"byte_end":172495,"line_start":846,"line_end":846,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":945},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":173005,"byte_end":173020,"line_start":863,"line_end":863,"column_start":12,"column_end":27},"name":"update_with_key","qualname":"<OrdMap<K, V>>::update_with_key","value":"fn update_with_key<F>(Self, K, V, F) -> Self where\nF: for<'_> FnOnce(&'_ K, V, V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Construct a new map by inserting a key/value mapping into a\n map.","sig":null,"attributes":[{"value":"/ Construct a new map by inserting a key/value mapping into a","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":172669,"byte_end":172732,"line_start":854,"line_end":854,"column_start":5,"column_end":68}},{"value":"/ map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":172737,"byte_end":172745,"line_start":855,"line_end":855,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":172750,"byte_end":172753,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ If the map already has a mapping for the given key, we call","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":172758,"byte_end":172821,"line_start":857,"line_end":857,"column_start":5,"column_end":68}},{"value":"/ the provided function with the key, the old value and the new","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":172826,"byte_end":172891,"line_start":858,"line_end":858,"column_start":5,"column_end":70}},{"value":"/ value, and insert the result as the new value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":172896,"byte_end":172946,"line_start":859,"line_end":859,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":172951,"byte_end":172954,"line_start":860,"line_end":860,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":172959,"byte_end":172977,"line_start":861,"line_end":861,"column_start":5,"column_end":23}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":172982,"byte_end":172993,"line_start":862,"line_end":862,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":947},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":173737,"byte_end":173759,"line_start":886,"line_end":886,"column_start":12,"column_end":34},"name":"update_lookup_with_key","qualname":"<OrdMap<K, V>>::update_lookup_with_key","value":"fn update_lookup_with_key<F>(Self, K, V, F) -> (Option<V>, Self) where\nF: for<'_, '_> FnOnce(&'_ K, &'_ V, V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Construct a new map by inserting a key/value mapping into a\n map, returning the old value for the key as well as the new\n map.","sig":null,"attributes":[{"value":"/ Construct a new map by inserting a key/value mapping into a","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":173333,"byte_end":173396,"line_start":876,"line_end":876,"column_start":5,"column_end":68}},{"value":"/ map, returning the old value for the key as well as the new","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":173401,"byte_end":173464,"line_start":877,"line_end":877,"column_start":5,"column_end":68}},{"value":"/ map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":173469,"byte_end":173477,"line_start":878,"line_end":878,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":173482,"byte_end":173485,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ If the map already has a mapping for the given key, we call","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":173490,"byte_end":173553,"line_start":880,"line_end":880,"column_start":5,"column_end":68}},{"value":"/ the provided function with the key, the old value and the new","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":173558,"byte_end":173623,"line_start":881,"line_end":881,"column_start":5,"column_end":70}},{"value":"/ value, and insert the result as the new value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":173628,"byte_end":173678,"line_start":882,"line_end":882,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":173683,"byte_end":173686,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":173691,"byte_end":173709,"line_start":884,"line_end":884,"column_start":5,"column_end":23}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":173714,"byte_end":173725,"line_start":885,"line_end":885,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":949},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":174651,"byte_end":174656,"line_start":912,"line_end":912,"column_start":12,"column_end":17},"name":"alter","qualname":"<OrdMap<K, V>>::alter","value":"fn alter<F>(&Self, F, K) -> Self where F: FnOnce(Option<V>) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Update the value for a given key by calling a function with\n the current value and overwriting it with the function's\n return value.","sig":null,"attributes":[{"value":"/ Update the value for a given key by calling a function with","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":174107,"byte_end":174170,"line_start":899,"line_end":899,"column_start":5,"column_end":68}},{"value":"/ the current value and overwriting it with the function's","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":174175,"byte_end":174235,"line_start":900,"line_end":900,"column_start":5,"column_end":65}},{"value":"/ return value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":174240,"byte_end":174257,"line_start":901,"line_end":901,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":174262,"byte_end":174265,"line_start":902,"line_end":902,"column_start":5,"column_end":8}},{"value":"/ The function gets an [`Option<V>`][std::option::Option] and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":174270,"byte_end":174333,"line_start":903,"line_end":903,"column_start":5,"column_end":68}},{"value":"/ returns the same, so that it can decide to delete a mapping","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":174338,"byte_end":174401,"line_start":904,"line_end":904,"column_start":5,"column_end":68}},{"value":"/ instead of updating the value, and decide what to do if the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":174406,"byte_end":174469,"line_start":905,"line_end":905,"column_start":5,"column_end":68}},{"value":"/ key isn't in the map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":174474,"byte_end":174499,"line_start":906,"line_end":906,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":174504,"byte_end":174507,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":174512,"byte_end":174530,"line_start":908,"line_end":908,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":174535,"byte_end":174538,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ [std::option::Option]: https://doc.rust-lang.org/std/option/enum.Option.html","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":174543,"byte_end":174623,"line_start":910,"line_end":910,"column_start":5,"column_end":85}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":174628,"byte_end":174639,"line_start":911,"line_end":911,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":952},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":175187,"byte_end":175194,"line_start":929,"line_end":929,"column_start":12,"column_end":19},"name":"without","qualname":"<OrdMap<K, V>>::without","value":"fn without<BK>(&Self, &BK) -> Self where BK: Ord + ?Sized, K: Borrow<BK>","parent":null,"children":[],"decl_id":null,"docs":" Remove a key/value pair from a map, if it exists.","sig":null,"attributes":[{"value":"/ Remove a key/value pair from a map, if it exists.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":175075,"byte_end":175128,"line_start":925,"line_end":925,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":175133,"byte_end":175136,"line_start":926,"line_end":926,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":175141,"byte_end":175159,"line_start":927,"line_end":927,"column_start":5,"column_end":23}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":175164,"byte_end":175175,"line_start":928,"line_end":928,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":956},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":175574,"byte_end":175581,"line_start":944,"line_end":944,"column_start":12,"column_end":19},"name":"extract","qualname":"<OrdMap<K, V>>::extract","value":"fn extract<BK>(&Self, &BK) -> Option<(V, Self)> where BK: Ord + ?Sized,\nK: Borrow<BK>","parent":null,"children":[],"decl_id":null,"docs":" Remove a key/value pair from a map, if it exists, and return\n the removed value as well as the updated list.","sig":null,"attributes":[{"value":"/ Remove a key/value pair from a map, if it exists, and return","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":175396,"byte_end":175460,"line_start":939,"line_end":939,"column_start":5,"column_end":69}},{"value":"/ the removed value as well as the updated list.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":175465,"byte_end":175515,"line_start":940,"line_end":940,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":175520,"byte_end":175523,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":175528,"byte_end":175546,"line_start":942,"line_end":942,"column_start":5,"column_end":23}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":175551,"byte_end":175562,"line_start":943,"line_end":943,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":959},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":175941,"byte_end":175957,"line_start":957,"line_end":957,"column_start":12,"column_end":28},"name":"extract_with_key","qualname":"<OrdMap<K, V>>::extract_with_key","value":"fn extract_with_key<BK>(&Self, &BK) -> Option<(K, V, Self)> where BK: Ord +\n?Sized, K: Borrow<BK>","parent":null,"children":[],"decl_id":null,"docs":" Remove a key/value pair from a map, if it exists, and return\n the removed key and value as well as the updated list.","sig":null,"attributes":[{"value":"/ Remove a key/value pair from a map, if it exists, and return","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":175755,"byte_end":175819,"line_start":952,"line_end":952,"column_start":5,"column_end":69}},{"value":"/ the removed key and value as well as the updated list.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":175824,"byte_end":175882,"line_start":953,"line_end":953,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":175887,"byte_end":175890,"line_start":954,"line_end":954,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":175895,"byte_end":175913,"line_start":955,"line_end":955,"column_start":5,"column_end":23}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":175918,"byte_end":175929,"line_start":956,"line_end":956,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":962},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":176711,"byte_end":176716,"line_start":984,"line_end":984,"column_start":12,"column_end":17},"name":"union","qualname":"<OrdMap<K, V>>::union","value":"fn union(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct the union of two maps, keeping the values in the\n current map when keys exist in both maps.","sig":null,"attributes":[{"value":"/ Construct the union of two maps, keeping the values in the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":176199,"byte_end":176261,"line_start":967,"line_end":967,"column_start":5,"column_end":67}},{"value":"/ current map when keys exist in both maps.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":176266,"byte_end":176311,"line_start":968,"line_end":968,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":176316,"byte_end":176319,"line_start":969,"line_end":969,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":176324,"byte_end":176344,"line_start":970,"line_end":970,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":176349,"byte_end":176352,"line_start":971,"line_end":971,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":176357,"byte_end":176371,"line_start":972,"line_end":972,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":176376,"byte_end":176379,"line_start":973,"line_end":973,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":176384,"byte_end":176391,"line_start":974,"line_end":974,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":176396,"byte_end":176431,"line_start":975,"line_end":975,"column_start":5,"column_end":40}},{"value":"/ # use im::ordmap::OrdMap;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":176436,"byte_end":176465,"line_start":976,"line_end":976,"column_start":5,"column_end":34}},{"value":"/ let map1 = ordmap!{1 => 1, 3 => 3};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":176470,"byte_end":176509,"line_start":977,"line_end":977,"column_start":5,"column_end":44}},{"value":"/ let map2 = ordmap!{2 => 2, 3 => 4};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":176514,"byte_end":176553,"line_start":978,"line_end":978,"column_start":5,"column_end":44}},{"value":"/ let expected = ordmap!{1 => 1, 2 => 2, 3 => 3};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":176558,"byte_end":176609,"line_start":979,"line_end":979,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(expected, map1.union(map2));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":176614,"byte_end":176657,"line_start":980,"line_end":980,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":176662,"byte_end":176669,"line_start":981,"line_end":981,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":176674,"byte_end":176683,"line_start":982,"line_end":982,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":176688,"byte_end":176699,"line_start":983,"line_end":983,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":963},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":177494,"byte_end":177504,"line_start":1007,"line_end":1007,"column_start":12,"column_end":22},"name":"union_with","qualname":"<OrdMap<K, V>>::union_with","value":"fn union_with<F>(Self, Self, F) -> Self where F: FnMut(V, V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Construct the union of two maps, using a function to decide\n what to do with the value when a key is in both maps.","sig":null,"attributes":[{"value":"/ Construct the union of two maps, using a function to decide","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":177018,"byte_end":177081,"line_start":996,"line_end":996,"column_start":5,"column_end":68}},{"value":"/ what to do with the value when a key is in both maps.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":177086,"byte_end":177143,"line_start":997,"line_end":997,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":177148,"byte_end":177151,"line_start":998,"line_end":998,"column_start":5,"column_end":8}},{"value":"/ The function is called when a value exists in both maps, and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":177156,"byte_end":177220,"line_start":999,"line_end":999,"column_start":5,"column_end":69}},{"value":"/ receives the value from the current map as its first argument,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":177225,"byte_end":177291,"line_start":1000,"line_end":1000,"column_start":5,"column_end":71}},{"value":"/ and the value from the other map as the second. It should","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":177296,"byte_end":177357,"line_start":1001,"line_end":1001,"column_start":5,"column_end":66}},{"value":"/ return the value to be inserted in the resulting map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":177362,"byte_end":177419,"line_start":1002,"line_end":1002,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":177424,"byte_end":177427,"line_start":1003,"line_end":1003,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":177432,"byte_end":177452,"line_start":1004,"line_end":1004,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":177457,"byte_end":177466,"line_start":1005,"line_end":1005,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":177471,"byte_end":177482,"line_start":1006,"line_end":1006,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":966},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":178585,"byte_end":178599,"line_start":1039,"line_end":1039,"column_start":12,"column_end":26},"name":"union_with_key","qualname":"<OrdMap<K, V>>::union_with_key","value":"fn union_with_key<F>(Self, Self, F) -> Self where\nF: for<'_> FnMut(&'_ K, V, V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Construct the union of two maps, using a function to decide\n what to do with the value when a key is in both maps.","sig":null,"attributes":[{"value":"/ Construct the union of two maps, using a function to decide","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":177659,"byte_end":177722,"line_start":1014,"line_end":1014,"column_start":5,"column_end":68}},{"value":"/ what to do with the value when a key is in both maps.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":177727,"byte_end":177784,"line_start":1015,"line_end":1015,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":177789,"byte_end":177792,"line_start":1016,"line_end":1016,"column_start":5,"column_end":8}},{"value":"/ The function is called when a value exists in both maps, and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":177797,"byte_end":177861,"line_start":1017,"line_end":1017,"column_start":5,"column_end":69}},{"value":"/ receives a reference to the key as its first argument, the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":177866,"byte_end":177928,"line_start":1018,"line_end":1018,"column_start":5,"column_end":67}},{"value":"/ value from the current map as the second argument, and the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":177933,"byte_end":177995,"line_start":1019,"line_end":1019,"column_start":5,"column_end":67}},{"value":"/ value from the other map as the third argument. It should","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":178000,"byte_end":178061,"line_start":1020,"line_end":1020,"column_start":5,"column_end":66}},{"value":"/ return the value to be inserted in the resulting map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":178066,"byte_end":178123,"line_start":1021,"line_end":1021,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":178128,"byte_end":178131,"line_start":1022,"line_end":1022,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":178136,"byte_end":178156,"line_start":1023,"line_end":1023,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":178161,"byte_end":178164,"line_start":1024,"line_end":1024,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":178169,"byte_end":178183,"line_start":1025,"line_end":1025,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":178188,"byte_end":178191,"line_start":1026,"line_end":1026,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":178196,"byte_end":178203,"line_start":1027,"line_end":1027,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":178208,"byte_end":178243,"line_start":1028,"line_end":1028,"column_start":5,"column_end":40}},{"value":"/ # use im::ordmap::OrdMap;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":178248,"byte_end":178277,"line_start":1029,"line_end":1029,"column_start":5,"column_end":34}},{"value":"/ let map1 = ordmap!{1 => 1, 3 => 4};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":178282,"byte_end":178321,"line_start":1030,"line_end":1030,"column_start":5,"column_end":44}},{"value":"/ let map2 = ordmap!{2 => 2, 3 => 5};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":178326,"byte_end":178365,"line_start":1031,"line_end":1031,"column_start":5,"column_end":44}},{"value":"/ let expected = ordmap!{1 => 1, 2 => 2, 3 => 9};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":178370,"byte_end":178421,"line_start":1032,"line_end":1032,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(expected, map1.union_with_key(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":178426,"byte_end":178471,"line_start":1033,"line_end":1033,"column_start":5,"column_end":50}},{"value":"/     map2,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":178476,"byte_end":178489,"line_start":1034,"line_end":1034,"column_start":5,"column_end":18}},{"value":"/     |key, left, right| left + right","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":178494,"byte_end":178533,"line_start":1035,"line_end":1035,"column_start":5,"column_end":44}},{"value":"/ ));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":178538,"byte_end":178545,"line_start":1036,"line_end":1036,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":178550,"byte_end":178557,"line_start":1037,"line_end":1037,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":178562,"byte_end":178573,"line_start":1038,"line_end":1038,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":971},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":179999,"byte_end":180005,"line_start":1086,"line_end":1086,"column_start":12,"column_end":18},"name":"unions","qualname":"<OrdMap<K, V>>::unions","value":"fn unions<I>(I) -> Self where I: IntoIterator<Item = Self>","parent":null,"children":[],"decl_id":null,"docs":" Construct the union of a sequence of maps, selecting the value\n of the leftmost when a key appears in more than one map.","sig":null,"attributes":[{"value":"/ Construct the union of a sequence of maps, selecting the value","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":179474,"byte_end":179540,"line_start":1070,"line_end":1070,"column_start":5,"column_end":71}},{"value":"/ of the leftmost when a key appears in more than one map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":179545,"byte_end":179605,"line_start":1071,"line_end":1071,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":179610,"byte_end":179613,"line_start":1072,"line_end":1072,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":179618,"byte_end":179638,"line_start":1073,"line_end":1073,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":179643,"byte_end":179646,"line_start":1074,"line_end":1074,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":179651,"byte_end":179665,"line_start":1075,"line_end":1075,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":179670,"byte_end":179673,"line_start":1076,"line_end":1076,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":179678,"byte_end":179685,"line_start":1077,"line_end":1077,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":179690,"byte_end":179725,"line_start":1078,"line_end":1078,"column_start":5,"column_end":40}},{"value":"/ # use im::ordmap::OrdMap;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":179730,"byte_end":179759,"line_start":1079,"line_end":1079,"column_start":5,"column_end":34}},{"value":"/ let map1 = ordmap!{1 => 1, 3 => 3};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":179764,"byte_end":179803,"line_start":1080,"line_end":1080,"column_start":5,"column_end":44}},{"value":"/ let map2 = ordmap!{2 => 2};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":179808,"byte_end":179839,"line_start":1081,"line_end":1081,"column_start":5,"column_end":36}},{"value":"/ let expected = ordmap!{1 => 1, 2 => 2, 3 => 3};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":179844,"byte_end":179895,"line_start":1082,"line_end":1082,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(expected, OrdMap::unions(vec![map1, map2]));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":179900,"byte_end":179959,"line_start":1083,"line_end":1083,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":179964,"byte_end":179971,"line_start":1084,"line_end":1084,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":179976,"byte_end":179987,"line_start":1085,"line_end":1085,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":973},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":180636,"byte_end":180647,"line_start":1104,"line_end":1104,"column_start":12,"column_end":23},"name":"unions_with","qualname":"<OrdMap<K, V>>::unions_with","value":"fn unions_with<I, F>(I, F) -> Self where I: IntoIterator<Item = Self>,\nF: Fn(V, V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Construct the union of a sequence of maps, using a function to\n decide what to do with the value when a key is in more than\n one map.","sig":null,"attributes":[{"value":"/ Construct the union of a sequence of maps, using a function to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":180145,"byte_end":180211,"line_start":1093,"line_end":1093,"column_start":5,"column_end":71}},{"value":"/ decide what to do with the value when a key is in more than","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":180216,"byte_end":180279,"line_start":1094,"line_end":1094,"column_start":5,"column_end":68}},{"value":"/ one map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":180284,"byte_end":180296,"line_start":1095,"line_end":1095,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":180301,"byte_end":180304,"line_start":1096,"line_end":1096,"column_start":5,"column_end":8}},{"value":"/ The function is called when a value exists in multiple maps,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":180309,"byte_end":180373,"line_start":1097,"line_end":1097,"column_start":5,"column_end":69}},{"value":"/ and receives the value from the current map as its first","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":180378,"byte_end":180438,"line_start":1098,"line_end":1098,"column_start":5,"column_end":65}},{"value":"/ argument, and the value from the next map as the second. It","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":180443,"byte_end":180506,"line_start":1099,"line_end":1099,"column_start":5,"column_end":68}},{"value":"/ should return the value to be inserted in the resulting map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":180511,"byte_end":180575,"line_start":1100,"line_end":1100,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":180580,"byte_end":180583,"line_start":1101,"line_end":1101,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":180588,"byte_end":180608,"line_start":1102,"line_end":1102,"column_start":5,"column_end":25}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":180613,"byte_end":180624,"line_start":1103,"line_end":1103,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":977},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":181404,"byte_end":181419,"line_start":1125,"line_end":1125,"column_start":12,"column_end":27},"name":"unions_with_key","qualname":"<OrdMap<K, V>>::unions_with_key","value":"fn unions_with_key<I, F>(I, F) -> Self where I: IntoIterator<Item = Self>,\nF: for<'_> Fn(&'_ K, V, V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Construct the union of a sequence of maps, using a function to\n decide what to do with the value when a key is in more than\n one map.","sig":null,"attributes":[{"value":"/ Construct the union of a sequence of maps, using a function to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":180850,"byte_end":180916,"line_start":1113,"line_end":1113,"column_start":5,"column_end":71}},{"value":"/ decide what to do with the value when a key is in more than","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":180921,"byte_end":180984,"line_start":1114,"line_end":1114,"column_start":5,"column_end":68}},{"value":"/ one map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":180989,"byte_end":181001,"line_start":1115,"line_end":1115,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":181006,"byte_end":181009,"line_start":1116,"line_end":1116,"column_start":5,"column_end":8}},{"value":"/ The function is called when a value exists in multiple maps,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":181014,"byte_end":181078,"line_start":1117,"line_end":1117,"column_start":5,"column_end":69}},{"value":"/ and receives a reference to the key as its first argument, the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":181083,"byte_end":181149,"line_start":1118,"line_end":1118,"column_start":5,"column_end":71}},{"value":"/ value from the current map as the second argument, and the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":181154,"byte_end":181216,"line_start":1119,"line_end":1119,"column_start":5,"column_end":67}},{"value":"/ value from the next map as the third argument. It should","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":181221,"byte_end":181281,"line_start":1120,"line_end":1120,"column_start":5,"column_end":65}},{"value":"/ return the value to be inserted in the resulting map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":181286,"byte_end":181343,"line_start":1121,"line_end":1121,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":181348,"byte_end":181351,"line_start":1122,"line_end":1122,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":181356,"byte_end":181376,"line_start":1123,"line_end":1123,"column_start":5,"column_end":25}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":181381,"byte_end":181392,"line_start":1124,"line_end":1124,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":981},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":182308,"byte_end":182318,"line_start":1156,"line_end":1156,"column_start":12,"column_end":22},"name":"difference","qualname":"<OrdMap<K, V>>::difference","value":"fn difference(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct the symmetric difference between two maps by discarding keys\n which occur in both maps.","sig":null,"attributes":[{"value":"/ Construct the symmetric difference between two maps by discarding keys","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":181630,"byte_end":181704,"line_start":1134,"line_end":1134,"column_start":5,"column_end":79}},{"value":"/ which occur in both maps.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":181709,"byte_end":181738,"line_start":1135,"line_end":1135,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":181743,"byte_end":181746,"line_start":1136,"line_end":1136,"column_start":5,"column_end":8}},{"value":"/ This is an alias for the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":181751,"byte_end":181779,"line_start":1137,"line_end":1137,"column_start":5,"column_end":33}},{"value":"/ [`symmetric_difference`][symmetric_difference] method.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":181784,"byte_end":181842,"line_start":1138,"line_end":1138,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":181847,"byte_end":181850,"line_start":1139,"line_end":1139,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":181855,"byte_end":181875,"line_start":1140,"line_end":1140,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":181880,"byte_end":181883,"line_start":1141,"line_end":1141,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":181888,"byte_end":181902,"line_start":1142,"line_end":1142,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":181907,"byte_end":181910,"line_start":1143,"line_end":1143,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":181915,"byte_end":181922,"line_start":1144,"line_end":1144,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":181927,"byte_end":181962,"line_start":1145,"line_end":1145,"column_start":5,"column_end":40}},{"value":"/ # use im::ordmap::OrdMap;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":181967,"byte_end":181996,"line_start":1146,"line_end":1146,"column_start":5,"column_end":34}},{"value":"/ let map1 = ordmap!{1 => 1, 3 => 4};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":182001,"byte_end":182040,"line_start":1147,"line_end":1147,"column_start":5,"column_end":44}},{"value":"/ let map2 = ordmap!{2 => 2, 3 => 5};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":182045,"byte_end":182084,"line_start":1148,"line_end":1148,"column_start":5,"column_end":44}},{"value":"/ let expected = ordmap!{1 => 1, 2 => 2};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":182089,"byte_end":182132,"line_start":1149,"line_end":1149,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(expected, map1.difference(map2));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":182137,"byte_end":182185,"line_start":1150,"line_end":1150,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":182190,"byte_end":182197,"line_start":1151,"line_end":1151,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":182202,"byte_end":182205,"line_start":1152,"line_end":1152,"column_start":5,"column_end":8}},{"value":"/ [symmetric_difference]: #method.symmetric_difference","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":182210,"byte_end":182266,"line_start":1153,"line_end":1153,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":182271,"byte_end":182280,"line_start":1154,"line_end":1154,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":182285,"byte_end":182296,"line_start":1155,"line_end":1155,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":982},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":182915,"byte_end":182935,"line_start":1177,"line_end":1177,"column_start":12,"column_end":32},"name":"symmetric_difference","qualname":"<OrdMap<K, V>>::symmetric_difference","value":"fn symmetric_difference(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct the symmetric difference between two maps by discarding keys\n which occur in both maps.","sig":null,"attributes":[{"value":"/ Construct the symmetric difference between two maps by discarding keys","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":182400,"byte_end":182474,"line_start":1160,"line_end":1160,"column_start":5,"column_end":79}},{"value":"/ which occur in both maps.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":182479,"byte_end":182508,"line_start":1161,"line_end":1161,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":182513,"byte_end":182516,"line_start":1162,"line_end":1162,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":182521,"byte_end":182541,"line_start":1163,"line_end":1163,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":182546,"byte_end":182549,"line_start":1164,"line_end":1164,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":182554,"byte_end":182568,"line_start":1165,"line_end":1165,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":182573,"byte_end":182576,"line_start":1166,"line_end":1166,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":182581,"byte_end":182588,"line_start":1167,"line_end":1167,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":182593,"byte_end":182628,"line_start":1168,"line_end":1168,"column_start":5,"column_end":40}},{"value":"/ # use im::ordmap::OrdMap;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":182633,"byte_end":182662,"line_start":1169,"line_end":1169,"column_start":5,"column_end":34}},{"value":"/ let map1 = ordmap!{1 => 1, 3 => 4};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":182667,"byte_end":182706,"line_start":1170,"line_end":1170,"column_start":5,"column_end":44}},{"value":"/ let map2 = ordmap!{2 => 2, 3 => 5};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":182711,"byte_end":182750,"line_start":1171,"line_end":1171,"column_start":5,"column_end":44}},{"value":"/ let expected = ordmap!{1 => 1, 2 => 2};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":182755,"byte_end":182798,"line_start":1172,"line_end":1172,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(expected, map1.symmetric_difference(map2));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":182803,"byte_end":182861,"line_start":1173,"line_end":1173,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":182866,"byte_end":182873,"line_start":1174,"line_end":1174,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":182878,"byte_end":182887,"line_start":1175,"line_end":1175,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":182892,"byte_end":182903,"line_start":1176,"line_end":1176,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":984},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":183439,"byte_end":183454,"line_start":1192,"line_end":1192,"column_start":12,"column_end":27},"name":"difference_with","qualname":"<OrdMap<K, V>>::difference_with","value":"fn difference_with<F>(Self, Self, F) -> Self where F: FnMut(V, V) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Construct the symmetric difference between two maps by using a function\n to decide what to do if a key occurs in both.","sig":null,"attributes":[{"value":"/ Construct the symmetric difference between two maps by using a function","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":183042,"byte_end":183117,"line_start":1181,"line_end":1181,"column_start":5,"column_end":80}},{"value":"/ to decide what to do if a key occurs in both.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":183122,"byte_end":183171,"line_start":1182,"line_end":1182,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":183176,"byte_end":183179,"line_start":1183,"line_end":1183,"column_start":5,"column_end":8}},{"value":"/ This is an alias for the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":183184,"byte_end":183212,"line_start":1184,"line_end":1184,"column_start":5,"column_end":33}},{"value":"/ [`symmetric_difference_with`][symmetric_difference_with] method.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":183217,"byte_end":183285,"line_start":1185,"line_end":1185,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":183290,"byte_end":183293,"line_start":1186,"line_end":1186,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":183298,"byte_end":183318,"line_start":1187,"line_end":1187,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":183323,"byte_end":183326,"line_start":1188,"line_end":1188,"column_start":5,"column_end":8}},{"value":"/ [symmetric_difference_with]: #method.symmetric_difference_with","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":183331,"byte_end":183397,"line_start":1189,"line_end":1189,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":183402,"byte_end":183411,"line_start":1190,"line_end":1190,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":183416,"byte_end":183427,"line_start":1191,"line_end":1191,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":986},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":183808,"byte_end":183833,"line_start":1205,"line_end":1205,"column_start":12,"column_end":37},"name":"symmetric_difference_with","qualname":"<OrdMap<K, V>>::symmetric_difference_with","value":"fn symmetric_difference_with<F>(Self, Self, F) -> Self where F: FnMut(V, V) ->\nOption<V>","parent":null,"children":[],"decl_id":null,"docs":" Construct the symmetric difference between two maps by using a function\n to decide what to do if a key occurs in both.","sig":null,"attributes":[{"value":"/ Construct the symmetric difference between two maps by using a function","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":183604,"byte_end":183679,"line_start":1199,"line_end":1199,"column_start":5,"column_end":80}},{"value":"/ to decide what to do if a key occurs in both.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":183684,"byte_end":183733,"line_start":1200,"line_end":1200,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":183738,"byte_end":183741,"line_start":1201,"line_end":1201,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":183746,"byte_end":183766,"line_start":1202,"line_end":1202,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":183771,"byte_end":183780,"line_start":1203,"line_end":1203,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":183785,"byte_end":183796,"line_start":1204,"line_end":1204,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":989},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":184880,"byte_end":184899,"line_start":1237,"line_end":1237,"column_start":12,"column_end":31},"name":"difference_with_key","qualname":"<OrdMap<K, V>>::difference_with_key","value":"fn difference_with_key<F>(Self, Self, F) -> Self where\nF: for<'_> FnMut(&'_ K, V, V) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Construct the symmetric difference between two maps by using a function\n to decide what to do if a key occurs in both. The function\n receives the key as well as both values.","sig":null,"attributes":[{"value":"/ Construct the symmetric difference between two maps by using a function","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":184007,"byte_end":184082,"line_start":1212,"line_end":1212,"column_start":5,"column_end":80}},{"value":"/ to decide what to do if a key occurs in both. The function","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":184087,"byte_end":184149,"line_start":1213,"line_end":1213,"column_start":5,"column_end":67}},{"value":"/ receives the key as well as both values.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":184154,"byte_end":184198,"line_start":1214,"line_end":1214,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":184203,"byte_end":184206,"line_start":1215,"line_end":1215,"column_start":5,"column_end":8}},{"value":"/ This is an alias for the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":184211,"byte_end":184239,"line_start":1216,"line_end":1216,"column_start":5,"column_end":33}},{"value":"/ [`symmetric_difference_with_key`][symmetric_difference_with_key]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":184244,"byte_end":184312,"line_start":1217,"line_end":1217,"column_start":5,"column_end":73}},{"value":"/ method.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":184317,"byte_end":184328,"line_start":1218,"line_end":1218,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":184333,"byte_end":184336,"line_start":1219,"line_end":1219,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":184341,"byte_end":184361,"line_start":1220,"line_end":1220,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":184366,"byte_end":184369,"line_start":1221,"line_end":1221,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":184374,"byte_end":184388,"line_start":1222,"line_end":1222,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":184393,"byte_end":184396,"line_start":1223,"line_end":1223,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":184401,"byte_end":184408,"line_start":1224,"line_end":1224,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":184413,"byte_end":184448,"line_start":1225,"line_end":1225,"column_start":5,"column_end":40}},{"value":"/ # use im::ordmap::OrdMap;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":184453,"byte_end":184482,"line_start":1226,"line_end":1226,"column_start":5,"column_end":34}},{"value":"/ let map1 = ordmap!{1 => 1, 3 => 4};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":184487,"byte_end":184526,"line_start":1227,"line_end":1227,"column_start":5,"column_end":44}},{"value":"/ let map2 = ordmap!{2 => 2, 3 => 5};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":184531,"byte_end":184570,"line_start":1228,"line_end":1228,"column_start":5,"column_end":44}},{"value":"/ let expected = ordmap!{1 => 1, 2 => 2, 3 => 9};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":184575,"byte_end":184626,"line_start":1229,"line_end":1229,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(expected, map1.difference_with_key(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":184631,"byte_end":184681,"line_start":1230,"line_end":1230,"column_start":5,"column_end":55}},{"value":"/     map2,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":184686,"byte_end":184699,"line_start":1231,"line_end":1231,"column_start":5,"column_end":18}},{"value":"/     |key, left, right| Some(left + right)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":184704,"byte_end":184749,"line_start":1232,"line_end":1232,"column_start":5,"column_end":50}},{"value":"/ ));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":184754,"byte_end":184761,"line_start":1233,"line_end":1233,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":184766,"byte_end":184773,"line_start":1234,"line_end":1234,"column_start":5,"column_end":12}},{"value":"/ [symmetric_difference_with_key]: #method.symmetric_difference_with_key","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":184778,"byte_end":184852,"line_start":1235,"line_end":1235,"column_start":5,"column_end":79}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":184857,"byte_end":184868,"line_start":1236,"line_end":1236,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":991},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":185731,"byte_end":185760,"line_start":1264,"line_end":1264,"column_start":12,"column_end":41},"name":"symmetric_difference_with_key","qualname":"<OrdMap<K, V>>::symmetric_difference_with_key","value":"fn symmetric_difference_with_key<F>(Self, Self, F) -> Self where\nF: for<'_> FnMut(&'_ K, V, V) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Construct the symmetric difference between two maps by using a function\n to decide what to do if a key occurs in both. The function\n receives the key as well as both values.","sig":null,"attributes":[{"value":"/ Construct the symmetric difference between two maps by using a function","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":185057,"byte_end":185132,"line_start":1244,"line_end":1244,"column_start":5,"column_end":80}},{"value":"/ to decide what to do if a key occurs in both. The function","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":185137,"byte_end":185199,"line_start":1245,"line_end":1245,"column_start":5,"column_end":67}},{"value":"/ receives the key as well as both values.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":185204,"byte_end":185248,"line_start":1246,"line_end":1246,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":185253,"byte_end":185256,"line_start":1247,"line_end":1247,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":185261,"byte_end":185281,"line_start":1248,"line_end":1248,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":185286,"byte_end":185289,"line_start":1249,"line_end":1249,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":185294,"byte_end":185308,"line_start":1250,"line_end":1250,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":185313,"byte_end":185316,"line_start":1251,"line_end":1251,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":185321,"byte_end":185328,"line_start":1252,"line_end":1252,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":185333,"byte_end":185368,"line_start":1253,"line_end":1253,"column_start":5,"column_end":40}},{"value":"/ # use im::ordmap::OrdMap;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":185373,"byte_end":185402,"line_start":1254,"line_end":1254,"column_start":5,"column_end":34}},{"value":"/ let map1 = ordmap!{1 => 1, 3 => 4};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":185407,"byte_end":185446,"line_start":1255,"line_end":1255,"column_start":5,"column_end":44}},{"value":"/ let map2 = ordmap!{2 => 2, 3 => 5};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":185451,"byte_end":185490,"line_start":1256,"line_end":1256,"column_start":5,"column_end":44}},{"value":"/ let expected = ordmap!{1 => 1, 2 => 2, 3 => 9};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":185495,"byte_end":185546,"line_start":1257,"line_end":1257,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(expected, map1.symmetric_difference_with_key(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":185551,"byte_end":185611,"line_start":1258,"line_end":1258,"column_start":5,"column_end":65}},{"value":"/     map2,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":185616,"byte_end":185629,"line_start":1259,"line_end":1259,"column_start":5,"column_end":18}},{"value":"/     |key, left, right| Some(left + right)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":185634,"byte_end":185679,"line_start":1260,"line_end":1260,"column_start":5,"column_end":50}},{"value":"/ ));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":185684,"byte_end":185691,"line_start":1261,"line_end":1261,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":185696,"byte_end":185703,"line_start":1262,"line_end":1262,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":185708,"byte_end":185719,"line_start":1263,"line_end":1263,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":993},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":186888,"byte_end":186907,"line_start":1301,"line_end":1301,"column_start":12,"column_end":31},"name":"relative_complement","qualname":"<OrdMap<K, V>>::relative_complement","value":"fn relative_complement(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct the relative complement between two maps by discarding keys\n which occur in `other`.","sig":null,"attributes":[{"value":"/ Construct the relative complement between two maps by discarding keys","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":186348,"byte_end":186421,"line_start":1284,"line_end":1284,"column_start":5,"column_end":78}},{"value":"/ which occur in `other`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":186426,"byte_end":186453,"line_start":1285,"line_end":1285,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":186458,"byte_end":186461,"line_start":1286,"line_end":1286,"column_start":5,"column_end":8}},{"value":"/ Time: O(m log n) where m is the size of the other map","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":186466,"byte_end":186523,"line_start":1287,"line_end":1287,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":186528,"byte_end":186531,"line_start":1288,"line_end":1288,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":186536,"byte_end":186550,"line_start":1289,"line_end":1289,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":186555,"byte_end":186558,"line_start":1290,"line_end":1290,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":186563,"byte_end":186570,"line_start":1291,"line_end":1291,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":186575,"byte_end":186610,"line_start":1292,"line_end":1292,"column_start":5,"column_end":40}},{"value":"/ # use im::ordmap::OrdMap;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":186615,"byte_end":186644,"line_start":1293,"line_end":1293,"column_start":5,"column_end":34}},{"value":"/ let map1 = ordmap!{1 => 1, 3 => 4};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":186649,"byte_end":186688,"line_start":1294,"line_end":1294,"column_start":5,"column_end":44}},{"value":"/ let map2 = ordmap!{2 => 2, 3 => 5};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":186693,"byte_end":186732,"line_start":1295,"line_end":1295,"column_start":5,"column_end":44}},{"value":"/ let expected = ordmap!{1 => 1};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":186737,"byte_end":186772,"line_start":1296,"line_end":1296,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(expected, map1.relative_complement(map2));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":186777,"byte_end":186834,"line_start":1297,"line_end":1297,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":186839,"byte_end":186846,"line_start":1298,"line_end":1298,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":186851,"byte_end":186860,"line_start":1299,"line_end":1299,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":186865,"byte_end":186876,"line_start":1300,"line_end":1300,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":994},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":187529,"byte_end":187541,"line_start":1325,"line_end":1325,"column_start":12,"column_end":24},"name":"intersection","qualname":"<OrdMap<K, V>>::intersection","value":"fn intersection(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct the intersection of two maps, keeping the values\n from the current map.","sig":null,"attributes":[{"value":"/ Construct the intersection of two maps, keeping the values","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":187046,"byte_end":187108,"line_start":1308,"line_end":1308,"column_start":5,"column_end":67}},{"value":"/ from the current map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":187113,"byte_end":187138,"line_start":1309,"line_end":1309,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":187143,"byte_end":187146,"line_start":1310,"line_end":1310,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":187151,"byte_end":187171,"line_start":1311,"line_end":1311,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":187176,"byte_end":187179,"line_start":1312,"line_end":1312,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":187184,"byte_end":187198,"line_start":1313,"line_end":1313,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":187203,"byte_end":187206,"line_start":1314,"line_end":1314,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":187211,"byte_end":187218,"line_start":1315,"line_end":1315,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":187223,"byte_end":187258,"line_start":1316,"line_end":1316,"column_start":5,"column_end":40}},{"value":"/ # use im::ordmap::OrdMap;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":187263,"byte_end":187292,"line_start":1317,"line_end":1317,"column_start":5,"column_end":34}},{"value":"/ let map1 = ordmap!{1 => 1, 2 => 2};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":187297,"byte_end":187336,"line_start":1318,"line_end":1318,"column_start":5,"column_end":44}},{"value":"/ let map2 = ordmap!{2 => 3, 3 => 4};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":187341,"byte_end":187380,"line_start":1319,"line_end":1319,"column_start":5,"column_end":44}},{"value":"/ let expected = ordmap!{2 => 2};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":187385,"byte_end":187420,"line_start":1320,"line_end":1320,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(expected, map1.intersection(map2));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":187425,"byte_end":187475,"line_start":1321,"line_end":1321,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":187480,"byte_end":187487,"line_start":1322,"line_end":1322,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":187492,"byte_end":187501,"line_start":1323,"line_end":1323,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":187506,"byte_end":187517,"line_start":1324,"line_end":1324,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":996},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":187867,"byte_end":187884,"line_start":1336,"line_end":1336,"column_start":12,"column_end":29},"name":"intersection_with","qualname":"<OrdMap<K, V>>::intersection_with","value":"fn intersection_with<B, C, F>(Self, OrdMap<K, B>, F) -> OrdMap<K, C> where\nB: Clone, C: Clone, F: FnMut(V, B) -> C","parent":null,"children":[],"decl_id":null,"docs":" Construct the intersection of two maps, calling a function\n with both values for each key and using the result as the\n value for the key.","sig":null,"attributes":[{"value":"/ Construct the intersection of two maps, calling a function","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":187637,"byte_end":187699,"line_start":1329,"line_end":1329,"column_start":5,"column_end":67}},{"value":"/ with both values for each key and using the result as the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":187704,"byte_end":187765,"line_start":1330,"line_end":1330,"column_start":5,"column_end":66}},{"value":"/ value for the key.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":187770,"byte_end":187792,"line_start":1331,"line_end":1331,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":187797,"byte_end":187800,"line_start":1332,"line_end":1332,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":187805,"byte_end":187825,"line_start":1333,"line_end":1333,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":187830,"byte_end":187839,"line_start":1334,"line_end":1334,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":187844,"byte_end":187855,"line_start":1335,"line_end":1335,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1001},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":188724,"byte_end":188745,"line_start":1365,"line_end":1365,"column_start":12,"column_end":33},"name":"intersection_with_key","qualname":"<OrdMap<K, V>>::intersection_with_key","value":"fn intersection_with_key<B, C, F>(Self, OrdMap<K, B>, F) -> OrdMap<K, C> where\nB: Clone, C: Clone, F: for<'_> FnMut(&'_ K, V, B) -> C","parent":null,"children":[],"decl_id":null,"docs":" Construct the intersection of two maps, calling a function\n with the key and both values for each key and using the result\n as the value for the key.","sig":null,"attributes":[{"value":"/ Construct the intersection of two maps, calling a function","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":188104,"byte_end":188166,"line_start":1345,"line_end":1345,"column_start":5,"column_end":67}},{"value":"/ with the key and both values for each key and using the result","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":188171,"byte_end":188237,"line_start":1346,"line_end":1346,"column_start":5,"column_end":71}},{"value":"/ as the value for the key.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":188242,"byte_end":188271,"line_start":1347,"line_end":1347,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":188276,"byte_end":188279,"line_start":1348,"line_end":1348,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":188284,"byte_end":188304,"line_start":1349,"line_end":1349,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":188309,"byte_end":188312,"line_start":1350,"line_end":1350,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":188317,"byte_end":188331,"line_start":1351,"line_end":1351,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":188336,"byte_end":188339,"line_start":1352,"line_end":1352,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":188344,"byte_end":188351,"line_start":1353,"line_end":1353,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":188356,"byte_end":188391,"line_start":1354,"line_end":1354,"column_start":5,"column_end":40}},{"value":"/ # use im::ordmap::OrdMap;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":188396,"byte_end":188425,"line_start":1355,"line_end":1355,"column_start":5,"column_end":34}},{"value":"/ let map1 = ordmap!{1 => 1, 2 => 2};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":188430,"byte_end":188469,"line_start":1356,"line_end":1356,"column_start":5,"column_end":44}},{"value":"/ let map2 = ordmap!{2 => 3, 3 => 4};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":188474,"byte_end":188513,"line_start":1357,"line_end":1357,"column_start":5,"column_end":44}},{"value":"/ let expected = ordmap!{2 => 5};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":188518,"byte_end":188553,"line_start":1358,"line_end":1358,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(expected, map1.intersection_with_key(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":188558,"byte_end":188610,"line_start":1359,"line_end":1359,"column_start":5,"column_end":57}},{"value":"/     map2,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":188615,"byte_end":188628,"line_start":1360,"line_end":1360,"column_start":5,"column_end":18}},{"value":"/     |key, left, right| left + right","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":188633,"byte_end":188672,"line_start":1361,"line_end":1361,"column_start":5,"column_end":44}},{"value":"/ ));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":188677,"byte_end":188684,"line_start":1362,"line_end":1362,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":188689,"byte_end":188696,"line_start":1363,"line_end":1363,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":188701,"byte_end":188712,"line_start":1364,"line_end":1364,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1005},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":189529,"byte_end":189534,"line_start":1390,"line_end":1390,"column_start":12,"column_end":17},"name":"split","qualname":"<OrdMap<K, V>>::split","value":"fn split<BK>(&Self, &BK) -> (Self, Self) where BK: Ord + ?Sized, K: Borrow<BK>","parent":null,"children":[],"decl_id":null,"docs":" Split a map into two, with the left hand map containing keys\n which are smaller than `split`, and the right hand map\n containing keys which are larger than `split`.","sig":null,"attributes":[{"value":"/ Split a map into two, with the left hand map containing keys","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":189269,"byte_end":189333,"line_start":1384,"line_end":1384,"column_start":5,"column_end":69}},{"value":"/ which are smaller than `split`, and the right hand map","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":189338,"byte_end":189396,"line_start":1385,"line_end":1385,"column_start":5,"column_end":63}},{"value":"/ containing keys which are larger than `split`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":189401,"byte_end":189451,"line_start":1386,"line_end":1386,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":189456,"byte_end":189459,"line_start":1387,"line_end":1387,"column_start":5,"column_end":8}},{"value":"/ The `split` mapping is discarded.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":189464,"byte_end":189501,"line_start":1388,"line_end":1388,"column_start":5,"column_end":42}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":189506,"byte_end":189517,"line_start":1389,"line_end":1389,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1007},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":189993,"byte_end":190005,"line_start":1405,"line_end":1405,"column_start":12,"column_end":24},"name":"split_lookup","qualname":"<OrdMap<K, V>>::split_lookup","value":"fn split_lookup<BK>(&Self, &BK) -> (Self, Option<V>, Self) where BK: Ord +\n?Sized, K: Borrow<BK>","parent":null,"children":[],"decl_id":null,"docs":" Split a map into two, with the left hand map containing keys\n which are smaller than `split`, and the right hand map\n containing keys which are larger than `split`.","sig":null,"attributes":[{"value":"/ Split a map into two, with the left hand map containing keys","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":189715,"byte_end":189779,"line_start":1399,"line_end":1399,"column_start":5,"column_end":69}},{"value":"/ which are smaller than `split`, and the right hand map","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":189784,"byte_end":189842,"line_start":1400,"line_end":1400,"column_start":5,"column_end":63}},{"value":"/ containing keys which are larger than `split`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":189847,"byte_end":189897,"line_start":1401,"line_end":1401,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":189902,"byte_end":189905,"line_start":1402,"line_end":1402,"column_start":5,"column_end":8}},{"value":"/ Returns both the two maps and the value of `split`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":189910,"byte_end":189965,"line_start":1403,"line_end":1403,"column_start":5,"column_end":60}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":189970,"byte_end":189981,"line_start":1404,"line_end":1404,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1010},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":190694,"byte_end":190698,"line_start":1424,"line_end":1424,"column_start":12,"column_end":16},"name":"take","qualname":"<OrdMap<K, V>>::take","value":"fn take(&Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a map with only the `n` smallest keys from a given\n map.\n","sig":null,"attributes":[{"value":"/ Construct a map with only the `n` smallest keys from a given","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":190589,"byte_end":190653,"line_start":1421,"line_end":1421,"column_start":5,"column_end":69}},{"value":"/ map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":190658,"byte_end":190666,"line_start":1422,"line_end":1422,"column_start":5,"column_end":13}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":190671,"byte_end":190682,"line_start":1423,"line_end":1423,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1012},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":190959,"byte_end":190963,"line_start":1434,"line_end":1434,"column_start":12,"column_end":16},"name":"skip","qualname":"<OrdMap<K, V>>::skip","value":"fn skip(&Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a map with the `n` smallest keys removed from a\n given map.\n","sig":null,"attributes":[{"value":"/ Construct a map with the `n` smallest keys removed from a","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":190851,"byte_end":190912,"line_start":1431,"line_end":1431,"column_start":5,"column_end":66}},{"value":"/ given map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":190917,"byte_end":190931,"line_start":1432,"line_end":1432,"column_start":5,"column_end":19}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":190936,"byte_end":190947,"line_start":1433,"line_end":1433,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1014},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":191240,"byte_end":191251,"line_start":1444,"line_end":1444,"column_start":12,"column_end":23},"name":"without_min","qualname":"<OrdMap<K, V>>::without_min","value":"fn without_min(&Self) -> (Option<V>, Self)","parent":null,"children":[],"decl_id":null,"docs":" Remove the smallest key from a map, and return its value as\n well as the updated map.\n","sig":null,"attributes":[{"value":"/ Remove the smallest key from a map, and return its value as","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":191116,"byte_end":191179,"line_start":1441,"line_end":1441,"column_start":5,"column_end":68}},{"value":"/ well as the updated map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":191184,"byte_end":191212,"line_start":1442,"line_end":1442,"column_start":5,"column_end":33}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":191217,"byte_end":191228,"line_start":1443,"line_end":1443,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1016},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":191518,"byte_end":191538,"line_start":1452,"line_end":1452,"column_start":12,"column_end":32},"name":"without_min_with_key","qualname":"<OrdMap<K, V>>::without_min_with_key","value":"fn without_min_with_key(&Self) -> (Option<(K, V)>, Self)","parent":null,"children":[],"decl_id":null,"docs":" Remove the smallest key from a map, and return that key, its\n value as well as the updated map.\n","sig":null,"attributes":[{"value":"/ Remove the smallest key from a map, and return that key, its","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":191384,"byte_end":191448,"line_start":1449,"line_end":1449,"column_start":5,"column_end":69}},{"value":"/ value as well as the updated map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":191453,"byte_end":191490,"line_start":1450,"line_end":1450,"column_start":5,"column_end":42}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":191495,"byte_end":191506,"line_start":1451,"line_end":1451,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1017},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":191954,"byte_end":191965,"line_start":1465,"line_end":1465,"column_start":12,"column_end":23},"name":"without_max","qualname":"<OrdMap<K, V>>::without_max","value":"fn without_max(&Self) -> (Option<V>, Self)","parent":null,"children":[],"decl_id":null,"docs":" Remove the largest key from a map, and return its value as\n well as the updated map.\n","sig":null,"attributes":[{"value":"/ Remove the largest key from a map, and return its value as","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":191831,"byte_end":191893,"line_start":1462,"line_end":1462,"column_start":5,"column_end":67}},{"value":"/ well as the updated map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":191898,"byte_end":191926,"line_start":1463,"line_end":1463,"column_start":5,"column_end":33}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":191931,"byte_end":191942,"line_start":1464,"line_end":1464,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1019},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":192231,"byte_end":192251,"line_start":1473,"line_end":1473,"column_start":12,"column_end":32},"name":"without_max_with_key","qualname":"<OrdMap<K, V>>::without_max_with_key","value":"fn without_max_with_key(&Self) -> (Option<(K, V)>, Self)","parent":null,"children":[],"decl_id":null,"docs":" Remove the largest key from a map, and return that key, its\n value as well as the updated map.\n","sig":null,"attributes":[{"value":"/ Remove the largest key from a map, and return that key, its","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":192098,"byte_end":192161,"line_start":1470,"line_end":1470,"column_start":5,"column_end":68}},{"value":"/ value as well as the updated map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":192166,"byte_end":192203,"line_start":1471,"line_end":1471,"column_start":5,"column_end":42}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":192208,"byte_end":192219,"line_start":1472,"line_end":1472,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1020},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":192720,"byte_end":192725,"line_start":1489,"line_end":1489,"column_start":12,"column_end":17},"name":"entry","qualname":"<OrdMap<K, V>>::entry","value":"fn entry(&mut Self, K) -> Entry<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Get the [`Entry`][Entry] for a key in the map for in-place manipulation.","sig":null,"attributes":[{"value":"/ Get the [`Entry`][Entry] for a key in the map for in-place manipulation.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":192544,"byte_end":192620,"line_start":1483,"line_end":1483,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":192625,"byte_end":192628,"line_start":1484,"line_end":1484,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":192633,"byte_end":192651,"line_start":1485,"line_end":1485,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":192656,"byte_end":192659,"line_start":1486,"line_end":1486,"column_start":5,"column_end":8}},{"value":"/ [Entry]: enum.Entry.html","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":192664,"byte_end":192692,"line_start":1487,"line_end":1487,"column_start":5,"column_end":33}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":192697,"byte_end":192708,"line_start":1488,"line_end":1488,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1025},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":193133,"byte_end":193141,"line_start":1507,"line_end":1507,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::ord::map::Entry::Occupied","value":"Entry::Occupied(OccupiedEntry)","parent":{"krate":0,"index":1021},"children":[],"decl_id":null,"docs":" An entry which exists in the map.\n","sig":null,"attributes":[{"value":"/ An entry which exists in the map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":193091,"byte_end":193128,"line_start":1506,"line_end":1506,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":1027},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":193142,"byte_end":193165,"line_start":1507,"line_end":1507,"column_start":14,"column_end":37},"name":"0","qualname":"::ord::map::Entry::Occupied::0","value":"ord::map::OccupiedEntry<'a, K, V>","parent":{"krate":0,"index":1025},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1028},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":193221,"byte_end":193227,"line_start":1509,"line_end":1509,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::ord::map::Entry::Vacant","value":"Entry::Vacant(VacantEntry)","parent":{"krate":0,"index":1021},"children":[],"decl_id":null,"docs":" An entry which doesn't exist in the map.\n","sig":null,"attributes":[{"value":"/ An entry which doesn't exist in the map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":193172,"byte_end":193216,"line_start":1508,"line_end":1508,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":1030},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":193228,"byte_end":193249,"line_start":1509,"line_end":1509,"column_start":12,"column_end":33},"name":"0","qualname":"::ord::map::Entry::Vacant::0","value":"ord::map::VacantEntry<'a, K, V>","parent":{"krate":0,"index":1028},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1021},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":193029,"byte_end":193034,"line_start":1501,"line_end":1501,"column_start":10,"column_end":15},"name":"Entry","qualname":"::ord::map::Entry","value":"enum Entry<'a, K, V> where K: Ord + Clone, V: Clone {\n    Occupied(OccupiedEntry),\n    Vacant(VacantEntry),\n}","parent":null,"children":[{"krate":0,"index":1025},{"krate":0,"index":1028}],"decl_id":null,"docs":" A handle for a key and its associated value.\n","sig":null,"attributes":[{"value":"/ A handle for a key and its associated value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":192971,"byte_end":193019,"line_start":1500,"line_end":1500,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1035},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":193465,"byte_end":193474,"line_start":1519,"line_end":1519,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<Entry>::or_insert","value":"fn or_insert(Self, V) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Insert the default value provided if there was no value\n already, and return a mutable reference to the value.\n","sig":null,"attributes":[{"value":"/ Insert the default value provided if there was no value","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":193332,"byte_end":193391,"line_start":1517,"line_end":1517,"column_start":5,"column_end":64}},{"value":"/ already, and return a mutable reference to the value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":193396,"byte_end":193453,"line_start":1518,"line_end":1518,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1037},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":193718,"byte_end":193732,"line_start":1526,"line_end":1526,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<Entry>::or_insert_with","value":"fn or_insert_with<F>(Self, F) -> &'a mut V where F: FnOnce() -> V","parent":null,"children":[],"decl_id":null,"docs":" Insert the default value from the provided function if there\n was no value already, and return a mutable reference to the\n value.\n","sig":null,"attributes":[{"value":"/ Insert the default value from the provided function if there","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":193559,"byte_end":193623,"line_start":1523,"line_end":1523,"column_start":5,"column_end":69}},{"value":"/ was no value already, and return a mutable reference to the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":193628,"byte_end":193691,"line_start":1524,"line_end":1524,"column_start":5,"column_end":68}},{"value":"/ value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":193696,"byte_end":193706,"line_start":1525,"line_end":1525,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1039},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":194090,"byte_end":194100,"line_start":1538,"line_end":1538,"column_start":12,"column_end":22},"name":"or_default","qualname":"<Entry>::or_default","value":"fn or_default(Self) -> &'a mut V where V: Default","parent":null,"children":[],"decl_id":null,"docs":" Insert a default value if there was no value already, and\n return a mutable reference to the value.\n","sig":null,"attributes":[{"value":"/ Insert a default value if there was no value already, and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":193968,"byte_end":194029,"line_start":1536,"line_end":1536,"column_start":5,"column_end":66}},{"value":"/ return a mutable reference to the value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":194034,"byte_end":194078,"line_start":1537,"line_end":1537,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1040},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":194272,"byte_end":194275,"line_start":1547,"line_end":1547,"column_start":12,"column_end":15},"name":"key","qualname":"<Entry>::key","value":"fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Get the key for this entry.\n","sig":null,"attributes":[{"value":"/ Get the key for this entry.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":194213,"byte_end":194244,"line_start":1545,"line_end":1545,"column_start":5,"column_end":36}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":194249,"byte_end":194260,"line_start":1546,"line_end":1546,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1041},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":194524,"byte_end":194534,"line_start":1556,"line_end":1556,"column_start":12,"column_end":22},"name":"and_modify","qualname":"<Entry>::and_modify","value":"fn and_modify<F>(Self, F) -> Self where F: for<'_> FnOnce(&'_ mut V) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Call the provided function to modify the value if the value\n exists.\n","sig":null,"attributes":[{"value":"/ Call the provided function to modify the value if the value","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":194433,"byte_end":194496,"line_start":1554,"line_end":1554,"column_start":5,"column_end":68}},{"value":"/ exists.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":194501,"byte_end":194512,"line_start":1555,"line_end":1555,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":1043},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":194835,"byte_end":194848,"line_start":1569,"line_end":1569,"column_start":12,"column_end":25},"name":"OccupiedEntry","qualname":"::ord::map::OccupiedEntry","value":"OccupiedEntry {  }","parent":null,"children":[{"krate":0,"index":1047},{"krate":0,"index":1048}],"decl_id":null,"docs":" An entry for a mapping that already exists in the map.\n","sig":null,"attributes":[{"value":"/ An entry for a mapping that already exists in the map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":194765,"byte_end":194823,"line_start":1568,"line_end":1568,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1053},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":195101,"byte_end":195104,"line_start":1585,"line_end":1585,"column_start":12,"column_end":15},"name":"key","qualname":"<OccupiedEntry>::key","value":"fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Get the key for this entry.\n","sig":null,"attributes":[{"value":"/ Get the key for this entry.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":195042,"byte_end":195073,"line_start":1583,"line_end":1583,"column_start":5,"column_end":36}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":195078,"byte_end":195089,"line_start":1584,"line_end":1584,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1054},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":195227,"byte_end":195239,"line_start":1590,"line_end":1590,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<OccupiedEntry>::remove_entry","value":"fn remove_entry(Self) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Remove this entry from the map and return the removed mapping.\n","sig":null,"attributes":[{"value":"/ Remove this entry from the map and return the removed mapping.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":195149,"byte_end":195215,"line_start":1589,"line_end":1589,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1055},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":195458,"byte_end":195461,"line_start":1598,"line_end":1598,"column_start":12,"column_end":15},"name":"get","qualname":"<OccupiedEntry>::get","value":"fn get(&Self) -> &V","parent":null,"children":[],"decl_id":null,"docs":" Get the current value.\n","sig":null,"attributes":[{"value":"/ Get the current value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":195404,"byte_end":195430,"line_start":1596,"line_end":1596,"column_start":5,"column_end":31}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":195435,"byte_end":195446,"line_start":1597,"line_end":1597,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1056},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":195606,"byte_end":195613,"line_start":1604,"line_end":1604,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OccupiedEntry>::get_mut","value":"fn get_mut(&mut Self) -> &mut V","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the current value.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the current value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":195529,"byte_end":195578,"line_start":1602,"line_end":1602,"column_start":5,"column_end":54}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":195583,"byte_end":195594,"line_start":1603,"line_end":1603,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1057},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":195769,"byte_end":195777,"line_start":1610,"line_end":1610,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<OccupiedEntry>::into_mut","value":"fn into_mut(Self) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Convert this entry into a mutable reference.\n","sig":null,"attributes":[{"value":"/ Convert this entry into a mutable reference.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":195693,"byte_end":195741,"line_start":1608,"line_end":1608,"column_start":5,"column_end":53}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":195746,"byte_end":195757,"line_start":1609,"line_end":1609,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1058},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":195899,"byte_end":195905,"line_start":1615,"line_end":1615,"column_start":12,"column_end":18},"name":"insert","qualname":"<OccupiedEntry>::insert","value":"fn insert(&mut Self, V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Overwrite the current value.\n","sig":null,"attributes":[{"value":"/ Overwrite the current value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":195855,"byte_end":195887,"line_start":1614,"line_end":1614,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1059},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":196065,"byte_end":196071,"line_start":1620,"line_end":1620,"column_start":12,"column_end":18},"name":"remove","qualname":"<OccupiedEntry>::remove","value":"fn remove(Self) -> V","parent":null,"children":[],"decl_id":null,"docs":" Remove this entry from the map and return the removed value.\n","sig":null,"attributes":[{"value":"/ Remove this entry from the map and return the removed value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":195989,"byte_end":196053,"line_start":1619,"line_end":1619,"column_start":5,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":1060},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":196202,"byte_end":196213,"line_start":1626,"line_end":1626,"column_start":12,"column_end":23},"name":"VacantEntry","qualname":"::ord::map::VacantEntry","value":"VacantEntry {  }","parent":null,"children":[{"krate":0,"index":1064},{"krate":0,"index":1065}],"decl_id":null,"docs":" An entry for a mapping that does not already exist in the map.\n","sig":null,"attributes":[{"value":"/ An entry for a mapping that does not already exist in the map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":196124,"byte_end":196190,"line_start":1625,"line_end":1625,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1070},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":196464,"byte_end":196467,"line_start":1642,"line_end":1642,"column_start":12,"column_end":15},"name":"key","qualname":"<VacantEntry>::key","value":"fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Get the key for this entry.\n","sig":null,"attributes":[{"value":"/ Get the key for this entry.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":196405,"byte_end":196436,"line_start":1640,"line_end":1640,"column_start":5,"column_end":36}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":196441,"byte_end":196452,"line_start":1641,"line_end":1641,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1071},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":196576,"byte_end":196584,"line_start":1648,"line_end":1648,"column_start":12,"column_end":20},"name":"into_key","qualname":"<VacantEntry>::into_key","value":"fn into_key(Self) -> K","parent":null,"children":[],"decl_id":null,"docs":" Convert this entry into its key.\n","sig":null,"attributes":[{"value":"/ Convert this entry into its key.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":196512,"byte_end":196548,"line_start":1646,"line_end":1646,"column_start":5,"column_end":41}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":196553,"byte_end":196564,"line_start":1647,"line_end":1647,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1072},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":196673,"byte_end":196679,"line_start":1653,"line_end":1653,"column_start":12,"column_end":18},"name":"insert","qualname":"<VacantEntry>::insert","value":"fn insert(Self, V) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Insert a value into this entry.\n","sig":null,"attributes":[{"value":"/ Insert a value into this entry.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":196626,"byte_end":196661,"line_start":1652,"line_end":1652,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1076},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":196994,"byte_end":196999,"line_start":1667,"line_end":1667,"column_start":8,"column_end":13},"name":"clone","qualname":"<OrdMap<K, V> as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":" Clone a map.","sig":null,"attributes":[{"value":"/ Clone a map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":196929,"byte_end":196945,"line_start":1663,"line_end":1663,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":196950,"byte_end":196953,"line_start":1664,"line_end":1664,"column_start":5,"column_end":8}},{"value":"/ Time: O(1)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":196958,"byte_end":196972,"line_start":1665,"line_end":1665,"column_start":5,"column_end":19}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":196977,"byte_end":196986,"line_start":1666,"line_end":1666,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1080},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":197283,"byte_end":197285,"line_start":1682,"line_end":1682,"column_start":8,"column_end":10},"name":"eq","qualname":"<OrdMap<K, V> as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &Self) -> bool","parent":{"krate":2,"index":2831},"children":[],"decl_id":{"krate":2,"index":2833},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1087},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":198055,"byte_end":198066,"line_start":1717,"line_end":1717,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<OrdMap<K, V> as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp(&Self, &Self) -> Option<Ordering>","parent":{"krate":2,"index":2877},"children":[],"decl_id":{"krate":2,"index":2879},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1091},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":198236,"byte_end":198239,"line_start":1727,"line_end":1727,"column_start":8,"column_end":11},"name":"cmp","qualname":"<OrdMap<K, V> as std::cmp::Ord>::cmp","value":"fn cmp(&Self, &Self) -> Ordering","parent":{"krate":2,"index":2867},"children":[],"decl_id":{"krate":2,"index":2868},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1095},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":198402,"byte_end":198406,"line_start":1737,"line_end":1737,"column_start":8,"column_end":12},"name":"hash","qualname":"<OrdMap<K, V> as std::hash::Hash>::hash","value":"fn hash<H>(&Self, &mut H) where H: Hasher","parent":{"krate":2,"index":10324},"children":[],"decl_id":{"krate":2,"index":10325},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1100},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":198589,"byte_end":198596,"line_start":1748,"line_end":1748,"column_start":8,"column_end":15},"name":"default","qualname":"<OrdMap<K, V> as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1106},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":198760,"byte_end":198763,"line_start":1760,"line_end":1760,"column_start":8,"column_end":11},"name":"add","qualname":"<&'a OrdMap<K, V> as std::ops::Add>::add","value":"fn add(Self, Self) -> Self::Output","parent":{"krate":2,"index":3247},"children":[],"decl_id":{"krate":2,"index":3250},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1111},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":198966,"byte_end":198969,"line_start":1772,"line_end":1772,"column_start":8,"column_end":11},"name":"add","qualname":"<OrdMap<K, V> as std::ops::Add>::add","value":"fn add(Self, Self) -> Self::Output","parent":{"krate":2,"index":3247},"children":[],"decl_id":{"krate":2,"index":3250},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1115},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":199123,"byte_end":199126,"line_start":1782,"line_end":1782,"column_start":8,"column_end":11},"name":"sum","qualname":"<OrdMap<K, V> as std::iter::Sum>::sum","value":"fn sum<I>(I) -> Self where I: Iterator<Item = Self>","parent":{"krate":2,"index":8238},"children":[],"decl_id":{"krate":2,"index":8240},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1123},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":199375,"byte_end":199381,"line_start":1795,"line_end":1795,"column_start":8,"column_end":14},"name":"extend","qualname":"<OrdMap<K, V> as std::iter::Extend>::extend","value":"fn extend<I>(&mut Self, I) where I: IntoIterator<Item = (RK, RV)>","parent":{"krate":2,"index":8288},"children":[],"decl_id":{"krate":2,"index":8290},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1131},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":199712,"byte_end":199717,"line_start":1812,"line_end":1812,"column_start":8,"column_end":13},"name":"index","qualname":"<OrdMap<K, V> as std::ops::Index>::index","value":"fn index(&Self, &BK) -> &Self::Output","parent":{"krate":2,"index":3483},"children":[],"decl_id":{"krate":2,"index":3486},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1137},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":200050,"byte_end":200059,"line_start":1826,"line_end":1826,"column_start":8,"column_end":17},"name":"index_mut","qualname":"<OrdMap<K, V> as std::ops::IndexMut>::index_mut","value":"fn index_mut(&mut Self, &BK) -> &mut Self::Output","parent":{"krate":2,"index":3487},"children":[],"decl_id":{"krate":2,"index":3489},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1141},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":200435,"byte_end":200438,"line_start":1840,"line_end":1840,"column_start":8,"column_end":11},"name":"fmt","qualname":"<OrdMap<K, V> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut Formatter) -> Result<(), Error>","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1142},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":200704,"byte_end":200708,"line_start":1852,"line_end":1852,"column_start":12,"column_end":16},"name":"Iter","qualname":"::ord::map::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":1146}],"decl_id":null,"docs":" An iterator over the key/value pairs of a map.\n","sig":null,"attributes":[{"value":"/ An iterator over the key/value pairs of a map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":200642,"byte_end":200692,"line_start":1851,"line_end":1851,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1152},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":200876,"byte_end":200880,"line_start":1862,"line_end":1862,"column_start":8,"column_end":12},"name":"next","qualname":"<Iter as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8476},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1154},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":200974,"byte_end":200983,"line_start":1866,"line_end":1866,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Iter as std::iter::Iterator>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8477},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1159},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":201179,"byte_end":201188,"line_start":1875,"line_end":1875,"column_start":8,"column_end":17},"name":"next_back","qualname":"<Iter as std::iter::DoubleEndedIterator>::next_back","value":"fn next_back(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8323},"children":[],"decl_id":{"krate":2,"index":8324},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1165},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":201434,"byte_end":201442,"line_start":1883,"line_end":1883,"column_start":12,"column_end":20},"name":"DiffIter","qualname":"::ord::map::DiffIter","value":"DiffIter {  }","parent":null,"children":[{"krate":0,"index":1169}],"decl_id":null,"docs":" An iterator over the differences between two maps.\n","sig":null,"attributes":[{"value":"/ An iterator over the differences between two maps.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":201368,"byte_end":201422,"line_start":1882,"line_end":1882,"column_start":1,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3658},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":201668,"byte_end":201671,"line_start":1891,"line_end":1891,"column_start":5,"column_end":8},"name":"Add","qualname":"::ord::map::DiffItem::Add","value":"DiffItem::Add(&'a K, &'a V)","parent":{"krate":0,"index":3654},"children":[],"decl_id":null,"docs":" This value has been added to the new map.\n","sig":null,"attributes":[{"value":"/ This value has been added to the new map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":201618,"byte_end":201663,"line_start":1890,"line_end":1890,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":3660},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":201672,"byte_end":201677,"line_start":1891,"line_end":1891,"column_start":9,"column_end":14},"name":"0","qualname":"::ord::map::DiffItem::Add::0","value":"&'a K","parent":{"krate":0,"index":3658},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3661},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":201679,"byte_end":201684,"line_start":1891,"line_end":1891,"column_start":16,"column_end":21},"name":"1","qualname":"::ord::map::DiffItem::Add::1","value":"&'a V","parent":{"krate":0,"index":3658},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3662},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":201749,"byte_end":201755,"line_start":1893,"line_end":1893,"column_start":5,"column_end":11},"name":"Update","qualname":"::ord::map::DiffItem::Update","value":"DiffItem::Update { old, new }","parent":{"krate":0,"index":3654},"children":[],"decl_id":null,"docs":" This value has been changed between the two maps.\n","sig":null,"attributes":[{"value":"/ This value has been changed between the two maps.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":201691,"byte_end":201744,"line_start":1892,"line_end":1892,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":3663},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":201793,"byte_end":201796,"line_start":1895,"line_end":1895,"column_start":9,"column_end":12},"name":"old","qualname":"::ord::map::DiffItem::Update::old","value":"(&'a K, &'a V)","parent":{"krate":0,"index":3662},"children":[],"decl_id":null,"docs":" The old value.\n","sig":null,"attributes":[{"value":"/ The old value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":201766,"byte_end":201784,"line_start":1894,"line_end":1894,"column_start":9,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":3664},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":201849,"byte_end":201852,"line_start":1897,"line_end":1897,"column_start":9,"column_end":12},"name":"new","qualname":"::ord::map::DiffItem::Update::new","value":"(&'a K, &'a V)","parent":{"krate":0,"index":3662},"children":[],"decl_id":null,"docs":" The new value.\n","sig":null,"attributes":[{"value":"/ The new value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":201822,"byte_end":201840,"line_start":1896,"line_end":1896,"column_start":9,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3665},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":201935,"byte_end":201941,"line_start":1900,"line_end":1900,"column_start":5,"column_end":11},"name":"Remove","qualname":"::ord::map::DiffItem::Remove","value":"DiffItem::Remove(&'a K, &'a V)","parent":{"krate":0,"index":3654},"children":[],"decl_id":null,"docs":" This value has been removed from the new map.\n","sig":null,"attributes":[{"value":"/ This value has been removed from the new map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":201881,"byte_end":201930,"line_start":1899,"line_end":1899,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":3667},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":201942,"byte_end":201947,"line_start":1900,"line_end":1900,"column_start":12,"column_end":17},"name":"0","qualname":"::ord::map::DiffItem::Remove::0","value":"&'a K","parent":{"krate":0,"index":3665},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3668},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":201949,"byte_end":201954,"line_start":1900,"line_end":1900,"column_start":19,"column_end":24},"name":"1","qualname":"::ord::map::DiffItem::Remove::1","value":"&'a V","parent":{"krate":0,"index":3665},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3654},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":201593,"byte_end":201601,"line_start":1889,"line_end":1889,"column_start":10,"column_end":18},"name":"DiffItem","qualname":"::ord::map::DiffItem","value":"enum DiffItem<'a, K, V> {\n    Add(&'a K, &'a V),\n    Update {\n            old: (&'a K, &'a V),\n            new: (&'a K, &'a V),\n        },\n    Remove(&'a K, &'a V),\n}","parent":null,"children":[{"krate":0,"index":3658},{"krate":0,"index":3662},{"krate":0,"index":3665}],"decl_id":null,"docs":" A description of a difference between two ordered maps.\n","sig":null,"attributes":[{"value":"/ A description of a difference between two ordered maps.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":201492,"byte_end":201551,"line_start":1887,"line_end":1887,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1175},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":202100,"byte_end":202104,"line_start":1909,"line_end":1909,"column_start":8,"column_end":12},"name":"next","qualname":"<DiffIter as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8476},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1177},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":202613,"byte_end":202617,"line_start":1925,"line_end":1925,"column_start":12,"column_end":16},"name":"Keys","qualname":"::ord::map::Keys","value":"Keys {  }","parent":null,"children":[{"krate":0,"index":1181}],"decl_id":null,"docs":" An iterator ove the keys of a map.\n","sig":null,"attributes":[{"value":"/ An iterator ove the keys of a map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":202563,"byte_end":202601,"line_start":1924,"line_end":1924,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1187},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":202767,"byte_end":202771,"line_start":1936,"line_end":1936,"column_start":8,"column_end":12},"name":"next","qualname":"<Keys as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8476},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1189},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":202860,"byte_end":202869,"line_start":1940,"line_end":1940,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Keys as std::iter::Iterator>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8477},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1194},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":203039,"byte_end":203048,"line_start":1950,"line_end":1950,"column_start":8,"column_end":17},"name":"next_back","qualname":"<Keys as std::iter::DoubleEndedIterator>::next_back","value":"fn next_back(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8323},"children":[],"decl_id":{"krate":2,"index":8324},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1200},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":203281,"byte_end":203287,"line_start":1963,"line_end":1963,"column_start":12,"column_end":18},"name":"Values","qualname":"::ord::map::Values","value":"Values {  }","parent":null,"children":[{"krate":0,"index":1204}],"decl_id":null,"docs":" An iterator over the values of a map.\n","sig":null,"attributes":[{"value":"/ An iterator over the values of a map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":203228,"byte_end":203269,"line_start":1962,"line_end":1962,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1210},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":203439,"byte_end":203443,"line_start":1974,"line_end":1974,"column_start":8,"column_end":12},"name":"next","qualname":"<Values as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8476},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1212},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":203532,"byte_end":203541,"line_start":1978,"line_end":1978,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Values as std::iter::Iterator>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8477},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1217},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":203713,"byte_end":203722,"line_start":1988,"line_end":1988,"column_start":8,"column_end":17},"name":"next_back","qualname":"<Values as std::iter::DoubleEndedIterator>::next_back","value":"fn next_back(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8323},"children":[],"decl_id":{"krate":2,"index":8324},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1228},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":204034,"byte_end":204043,"line_start":2005,"line_end":2005,"column_start":8,"column_end":17},"name":"from_iter","qualname":"<OrdMap<K, V> as std::iter::FromIterator>::from_iter","value":"fn from_iter<T>(T) -> Self where T: IntoIterator<Item = (RK, RV)>","parent":{"krate":2,"index":8275},"children":[],"decl_id":{"krate":2,"index":8277},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1236},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":204410,"byte_end":204419,"line_start":2024,"line_end":2024,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<&'a OrdMap<K, V> as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":2,"index":8279},"children":[],"decl_id":{"krate":2,"index":8282},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1242},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":204633,"byte_end":204642,"line_start":2037,"line_end":2037,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<OrdMap<K, V> as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":2,"index":8279},"children":[],"decl_id":{"krate":2,"index":8282},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1246},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":204801,"byte_end":204807,"line_start":2045,"line_end":2045,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<OrdMap<K, V> as std::convert::AsRef>::as_ref","value":"fn as_ref(&Self) -> &Self","parent":{"krate":2,"index":3076},"children":[],"decl_id":{"krate":2,"index":3078},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1255},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":205084,"byte_end":205088,"line_start":2057,"line_end":2057,"column_start":8,"column_end":12},"name":"from","qualname":"<OrdMap<OK, OV> as std::convert::From>::from","value":"fn from(&OrdMap<&K, &V>) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1265},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":205468,"byte_end":205472,"line_start":2073,"line_end":2073,"column_start":8,"column_end":12},"name":"from","qualname":"<OrdMap<K, V> as std::convert::From>::from","value":"fn from(&'a [(RK, RV)]) -> OrdMap<K, V>","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1272},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":205751,"byte_end":205755,"line_start":2085,"line_end":2085,"column_start":8,"column_end":12},"name":"from","qualname":"<OrdMap<K, V> as std::convert::From>::from","value":"fn from(Vec<(RK, RV)>) -> OrdMap<K, V>","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1281},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":206079,"byte_end":206083,"line_start":2099,"line_end":2099,"column_start":8,"column_end":12},"name":"from","qualname":"<OrdMap<K, V> as std::convert::From>::from","value":"fn from(&'a Vec<(RK, RV)>) -> OrdMap<K, V>","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1288},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":206396,"byte_end":206400,"line_start":2111,"line_end":2111,"column_start":8,"column_end":12},"name":"from","qualname":"<OrdMap<K, V> as std::convert::From>::from","value":"fn from(collections::HashMap<RK, RV>) -> OrdMap<K, V>","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1297},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":206761,"byte_end":206765,"line_start":2125,"line_end":2125,"column_start":8,"column_end":12},"name":"from","qualname":"<OrdMap<K, V> as std::convert::From>::from","value":"fn from(&'a collections::HashMap<RK, RV>) -> OrdMap<K, V>","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1304},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":207074,"byte_end":207078,"line_start":2137,"line_end":2137,"column_start":8,"column_end":12},"name":"from","qualname":"<OrdMap<K, V> as std::convert::From>::from","value":"fn from(collections::BTreeMap<RK, RV>) -> OrdMap<K, V>","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1313},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":207440,"byte_end":207444,"line_start":2151,"line_end":2151,"column_start":8,"column_end":12},"name":"from","qualname":"<OrdMap<K, V> as std::convert::From>::from","value":"fn from(&'a collections::BTreeMap<RK, RV>) -> OrdMap<K, V>","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1319},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":207714,"byte_end":207718,"line_start":2159,"line_end":2159,"column_start":8,"column_end":12},"name":"from","qualname":"<OrdMap<K, V> as std::convert::From>::from","value":"fn from(HashMap<K, V, S>) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1325},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":207911,"byte_end":207915,"line_start":2167,"line_end":2167,"column_start":8,"column_end":12},"name":"from","qualname":"<OrdMap<K, V> as std::convert::From>::from","value":"fn from(&'a HashMap<K, V, S>) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1327},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"set","qualname":"::ord::set","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","parent":null,"children":[{"krate":0,"index":1328},{"krate":0,"index":1331},{"krate":0,"index":1334},{"krate":0,"index":1337},{"krate":0,"index":1338},{"krate":0,"index":1339},{"krate":0,"index":1341},{"krate":0,"index":1342},{"krate":0,"index":1344},{"krate":0,"index":1347},{"krate":0,"index":1348},{"krate":0,"index":1351},{"krate":0,"index":1352},{"krate":0,"index":1354},{"krate":0,"index":1357},{"krate":0,"index":1358},{"krate":0,"index":1361},{"krate":0,"index":1364},{"krate":0,"index":1367},{"krate":0,"index":1368},{"krate":0,"index":1371},{"krate":0,"index":1374},{"krate":0,"index":1377},{"krate":0,"index":1380},{"krate":0,"index":1383},{"krate":0,"index":1384},{"krate":0,"index":1387},{"krate":0,"index":1390},{"krate":0,"index":1393},{"krate":0,"index":1396},{"krate":0,"index":1399},{"krate":0,"index":1402},{"krate":0,"index":1405},{"krate":0,"index":1406},{"krate":0,"index":1409},{"krate":0,"index":1412},{"krate":0,"index":1415},{"krate":0,"index":3693},{"krate":0,"index":3697},{"krate":0,"index":3700},{"krate":0,"index":3702},{"krate":0,"index":3704},{"krate":0,"index":3708},{"krate":0,"index":3710},{"krate":0,"index":3713},{"krate":0,"index":3716},{"krate":0,"index":3719},{"krate":0,"index":1416},{"krate":0,"index":1420},{"krate":0,"index":3722},{"krate":0,"index":3726},{"krate":0,"index":3731},{"krate":0,"index":3734},{"krate":0,"index":1432},{"krate":0,"index":1437},{"krate":0,"index":1445},{"krate":0,"index":1466},{"krate":0,"index":1491},{"krate":0,"index":1494},{"krate":0,"index":1497},{"krate":0,"index":1499},{"krate":0,"index":1502},{"krate":0,"index":1505},{"krate":0,"index":1509},{"krate":0,"index":1512},{"krate":0,"index":1516},{"krate":0,"index":1521},{"krate":0,"index":1525},{"krate":0,"index":1530},{"krate":0,"index":1535},{"krate":0,"index":1540},{"krate":0,"index":1543},{"krate":0,"index":1547},{"krate":0,"index":1553},{"krate":0,"index":1557},{"krate":0,"index":1560},{"krate":0,"index":1564},{"krate":0,"index":1570},{"krate":0,"index":1574},{"krate":0,"index":1577},{"krate":0,"index":1582},{"krate":0,"index":1586},{"krate":0,"index":1592},{"krate":0,"index":1597},{"krate":0,"index":1603},{"krate":0,"index":1608},{"krate":0,"index":1615},{"krate":0,"index":1619},{"krate":0,"index":1622},{"krate":0,"index":1626},{"krate":0,"index":1629},{"krate":0,"index":1633},{"krate":0,"index":1636},{"krate":0,"index":1640},{"krate":0,"index":1644}],"decl_id":null,"docs":" An ordered set.","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/mod.rs","byte_start":149040,"byte_end":149052,"line_start":7,"line_end":7,"column_start":1,"column_end":13}},{"value":"/ An ordered set.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":225368,"byte_end":225387,"line_start":5,"line_end":5,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":225388,"byte_end":225391,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ An immutable ordered set implemented as a [B-tree] [1].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":225392,"byte_end":225451,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":225452,"byte_end":225455,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Most operations on this type of set are O(log n). A","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":225456,"byte_end":225511,"line_start":9,"line_end":9,"column_start":1,"column_end":56}},{"value":"/ [`HashSet`][hashset::HashSet] is usually a better choice for","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":225512,"byte_end":225576,"line_start":10,"line_end":10,"column_start":1,"column_end":65}},{"value":"/ performance, but the `OrdSet` has the advantage of only requiring","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":225577,"byte_end":225646,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/ an [`Ord`][std::cmp::Ord] constraint on its values, and of being","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":225647,"byte_end":225715,"line_start":12,"line_end":12,"column_start":1,"column_end":69}},{"value":"/ ordered, so values always come out from lowest to highest, where a","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":225716,"byte_end":225786,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/ [`HashSet`][hashset::HashSet] has no guaranteed ordering.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":225787,"byte_end":225848,"line_start":14,"line_end":14,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":225849,"byte_end":225852,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [1]: https://en.wikipedia.org/wiki/B-tree","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":225853,"byte_end":225898,"line_start":16,"line_end":16,"column_start":1,"column_end":46}},{"value":"/ [hashset::HashSet]: ./struct.HashSet.html","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":225899,"byte_end":225944,"line_start":17,"line_end":17,"column_start":1,"column_end":46}},{"value":"/ [std::cmp::Ord]: https://doc.rust-lang.org/std/cmp/trait.Ord.html","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":225945,"byte_end":226014,"line_start":18,"line_end":18,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":3722},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":229423,"byte_end":229433,"line_start":159,"line_end":159,"column_start":11,"column_end":21},"name":"OrdSetPool","qualname":"::ord::set::OrdSetPool","value":"","parent":null,"children":[],"decl_id":null,"docs":" A memory pool for the appropriate node type.\n","sig":null,"attributes":[{"value":"/ A memory pool for the appropriate node type.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/util.rs","byte_start":147885,"byte_end":147933,"line_start":110,"line_end":110,"column_start":9,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":1432},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":230114,"byte_end":230120,"line_start":175,"line_end":175,"column_start":12,"column_end":18},"name":"OrdSet","qualname":"::ord::set::OrdSet","value":"OrdSet {  }","parent":null,"children":[{"krate":0,"index":1434},{"krate":0,"index":1435},{"krate":0,"index":1436}],"decl_id":null,"docs":" An ordered set.","sig":null,"attributes":[{"value":"/ An ordered set.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":229456,"byte_end":229475,"line_start":161,"line_end":161,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":229476,"byte_end":229479,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ An immutable ordered set implemented as a [B-tree] [1].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":229480,"byte_end":229539,"line_start":163,"line_end":163,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":229540,"byte_end":229543,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ Most operations on this type of set are O(log n). A","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":229544,"byte_end":229599,"line_start":165,"line_end":165,"column_start":1,"column_end":56}},{"value":"/ [`HashSet`][hashset::HashSet] is usually a better choice for","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":229600,"byte_end":229664,"line_start":166,"line_end":166,"column_start":1,"column_end":65}},{"value":"/ performance, but the `OrdSet` has the advantage of only requiring","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":229665,"byte_end":229734,"line_start":167,"line_end":167,"column_start":1,"column_end":70}},{"value":"/ an [`Ord`][std::cmp::Ord] constraint on its values, and of being","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":229735,"byte_end":229803,"line_start":168,"line_end":168,"column_start":1,"column_end":69}},{"value":"/ ordered, so values always come out from lowest to highest, where a","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":229804,"byte_end":229874,"line_start":169,"line_end":169,"column_start":1,"column_end":71}},{"value":"/ [`HashSet`][hashset::HashSet] has no guaranteed ordering.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":229875,"byte_end":229936,"line_start":170,"line_end":170,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":229937,"byte_end":229940,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ [1]: https://en.wikipedia.org/wiki/B-tree","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":229941,"byte_end":229986,"line_start":172,"line_end":172,"column_start":1,"column_end":46}},{"value":"/ [hashset::HashSet]: ./struct.HashSet.html","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":229987,"byte_end":230032,"line_start":173,"line_end":173,"column_start":1,"column_end":46}},{"value":"/ [std::cmp::Ord]: https://doc.rust-lang.org/std/cmp/trait.Ord.html","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":230033,"byte_end":230102,"line_start":174,"line_end":174,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1439},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":230285,"byte_end":230288,"line_start":184,"line_end":184,"column_start":12,"column_end":15},"name":"new","qualname":"<OrdSet<A>>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct an empty set.\n","sig":null,"attributes":[{"value":"/ Construct an empty set.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":230230,"byte_end":230257,"line_start":182,"line_end":182,"column_start":5,"column_end":32}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":230262,"byte_end":230273,"line_start":183,"line_end":183,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1440},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":231083,"byte_end":231087,"line_start":218,"line_end":218,"column_start":12,"column_end":16},"name":"unit","qualname":"<OrdSet<A>>::unit","value":"fn unit(A) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a set with a single value.","sig":null,"attributes":[{"value":"/ Construct a set with a single value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":230794,"byte_end":230834,"line_start":206,"line_end":206,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":230839,"byte_end":230842,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":230847,"byte_end":230861,"line_start":208,"line_end":208,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":230866,"byte_end":230869,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":230874,"byte_end":230881,"line_start":210,"line_end":210,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":230886,"byte_end":230921,"line_start":211,"line_end":211,"column_start":5,"column_end":40}},{"value":"/ # use im::ordset::OrdSet;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":230926,"byte_end":230955,"line_start":212,"line_end":212,"column_start":5,"column_end":34}},{"value":"/ let set = OrdSet::unit(123);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":230960,"byte_end":230992,"line_start":213,"line_end":213,"column_start":5,"column_end":37}},{"value":"/ assert!(set.contains(&123));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":230997,"byte_end":231029,"line_start":214,"line_end":214,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":231034,"byte_end":231041,"line_start":215,"line_end":215,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":231046,"byte_end":231055,"line_start":216,"line_end":216,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":231060,"byte_end":231071,"line_start":217,"line_end":217,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1441},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":231676,"byte_end":231684,"line_start":246,"line_end":246,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<OrdSet<A>>::is_empty","value":"fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test whether a set is empty.","sig":null,"attributes":[{"value":"/ Test whether a set is empty.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":231305,"byte_end":231337,"line_start":228,"line_end":228,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":231342,"byte_end":231345,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ Time: O(1)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":231350,"byte_end":231364,"line_start":230,"line_end":230,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":231369,"byte_end":231372,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":231377,"byte_end":231391,"line_start":232,"line_end":232,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":231396,"byte_end":231399,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":231404,"byte_end":231411,"line_start":234,"line_end":234,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":231416,"byte_end":231451,"line_start":235,"line_end":235,"column_start":5,"column_end":40}},{"value":"/ # use im::ordset::OrdSet;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":231456,"byte_end":231485,"line_start":236,"line_end":236,"column_start":5,"column_end":34}},{"value":"/ assert!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":231490,"byte_end":231502,"line_start":237,"line_end":237,"column_start":5,"column_end":17}},{"value":"/   !ordset![1, 2, 3].is_empty()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":231507,"byte_end":231541,"line_start":238,"line_end":238,"column_start":5,"column_end":39}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":231546,"byte_end":231552,"line_start":239,"line_end":239,"column_start":5,"column_end":11}},{"value":"/ assert!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":231557,"byte_end":231569,"line_start":240,"line_end":240,"column_start":5,"column_end":17}},{"value":"/   OrdSet::<i32>::new().is_empty()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":231574,"byte_end":231611,"line_start":241,"line_end":241,"column_start":5,"column_end":42}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":231616,"byte_end":231622,"line_start":242,"line_end":242,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":231627,"byte_end":231634,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":231639,"byte_end":231648,"line_start":244,"line_end":244,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":231653,"byte_end":231664,"line_start":245,"line_end":245,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1442},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":232012,"byte_end":232015,"line_start":263,"line_end":263,"column_start":12,"column_end":15},"name":"len","qualname":"<OrdSet<A>>::len","value":"fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the size of a set.","sig":null,"attributes":[{"value":"/ Get the size of a set.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":231737,"byte_end":231763,"line_start":250,"line_end":250,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":231768,"byte_end":231771,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ Time: O(1)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":231776,"byte_end":231790,"line_start":252,"line_end":252,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":231795,"byte_end":231798,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":231803,"byte_end":231817,"line_start":254,"line_end":254,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":231822,"byte_end":231825,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":231830,"byte_end":231837,"line_start":256,"line_end":256,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":231842,"byte_end":231877,"line_start":257,"line_end":257,"column_start":5,"column_end":40}},{"value":"/ # use im::ordset::OrdSet;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":231882,"byte_end":231911,"line_start":258,"line_end":258,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(3, ordset![1, 2, 3].len());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":231916,"byte_end":231958,"line_start":259,"line_end":259,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":231963,"byte_end":231970,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":231975,"byte_end":231984,"line_start":261,"line_end":261,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":231989,"byte_end":232000,"line_start":262,"line_end":262,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1443},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":232439,"byte_end":232445,"line_start":276,"line_end":276,"column_start":12,"column_end":18},"name":"ptr_eq","qualname":"<OrdSet<A>>::ptr_eq","value":"fn ptr_eq(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test whether two sets refer to the same content in memory.","sig":null,"attributes":[{"value":"/ Test whether two sets refer to the same content in memory.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":232063,"byte_end":232125,"line_start":267,"line_end":267,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":232130,"byte_end":232133,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ This is true if the two sides are references to the same set,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":232138,"byte_end":232203,"line_start":269,"line_end":269,"column_start":5,"column_end":70}},{"value":"/ or if the two sets refer to the same root node.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":232208,"byte_end":232259,"line_start":270,"line_end":270,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":232264,"byte_end":232267,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ This would return true if you're comparing a set to itself, or","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":232272,"byte_end":232338,"line_start":272,"line_end":272,"column_start":5,"column_end":71}},{"value":"/ if you're comparing a set to a fresh clone of itself.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":232343,"byte_end":232400,"line_start":273,"line_end":273,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":232405,"byte_end":232408,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ Time: O(1)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":232413,"byte_end":232427,"line_start":275,"line_end":275,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":1444},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":233277,"byte_end":233282,"line_start":305,"line_end":305,"column_start":12,"column_end":17},"name":"clear","qualname":"<OrdSet<A>>::clear","value":"fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Discard all elements from the set.","sig":null,"attributes":[{"value":"/ Discard all elements from the set.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":232861,"byte_end":232899,"line_start":289,"line_end":289,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":232904,"byte_end":232907,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ This leaves you with an empty set, and all elements that","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":232912,"byte_end":232972,"line_start":291,"line_end":291,"column_start":5,"column_end":65}},{"value":"/ were previously inside it are dropped.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":232977,"byte_end":233019,"line_start":292,"line_end":292,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":233024,"byte_end":233027,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ Time: O(n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":233032,"byte_end":233046,"line_start":294,"line_end":294,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":233051,"byte_end":233054,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":233059,"byte_end":233073,"line_start":296,"line_end":296,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":233078,"byte_end":233081,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":233086,"byte_end":233093,"line_start":298,"line_end":298,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":233098,"byte_end":233133,"line_start":299,"line_end":299,"column_start":5,"column_end":40}},{"value":"/ # use im::OrdSet;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":233138,"byte_end":233159,"line_start":300,"line_end":300,"column_start":5,"column_end":26}},{"value":"/ let mut set = ordset![1, 2, 3];","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":233164,"byte_end":233199,"line_start":301,"line_end":301,"column_start":5,"column_end":40}},{"value":"/ set.clear();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":233204,"byte_end":233220,"line_start":302,"line_end":302,"column_start":5,"column_end":21}},{"value":"/ assert!(set.is_empty());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":233225,"byte_end":233253,"line_start":303,"line_end":303,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":233258,"byte_end":233265,"line_start":304,"line_end":304,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1447},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":233618,"byte_end":233625,"line_start":323,"line_end":323,"column_start":12,"column_end":19},"name":"get_min","qualname":"<OrdSet<A>>::get_min","value":"fn get_min(&Self) -> Option<&A>","parent":null,"children":[],"decl_id":null,"docs":" Get the smallest value in a set.","sig":null,"attributes":[{"value":"/ Get the smallest value in a set.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":233470,"byte_end":233506,"line_start":317,"line_end":317,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":233511,"byte_end":233514,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ If the set is empty, returns `None`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":233519,"byte_end":233559,"line_start":319,"line_end":319,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":233564,"byte_end":233567,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":233572,"byte_end":233590,"line_start":321,"line_end":321,"column_start":5,"column_end":23}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":233595,"byte_end":233606,"line_start":322,"line_end":322,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1448},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":233849,"byte_end":233856,"line_start":333,"line_end":333,"column_start":12,"column_end":19},"name":"get_max","qualname":"<OrdSet<A>>::get_max","value":"fn get_max(&Self) -> Option<&A>","parent":null,"children":[],"decl_id":null,"docs":" Get the largest value in a set.","sig":null,"attributes":[{"value":"/ Get the largest value in a set.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":233702,"byte_end":233737,"line_start":327,"line_end":327,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":233742,"byte_end":233745,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ If the set is empty, returns `None`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":233750,"byte_end":233790,"line_start":329,"line_end":329,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":233795,"byte_end":233798,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":233803,"byte_end":233821,"line_start":331,"line_end":331,"column_start":5,"column_end":23}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":233826,"byte_end":233837,"line_start":332,"line_end":332,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1449},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":234013,"byte_end":234017,"line_start":339,"line_end":339,"column_start":12,"column_end":16},"name":"iter","qualname":"<OrdSet<A>>::iter","value":"fn iter(&Self) -> Iter<, A>","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator over the contents of the set.\n","sig":null,"attributes":[{"value":"/ Create an iterator over the contents of the set.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":233933,"byte_end":233985,"line_start":337,"line_end":337,"column_start":5,"column_end":57}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":233990,"byte_end":234001,"line_start":338,"line_end":338,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1450},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":234215,"byte_end":234220,"line_start":347,"line_end":347,"column_start":12,"column_end":17},"name":"range","qualname":"<OrdSet<A>>::range","value":"fn range<R, BA>(&Self, R) -> RangedIter<, A> where R: RangeBounds<BA>,\nA: Borrow<BA>, BA: Ord + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator over a range inside the set.\n","sig":null,"attributes":[{"value":"/ Create an iterator over a range inside the set.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":234136,"byte_end":234187,"line_start":345,"line_end":345,"column_start":5,"column_end":56}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":234192,"byte_end":234203,"line_start":346,"line_end":346,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1453},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":235055,"byte_end":235059,"line_start":370,"line_end":370,"column_start":12,"column_end":16},"name":"diff","qualname":"<OrdSet<A>>::diff","value":"fn diff<'a>(&'a Self, &'a Self) -> DiffIter<, A>","parent":null,"children":[],"decl_id":null,"docs":" Get an iterator over the differences between this set and\n another, i.e. the set of entries to add or remove to this set\n in order to make it equal to the other set.","sig":null,"attributes":[{"value":"/ Get an iterator over the differences between this set and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":234462,"byte_end":234523,"line_start":358,"line_end":358,"column_start":5,"column_end":66}},{"value":"/ another, i.e. the set of entries to add or remove to this set","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":234528,"byte_end":234593,"line_start":359,"line_end":359,"column_start":5,"column_end":70}},{"value":"/ in order to make it equal to the other set.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":234598,"byte_end":234645,"line_start":360,"line_end":360,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":234650,"byte_end":234653,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ This function will avoid visiting nodes which are shared","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":234658,"byte_end":234718,"line_start":362,"line_end":362,"column_start":5,"column_end":65}},{"value":"/ between the two sets, meaning that even very large sets can be","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":234723,"byte_end":234789,"line_start":363,"line_end":363,"column_start":5,"column_end":71}},{"value":"/ compared quickly if most of their structure is shared.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":234794,"byte_end":234852,"line_start":364,"line_end":364,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":234857,"byte_end":234860,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ Time: O(n) (where n is the number of unique elements across","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":234865,"byte_end":234928,"line_start":366,"line_end":366,"column_start":5,"column_end":68}},{"value":"/ the two sets, minus the number of elements belonging to nodes","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":234933,"byte_end":234998,"line_start":367,"line_end":367,"column_start":5,"column_end":70}},{"value":"/ shared between them)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":235003,"byte_end":235027,"line_start":368,"line_end":368,"column_start":5,"column_end":29}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":235032,"byte_end":235043,"line_start":369,"line_end":369,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1455},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":235566,"byte_end":235574,"line_start":391,"line_end":391,"column_start":12,"column_end":20},"name":"contains","qualname":"<OrdSet<A>>::contains","value":"fn contains<BA>(&Self, &BA) -> bool where BA: Ord + ?Sized, A: Borrow<BA>","parent":null,"children":[],"decl_id":null,"docs":" Test if a value is part of a set.","sig":null,"attributes":[{"value":"/ Test if a value is part of a set.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":235212,"byte_end":235249,"line_start":376,"line_end":376,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":235254,"byte_end":235257,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":235262,"byte_end":235280,"line_start":378,"line_end":378,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":235285,"byte_end":235288,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":235293,"byte_end":235307,"line_start":380,"line_end":380,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":235312,"byte_end":235315,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":235320,"byte_end":235327,"line_start":382,"line_end":382,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":235332,"byte_end":235367,"line_start":383,"line_end":383,"column_start":5,"column_end":40}},{"value":"/ # use im::ordset::OrdSet;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":235372,"byte_end":235401,"line_start":384,"line_end":384,"column_start":5,"column_end":34}},{"value":"/ let mut set = ordset!{1, 2, 3};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":235406,"byte_end":235441,"line_start":385,"line_end":385,"column_start":5,"column_end":40}},{"value":"/ assert!(set.contains(&1));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":235446,"byte_end":235476,"line_start":386,"line_end":386,"column_start":5,"column_end":35}},{"value":"/ assert!(!set.contains(&4));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":235481,"byte_end":235512,"line_start":387,"line_end":387,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":235517,"byte_end":235524,"line_start":388,"line_end":388,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":235529,"byte_end":235538,"line_start":389,"line_end":389,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":235543,"byte_end":235554,"line_start":390,"line_end":390,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1457},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":236285,"byte_end":236293,"line_start":415,"line_end":415,"column_start":12,"column_end":20},"name":"get_prev","qualname":"<OrdSet<A>>::get_prev","value":"fn get_prev(&Self, &A) -> Option<&A>","parent":null,"children":[],"decl_id":null,"docs":" Get the closest smaller value in a set to a given value.","sig":null,"attributes":[{"value":"/ Get the closest smaller value in a set to a given value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":235716,"byte_end":235776,"line_start":399,"line_end":399,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":235781,"byte_end":235784,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ If the set contains the given value, this is returned.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":235789,"byte_end":235847,"line_start":401,"line_end":401,"column_start":5,"column_end":63}},{"value":"/ Otherwise, the closest value in the set smaller than the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":235852,"byte_end":235912,"line_start":402,"line_end":402,"column_start":5,"column_end":65}},{"value":"/ given value is returned. If the smallest value in the set","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":235917,"byte_end":235978,"line_start":403,"line_end":403,"column_start":5,"column_end":66}},{"value":"/ is larger than the given value, `None` is returned.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":235983,"byte_end":236038,"line_start":404,"line_end":404,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":236043,"byte_end":236046,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":236051,"byte_end":236065,"line_start":406,"line_end":406,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":236070,"byte_end":236073,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":236078,"byte_end":236089,"line_start":408,"line_end":408,"column_start":5,"column_end":16}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":236094,"byte_end":236129,"line_start":409,"line_end":409,"column_start":5,"column_end":40}},{"value":"/ # use im::OrdSet;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":236134,"byte_end":236155,"line_start":410,"line_end":410,"column_start":5,"column_end":26}},{"value":"/ let set = ordset![1, 3, 5, 7, 9];","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":236160,"byte_end":236197,"line_start":411,"line_end":411,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(Some(&5), set.get_prev(&6));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":236202,"byte_end":236245,"line_start":412,"line_end":412,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":236250,"byte_end":236257,"line_start":413,"line_end":413,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":236262,"byte_end":236273,"line_start":414,"line_end":414,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1459},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":236953,"byte_end":236961,"line_start":435,"line_end":435,"column_start":12,"column_end":20},"name":"get_next","qualname":"<OrdSet<A>>::get_next","value":"fn get_next(&Self, &A) -> Option<&A>","parent":null,"children":[],"decl_id":null,"docs":" Get the closest larger value in a set to a given value.","sig":null,"attributes":[{"value":"/ Get the closest larger value in a set to a given value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":236386,"byte_end":236445,"line_start":419,"line_end":419,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":236450,"byte_end":236453,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ If the set contains the given value, this is returned.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":236458,"byte_end":236516,"line_start":421,"line_end":421,"column_start":5,"column_end":63}},{"value":"/ Otherwise, the closest value in the set larger than the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":236521,"byte_end":236580,"line_start":422,"line_end":422,"column_start":5,"column_end":64}},{"value":"/ given value is returned. If the largest value in the set","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":236585,"byte_end":236645,"line_start":423,"line_end":423,"column_start":5,"column_end":65}},{"value":"/ is smaller than the given value, `None` is returned.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":236650,"byte_end":236706,"line_start":424,"line_end":424,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":236711,"byte_end":236714,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":236719,"byte_end":236733,"line_start":426,"line_end":426,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":236738,"byte_end":236741,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":236746,"byte_end":236757,"line_start":428,"line_end":428,"column_start":5,"column_end":16}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":236762,"byte_end":236797,"line_start":429,"line_end":429,"column_start":5,"column_end":40}},{"value":"/ # use im::OrdSet;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":236802,"byte_end":236823,"line_start":430,"line_end":430,"column_start":5,"column_end":26}},{"value":"/ let set = ordset![1, 3, 5, 7, 9];","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":236828,"byte_end":236865,"line_start":431,"line_end":431,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(Some(&5), set.get_next(&4));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":236870,"byte_end":236913,"line_start":432,"line_end":432,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":236918,"byte_end":236925,"line_start":433,"line_end":433,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":236930,"byte_end":236941,"line_start":434,"line_end":434,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1461},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":237276,"byte_end":237285,"line_start":444,"line_end":444,"column_start":12,"column_end":21},"name":"is_subset","qualname":"<OrdSet<A>>::is_subset","value":"fn is_subset<RS>(&Self, RS) -> bool where RS: Borrow<Self>","parent":null,"children":[],"decl_id":null,"docs":" Test whether a set is a subset of another set, meaning that\n all values in our set must also be in the other set.","sig":null,"attributes":[{"value":"/ Test whether a set is a subset of another set, meaning that","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":237054,"byte_end":237117,"line_start":439,"line_end":439,"column_start":5,"column_end":68}},{"value":"/ all values in our set must also be in the other set.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":237122,"byte_end":237178,"line_start":440,"line_end":440,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":237183,"byte_end":237186,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log m) where m is the size of the other set","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":237191,"byte_end":237248,"line_start":442,"line_end":442,"column_start":5,"column_end":62}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":237253,"byte_end":237264,"line_start":443,"line_end":443,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1464},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":237820,"byte_end":237836,"line_start":461,"line_end":461,"column_start":12,"column_end":28},"name":"is_proper_subset","qualname":"<OrdSet<A>>::is_proper_subset","value":"fn is_proper_subset<RS>(&Self, RS) -> bool where RS: Borrow<Self>","parent":null,"children":[],"decl_id":null,"docs":" Test whether a set is a proper subset of another set, meaning\n that all values in our set must also be in the other set. A\n proper subset must also be smaller than the other set.","sig":null,"attributes":[{"value":"/ Test whether a set is a proper subset of another set, meaning","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":237526,"byte_end":237591,"line_start":455,"line_end":455,"column_start":5,"column_end":70}},{"value":"/ that all values in our set must also be in the other set. A","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":237596,"byte_end":237659,"line_start":456,"line_end":456,"column_start":5,"column_end":68}},{"value":"/ proper subset must also be smaller than the other set.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":237664,"byte_end":237722,"line_start":457,"line_end":457,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":237727,"byte_end":237730,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log m) where m is the size of the other set","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":237735,"byte_end":237792,"line_start":459,"line_end":459,"column_start":5,"column_end":62}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":237797,"byte_end":237808,"line_start":460,"line_end":460,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1468},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":238413,"byte_end":238419,"line_start":491,"line_end":491,"column_start":12,"column_end":18},"name":"insert","qualname":"<OrdSet<A>>::insert","value":"fn insert(&mut Self, A) -> Option<A>","parent":null,"children":[],"decl_id":null,"docs":" Insert a value into a set.","sig":null,"attributes":[{"value":"/ Insert a value into a set.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":238036,"byte_end":238066,"line_start":473,"line_end":473,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":238071,"byte_end":238074,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":238079,"byte_end":238097,"line_start":475,"line_end":475,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":238102,"byte_end":238105,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":238110,"byte_end":238124,"line_start":477,"line_end":477,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":238129,"byte_end":238132,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":238137,"byte_end":238144,"line_start":479,"line_end":479,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":238149,"byte_end":238184,"line_start":480,"line_end":480,"column_start":5,"column_end":40}},{"value":"/ # use im::ordset::OrdSet;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":238189,"byte_end":238218,"line_start":481,"line_end":481,"column_start":5,"column_end":34}},{"value":"/ let mut set = ordset!{};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":238223,"byte_end":238251,"line_start":482,"line_end":482,"column_start":5,"column_end":33}},{"value":"/ set.insert(123);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":238256,"byte_end":238276,"line_start":483,"line_end":483,"column_start":5,"column_end":25}},{"value":"/ set.insert(456);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":238281,"byte_end":238301,"line_start":484,"line_end":484,"column_start":5,"column_end":25}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":238306,"byte_end":238321,"line_start":485,"line_end":485,"column_start":5,"column_end":20}},{"value":"/   set,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":238326,"byte_end":238336,"line_start":486,"line_end":486,"column_start":5,"column_end":15}},{"value":"/   ordset![123, 456]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":238341,"byte_end":238364,"line_start":487,"line_end":487,"column_start":5,"column_end":28}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":238369,"byte_end":238375,"line_start":488,"line_end":488,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":238380,"byte_end":238387,"line_start":489,"line_end":489,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":238392,"byte_end":238401,"line_start":490,"line_end":490,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1469},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":239193,"byte_end":239199,"line_start":515,"line_end":515,"column_start":12,"column_end":18},"name":"remove","qualname":"<OrdSet<A>>::remove","value":"fn remove<BA>(&mut Self, &BA) -> Option<A> where BA: Ord + ?Sized,\nA: Borrow<BA>","parent":null,"children":[],"decl_id":null,"docs":" Remove a value from a set.","sig":null,"attributes":[{"value":"/ Remove a value from a set.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":239106,"byte_end":239136,"line_start":511,"line_end":511,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":239141,"byte_end":239144,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":239149,"byte_end":239167,"line_start":513,"line_end":513,"column_start":5,"column_end":23}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":239172,"byte_end":239181,"line_start":514,"line_end":514,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1471},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":239947,"byte_end":239957,"line_start":539,"line_end":539,"column_start":12,"column_end":22},"name":"remove_min","qualname":"<OrdSet<A>>::remove_min","value":"fn remove_min(&mut Self) -> Option<A>","parent":null,"children":[],"decl_id":null,"docs":" Remove the smallest value from a set.","sig":null,"attributes":[{"value":"/ Remove the smallest value from a set.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":239863,"byte_end":239904,"line_start":536,"line_end":536,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":239909,"byte_end":239912,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":239917,"byte_end":239935,"line_start":538,"line_end":538,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":1472},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":240304,"byte_end":240314,"line_start":552,"line_end":552,"column_start":12,"column_end":22},"name":"remove_max","qualname":"<OrdSet<A>>::remove_max","value":"fn remove_max(&mut Self) -> Option<A>","parent":null,"children":[],"decl_id":null,"docs":" Remove the largest value from a set.","sig":null,"attributes":[{"value":"/ Remove the largest value from a set.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":240221,"byte_end":240261,"line_start":549,"line_end":549,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":240266,"byte_end":240269,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":240274,"byte_end":240292,"line_start":551,"line_end":551,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":1473},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":240968,"byte_end":240974,"line_start":579,"line_end":579,"column_start":12,"column_end":18},"name":"update","qualname":"<OrdSet<A>>::update","value":"fn update(&Self, A) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new set from the current set with the given value\n added.","sig":null,"attributes":[{"value":"/ Construct a new set from the current set with the given value","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":240578,"byte_end":240643,"line_start":562,"line_end":562,"column_start":5,"column_end":70}},{"value":"/ added.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":240648,"byte_end":240658,"line_start":563,"line_end":563,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":240663,"byte_end":240666,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":240671,"byte_end":240689,"line_start":565,"line_end":565,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":240694,"byte_end":240697,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":240702,"byte_end":240716,"line_start":567,"line_end":567,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":240721,"byte_end":240724,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":240729,"byte_end":240736,"line_start":569,"line_end":569,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":240741,"byte_end":240776,"line_start":570,"line_end":570,"column_start":5,"column_end":40}},{"value":"/ # use im::ordset::OrdSet;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":240781,"byte_end":240810,"line_start":571,"line_end":571,"column_start":5,"column_end":34}},{"value":"/ let set = ordset![456];","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":240815,"byte_end":240842,"line_start":572,"line_end":572,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":240847,"byte_end":240862,"line_start":573,"line_end":573,"column_start":5,"column_end":20}},{"value":"/   set.update(123),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":240867,"byte_end":240889,"line_start":574,"line_end":574,"column_start":5,"column_end":27}},{"value":"/   ordset![123, 456]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":240894,"byte_end":240917,"line_start":575,"line_end":575,"column_start":5,"column_end":28}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":240922,"byte_end":240928,"line_start":576,"line_end":576,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":240933,"byte_end":240940,"line_start":577,"line_end":577,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":240945,"byte_end":240956,"line_start":578,"line_end":578,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1474},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":241219,"byte_end":241226,"line_start":590,"line_end":590,"column_start":12,"column_end":19},"name":"without","qualname":"<OrdSet<A>>::without","value":"fn without<BA>(&Self, &BA) -> Self where BA: Ord + ?Sized, A: Borrow<BA>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new set with the given value removed if it's in\n the set.","sig":null,"attributes":[{"value":"/ Construct a new set with the given value removed if it's in","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":241080,"byte_end":241143,"line_start":585,"line_end":585,"column_start":5,"column_end":68}},{"value":"/ the set.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":241148,"byte_end":241160,"line_start":586,"line_end":586,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":241165,"byte_end":241168,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":241173,"byte_end":241191,"line_start":588,"line_end":588,"column_start":5,"column_end":23}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":241196,"byte_end":241207,"line_start":589,"line_end":589,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1476},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":241559,"byte_end":241570,"line_start":605,"line_end":605,"column_start":12,"column_end":23},"name":"without_min","qualname":"<OrdSet<A>>::without_min","value":"fn without_min(&Self) -> (Option<A>, Self)","parent":null,"children":[],"decl_id":null,"docs":" Remove the smallest value from a set, and return that value as\n well as the updated set.","sig":null,"attributes":[{"value":"/ Remove the smallest value from a set, and return that value as","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":241401,"byte_end":241467,"line_start":600,"line_end":600,"column_start":5,"column_end":71}},{"value":"/ well as the updated set.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":241472,"byte_end":241500,"line_start":601,"line_end":601,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":241505,"byte_end":241508,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":241513,"byte_end":241531,"line_start":603,"line_end":603,"column_start":5,"column_end":23}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":241536,"byte_end":241547,"line_start":604,"line_end":604,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1477},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":241911,"byte_end":241922,"line_start":617,"line_end":617,"column_start":12,"column_end":23},"name":"without_max","qualname":"<OrdSet<A>>::without_max","value":"fn without_max(&Self) -> (Option<A>, Self)","parent":null,"children":[],"decl_id":null,"docs":" Remove the largest value from a set, and return that value as\n well as the updated set.","sig":null,"attributes":[{"value":"/ Remove the largest value from a set, and return that value as","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":241754,"byte_end":241819,"line_start":612,"line_end":612,"column_start":5,"column_end":70}},{"value":"/ well as the updated set.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":241824,"byte_end":241852,"line_start":613,"line_end":613,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":241857,"byte_end":241860,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":241865,"byte_end":241883,"line_start":615,"line_end":615,"column_start":5,"column_end":23}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":241888,"byte_end":241899,"line_start":616,"line_end":616,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1478},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":242493,"byte_end":242498,"line_start":639,"line_end":639,"column_start":12,"column_end":17},"name":"union","qualname":"<OrdSet<A>>::union","value":"fn union(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct the union of two sets.","sig":null,"attributes":[{"value":"/ Construct the union of two sets.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":242106,"byte_end":242142,"line_start":624,"line_end":624,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":242147,"byte_end":242150,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":242155,"byte_end":242175,"line_start":626,"line_end":626,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":242180,"byte_end":242183,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":242188,"byte_end":242202,"line_start":628,"line_end":628,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":242207,"byte_end":242210,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":242215,"byte_end":242222,"line_start":630,"line_end":630,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":242227,"byte_end":242262,"line_start":631,"line_end":631,"column_start":5,"column_end":40}},{"value":"/ # use im::ordset::OrdSet;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":242267,"byte_end":242296,"line_start":632,"line_end":632,"column_start":5,"column_end":34}},{"value":"/ let set1 = ordset!{1, 2};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":242301,"byte_end":242330,"line_start":633,"line_end":633,"column_start":5,"column_end":34}},{"value":"/ let set2 = ordset!{2, 3};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":242335,"byte_end":242364,"line_start":634,"line_end":634,"column_start":5,"column_end":34}},{"value":"/ let expected = ordset!{1, 2, 3};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":242369,"byte_end":242405,"line_start":635,"line_end":635,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(expected, set1.union(set2));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":242410,"byte_end":242453,"line_start":636,"line_end":636,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":242458,"byte_end":242465,"line_start":637,"line_end":637,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":242470,"byte_end":242481,"line_start":638,"line_end":638,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1479},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":242893,"byte_end":242899,"line_start":655,"line_end":655,"column_start":12,"column_end":18},"name":"unions","qualname":"<OrdSet<A>>::unions","value":"fn unions<I>(I) -> Self where I: IntoIterator<Item = Self>","parent":null,"children":[],"decl_id":null,"docs":" Construct the union of multiple sets.","sig":null,"attributes":[{"value":"/ Construct the union of multiple sets.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":242791,"byte_end":242832,"line_start":651,"line_end":651,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":242837,"byte_end":242840,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":242845,"byte_end":242865,"line_start":653,"line_end":653,"column_start":5,"column_end":25}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":242870,"byte_end":242881,"line_start":654,"line_end":654,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1481},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":243621,"byte_end":243631,"line_start":682,"line_end":682,"column_start":12,"column_end":22},"name":"difference","qualname":"<OrdSet<A>>::difference","value":"fn difference(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct the symmetric difference between two sets.","sig":null,"attributes":[{"value":"/ Construct the symmetric difference between two sets.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":243039,"byte_end":243095,"line_start":662,"line_end":662,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":243100,"byte_end":243103,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ This is an alias for the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":243108,"byte_end":243136,"line_start":664,"line_end":664,"column_start":5,"column_end":33}},{"value":"/ [`symmetric_difference`][symmetric_difference] method.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":243141,"byte_end":243199,"line_start":665,"line_end":665,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":243204,"byte_end":243207,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":243212,"byte_end":243232,"line_start":667,"line_end":667,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":243237,"byte_end":243240,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":243245,"byte_end":243259,"line_start":669,"line_end":669,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":243264,"byte_end":243267,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":243272,"byte_end":243279,"line_start":671,"line_end":671,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":243284,"byte_end":243319,"line_start":672,"line_end":672,"column_start":5,"column_end":40}},{"value":"/ # use im::ordset::OrdSet;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":243324,"byte_end":243353,"line_start":673,"line_end":673,"column_start":5,"column_end":34}},{"value":"/ let set1 = ordset!{1, 2};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":243358,"byte_end":243387,"line_start":674,"line_end":674,"column_start":5,"column_end":34}},{"value":"/ let set2 = ordset!{2, 3};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":243392,"byte_end":243421,"line_start":675,"line_end":675,"column_start":5,"column_end":34}},{"value":"/ let expected = ordset!{1, 3};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":243426,"byte_end":243459,"line_start":676,"line_end":676,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(expected, set1.difference(set2));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":243464,"byte_end":243512,"line_start":677,"line_end":677,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":243517,"byte_end":243524,"line_start":678,"line_end":678,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":243529,"byte_end":243532,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ [symmetric_difference]: #method.symmetric_difference","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":243537,"byte_end":243593,"line_start":680,"line_end":680,"column_start":5,"column_end":61}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":243598,"byte_end":243609,"line_start":681,"line_end":681,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1482},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":244132,"byte_end":244152,"line_start":701,"line_end":701,"column_start":12,"column_end":32},"name":"symmetric_difference","qualname":"<OrdSet<A>>::symmetric_difference","value":"fn symmetric_difference(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct the symmetric difference between two sets.","sig":null,"attributes":[{"value":"/ Construct the symmetric difference between two sets.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":243713,"byte_end":243769,"line_start":686,"line_end":686,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":243774,"byte_end":243777,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":243782,"byte_end":243802,"line_start":688,"line_end":688,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":243807,"byte_end":243810,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":243815,"byte_end":243829,"line_start":690,"line_end":690,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":243834,"byte_end":243837,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":243842,"byte_end":243849,"line_start":692,"line_end":692,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":243854,"byte_end":243889,"line_start":693,"line_end":693,"column_start":5,"column_end":40}},{"value":"/ # use im::ordset::OrdSet;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":243894,"byte_end":243923,"line_start":694,"line_end":694,"column_start":5,"column_end":34}},{"value":"/ let set1 = ordset!{1, 2};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":243928,"byte_end":243957,"line_start":695,"line_end":695,"column_start":5,"column_end":34}},{"value":"/ let set2 = ordset!{2, 3};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":243962,"byte_end":243991,"line_start":696,"line_end":696,"column_start":5,"column_end":34}},{"value":"/ let expected = ordset!{1, 3};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":243996,"byte_end":244029,"line_start":697,"line_end":697,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(expected, set1.symmetric_difference(set2));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":244034,"byte_end":244092,"line_start":698,"line_end":698,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":244097,"byte_end":244104,"line_start":699,"line_end":699,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":244109,"byte_end":244120,"line_start":700,"line_end":700,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1483},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":244871,"byte_end":244890,"line_start":726,"line_end":726,"column_start":12,"column_end":31},"name":"relative_complement","qualname":"<OrdSet<A>>::relative_complement","value":"fn relative_complement(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct the relative complement between two sets, that is the set\n of values in `self` that do not occur in `other`.","sig":null,"attributes":[{"value":"/ Construct the relative complement between two sets, that is the set","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":244346,"byte_end":244417,"line_start":710,"line_end":710,"column_start":5,"column_end":76}},{"value":"/ of values in `self` that do not occur in `other`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":244422,"byte_end":244475,"line_start":711,"line_end":711,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":244480,"byte_end":244483,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ Time: O(m log n) where m is the size of the other set","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":244488,"byte_end":244545,"line_start":713,"line_end":713,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":244550,"byte_end":244553,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":244558,"byte_end":244572,"line_start":715,"line_end":715,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":244577,"byte_end":244580,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":244585,"byte_end":244592,"line_start":717,"line_end":717,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":244597,"byte_end":244632,"line_start":718,"line_end":718,"column_start":5,"column_end":40}},{"value":"/ # use im::ordset::OrdSet;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":244637,"byte_end":244666,"line_start":719,"line_end":719,"column_start":5,"column_end":34}},{"value":"/ let set1 = ordset!{1, 2};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":244671,"byte_end":244700,"line_start":720,"line_end":720,"column_start":5,"column_end":34}},{"value":"/ let set2 = ordset!{2, 3};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":244705,"byte_end":244734,"line_start":721,"line_end":721,"column_start":5,"column_end":34}},{"value":"/ let expected = ordset!{1};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":244739,"byte_end":244769,"line_start":722,"line_end":722,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(expected, set1.relative_complement(set2));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":244774,"byte_end":244831,"line_start":723,"line_end":723,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":244836,"byte_end":244843,"line_start":724,"line_end":724,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":244848,"byte_end":244859,"line_start":725,"line_end":725,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1484},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":245423,"byte_end":245435,"line_start":748,"line_end":748,"column_start":12,"column_end":24},"name":"intersection","qualname":"<OrdSet<A>>::intersection","value":"fn intersection(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct the intersection of two sets.","sig":null,"attributes":[{"value":"/ Construct the intersection of two sets.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":245028,"byte_end":245071,"line_start":733,"line_end":733,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":245076,"byte_end":245079,"line_start":734,"line_end":734,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":245084,"byte_end":245104,"line_start":735,"line_end":735,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":245109,"byte_end":245112,"line_start":736,"line_end":736,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":245117,"byte_end":245131,"line_start":737,"line_end":737,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":245136,"byte_end":245139,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":245144,"byte_end":245151,"line_start":739,"line_end":739,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":245156,"byte_end":245191,"line_start":740,"line_end":740,"column_start":5,"column_end":40}},{"value":"/ # use im::ordset::OrdSet;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":245196,"byte_end":245225,"line_start":741,"line_end":741,"column_start":5,"column_end":34}},{"value":"/ let set1 = ordset!{1, 2};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":245230,"byte_end":245259,"line_start":742,"line_end":742,"column_start":5,"column_end":34}},{"value":"/ let set2 = ordset!{2, 3};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":245264,"byte_end":245293,"line_start":743,"line_end":743,"column_start":5,"column_end":34}},{"value":"/ let expected = ordset!{2};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":245298,"byte_end":245328,"line_start":744,"line_end":744,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(expected, set1.intersection(set2));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":245333,"byte_end":245383,"line_start":745,"line_end":745,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":245388,"byte_end":245395,"line_start":746,"line_end":746,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":245400,"byte_end":245411,"line_start":747,"line_end":747,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1485},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":245950,"byte_end":245955,"line_start":766,"line_end":766,"column_start":12,"column_end":17},"name":"split","qualname":"<OrdSet<A>>::split","value":"fn split<BA>(Self, &BA) -> (Self, Self) where BA: Ord + ?Sized, A: Borrow<BA>","parent":null,"children":[],"decl_id":null,"docs":" Split a set into two, with the left hand set containing values\n which are smaller than `split`, and the right hand set\n containing values which are larger than `split`.","sig":null,"attributes":[{"value":"/ Split a set into two, with the left hand set containing values","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":245654,"byte_end":245720,"line_start":758,"line_end":758,"column_start":5,"column_end":71}},{"value":"/ which are smaller than `split`, and the right hand set","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":245725,"byte_end":245783,"line_start":759,"line_end":759,"column_start":5,"column_end":63}},{"value":"/ containing values which are larger than `split`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":245788,"byte_end":245840,"line_start":760,"line_end":760,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":245845,"byte_end":245848,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ The `split` value itself is discarded.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":245853,"byte_end":245895,"line_start":762,"line_end":762,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":245900,"byte_end":245903,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ Time: O(n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":245908,"byte_end":245922,"line_start":764,"line_end":764,"column_start":5,"column_end":19}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":245927,"byte_end":245938,"line_start":765,"line_end":765,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1487},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":246553,"byte_end":246565,"line_start":785,"line_end":785,"column_start":12,"column_end":24},"name":"split_member","qualname":"<OrdSet<A>>::split_member","value":"fn split_member<BA>(Self, &BA) -> (Self, bool, Self) where BA: Ord + ?Sized,\nA: Borrow<BA>","parent":null,"children":[],"decl_id":null,"docs":" Split a set into two, with the left hand set containing values\n which are smaller than `split`, and the right hand set\n containing values which are larger than `split`.","sig":null,"attributes":[{"value":"/ Split a set into two, with the left hand set containing values","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":246149,"byte_end":246215,"line_start":775,"line_end":775,"column_start":5,"column_end":71}},{"value":"/ which are smaller than `split`, and the right hand set","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":246220,"byte_end":246278,"line_start":776,"line_end":776,"column_start":5,"column_end":63}},{"value":"/ containing values which are larger than `split`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":246283,"byte_end":246335,"line_start":777,"line_end":777,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":246340,"byte_end":246343,"line_start":778,"line_end":778,"column_start":5,"column_end":8}},{"value":"/ Returns a tuple of the two sets and a boolean which is true if","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":246348,"byte_end":246414,"line_start":779,"line_end":779,"column_start":5,"column_end":71}},{"value":"/ the `split` value existed in the original set, and false","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":246419,"byte_end":246479,"line_start":780,"line_end":780,"column_start":5,"column_end":65}},{"value":"/ otherwise.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":246484,"byte_end":246498,"line_start":781,"line_end":781,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":246503,"byte_end":246506,"line_start":782,"line_end":782,"column_start":5,"column_end":8}},{"value":"/ Time: O(n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":246511,"byte_end":246525,"line_start":783,"line_end":783,"column_start":5,"column_end":19}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":246530,"byte_end":246541,"line_start":784,"line_end":784,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1489},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":247346,"byte_end":247350,"line_start":814,"line_end":814,"column_start":12,"column_end":16},"name":"take","qualname":"<OrdSet<A>>::take","value":"fn take(&Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a set with only the `n` smallest values from a given\n set.","sig":null,"attributes":[{"value":"/ Construct a set with only the `n` smallest values from a given","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":247212,"byte_end":247278,"line_start":809,"line_end":809,"column_start":5,"column_end":71}},{"value":"/ set.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":247283,"byte_end":247291,"line_start":810,"line_end":810,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":247296,"byte_end":247299,"line_start":811,"line_end":811,"column_start":5,"column_end":8}},{"value":"/ Time: O(n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":247304,"byte_end":247318,"line_start":812,"line_end":812,"column_start":5,"column_end":19}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":247323,"byte_end":247334,"line_start":813,"line_end":813,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1490},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":247573,"byte_end":247577,"line_start":823,"line_end":823,"column_start":12,"column_end":16},"name":"skip","qualname":"<OrdSet<A>>::skip","value":"fn skip(&Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a set with the `n` smallest values removed from a\n given set.","sig":null,"attributes":[{"value":"/ Construct a set with the `n` smallest values removed from a","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":247436,"byte_end":247499,"line_start":818,"line_end":818,"column_start":5,"column_end":68}},{"value":"/ given set.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":247504,"byte_end":247518,"line_start":819,"line_end":819,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":247523,"byte_end":247526,"line_start":820,"line_end":820,"column_start":5,"column_end":8}},{"value":"/ Time: O(n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":247531,"byte_end":247545,"line_start":821,"line_end":821,"column_start":5,"column_end":19}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":247550,"byte_end":247561,"line_start":822,"line_end":822,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1493},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":247776,"byte_end":247781,"line_start":835,"line_end":835,"column_start":8,"column_end":13},"name":"clone","qualname":"<OrdSet<A> as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":" Clone a set.","sig":null,"attributes":[{"value":"/ Clone a set.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":247711,"byte_end":247727,"line_start":831,"line_end":831,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":247732,"byte_end":247735,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ Time: O(1)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":247740,"byte_end":247754,"line_start":833,"line_end":833,"column_start":5,"column_end":19}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":247759,"byte_end":247768,"line_start":834,"line_end":834,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1496},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":247984,"byte_end":247986,"line_start":845,"line_end":845,"column_start":8,"column_end":10},"name":"eq","qualname":"<OrdSet<A> as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &Self) -> bool","parent":{"krate":2,"index":2831},"children":[],"decl_id":{"krate":2,"index":2833},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1501},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":248242,"byte_end":248253,"line_start":854,"line_end":854,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<OrdSet<A> as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp(&Self, &Self) -> Option<Ordering>","parent":{"krate":2,"index":2877},"children":[],"decl_id":{"krate":2,"index":2879},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1504},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":248392,"byte_end":248395,"line_start":860,"line_end":860,"column_start":8,"column_end":11},"name":"cmp","qualname":"<OrdSet<A> as std::cmp::Ord>::cmp","value":"fn cmp(&Self, &Self) -> Ordering","parent":{"krate":2,"index":2867},"children":[],"decl_id":{"krate":2,"index":2868},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1507},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":248526,"byte_end":248530,"line_start":866,"line_end":866,"column_start":8,"column_end":12},"name":"hash","qualname":"<OrdSet<A> as std::hash::Hash>::hash","value":"fn hash<H>(&Self, &mut H) where H: Hasher","parent":{"krate":2,"index":10324},"children":[],"decl_id":{"krate":2,"index":10325},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1511},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":248707,"byte_end":248714,"line_start":877,"line_end":877,"column_start":8,"column_end":15},"name":"default","qualname":"<OrdSet<A> as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1515},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":248836,"byte_end":248839,"line_start":885,"line_end":885,"column_start":8,"column_end":11},"name":"add","qualname":"<OrdSet<A> as std::ops::Add>::add","value":"fn add(Self, Self) -> Self::Output","parent":{"krate":2,"index":3247},"children":[],"decl_id":{"krate":2,"index":3250},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1520},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":248998,"byte_end":249001,"line_start":893,"line_end":893,"column_start":8,"column_end":11},"name":"add","qualname":"<&'a OrdSet<A> as std::ops::Add>::add","value":"fn add(Self, Self) -> Self::Output","parent":{"krate":2,"index":3247},"children":[],"decl_id":{"krate":2,"index":3250},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1524},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":249168,"byte_end":249171,"line_start":901,"line_end":901,"column_start":8,"column_end":11},"name":"mul","qualname":"<OrdSet<A> as std::ops::Mul>::mul","value":"fn mul(Self, Self) -> Self::Output","parent":{"krate":2,"index":3257},"children":[],"decl_id":{"krate":2,"index":3260},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1529},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":249337,"byte_end":249340,"line_start":909,"line_end":909,"column_start":8,"column_end":11},"name":"mul","qualname":"<&'a OrdSet<A> as std::ops::Mul>::mul","value":"fn mul(Self, Self) -> Self::Output","parent":{"krate":2,"index":3257},"children":[],"decl_id":{"krate":2,"index":3260},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1532},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":249484,"byte_end":249487,"line_start":915,"line_end":915,"column_start":8,"column_end":11},"name":"sum","qualname":"<OrdSet<A> as std::iter::Sum>::sum","value":"fn sum<I>(I) -> Self where I: Iterator<Item = Self>","parent":{"krate":2,"index":8238},"children":[],"decl_id":{"krate":2,"index":8240},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1538},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":249688,"byte_end":249694,"line_start":927,"line_end":927,"column_start":8,"column_end":14},"name":"extend","qualname":"<OrdSet<A> as std::iter::Extend>::extend","value":"fn extend<I>(&mut Self, I) where I: IntoIterator<Item = R>","parent":{"krate":2,"index":8288},"children":[],"decl_id":{"krate":2,"index":8290},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1542},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":249910,"byte_end":249913,"line_start":938,"line_end":938,"column_start":8,"column_end":11},"name":"fmt","qualname":"<OrdSet<A> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut Formatter) -> Result<(), Error>","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1543},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":250097,"byte_end":250101,"line_start":946,"line_end":946,"column_start":12,"column_end":16},"name":"Iter","qualname":"::ord::set::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":1546}],"decl_id":null,"docs":" An iterator over the elements of a set.\n","sig":null,"attributes":[{"value":"/ An iterator over the elements of a set.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":250042,"byte_end":250085,"line_start":945,"line_end":945,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1551},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":250323,"byte_end":250327,"line_start":959,"line_end":959,"column_start":8,"column_end":12},"name":"next","qualname":"<Iter as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8476},"docs":" Advance the iterator and return the next value.","sig":null,"attributes":[{"value":"/ Advance the iterator and return the next value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":250236,"byte_end":250287,"line_start":956,"line_end":956,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":250292,"byte_end":250295,"line_start":957,"line_end":957,"column_start":5,"column_end":8}},{"value":"/ Time: O(1)*","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":250300,"byte_end":250315,"line_start":958,"line_end":958,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1552},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":250418,"byte_end":250427,"line_start":963,"line_end":963,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Iter as std::iter::Iterator>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8477},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1556},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":250605,"byte_end":250614,"line_start":972,"line_end":972,"column_start":8,"column_end":17},"name":"next_back","qualname":"<Iter as std::iter::DoubleEndedIterator>::next_back","value":"fn next_back(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8323},"children":[],"decl_id":{"krate":2,"index":8324},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1560},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":251023,"byte_end":251033,"line_start":984,"line_end":984,"column_start":12,"column_end":22},"name":"RangedIter","qualname":"::ord::set::RangedIter","value":"RangedIter {  }","parent":null,"children":[{"krate":0,"index":1563}],"decl_id":null,"docs":" A ranged iterator over the elements of a set.","sig":null,"attributes":[{"value":"/ A ranged iterator over the elements of a set.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":250773,"byte_end":250822,"line_start":979,"line_end":979,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":250823,"byte_end":250826,"line_start":980,"line_end":980,"column_start":1,"column_end":4}},{"value":"/ The only difference from `Iter` is that this one doesn't implement","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":250827,"byte_end":250897,"line_start":981,"line_end":981,"column_start":1,"column_end":71}},{"value":"/ `ExactSizeIterator` because we can't know the size of the range without first","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":250898,"byte_end":250979,"line_start":982,"line_end":982,"column_start":1,"column_end":82}},{"value":"/ iterating over it to count.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":250980,"byte_end":251011,"line_start":983,"line_end":983,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1568},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":251261,"byte_end":251265,"line_start":997,"line_end":997,"column_start":8,"column_end":12},"name":"next","qualname":"<RangedIter as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8476},"docs":" Advance the iterator and return the next value.","sig":null,"attributes":[{"value":"/ Advance the iterator and return the next value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":251174,"byte_end":251225,"line_start":994,"line_end":994,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":251230,"byte_end":251233,"line_start":995,"line_end":995,"column_start":5,"column_end":8}},{"value":"/ Time: O(1)*","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":251238,"byte_end":251253,"line_start":996,"line_end":996,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1569},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":251356,"byte_end":251365,"line_start":1001,"line_end":1001,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<RangedIter as std::iter::Iterator>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8477},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1573},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":251524,"byte_end":251533,"line_start":1010,"line_end":1010,"column_start":8,"column_end":17},"name":"next_back","qualname":"<RangedIter as std::iter::DoubleEndedIterator>::next_back","value":"fn next_back(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8323},"children":[],"decl_id":{"krate":2,"index":8324},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1574},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":251688,"byte_end":251701,"line_start":1016,"line_end":1016,"column_start":12,"column_end":25},"name":"ConsumingIter","qualname":"::ord::set::ConsumingIter","value":"ConsumingIter {  }","parent":null,"children":[{"krate":0,"index":1576}],"decl_id":null,"docs":" A consuming iterator over the elements of a set.\n","sig":null,"attributes":[{"value":"/ A consuming iterator over the elements of a set.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":251624,"byte_end":251676,"line_start":1015,"line_end":1015,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1580},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":251924,"byte_end":251928,"line_start":1029,"line_end":1029,"column_start":8,"column_end":12},"name":"next","qualname":"<ConsumingIter<A> as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8476},"docs":" Advance the iterator and return the next value.","sig":null,"attributes":[{"value":"/ Advance the iterator and return the next value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":251837,"byte_end":251888,"line_start":1026,"line_end":1026,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":251893,"byte_end":251896,"line_start":1027,"line_end":1027,"column_start":5,"column_end":8}},{"value":"/ Time: O(1)*","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":251901,"byte_end":251916,"line_start":1028,"line_end":1028,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":1582},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":252074,"byte_end":252082,"line_start":1035,"line_end":1035,"column_start":12,"column_end":20},"name":"DiffIter","qualname":"::ord::set::DiffIter","value":"DiffIter {  }","parent":null,"children":[{"krate":0,"index":1585}],"decl_id":null,"docs":" An iterator over the difference between two sets.\n","sig":null,"attributes":[{"value":"/ An iterator over the difference between two sets.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":252009,"byte_end":252062,"line_start":1034,"line_end":1034,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1590},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":252329,"byte_end":252333,"line_start":1048,"line_end":1048,"column_start":8,"column_end":12},"name":"next","qualname":"<DiffIter as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8476},"docs":" Advance the iterator and return the next value.","sig":null,"attributes":[{"value":"/ Advance the iterator and return the next value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":252242,"byte_end":252293,"line_start":1045,"line_end":1045,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":252298,"byte_end":252301,"line_start":1046,"line_end":1046,"column_start":5,"column_end":8}},{"value":"/ Time: O(1)*","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":252306,"byte_end":252321,"line_start":1047,"line_end":1047,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1595},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":252791,"byte_end":252800,"line_start":1064,"line_end":1064,"column_start":8,"column_end":17},"name":"from_iter","qualname":"<OrdSet<A> as std::iter::FromIterator>::from_iter","value":"fn from_iter<T>(T) -> Self where T: IntoIterator<Item = R>","parent":{"krate":2,"index":8275},"children":[],"decl_id":{"krate":2,"index":8277},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1602},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":253133,"byte_end":253142,"line_start":1083,"line_end":1083,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<&'a OrdSet<A> as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":2,"index":8279},"children":[],"decl_id":{"krate":2,"index":8282},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1607},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":253326,"byte_end":253335,"line_start":1095,"line_end":1095,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<OrdSet<A> as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":2,"index":8279},"children":[],"decl_id":{"krate":2,"index":8282},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1613},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":253634,"byte_end":253638,"line_start":1109,"line_end":1109,"column_start":8,"column_end":12},"name":"from","qualname":"<OrdSet<OA> as std::convert::From>::from","value":"fn from(&OrdSet<&A>) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1618},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":253805,"byte_end":253809,"line_start":1118,"line_end":1118,"column_start":8,"column_end":12},"name":"from","qualname":"<OrdSet<A> as std::convert::From>::from","value":"fn from(&'a [A]) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1621},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":253942,"byte_end":253946,"line_start":1124,"line_end":1124,"column_start":8,"column_end":12},"name":"from","qualname":"<OrdSet<A> as std::convert::From>::from","value":"fn from(Vec<A>) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1625},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":254078,"byte_end":254082,"line_start":1130,"line_end":1130,"column_start":8,"column_end":12},"name":"from","qualname":"<OrdSet<A> as std::convert::From>::from","value":"fn from(&Vec<A>) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1628},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":254240,"byte_end":254244,"line_start":1136,"line_end":1136,"column_start":8,"column_end":12},"name":"from","qualname":"<OrdSet<A> as std::convert::From>::from","value":"fn from(collections::HashSet<A>) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1632},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":254432,"byte_end":254436,"line_start":1142,"line_end":1142,"column_start":8,"column_end":12},"name":"from","qualname":"<OrdSet<A> as std::convert::From>::from","value":"fn from(&collections::HashSet<A>) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1635},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":254610,"byte_end":254614,"line_start":1148,"line_end":1148,"column_start":8,"column_end":12},"name":"from","qualname":"<OrdSet<A> as std::convert::From>::from","value":"fn from(collections::BTreeSet<A>) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1639},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":254794,"byte_end":254798,"line_start":1154,"line_end":1154,"column_start":8,"column_end":12},"name":"from","qualname":"<OrdSet<A> as std::convert::From>::from","value":"fn from(&collections::BTreeSet<A>) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1643},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":254992,"byte_end":254996,"line_start":1160,"line_end":1160,"column_start":8,"column_end":12},"name":"from","qualname":"<OrdSet<A> as std::convert::From>::from","value":"fn from(HashSet<A, S>) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1648},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":255178,"byte_end":255182,"line_start":1166,"line_end":1166,"column_start":8,"column_end":12},"name":"from","qualname":"<OrdSet<A> as std::convert::From>::from","value":"fn from(&HashSet<A, S>) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1656},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"map","qualname":"::hash::map","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","parent":null,"children":[{"krate":0,"index":1657},{"krate":0,"index":1660},{"krate":0,"index":1663},{"krate":0,"index":1666},{"krate":0,"index":1669},{"krate":0,"index":1670},{"krate":0,"index":1671},{"krate":0,"index":1673},{"krate":0,"index":1674},{"krate":0,"index":1676},{"krate":0,"index":1679},{"krate":0,"index":1680},{"krate":0,"index":1683},{"krate":0,"index":1684},{"krate":0,"index":1686},{"krate":0,"index":1689},{"krate":0,"index":1690},{"krate":0,"index":1693},{"krate":0,"index":1696},{"krate":0,"index":1699},{"krate":0,"index":1702},{"krate":0,"index":1703},{"krate":0,"index":1706},{"krate":0,"index":1709},{"krate":0,"index":1712},{"krate":0,"index":1713},{"krate":0,"index":1716},{"krate":0,"index":1719},{"krate":0,"index":1722},{"krate":0,"index":1725},{"krate":0,"index":1728},{"krate":0,"index":1731},{"krate":0,"index":1734},{"krate":0,"index":1735},{"krate":0,"index":1738},{"krate":0,"index":1741},{"krate":0,"index":1744},{"krate":0,"index":3737},{"krate":0,"index":3742},{"krate":0,"index":3748},{"krate":0,"index":3752},{"krate":0,"index":1745},{"krate":0,"index":1753},{"krate":0,"index":1759},{"krate":0,"index":1763},{"krate":0,"index":1767},{"krate":0,"index":1784},{"krate":0,"index":1811},{"krate":0,"index":1889},{"krate":0,"index":1900},{"krate":0,"index":1913},{"krate":0,"index":1921},{"krate":0,"index":1933},{"krate":0,"index":1941},{"krate":0,"index":1949},{"krate":0,"index":1954},{"krate":0,"index":1959},{"krate":0,"index":1963},{"krate":0,"index":1968},{"krate":0,"index":1973},{"krate":0,"index":1979},{"krate":0,"index":1984},{"krate":0,"index":1990},{"krate":0,"index":1997},{"krate":0,"index":2004},{"krate":0,"index":2012},{"krate":0,"index":2020},{"krate":0,"index":2027},{"krate":0,"index":2032},{"krate":0,"index":2037},{"krate":0,"index":2045},{"krate":0,"index":2049},{"krate":0,"index":2053},{"krate":0,"index":2058},{"krate":0,"index":2066},{"krate":0,"index":2070},{"krate":0,"index":2074},{"krate":0,"index":2077},{"krate":0,"index":2083},{"krate":0,"index":2085},{"krate":0,"index":2087},{"krate":0,"index":2092},{"krate":0,"index":2100},{"krate":0,"index":2104},{"krate":0,"index":2108},{"krate":0,"index":2113},{"krate":0,"index":2121},{"krate":0,"index":2125},{"krate":0,"index":2129},{"krate":0,"index":2137},{"krate":0,"index":2144},{"krate":0,"index":2150},{"krate":0,"index":2155},{"krate":0,"index":2167},{"krate":0,"index":2173},{"krate":0,"index":2178},{"krate":0,"index":2184},{"krate":0,"index":2189},{"krate":0,"index":2196},{"krate":0,"index":2201}],"decl_id":null,"docs":" An unordered map.","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/mod.rs","byte_start":258093,"byte_end":258105,"line_start":5,"line_end":5,"column_start":1,"column_end":13}},{"value":"/ An unordered map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":258349,"byte_end":258370,"line_start":5,"line_end":5,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":258371,"byte_end":258374,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ An immutable hash map using [hash array mapped tries][1].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":258375,"byte_end":258436,"line_start":7,"line_end":7,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":258437,"byte_end":258440,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Most operations on this map are O(log<sub>x</sub> n) for a","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":258441,"byte_end":258503,"line_start":9,"line_end":9,"column_start":1,"column_end":63}},{"value":"/ suitably high *x* that it should be nearly O(1) for most maps.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":258504,"byte_end":258570,"line_start":10,"line_end":10,"column_start":1,"column_end":67}},{"value":"/ Because of this, it's a great choice for a generic map as long as","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":258571,"byte_end":258640,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/ you don't mind that keys will need to implement","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":258641,"byte_end":258692,"line_start":12,"line_end":12,"column_start":1,"column_end":52}},{"value":"/ [`Hash`][std::hash::Hash] and [`Eq`][std::cmp::Eq].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":258693,"byte_end":258748,"line_start":13,"line_end":13,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":258749,"byte_end":258752,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Map entries will have a predictable order based on the hasher","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":258753,"byte_end":258818,"line_start":15,"line_end":15,"column_start":1,"column_end":66}},{"value":"/ being used. Unless otherwise specified, this will be the standard","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":258819,"byte_end":258888,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/ [`RandomState`][std::collections::hash_map::RandomState] hasher.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":258889,"byte_end":258957,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":258958,"byte_end":258961,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [1]: https://en.wikipedia.org/wiki/Hash_array_mapped_trie","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":258962,"byte_end":259023,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ [std::cmp::Eq]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":259024,"byte_end":259091,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/ [std::hash::Hash]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":259092,"byte_end":259165,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"/ [std::collections::hash_map::RandomState]: https://doc.rust-lang.org/std/collections/hash_map/struct.RandomState.html","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":259166,"byte_end":259287,"line_start":22,"line_end":22,"column_start":1,"column_end":122}}]},{"kind":"Struct","id":{"krate":0,"index":3737},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":260584,"byte_end":260595,"line_start":79,"line_end":79,"column_start":11,"column_end":22},"name":"HashMapPool","qualname":"::hash::map::HashMapPool","value":"","parent":null,"children":[],"decl_id":null,"docs":" A memory pool for the appropriate node type.\n","sig":null,"attributes":[{"value":"/ A memory pool for the appropriate node type.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/util.rs","byte_start":147885,"byte_end":147933,"line_start":110,"line_end":110,"column_start":9,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":1745},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":261569,"byte_end":261576,"line_start":100,"line_end":100,"column_start":12,"column_end":19},"name":"HashMap","qualname":"::hash::map::HashMap","value":"HashMap {  }","parent":null,"children":[{"krate":0,"index":1749},{"krate":0,"index":1750},{"krate":0,"index":1751},{"krate":0,"index":1752}],"decl_id":null,"docs":" An unordered map.","sig":null,"attributes":[{"value":"/ An unordered map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":260617,"byte_end":260638,"line_start":81,"line_end":81,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":260639,"byte_end":260642,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ An immutable hash map using [hash array mapped tries] [1].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":260643,"byte_end":260705,"line_start":83,"line_end":83,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":260706,"byte_end":260709,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ Most operations on this map are O(log<sub>x</sub> n) for a","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":260710,"byte_end":260772,"line_start":85,"line_end":85,"column_start":1,"column_end":63}},{"value":"/ suitably high *x* that it should be nearly O(1) for most maps.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":260773,"byte_end":260839,"line_start":86,"line_end":86,"column_start":1,"column_end":67}},{"value":"/ Because of this, it's a great choice for a generic map as long as","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":260840,"byte_end":260909,"line_start":87,"line_end":87,"column_start":1,"column_end":70}},{"value":"/ you don't mind that keys will need to implement","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":260910,"byte_end":260961,"line_start":88,"line_end":88,"column_start":1,"column_end":52}},{"value":"/ [`Hash`][std::hash::Hash] and [`Eq`][std::cmp::Eq].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":260962,"byte_end":261017,"line_start":89,"line_end":89,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":261018,"byte_end":261021,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ Map entries will have a predictable order based on the hasher","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":261022,"byte_end":261087,"line_start":91,"line_end":91,"column_start":1,"column_end":66}},{"value":"/ being used. Unless otherwise specified, this will be the standard","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":261088,"byte_end":261157,"line_start":92,"line_end":92,"column_start":1,"column_end":70}},{"value":"/ [`RandomState`][std::collections::hash_map::RandomState] hasher.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":261158,"byte_end":261226,"line_start":93,"line_end":93,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":261227,"byte_end":261230,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ [1]: https://en.wikipedia.org/wiki/Hash_array_mapped_trie","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":261231,"byte_end":261292,"line_start":95,"line_end":95,"column_start":1,"column_end":62}},{"value":"/ [std::cmp::Eq]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":261293,"byte_end":261360,"line_start":96,"line_end":96,"column_start":1,"column_end":68}},{"value":"/ [std::hash::Hash]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":261361,"byte_end":261434,"line_start":97,"line_end":97,"column_start":1,"column_end":74}},{"value":"/ [std::collections::hash_map::RandomState]: https://doc.rust-lang.org/std/collections/hash_map/struct.RandomState.html","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":261435,"byte_end":261556,"line_start":98,"line_end":98,"column_start":1,"column_end":122}}]},{"kind":"Method","id":{"krate":0,"index":1757},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":261781,"byte_end":261792,"line_start":113,"line_end":113,"column_start":8,"column_end":19},"name":"extract_key","qualname":"<(K, V) as nodes::hamt::HashValue>::extract_key","value":"fn extract_key(&Self) -> &Self::Key","parent":{"krate":0,"index":376},"children":[],"decl_id":{"krate":0,"index":378},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1758},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":261846,"byte_end":261852,"line_start":117,"line_end":117,"column_start":8,"column_end":14},"name":"ptr_eq","qualname":"<(K, V) as nodes::hamt::HashValue>::ptr_eq","value":"fn ptr_eq(&Self, &Self) -> bool","parent":{"krate":0,"index":376},"children":[],"decl_id":{"krate":0,"index":379},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1762},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":262026,"byte_end":262029,"line_start":126,"line_end":126,"column_start":12,"column_end":15},"name":"new","qualname":"<HashMap<K, V, RandomState>>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct an empty hash map.\n","sig":null,"attributes":[{"value":"/ Construct an empty hash map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":261952,"byte_end":261984,"line_start":123,"line_end":123,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":261989,"byte_end":261998,"line_start":124,"line_end":124,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":262003,"byte_end":262014,"line_start":125,"line_end":125,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1766},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":262886,"byte_end":262890,"line_start":164,"line_end":164,"column_start":12,"column_end":16},"name":"unit","qualname":"<HashMap<K, V, RandomState>>::unit","value":"fn unit(K, V) -> HashMap<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Construct a hash map with a single mapping.","sig":null,"attributes":[{"value":"/ Construct a hash map with a single mapping.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":262522,"byte_end":262569,"line_start":149,"line_end":149,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":262574,"byte_end":262577,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":262582,"byte_end":262596,"line_start":151,"line_end":151,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":262601,"byte_end":262604,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":262609,"byte_end":262616,"line_start":153,"line_end":153,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":262621,"byte_end":262656,"line_start":154,"line_end":154,"column_start":5,"column_end":40}},{"value":"/ # use im::hashmap::HashMap;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":262661,"byte_end":262692,"line_start":155,"line_end":155,"column_start":5,"column_end":36}},{"value":"/ let map = HashMap::unit(123, \"onetwothree\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":262697,"byte_end":262745,"line_start":156,"line_end":156,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":262750,"byte_end":262765,"line_start":157,"line_end":157,"column_start":5,"column_end":20}},{"value":"/   map.get(&123),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":262770,"byte_end":262790,"line_start":158,"line_end":158,"column_start":5,"column_end":25}},{"value":"/   Some(&\"onetwothree\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":262795,"byte_end":262821,"line_start":159,"line_end":159,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":262826,"byte_end":262832,"line_start":160,"line_end":160,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":262837,"byte_end":262844,"line_start":161,"line_end":161,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":262849,"byte_end":262858,"line_start":162,"line_end":162,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":262863,"byte_end":262874,"line_start":163,"line_end":163,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1771},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":263388,"byte_end":263396,"line_start":188,"line_end":188,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<HashMap<K, V, S>>::is_empty","value":"fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test whether a hash map is empty.","sig":null,"attributes":[{"value":"/ Test whether a hash map is empty.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":263004,"byte_end":263041,"line_start":170,"line_end":170,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":263046,"byte_end":263049,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ Time: O(1)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":263054,"byte_end":263068,"line_start":172,"line_end":172,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":263073,"byte_end":263076,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":263081,"byte_end":263095,"line_start":174,"line_end":174,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":263100,"byte_end":263103,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":263108,"byte_end":263115,"line_start":176,"line_end":176,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":263120,"byte_end":263155,"line_start":177,"line_end":177,"column_start":5,"column_end":40}},{"value":"/ # use im::hashmap::HashMap;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":263160,"byte_end":263191,"line_start":178,"line_end":178,"column_start":5,"column_end":36}},{"value":"/ assert!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":263196,"byte_end":263208,"line_start":179,"line_end":179,"column_start":5,"column_end":17}},{"value":"/   !hashmap!{1 => 2}.is_empty()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":263213,"byte_end":263247,"line_start":180,"line_end":180,"column_start":5,"column_end":39}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":263252,"byte_end":263258,"line_start":181,"line_end":181,"column_start":5,"column_end":11}},{"value":"/ assert!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":263263,"byte_end":263275,"line_start":182,"line_end":182,"column_start":5,"column_end":17}},{"value":"/   HashMap::<i32, i32>::new().is_empty()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":263280,"byte_end":263323,"line_start":183,"line_end":183,"column_start":5,"column_end":48}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":263328,"byte_end":263334,"line_start":184,"line_end":184,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":263339,"byte_end":263346,"line_start":185,"line_end":185,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":263351,"byte_end":263360,"line_start":186,"line_end":186,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":263365,"byte_end":263376,"line_start":187,"line_end":187,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1772},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":263790,"byte_end":263793,"line_start":209,"line_end":209,"column_start":12,"column_end":15},"name":"len","qualname":"<HashMap<K, V, S>>::len","value":"fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the size of a hash map.","sig":null,"attributes":[{"value":"/ Get the size of a hash map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":263449,"byte_end":263480,"line_start":192,"line_end":192,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":263485,"byte_end":263488,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ Time: O(1)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":263493,"byte_end":263507,"line_start":194,"line_end":194,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":263512,"byte_end":263515,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":263520,"byte_end":263534,"line_start":196,"line_end":196,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":263539,"byte_end":263542,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":263547,"byte_end":263554,"line_start":198,"line_end":198,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":263559,"byte_end":263594,"line_start":199,"line_end":199,"column_start":5,"column_end":40}},{"value":"/ # use im::hashmap::HashMap;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":263599,"byte_end":263630,"line_start":200,"line_end":200,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(3, hashmap!{","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":263635,"byte_end":263662,"line_start":201,"line_end":201,"column_start":5,"column_end":32}},{"value":"/   1 => 11,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":263667,"byte_end":263681,"line_start":202,"line_end":202,"column_start":5,"column_end":19}},{"value":"/   2 => 22,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":263686,"byte_end":263700,"line_start":203,"line_end":203,"column_start":5,"column_end":19}},{"value":"/   3 => 33","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":263705,"byte_end":263718,"line_start":204,"line_end":204,"column_start":5,"column_end":18}},{"value":"/ }.len());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":263723,"byte_end":263736,"line_start":205,"line_end":205,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":263741,"byte_end":263748,"line_start":206,"line_end":206,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":263753,"byte_end":263762,"line_start":207,"line_end":207,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":263767,"byte_end":263778,"line_start":208,"line_end":208,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1773},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":264217,"byte_end":264223,"line_start":222,"line_end":222,"column_start":12,"column_end":18},"name":"ptr_eq","qualname":"<HashMap<K, V, S>>::ptr_eq","value":"fn ptr_eq(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test whether two maps refer to the same content in memory.","sig":null,"attributes":[{"value":"/ Test whether two maps refer to the same content in memory.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":263841,"byte_end":263903,"line_start":213,"line_end":213,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":263908,"byte_end":263911,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ This is true if the two sides are references to the same map,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":263916,"byte_end":263981,"line_start":215,"line_end":215,"column_start":5,"column_end":70}},{"value":"/ or if the two maps refer to the same root node.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":263986,"byte_end":264037,"line_start":216,"line_end":216,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":264042,"byte_end":264045,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ This would return true if you're comparing a map to itself, or","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":264050,"byte_end":264116,"line_start":218,"line_end":218,"column_start":5,"column_end":71}},{"value":"/ if you're comparing a map to a fresh clone of itself.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":264121,"byte_end":264178,"line_start":219,"line_end":219,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":264183,"byte_end":264186,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ Time: O(1)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":264191,"byte_end":264205,"line_start":221,"line_end":221,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":1774},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":264743,"byte_end":264754,"line_start":238,"line_end":238,"column_start":12,"column_end":23},"name":"with_hasher","qualname":"<HashMap<K, V, S>>::with_hasher","value":"fn with_hasher<RS>(RS) -> Self where Ref<S>: From<RS>","parent":null,"children":[],"decl_id":null,"docs":" Construct an empty hash map using the provided hasher.\n","sig":null,"attributes":[{"value":"/ Construct an empty hash map using the provided hasher.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":264643,"byte_end":264701,"line_start":235,"line_end":235,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":264706,"byte_end":264715,"line_start":236,"line_end":236,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":264720,"byte_end":264731,"line_start":237,"line_end":237,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1776},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":265646,"byte_end":265652,"line_start":272,"line_end":272,"column_start":12,"column_end":18},"name":"hasher","qualname":"<HashMap<K, V, S>>::hasher","value":"fn hasher(&Self) -> &Ref<S>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the map's [`BuildHasher`][BuildHasher].","sig":null,"attributes":[{"value":"/ Get a reference to the map's [`BuildHasher`][BuildHasher].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":265467,"byte_end":265529,"line_start":268,"line_end":268,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":265534,"byte_end":265537,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ [BuildHasher]: https://doc.rust-lang.org/std/hash/trait.BuildHasher.html","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":265542,"byte_end":265618,"line_start":270,"line_end":270,"column_start":5,"column_end":81}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":265623,"byte_end":265634,"line_start":271,"line_end":271,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1777},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":265833,"byte_end":265841,"line_start":280,"line_end":280,"column_start":12,"column_end":20},"name":"new_from","qualname":"<HashMap<K, V, S>>::new_from","value":"fn new_from<K1, V1>(&Self) -> HashMap<K1, V1, S> where K1: Hash + Eq + Clone,\nV1: Clone","parent":null,"children":[],"decl_id":null,"docs":" Construct an empty hash map using the same hasher as the\n current hash map.\n","sig":null,"attributes":[{"value":"/ Construct an empty hash map using the same hasher as the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":265705,"byte_end":265765,"line_start":276,"line_end":276,"column_start":5,"column_end":65}},{"value":"/ current hash map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":265770,"byte_end":265791,"line_start":277,"line_end":277,"column_start":5,"column_end":26}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":265796,"byte_end":265805,"line_start":278,"line_end":278,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":265810,"byte_end":265821,"line_start":279,"line_end":279,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1780},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":266575,"byte_end":266579,"line_start":304,"line_end":304,"column_start":12,"column_end":16},"name":"iter","qualname":"<HashMap<K, V, S>>::iter","value":"fn iter(&Self) -> Iter<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Get an iterator over the key/value pairs of a hash map.","sig":null,"attributes":[{"value":"/ Get an iterator over the key/value pairs of a hash map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":266171,"byte_end":266230,"line_start":295,"line_end":295,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":266235,"byte_end":266238,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ Please note that the order is consistent between maps using","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":266243,"byte_end":266306,"line_start":297,"line_end":297,"column_start":5,"column_end":68}},{"value":"/ the same hasher, but no other ordering guarantee is offered.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":266311,"byte_end":266375,"line_start":298,"line_end":298,"column_start":5,"column_end":69}},{"value":"/ Items will not come out in insertion order or sort order.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":266380,"byte_end":266441,"line_start":299,"line_end":299,"column_start":5,"column_end":66}},{"value":"/ They will, however, come out in the same order every time for","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":266446,"byte_end":266511,"line_start":300,"line_end":300,"column_start":5,"column_end":70}},{"value":"/ the same map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":266516,"byte_end":266533,"line_start":301,"line_end":301,"column_start":5,"column_end":22}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":266538,"byte_end":266547,"line_start":302,"line_end":302,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":266552,"byte_end":266563,"line_start":303,"line_end":303,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1781},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":267085,"byte_end":267089,"line_start":319,"line_end":319,"column_start":12,"column_end":16},"name":"keys","qualname":"<HashMap<K, V, S>>::keys","value":"fn keys(&Self) -> Keys<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Get an iterator over a hash map's keys.","sig":null,"attributes":[{"value":"/ Get an iterator over a hash map's keys.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":266697,"byte_end":266740,"line_start":310,"line_end":310,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":266745,"byte_end":266748,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ Please note that the order is consistent between maps using","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":266753,"byte_end":266816,"line_start":312,"line_end":312,"column_start":5,"column_end":68}},{"value":"/ the same hasher, but no other ordering guarantee is offered.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":266821,"byte_end":266885,"line_start":313,"line_end":313,"column_start":5,"column_end":69}},{"value":"/ Items will not come out in insertion order or sort order.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":266890,"byte_end":266951,"line_start":314,"line_end":314,"column_start":5,"column_end":66}},{"value":"/ They will, however, come out in the same order every time for","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":266956,"byte_end":267021,"line_start":315,"line_end":315,"column_start":5,"column_end":70}},{"value":"/ the same map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":267026,"byte_end":267043,"line_start":316,"line_end":316,"column_start":5,"column_end":22}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":267048,"byte_end":267057,"line_start":317,"line_end":317,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":267062,"byte_end":267073,"line_start":318,"line_end":318,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1782},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":267597,"byte_end":267603,"line_start":334,"line_end":334,"column_start":12,"column_end":18},"name":"values","qualname":"<HashMap<K, V, S>>::values","value":"fn values(&Self) -> Values<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Get an iterator over a hash map's values.","sig":null,"attributes":[{"value":"/ Get an iterator over a hash map's values.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":267207,"byte_end":267252,"line_start":325,"line_end":325,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":267257,"byte_end":267260,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ Please note that the order is consistent between maps using","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":267265,"byte_end":267328,"line_start":327,"line_end":327,"column_start":5,"column_end":68}},{"value":"/ the same hasher, but no other ordering guarantee is offered.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":267333,"byte_end":267397,"line_start":328,"line_end":328,"column_start":5,"column_end":69}},{"value":"/ Items will not come out in insertion order or sort order.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":267402,"byte_end":267463,"line_start":329,"line_end":329,"column_start":5,"column_end":66}},{"value":"/ They will, however, come out in the same order every time for","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":267468,"byte_end":267533,"line_start":330,"line_end":330,"column_start":5,"column_end":70}},{"value":"/ the same map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":267538,"byte_end":267555,"line_start":331,"line_end":331,"column_start":5,"column_end":22}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":267560,"byte_end":267569,"line_start":332,"line_end":332,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":267574,"byte_end":267585,"line_start":333,"line_end":333,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1783},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":268152,"byte_end":268157,"line_start":356,"line_end":356,"column_start":12,"column_end":17},"name":"clear","qualname":"<HashMap<K, V, S>>::clear","value":"fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Discard all elements from the map.","sig":null,"attributes":[{"value":"/ Discard all elements from the map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":267725,"byte_end":267763,"line_start":340,"line_end":340,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":267768,"byte_end":267771,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ This leaves you with an empty map, and all elements that","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":267776,"byte_end":267836,"line_start":342,"line_end":342,"column_start":5,"column_end":65}},{"value":"/ were previously inside it are dropped.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":267841,"byte_end":267883,"line_start":343,"line_end":343,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":267888,"byte_end":267891,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ Time: O(n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":267896,"byte_end":267910,"line_start":345,"line_end":345,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":267915,"byte_end":267918,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":267923,"byte_end":267937,"line_start":347,"line_end":347,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":267942,"byte_end":267945,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":267950,"byte_end":267957,"line_start":349,"line_end":349,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":267962,"byte_end":267997,"line_start":350,"line_end":350,"column_start":5,"column_end":40}},{"value":"/ # use im::HashMap;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":268002,"byte_end":268024,"line_start":351,"line_end":351,"column_start":5,"column_end":27}},{"value":"/ let mut map = hashmap![1=>1, 2=>2, 3=>3];","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":268029,"byte_end":268074,"line_start":352,"line_end":352,"column_start":5,"column_end":50}},{"value":"/ map.clear();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":268079,"byte_end":268095,"line_start":353,"line_end":353,"column_start":5,"column_end":21}},{"value":"/ assert!(map.is_empty());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":268100,"byte_end":268128,"line_start":354,"line_end":354,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":268133,"byte_end":268140,"line_start":355,"line_end":355,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1789},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":269293,"byte_end":269296,"line_start":408,"line_end":408,"column_start":12,"column_end":15},"name":"get","qualname":"<HashMap<K, V, S>>::get","value":"fn get<BK>(&Self, &BK) -> Option<&V> where BK: Hash + Eq + ?Sized,\nK: Borrow<BK>","parent":null,"children":[],"decl_id":null,"docs":" Get the value for a key from a hash map.","sig":null,"attributes":[{"value":"/ Get the value for a key from a hash map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":268934,"byte_end":268978,"line_start":392,"line_end":392,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":268983,"byte_end":268986,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":268991,"byte_end":269009,"line_start":394,"line_end":394,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":269014,"byte_end":269017,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":269022,"byte_end":269036,"line_start":396,"line_end":396,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":269041,"byte_end":269044,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":269049,"byte_end":269056,"line_start":398,"line_end":398,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":269061,"byte_end":269096,"line_start":399,"line_end":399,"column_start":5,"column_end":40}},{"value":"/ # use im::hashmap::HashMap;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":269101,"byte_end":269132,"line_start":400,"line_end":400,"column_start":5,"column_end":36}},{"value":"/ let map = hashmap!{123 => \"lol\"};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":269137,"byte_end":269174,"line_start":401,"line_end":401,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":269179,"byte_end":269194,"line_start":402,"line_end":402,"column_start":5,"column_end":20}},{"value":"/   map.get(&123),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":269199,"byte_end":269219,"line_start":403,"line_end":403,"column_start":5,"column_end":25}},{"value":"/   Some(&\"lol\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":269224,"byte_end":269242,"line_start":404,"line_end":404,"column_start":5,"column_end":23}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":269247,"byte_end":269253,"line_start":405,"line_end":405,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":269258,"byte_end":269265,"line_start":406,"line_end":406,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":269270,"byte_end":269281,"line_start":407,"line_end":407,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1792},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":269907,"byte_end":269920,"line_start":434,"line_end":434,"column_start":12,"column_end":25},"name":"get_key_value","qualname":"<HashMap<K, V, S>>::get_key_value","value":"fn get_key_value<BK>(&Self, &BK) -> Option<(&K, &V)> where BK: Hash + Eq +\n?Sized, K: Borrow<BK>","parent":null,"children":[],"decl_id":null,"docs":" Get the key/value pair for a key from a hash map.","sig":null,"attributes":[{"value":"/ Get the key/value pair for a key from a hash map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":269521,"byte_end":269574,"line_start":418,"line_end":418,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":269579,"byte_end":269582,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":269587,"byte_end":269605,"line_start":420,"line_end":420,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":269610,"byte_end":269613,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":269618,"byte_end":269632,"line_start":422,"line_end":422,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":269637,"byte_end":269640,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":269645,"byte_end":269652,"line_start":424,"line_end":424,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":269657,"byte_end":269692,"line_start":425,"line_end":425,"column_start":5,"column_end":40}},{"value":"/ # use im::hashmap::HashMap;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":269697,"byte_end":269728,"line_start":426,"line_end":426,"column_start":5,"column_end":36}},{"value":"/ let map = hashmap!{123 => \"lol\"};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":269733,"byte_end":269770,"line_start":427,"line_end":427,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":269775,"byte_end":269790,"line_start":428,"line_end":428,"column_start":5,"column_end":20}},{"value":"/   map.get_key_value(&123),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":269795,"byte_end":269825,"line_start":429,"line_end":429,"column_start":5,"column_end":35}},{"value":"/   Some((&123, &\"lol\"))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":269830,"byte_end":269856,"line_start":430,"line_end":430,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":269861,"byte_end":269867,"line_start":431,"line_end":431,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":269872,"byte_end":269879,"line_start":432,"line_end":432,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":269884,"byte_end":269895,"line_start":433,"line_end":433,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1795},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":270582,"byte_end":270594,"line_start":463,"line_end":463,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<HashMap<K, V, S>>::contains_key","value":"fn contains_key<BK>(&Self, &BK) -> bool where BK: Hash + Eq + ?Sized,\nK: Borrow<BK>","parent":null,"children":[],"decl_id":null,"docs":" Test for the presence of a key in a hash map.","sig":null,"attributes":[{"value":"/ Test for the presence of a key in a hash map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":270160,"byte_end":270209,"line_start":444,"line_end":444,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":270214,"byte_end":270217,"line_start":445,"line_end":445,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":270222,"byte_end":270240,"line_start":446,"line_end":446,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":270245,"byte_end":270248,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":270253,"byte_end":270267,"line_start":448,"line_end":448,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":270272,"byte_end":270275,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":270280,"byte_end":270287,"line_start":450,"line_end":450,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":270292,"byte_end":270327,"line_start":451,"line_end":451,"column_start":5,"column_end":40}},{"value":"/ # use im::hashmap::HashMap;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":270332,"byte_end":270363,"line_start":452,"line_end":452,"column_start":5,"column_end":36}},{"value":"/ let map = hashmap!{123 => \"lol\"};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":270368,"byte_end":270405,"line_start":453,"line_end":453,"column_start":5,"column_end":42}},{"value":"/ assert!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":270410,"byte_end":270422,"line_start":454,"line_end":454,"column_start":5,"column_end":17}},{"value":"/   map.contains_key(&123)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":270427,"byte_end":270455,"line_start":455,"line_end":455,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":270460,"byte_end":270466,"line_start":456,"line_end":456,"column_start":5,"column_end":11}},{"value":"/ assert!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":270471,"byte_end":270483,"line_start":457,"line_end":457,"column_start":5,"column_end":17}},{"value":"/   !map.contains_key(&321)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":270488,"byte_end":270517,"line_start":458,"line_end":458,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":270522,"byte_end":270528,"line_start":459,"line_end":459,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":270533,"byte_end":270540,"line_start":460,"line_end":460,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":270545,"byte_end":270554,"line_start":461,"line_end":461,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":270559,"byte_end":270570,"line_start":462,"line_end":462,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1797},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":271025,"byte_end":271037,"line_start":479,"line_end":479,"column_start":12,"column_end":24},"name":"is_submap_by","qualname":"<HashMap<K, V, S>>::is_submap_by","value":"fn is_submap_by<B, RM, F>(&Self, RM, F) -> bool where\nF: for<'_, '_> FnMut(&'_ V, &'_ B) -> bool, RM: Borrow<HashMap<K, B, S>>","parent":null,"children":[],"decl_id":null,"docs":" Test whether a map is a submap of another map, meaning that\n all keys in our map must also be in the other map, with the\n same values.","sig":null,"attributes":[{"value":"/ Test whether a map is a submap of another map, meaning that","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":270734,"byte_end":270797,"line_start":471,"line_end":471,"column_start":5,"column_end":68}},{"value":"/ all keys in our map must also be in the other map, with the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":270802,"byte_end":270865,"line_start":472,"line_end":472,"column_start":5,"column_end":68}},{"value":"/ same values.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":270870,"byte_end":270886,"line_start":473,"line_end":473,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":270891,"byte_end":270894,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ Use the provided function to decide whether values are equal.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":270899,"byte_end":270964,"line_start":475,"line_end":475,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":270969,"byte_end":270972,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":270977,"byte_end":270997,"line_start":477,"line_end":477,"column_start":5,"column_end":25}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":271002,"byte_end":271013,"line_start":478,"line_end":478,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1803},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":271675,"byte_end":271694,"line_start":497,"line_end":497,"column_start":12,"column_end":31},"name":"is_proper_submap_by","qualname":"<HashMap<K, V, S>>::is_proper_submap_by","value":"fn is_proper_submap_by<B, RM, F>(&Self, RM, F) -> bool where\nF: for<'_, '_> FnMut(&'_ V, &'_ B) -> bool, RM: Borrow<HashMap<K, B, S>>","parent":null,"children":[],"decl_id":null,"docs":" Test whether a map is a proper submap of another map, meaning\n that all keys in our map must also be in the other map, with\n the same values. To be a proper submap, ours must also contain\n fewer keys than the other map.","sig":null,"attributes":[{"value":"/ Test whether a map is a proper submap of another map, meaning","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":271292,"byte_end":271357,"line_start":488,"line_end":488,"column_start":5,"column_end":70}},{"value":"/ that all keys in our map must also be in the other map, with","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":271362,"byte_end":271426,"line_start":489,"line_end":489,"column_start":5,"column_end":69}},{"value":"/ the same values. To be a proper submap, ours must also contain","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":271431,"byte_end":271497,"line_start":490,"line_end":490,"column_start":5,"column_end":71}},{"value":"/ fewer keys than the other map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":271502,"byte_end":271536,"line_start":491,"line_end":491,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":271541,"byte_end":271544,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ Use the provided function to decide whether values are equal.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":271549,"byte_end":271614,"line_start":493,"line_end":493,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":271619,"byte_end":271622,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":271627,"byte_end":271647,"line_start":495,"line_end":495,"column_start":5,"column_end":25}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":271652,"byte_end":271663,"line_start":496,"line_end":496,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1807},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":272413,"byte_end":272422,"line_start":522,"line_end":522,"column_start":12,"column_end":21},"name":"is_submap","qualname":"<HashMap<K, V, S>>::is_submap","value":"fn is_submap<RM>(&Self, RM) -> bool where V: PartialEq, RM: Borrow<Self>","parent":null,"children":[],"decl_id":null,"docs":" Test whether a map is a submap of another map, meaning that\n all keys in our map must also be in the other map, with the\n same values.","sig":null,"attributes":[{"value":"/ Test whether a map is a submap of another map, meaning that","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":271914,"byte_end":271977,"line_start":505,"line_end":505,"column_start":5,"column_end":68}},{"value":"/ all keys in our map must also be in the other map, with the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":271982,"byte_end":272045,"line_start":506,"line_end":506,"column_start":5,"column_end":68}},{"value":"/ same values.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":272050,"byte_end":272066,"line_start":507,"line_end":507,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":272071,"byte_end":272074,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":272079,"byte_end":272099,"line_start":509,"line_end":509,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":272104,"byte_end":272107,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":272112,"byte_end":272126,"line_start":511,"line_end":511,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":272131,"byte_end":272134,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":272139,"byte_end":272146,"line_start":513,"line_end":513,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":272151,"byte_end":272186,"line_start":514,"line_end":514,"column_start":5,"column_end":40}},{"value":"/ # use im::hashmap::HashMap;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":272191,"byte_end":272222,"line_start":515,"line_end":515,"column_start":5,"column_end":36}},{"value":"/ let map1 = hashmap!{1 => 1, 2 => 2};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":272227,"byte_end":272267,"line_start":516,"line_end":516,"column_start":5,"column_end":45}},{"value":"/ let map2 = hashmap!{1 => 1, 2 => 2, 3 => 3};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":272272,"byte_end":272320,"line_start":517,"line_end":517,"column_start":5,"column_end":53}},{"value":"/ assert!(map1.is_submap(map2));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":272325,"byte_end":272359,"line_start":518,"line_end":518,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":272364,"byte_end":272371,"line_start":519,"line_end":519,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":272376,"byte_end":272385,"line_start":520,"line_end":520,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":272390,"byte_end":272401,"line_start":521,"line_end":521,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1809},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":273328,"byte_end":273344,"line_start":552,"line_end":552,"column_start":12,"column_end":28},"name":"is_proper_submap","qualname":"<HashMap<K, V, S>>::is_proper_submap","value":"fn is_proper_submap<RM>(&Self, RM) -> bool where V: PartialEq,\nRM: Borrow<Self>","parent":null,"children":[],"decl_id":null,"docs":" Test whether a map is a proper submap of another map, meaning\n that all keys in our map must also be in the other map, with\n the same values. To be a proper submap, ours must also contain\n fewer keys than the other map.","sig":null,"attributes":[{"value":"/ Test whether a map is a proper submap of another map, meaning","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":272585,"byte_end":272650,"line_start":530,"line_end":530,"column_start":5,"column_end":70}},{"value":"/ that all keys in our map must also be in the other map, with","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":272655,"byte_end":272719,"line_start":531,"line_end":531,"column_start":5,"column_end":69}},{"value":"/ the same values. To be a proper submap, ours must also contain","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":272724,"byte_end":272790,"line_start":532,"line_end":532,"column_start":5,"column_end":71}},{"value":"/ fewer keys than the other map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":272795,"byte_end":272829,"line_start":533,"line_end":533,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":272834,"byte_end":272837,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":272842,"byte_end":272862,"line_start":535,"line_end":535,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":272867,"byte_end":272870,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":272875,"byte_end":272889,"line_start":537,"line_end":537,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":272894,"byte_end":272897,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":272902,"byte_end":272909,"line_start":539,"line_end":539,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":272914,"byte_end":272949,"line_start":540,"line_end":540,"column_start":5,"column_end":40}},{"value":"/ # use im::hashmap::HashMap;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":272954,"byte_end":272985,"line_start":541,"line_end":541,"column_start":5,"column_end":36}},{"value":"/ let map1 = hashmap!{1 => 1, 2 => 2};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":272990,"byte_end":273030,"line_start":542,"line_end":542,"column_start":5,"column_end":45}},{"value":"/ let map2 = hashmap!{1 => 1, 2 => 2, 3 => 3};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":273035,"byte_end":273083,"line_start":543,"line_end":543,"column_start":5,"column_end":53}},{"value":"/ assert!(map1.is_proper_submap(map2));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":273088,"byte_end":273129,"line_start":544,"line_end":544,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":273134,"byte_end":273137,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ let map3 = hashmap!{1 => 1, 2 => 2};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":273142,"byte_end":273182,"line_start":546,"line_end":546,"column_start":5,"column_end":45}},{"value":"/ let map4 = hashmap!{1 => 1, 2 => 2};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":273187,"byte_end":273227,"line_start":547,"line_end":547,"column_start":5,"column_end":45}},{"value":"/ assert!(!map3.is_proper_submap(map4));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":273232,"byte_end":273274,"line_start":548,"line_end":548,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":273279,"byte_end":273286,"line_start":549,"line_end":549,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":273291,"byte_end":273300,"line_start":550,"line_end":550,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":273305,"byte_end":273316,"line_start":551,"line_end":551,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1815},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":274017,"byte_end":274025,"line_start":576,"line_end":576,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<HashMap<K, V, S>>::iter_mut","value":"fn iter_mut(&mut Self) -> IterMut<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable iterator over the values of a hash map.","sig":null,"attributes":[{"value":"/ Get a mutable iterator over the values of a hash map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":273615,"byte_end":273672,"line_start":567,"line_end":567,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":273677,"byte_end":273680,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ Please note that the order is consistent between maps using","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":273685,"byte_end":273748,"line_start":569,"line_end":569,"column_start":5,"column_end":68}},{"value":"/ the same hasher, but no other ordering guarantee is offered.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":273753,"byte_end":273817,"line_start":570,"line_end":570,"column_start":5,"column_end":69}},{"value":"/ Items will not come out in insertion order or sort order.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":273822,"byte_end":273883,"line_start":571,"line_end":571,"column_start":5,"column_end":66}},{"value":"/ They will, however, come out in the same order every time for","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":273888,"byte_end":273953,"line_start":572,"line_end":572,"column_start":5,"column_end":70}},{"value":"/ the same map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":273958,"byte_end":273975,"line_start":573,"line_end":573,"column_start":5,"column_end":22}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":273980,"byte_end":273989,"line_start":574,"line_end":574,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":273994,"byte_end":274005,"line_start":575,"line_end":575,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1816},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":274713,"byte_end":274720,"line_start":603,"line_end":603,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<HashMap<K, V, S>>::get_mut","value":"fn get_mut<BK>(&mut Self, &BK) -> Option<&mut V> where BK: Hash + Eq + ?Sized,\nK: Borrow<BK>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the value for a key from a hash\n map.","sig":null,"attributes":[{"value":"/ Get a mutable reference to the value for a key from a hash","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":274232,"byte_end":274294,"line_start":583,"line_end":583,"column_start":5,"column_end":67}},{"value":"/ map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":274299,"byte_end":274307,"line_start":584,"line_end":584,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":274312,"byte_end":274315,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":274320,"byte_end":274338,"line_start":586,"line_end":586,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":274343,"byte_end":274346,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":274351,"byte_end":274365,"line_start":588,"line_end":588,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":274370,"byte_end":274373,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":274378,"byte_end":274385,"line_start":590,"line_end":590,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":274390,"byte_end":274425,"line_start":591,"line_end":591,"column_start":5,"column_end":40}},{"value":"/ # use im::hashmap::HashMap;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":274430,"byte_end":274461,"line_start":592,"line_end":592,"column_start":5,"column_end":36}},{"value":"/ let mut map = hashmap!{123 => \"lol\"};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":274466,"byte_end":274507,"line_start":593,"line_end":593,"column_start":5,"column_end":46}},{"value":"/ if let Some(value) = map.get_mut(&123) {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":274512,"byte_end":274556,"line_start":594,"line_end":594,"column_start":5,"column_end":49}},{"value":"/     *value = \"omg\";","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":274561,"byte_end":274584,"line_start":595,"line_end":595,"column_start":5,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":274589,"byte_end":274594,"line_start":596,"line_end":596,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":274599,"byte_end":274614,"line_start":597,"line_end":597,"column_start":5,"column_end":20}},{"value":"/   map.get(&123),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":274619,"byte_end":274639,"line_start":598,"line_end":598,"column_start":5,"column_end":25}},{"value":"/   Some(&\"omg\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":274644,"byte_end":274662,"line_start":599,"line_end":599,"column_start":5,"column_end":23}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":274667,"byte_end":274673,"line_start":600,"line_end":600,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":274678,"byte_end":274685,"line_start":601,"line_end":601,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":274690,"byte_end":274701,"line_start":602,"line_end":602,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1818},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":275625,"byte_end":275631,"line_start":636,"line_end":636,"column_start":12,"column_end":18},"name":"insert","qualname":"<HashMap<K, V, S>>::insert","value":"fn insert(&mut Self, K, V) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Insert a key/value mapping into a map.","sig":null,"attributes":[{"value":"/ Insert a key/value mapping into a map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":275089,"byte_end":275131,"line_start":615,"line_end":615,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":275136,"byte_end":275139,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ If the map already has a mapping for the given key, the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":275144,"byte_end":275203,"line_start":617,"line_end":617,"column_start":5,"column_end":64}},{"value":"/ previous value is overwritten.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":275208,"byte_end":275242,"line_start":618,"line_end":618,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":275247,"byte_end":275250,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":275255,"byte_end":275273,"line_start":620,"line_end":620,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":275278,"byte_end":275281,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":275286,"byte_end":275300,"line_start":622,"line_end":622,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":275305,"byte_end":275308,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":275313,"byte_end":275320,"line_start":624,"line_end":624,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":275325,"byte_end":275360,"line_start":625,"line_end":625,"column_start":5,"column_end":40}},{"value":"/ # use im::hashmap::HashMap;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":275365,"byte_end":275396,"line_start":626,"line_end":626,"column_start":5,"column_end":36}},{"value":"/ let mut map = hashmap!{};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":275401,"byte_end":275430,"line_start":627,"line_end":627,"column_start":5,"column_end":34}},{"value":"/ map.insert(123, \"123\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":275435,"byte_end":275462,"line_start":628,"line_end":628,"column_start":5,"column_end":32}},{"value":"/ map.insert(456, \"456\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":275467,"byte_end":275494,"line_start":629,"line_end":629,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":275499,"byte_end":275514,"line_start":630,"line_end":630,"column_start":5,"column_end":20}},{"value":"/   map,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":275519,"byte_end":275529,"line_start":631,"line_end":631,"column_start":5,"column_end":15}},{"value":"/   hashmap!{123 => \"123\", 456 => \"456\"}","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":275534,"byte_end":275576,"line_start":632,"line_end":632,"column_start":5,"column_end":47}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":275581,"byte_end":275587,"line_start":633,"line_end":633,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":275592,"byte_end":275599,"line_start":634,"line_end":634,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":275604,"byte_end":275613,"line_start":635,"line_end":635,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1820},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":276649,"byte_end":276655,"line_start":666,"line_end":666,"column_start":12,"column_end":18},"name":"remove","qualname":"<HashMap<K, V, S>>::remove","value":"fn remove<BK>(&mut Self, &BK) -> Option<V> where BK: Hash + Eq + ?Sized,\nK: Borrow<BK>","parent":null,"children":[],"decl_id":null,"docs":" Remove a key/value pair from a map, if it exists, and return\n the removed value.","sig":null,"attributes":[{"value":"/ Remove a key/value pair from a map, if it exists, and return","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":275961,"byte_end":276025,"line_start":646,"line_end":646,"column_start":5,"column_end":69}},{"value":"/ the removed value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":276030,"byte_end":276052,"line_start":647,"line_end":647,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":276057,"byte_end":276060,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ This is a copy-on-write operation, so that the parts of the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":276065,"byte_end":276128,"line_start":649,"line_end":649,"column_start":5,"column_end":68}},{"value":"/ set's structure which are shared with other sets will be","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":276133,"byte_end":276193,"line_start":650,"line_end":650,"column_start":5,"column_end":65}},{"value":"/ safely copied before mutating.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":276198,"byte_end":276232,"line_start":651,"line_end":651,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":276237,"byte_end":276240,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":276245,"byte_end":276263,"line_start":653,"line_end":653,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":276268,"byte_end":276271,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":276276,"byte_end":276290,"line_start":655,"line_end":655,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":276295,"byte_end":276298,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":276303,"byte_end":276310,"line_start":657,"line_end":657,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":276315,"byte_end":276350,"line_start":658,"line_end":658,"column_start":5,"column_end":40}},{"value":"/ # use im::hashmap::HashMap;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":276355,"byte_end":276386,"line_start":659,"line_end":659,"column_start":5,"column_end":36}},{"value":"/ let mut map = hashmap!{123 => \"123\", 456 => \"456\"};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":276391,"byte_end":276446,"line_start":660,"line_end":660,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(Some(\"123\"), map.remove(&123));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":276451,"byte_end":276497,"line_start":661,"line_end":661,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(Some(\"456\"), map.remove(&456));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":276502,"byte_end":276548,"line_start":662,"line_end":662,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(None, map.remove(&789));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":276553,"byte_end":276592,"line_start":663,"line_end":663,"column_start":5,"column_end":44}},{"value":"/ assert!(map.is_empty());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":276597,"byte_end":276625,"line_start":664,"line_end":664,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":276630,"byte_end":276637,"line_start":665,"line_end":665,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1823},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":277379,"byte_end":277394,"line_start":690,"line_end":690,"column_start":12,"column_end":27},"name":"remove_with_key","qualname":"<HashMap<K, V, S>>::remove_with_key","value":"fn remove_with_key<BK>(&mut Self, &BK) -> Option<(K, V)> where BK: Hash + Eq +\n?Sized, K: Borrow<BK>","parent":null,"children":[],"decl_id":null,"docs":" Remove a key/value pair from a map, if it exists, and return\n the removed key and value.","sig":null,"attributes":[{"value":"/ Remove a key/value pair from a map, if it exists, and return","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":276822,"byte_end":276886,"line_start":674,"line_end":674,"column_start":5,"column_end":69}},{"value":"/ the removed key and value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":276891,"byte_end":276921,"line_start":675,"line_end":675,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":276926,"byte_end":276929,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":276934,"byte_end":276952,"line_start":677,"line_end":677,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":276957,"byte_end":276960,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":276965,"byte_end":276979,"line_start":679,"line_end":679,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":276984,"byte_end":276987,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":276992,"byte_end":276999,"line_start":681,"line_end":681,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":277004,"byte_end":277039,"line_start":682,"line_end":682,"column_start":5,"column_end":40}},{"value":"/ # use im::hashmap::HashMap;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":277044,"byte_end":277075,"line_start":683,"line_end":683,"column_start":5,"column_end":36}},{"value":"/ let mut map = hashmap!{123 => \"123\", 456 => \"456\"};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":277080,"byte_end":277135,"line_start":684,"line_end":684,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(Some((123, \"123\")), map.remove_with_key(&123));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":277140,"byte_end":277202,"line_start":685,"line_end":685,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(Some((456, \"456\")), map.remove_with_key(&456));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":277207,"byte_end":277269,"line_start":686,"line_end":686,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(None, map.remove_with_key(&789));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":277274,"byte_end":277322,"line_start":687,"line_end":687,"column_start":5,"column_end":53}},{"value":"/ assert!(map.is_empty());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":277327,"byte_end":277355,"line_start":688,"line_end":688,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":277360,"byte_end":277367,"line_start":689,"line_end":689,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1825},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":277927,"byte_end":277932,"line_start":709,"line_end":709,"column_start":12,"column_end":17},"name":"entry","qualname":"<HashMap<K, V, S>>::entry","value":"fn entry(&mut Self, K) -> Entry<, K, V, S>","parent":null,"children":[],"decl_id":null,"docs":" Get the [`Entry`][Entry] for a key in the map for in-place manipulation.","sig":null,"attributes":[{"value":"/ Get the [`Entry`][Entry] for a key in the map for in-place manipulation.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":277751,"byte_end":277827,"line_start":703,"line_end":703,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":277832,"byte_end":277835,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":277840,"byte_end":277858,"line_start":705,"line_end":705,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":277863,"byte_end":277866,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ [Entry]: enum.Entry.html","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":277871,"byte_end":277899,"line_start":707,"line_end":707,"column_start":5,"column_end":33}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":277904,"byte_end":277915,"line_start":708,"line_end":708,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1826},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":278890,"byte_end":278896,"line_start":746,"line_end":746,"column_start":12,"column_end":18},"name":"update","qualname":"<HashMap<K, V, S>>::update","value":"fn update(&Self, K, V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new hash map by inserting a key/value mapping into a map.","sig":null,"attributes":[{"value":"/ Construct a new hash map by inserting a key/value mapping into a map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":278370,"byte_end":278443,"line_start":726,"line_end":726,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":278448,"byte_end":278451,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ If the map already has a mapping for the given key, the previous value","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":278456,"byte_end":278530,"line_start":728,"line_end":728,"column_start":5,"column_end":79}},{"value":"/ is overwritten.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":278535,"byte_end":278554,"line_start":729,"line_end":729,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":278559,"byte_end":278562,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":278567,"byte_end":278585,"line_start":731,"line_end":731,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":278590,"byte_end":278593,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":278598,"byte_end":278612,"line_start":733,"line_end":733,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":278617,"byte_end":278620,"line_start":734,"line_end":734,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":278625,"byte_end":278632,"line_start":735,"line_end":735,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":278637,"byte_end":278672,"line_start":736,"line_end":736,"column_start":5,"column_end":40}},{"value":"/ # use im::hashmap::HashMap;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":278677,"byte_end":278708,"line_start":737,"line_end":737,"column_start":5,"column_end":36}},{"value":"/ let map = hashmap!{};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":278713,"byte_end":278738,"line_start":738,"line_end":738,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":278743,"byte_end":278758,"line_start":739,"line_end":739,"column_start":5,"column_end":20}},{"value":"/   map.update(123, \"123\"),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":278763,"byte_end":278792,"line_start":740,"line_end":740,"column_start":5,"column_end":34}},{"value":"/   hashmap!{123 => \"123\"}","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":278797,"byte_end":278825,"line_start":741,"line_end":741,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":278830,"byte_end":278836,"line_start":742,"line_end":742,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":278841,"byte_end":278848,"line_start":743,"line_end":743,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":278853,"byte_end":278862,"line_start":744,"line_end":744,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":278867,"byte_end":278878,"line_start":745,"line_end":745,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1827},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":279343,"byte_end":279354,"line_start":761,"line_end":761,"column_start":12,"column_end":23},"name":"update_with","qualname":"<HashMap<K, V, S>>::update_with","value":"fn update_with<F>(&Self, K, V, F) -> Self where F: FnOnce(V, V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Construct a new hash map by inserting a key/value mapping into\n a map.","sig":null,"attributes":[{"value":"/ Construct a new hash map by inserting a key/value mapping into","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":279011,"byte_end":279077,"line_start":752,"line_end":752,"column_start":5,"column_end":71}},{"value":"/ a map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":279082,"byte_end":279092,"line_start":753,"line_end":753,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":279097,"byte_end":279100,"line_start":754,"line_end":754,"column_start":5,"column_end":8}},{"value":"/ If the map already has a mapping for the given key, we call","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":279105,"byte_end":279168,"line_start":755,"line_end":755,"column_start":5,"column_end":68}},{"value":"/ the provided function with the old value and the new value,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":279173,"byte_end":279236,"line_start":756,"line_end":756,"column_start":5,"column_end":68}},{"value":"/ and insert the result as the new value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":279241,"byte_end":279284,"line_start":757,"line_end":757,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":279289,"byte_end":279292,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":279297,"byte_end":279315,"line_start":759,"line_end":759,"column_start":5,"column_end":23}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":279320,"byte_end":279331,"line_start":760,"line_end":760,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1829},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":279930,"byte_end":279945,"line_start":780,"line_end":780,"column_start":12,"column_end":27},"name":"update_with_key","qualname":"<HashMap<K, V, S>>::update_with_key","value":"fn update_with_key<F>(&Self, K, V, F) -> Self where\nF: for<'_> FnOnce(&'_ K, V, V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Construct a new map by inserting a key/value mapping into a\n map.","sig":null,"attributes":[{"value":"/ Construct a new map by inserting a key/value mapping into a","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":279594,"byte_end":279657,"line_start":771,"line_end":771,"column_start":5,"column_end":68}},{"value":"/ map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":279662,"byte_end":279670,"line_start":772,"line_end":772,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":279675,"byte_end":279678,"line_start":773,"line_end":773,"column_start":5,"column_end":8}},{"value":"/ If the map already has a mapping for the given key, we call","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":279683,"byte_end":279746,"line_start":774,"line_end":774,"column_start":5,"column_end":68}},{"value":"/ the provided function with the key, the old value and the new","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":279751,"byte_end":279816,"line_start":775,"line_end":775,"column_start":5,"column_end":70}},{"value":"/ value, and insert the result as the new value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":279821,"byte_end":279871,"line_start":776,"line_end":776,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":279876,"byte_end":279879,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":279884,"byte_end":279902,"line_start":778,"line_end":778,"column_start":5,"column_end":23}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":279907,"byte_end":279918,"line_start":779,"line_end":779,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1831},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":280663,"byte_end":280685,"line_start":803,"line_end":803,"column_start":12,"column_end":34},"name":"update_lookup_with_key","qualname":"<HashMap<K, V, S>>::update_lookup_with_key","value":"fn update_lookup_with_key<F>(&Self, K, V, F) -> (Option<V>, Self) where\nF: for<'_, '_> FnOnce(&'_ K, &'_ V, V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Construct a new map by inserting a key/value mapping into a\n map, returning the old value for the key as well as the new\n map.","sig":null,"attributes":[{"value":"/ Construct a new map by inserting a key/value mapping into a","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":280259,"byte_end":280322,"line_start":793,"line_end":793,"column_start":5,"column_end":68}},{"value":"/ map, returning the old value for the key as well as the new","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":280327,"byte_end":280390,"line_start":794,"line_end":794,"column_start":5,"column_end":68}},{"value":"/ map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":280395,"byte_end":280403,"line_start":795,"line_end":795,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":280408,"byte_end":280411,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ If the map already has a mapping for the given key, we call","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":280416,"byte_end":280479,"line_start":797,"line_end":797,"column_start":5,"column_end":68}},{"value":"/ the provided function with the key, the old value and the new","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":280484,"byte_end":280549,"line_start":798,"line_end":798,"column_start":5,"column_end":70}},{"value":"/ value, and insert the result as the new value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":280554,"byte_end":280604,"line_start":799,"line_end":799,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":280609,"byte_end":280612,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":280617,"byte_end":280635,"line_start":801,"line_end":801,"column_start":5,"column_end":23}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":280640,"byte_end":280651,"line_start":802,"line_end":802,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1833},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":281578,"byte_end":281583,"line_start":829,"line_end":829,"column_start":12,"column_end":17},"name":"alter","qualname":"<HashMap<K, V, S>>::alter","value":"fn alter<F>(&Self, F, K) -> Self where F: FnOnce(Option<V>) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Update the value for a given key by calling a function with\n the current value and overwriting it with the function's\n return value.","sig":null,"attributes":[{"value":"/ Update the value for a given key by calling a function with","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":281034,"byte_end":281097,"line_start":816,"line_end":816,"column_start":5,"column_end":68}},{"value":"/ the current value and overwriting it with the function's","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":281102,"byte_end":281162,"line_start":817,"line_end":817,"column_start":5,"column_end":65}},{"value":"/ return value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":281167,"byte_end":281184,"line_start":818,"line_end":818,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":281189,"byte_end":281192,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ The function gets an [`Option<V>`][std::option::Option] and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":281197,"byte_end":281260,"line_start":820,"line_end":820,"column_start":5,"column_end":68}},{"value":"/ returns the same, so that it can decide to delete a mapping","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":281265,"byte_end":281328,"line_start":821,"line_end":821,"column_start":5,"column_end":68}},{"value":"/ instead of updating the value, and decide what to do if the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":281333,"byte_end":281396,"line_start":822,"line_end":822,"column_start":5,"column_end":68}},{"value":"/ key isn't in the map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":281401,"byte_end":281426,"line_start":823,"line_end":823,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":281431,"byte_end":281434,"line_start":824,"line_end":824,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":281439,"byte_end":281457,"line_start":825,"line_end":825,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":281462,"byte_end":281465,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/ [std::option::Option]: https://doc.rust-lang.org/std/option/enum.Option.html","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":281470,"byte_end":281550,"line_start":827,"line_end":827,"column_start":5,"column_end":85}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":281555,"byte_end":281566,"line_start":828,"line_end":828,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1836},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":282227,"byte_end":282234,"line_start":849,"line_end":849,"column_start":12,"column_end":19},"name":"without","qualname":"<HashMap<K, V, S>>::without","value":"fn without<BK>(&Self, &BK) -> Self where BK: Hash + Eq + ?Sized, K: Borrow<BK>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new map without the given key.","sig":null,"attributes":[{"value":"/ Construct a new map without the given key.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":282002,"byte_end":282048,"line_start":842,"line_end":842,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":282053,"byte_end":282056,"line_start":843,"line_end":843,"column_start":5,"column_end":8}},{"value":"/ Construct a map that's a copy of the current map, absent the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":282061,"byte_end":282125,"line_start":844,"line_end":844,"column_start":5,"column_end":69}},{"value":"/ mapping for `key` if it's present.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":282130,"byte_end":282168,"line_start":845,"line_end":845,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":282173,"byte_end":282176,"line_start":846,"line_end":846,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":282181,"byte_end":282199,"line_start":847,"line_end":847,"column_start":5,"column_end":23}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":282204,"byte_end":282215,"line_start":848,"line_end":848,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1838},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":283111,"byte_end":283117,"line_start":879,"line_end":879,"column_start":12,"column_end":18},"name":"retain","qualname":"<HashMap<K, V, S>>::retain","value":"fn retain<F>(&mut Self, F) where F: for<'_, '_> FnMut(&'_ K, &'_ V) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Filter out values from a map which don't satisfy a predicate.","sig":null,"attributes":[{"value":"/ Filter out values from a map which don't satisfy a predicate.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":282467,"byte_end":282532,"line_start":860,"line_end":860,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":282537,"byte_end":282540,"line_start":861,"line_end":861,"column_start":5,"column_end":8}},{"value":"/ This is slightly more efficient than filtering using an","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":282545,"byte_end":282604,"line_start":862,"line_end":862,"column_start":5,"column_end":64}},{"value":"/ iterator, in that it doesn't need to rehash the retained","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":282609,"byte_end":282669,"line_start":863,"line_end":863,"column_start":5,"column_end":65}},{"value":"/ values, but it still needs to reconstruct the entire tree","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":282674,"byte_end":282735,"line_start":864,"line_end":864,"column_start":5,"column_end":66}},{"value":"/ structure of the map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":282740,"byte_end":282765,"line_start":865,"line_end":865,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":282770,"byte_end":282773,"line_start":866,"line_end":866,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":282778,"byte_end":282798,"line_start":867,"line_end":867,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":282803,"byte_end":282806,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":282811,"byte_end":282825,"line_start":869,"line_end":869,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":282830,"byte_end":282833,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":282838,"byte_end":282845,"line_start":871,"line_end":871,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":282850,"byte_end":282885,"line_start":872,"line_end":872,"column_start":5,"column_end":40}},{"value":"/ # use im::HashMap;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":282890,"byte_end":282912,"line_start":873,"line_end":873,"column_start":5,"column_end":27}},{"value":"/ let mut map = hashmap!{1 => 1, 2 => 2, 3 => 3};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":282917,"byte_end":282968,"line_start":874,"line_end":874,"column_start":5,"column_end":56}},{"value":"/ map.retain(|k, v| *k > 1);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":282973,"byte_end":283003,"line_start":875,"line_end":875,"column_start":5,"column_end":35}},{"value":"/ let expected = hashmap!{2 => 2, 3 => 3};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":283008,"byte_end":283052,"line_start":876,"line_end":876,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(expected, map);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":283057,"byte_end":283087,"line_start":877,"line_end":877,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":283092,"byte_end":283099,"line_start":878,"line_end":878,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1840},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":283705,"byte_end":283712,"line_start":897,"line_end":897,"column_start":12,"column_end":19},"name":"extract","qualname":"<HashMap<K, V, S>>::extract","value":"fn extract<BK>(&Self, &BK) -> Option<(V, Self)> where BK: Hash + Eq + ?Sized,\nK: Borrow<BK>","parent":null,"children":[],"decl_id":null,"docs":" Remove a key/value pair from a map, if it exists, and return\n the removed value as well as the updated map.","sig":null,"attributes":[{"value":"/ Remove a key/value pair from a map, if it exists, and return","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":283528,"byte_end":283592,"line_start":892,"line_end":892,"column_start":5,"column_end":69}},{"value":"/ the removed value as well as the updated map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":283597,"byte_end":283646,"line_start":893,"line_end":893,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":283651,"byte_end":283654,"line_start":894,"line_end":894,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":283659,"byte_end":283677,"line_start":895,"line_end":895,"column_start":5,"column_end":23}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":283682,"byte_end":283693,"line_start":896,"line_end":896,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1843},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":284078,"byte_end":284094,"line_start":910,"line_end":910,"column_start":12,"column_end":28},"name":"extract_with_key","qualname":"<HashMap<K, V, S>>::extract_with_key","value":"fn extract_with_key<BK>(&Self, &BK) -> Option<(K, V, Self)> where BK: Hash +\nEq + ?Sized, K: Borrow<BK>","parent":null,"children":[],"decl_id":null,"docs":" Remove a key/value pair from a map, if it exists, and return\n the removed key and value as well as the updated list.","sig":null,"attributes":[{"value":"/ Remove a key/value pair from a map, if it exists, and return","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":283892,"byte_end":283956,"line_start":905,"line_end":905,"column_start":5,"column_end":69}},{"value":"/ the removed key and value as well as the updated list.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":283961,"byte_end":284019,"line_start":906,"line_end":906,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":284024,"byte_end":284027,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":284032,"byte_end":284050,"line_start":908,"line_end":908,"column_start":5,"column_end":23}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":284055,"byte_end":284066,"line_start":909,"line_end":909,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1846},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":284816,"byte_end":284821,"line_start":935,"line_end":935,"column_start":12,"column_end":17},"name":"union","qualname":"<HashMap<K, V, S>>::union","value":"fn union(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct the union of two maps, keeping the values in the\n current map when keys exist in both maps.","sig":null,"attributes":[{"value":"/ Construct the union of two maps, keeping the values in the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":284313,"byte_end":284375,"line_start":919,"line_end":919,"column_start":5,"column_end":67}},{"value":"/ current map when keys exist in both maps.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":284380,"byte_end":284425,"line_start":920,"line_end":920,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":284430,"byte_end":284433,"line_start":921,"line_end":921,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":284438,"byte_end":284458,"line_start":922,"line_end":922,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":284463,"byte_end":284466,"line_start":923,"line_end":923,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":284471,"byte_end":284485,"line_start":924,"line_end":924,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":284490,"byte_end":284493,"line_start":925,"line_end":925,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":284498,"byte_end":284505,"line_start":926,"line_end":926,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":284510,"byte_end":284545,"line_start":927,"line_end":927,"column_start":5,"column_end":40}},{"value":"/ # use im::hashmap::HashMap;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":284550,"byte_end":284581,"line_start":928,"line_end":928,"column_start":5,"column_end":36}},{"value":"/ let map1 = hashmap!{1 => 1, 3 => 3};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":284586,"byte_end":284626,"line_start":929,"line_end":929,"column_start":5,"column_end":45}},{"value":"/ let map2 = hashmap!{2 => 2, 3 => 4};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":284631,"byte_end":284671,"line_start":930,"line_end":930,"column_start":5,"column_end":45}},{"value":"/ let expected = hashmap!{1 => 1, 2 => 2, 3 => 3};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":284676,"byte_end":284728,"line_start":931,"line_end":931,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(expected, map1.union(map2));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":284733,"byte_end":284776,"line_start":932,"line_end":932,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":284781,"byte_end":284788,"line_start":933,"line_end":933,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":284793,"byte_end":284804,"line_start":934,"line_end":934,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1847},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":285599,"byte_end":285609,"line_start":958,"line_end":958,"column_start":12,"column_end":22},"name":"union_with","qualname":"<HashMap<K, V, S>>::union_with","value":"fn union_with<F>(Self, Self, F) -> Self where F: FnMut(V, V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Construct the union of two maps, using a function to decide\n what to do with the value when a key is in both maps.","sig":null,"attributes":[{"value":"/ Construct the union of two maps, using a function to decide","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":285123,"byte_end":285186,"line_start":947,"line_end":947,"column_start":5,"column_end":68}},{"value":"/ what to do with the value when a key is in both maps.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":285191,"byte_end":285248,"line_start":948,"line_end":948,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":285253,"byte_end":285256,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/ The function is called when a value exists in both maps, and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":285261,"byte_end":285325,"line_start":950,"line_end":950,"column_start":5,"column_end":69}},{"value":"/ receives the value from the current map as its first argument,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":285330,"byte_end":285396,"line_start":951,"line_end":951,"column_start":5,"column_end":71}},{"value":"/ and the value from the other map as the second. It should","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":285401,"byte_end":285462,"line_start":952,"line_end":952,"column_start":5,"column_end":66}},{"value":"/ return the value to be inserted in the resulting map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":285467,"byte_end":285524,"line_start":953,"line_end":953,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":285529,"byte_end":285532,"line_start":954,"line_end":954,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":285537,"byte_end":285557,"line_start":955,"line_end":955,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":285562,"byte_end":285571,"line_start":956,"line_end":956,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":285576,"byte_end":285587,"line_start":957,"line_end":957,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1850},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":286695,"byte_end":286709,"line_start":990,"line_end":990,"column_start":12,"column_end":26},"name":"union_with_key","qualname":"<HashMap<K, V, S>>::union_with_key","value":"fn union_with_key<F>(Self, Self, F) -> Self where\nF: for<'_> FnMut(&'_ K, V, V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Construct the union of two maps, using a function to decide\n what to do with the value when a key is in both maps.","sig":null,"attributes":[{"value":"/ Construct the union of two maps, using a function to decide","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":285764,"byte_end":285827,"line_start":965,"line_end":965,"column_start":5,"column_end":68}},{"value":"/ what to do with the value when a key is in both maps.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":285832,"byte_end":285889,"line_start":966,"line_end":966,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":285894,"byte_end":285897,"line_start":967,"line_end":967,"column_start":5,"column_end":8}},{"value":"/ The function is called when a value exists in both maps, and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":285902,"byte_end":285966,"line_start":968,"line_end":968,"column_start":5,"column_end":69}},{"value":"/ receives a reference to the key as its first argument, the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":285971,"byte_end":286033,"line_start":969,"line_end":969,"column_start":5,"column_end":67}},{"value":"/ value from the current map as the second argument, and the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":286038,"byte_end":286100,"line_start":970,"line_end":970,"column_start":5,"column_end":67}},{"value":"/ value from the other map as the third argument. It should","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":286105,"byte_end":286166,"line_start":971,"line_end":971,"column_start":5,"column_end":66}},{"value":"/ return the value to be inserted in the resulting map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":286171,"byte_end":286228,"line_start":972,"line_end":972,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":286233,"byte_end":286236,"line_start":973,"line_end":973,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":286241,"byte_end":286261,"line_start":974,"line_end":974,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":286266,"byte_end":286269,"line_start":975,"line_end":975,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":286274,"byte_end":286288,"line_start":976,"line_end":976,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":286293,"byte_end":286296,"line_start":977,"line_end":977,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":286301,"byte_end":286308,"line_start":978,"line_end":978,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":286313,"byte_end":286348,"line_start":979,"line_end":979,"column_start":5,"column_end":40}},{"value":"/ # use im::hashmap::HashMap;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":286353,"byte_end":286384,"line_start":980,"line_end":980,"column_start":5,"column_end":36}},{"value":"/ let map1 = hashmap!{1 => 1, 3 => 4};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":286389,"byte_end":286429,"line_start":981,"line_end":981,"column_start":5,"column_end":45}},{"value":"/ let map2 = hashmap!{2 => 2, 3 => 5};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":286434,"byte_end":286474,"line_start":982,"line_end":982,"column_start":5,"column_end":45}},{"value":"/ let expected = hashmap!{1 => 1, 2 => 2, 3 => 9};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":286479,"byte_end":286531,"line_start":983,"line_end":983,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(expected, map1.union_with_key(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":286536,"byte_end":286581,"line_start":984,"line_end":984,"column_start":5,"column_end":50}},{"value":"/     map2,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":286586,"byte_end":286599,"line_start":985,"line_end":985,"column_start":5,"column_end":18}},{"value":"/     |key, left, right| left + right","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":286604,"byte_end":286643,"line_start":986,"line_end":986,"column_start":5,"column_end":44}},{"value":"/ ));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":286648,"byte_end":286655,"line_start":987,"line_end":987,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":286660,"byte_end":286667,"line_start":988,"line_end":988,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":286672,"byte_end":286683,"line_start":989,"line_end":989,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1855},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":288115,"byte_end":288121,"line_start":1037,"line_end":1037,"column_start":12,"column_end":18},"name":"unions","qualname":"<HashMap<K, V, S>>::unions","value":"fn unions<I>(I) -> Self where S: Default, I: IntoIterator<Item = Self>","parent":null,"children":[],"decl_id":null,"docs":" Construct the union of a sequence of maps, selecting the value\n of the leftmost when a key appears in more than one map.","sig":null,"attributes":[{"value":"/ Construct the union of a sequence of maps, selecting the value","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":287584,"byte_end":287650,"line_start":1021,"line_end":1021,"column_start":5,"column_end":71}},{"value":"/ of the leftmost when a key appears in more than one map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":287655,"byte_end":287715,"line_start":1022,"line_end":1022,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":287720,"byte_end":287723,"line_start":1023,"line_end":1023,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":287728,"byte_end":287748,"line_start":1024,"line_end":1024,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":287753,"byte_end":287756,"line_start":1025,"line_end":1025,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":287761,"byte_end":287775,"line_start":1026,"line_end":1026,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":287780,"byte_end":287783,"line_start":1027,"line_end":1027,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":287788,"byte_end":287795,"line_start":1028,"line_end":1028,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":287800,"byte_end":287835,"line_start":1029,"line_end":1029,"column_start":5,"column_end":40}},{"value":"/ # use im::hashmap::HashMap;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":287840,"byte_end":287871,"line_start":1030,"line_end":1030,"column_start":5,"column_end":36}},{"value":"/ let map1 = hashmap!{1 => 1, 3 => 3};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":287876,"byte_end":287916,"line_start":1031,"line_end":1031,"column_start":5,"column_end":45}},{"value":"/ let map2 = hashmap!{2 => 2};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":287921,"byte_end":287953,"line_start":1032,"line_end":1032,"column_start":5,"column_end":37}},{"value":"/ let expected = hashmap!{1 => 1, 2 => 2, 3 => 3};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":287958,"byte_end":288010,"line_start":1033,"line_end":1033,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(expected, HashMap::unions(vec![map1, map2]));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":288015,"byte_end":288075,"line_start":1034,"line_end":1034,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":288080,"byte_end":288087,"line_start":1035,"line_end":1035,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":288092,"byte_end":288103,"line_start":1036,"line_end":1036,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1857},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":288772,"byte_end":288783,"line_start":1056,"line_end":1056,"column_start":12,"column_end":23},"name":"unions_with","qualname":"<HashMap<K, V, S>>::unions_with","value":"fn unions_with<I, F>(I, F) -> Self where S: Default, I: IntoIterator<Item =\nSelf>, F: Fn(V, V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Construct the union of a sequence of maps, using a function to\n decide what to do with the value when a key is in more than\n one map.","sig":null,"attributes":[{"value":"/ Construct the union of a sequence of maps, using a function to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":288281,"byte_end":288347,"line_start":1045,"line_end":1045,"column_start":5,"column_end":71}},{"value":"/ decide what to do with the value when a key is in more than","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":288352,"byte_end":288415,"line_start":1046,"line_end":1046,"column_start":5,"column_end":68}},{"value":"/ one map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":288420,"byte_end":288432,"line_start":1047,"line_end":1047,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":288437,"byte_end":288440,"line_start":1048,"line_end":1048,"column_start":5,"column_end":8}},{"value":"/ The function is called when a value exists in multiple maps,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":288445,"byte_end":288509,"line_start":1049,"line_end":1049,"column_start":5,"column_end":69}},{"value":"/ and receives the value from the current map as its first","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":288514,"byte_end":288574,"line_start":1050,"line_end":1050,"column_start":5,"column_end":65}},{"value":"/ argument, and the value from the next map as the second. It","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":288579,"byte_end":288642,"line_start":1051,"line_end":1051,"column_start":5,"column_end":68}},{"value":"/ should return the value to be inserted in the resulting map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":288647,"byte_end":288711,"line_start":1052,"line_end":1052,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":288716,"byte_end":288719,"line_start":1053,"line_end":1053,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":288724,"byte_end":288744,"line_start":1054,"line_end":1054,"column_start":5,"column_end":25}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":288749,"byte_end":288760,"line_start":1055,"line_end":1055,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1861},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":289560,"byte_end":289575,"line_start":1078,"line_end":1078,"column_start":12,"column_end":27},"name":"unions_with_key","qualname":"<HashMap<K, V, S>>::unions_with_key","value":"fn unions_with_key<I, F>(I, F) -> Self where S: Default, I: IntoIterator<Item\n= Self>, F: for<'_> Fn(&'_ K, V, V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Construct the union of a sequence of maps, using a function to\n decide what to do with the value when a key is in more than\n one map.","sig":null,"attributes":[{"value":"/ Construct the union of a sequence of maps, using a function to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":289006,"byte_end":289072,"line_start":1066,"line_end":1066,"column_start":5,"column_end":71}},{"value":"/ decide what to do with the value when a key is in more than","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":289077,"byte_end":289140,"line_start":1067,"line_end":1067,"column_start":5,"column_end":68}},{"value":"/ one map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":289145,"byte_end":289157,"line_start":1068,"line_end":1068,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":289162,"byte_end":289165,"line_start":1069,"line_end":1069,"column_start":5,"column_end":8}},{"value":"/ The function is called when a value exists in multiple maps,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":289170,"byte_end":289234,"line_start":1070,"line_end":1070,"column_start":5,"column_end":69}},{"value":"/ and receives a reference to the key as its first argument, the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":289239,"byte_end":289305,"line_start":1071,"line_end":1071,"column_start":5,"column_end":71}},{"value":"/ value from the current map as the second argument, and the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":289310,"byte_end":289372,"line_start":1072,"line_end":1072,"column_start":5,"column_end":67}},{"value":"/ value from the next map as the third argument. It should","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":289377,"byte_end":289437,"line_start":1073,"line_end":1073,"column_start":5,"column_end":65}},{"value":"/ return the value to be inserted in the resulting map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":289442,"byte_end":289499,"line_start":1074,"line_end":1074,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":289504,"byte_end":289507,"line_start":1075,"line_end":1075,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":289512,"byte_end":289532,"line_start":1076,"line_end":1076,"column_start":5,"column_end":25}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":289537,"byte_end":289548,"line_start":1077,"line_end":1077,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1865},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":290489,"byte_end":290499,"line_start":1110,"line_end":1110,"column_start":12,"column_end":22},"name":"difference","qualname":"<HashMap<K, V, S>>::difference","value":"fn difference(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct the symmetric difference between two maps by discarding keys\n which occur in both maps.","sig":null,"attributes":[{"value":"/ Construct the symmetric difference between two maps by discarding keys","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":289806,"byte_end":289880,"line_start":1088,"line_end":1088,"column_start":5,"column_end":79}},{"value":"/ which occur in both maps.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":289885,"byte_end":289914,"line_start":1089,"line_end":1089,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":289919,"byte_end":289922,"line_start":1090,"line_end":1090,"column_start":5,"column_end":8}},{"value":"/ This is an alias for the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":289927,"byte_end":289955,"line_start":1091,"line_end":1091,"column_start":5,"column_end":33}},{"value":"/ [`symmetric_difference`][symmetric_difference] method.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":289960,"byte_end":290018,"line_start":1092,"line_end":1092,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":290023,"byte_end":290026,"line_start":1093,"line_end":1093,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":290031,"byte_end":290051,"line_start":1094,"line_end":1094,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":290056,"byte_end":290059,"line_start":1095,"line_end":1095,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":290064,"byte_end":290078,"line_start":1096,"line_end":1096,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":290083,"byte_end":290086,"line_start":1097,"line_end":1097,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":290091,"byte_end":290098,"line_start":1098,"line_end":1098,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":290103,"byte_end":290138,"line_start":1099,"line_end":1099,"column_start":5,"column_end":40}},{"value":"/ # use im::hashmap::HashMap;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":290143,"byte_end":290174,"line_start":1100,"line_end":1100,"column_start":5,"column_end":36}},{"value":"/ let map1 = hashmap!{1 => 1, 3 => 4};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":290179,"byte_end":290219,"line_start":1101,"line_end":1101,"column_start":5,"column_end":45}},{"value":"/ let map2 = hashmap!{2 => 2, 3 => 5};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":290224,"byte_end":290264,"line_start":1102,"line_end":1102,"column_start":5,"column_end":45}},{"value":"/ let expected = hashmap!{1 => 1, 2 => 2};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":290269,"byte_end":290313,"line_start":1103,"line_end":1103,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(expected, map1.difference(map2));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":290318,"byte_end":290366,"line_start":1104,"line_end":1104,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":290371,"byte_end":290378,"line_start":1105,"line_end":1105,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":290383,"byte_end":290386,"line_start":1106,"line_end":1106,"column_start":5,"column_end":8}},{"value":"/ [symmetric_difference]: #method.symmetric_difference","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":290391,"byte_end":290447,"line_start":1107,"line_end":1107,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":290452,"byte_end":290461,"line_start":1108,"line_end":1108,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":290466,"byte_end":290477,"line_start":1109,"line_end":1109,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1866},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":291101,"byte_end":291121,"line_start":1131,"line_end":1131,"column_start":12,"column_end":32},"name":"symmetric_difference","qualname":"<HashMap<K, V, S>>::symmetric_difference","value":"fn symmetric_difference(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct the symmetric difference between two maps by discarding keys\n which occur in both maps.","sig":null,"attributes":[{"value":"/ Construct the symmetric difference between two maps by discarding keys","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":290581,"byte_end":290655,"line_start":1114,"line_end":1114,"column_start":5,"column_end":79}},{"value":"/ which occur in both maps.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":290660,"byte_end":290689,"line_start":1115,"line_end":1115,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":290694,"byte_end":290697,"line_start":1116,"line_end":1116,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":290702,"byte_end":290722,"line_start":1117,"line_end":1117,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":290727,"byte_end":290730,"line_start":1118,"line_end":1118,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":290735,"byte_end":290749,"line_start":1119,"line_end":1119,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":290754,"byte_end":290757,"line_start":1120,"line_end":1120,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":290762,"byte_end":290769,"line_start":1121,"line_end":1121,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":290774,"byte_end":290809,"line_start":1122,"line_end":1122,"column_start":5,"column_end":40}},{"value":"/ # use im::hashmap::HashMap;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":290814,"byte_end":290845,"line_start":1123,"line_end":1123,"column_start":5,"column_end":36}},{"value":"/ let map1 = hashmap!{1 => 1, 3 => 4};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":290850,"byte_end":290890,"line_start":1124,"line_end":1124,"column_start":5,"column_end":45}},{"value":"/ let map2 = hashmap!{2 => 2, 3 => 5};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":290895,"byte_end":290935,"line_start":1125,"line_end":1125,"column_start":5,"column_end":45}},{"value":"/ let expected = hashmap!{1 => 1, 2 => 2};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":290940,"byte_end":290984,"line_start":1126,"line_end":1126,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(expected, map1.symmetric_difference(map2));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":290989,"byte_end":291047,"line_start":1127,"line_end":1127,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":291052,"byte_end":291059,"line_start":1128,"line_end":1128,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":291064,"byte_end":291073,"line_start":1129,"line_end":1129,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":291078,"byte_end":291089,"line_start":1130,"line_end":1130,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1868},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":291625,"byte_end":291640,"line_start":1146,"line_end":1146,"column_start":12,"column_end":27},"name":"difference_with","qualname":"<HashMap<K, V, S>>::difference_with","value":"fn difference_with<F>(Self, Self, F) -> Self where F: FnMut(V, V) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Construct the symmetric difference between two maps by using a function\n to decide what to do if a key occurs in both.","sig":null,"attributes":[{"value":"/ Construct the symmetric difference between two maps by using a function","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":291228,"byte_end":291303,"line_start":1135,"line_end":1135,"column_start":5,"column_end":80}},{"value":"/ to decide what to do if a key occurs in both.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":291308,"byte_end":291357,"line_start":1136,"line_end":1136,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":291362,"byte_end":291365,"line_start":1137,"line_end":1137,"column_start":5,"column_end":8}},{"value":"/ This is an alias for the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":291370,"byte_end":291398,"line_start":1138,"line_end":1138,"column_start":5,"column_end":33}},{"value":"/ [`symmetric_difference_with`][symmetric_difference_with] method.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":291403,"byte_end":291471,"line_start":1139,"line_end":1139,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":291476,"byte_end":291479,"line_start":1140,"line_end":1140,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":291484,"byte_end":291504,"line_start":1141,"line_end":1141,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":291509,"byte_end":291512,"line_start":1142,"line_end":1142,"column_start":5,"column_end":8}},{"value":"/ [symmetric_difference_with]: #method.symmetric_difference_with","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":291517,"byte_end":291583,"line_start":1143,"line_end":1143,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":291588,"byte_end":291597,"line_start":1144,"line_end":1144,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":291602,"byte_end":291613,"line_start":1145,"line_end":1145,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1870},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":291994,"byte_end":292019,"line_start":1159,"line_end":1159,"column_start":12,"column_end":37},"name":"symmetric_difference_with","qualname":"<HashMap<K, V, S>>::symmetric_difference_with","value":"fn symmetric_difference_with<F>(Self, Self, F) -> Self where F: FnMut(V, V) ->\nOption<V>","parent":null,"children":[],"decl_id":null,"docs":" Construct the symmetric difference between two maps by using a function\n to decide what to do if a key occurs in both.","sig":null,"attributes":[{"value":"/ Construct the symmetric difference between two maps by using a function","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":291790,"byte_end":291865,"line_start":1153,"line_end":1153,"column_start":5,"column_end":80}},{"value":"/ to decide what to do if a key occurs in both.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":291870,"byte_end":291919,"line_start":1154,"line_end":1154,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":291924,"byte_end":291927,"line_start":1155,"line_end":1155,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":291932,"byte_end":291952,"line_start":1156,"line_end":1156,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":291957,"byte_end":291966,"line_start":1157,"line_end":1157,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":291971,"byte_end":291982,"line_start":1158,"line_end":1158,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1873},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":293079,"byte_end":293098,"line_start":1192,"line_end":1192,"column_start":12,"column_end":31},"name":"difference_with_key","qualname":"<HashMap<K, V, S>>::difference_with_key","value":"fn difference_with_key<F>(Self, Self, F) -> Self where\nF: for<'_> FnMut(&'_ K, V, V) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Construct the symmetric difference between two maps by using a function\n to decide what to do if a key occurs in both. The function\n receives the key as well as both values.","sig":null,"attributes":[{"value":"/ Construct the symmetric difference between two maps by using a function","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":292193,"byte_end":292268,"line_start":1166,"line_end":1166,"column_start":5,"column_end":80}},{"value":"/ to decide what to do if a key occurs in both. The function","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":292273,"byte_end":292335,"line_start":1167,"line_end":1167,"column_start":5,"column_end":67}},{"value":"/ receives the key as well as both values.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":292340,"byte_end":292384,"line_start":1168,"line_end":1168,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":292389,"byte_end":292392,"line_start":1169,"line_end":1169,"column_start":5,"column_end":8}},{"value":"/ This is an alias for the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":292397,"byte_end":292425,"line_start":1170,"line_end":1170,"column_start":5,"column_end":33}},{"value":"/ [`symmetric_difference_with`_key][symmetric_difference_with_key]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":292430,"byte_end":292498,"line_start":1171,"line_end":1171,"column_start":5,"column_end":73}},{"value":"/ method.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":292503,"byte_end":292514,"line_start":1172,"line_end":1172,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":292519,"byte_end":292522,"line_start":1173,"line_end":1173,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":292527,"byte_end":292547,"line_start":1174,"line_end":1174,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":292552,"byte_end":292555,"line_start":1175,"line_end":1175,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":292560,"byte_end":292574,"line_start":1176,"line_end":1176,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":292579,"byte_end":292582,"line_start":1177,"line_end":1177,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":292587,"byte_end":292594,"line_start":1178,"line_end":1178,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":292599,"byte_end":292634,"line_start":1179,"line_end":1179,"column_start":5,"column_end":40}},{"value":"/ # use im::hashmap::HashMap;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":292639,"byte_end":292670,"line_start":1180,"line_end":1180,"column_start":5,"column_end":36}},{"value":"/ let map1 = hashmap!{1 => 1, 3 => 4};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":292675,"byte_end":292715,"line_start":1181,"line_end":1181,"column_start":5,"column_end":45}},{"value":"/ let map2 = hashmap!{2 => 2, 3 => 5};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":292720,"byte_end":292760,"line_start":1182,"line_end":1182,"column_start":5,"column_end":45}},{"value":"/ let expected = hashmap!{1 => 1, 2 => 2, 3 => 9};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":292765,"byte_end":292817,"line_start":1183,"line_end":1183,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(expected, map1.difference_with_key(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":292822,"byte_end":292872,"line_start":1184,"line_end":1184,"column_start":5,"column_end":55}},{"value":"/     map2,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":292877,"byte_end":292890,"line_start":1185,"line_end":1185,"column_start":5,"column_end":18}},{"value":"/     |key, left, right| Some(left + right)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":292895,"byte_end":292940,"line_start":1186,"line_end":1186,"column_start":5,"column_end":50}},{"value":"/ ));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":292945,"byte_end":292952,"line_start":1187,"line_end":1187,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":292957,"byte_end":292964,"line_start":1188,"line_end":1188,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":292969,"byte_end":292972,"line_start":1189,"line_end":1189,"column_start":5,"column_end":8}},{"value":"/ [symmetric_difference_with_key]: #method.symmetric_difference_with_key","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":292977,"byte_end":293051,"line_start":1190,"line_end":1190,"column_start":5,"column_end":79}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":293056,"byte_end":293067,"line_start":1191,"line_end":1191,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1875},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":293935,"byte_end":293964,"line_start":1219,"line_end":1219,"column_start":12,"column_end":41},"name":"symmetric_difference_with_key","qualname":"<HashMap<K, V, S>>::symmetric_difference_with_key","value":"fn symmetric_difference_with_key<F>(Self, Self, F) -> Self where\nF: for<'_> FnMut(&'_ K, V, V) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Construct the symmetric difference between two maps by using a function\n to decide what to do if a key occurs in both. The function\n receives the key as well as both values.","sig":null,"attributes":[{"value":"/ Construct the symmetric difference between two maps by using a function","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":293256,"byte_end":293331,"line_start":1199,"line_end":1199,"column_start":5,"column_end":80}},{"value":"/ to decide what to do if a key occurs in both. The function","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":293336,"byte_end":293398,"line_start":1200,"line_end":1200,"column_start":5,"column_end":67}},{"value":"/ receives the key as well as both values.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":293403,"byte_end":293447,"line_start":1201,"line_end":1201,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":293452,"byte_end":293455,"line_start":1202,"line_end":1202,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":293460,"byte_end":293480,"line_start":1203,"line_end":1203,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":293485,"byte_end":293488,"line_start":1204,"line_end":1204,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":293493,"byte_end":293507,"line_start":1205,"line_end":1205,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":293512,"byte_end":293515,"line_start":1206,"line_end":1206,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":293520,"byte_end":293527,"line_start":1207,"line_end":1207,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":293532,"byte_end":293567,"line_start":1208,"line_end":1208,"column_start":5,"column_end":40}},{"value":"/ # use im::hashmap::HashMap;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":293572,"byte_end":293603,"line_start":1209,"line_end":1209,"column_start":5,"column_end":36}},{"value":"/ let map1 = hashmap!{1 => 1, 3 => 4};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":293608,"byte_end":293648,"line_start":1210,"line_end":1210,"column_start":5,"column_end":45}},{"value":"/ let map2 = hashmap!{2 => 2, 3 => 5};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":293653,"byte_end":293693,"line_start":1211,"line_end":1211,"column_start":5,"column_end":45}},{"value":"/ let expected = hashmap!{1 => 1, 2 => 2, 3 => 9};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":293698,"byte_end":293750,"line_start":1212,"line_end":1212,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(expected, map1.symmetric_difference_with_key(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":293755,"byte_end":293815,"line_start":1213,"line_end":1213,"column_start":5,"column_end":65}},{"value":"/     map2,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":293820,"byte_end":293833,"line_start":1214,"line_end":1214,"column_start":5,"column_end":18}},{"value":"/     |key, left, right| Some(left + right)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":293838,"byte_end":293883,"line_start":1215,"line_end":1215,"column_start":5,"column_end":50}},{"value":"/ ));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":293888,"byte_end":293895,"line_start":1216,"line_end":1216,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":293900,"byte_end":293907,"line_start":1217,"line_end":1217,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":293912,"byte_end":293923,"line_start":1218,"line_end":1218,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1877},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":295092,"byte_end":295111,"line_start":1256,"line_end":1256,"column_start":12,"column_end":31},"name":"relative_complement","qualname":"<HashMap<K, V, S>>::relative_complement","value":"fn relative_complement(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct the relative complement between two maps by discarding keys\n which occur in `other`.","sig":null,"attributes":[{"value":"/ Construct the relative complement between two maps by discarding keys","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":294552,"byte_end":294625,"line_start":1239,"line_end":1239,"column_start":5,"column_end":78}},{"value":"/ which occur in `other`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":294630,"byte_end":294657,"line_start":1240,"line_end":1240,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":294662,"byte_end":294665,"line_start":1241,"line_end":1241,"column_start":5,"column_end":8}},{"value":"/ Time: O(m log n) where m is the size of the other map","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":294670,"byte_end":294727,"line_start":1242,"line_end":1242,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":294732,"byte_end":294735,"line_start":1243,"line_end":1243,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":294740,"byte_end":294754,"line_start":1244,"line_end":1244,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":294759,"byte_end":294762,"line_start":1245,"line_end":1245,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":294767,"byte_end":294774,"line_start":1246,"line_end":1246,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":294779,"byte_end":294814,"line_start":1247,"line_end":1247,"column_start":5,"column_end":40}},{"value":"/ # use im::ordmap::OrdMap;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":294819,"byte_end":294848,"line_start":1248,"line_end":1248,"column_start":5,"column_end":34}},{"value":"/ let map1 = ordmap!{1 => 1, 3 => 4};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":294853,"byte_end":294892,"line_start":1249,"line_end":1249,"column_start":5,"column_end":44}},{"value":"/ let map2 = ordmap!{2 => 2, 3 => 5};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":294897,"byte_end":294936,"line_start":1250,"line_end":1250,"column_start":5,"column_end":44}},{"value":"/ let expected = ordmap!{1 => 1};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":294941,"byte_end":294976,"line_start":1251,"line_end":1251,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(expected, map1.relative_complement(map2));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":294981,"byte_end":295038,"line_start":1252,"line_end":1252,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":295043,"byte_end":295050,"line_start":1253,"line_end":1253,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":295055,"byte_end":295064,"line_start":1254,"line_end":1254,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":295069,"byte_end":295080,"line_start":1255,"line_end":1255,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1878},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":295738,"byte_end":295750,"line_start":1280,"line_end":1280,"column_start":12,"column_end":24},"name":"intersection","qualname":"<HashMap<K, V, S>>::intersection","value":"fn intersection(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct the intersection of two maps, keeping the values\n from the current map.","sig":null,"attributes":[{"value":"/ Construct the intersection of two maps, keeping the values","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":295250,"byte_end":295312,"line_start":1263,"line_end":1263,"column_start":5,"column_end":67}},{"value":"/ from the current map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":295317,"byte_end":295342,"line_start":1264,"line_end":1264,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":295347,"byte_end":295350,"line_start":1265,"line_end":1265,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":295355,"byte_end":295375,"line_start":1266,"line_end":1266,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":295380,"byte_end":295383,"line_start":1267,"line_end":1267,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":295388,"byte_end":295402,"line_start":1268,"line_end":1268,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":295407,"byte_end":295410,"line_start":1269,"line_end":1269,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":295415,"byte_end":295422,"line_start":1270,"line_end":1270,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":295427,"byte_end":295462,"line_start":1271,"line_end":1271,"column_start":5,"column_end":40}},{"value":"/ # use im::hashmap::HashMap;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":295467,"byte_end":295498,"line_start":1272,"line_end":1272,"column_start":5,"column_end":36}},{"value":"/ let map1 = hashmap!{1 => 1, 2 => 2};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":295503,"byte_end":295543,"line_start":1273,"line_end":1273,"column_start":5,"column_end":45}},{"value":"/ let map2 = hashmap!{2 => 3, 3 => 4};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":295548,"byte_end":295588,"line_start":1274,"line_end":1274,"column_start":5,"column_end":45}},{"value":"/ let expected = hashmap!{2 => 2};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":295593,"byte_end":295629,"line_start":1275,"line_end":1275,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(expected, map1.intersection(map2));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":295634,"byte_end":295684,"line_start":1276,"line_end":1276,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":295689,"byte_end":295696,"line_start":1277,"line_end":1277,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":295701,"byte_end":295710,"line_start":1278,"line_end":1278,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":295715,"byte_end":295726,"line_start":1279,"line_end":1279,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1880},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":296076,"byte_end":296093,"line_start":1291,"line_end":1291,"column_start":12,"column_end":29},"name":"intersection_with","qualname":"<HashMap<K, V, S>>::intersection_with","value":"fn intersection_with<B, C, F>(Self, HashMap<K, B, S>, F) -> HashMap<K, C, S>\nwhere B: Clone, C: Clone, F: FnMut(V, B) -> C","parent":null,"children":[],"decl_id":null,"docs":" Construct the intersection of two maps, calling a function\n with both values for each key and using the result as the\n value for the key.","sig":null,"attributes":[{"value":"/ Construct the intersection of two maps, calling a function","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":295846,"byte_end":295908,"line_start":1284,"line_end":1284,"column_start":5,"column_end":67}},{"value":"/ with both values for each key and using the result as the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":295913,"byte_end":295974,"line_start":1285,"line_end":1285,"column_start":5,"column_end":66}},{"value":"/ value for the key.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":295979,"byte_end":296001,"line_start":1286,"line_end":1286,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":296006,"byte_end":296009,"line_start":1287,"line_end":1287,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":296014,"byte_end":296034,"line_start":1288,"line_end":1288,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":296039,"byte_end":296048,"line_start":1289,"line_end":1289,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":296053,"byte_end":296064,"line_start":1290,"line_end":1290,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1885},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":296946,"byte_end":296967,"line_start":1320,"line_end":1320,"column_start":12,"column_end":33},"name":"intersection_with_key","qualname":"<HashMap<K, V, S>>::intersection_with_key","value":"fn intersection_with_key<B, C, F>(Self, HashMap<K, B, S>, F)\n-> HashMap<K, C, S> where B: Clone, C: Clone, F: for<'_> FnMut(&'_ K, V, B) ->\nC","parent":null,"children":[],"decl_id":null,"docs":" Construct the intersection of two maps, calling a function\n with the key and both values for each key and using the result\n as the value for the key.","sig":null,"attributes":[{"value":"/ Construct the intersection of two maps, calling a function","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":296321,"byte_end":296383,"line_start":1300,"line_end":1300,"column_start":5,"column_end":67}},{"value":"/ with the key and both values for each key and using the result","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":296388,"byte_end":296454,"line_start":1301,"line_end":1301,"column_start":5,"column_end":71}},{"value":"/ as the value for the key.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":296459,"byte_end":296488,"line_start":1302,"line_end":1302,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":296493,"byte_end":296496,"line_start":1303,"line_end":1303,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":296501,"byte_end":296521,"line_start":1304,"line_end":1304,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":296526,"byte_end":296529,"line_start":1305,"line_end":1305,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":296534,"byte_end":296548,"line_start":1306,"line_end":1306,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":296553,"byte_end":296556,"line_start":1307,"line_end":1307,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":296561,"byte_end":296568,"line_start":1308,"line_end":1308,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":296573,"byte_end":296608,"line_start":1309,"line_end":1309,"column_start":5,"column_end":40}},{"value":"/ # use im::hashmap::HashMap;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":296613,"byte_end":296644,"line_start":1310,"line_end":1310,"column_start":5,"column_end":36}},{"value":"/ let map1 = hashmap!{1 => 1, 2 => 2};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":296649,"byte_end":296689,"line_start":1311,"line_end":1311,"column_start":5,"column_end":45}},{"value":"/ let map2 = hashmap!{2 => 3, 3 => 4};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":296694,"byte_end":296734,"line_start":1312,"line_end":1312,"column_start":5,"column_end":45}},{"value":"/ let expected = hashmap!{2 => 5};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":296739,"byte_end":296775,"line_start":1313,"line_end":1313,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(expected, map1.intersection_with_key(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":296780,"byte_end":296832,"line_start":1314,"line_end":1314,"column_start":5,"column_end":57}},{"value":"/     map2,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":296837,"byte_end":296850,"line_start":1315,"line_end":1315,"column_start":5,"column_end":18}},{"value":"/     |key, left, right| left + right","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":296855,"byte_end":296894,"line_start":1316,"line_end":1316,"column_start":5,"column_end":44}},{"value":"/ ));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":296899,"byte_end":296906,"line_start":1317,"line_end":1317,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":296911,"byte_end":296918,"line_start":1318,"line_end":1318,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":296923,"byte_end":296934,"line_start":1319,"line_end":1319,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1894},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":298175,"byte_end":298183,"line_start":1364,"line_end":1364,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::hash::map::Entry::Occupied","value":"Entry::Occupied(OccupiedEntry)","parent":{"krate":0,"index":1889},"children":[],"decl_id":null,"docs":" An entry which exists in the map.\n","sig":null,"attributes":[{"value":"/ An entry which exists in the map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":298133,"byte_end":298170,"line_start":1363,"line_end":1363,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":1896},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":298184,"byte_end":298210,"line_start":1364,"line_end":1364,"column_start":14,"column_end":40},"name":"0","qualname":"::hash::map::Entry::Occupied::0","value":"hash::map::OccupiedEntry<'a, K, V, S>","parent":{"krate":0,"index":1894},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1897},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":298266,"byte_end":298272,"line_start":1366,"line_end":1366,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::hash::map::Entry::Vacant","value":"Entry::Vacant(VacantEntry)","parent":{"krate":0,"index":1889},"children":[],"decl_id":null,"docs":" An entry which doesn't exist in the map.\n","sig":null,"attributes":[{"value":"/ An entry which doesn't exist in the map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":298217,"byte_end":298261,"line_start":1365,"line_end":1365,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":1899},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":298273,"byte_end":298297,"line_start":1366,"line_end":1366,"column_start":12,"column_end":36},"name":"0","qualname":"::hash::map::Entry::Vacant::0","value":"hash::map::VacantEntry<'a, K, V, S>","parent":{"krate":0,"index":1897},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1889},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":298042,"byte_end":298047,"line_start":1357,"line_end":1357,"column_start":10,"column_end":15},"name":"Entry","qualname":"::hash::map::Entry","value":"enum Entry<'a, K, V, S> where K: Hash + Eq + Clone, V: Clone, S: BuildHasher {\n    Occupied(OccupiedEntry),\n    Vacant(VacantEntry),\n}","parent":null,"children":[{"krate":0,"index":1894},{"krate":0,"index":1897}],"decl_id":null,"docs":" A handle for a key and its associated value.","sig":null,"attributes":[{"value":"/ A handle for a key and its associated value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":297530,"byte_end":297578,"line_start":1346,"line_end":1346,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":297579,"byte_end":297582,"line_start":1347,"line_end":1347,"column_start":1,"column_end":4}},{"value":"/ ## Performance Note","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":297583,"byte_end":297606,"line_start":1348,"line_end":1348,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":297607,"byte_end":297610,"line_start":1349,"line_end":1349,"column_start":1,"column_end":4}},{"value":"/ When using an `Entry`, the key is only ever hashed once, when you","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":297611,"byte_end":297680,"line_start":1350,"line_end":1350,"column_start":1,"column_end":70}},{"value":"/ create the `Entry`. Operations on an `Entry` will never trigger a","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":297681,"byte_end":297750,"line_start":1351,"line_end":1351,"column_start":1,"column_end":70}},{"value":"/ rehash, where eg. a `contains_key(key)` followed by an","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":297751,"byte_end":297809,"line_start":1352,"line_end":1352,"column_start":1,"column_end":59}},{"value":"/ `insert(key, default_value)` (the equivalent of","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":297810,"byte_end":297861,"line_start":1353,"line_end":1353,"column_start":1,"column_end":52}},{"value":"/ `Entry::or_insert()`) would need to hash the key once for the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":297862,"byte_end":297927,"line_start":1354,"line_end":1354,"column_start":1,"column_end":66}},{"value":"/ `contains_key` and again for the `insert`. The operations","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":297928,"byte_end":297989,"line_start":1355,"line_end":1355,"column_start":1,"column_end":62}},{"value":"/ generally perform similarly otherwise.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":297990,"byte_end":298032,"line_start":1356,"line_end":1356,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1905},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":298560,"byte_end":298569,"line_start":1377,"line_end":1377,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<Entry>::or_insert","value":"fn or_insert(Self, V) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Insert the default value provided if there was no value\n already, and return a mutable reference to the value.\n","sig":null,"attributes":[{"value":"/ Insert the default value provided if there was no value","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":298427,"byte_end":298486,"line_start":1375,"line_end":1375,"column_start":5,"column_end":64}},{"value":"/ already, and return a mutable reference to the value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":298491,"byte_end":298548,"line_start":1376,"line_end":1376,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1907},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":298813,"byte_end":298827,"line_start":1384,"line_end":1384,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<Entry>::or_insert_with","value":"fn or_insert_with<F>(Self, F) -> &'a mut V where F: FnOnce() -> V","parent":null,"children":[],"decl_id":null,"docs":" Insert the default value from the provided function if there\n was no value already, and return a mutable reference to the\n value.\n","sig":null,"attributes":[{"value":"/ Insert the default value from the provided function if there","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":298654,"byte_end":298718,"line_start":1381,"line_end":1381,"column_start":5,"column_end":69}},{"value":"/ was no value already, and return a mutable reference to the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":298723,"byte_end":298786,"line_start":1382,"line_end":1382,"column_start":5,"column_end":68}},{"value":"/ value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":298791,"byte_end":298801,"line_start":1383,"line_end":1383,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1909},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":299185,"byte_end":299195,"line_start":1396,"line_end":1396,"column_start":12,"column_end":22},"name":"or_default","qualname":"<Entry>::or_default","value":"fn or_default(Self) -> &'a mut V where V: Default","parent":null,"children":[],"decl_id":null,"docs":" Insert a default value if there was no value already, and\n return a mutable reference to the value.\n","sig":null,"attributes":[{"value":"/ Insert a default value if there was no value already, and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":299063,"byte_end":299124,"line_start":1394,"line_end":1394,"column_start":5,"column_end":66}},{"value":"/ return a mutable reference to the value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":299129,"byte_end":299173,"line_start":1395,"line_end":1395,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1910},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":299367,"byte_end":299370,"line_start":1405,"line_end":1405,"column_start":12,"column_end":15},"name":"key","qualname":"<Entry>::key","value":"fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Get the key for this entry.\n","sig":null,"attributes":[{"value":"/ Get the key for this entry.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":299308,"byte_end":299339,"line_start":1403,"line_end":1403,"column_start":5,"column_end":36}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":299344,"byte_end":299355,"line_start":1404,"line_end":1404,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1911},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":299619,"byte_end":299629,"line_start":1414,"line_end":1414,"column_start":12,"column_end":22},"name":"and_modify","qualname":"<Entry>::and_modify","value":"fn and_modify<F>(Self, F) -> Self where F: for<'_> FnOnce(&'_ mut V) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Call the provided function to modify the value if the value\n exists.\n","sig":null,"attributes":[{"value":"/ Call the provided function to modify the value if the value","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":299528,"byte_end":299591,"line_start":1412,"line_end":1412,"column_start":5,"column_end":68}},{"value":"/ exists.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":299596,"byte_end":299607,"line_start":1413,"line_end":1413,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":1913},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":299930,"byte_end":299943,"line_start":1427,"line_end":1427,"column_start":12,"column_end":25},"name":"OccupiedEntry","qualname":"::hash::map::OccupiedEntry","value":"OccupiedEntry {  }","parent":null,"children":[{"krate":0,"index":1918},{"krate":0,"index":1919},{"krate":0,"index":1920}],"decl_id":null,"docs":" An entry for a mapping that already exists in the map.\n","sig":null,"attributes":[{"value":"/ An entry for a mapping that already exists in the map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":299860,"byte_end":299918,"line_start":1426,"line_end":1426,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1926},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":300286,"byte_end":300289,"line_start":1446,"line_end":1446,"column_start":12,"column_end":15},"name":"key","qualname":"<OccupiedEntry>::key","value":"fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Get the key for this entry.\n","sig":null,"attributes":[{"value":"/ Get the key for this entry.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":300227,"byte_end":300258,"line_start":1444,"line_end":1444,"column_start":5,"column_end":36}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":300263,"byte_end":300274,"line_start":1445,"line_end":1445,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1927},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":300412,"byte_end":300424,"line_start":1451,"line_end":1451,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<OccupiedEntry>::remove_entry","value":"fn remove_entry(Self) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Remove this entry from the map and return the removed mapping.\n","sig":null,"attributes":[{"value":"/ Remove this entry from the map and return the removed mapping.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":300334,"byte_end":300400,"line_start":1450,"line_end":1450,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1928},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":300713,"byte_end":300716,"line_start":1460,"line_end":1460,"column_start":12,"column_end":15},"name":"get","qualname":"<OccupiedEntry>::get","value":"fn get(&Self) -> &V","parent":null,"children":[],"decl_id":null,"docs":" Get the current value.\n","sig":null,"attributes":[{"value":"/ Get the current value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":300659,"byte_end":300685,"line_start":1458,"line_end":1458,"column_start":5,"column_end":31}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":300690,"byte_end":300701,"line_start":1459,"line_end":1459,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1929},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":300883,"byte_end":300890,"line_start":1466,"line_end":1466,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OccupiedEntry>::get_mut","value":"fn get_mut(&mut Self) -> &mut V","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the current value.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the current value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":300806,"byte_end":300855,"line_start":1464,"line_end":1464,"column_start":5,"column_end":54}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":300860,"byte_end":300871,"line_start":1465,"line_end":1465,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1930},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":301196,"byte_end":301204,"line_start":1476,"line_end":1476,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<OccupiedEntry>::into_mut","value":"fn into_mut(Self) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Convert this entry into a mutable reference.\n","sig":null,"attributes":[{"value":"/ Convert this entry into a mutable reference.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":301120,"byte_end":301168,"line_start":1474,"line_end":1474,"column_start":5,"column_end":53}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":301173,"byte_end":301184,"line_start":1475,"line_end":1475,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1931},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":301476,"byte_end":301482,"line_start":1485,"line_end":1485,"column_start":12,"column_end":18},"name":"insert","qualname":"<OccupiedEntry>::insert","value":"fn insert(&mut Self, V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Overwrite the current value.\n","sig":null,"attributes":[{"value":"/ Overwrite the current value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":301432,"byte_end":301464,"line_start":1484,"line_end":1484,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1932},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":301642,"byte_end":301648,"line_start":1490,"line_end":1490,"column_start":12,"column_end":18},"name":"remove","qualname":"<OccupiedEntry>::remove","value":"fn remove(Self) -> V","parent":null,"children":[],"decl_id":null,"docs":" Remove this entry from the map and return the removed value.\n","sig":null,"attributes":[{"value":"/ Remove this entry from the map and return the removed value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":301566,"byte_end":301630,"line_start":1489,"line_end":1489,"column_start":5,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":1933},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":301779,"byte_end":301790,"line_start":1496,"line_end":1496,"column_start":12,"column_end":23},"name":"VacantEntry","qualname":"::hash::map::VacantEntry","value":"VacantEntry {  }","parent":null,"children":[{"krate":0,"index":1938},{"krate":0,"index":1939},{"krate":0,"index":1940}],"decl_id":null,"docs":" An entry for a mapping that does not already exist in the map.\n","sig":null,"attributes":[{"value":"/ An entry for a mapping that does not already exist in the map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":301701,"byte_end":301767,"line_start":1495,"line_end":1495,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1946},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":302131,"byte_end":302134,"line_start":1515,"line_end":1515,"column_start":12,"column_end":15},"name":"key","qualname":"<VacantEntry>::key","value":"fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Get the key for this entry.\n","sig":null,"attributes":[{"value":"/ Get the key for this entry.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":302072,"byte_end":302103,"line_start":1513,"line_end":1513,"column_start":5,"column_end":36}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":302108,"byte_end":302119,"line_start":1514,"line_end":1514,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1947},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":302243,"byte_end":302251,"line_start":1521,"line_end":1521,"column_start":12,"column_end":20},"name":"into_key","qualname":"<VacantEntry>::into_key","value":"fn into_key(Self) -> K","parent":null,"children":[],"decl_id":null,"docs":" Convert this entry into its key.\n","sig":null,"attributes":[{"value":"/ Convert this entry into its key.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":302179,"byte_end":302215,"line_start":1519,"line_end":1519,"column_start":5,"column_end":41}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":302220,"byte_end":302231,"line_start":1520,"line_end":1520,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1948},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":302340,"byte_end":302346,"line_start":1526,"line_end":1526,"column_start":12,"column_end":18},"name":"insert","qualname":"<VacantEntry>::insert","value":"fn insert(Self, V) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Insert a value into this entry.\n","sig":null,"attributes":[{"value":"/ Insert a value into this entry.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":302293,"byte_end":302328,"line_start":1525,"line_end":1525,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1953},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":303021,"byte_end":303026,"line_start":1554,"line_end":1554,"column_start":8,"column_end":13},"name":"clone","qualname":"<HashMap<K, V, S> as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":" Clone a map.","sig":null,"attributes":[{"value":"/ Clone a map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":302956,"byte_end":302972,"line_start":1550,"line_end":1550,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":302977,"byte_end":302980,"line_start":1551,"line_end":1551,"column_start":5,"column_end":8}},{"value":"/ Time: O(1)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":302985,"byte_end":302999,"line_start":1552,"line_end":1552,"column_start":5,"column_end":19}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":303004,"byte_end":303013,"line_start":1553,"line_end":1553,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1958},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":303373,"byte_end":303375,"line_start":1571,"line_end":1571,"column_start":8,"column_end":10},"name":"eq","qualname":"<HashMap<K, V, S> as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &Self) -> bool","parent":{"krate":2,"index":2831},"children":[],"decl_id":{"krate":2,"index":2833},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1967},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":304207,"byte_end":304218,"line_start":1617,"line_end":1617,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<HashMap<K, V, S> as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp(&Self, &Self) -> Option<Ordering>","parent":{"krate":2,"index":2877},"children":[],"decl_id":{"krate":2,"index":2879},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1972},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":304565,"byte_end":304568,"line_start":1631,"line_end":1631,"column_start":8,"column_end":11},"name":"cmp","qualname":"<HashMap<K, V, S> as std::cmp::Ord>::cmp","value":"fn cmp(&Self, &Self) -> Ordering","parent":{"krate":2,"index":2867},"children":[],"decl_id":{"krate":2,"index":2868},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1977},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":304871,"byte_end":304875,"line_start":1645,"line_end":1645,"column_start":8,"column_end":12},"name":"hash","qualname":"<HashMap<K, V, S> as std::hash::Hash>::hash","value":"fn hash<H>(&Self, &mut H) where H: Hasher","parent":{"krate":2,"index":10324},"children":[],"decl_id":{"krate":2,"index":10325},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1983},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":305115,"byte_end":305122,"line_start":1660,"line_end":1660,"column_start":8,"column_end":15},"name":"default","qualname":"<HashMap<K, V, S> as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":305098,"byte_end":305107,"line_start":1659,"line_end":1659,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1989},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":305510,"byte_end":305513,"line_start":1680,"line_end":1680,"column_start":8,"column_end":11},"name":"add","qualname":"<HashMap<K, V, S> as std::ops::Add>::add","value":"fn add(Self, Self) -> Self::Output","parent":{"krate":2,"index":3247},"children":[],"decl_id":{"krate":2,"index":3250},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1996},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":305745,"byte_end":305748,"line_start":1693,"line_end":1693,"column_start":8,"column_end":11},"name":"add","qualname":"<&'a HashMap<K, V, S> as std::ops::Add>::add","value":"fn add(Self, Self) -> Self::Output","parent":{"krate":2,"index":3247},"children":[],"decl_id":{"krate":2,"index":3250},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2001},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":305961,"byte_end":305964,"line_start":1704,"line_end":1704,"column_start":8,"column_end":11},"name":"sum","qualname":"<HashMap<K, V, S> as std::iter::Sum>::sum","value":"fn sum<I>(I) -> Self where I: Iterator<Item = Self>","parent":{"krate":2,"index":8238},"children":[],"decl_id":{"krate":2,"index":8240},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2010},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":306246,"byte_end":306252,"line_start":1718,"line_end":1718,"column_start":8,"column_end":14},"name":"extend","qualname":"<HashMap<K, V, S> as std::iter::Extend>::extend","value":"fn extend<I>(&mut Self, I) where I: IntoIterator<Item = (RK, RV)>","parent":{"krate":2,"index":8288},"children":[],"decl_id":{"krate":2,"index":8290},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2019},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":306622,"byte_end":306627,"line_start":1736,"line_end":1736,"column_start":8,"column_end":13},"name":"index","qualname":"<HashMap<K, V, S> as std::ops::Index>::index","value":"fn index(&Self, &BK) -> &Self::Output","parent":{"krate":2,"index":3483},"children":[],"decl_id":{"krate":2,"index":3486},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2026},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":307030,"byte_end":307039,"line_start":1751,"line_end":1751,"column_start":8,"column_end":17},"name":"index_mut","qualname":"<HashMap<K, V, S> as std::ops::IndexMut>::index_mut","value":"fn index_mut(&mut Self, &BK) -> &mut Self::Output","parent":{"krate":2,"index":3487},"children":[],"decl_id":{"krate":2,"index":3489},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2031},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":307515,"byte_end":307518,"line_start":1767,"line_end":1767,"column_start":8,"column_end":11},"name":"fmt","qualname":"<HashMap<K, V, S> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut Formatter) -> Result<(), Error>","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2032},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":308540,"byte_end":308544,"line_start":1813,"line_end":1813,"column_start":12,"column_end":16},"name":"Iter","qualname":"::hash::map::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":2036}],"decl_id":null,"docs":" An iterator over the elements of a map.\n","sig":null,"attributes":[{"value":"/ An iterator over the elements of a map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":308485,"byte_end":308528,"line_start":1812,"line_end":1812,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2042},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":308675,"byte_end":308679,"line_start":1820,"line_end":1820,"column_start":8,"column_end":12},"name":"next","qualname":"<Iter as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8476},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2044},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":308778,"byte_end":308787,"line_start":1824,"line_end":1824,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Iter as std::iter::Iterator>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8477},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2053},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":309030,"byte_end":309037,"line_start":1834,"line_end":1834,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::hash::map::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":2057}],"decl_id":null,"docs":" A mutable iterator over the elements of a map.\n","sig":null,"attributes":[{"value":"/ A mutable iterator over the elements of a map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":308968,"byte_end":309018,"line_start":1833,"line_end":1833,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2063},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":309246,"byte_end":309250,"line_start":1849,"line_end":1849,"column_start":8,"column_end":12},"name":"next","qualname":"<IterMut as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8476},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2065},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":309351,"byte_end":309360,"line_start":1853,"line_end":1853,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<IterMut as std::iter::Iterator>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8477},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2074},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":309681,"byte_end":309694,"line_start":1873,"line_end":1873,"column_start":12,"column_end":25},"name":"ConsumingIter","qualname":"::hash::map::ConsumingIter","value":"ConsumingIter {  }","parent":null,"children":[{"krate":0,"index":2076}],"decl_id":null,"docs":" A consuming iterator over the elements of a map.\n","sig":null,"attributes":[{"value":"/ A consuming iterator over the elements of a map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":309617,"byte_end":309669,"line_start":1872,"line_end":1872,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2080},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":309835,"byte_end":309839,"line_start":1883,"line_end":1883,"column_start":8,"column_end":12},"name":"next","qualname":"<ConsumingIter<A> as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8476},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2082},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":309928,"byte_end":309937,"line_start":1887,"line_end":1887,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<ConsumingIter<A> as std::iter::Iterator>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8477},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2087},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":310213,"byte_end":310217,"line_start":1897,"line_end":1897,"column_start":12,"column_end":16},"name":"Keys","qualname":"::hash::map::Keys","value":"Keys {  }","parent":null,"children":[{"krate":0,"index":2091}],"decl_id":null,"docs":" An iterator over the keys of a map.\n","sig":null,"attributes":[{"value":"/ An iterator over the keys of a map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":310162,"byte_end":310201,"line_start":1896,"line_end":1896,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2097},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":310339,"byte_end":310343,"line_start":1904,"line_end":1904,"column_start":8,"column_end":12},"name":"next","qualname":"<Keys as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8476},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2099},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":310437,"byte_end":310446,"line_start":1908,"line_end":1908,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Keys as std::iter::Iterator>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8477},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2108},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":310680,"byte_end":310686,"line_start":1918,"line_end":1918,"column_start":12,"column_end":18},"name":"Values","qualname":"::hash::map::Values","value":"Values {  }","parent":null,"children":[{"krate":0,"index":2112}],"decl_id":null,"docs":" An iterator over the values of a map.\n","sig":null,"attributes":[{"value":"/ An iterator over the values of a map.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":310627,"byte_end":310668,"line_start":1917,"line_end":1917,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2118},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":310810,"byte_end":310814,"line_start":1925,"line_end":1925,"column_start":8,"column_end":12},"name":"next","qualname":"<Values as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8476},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2120},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":310908,"byte_end":310917,"line_start":1929,"line_end":1929,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Values as std::iter::Iterator>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8477},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2136},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":311294,"byte_end":311303,"line_start":1947,"line_end":1947,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<&'a HashMap<K, V, S> as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":2,"index":8279},"children":[],"decl_id":{"krate":2,"index":8282},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":311277,"byte_end":311286,"line_start":1946,"line_end":1946,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2143},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":311564,"byte_end":311573,"line_start":1962,"line_end":1962,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<HashMap<K, V, S> as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":2,"index":8279},"children":[],"decl_id":{"krate":2,"index":8282},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":311547,"byte_end":311556,"line_start":1961,"line_end":1961,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2148},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":311868,"byte_end":311877,"line_start":1977,"line_end":1977,"column_start":8,"column_end":17},"name":"from_iter","qualname":"<HashMap<K, V, S> as std::iter::FromIterator>::from_iter","value":"fn from_iter<T>(T) -> Self where T: IntoIterator<Item = (K, V)>","parent":{"krate":2,"index":8275},"children":[],"decl_id":{"krate":2,"index":8277},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2154},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":312159,"byte_end":312165,"line_start":1991,"line_end":1991,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<HashMap<K, V, S> as std::convert::AsRef>::as_ref","value":"fn as_ref(&Self) -> &Self","parent":{"krate":2,"index":3076},"children":[],"decl_id":{"krate":2,"index":3078},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":312142,"byte_end":312151,"line_start":1990,"line_end":1990,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2165},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":312524,"byte_end":312528,"line_start":2005,"line_end":2005,"column_start":8,"column_end":12},"name":"from","qualname":"<HashMap<OK, OV, SB> as std::convert::From>::from","value":"fn from(&HashMap<&K, &V, SA>) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2172},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":312818,"byte_end":312822,"line_start":2018,"line_end":2018,"column_start":8,"column_end":12},"name":"from","qualname":"<HashMap<K, V, S> as std::convert::From>::from","value":"fn from(&'a [(K, V)]) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2177},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":313033,"byte_end":313037,"line_start":2029,"line_end":2029,"column_start":8,"column_end":12},"name":"from","qualname":"<HashMap<K, V, S> as std::convert::From>::from","value":"fn from(Vec<(K, V)>) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2183},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":313251,"byte_end":313255,"line_start":2040,"line_end":2040,"column_start":8,"column_end":12},"name":"from","qualname":"<HashMap<K, V, S> as std::convert::From>::from","value":"fn from(&'a Vec<(K, V)>) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2188},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":313484,"byte_end":313488,"line_start":2051,"line_end":2051,"column_start":8,"column_end":12},"name":"from","qualname":"<HashMap<K, V, S> as std::convert::From>::from","value":"fn from(collections::HashMap<K, V>) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2194},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":313732,"byte_end":313736,"line_start":2062,"line_end":2062,"column_start":8,"column_end":12},"name":"from","qualname":"<HashMap<K, V, S> as std::convert::From>::from","value":"fn from(&'a collections::HashMap<K, V>) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2200},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":314009,"byte_end":314013,"line_start":2073,"line_end":2073,"column_start":8,"column_end":12},"name":"from","qualname":"<HashMap<K, V, S> as std::convert::From>::from","value":"fn from(collections::BTreeMap<K, V>) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2206},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":314259,"byte_end":314263,"line_start":2084,"line_end":2084,"column_start":8,"column_end":12},"name":"from","qualname":"<HashMap<K, V, S> as std::convert::From>::from","value":"fn from(&'a collections::BTreeMap<K, V>) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2208},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"set","qualname":"::hash::set","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","parent":null,"children":[{"krate":0,"index":2209},{"krate":0,"index":2212},{"krate":0,"index":2215},{"krate":0,"index":2218},{"krate":0,"index":2219},{"krate":0,"index":2222},{"krate":0,"index":2225},{"krate":0,"index":2226},{"krate":0,"index":2227},{"krate":0,"index":2229},{"krate":0,"index":2230},{"krate":0,"index":2232},{"krate":0,"index":2235},{"krate":0,"index":2236},{"krate":0,"index":2239},{"krate":0,"index":2240},{"krate":0,"index":2242},{"krate":0,"index":2245},{"krate":0,"index":2248},{"krate":0,"index":2249},{"krate":0,"index":2252},{"krate":0,"index":2255},{"krate":0,"index":2258},{"krate":0,"index":2259},{"krate":0,"index":2262},{"krate":0,"index":2265},{"krate":0,"index":2268},{"krate":0,"index":2269},{"krate":0,"index":2272},{"krate":0,"index":2275},{"krate":0,"index":2278},{"krate":0,"index":2281},{"krate":0,"index":2284},{"krate":0,"index":2287},{"krate":0,"index":2288},{"krate":0,"index":2291},{"krate":0,"index":2294},{"krate":0,"index":2297},{"krate":0,"index":2300},{"krate":0,"index":3756},{"krate":0,"index":3760},{"krate":0,"index":3765},{"krate":0,"index":3768},{"krate":0,"index":2301},{"krate":0,"index":3771},{"krate":0,"index":3775},{"krate":0,"index":3778},{"krate":0,"index":3780},{"krate":0,"index":3782},{"krate":0,"index":3786},{"krate":0,"index":3788},{"krate":0,"index":3791},{"krate":0,"index":3794},{"krate":0,"index":3797},{"krate":0,"index":2308},{"krate":0,"index":2312},{"krate":0,"index":2317},{"krate":0,"index":2320},{"krate":0,"index":2323},{"krate":0,"index":2336},{"krate":0,"index":2347},{"krate":0,"index":2366},{"krate":0,"index":2370},{"krate":0,"index":2374},{"krate":0,"index":2377},{"krate":0,"index":2381},{"krate":0,"index":2385},{"krate":0,"index":2390},{"krate":0,"index":2394},{"krate":0,"index":2399},{"krate":0,"index":2404},{"krate":0,"index":2410},{"krate":0,"index":2416},{"krate":0,"index":2422},{"krate":0,"index":2428},{"krate":0,"index":2432},{"krate":0,"index":2436},{"krate":0,"index":2443},{"krate":0,"index":2446},{"krate":0,"index":2449},{"krate":0,"index":2452},{"krate":0,"index":2458},{"krate":0,"index":2460},{"krate":0,"index":2462},{"krate":0,"index":2468},{"krate":0,"index":2475},{"krate":0,"index":2481},{"krate":0,"index":2490},{"krate":0,"index":2495},{"krate":0,"index":2499},{"krate":0,"index":2504},{"krate":0,"index":2508},{"krate":0,"index":2513},{"krate":0,"index":2517},{"krate":0,"index":2522},{"krate":0,"index":2527},{"krate":0,"index":2531}],"decl_id":null,"docs":" An unordered set.","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/mod.rs","byte_start":258119,"byte_end":258131,"line_start":7,"line_end":7,"column_start":1,"column_end":13}},{"value":"/ An unordered set.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":326671,"byte_end":326692,"line_start":5,"line_end":5,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":326693,"byte_end":326696,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ An immutable hash set using [hash array mapped tries] [1].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":326697,"byte_end":326759,"line_start":7,"line_end":7,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":326760,"byte_end":326763,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Most operations on this set are O(log<sub>x</sub> n) for a","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":326764,"byte_end":326826,"line_start":9,"line_end":9,"column_start":1,"column_end":63}},{"value":"/ suitably high *x* that it should be nearly O(1) for most sets.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":326827,"byte_end":326893,"line_start":10,"line_end":10,"column_start":1,"column_end":67}},{"value":"/ Because of this, it's a great choice for a generic set as long as","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":326894,"byte_end":326963,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/ you don't mind that values will need to implement","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":326964,"byte_end":327017,"line_start":12,"line_end":12,"column_start":1,"column_end":54}},{"value":"/ [`Hash`][std::hash::Hash] and [`Eq`][std::cmp::Eq].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":327018,"byte_end":327073,"line_start":13,"line_end":13,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":327074,"byte_end":327077,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Values will have a predictable order based on the hasher","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":327078,"byte_end":327138,"line_start":15,"line_end":15,"column_start":1,"column_end":61}},{"value":"/ being used. Unless otherwise specified, this will be the standard","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":327139,"byte_end":327208,"line_start":16,"line_end":16,"column_start":1,"column_end":70}},{"value":"/ [`RandomState`][std::collections::hash_map::RandomState] hasher.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":327209,"byte_end":327277,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":327278,"byte_end":327281,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [1]: https://en.wikipedia.org/wiki/Hash_array_mapped_trie","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":327282,"byte_end":327343,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ [std::cmp::Eq]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":327344,"byte_end":327411,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/ [std::hash::Hash]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":327412,"byte_end":327485,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"/ [std::collections::hash_map::RandomState]: https://doc.rust-lang.org/std/collections/hash_map/struct.RandomState.html","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":327486,"byte_end":327607,"line_start":22,"line_end":22,"column_start":1,"column_end":122}}]},{"kind":"Struct","id":{"krate":0,"index":3756},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":328784,"byte_end":328795,"line_start":74,"line_end":74,"column_start":11,"column_end":22},"name":"HashSetPool","qualname":"::hash::set::HashSetPool","value":"","parent":null,"children":[],"decl_id":null,"docs":" A memory pool for the appropriate node type.\n","sig":null,"attributes":[{"value":"/ A memory pool for the appropriate node type.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/util.rs","byte_start":147885,"byte_end":147933,"line_start":110,"line_end":110,"column_start":9,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":2301},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":329766,"byte_end":329773,"line_start":94,"line_end":94,"column_start":12,"column_end":19},"name":"HashSet","qualname":"::hash::set::HashSet","value":"HashSet {  }","parent":null,"children":[{"krate":0,"index":2304},{"krate":0,"index":2305},{"krate":0,"index":2306},{"krate":0,"index":2307}],"decl_id":null,"docs":" An unordered set.","sig":null,"attributes":[{"value":"/ An unordered set.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":328818,"byte_end":328839,"line_start":76,"line_end":76,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":328840,"byte_end":328843,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ An immutable hash set using [hash array mapped tries] [1].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":328844,"byte_end":328906,"line_start":78,"line_end":78,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":328907,"byte_end":328910,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ Most operations on this set are O(log<sub>x</sub> n) for a","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":328911,"byte_end":328973,"line_start":80,"line_end":80,"column_start":1,"column_end":63}},{"value":"/ suitably high *x* that it should be nearly O(1) for most sets.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":328974,"byte_end":329040,"line_start":81,"line_end":81,"column_start":1,"column_end":67}},{"value":"/ Because of this, it's a great choice for a generic set as long as","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":329041,"byte_end":329110,"line_start":82,"line_end":82,"column_start":1,"column_end":70}},{"value":"/ you don't mind that values will need to implement","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":329111,"byte_end":329164,"line_start":83,"line_end":83,"column_start":1,"column_end":54}},{"value":"/ [`Hash`][std::hash::Hash] and [`Eq`][std::cmp::Eq].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":329165,"byte_end":329220,"line_start":84,"line_end":84,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":329221,"byte_end":329224,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ Values will have a predictable order based on the hasher","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":329225,"byte_end":329285,"line_start":86,"line_end":86,"column_start":1,"column_end":61}},{"value":"/ being used. Unless otherwise specified, this will be the standard","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":329286,"byte_end":329355,"line_start":87,"line_end":87,"column_start":1,"column_end":70}},{"value":"/ [`RandomState`][std::collections::hash_map::RandomState] hasher.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":329356,"byte_end":329424,"line_start":88,"line_end":88,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":329425,"byte_end":329428,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ [1]: https://en.wikipedia.org/wiki/Hash_array_mapped_trie","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":329429,"byte_end":329490,"line_start":90,"line_end":90,"column_start":1,"column_end":62}},{"value":"/ [std::cmp::Eq]: https://doc.rust-lang.org/std/cmp/trait.Eq.html","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":329491,"byte_end":329558,"line_start":91,"line_end":91,"column_start":1,"column_end":68}},{"value":"/ [std::hash::Hash]: https://doc.rust-lang.org/std/hash/trait.Hash.html","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":329559,"byte_end":329632,"line_start":92,"line_end":92,"column_start":1,"column_end":74}},{"value":"/ [std::collections::hash_map::RandomState]: https://doc.rust-lang.org/std/collections/hash_map/struct.RandomState.html","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":329633,"byte_end":329754,"line_start":93,"line_end":93,"column_start":1,"column_end":122}}]},{"kind":"Method","id":{"krate":0,"index":2319},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":330523,"byte_end":330526,"line_start":131,"line_end":131,"column_start":12,"column_end":15},"name":"new","qualname":"<HashSet<A, RandomState>>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct an empty set.\n","sig":null,"attributes":[{"value":"/ Construct an empty set.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":330468,"byte_end":330495,"line_start":129,"line_end":129,"column_start":5,"column_end":32}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":330500,"byte_end":330511,"line_start":130,"line_end":130,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2322},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":331294,"byte_end":331298,"line_start":165,"line_end":165,"column_start":12,"column_end":16},"name":"unit","qualname":"<HashSet<A, RandomState>>::unit","value":"fn unit(A) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a set with a single value.","sig":null,"attributes":[{"value":"/ Construct a set with a single value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":330972,"byte_end":331012,"line_start":152,"line_end":152,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":331017,"byte_end":331020,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":331025,"byte_end":331039,"line_start":154,"line_end":154,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":331044,"byte_end":331047,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":331052,"byte_end":331059,"line_start":156,"line_end":156,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":331064,"byte_end":331099,"line_start":157,"line_end":157,"column_start":5,"column_end":40}},{"value":"/ # use im::hashset::HashSet;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":331104,"byte_end":331135,"line_start":158,"line_end":158,"column_start":5,"column_end":36}},{"value":"/ # use std::sync::Arc;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":331140,"byte_end":331165,"line_start":159,"line_end":159,"column_start":5,"column_end":30}},{"value":"/ let set = HashSet::unit(123);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":331170,"byte_end":331203,"line_start":160,"line_end":160,"column_start":5,"column_end":38}},{"value":"/ assert!(set.contains(&123));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":331208,"byte_end":331240,"line_start":161,"line_end":161,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":331245,"byte_end":331252,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":331257,"byte_end":331266,"line_start":163,"line_end":163,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":331271,"byte_end":331282,"line_start":164,"line_end":164,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2326},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":331763,"byte_end":331771,"line_start":189,"line_end":189,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<HashSet<A, S>>::is_empty","value":"fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test whether a set is empty.","sig":null,"attributes":[{"value":"/ Test whether a set is empty.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":331388,"byte_end":331420,"line_start":171,"line_end":171,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":331425,"byte_end":331428,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ Time: O(1)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":331433,"byte_end":331447,"line_start":173,"line_end":173,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":331452,"byte_end":331455,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":331460,"byte_end":331474,"line_start":175,"line_end":175,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":331479,"byte_end":331482,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":331487,"byte_end":331494,"line_start":177,"line_end":177,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":331499,"byte_end":331534,"line_start":178,"line_end":178,"column_start":5,"column_end":40}},{"value":"/ # use im::hashset::HashSet;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":331539,"byte_end":331570,"line_start":179,"line_end":179,"column_start":5,"column_end":36}},{"value":"/ assert!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":331575,"byte_end":331587,"line_start":180,"line_end":180,"column_start":5,"column_end":17}},{"value":"/   !hashset![1, 2, 3].is_empty()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":331592,"byte_end":331627,"line_start":181,"line_end":181,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":331632,"byte_end":331638,"line_start":182,"line_end":182,"column_start":5,"column_end":11}},{"value":"/ assert!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":331643,"byte_end":331655,"line_start":183,"line_end":183,"column_start":5,"column_end":17}},{"value":"/   HashSet::<i32>::new().is_empty()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":331660,"byte_end":331698,"line_start":184,"line_end":184,"column_start":5,"column_end":43}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":331703,"byte_end":331709,"line_start":185,"line_end":185,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":331714,"byte_end":331721,"line_start":186,"line_end":186,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":331726,"byte_end":331735,"line_start":187,"line_end":187,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":331740,"byte_end":331751,"line_start":188,"line_end":188,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2327},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":332102,"byte_end":332105,"line_start":206,"line_end":206,"column_start":12,"column_end":15},"name":"len","qualname":"<HashSet<A, S>>::len","value":"fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the size of a set.","sig":null,"attributes":[{"value":"/ Get the size of a set.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":331824,"byte_end":331850,"line_start":193,"line_end":193,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":331855,"byte_end":331858,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ Time: O(1)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":331863,"byte_end":331877,"line_start":195,"line_end":195,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":331882,"byte_end":331885,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":331890,"byte_end":331904,"line_start":197,"line_end":197,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":331909,"byte_end":331912,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":331917,"byte_end":331924,"line_start":199,"line_end":199,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":331929,"byte_end":331964,"line_start":200,"line_end":200,"column_start":5,"column_end":40}},{"value":"/ # use im::hashset::HashSet;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":331969,"byte_end":332000,"line_start":201,"line_end":201,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(3, hashset![1, 2, 3].len());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":332005,"byte_end":332048,"line_start":202,"line_end":202,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":332053,"byte_end":332060,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":332065,"byte_end":332074,"line_start":204,"line_end":204,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":332079,"byte_end":332090,"line_start":205,"line_end":205,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2328},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":332529,"byte_end":332535,"line_start":219,"line_end":219,"column_start":12,"column_end":18},"name":"ptr_eq","qualname":"<HashSet<A, S>>::ptr_eq","value":"fn ptr_eq(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test whether two sets refer to the same content in memory.","sig":null,"attributes":[{"value":"/ Test whether two sets refer to the same content in memory.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":332153,"byte_end":332215,"line_start":210,"line_end":210,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":332220,"byte_end":332223,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ This is true if the two sides are references to the same set,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":332228,"byte_end":332293,"line_start":212,"line_end":212,"column_start":5,"column_end":70}},{"value":"/ or if the two sets refer to the same root node.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":332298,"byte_end":332349,"line_start":213,"line_end":213,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":332354,"byte_end":332357,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ This would return true if you're comparing a set to itself, or","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":332362,"byte_end":332428,"line_start":215,"line_end":215,"column_start":5,"column_end":71}},{"value":"/ if you're comparing a set to a fresh clone of itself.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":332433,"byte_end":332490,"line_start":216,"line_end":216,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":332495,"byte_end":332498,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ Time: O(1)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":332503,"byte_end":332517,"line_start":218,"line_end":218,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":2329},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":333052,"byte_end":333063,"line_start":235,"line_end":235,"column_start":12,"column_end":23},"name":"with_hasher","qualname":"<HashSet<A, S>>::with_hasher","value":"fn with_hasher<RS>(RS) -> Self where Ref<S>: From<RS>","parent":null,"children":[],"decl_id":null,"docs":" Construct an empty hash set using the provided hasher.\n","sig":null,"attributes":[{"value":"/ Construct an empty hash set using the provided hasher.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":332952,"byte_end":333010,"line_start":232,"line_end":232,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":333015,"byte_end":333024,"line_start":233,"line_end":233,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":333029,"byte_end":333040,"line_start":234,"line_end":234,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2331},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":333981,"byte_end":333987,"line_start":270,"line_end":270,"column_start":12,"column_end":18},"name":"hasher","qualname":"<HashSet<A, S>>::hasher","value":"fn hasher(&Self) -> &Ref<S>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the set's [`BuildHasher`][BuildHasher].","sig":null,"attributes":[{"value":"/ Get a reference to the set's [`BuildHasher`][BuildHasher].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":333802,"byte_end":333864,"line_start":266,"line_end":266,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":333869,"byte_end":333872,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ [BuildHasher]: https://doc.rust-lang.org/std/hash/trait.BuildHasher.html","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":333877,"byte_end":333953,"line_start":268,"line_end":268,"column_start":5,"column_end":81}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":333958,"byte_end":333969,"line_start":269,"line_end":269,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2332},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":334160,"byte_end":334168,"line_start":277,"line_end":277,"column_start":12,"column_end":20},"name":"new_from","qualname":"<HashSet<A, S>>::new_from","value":"fn new_from<A1>(&Self) -> HashSet<A1, S> where A1: Hash + Eq + Clone","parent":null,"children":[],"decl_id":null,"docs":" Construct an empty hash set using the same hasher as the current hash set.\n","sig":null,"attributes":[{"value":"/ Construct an empty hash set using the same hasher as the current hash set.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":334040,"byte_end":334118,"line_start":274,"line_end":274,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":334123,"byte_end":334132,"line_start":275,"line_end":275,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":334137,"byte_end":334148,"line_start":276,"line_end":276,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2334},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":334889,"byte_end":334894,"line_start":307,"line_end":307,"column_start":12,"column_end":17},"name":"clear","qualname":"<HashSet<A, S>>::clear","value":"fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Discard all elements from the set.","sig":null,"attributes":[{"value":"/ Discard all elements from the set.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":334471,"byte_end":334509,"line_start":291,"line_end":291,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":334514,"byte_end":334517,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ This leaves you with an empty set, and all elements that","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":334522,"byte_end":334582,"line_start":293,"line_end":293,"column_start":5,"column_end":65}},{"value":"/ were previously inside it are dropped.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":334587,"byte_end":334629,"line_start":294,"line_end":294,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":334634,"byte_end":334637,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ Time: O(n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":334642,"byte_end":334656,"line_start":296,"line_end":296,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":334661,"byte_end":334664,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":334669,"byte_end":334683,"line_start":298,"line_end":298,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":334688,"byte_end":334691,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":334696,"byte_end":334703,"line_start":300,"line_end":300,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":334708,"byte_end":334743,"line_start":301,"line_end":301,"column_start":5,"column_end":40}},{"value":"/ # use im::HashSet;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":334748,"byte_end":334770,"line_start":302,"line_end":302,"column_start":5,"column_end":27}},{"value":"/ let mut set = hashset![1, 2, 3];","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":334775,"byte_end":334811,"line_start":303,"line_end":303,"column_start":5,"column_end":41}},{"value":"/ set.clear();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":334816,"byte_end":334832,"line_start":304,"line_end":304,"column_start":5,"column_end":21}},{"value":"/ assert!(set.is_empty());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":334837,"byte_end":334865,"line_start":305,"line_end":305,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":334870,"byte_end":334877,"line_start":306,"line_end":306,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2335},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":335423,"byte_end":335427,"line_start":322,"line_end":322,"column_start":12,"column_end":16},"name":"iter","qualname":"<HashSet<A, S>>::iter","value":"fn iter(&Self) -> Iter<, A>","parent":null,"children":[],"decl_id":null,"docs":" Get an iterator over the values in a hash set.","sig":null,"attributes":[{"value":"/ Get an iterator over the values in a hash set.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":335042,"byte_end":335092,"line_start":314,"line_end":314,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":335097,"byte_end":335100,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ Please note that the order is consistent between sets using","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":335105,"byte_end":335168,"line_start":316,"line_end":316,"column_start":5,"column_end":68}},{"value":"/ the same hasher, but no other ordering guarantee is offered.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":335173,"byte_end":335237,"line_start":317,"line_end":317,"column_start":5,"column_end":69}},{"value":"/ Items will not come out in insertion order or sort order.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":335242,"byte_end":335303,"line_start":318,"line_end":318,"column_start":5,"column_end":66}},{"value":"/ They will, however, come out in the same order every time for","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":335308,"byte_end":335373,"line_start":319,"line_end":319,"column_start":5,"column_end":70}},{"value":"/ the same set.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":335378,"byte_end":335395,"line_start":320,"line_end":320,"column_start":5,"column_end":22}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":335400,"byte_end":335411,"line_start":321,"line_end":321,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2340},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":336195,"byte_end":336203,"line_start":357,"line_end":357,"column_start":12,"column_end":20},"name":"contains","qualname":"<HashSet<A, S>>::contains","value":"fn contains<BA>(&Self, &BA) -> bool where BA: Hash + Eq + ?Sized,\nA: Borrow<BA>","parent":null,"children":[],"decl_id":null,"docs":" Test if a value is part of a set.","sig":null,"attributes":[{"value":"/ Test if a value is part of a set.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":336099,"byte_end":336136,"line_start":353,"line_end":353,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":336141,"byte_end":336144,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":336149,"byte_end":336167,"line_start":355,"line_end":355,"column_start":5,"column_end":23}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":336172,"byte_end":336183,"line_start":356,"line_end":356,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2342},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":336564,"byte_end":336573,"line_start":370,"line_end":370,"column_start":12,"column_end":21},"name":"is_subset","qualname":"<HashSet<A, S>>::is_subset","value":"fn is_subset<RS>(&Self, RS) -> bool where RS: Borrow<Self>","parent":null,"children":[],"decl_id":null,"docs":" Test whether a set is a subset of another set, meaning that\n all values in our set must also be in the other set.","sig":null,"attributes":[{"value":"/ Test whether a set is a subset of another set, meaning that","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":336379,"byte_end":336442,"line_start":365,"line_end":365,"column_start":5,"column_end":68}},{"value":"/ all values in our set must also be in the other set.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":336447,"byte_end":336503,"line_start":366,"line_end":366,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":336508,"byte_end":336511,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":336516,"byte_end":336536,"line_start":368,"line_end":368,"column_start":5,"column_end":25}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":336541,"byte_end":336552,"line_start":369,"line_end":369,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2345},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":336989,"byte_end":337005,"line_start":384,"line_end":384,"column_start":12,"column_end":28},"name":"is_proper_subset","qualname":"<HashSet<A, S>>::is_proper_subset","value":"fn is_proper_subset<RS>(&Self, RS) -> bool where RS: Borrow<Self>","parent":null,"children":[],"decl_id":null,"docs":" Test whether a set is a proper subset of another set, meaning\n that all values in our set must also be in the other set. A\n proper subset must also be smaller than the other set.","sig":null,"attributes":[{"value":"/ Test whether a set is a proper subset of another set, meaning","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":336732,"byte_end":336797,"line_start":378,"line_end":378,"column_start":5,"column_end":70}},{"value":"/ that all values in our set must also be in the other set. A","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":336802,"byte_end":336865,"line_start":379,"line_end":379,"column_start":5,"column_end":68}},{"value":"/ proper subset must also be smaller than the other set.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":336870,"byte_end":336928,"line_start":380,"line_end":380,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":336933,"byte_end":336936,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":336941,"byte_end":336961,"line_start":382,"line_end":382,"column_start":5,"column_end":25}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":336966,"byte_end":336977,"line_start":383,"line_end":383,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2350},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":337325,"byte_end":337331,"line_start":401,"line_end":401,"column_start":12,"column_end":18},"name":"insert","qualname":"<HashSet<A, S>>::insert","value":"fn insert(&mut Self, A) -> Option<A>","parent":null,"children":[],"decl_id":null,"docs":" Insert a value into a set.","sig":null,"attributes":[{"value":"/ Insert a value into a set.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":337238,"byte_end":337268,"line_start":397,"line_end":397,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":337273,"byte_end":337276,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":337281,"byte_end":337299,"line_start":399,"line_end":399,"column_start":5,"column_end":23}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":337304,"byte_end":337313,"line_start":400,"line_end":400,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2351},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":337792,"byte_end":337798,"line_start":416,"line_end":416,"column_start":12,"column_end":18},"name":"remove","qualname":"<HashSet<A, S>>::remove","value":"fn remove<BA>(&mut Self, &BA) -> Option<A> where BA: Hash + Eq + ?Sized,\nA: Borrow<BA>","parent":null,"children":[],"decl_id":null,"docs":" Remove a value from a set if it exists.","sig":null,"attributes":[{"value":"/ Remove a value from a set if it exists.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":337706,"byte_end":337749,"line_start":413,"line_end":413,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":337754,"byte_end":337757,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":337762,"byte_end":337780,"line_start":415,"line_end":415,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":2354},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":338587,"byte_end":338593,"line_start":447,"line_end":447,"column_start":12,"column_end":18},"name":"update","qualname":"<HashSet<A, S>>::update","value":"fn update(&Self, A) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new set from the current set with the given value\n added.","sig":null,"attributes":[{"value":"/ Construct a new set from the current set with the given value","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":338163,"byte_end":338228,"line_start":429,"line_end":429,"column_start":5,"column_end":70}},{"value":"/ added.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":338233,"byte_end":338243,"line_start":430,"line_end":430,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":338248,"byte_end":338251,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":338256,"byte_end":338274,"line_start":432,"line_end":432,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":338279,"byte_end":338282,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":338287,"byte_end":338301,"line_start":434,"line_end":434,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":338306,"byte_end":338309,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":338314,"byte_end":338321,"line_start":436,"line_end":436,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":338326,"byte_end":338361,"line_start":437,"line_end":437,"column_start":5,"column_end":40}},{"value":"/ # use im::hashset::HashSet;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":338366,"byte_end":338397,"line_start":438,"line_end":438,"column_start":5,"column_end":36}},{"value":"/ # use std::sync::Arc;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":338402,"byte_end":338427,"line_start":439,"line_end":439,"column_start":5,"column_end":30}},{"value":"/ let set = hashset![123];","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":338432,"byte_end":338460,"line_start":440,"line_end":440,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":338465,"byte_end":338480,"line_start":441,"line_end":441,"column_start":5,"column_end":20}},{"value":"/   set.update(456),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":338485,"byte_end":338507,"line_start":442,"line_end":442,"column_start":5,"column_end":27}},{"value":"/   hashset![123, 456]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":338512,"byte_end":338536,"line_start":443,"line_end":443,"column_start":5,"column_end":29}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":338541,"byte_end":338547,"line_start":444,"line_end":444,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":338552,"byte_end":338559,"line_start":445,"line_end":445,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":338564,"byte_end":338575,"line_start":446,"line_end":446,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2355},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":338838,"byte_end":338845,"line_start":458,"line_end":458,"column_start":12,"column_end":19},"name":"without","qualname":"<HashSet<A, S>>::without","value":"fn without<BA>(&Self, &BA) -> Self where BA: Hash + Eq + ?Sized, A: Borrow<BA>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new set with the given value removed if it's in\n the set.","sig":null,"attributes":[{"value":"/ Construct a new set with the given value removed if it's in","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":338699,"byte_end":338762,"line_start":453,"line_end":453,"column_start":5,"column_end":68}},{"value":"/ the set.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":338767,"byte_end":338779,"line_start":454,"line_end":454,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":338784,"byte_end":338787,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":338792,"byte_end":338810,"line_start":456,"line_end":456,"column_start":5,"column_end":23}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":338815,"byte_end":338826,"line_start":457,"line_end":457,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2357},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":339642,"byte_end":339648,"line_start":487,"line_end":487,"column_start":12,"column_end":18},"name":"retain","qualname":"<HashSet<A, S>>::retain","value":"fn retain<F>(&mut Self, F) where F: for<'_> FnMut(&'_ A) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Filter out values from a set which don't satisfy a predicate.","sig":null,"attributes":[{"value":"/ Filter out values from a set which don't satisfy a predicate.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":339026,"byte_end":339091,"line_start":468,"line_end":468,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":339096,"byte_end":339099,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ This is slightly more efficient than filtering using an","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":339104,"byte_end":339163,"line_start":470,"line_end":470,"column_start":5,"column_end":64}},{"value":"/ iterator, in that it doesn't need to rehash the retained","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":339168,"byte_end":339228,"line_start":471,"line_end":471,"column_start":5,"column_end":65}},{"value":"/ values, but it still needs to reconstruct the entire tree","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":339233,"byte_end":339294,"line_start":472,"line_end":472,"column_start":5,"column_end":66}},{"value":"/ structure of the set.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":339299,"byte_end":339324,"line_start":473,"line_end":473,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":339329,"byte_end":339332,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":339337,"byte_end":339357,"line_start":475,"line_end":475,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":339362,"byte_end":339365,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":339370,"byte_end":339384,"line_start":477,"line_end":477,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":339389,"byte_end":339392,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":339397,"byte_end":339404,"line_start":479,"line_end":479,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":339409,"byte_end":339444,"line_start":480,"line_end":480,"column_start":5,"column_end":40}},{"value":"/ # use im::HashSet;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":339449,"byte_end":339471,"line_start":481,"line_end":481,"column_start":5,"column_end":27}},{"value":"/ let mut set = hashset![1, 2, 3];","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":339476,"byte_end":339512,"line_start":482,"line_end":482,"column_start":5,"column_end":41}},{"value":"/ set.retain(|v| *v > 1);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":339517,"byte_end":339544,"line_start":483,"line_end":483,"column_start":5,"column_end":32}},{"value":"/ let expected = hashset![2, 3];","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":339549,"byte_end":339583,"line_start":484,"line_end":484,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(expected, set);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":339588,"byte_end":339618,"line_start":485,"line_end":485,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":339623,"byte_end":339630,"line_start":486,"line_end":486,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2359},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":340437,"byte_end":340442,"line_start":515,"line_end":515,"column_start":12,"column_end":17},"name":"union","qualname":"<HashSet<A, S>>::union","value":"fn union(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct the union of two sets.","sig":null,"attributes":[{"value":"/ Construct the union of two sets.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":340045,"byte_end":340081,"line_start":500,"line_end":500,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":340086,"byte_end":340089,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":340094,"byte_end":340114,"line_start":502,"line_end":502,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":340119,"byte_end":340122,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":340127,"byte_end":340141,"line_start":504,"line_end":504,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":340146,"byte_end":340149,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":340154,"byte_end":340161,"line_start":506,"line_end":506,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":340166,"byte_end":340201,"line_start":507,"line_end":507,"column_start":5,"column_end":40}},{"value":"/ # use im::hashset::HashSet;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":340206,"byte_end":340237,"line_start":508,"line_end":508,"column_start":5,"column_end":36}},{"value":"/ let set1 = hashset!{1, 2};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":340242,"byte_end":340272,"line_start":509,"line_end":509,"column_start":5,"column_end":35}},{"value":"/ let set2 = hashset!{2, 3};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":340277,"byte_end":340307,"line_start":510,"line_end":510,"column_start":5,"column_end":35}},{"value":"/ let expected = hashset!{1, 2, 3};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":340312,"byte_end":340349,"line_start":511,"line_end":511,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(expected, set1.union(set2));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":340354,"byte_end":340397,"line_start":512,"line_end":512,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":340402,"byte_end":340409,"line_start":513,"line_end":513,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":340414,"byte_end":340425,"line_start":514,"line_end":514,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2360},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":340837,"byte_end":340843,"line_start":531,"line_end":531,"column_start":12,"column_end":18},"name":"unions","qualname":"<HashSet<A, S>>::unions","value":"fn unions<I>(I) -> Self where I: IntoIterator<Item = Self>, S: Default","parent":null,"children":[],"decl_id":null,"docs":" Construct the union of multiple sets.","sig":null,"attributes":[{"value":"/ Construct the union of multiple sets.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":340735,"byte_end":340776,"line_start":527,"line_end":527,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":340781,"byte_end":340784,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":340789,"byte_end":340809,"line_start":529,"line_end":529,"column_start":5,"column_end":25}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":340814,"byte_end":340825,"line_start":530,"line_end":530,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2362},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":341590,"byte_end":341600,"line_start":559,"line_end":559,"column_start":12,"column_end":22},"name":"difference","qualname":"<HashSet<A, S>>::difference","value":"fn difference(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct the symmetric difference between two sets.","sig":null,"attributes":[{"value":"/ Construct the symmetric difference between two sets.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":341003,"byte_end":341059,"line_start":539,"line_end":539,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":341064,"byte_end":341067,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ This is an alias for the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":341072,"byte_end":341100,"line_start":541,"line_end":541,"column_start":5,"column_end":33}},{"value":"/ [`symmetric_difference`][symmetric_difference] method.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":341105,"byte_end":341163,"line_start":542,"line_end":542,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":341168,"byte_end":341171,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":341176,"byte_end":341196,"line_start":544,"line_end":544,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":341201,"byte_end":341204,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":341209,"byte_end":341223,"line_start":546,"line_end":546,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":341228,"byte_end":341231,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":341236,"byte_end":341243,"line_start":548,"line_end":548,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":341248,"byte_end":341283,"line_start":549,"line_end":549,"column_start":5,"column_end":40}},{"value":"/ # use im::hashset::HashSet;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":341288,"byte_end":341319,"line_start":550,"line_end":550,"column_start":5,"column_end":36}},{"value":"/ let set1 = hashset!{1, 2};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":341324,"byte_end":341354,"line_start":551,"line_end":551,"column_start":5,"column_end":35}},{"value":"/ let set2 = hashset!{2, 3};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":341359,"byte_end":341389,"line_start":552,"line_end":552,"column_start":5,"column_end":35}},{"value":"/ let expected = hashset!{1, 3};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":341394,"byte_end":341428,"line_start":553,"line_end":553,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(expected, set1.difference(set2));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":341433,"byte_end":341481,"line_start":554,"line_end":554,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":341486,"byte_end":341493,"line_start":555,"line_end":555,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":341498,"byte_end":341501,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ [symmetric_difference]: #method.symmetric_difference","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":341506,"byte_end":341562,"line_start":557,"line_end":557,"column_start":5,"column_end":61}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":341567,"byte_end":341578,"line_start":558,"line_end":558,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2363},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":342106,"byte_end":342126,"line_start":578,"line_end":578,"column_start":12,"column_end":32},"name":"symmetric_difference","qualname":"<HashSet<A, S>>::symmetric_difference","value":"fn symmetric_difference(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct the symmetric difference between two sets.","sig":null,"attributes":[{"value":"/ Construct the symmetric difference between two sets.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":341682,"byte_end":341738,"line_start":563,"line_end":563,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":341743,"byte_end":341746,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":341751,"byte_end":341771,"line_start":565,"line_end":565,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":341776,"byte_end":341779,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":341784,"byte_end":341798,"line_start":567,"line_end":567,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":341803,"byte_end":341806,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":341811,"byte_end":341818,"line_start":569,"line_end":569,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":341823,"byte_end":341858,"line_start":570,"line_end":570,"column_start":5,"column_end":40}},{"value":"/ # use im::hashset::HashSet;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":341863,"byte_end":341894,"line_start":571,"line_end":571,"column_start":5,"column_end":36}},{"value":"/ let set1 = hashset!{1, 2};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":341899,"byte_end":341929,"line_start":572,"line_end":572,"column_start":5,"column_end":35}},{"value":"/ let set2 = hashset!{2, 3};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":341934,"byte_end":341964,"line_start":573,"line_end":573,"column_start":5,"column_end":35}},{"value":"/ let expected = hashset!{1, 3};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":341969,"byte_end":342003,"line_start":574,"line_end":574,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(expected, set1.symmetric_difference(set2));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":342008,"byte_end":342066,"line_start":575,"line_end":575,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":342071,"byte_end":342078,"line_start":576,"line_end":576,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":342083,"byte_end":342094,"line_start":577,"line_end":577,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2364},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":342845,"byte_end":342864,"line_start":603,"line_end":603,"column_start":12,"column_end":31},"name":"relative_complement","qualname":"<HashSet<A, S>>::relative_complement","value":"fn relative_complement(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct the relative complement between two sets, that is the set\n of values in `self` that do not occur in `other`.","sig":null,"attributes":[{"value":"/ Construct the relative complement between two sets, that is the set","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":342320,"byte_end":342391,"line_start":587,"line_end":587,"column_start":5,"column_end":76}},{"value":"/ of values in `self` that do not occur in `other`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":342396,"byte_end":342449,"line_start":588,"line_end":588,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":342454,"byte_end":342457,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ Time: O(m log n) where m is the size of the other set","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":342462,"byte_end":342519,"line_start":590,"line_end":590,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":342524,"byte_end":342527,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":342532,"byte_end":342546,"line_start":592,"line_end":592,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":342551,"byte_end":342554,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":342559,"byte_end":342566,"line_start":594,"line_end":594,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":342571,"byte_end":342606,"line_start":595,"line_end":595,"column_start":5,"column_end":40}},{"value":"/ # use im::ordset::OrdSet;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":342611,"byte_end":342640,"line_start":596,"line_end":596,"column_start":5,"column_end":34}},{"value":"/ let set1 = ordset!{1, 2};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":342645,"byte_end":342674,"line_start":597,"line_end":597,"column_start":5,"column_end":34}},{"value":"/ let set2 = ordset!{2, 3};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":342679,"byte_end":342708,"line_start":598,"line_end":598,"column_start":5,"column_end":34}},{"value":"/ let expected = ordset!{1};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":342713,"byte_end":342743,"line_start":599,"line_end":599,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(expected, set1.relative_complement(set2));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":342748,"byte_end":342805,"line_start":600,"line_end":600,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":342810,"byte_end":342817,"line_start":601,"line_end":601,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":342822,"byte_end":342833,"line_start":602,"line_end":602,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2365},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":343402,"byte_end":343414,"line_start":625,"line_end":625,"column_start":12,"column_end":24},"name":"intersection","qualname":"<HashSet<A, S>>::intersection","value":"fn intersection(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct the intersection of two sets.","sig":null,"attributes":[{"value":"/ Construct the intersection of two sets.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":343002,"byte_end":343045,"line_start":610,"line_end":610,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":343050,"byte_end":343053,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":343058,"byte_end":343078,"line_start":612,"line_end":612,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":343083,"byte_end":343086,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":343091,"byte_end":343105,"line_start":614,"line_end":614,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":343110,"byte_end":343113,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":343118,"byte_end":343125,"line_start":616,"line_end":616,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":343130,"byte_end":343165,"line_start":617,"line_end":617,"column_start":5,"column_end":40}},{"value":"/ # use im::hashset::HashSet;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":343170,"byte_end":343201,"line_start":618,"line_end":618,"column_start":5,"column_end":36}},{"value":"/ let set1 = hashset!{1, 2};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":343206,"byte_end":343236,"line_start":619,"line_end":619,"column_start":5,"column_end":35}},{"value":"/ let set2 = hashset!{2, 3};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":343241,"byte_end":343271,"line_start":620,"line_end":620,"column_start":5,"column_end":35}},{"value":"/ let expected = hashset!{2};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":343276,"byte_end":343307,"line_start":621,"line_end":621,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(expected, set1.intersection(set2));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":343312,"byte_end":343362,"line_start":622,"line_end":622,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":343367,"byte_end":343374,"line_start":623,"line_end":623,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":343379,"byte_end":343390,"line_start":624,"line_end":624,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2369},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":343773,"byte_end":343778,"line_start":646,"line_end":646,"column_start":8,"column_end":13},"name":"clone","qualname":"<HashSet<A, S> as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":" Clone a set.","sig":null,"attributes":[{"value":"/ Clone a set.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":343708,"byte_end":343724,"line_start":642,"line_end":642,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":343729,"byte_end":343732,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ Time: O(1)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":343737,"byte_end":343751,"line_start":644,"line_end":644,"column_start":5,"column_end":19}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":343756,"byte_end":343765,"line_start":645,"line_end":645,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2373},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":344079,"byte_end":344081,"line_start":661,"line_end":661,"column_start":8,"column_end":10},"name":"eq","qualname":"<HashSet<A, S> as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &Self) -> bool","parent":{"krate":2,"index":2831},"children":[],"decl_id":{"krate":2,"index":2833},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2380},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":344365,"byte_end":344376,"line_start":678,"line_end":678,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<HashSet<A, S> as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp(&Self, &Self) -> Option<Ordering>","parent":{"krate":2,"index":2877},"children":[],"decl_id":{"krate":2,"index":2879},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2384},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":344707,"byte_end":344710,"line_start":691,"line_end":691,"column_start":8,"column_end":11},"name":"cmp","qualname":"<HashSet<A, S> as std::cmp::Ord>::cmp","value":"fn cmp(&Self, &Self) -> Ordering","parent":{"krate":2,"index":2867},"children":[],"decl_id":{"krate":2,"index":2868},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2388},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":345004,"byte_end":345008,"line_start":704,"line_end":704,"column_start":8,"column_end":12},"name":"hash","qualname":"<HashSet<A, S> as std::hash::Hash>::hash","value":"fn hash<H>(&Self, &mut H) where H: Hasher","parent":{"krate":2,"index":10324},"children":[],"decl_id":{"krate":2,"index":10325},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2393},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":345228,"byte_end":345235,"line_start":718,"line_end":718,"column_start":8,"column_end":15},"name":"default","qualname":"<HashSet<A, S> as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2398},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":345600,"byte_end":345603,"line_start":737,"line_end":737,"column_start":8,"column_end":11},"name":"add","qualname":"<HashSet<A, S> as std::ops::Add>::add","value":"fn add(Self, Self) -> Self::Output","parent":{"krate":2,"index":3247},"children":[],"decl_id":{"krate":2,"index":3250},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2403},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":345804,"byte_end":345807,"line_start":749,"line_end":749,"column_start":8,"column_end":11},"name":"mul","qualname":"<HashSet<A, S> as std::ops::Mul>::mul","value":"fn mul(Self, Self) -> Self::Output","parent":{"krate":2,"index":3257},"children":[],"decl_id":{"krate":2,"index":3260},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2409},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":346023,"byte_end":346026,"line_start":761,"line_end":761,"column_start":8,"column_end":11},"name":"add","qualname":"<&'a HashSet<A, S> as std::ops::Add>::add","value":"fn add(Self, Self) -> Self::Output","parent":{"krate":2,"index":3247},"children":[],"decl_id":{"krate":2,"index":3250},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2415},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":346251,"byte_end":346254,"line_start":773,"line_end":773,"column_start":8,"column_end":11},"name":"mul","qualname":"<&'a HashSet<A, S> as std::ops::Mul>::mul","value":"fn mul(Self, Self) -> Self::Output","parent":{"krate":2,"index":3257},"children":[],"decl_id":{"krate":2,"index":3260},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2419},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":346454,"byte_end":346457,"line_start":783,"line_end":783,"column_start":8,"column_end":11},"name":"sum","qualname":"<HashSet<A, S> as std::iter::Sum>::sum","value":"fn sum<I>(I) -> Self where I: Iterator<Item = Self>","parent":{"krate":2,"index":8238},"children":[],"decl_id":{"krate":2,"index":8240},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2426},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":346695,"byte_end":346701,"line_start":796,"line_end":796,"column_start":8,"column_end":14},"name":"extend","qualname":"<HashSet<A, S> as std::iter::Extend>::extend","value":"fn extend<I>(&mut Self, I) where I: IntoIterator<Item = R>","parent":{"krate":2,"index":8288},"children":[],"decl_id":{"krate":2,"index":8290},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2431},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":346995,"byte_end":346998,"line_start":812,"line_end":812,"column_start":8,"column_end":11},"name":"fmt","qualname":"<HashSet<A, S> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut Formatter) -> Result<(), Error>","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2432},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":347678,"byte_end":347682,"line_start":842,"line_end":842,"column_start":12,"column_end":16},"name":"Iter","qualname":"::hash::set::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":2435}],"decl_id":null,"docs":" An iterator over the elements of a set.\n","sig":null,"attributes":[{"value":"/ An iterator over the elements of a set.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":347623,"byte_end":347666,"line_start":841,"line_end":841,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2440},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":347814,"byte_end":347818,"line_start":852,"line_end":852,"column_start":8,"column_end":12},"name":"next","qualname":"<Iter as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8476},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2442},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":347910,"byte_end":347919,"line_start":856,"line_end":856,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Iter as std::iter::Iterator>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8477},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2449},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":348152,"byte_end":348165,"line_start":866,"line_end":866,"column_start":12,"column_end":25},"name":"ConsumingIter","qualname":"::hash::set::ConsumingIter","value":"ConsumingIter {  }","parent":null,"children":[{"krate":0,"index":2451}],"decl_id":null,"docs":" A consuming iterator over the elements of a set.\n","sig":null,"attributes":[{"value":"/ A consuming iterator over the elements of a set.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":348088,"byte_end":348140,"line_start":865,"line_end":865,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2455},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":348334,"byte_end":348338,"line_start":879,"line_end":879,"column_start":8,"column_end":12},"name":"next","qualname":"<ConsumingIter<A> as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8476},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2457},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":348429,"byte_end":348438,"line_start":883,"line_end":883,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<ConsumingIter<A> as std::iter::Iterator>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8477},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2466},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":348820,"byte_end":348829,"line_start":899,"line_end":899,"column_start":8,"column_end":17},"name":"from_iter","qualname":"<HashSet<A, S> as std::iter::FromIterator>::from_iter","value":"fn from_iter<T>(T) -> Self where T: IntoIterator<Item = RA>","parent":{"krate":2,"index":8275},"children":[],"decl_id":{"krate":2,"index":8277},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2474},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":349197,"byte_end":349206,"line_start":919,"line_end":919,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<&'a HashSet<A, S> as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":2,"index":8279},"children":[],"decl_id":{"krate":2,"index":8282},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2480},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":349432,"byte_end":349441,"line_start":932,"line_end":932,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<HashSet<A, S> as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":2,"index":8279},"children":[],"decl_id":{"krate":2,"index":8282},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2488},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":349827,"byte_end":349831,"line_start":948,"line_end":948,"column_start":8,"column_end":12},"name":"from","qualname":"<HashSet<OA, SB> as std::convert::From>::from","value":"fn from(&HashSet<&A, SA>) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2494},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":350046,"byte_end":350050,"line_start":958,"line_end":958,"column_start":8,"column_end":12},"name":"from","qualname":"<HashSet<A, S> as std::convert::From>::from","value":"fn from(&'a [A]) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2498},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":350239,"byte_end":350243,"line_start":968,"line_end":968,"column_start":8,"column_end":12},"name":"from","qualname":"<HashSet<A, S> as std::convert::From>::from","value":"fn from(Vec<A>) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2503},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":350431,"byte_end":350435,"line_start":978,"line_end":978,"column_start":8,"column_end":12},"name":"from","qualname":"<HashSet<A, S> as std::convert::From>::from","value":"fn from(&Vec<A>) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2507},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":350623,"byte_end":350627,"line_start":988,"line_end":988,"column_start":8,"column_end":12},"name":"from","qualname":"<HashSet<A, S> as std::convert::From>::from","value":"fn from(Vector<A>) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2512},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":350827,"byte_end":350831,"line_start":998,"line_end":998,"column_start":8,"column_end":12},"name":"from","qualname":"<HashSet<A, S> as std::convert::From>::from","value":"fn from(&Vector<A>) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2516},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":351042,"byte_end":351046,"line_start":1008,"line_end":1008,"column_start":8,"column_end":12},"name":"from","qualname":"<HashSet<A, S> as std::convert::From>::from","value":"fn from(collections::HashSet<A>) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2521},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":351278,"byte_end":351282,"line_start":1018,"line_end":1018,"column_start":8,"column_end":12},"name":"from","qualname":"<HashSet<A, S> as std::convert::From>::from","value":"fn from(&collections::HashSet<A>) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2526},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":351507,"byte_end":351511,"line_start":1028,"line_end":1028,"column_start":8,"column_end":12},"name":"from","qualname":"<HashSet<A, S> as std::convert::From>::from","value":"fn from(&BTreeSet<A>) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2530},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":351722,"byte_end":351726,"line_start":1038,"line_end":1038,"column_start":8,"column_end":12},"name":"from","qualname":"<HashSet<A, S> as std::convert::From>::from","value":"fn from(OrdSet<A>) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2535},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":351932,"byte_end":351936,"line_start":1048,"line_end":1048,"column_start":8,"column_end":12},"name":"from","qualname":"<HashSet<A, S> as std::convert::From>::from","value":"fn from(&OrdSet<A>) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2542},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"vector","qualname":"::vector","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","parent":null,"children":[{"krate":0,"index":2543},{"krate":0,"index":2546},{"krate":0,"index":2549},{"krate":0,"index":2550},{"krate":0,"index":2551},{"krate":0,"index":2553},{"krate":0,"index":2554},{"krate":0,"index":2556},{"krate":0,"index":2559},{"krate":0,"index":2560},{"krate":0,"index":2561},{"krate":0,"index":2563},{"krate":0,"index":2566},{"krate":0,"index":2569},{"krate":0,"index":2570},{"krate":0,"index":2573},{"krate":0,"index":2576},{"krate":0,"index":2577},{"krate":0,"index":2580},{"krate":0,"index":2583},{"krate":0,"index":2584},{"krate":0,"index":2587},{"krate":0,"index":2590},{"krate":0,"index":2593},{"krate":0,"index":2596},{"krate":0,"index":2599},{"krate":0,"index":2600},{"krate":0,"index":2603},{"krate":0,"index":2606},{"krate":0,"index":2607},{"krate":0,"index":2610},{"krate":0,"index":2613},{"krate":0,"index":2616},{"krate":0,"index":2619},{"krate":0,"index":2622},{"krate":0,"index":2623},{"krate":0,"index":2626},{"krate":0,"index":2629},{"krate":0,"index":2632},{"krate":0,"index":2635},{"krate":0,"index":2638},{"krate":0,"index":2641},{"krate":0,"index":2644},{"krate":0,"index":2647},{"krate":0,"index":2648},{"krate":0,"index":2649},{"krate":0,"index":2651},{"krate":0,"index":2652},{"krate":0,"index":2654},{"krate":0,"index":2655},{"krate":0,"index":2657},{"krate":0,"index":2851},{"krate":0,"index":2852},{"krate":0,"index":2855},{"krate":0,"index":2858},{"krate":0,"index":2890},{"krate":0,"index":2893},{"krate":0,"index":2994},{"krate":0,"index":2995},{"krate":0,"index":2998},{"krate":0,"index":3012},{"krate":0,"index":3021},{"krate":0,"index":3024},{"krate":0,"index":3063},{"krate":0,"index":3089},{"krate":0,"index":3099},{"krate":0,"index":3101},{"krate":0,"index":3104},{"krate":0,"index":3107},{"krate":0,"index":3110},{"krate":0,"index":3113},{"krate":0,"index":3115},{"krate":0,"index":3118},{"krate":0,"index":3121},{"krate":0,"index":3125},{"krate":0,"index":3130},{"krate":0,"index":3134},{"krate":0,"index":3139},{"krate":0,"index":3143},{"krate":0,"index":3147},{"krate":0,"index":3150},{"krate":0,"index":3156},{"krate":0,"index":3161},{"krate":0,"index":3165},{"krate":0,"index":3172},{"krate":0,"index":3176},{"krate":0,"index":3179},{"krate":0,"index":3183},{"krate":0,"index":3189},{"krate":0,"index":3194},{"krate":0,"index":3200},{"krate":0,"index":3204},{"krate":0,"index":3207},{"krate":0,"index":3210},{"krate":0,"index":3216},{"krate":0,"index":3221},{"krate":0,"index":3227},{"krate":0,"index":3231},{"krate":0,"index":3234},{"krate":0,"index":3237},{"krate":0,"index":3240},{"krate":0,"index":3243},{"krate":0,"index":3248},{"krate":0,"index":3251},{"krate":0,"index":3253},{"krate":0,"index":3255},{"krate":0,"index":3261},{"krate":0,"index":3265},{"krate":0,"index":3270},{"krate":0,"index":3274},{"krate":0,"index":3277},{"krate":0,"index":3283},{"krate":0,"index":3287},{"krate":0,"index":3292},{"krate":0,"index":3296}],"decl_id":null,"docs":" A persistent vector.","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":20005,"byte_end":20017,"line_start":365,"line_end":365,"column_start":1,"column_end":13}},{"value":"/ A persistent vector.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":354452,"byte_end":354476,"line_start":5,"line_end":5,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":354477,"byte_end":354480,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This is a sequence of elements in insertion order - if you need a","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":354481,"byte_end":354550,"line_start":7,"line_end":7,"column_start":1,"column_end":70}},{"value":"/ list of things, any kind of list of things, this is what you're","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":354551,"byte_end":354618,"line_start":8,"line_end":8,"column_start":1,"column_end":68}},{"value":"/ looking for.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":354619,"byte_end":354635,"line_start":9,"line_end":9,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":354636,"byte_end":354639,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ It's implemented as an [RRB vector][rrbpaper] with [smart","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":354640,"byte_end":354701,"line_start":11,"line_end":11,"column_start":1,"column_end":62}},{"value":"/ head/tail chunking][chunkedseq]. In performance terms, this means","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":354702,"byte_end":354771,"line_start":12,"line_end":12,"column_start":1,"column_end":70}},{"value":"/ that practically every operation is O(log n), except push/pop on","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":354772,"byte_end":354840,"line_start":13,"line_end":13,"column_start":1,"column_end":69}},{"value":"/ both sides, which will be O(1) amortised, and O(log n) in the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":354841,"byte_end":354906,"line_start":14,"line_end":14,"column_start":1,"column_end":66}},{"value":"/ worst case. In practice, the push/pop operations will be","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":354907,"byte_end":354967,"line_start":15,"line_end":15,"column_start":1,"column_end":61}},{"value":"/ blindingly fast, nearly on par with the native","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":354968,"byte_end":355018,"line_start":16,"line_end":16,"column_start":1,"column_end":51}},{"value":"/ [`VecDeque`][VecDeque], and other operations will have decent, if","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":355019,"byte_end":355088,"line_start":17,"line_end":17,"column_start":1,"column_end":70}},{"value":"/ not high, performance, but they all have more or less the same","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":355089,"byte_end":355155,"line_start":18,"line_end":18,"column_start":1,"column_end":67}},{"value":"/ O(log n) complexity, so you don't need to keep their performance","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":355156,"byte_end":355224,"line_start":19,"line_end":19,"column_start":1,"column_end":69}},{"value":"/ characteristics in mind - everything, even splitting and merging,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":355225,"byte_end":355294,"line_start":20,"line_end":20,"column_start":1,"column_end":70}},{"value":"/ is safe to use and never too slow.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":355295,"byte_end":355333,"line_start":21,"line_end":21,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":355334,"byte_end":355337,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ## Performance Notes","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":355338,"byte_end":355362,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":355363,"byte_end":355366,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Because of the head/tail chunking technique, until you push a","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":355367,"byte_end":355432,"line_start":25,"line_end":25,"column_start":1,"column_end":66}},{"value":"/ number of items above double the tree's branching factor (that's","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":355433,"byte_end":355501,"line_start":26,"line_end":26,"column_start":1,"column_end":69}},{"value":"/ `self.len()` = 2 × *k* (where *k* = 64) = 128) on either side, the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":355502,"byte_end":355573,"line_start":27,"line_end":27,"column_start":1,"column_end":71}},{"value":"/ data structure is still just a handful of arrays, not yet an RRB","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":355574,"byte_end":355642,"line_start":28,"line_end":28,"column_start":1,"column_end":69}},{"value":"/ tree, so you'll see performance and memory characteristics fairly","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":355643,"byte_end":355712,"line_start":29,"line_end":29,"column_start":1,"column_end":70}},{"value":"/ close to [`Vec`][Vec] or [`VecDeque`][VecDeque].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":355713,"byte_end":355765,"line_start":30,"line_end":30,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":355766,"byte_end":355769,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This means that the structure always preallocates four chunks of","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":355770,"byte_end":355838,"line_start":32,"line_end":32,"column_start":1,"column_end":69}},{"value":"/ size *k* (*k* being the tree's branching factor), equivalent to a","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":355839,"byte_end":355908,"line_start":33,"line_end":33,"column_start":1,"column_end":70}},{"value":"/ [`Vec`][Vec] with an initial capacity of 256. Beyond that, it will","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":355909,"byte_end":355979,"line_start":34,"line_end":34,"column_start":1,"column_end":71}},{"value":"/ allocate tree nodes of capacity *k* as needed.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":355980,"byte_end":356030,"line_start":35,"line_end":35,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":356031,"byte_end":356034,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ In addition, vectors start out as single chunks, and only expand into the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":356035,"byte_end":356112,"line_start":37,"line_end":37,"column_start":1,"column_end":78}},{"value":"/ full data structure once you go past the chunk size. This makes them","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":356113,"byte_end":356185,"line_start":38,"line_end":38,"column_start":1,"column_end":73}},{"value":"/ perform identically to [`Vec`][Vec] at small sizes.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":356186,"byte_end":356241,"line_start":39,"line_end":39,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":356242,"byte_end":356245,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ [rrbpaper]: https://infoscience.epfl.ch/record/213452/files/rrbvector.pdf","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":356246,"byte_end":356323,"line_start":41,"line_end":41,"column_start":1,"column_end":78}},{"value":"/ [chunkedseq]: http://deepsea.inria.fr/pasl/chunkedseq.pdf","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":356324,"byte_end":356385,"line_start":42,"line_end":42,"column_start":1,"column_end":62}},{"value":"/ [Vec]: https://doc.rust-lang.org/std/vec/struct.Vec.html","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":356386,"byte_end":356446,"line_start":43,"line_end":43,"column_start":1,"column_end":61}},{"value":"/ [VecDeque]: https://doc.rust-lang.org/std/collections/struct.VecDeque.html","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":356447,"byte_end":356525,"line_start":44,"line_end":44,"column_start":1,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2727},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":445518,"byte_end":445524,"line_start":87,"line_end":87,"column_start":5,"column_end":11},"name":"Single","qualname":"::vector::focus::Focus::Single","value":"Focus::Single(&'a [A])","parent":{"krate":0,"index":2724},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2729},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":445525,"byte_end":445532,"line_start":87,"line_end":87,"column_start":12,"column_end":19},"name":"0","qualname":"::vector::focus::Focus::Single::0","value":"&'a [A]","parent":{"krate":0,"index":2727},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2730},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":445558,"byte_end":445562,"line_start":89,"line_end":89,"column_start":5,"column_end":9},"name":"Full","qualname":"::vector::focus::Focus::Full","value":"Focus::Full(TreeFocus<A>)","parent":{"krate":0,"index":2724},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2732},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":445563,"byte_end":445575,"line_start":89,"line_end":89,"column_start":10,"column_end":22},"name":"0","qualname":"::vector::focus::Focus::Full::0","value":"vector::focus::TreeFocus<A>","parent":{"krate":0,"index":2730},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2724},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":445480,"byte_end":445485,"line_start":85,"line_end":85,"column_start":10,"column_end":15},"name":"Focus","qualname":"::vector::focus::Focus","value":"enum Focus<'a, A> { Single(&'a [A]), Full(TreeFocus<A>), }","parent":null,"children":[{"krate":0,"index":2727},{"krate":0,"index":2730}],"decl_id":null,"docs":" Focused indexing over a [`Vector`][Vector].","sig":null,"attributes":[{"value":"/ Focused indexing over a [`Vector`][Vector].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":442789,"byte_end":442836,"line_start":18,"line_end":18,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":442837,"byte_end":442840,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ By remembering the last tree node accessed through an index lookup and the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":442841,"byte_end":442919,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/ path we took to get there, we can speed up lookups for adjacent indices","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":442920,"byte_end":442995,"line_start":21,"line_end":21,"column_start":1,"column_end":76}},{"value":"/ tremendously. Lookups on indices in the same node are instantaneous, and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":442996,"byte_end":443072,"line_start":22,"line_end":22,"column_start":1,"column_end":77}},{"value":"/ lookups on sibling nodes are also very fast.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":443073,"byte_end":443121,"line_start":23,"line_end":23,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":443122,"byte_end":443125,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ A `Focus` can also be used as a restricted view into a vector, using the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":443126,"byte_end":443202,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/ [`narrow`][narrow] and [`split_at`][split_at] methods.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":443203,"byte_end":443261,"line_start":26,"line_end":26,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":443262,"byte_end":443265,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # When should I use a `Focus` for better performance?","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":443266,"byte_end":443323,"line_start":28,"line_end":28,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":443324,"byte_end":443327,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ `Focus` is useful when you need to perform a large number of index lookups","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":443328,"byte_end":443406,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ that are more likely than not to be close to each other. It's usually worth","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":443407,"byte_end":443486,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ using a `Focus` in any situation where you're batching a lot of index","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":443487,"byte_end":443560,"line_start":32,"line_end":32,"column_start":1,"column_end":74}},{"value":"/ lookups together, even if they're not obviously adjacent - there's likely","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":443561,"byte_end":443638,"line_start":33,"line_end":33,"column_start":1,"column_end":78}},{"value":"/ to be some performance gain for even completely random access.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":443639,"byte_end":443705,"line_start":34,"line_end":34,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":443706,"byte_end":443709,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ If you're just iterating forwards or backwards over the [`Vector`][Vector]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":443710,"byte_end":443788,"line_start":36,"line_end":36,"column_start":1,"column_end":79}},{"value":"/ in order, you're better off with a regular iterator, which, in fact, is","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":443789,"byte_end":443864,"line_start":37,"line_end":37,"column_start":1,"column_end":76}},{"value":"/ implemented using a `Focus`, but provides a simpler interface.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":443865,"byte_end":443931,"line_start":38,"line_end":38,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":443932,"byte_end":443935,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ If you're just doing a very small number of index lookups, the setup cost","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":443936,"byte_end":444013,"line_start":40,"line_end":40,"column_start":1,"column_end":78}},{"value":"/ for the `Focus` is probably not worth it.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":444014,"byte_end":444059,"line_start":41,"line_end":41,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":444060,"byte_end":444063,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ A `Focus` is never faster than an index lookup on a small [`Vector`][Vector]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":444064,"byte_end":444144,"line_start":43,"line_end":43,"column_start":1,"column_end":81}},{"value":"/ with a length below the internal RRB tree's branching factor of 64.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":444145,"byte_end":444216,"line_start":44,"line_end":44,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":444217,"byte_end":444220,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":444221,"byte_end":444235,"line_start":46,"line_end":46,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":444236,"byte_end":444239,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ This example is contrived, as the better way to iterate forwards or","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":444240,"byte_end":444311,"line_start":48,"line_end":48,"column_start":1,"column_end":72}},{"value":"/ backwards over a vector is with an actual iterator. Even so, the version","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":444312,"byte_end":444388,"line_start":49,"line_end":49,"column_start":1,"column_end":77}},{"value":"/ using a `Focus` should run nearly an order of magnitude faster than the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":444389,"byte_end":444464,"line_start":50,"line_end":50,"column_start":1,"column_end":76}},{"value":"/ version using index lookups at a length of 1000. It should also be noted","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":444465,"byte_end":444541,"line_start":51,"line_end":51,"column_start":1,"column_end":77}},{"value":"/ that [`vector::Iter`][Iter] is actually implemented using a `Focus` behind","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":444542,"byte_end":444620,"line_start":52,"line_end":52,"column_start":1,"column_end":79}},{"value":"/ the scenes, so the performance of the two should be identical.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":444621,"byte_end":444687,"line_start":53,"line_end":53,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":444688,"byte_end":444691,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":444692,"byte_end":444703,"line_start":55,"line_end":55,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":444704,"byte_end":444739,"line_start":56,"line_end":56,"column_start":1,"column_end":36}},{"value":"/ # use im::vector::Vector;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":444740,"byte_end":444769,"line_start":57,"line_end":57,"column_start":1,"column_end":30}},{"value":"/ # use std::iter::FromIterator;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":444770,"byte_end":444804,"line_start":58,"line_end":58,"column_start":1,"column_end":35}},{"value":"/ let mut vec: Vector<i64> = Vector::from_iter(0..1000);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":444805,"byte_end":444863,"line_start":59,"line_end":59,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":444864,"byte_end":444867,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ // Summing a vector, the slow way:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":444868,"byte_end":444906,"line_start":61,"line_end":61,"column_start":1,"column_end":39}},{"value":"/ let mut sum = 0;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":444907,"byte_end":444927,"line_start":62,"line_end":62,"column_start":1,"column_end":21}},{"value":"/ for i in 0..1000 {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":444928,"byte_end":444950,"line_start":63,"line_end":63,"column_start":1,"column_end":23}},{"value":"/     sum += *vec.get(i).unwrap();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":444951,"byte_end":444987,"line_start":64,"line_end":64,"column_start":1,"column_end":37}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":444988,"byte_end":444993,"line_start":65,"line_end":65,"column_start":1,"column_end":6}},{"value":"/ assert_eq!(499500, sum);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":444994,"byte_end":445022,"line_start":66,"line_end":66,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":445023,"byte_end":445026,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ // Summing a vector faster using a Focus:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":445027,"byte_end":445072,"line_start":68,"line_end":68,"column_start":1,"column_end":46}},{"value":"/ let mut sum = 0;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":445073,"byte_end":445093,"line_start":69,"line_end":69,"column_start":1,"column_end":21}},{"value":"/ let mut focus = vec.focus();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":445094,"byte_end":445126,"line_start":70,"line_end":70,"column_start":1,"column_end":33}},{"value":"/ for i in 0..1000 {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":445127,"byte_end":445149,"line_start":71,"line_end":71,"column_start":1,"column_end":23}},{"value":"/     sum += *focus.get(i).unwrap();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":445150,"byte_end":445188,"line_start":72,"line_end":72,"column_start":1,"column_end":39}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":445189,"byte_end":445194,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"/ assert_eq!(499500, sum);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":445195,"byte_end":445223,"line_start":74,"line_end":74,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":445224,"byte_end":445227,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ // And the easy way, for completeness:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":445228,"byte_end":445270,"line_start":76,"line_end":76,"column_start":1,"column_end":43}},{"value":"/ let sum: i64 = vec.iter().sum();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":445271,"byte_end":445307,"line_start":77,"line_end":77,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(499500, sum);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":445308,"byte_end":445336,"line_start":78,"line_end":78,"column_start":1,"column_end":29}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":445337,"byte_end":445344,"line_start":79,"line_end":79,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":445345,"byte_end":445348,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ [Vector]: enum.Vector.html","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":445349,"byte_end":445379,"line_start":81,"line_end":81,"column_start":1,"column_end":31}},{"value":"/ [Iter]: struct.Iter.html","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":445380,"byte_end":445408,"line_start":82,"line_end":82,"column_start":1,"column_end":29}},{"value":"/ [narrow]: #method.narrow","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":445409,"byte_end":445437,"line_start":83,"line_end":83,"column_start":1,"column_end":29}},{"value":"/ [split_at]: #method.split_at","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":445438,"byte_end":445470,"line_start":84,"line_end":84,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":2736},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":445741,"byte_end":445744,"line_start":99,"line_end":99,"column_start":12,"column_end":15},"name":"new","qualname":"<Focus>::new","value":"fn new(&'a Vector<A>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a `Focus` for a [`Vector`][Vector].","sig":null,"attributes":[{"value":"/ Construct a `Focus` for a [`Vector`][Vector].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":445637,"byte_end":445686,"line_start":96,"line_end":96,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":445691,"byte_end":445694,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ [Vector]: enum.Vector.html","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":445699,"byte_end":445729,"line_start":98,"line_end":98,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2737},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":446110,"byte_end":446113,"line_start":110,"line_end":110,"column_start":12,"column_end":15},"name":"len","qualname":"<Focus>::len","value":"fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the length of the focused [`Vector`][Vector].","sig":null,"attributes":[{"value":"/ Get the length of the focused [`Vector`][Vector].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":446002,"byte_end":446055,"line_start":107,"line_end":107,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":446060,"byte_end":446063,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ [Vector]: enum.Vector.html","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":446068,"byte_end":446098,"line_start":109,"line_end":109,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2738},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":446375,"byte_end":446383,"line_start":120,"line_end":120,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Focus>::is_empty","value":"fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test if the focused [`Vector`][Vector] is empty.","sig":null,"attributes":[{"value":"/ Test if the focused [`Vector`][Vector] is empty.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":446268,"byte_end":446320,"line_start":117,"line_end":117,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":446325,"byte_end":446328,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ [Vector]: enum.Vector.html","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":446333,"byte_end":446363,"line_start":119,"line_end":119,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2739},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":446498,"byte_end":446501,"line_start":125,"line_end":125,"column_start":12,"column_end":15},"name":"get","qualname":"<Focus>::get","value":"fn get(&mut Self, usize) -> Option<&A>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the value at a given index.\n","sig":null,"attributes":[{"value":"/ Get a reference to the value at a given index.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":446436,"byte_end":446486,"line_start":124,"line_end":124,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2740},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":446805,"byte_end":446810,"line_start":135,"line_end":135,"column_start":12,"column_end":17},"name":"index","qualname":"<Focus>::index","value":"fn index(&mut Self, usize) -> &A","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the value at a given index.","sig":null,"attributes":[{"value":"/ Get a reference to the value at a given index.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":446689,"byte_end":446739,"line_start":132,"line_end":132,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":446744,"byte_end":446747,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ Panics if the index is out of bounds.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":446752,"byte_end":446793,"line_start":134,"line_end":134,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2741},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":447090,"byte_end":447098,"line_start":143,"line_end":143,"column_start":12,"column_end":20},"name":"chunk_at","qualname":"<Focus>::chunk_at","value":"fn chunk_at(&mut Self, usize) -> (Range<usize>, &[A])","parent":null,"children":[],"decl_id":null,"docs":" Get the chunk for the given index.","sig":null,"attributes":[{"value":"/ Get the chunk for the given index.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":446909,"byte_end":446947,"line_start":139,"line_end":139,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":446952,"byte_end":446955,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ This gives you a reference to the leaf node that contains the index,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":446960,"byte_end":447032,"line_start":141,"line_end":141,"column_start":5,"column_end":77}},{"value":"/ along with its start and end indices.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":447037,"byte_end":447078,"line_start":142,"line_end":142,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2742},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":448279,"byte_end":448285,"line_start":175,"line_end":175,"column_start":12,"column_end":18},"name":"narrow","qualname":"<Focus>::narrow","value":"fn narrow<R>(Self, R) -> Self where R: RangeBounds<usize>","parent":null,"children":[],"decl_id":null,"docs":" Narrow the focus onto a subslice of the vector.","sig":null,"attributes":[{"value":"/ Narrow the focus onto a subslice of the vector.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":447435,"byte_end":447486,"line_start":154,"line_end":154,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":447491,"byte_end":447494,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ `Focus::narrow(range)` has the same effect as `&slice[range]`, without","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":447499,"byte_end":447573,"line_start":156,"line_end":156,"column_start":5,"column_end":79}},{"value":"/ actually modifying the underlying vector.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":447578,"byte_end":447623,"line_start":157,"line_end":157,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":447628,"byte_end":447631,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ Panics if the range isn't fully inside the current focus.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":447636,"byte_end":447697,"line_start":159,"line_end":159,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":447702,"byte_end":447705,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":447710,"byte_end":447725,"line_start":161,"line_end":161,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":447730,"byte_end":447733,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":447738,"byte_end":447749,"line_start":163,"line_end":163,"column_start":5,"column_end":16}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":447754,"byte_end":447789,"line_start":164,"line_end":164,"column_start":5,"column_end":40}},{"value":"/ # use im::vector::Vector;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":447794,"byte_end":447823,"line_start":165,"line_end":165,"column_start":5,"column_end":34}},{"value":"/ # use std::iter::FromIterator;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":447828,"byte_end":447862,"line_start":166,"line_end":166,"column_start":5,"column_end":39}},{"value":"/ let vec = Vector::from_iter(0..1000);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":447867,"byte_end":447908,"line_start":167,"line_end":167,"column_start":5,"column_end":46}},{"value":"/ let narrowed = vec.focus().narrow(100..200);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":447913,"byte_end":447961,"line_start":168,"line_end":168,"column_start":5,"column_end":53}},{"value":"/ let narrowed_vec = narrowed.into_iter().cloned().collect();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":447966,"byte_end":448029,"line_start":169,"line_end":169,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(Vector::from_iter(100..200), narrowed_vec);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":448034,"byte_end":448092,"line_start":170,"line_end":170,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":448097,"byte_end":448104,"line_start":171,"line_end":171,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":448109,"byte_end":448112,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ [slice::split_at]: https://doc.rust-lang.org/std/primitive.slice.html#method.split_at","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":448117,"byte_end":448206,"line_start":173,"line_end":173,"column_start":5,"column_end":94}},{"value":"/ [Vector::split_at]: enum.Vector.html#method.split_at","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":448211,"byte_end":448267,"line_start":174,"line_end":174,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2744},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":449905,"byte_end":449913,"line_start":217,"line_end":217,"column_start":12,"column_end":20},"name":"split_at","qualname":"<Focus>::split_at","value":"fn split_at(Self, usize) -> (Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Split the focus into two.","sig":null,"attributes":[{"value":"/ Split the focus into two.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":448703,"byte_end":448732,"line_start":189,"line_end":189,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":448737,"byte_end":448740,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ Given an index `index`, consume the focus and produce two new foci, the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":448745,"byte_end":448820,"line_start":191,"line_end":191,"column_start":5,"column_end":80}},{"value":"/ left onto indices `0..index`, and the right onto indices `index..N`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":448825,"byte_end":448896,"line_start":192,"line_end":192,"column_start":5,"column_end":76}},{"value":"/ where `N` is the length of the current focus.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":448901,"byte_end":448950,"line_start":193,"line_end":193,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":448955,"byte_end":448958,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ Panics if the index is out of bounds.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":448963,"byte_end":449004,"line_start":195,"line_end":195,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":449009,"byte_end":449012,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ This is the moral equivalent of [`slice::split_at`][slice::split_at], in","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":449017,"byte_end":449093,"line_start":197,"line_end":197,"column_start":5,"column_end":81}},{"value":"/ that it leaves the underlying data structure unchanged, unlike","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":449098,"byte_end":449164,"line_start":198,"line_end":198,"column_start":5,"column_end":71}},{"value":"/ [`Vector::split_at`][Vector::split_at].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":449169,"byte_end":449212,"line_start":199,"line_end":199,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":449217,"byte_end":449220,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":449225,"byte_end":449240,"line_start":201,"line_end":201,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":449245,"byte_end":449248,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":449253,"byte_end":449264,"line_start":203,"line_end":203,"column_start":5,"column_end":16}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":449269,"byte_end":449304,"line_start":204,"line_end":204,"column_start":5,"column_end":40}},{"value":"/ # use im::vector::Vector;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":449309,"byte_end":449338,"line_start":205,"line_end":205,"column_start":5,"column_end":34}},{"value":"/ # use std::iter::FromIterator;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":449343,"byte_end":449377,"line_start":206,"line_end":206,"column_start":5,"column_end":39}},{"value":"/ let vec = Vector::from_iter(0..1000);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":449382,"byte_end":449423,"line_start":207,"line_end":207,"column_start":5,"column_end":46}},{"value":"/ let (left, right) = vec.focus().split_at(500);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":449428,"byte_end":449478,"line_start":208,"line_end":208,"column_start":5,"column_end":55}},{"value":"/ let left_vec = left.into_iter().cloned().collect();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":449483,"byte_end":449538,"line_start":209,"line_end":209,"column_start":5,"column_end":60}},{"value":"/ let right_vec = right.into_iter().cloned().collect();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":449543,"byte_end":449600,"line_start":210,"line_end":210,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(Vector::from_iter(0..500), left_vec);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":449605,"byte_end":449657,"line_start":211,"line_end":211,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Vector::from_iter(500..1000), right_vec);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":449662,"byte_end":449718,"line_start":212,"line_end":212,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":449723,"byte_end":449730,"line_start":213,"line_end":213,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":449735,"byte_end":449738,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ [slice::split_at]: https://doc.rust-lang.org/std/primitive.slice.html#method.split_at","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":449743,"byte_end":449832,"line_start":215,"line_end":215,"column_start":5,"column_end":94}},{"value":"/ [Vector::split_at]: enum.Vector.html#method.split_at","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":449837,"byte_end":449893,"line_start":216,"line_end":216,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2750},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":450570,"byte_end":450579,"line_start":241,"line_end":241,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<Focus as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":2,"index":8279},"children":[],"decl_id":{"krate":2,"index":8282},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2754},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":450715,"byte_end":450720,"line_start":250,"line_end":250,"column_start":8,"column_end":13},"name":"clone","qualname":"<Focus as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2755},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":450907,"byte_end":450916,"line_start":258,"line_end":258,"column_start":12,"column_end":21},"name":"TreeFocus","qualname":"::vector::focus::TreeFocus","value":"TreeFocus {  }","parent":null,"children":[{"krate":0,"index":2757},{"krate":0,"index":2758},{"krate":0,"index":2759},{"krate":0,"index":2760},{"krate":0,"index":2761}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2764},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":451104,"byte_end":451109,"line_start":267,"line_end":267,"column_start":8,"column_end":13},"name":"clone","qualname":"<TreeFocus<A> as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2781},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":454422,"byte_end":454425,"line_start":375,"line_end":375,"column_start":12,"column_end":15},"name":"get","qualname":"<TreeFocus<A>>::get","value":"fn get(&mut Self, usize) -> Option<&A>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2782},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":454833,"byte_end":454842,"line_start":387,"line_end":387,"column_start":12,"column_end":21},"name":"get_chunk","qualname":"<TreeFocus<A>>::get_chunk","value":"fn get_chunk(&mut Self, usize) -> (Range<usize>, &[A])","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2786},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":457569,"byte_end":457575,"line_start":464,"line_end":464,"column_start":5,"column_end":11},"name":"Single","qualname":"::vector::focus::FocusMut::Single","value":"FocusMut::Single(RRBPool<A>, &'a mut [A])","parent":{"krate":0,"index":2783},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2788},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":457576,"byte_end":457586,"line_start":464,"line_end":464,"column_start":12,"column_end":22},"name":"0","qualname":"::vector::focus::FocusMut::Single::0","value":"vector::pool::RRBPool<A>","parent":{"krate":0,"index":2786},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2789},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":457588,"byte_end":457599,"line_start":464,"line_end":464,"column_start":24,"column_end":35},"name":"1","qualname":"::vector::focus::FocusMut::Single::1","value":"&'a mut [A]","parent":{"krate":0,"index":2786},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2790},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":457625,"byte_end":457629,"line_start":466,"line_end":466,"column_start":5,"column_end":9},"name":"Full","qualname":"::vector::focus::FocusMut::Full","value":"FocusMut::Full(RRBPool<A>, TreeFocusMut)","parent":{"krate":0,"index":2783},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2792},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":457630,"byte_end":457640,"line_start":466,"line_end":466,"column_start":10,"column_end":20},"name":"0","qualname":"::vector::focus::FocusMut::Full::0","value":"vector::pool::RRBPool<A>","parent":{"krate":0,"index":2790},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2793},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":457642,"byte_end":457661,"line_start":466,"line_end":466,"column_start":22,"column_end":41},"name":"1","qualname":"::vector::focus::FocusMut::Full::1","value":"vector::focus::TreeFocusMut<'a, A>","parent":{"krate":0,"index":2790},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2783},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":457528,"byte_end":457536,"line_start":462,"line_end":462,"column_start":10,"column_end":18},"name":"FocusMut","qualname":"::vector::focus::FocusMut","value":"enum FocusMut<'a, A> {\n    Single(RRBPool<A>, &'a mut [A]),\n    Full(RRBPool<A>, TreeFocusMut),\n}","parent":null,"children":[{"krate":0,"index":2786},{"krate":0,"index":2790}],"decl_id":null,"docs":" A mutable version of [`Focus`][Focus].","sig":null,"attributes":[{"value":"/ A mutable version of [`Focus`][Focus].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":455615,"byte_end":455657,"line_start":407,"line_end":407,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":455658,"byte_end":455661,"line_start":408,"line_end":408,"column_start":1,"column_end":4}},{"value":"/ See [`Focus`][Focus] for more details.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":455662,"byte_end":455704,"line_start":409,"line_end":409,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":455705,"byte_end":455708,"line_start":410,"line_end":410,"column_start":1,"column_end":4}},{"value":"/ You can only build one `FocusMut` at a time for a vector, effectively","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":455709,"byte_end":455782,"line_start":411,"line_end":411,"column_start":1,"column_end":74}},{"value":"/ keeping a lock on the vector until you're done with the focus, which relies","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":455783,"byte_end":455862,"line_start":412,"line_end":412,"column_start":1,"column_end":80}},{"value":"/ on the structure of the vector not changing while it exists.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":455863,"byte_end":455927,"line_start":413,"line_end":413,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":455928,"byte_end":455931,"line_start":414,"line_end":414,"column_start":1,"column_end":4}},{"value":"/ ```rust,compile_fail","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":455932,"byte_end":455956,"line_start":415,"line_end":415,"column_start":1,"column_end":25}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":455957,"byte_end":455992,"line_start":416,"line_end":416,"column_start":1,"column_end":36}},{"value":"/ # use im::vector::Vector;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":455993,"byte_end":456022,"line_start":417,"line_end":417,"column_start":1,"column_end":30}},{"value":"/ # use std::iter::FromIterator;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":456023,"byte_end":456057,"line_start":418,"line_end":418,"column_start":1,"column_end":35}},{"value":"/ let mut vec = Vector::from_iter(0..1000);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":456058,"byte_end":456103,"line_start":419,"line_end":419,"column_start":1,"column_end":46}},{"value":"/ let focus1 = vec.focus_mut();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":456104,"byte_end":456137,"line_start":420,"line_end":420,"column_start":1,"column_end":34}},{"value":"/ // Fails here in 2015 edition because you're creating","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":456138,"byte_end":456195,"line_start":421,"line_end":421,"column_start":1,"column_end":58}},{"value":"/ // two mutable references to the same thing.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":456196,"byte_end":456244,"line_start":422,"line_end":422,"column_start":1,"column_end":49}},{"value":"/ let focus2 = vec.focus_mut();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":456245,"byte_end":456278,"line_start":423,"line_end":423,"column_start":1,"column_end":34}},{"value":"/ // Fails here in 2018 edition because creating focus2","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":456279,"byte_end":456336,"line_start":424,"line_end":424,"column_start":1,"column_end":58}},{"value":"/ // made focus1's lifetime go out of scope.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":456337,"byte_end":456383,"line_start":425,"line_end":425,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(Some(&0), focus1.get(0));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":456384,"byte_end":456424,"line_start":426,"line_end":426,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":456425,"byte_end":456432,"line_start":427,"line_end":427,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":456433,"byte_end":456436,"line_start":428,"line_end":428,"column_start":1,"column_end":4}},{"value":"/ On the other hand, you can split that one focus into multiple sub-focuses,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":456437,"byte_end":456515,"line_start":429,"line_end":429,"column_start":1,"column_end":79}},{"value":"/ which is safe because they can't overlap:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":456516,"byte_end":456561,"line_start":430,"line_end":430,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":456562,"byte_end":456565,"line_start":431,"line_end":431,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":456566,"byte_end":456577,"line_start":432,"line_end":432,"column_start":1,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":456578,"byte_end":456613,"line_start":433,"line_end":433,"column_start":1,"column_end":36}},{"value":"/ # use im::vector::Vector;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":456614,"byte_end":456643,"line_start":434,"line_end":434,"column_start":1,"column_end":30}},{"value":"/ # use std::iter::FromIterator;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":456644,"byte_end":456678,"line_start":435,"line_end":435,"column_start":1,"column_end":35}},{"value":"/ let mut vec = Vector::from_iter(0..1000);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":456679,"byte_end":456724,"line_start":436,"line_end":436,"column_start":1,"column_end":46}},{"value":"/ let focus = vec.focus_mut();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":456725,"byte_end":456757,"line_start":437,"line_end":437,"column_start":1,"column_end":33}},{"value":"/ let (mut left, mut right) = focus.split_at(500);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":456758,"byte_end":456810,"line_start":438,"line_end":438,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(Some(&0), left.get(0));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":456811,"byte_end":456849,"line_start":439,"line_end":439,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(Some(&500), right.get(0));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":456850,"byte_end":456891,"line_start":440,"line_end":440,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":456892,"byte_end":456899,"line_start":441,"line_end":441,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":456900,"byte_end":456903,"line_start":442,"line_end":442,"column_start":1,"column_end":4}},{"value":"/ These sub-foci also work as a lock on the vector, even if the focus they","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":456904,"byte_end":456980,"line_start":443,"line_end":443,"column_start":1,"column_end":77}},{"value":"/ were created from goes out of scope.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":456981,"byte_end":457021,"line_start":444,"line_end":444,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":457022,"byte_end":457025,"line_start":445,"line_end":445,"column_start":1,"column_end":4}},{"value":"/ ```rust,compile_fail","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":457026,"byte_end":457050,"line_start":446,"line_end":446,"column_start":1,"column_end":25}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":457051,"byte_end":457086,"line_start":447,"line_end":447,"column_start":1,"column_end":36}},{"value":"/ # use im::vector::Vector;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":457087,"byte_end":457116,"line_start":448,"line_end":448,"column_start":1,"column_end":30}},{"value":"/ # use std::iter::FromIterator;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":457117,"byte_end":457151,"line_start":449,"line_end":449,"column_start":1,"column_end":35}},{"value":"/ let mut vec = Vector::from_iter(0..1000);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":457152,"byte_end":457197,"line_start":450,"line_end":450,"column_start":1,"column_end":46}},{"value":"/ let (left, right) = {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":457198,"byte_end":457223,"line_start":451,"line_end":451,"column_start":1,"column_end":26}},{"value":"/     let focus = vec.focus_mut();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":457224,"byte_end":457260,"line_start":452,"line_end":452,"column_start":1,"column_end":37}},{"value":"/     focus.split_at(500)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":457261,"byte_end":457288,"line_start":453,"line_end":453,"column_start":1,"column_end":28}},{"value":"/ };","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":457289,"byte_end":457295,"line_start":454,"line_end":454,"column_start":1,"column_end":7}},{"value":"/ // `left` and `right` are still in scope even if `focus` isn't, so we can't","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":457296,"byte_end":457375,"line_start":455,"line_end":455,"column_start":1,"column_end":80}},{"value":"/ // create another focus:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":457376,"byte_end":457404,"line_start":456,"line_end":456,"column_start":1,"column_end":29}},{"value":"/ let focus2 = vec.focus_mut();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":457405,"byte_end":457438,"line_start":457,"line_end":457,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(Some(&0), left.get(0));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":457439,"byte_end":457477,"line_start":458,"line_end":458,"column_start":1,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":457478,"byte_end":457485,"line_start":459,"line_end":459,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":457486,"byte_end":457489,"line_start":460,"line_end":460,"column_start":1,"column_end":4}},{"value":"/ [Focus]: enum.Focus.html","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":457490,"byte_end":457518,"line_start":461,"line_end":461,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2797},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":457780,"byte_end":457783,"line_start":474,"line_end":474,"column_start":12,"column_end":15},"name":"new","qualname":"<FocusMut>::new","value":"fn new(&'a mut Vector<A>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a `FocusMut` for a `Vector`.\n","sig":null,"attributes":[{"value":"/ Construct a `FocusMut` for a `Vector`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":457726,"byte_end":457768,"line_start":473,"line_end":473,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2798},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":458266,"byte_end":458269,"line_start":486,"line_end":486,"column_start":12,"column_end":15},"name":"len","qualname":"<FocusMut>::len","value":"fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the length of the focused `Vector`.\n","sig":null,"attributes":[{"value":"/ Get the length of the focused `Vector`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":458211,"byte_end":458254,"line_start":485,"line_end":485,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2799},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":458490,"byte_end":458498,"line_start":494,"line_end":494,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<FocusMut>::is_empty","value":"fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test if the focused `Vector` is empty.\n","sig":null,"attributes":[{"value":"/ Test if the focused `Vector` is empty.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":458436,"byte_end":458478,"line_start":493,"line_end":493,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2800},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":458613,"byte_end":458616,"line_start":499,"line_end":499,"column_start":12,"column_end":15},"name":"get","qualname":"<FocusMut>::get","value":"fn get(&mut Self, usize) -> Option<&A>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the value at a given index.\n","sig":null,"attributes":[{"value":"/ Get a reference to the value at a given index.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":458551,"byte_end":458601,"line_start":498,"line_end":498,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2802},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":458780,"byte_end":458787,"line_start":504,"line_end":504,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FocusMut>::get_mut","value":"fn get_mut(&mut Self, usize) -> Option<&mut A>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the value at a given index.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the value at a given index.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":458710,"byte_end":458768,"line_start":503,"line_end":503,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2803},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":459120,"byte_end":459125,"line_start":514,"line_end":514,"column_start":12,"column_end":17},"name":"index","qualname":"<FocusMut>::index","value":"fn index(&mut Self, usize) -> &A","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the value at a given index.","sig":null,"attributes":[{"value":"/ Get a reference to the value at a given index.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":459004,"byte_end":459054,"line_start":511,"line_end":511,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":459059,"byte_end":459062,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ Panics if the index is out of bounds.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":459067,"byte_end":459108,"line_start":513,"line_end":513,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2804},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":459391,"byte_end":459400,"line_start":522,"line_end":522,"column_start":12,"column_end":21},"name":"index_mut","qualname":"<FocusMut>::index_mut","value":"fn index_mut(&mut Self, usize) -> &mut A","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the value at a given index.","sig":null,"attributes":[{"value":"/ Get a mutable reference to the value at a given index.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":459202,"byte_end":459260,"line_start":518,"line_end":518,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":459265,"byte_end":459268,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ Panics if the index is out of bounds.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":459273,"byte_end":459314,"line_start":520,"line_end":520,"column_start":5,"column_end":46}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":459319,"byte_end":459359,"line_start":521,"line_end":521,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2805},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":459660,"byte_end":459663,"line_start":530,"line_end":530,"column_start":12,"column_end":15},"name":"set","qualname":"<FocusMut>::set","value":"fn set(&mut Self, usize, A) -> Option<A>","parent":null,"children":[],"decl_id":null,"docs":" Update the value at a given index.","sig":null,"attributes":[{"value":"/ Update the value at a given index.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":459507,"byte_end":459545,"line_start":526,"line_end":526,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":459550,"byte_end":459553,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the index is out of bounds, or the replaced value","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":459558,"byte_end":459629,"line_start":528,"line_end":528,"column_start":5,"column_end":76}},{"value":"/ otherwise.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":459634,"byte_end":459648,"line_start":529,"line_end":529,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":2807},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":459982,"byte_end":459986,"line_start":539,"line_end":539,"column_start":12,"column_end":16},"name":"swap","qualname":"<FocusMut>::swap","value":"fn swap(&mut Self, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Swap the values at two given indices.","sig":null,"attributes":[{"value":"/ Swap the values at two given indices.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":459784,"byte_end":459825,"line_start":534,"line_end":534,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":459830,"byte_end":459833,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ Panics if either index is out of bounds.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":459838,"byte_end":459882,"line_start":536,"line_end":536,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":459887,"byte_end":459890,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ If the indices are equal, this function returns without doing anything.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":459895,"byte_end":459970,"line_start":538,"line_end":538,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":2809},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":460813,"byte_end":460817,"line_start":564,"line_end":564,"column_start":12,"column_end":16},"name":"pair","qualname":"<FocusMut>::pair","value":"fn pair<F, B>(&mut Self, usize, usize, F) -> B where\nF: for<'_, '_> FnMut(&'_ mut A, &'_ mut A) -> B","parent":null,"children":[],"decl_id":null,"docs":" Lookup two indices simultaneously and run a function over them.","sig":null,"attributes":[{"value":"/ Lookup two indices simultaneously and run a function over them.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":460139,"byte_end":460206,"line_start":546,"line_end":546,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":460211,"byte_end":460214,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ Useful because the borrow checker won't let you have more than one","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":460219,"byte_end":460289,"line_start":548,"line_end":548,"column_start":5,"column_end":75}},{"value":"/ mutable reference into the same data structure at any given time.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":460294,"byte_end":460363,"line_start":549,"line_end":549,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":460368,"byte_end":460371,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ Panics if either index is out of bounds, or if they are the same index.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":460376,"byte_end":460451,"line_start":551,"line_end":551,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":460456,"byte_end":460459,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":460464,"byte_end":460478,"line_start":553,"line_end":553,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":460483,"byte_end":460486,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":460491,"byte_end":460502,"line_start":555,"line_end":555,"column_start":5,"column_end":16}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":460507,"byte_end":460542,"line_start":556,"line_end":556,"column_start":5,"column_end":40}},{"value":"/ # use im::vector::Vector;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":460547,"byte_end":460576,"line_start":557,"line_end":557,"column_start":5,"column_end":34}},{"value":"/ # use std::iter::FromIterator;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":460581,"byte_end":460615,"line_start":558,"line_end":558,"column_start":5,"column_end":39}},{"value":"/ let mut vec = vector![1, 2, 3, 4, 5];","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":460620,"byte_end":460661,"line_start":559,"line_end":559,"column_start":5,"column_end":46}},{"value":"/ vec.focus_mut().pair(1, 3, |a, b| *a += *b);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":460666,"byte_end":460714,"line_start":560,"line_end":560,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(vector![1, 6, 3, 4, 5], vec);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":460719,"byte_end":460763,"line_start":561,"line_end":561,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":460768,"byte_end":460775,"line_start":562,"line_end":562,"column_start":5,"column_end":12}},{"value":"allow(unsafe_code)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":460780,"byte_end":460801,"line_start":563,"line_end":563,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2812},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":461852,"byte_end":461859,"line_start":594,"line_end":594,"column_start":12,"column_end":19},"name":"triplet","qualname":"<FocusMut>::triplet","value":"fn triplet<F, B>(&mut Self, usize, usize, usize, F) -> B where\nF: for<'_, '_, '_> FnMut(&'_ mut A, &'_ mut A, &'_ mut A) -> B","parent":null,"children":[],"decl_id":null,"docs":" Lookup three indices simultaneously and run a function over them.","sig":null,"attributes":[{"value":"/ Lookup three indices simultaneously and run a function over them.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":461167,"byte_end":461236,"line_start":576,"line_end":576,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":461241,"byte_end":461244,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ Useful because the borrow checker won't let you have more than one","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":461249,"byte_end":461319,"line_start":578,"line_end":578,"column_start":5,"column_end":75}},{"value":"/ mutable reference into the same data structure at any given time.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":461324,"byte_end":461393,"line_start":579,"line_end":579,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":461398,"byte_end":461401,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ Panics if any index is out of bounds, or if any indices are equal.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":461406,"byte_end":461476,"line_start":581,"line_end":581,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":461481,"byte_end":461484,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":461489,"byte_end":461503,"line_start":583,"line_end":583,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":461508,"byte_end":461511,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":461516,"byte_end":461527,"line_start":585,"line_end":585,"column_start":5,"column_end":16}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":461532,"byte_end":461567,"line_start":586,"line_end":586,"column_start":5,"column_end":40}},{"value":"/ # use im::vector::Vector;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":461572,"byte_end":461601,"line_start":587,"line_end":587,"column_start":5,"column_end":34}},{"value":"/ # use std::iter::FromIterator;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":461606,"byte_end":461640,"line_start":588,"line_end":588,"column_start":5,"column_end":39}},{"value":"/ let mut vec = vector![1, 2, 3, 4, 5];","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":461645,"byte_end":461686,"line_start":589,"line_end":589,"column_start":5,"column_end":46}},{"value":"/ vec.focus_mut().triplet(0, 2, 4, |a, b, c| *a += *b + *c);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":461691,"byte_end":461753,"line_start":590,"line_end":590,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(vector![9, 2, 3, 4, 5], vec);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":461758,"byte_end":461802,"line_start":591,"line_end":591,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":461807,"byte_end":461814,"line_start":592,"line_end":592,"column_start":5,"column_end":12}},{"value":"allow(unsafe_code)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":461819,"byte_end":461840,"line_start":593,"line_end":593,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":2815},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":462485,"byte_end":462493,"line_start":611,"line_end":611,"column_start":12,"column_end":20},"name":"chunk_at","qualname":"<FocusMut>::chunk_at","value":"fn chunk_at(&mut Self, usize) -> (Range<usize>, &mut [A])","parent":null,"children":[],"decl_id":null,"docs":" Get the chunk for the given index.","sig":null,"attributes":[{"value":"/ Get the chunk for the given index.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":462304,"byte_end":462342,"line_start":607,"line_end":607,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":462347,"byte_end":462350,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ This gives you a reference to the leaf node that contains the index,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":462355,"byte_end":462427,"line_start":609,"line_end":609,"column_start":5,"column_end":77}},{"value":"/ along with its start and end indices.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":462432,"byte_end":462473,"line_start":610,"line_end":610,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2816},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":463805,"byte_end":463811,"line_start":646,"line_end":646,"column_start":12,"column_end":18},"name":"narrow","qualname":"<FocusMut>::narrow","value":"fn narrow<R>(Self, R) -> Self where R: RangeBounds<usize>","parent":null,"children":[],"decl_id":null,"docs":" Narrow the focus onto a subslice of the vector.","sig":null,"attributes":[{"value":"/ Narrow the focus onto a subslice of the vector.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":462942,"byte_end":462993,"line_start":625,"line_end":625,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":462998,"byte_end":463001,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ `FocusMut::narrow(range)` has the same effect as `&slice[range]`, without","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":463006,"byte_end":463083,"line_start":627,"line_end":627,"column_start":5,"column_end":82}},{"value":"/ actually modifying the underlying vector.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":463088,"byte_end":463133,"line_start":628,"line_end":628,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":463138,"byte_end":463141,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ Panics if the range isn't fully inside the current focus.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":463146,"byte_end":463207,"line_start":630,"line_end":630,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":463212,"byte_end":463215,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":463220,"byte_end":463235,"line_start":632,"line_end":632,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":463240,"byte_end":463243,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":463248,"byte_end":463259,"line_start":634,"line_end":634,"column_start":5,"column_end":16}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":463264,"byte_end":463299,"line_start":635,"line_end":635,"column_start":5,"column_end":40}},{"value":"/ # use im::vector::Vector;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":463304,"byte_end":463333,"line_start":636,"line_end":636,"column_start":5,"column_end":34}},{"value":"/ # use std::iter::FromIterator;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":463338,"byte_end":463372,"line_start":637,"line_end":637,"column_start":5,"column_end":39}},{"value":"/ let mut vec = Vector::from_iter(0..1000);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":463377,"byte_end":463422,"line_start":638,"line_end":638,"column_start":5,"column_end":50}},{"value":"/ let narrowed = vec.focus_mut().narrow(100..200);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":463427,"byte_end":463479,"line_start":639,"line_end":639,"column_start":5,"column_end":57}},{"value":"/ let narrowed_vec = narrowed.unmut().into_iter().cloned().collect();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":463484,"byte_end":463555,"line_start":640,"line_end":640,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(Vector::from_iter(100..200), narrowed_vec);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":463560,"byte_end":463618,"line_start":641,"line_end":641,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":463623,"byte_end":463630,"line_start":642,"line_end":642,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":463635,"byte_end":463638,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ [slice::split_at]: https://doc.rust-lang.org/std/primitive.slice.html#method.split_at","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":463643,"byte_end":463732,"line_start":644,"line_end":644,"column_start":5,"column_end":94}},{"value":"/ [Vector::split_at]: enum.Vector.html#method.split_at","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":463737,"byte_end":463793,"line_start":645,"line_end":645,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2818},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":465587,"byte_end":465595,"line_start":696,"line_end":696,"column_start":12,"column_end":20},"name":"split_at","qualname":"<FocusMut>::split_at","value":"fn split_at(Self, usize) -> (Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Split the focus into two.","sig":null,"attributes":[{"value":"/ Split the focus into two.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":464270,"byte_end":464299,"line_start":660,"line_end":660,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":464304,"byte_end":464307,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ Given an index `index`, consume the focus and produce two new foci, the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":464312,"byte_end":464387,"line_start":662,"line_end":662,"column_start":5,"column_end":80}},{"value":"/ left onto indices `0..index`, and the right onto indices `index..N`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":464392,"byte_end":464463,"line_start":663,"line_end":663,"column_start":5,"column_end":76}},{"value":"/ where `N` is the length of the current focus.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":464468,"byte_end":464517,"line_start":664,"line_end":664,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":464522,"byte_end":464525,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ Panics if the index is out of bounds.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":464530,"byte_end":464571,"line_start":666,"line_end":666,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":464576,"byte_end":464579,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ This is the moral equivalent of [`slice::split_at`][slice::split_at], in","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":464584,"byte_end":464660,"line_start":668,"line_end":668,"column_start":5,"column_end":81}},{"value":"/ that it leaves the underlying data structure unchanged, unlike","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":464665,"byte_end":464731,"line_start":669,"line_end":669,"column_start":5,"column_end":71}},{"value":"/ [`Vector::split_at`][Vector::split_at].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":464736,"byte_end":464779,"line_start":670,"line_end":670,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":464784,"byte_end":464787,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ ## Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":464792,"byte_end":464807,"line_start":672,"line_end":672,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":464812,"byte_end":464815,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":464820,"byte_end":464831,"line_start":674,"line_end":674,"column_start":5,"column_end":16}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":464836,"byte_end":464871,"line_start":675,"line_end":675,"column_start":5,"column_end":40}},{"value":"/ # use im::vector::Vector;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":464876,"byte_end":464905,"line_start":676,"line_end":676,"column_start":5,"column_end":34}},{"value":"/ # use std::iter::FromIterator;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":464910,"byte_end":464944,"line_start":677,"line_end":677,"column_start":5,"column_end":39}},{"value":"/ let mut vec = Vector::from_iter(0..1000);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":464949,"byte_end":464994,"line_start":678,"line_end":678,"column_start":5,"column_end":50}},{"value":"/ {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":464999,"byte_end":465004,"line_start":679,"line_end":679,"column_start":5,"column_end":10}},{"value":"/     let (left, right) = vec.focus_mut().split_at(500);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":465009,"byte_end":465067,"line_start":680,"line_end":680,"column_start":5,"column_end":63}},{"value":"/     for ptr in left {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":465072,"byte_end":465097,"line_start":681,"line_end":681,"column_start":5,"column_end":30}},{"value":"/         *ptr += 100;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":465102,"byte_end":465126,"line_start":682,"line_end":682,"column_start":5,"column_end":29}},{"value":"/     }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":465131,"byte_end":465140,"line_start":683,"line_end":683,"column_start":5,"column_end":14}},{"value":"/     for ptr in right {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":465145,"byte_end":465171,"line_start":684,"line_end":684,"column_start":5,"column_end":31}},{"value":"/         *ptr -= 100;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":465176,"byte_end":465200,"line_start":685,"line_end":685,"column_start":5,"column_end":29}},{"value":"/     }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":465205,"byte_end":465214,"line_start":686,"line_end":686,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":465219,"byte_end":465224,"line_start":687,"line_end":687,"column_start":5,"column_end":10}},{"value":"/ let expected = Vector::from_iter(100..600)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":465229,"byte_end":465275,"line_start":688,"line_end":688,"column_start":5,"column_end":51}},{"value":"/              + Vector::from_iter(400..900);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":465280,"byte_end":465327,"line_start":689,"line_end":689,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(expected, vec);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":465332,"byte_end":465362,"line_start":690,"line_end":690,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":465367,"byte_end":465374,"line_start":691,"line_end":691,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":465379,"byte_end":465382,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ [slice::split_at]: https://doc.rust-lang.org/std/primitive.slice.html#method.split_at","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":465387,"byte_end":465476,"line_start":693,"line_end":693,"column_start":5,"column_end":94}},{"value":"/ [Vector::split_at]: enum.Vector.html#method.split_at","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":465481,"byte_end":465537,"line_start":694,"line_end":694,"column_start":5,"column_end":61}},{"value":"allow(clippy :: redundant_clone)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":465542,"byte_end":465575,"line_start":695,"line_end":695,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2819},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":466367,"byte_end":466372,"line_start":719,"line_end":719,"column_start":12,"column_end":17},"name":"unmut","qualname":"<FocusMut>::unmut","value":"fn unmut(Self) -> Focus","parent":null,"children":[],"decl_id":null,"docs":" Convert a `FocusMut` into a `Focus`.\n","sig":null,"attributes":[{"value":"/ Convert a `FocusMut` into a `Focus`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":466315,"byte_end":466355,"line_start":718,"line_end":718,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2825},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":467028,"byte_end":467037,"line_start":743,"line_end":743,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<FocusMut as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":2,"index":8279},"children":[],"decl_id":{"krate":2,"index":8282},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2829},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":467192,"byte_end":467196,"line_start":752,"line_end":752,"column_start":8,"column_end":12},"name":"from","qualname":"<Focus as std::convert::From>::from","value":"fn from(FocusMut) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2830},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":467265,"byte_end":467277,"line_start":757,"line_end":757,"column_start":12,"column_end":24},"name":"TreeFocusMut","qualname":"::vector::focus::TreeFocusMut","value":"TreeFocusMut {  }","parent":null,"children":[{"krate":0,"index":2833},{"krate":0,"index":2834},{"krate":0,"index":2835},{"krate":0,"index":2836},{"krate":0,"index":2837}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2849},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":471513,"byte_end":471516,"line_start":878,"line_end":878,"column_start":12,"column_end":15},"name":"get","qualname":"<TreeFocusMut>::get","value":"fn get(&mut Self, &RRBPool<A>, usize) -> Option<&mut A>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2850},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":471957,"byte_end":471966,"line_start":890,"line_end":890,"column_start":12,"column_end":21},"name":"get_chunk","qualname":"<TreeFocusMut>::get_chunk","value":"fn get_chunk(&mut Self, &RRBPool<A>, usize) -> (Range<usize>, &mut [A])","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2871},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/pool.rs","byte_start":473187,"byte_end":473194,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"RRBPool","qualname":"::vector::pool::RRBPool","value":"RRBPool {  }","parent":null,"children":[{"krate":0,"index":2873},{"krate":0,"index":2874},{"krate":0,"index":2875}],"decl_id":null,"docs":" A memory pool for `Vector`.\n","sig":null,"attributes":[{"value":"/ A memory pool for `Vector`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/pool.rs","byte_start":473144,"byte_end":473175,"line_start":10,"line_end":10,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2878},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/pool.rs","byte_start":473426,"byte_end":473429,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"new","qualname":"<RRBPool<A>>::new","value":"fn new(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new memory pool with the given size.\n","sig":null,"attributes":[{"value":"/ Create a new memory pool with the given size.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/pool.rs","byte_start":473365,"byte_end":473414,"line_start":18,"line_end":18,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":2879},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/pool.rs","byte_start":473586,"byte_end":473596,"line_start":24,"line_end":24,"column_start":12,"column_end":22},"name":"with_sizes","qualname":"<RRBPool<A>>::with_sizes","value":"fn with_sizes(usize, usize, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new memory pool with the given sizes for each subpool.\n","sig":null,"attributes":[{"value":"/ Create a new memory pool with the given sizes for each subpool.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/pool.rs","byte_start":473507,"byte_end":473574,"line_start":23,"line_end":23,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":2880},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/pool.rs","byte_start":473968,"byte_end":473972,"line_start":37,"line_end":37,"column_start":12,"column_end":16},"name":"fill","qualname":"<RRBPool<A>>::fill","value":"fn fill(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Fill the memory pool with preallocated chunks.\n","sig":null,"attributes":[{"value":"/ Fill the memory pool with preallocated chunks.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/pool.rs","byte_start":473906,"byte_end":473956,"line_start":36,"line_end":36,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2881},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/pool.rs","byte_start":474136,"byte_end":474150,"line_start":44,"line_end":44,"column_start":12,"column_end":26},"name":"node_pool_size","qualname":"<RRBPool<A>>::node_pool_size","value":"fn node_pool_size(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the size of the node subpool.\n","sig":null,"attributes":[{"value":"/ Get the size of the node subpool.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/pool.rs","byte_start":474087,"byte_end":474124,"line_start":43,"line_end":43,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2882},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/pool.rs","byte_start":474273,"byte_end":474287,"line_start":49,"line_end":49,"column_start":12,"column_end":26},"name":"leaf_pool_size","qualname":"<RRBPool<A>>::leaf_pool_size","value":"fn leaf_pool_size(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the size of the leaf node subpool.\n","sig":null,"attributes":[{"value":"/ Get the size of the leaf node subpool.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/pool.rs","byte_start":474219,"byte_end":474261,"line_start":48,"line_end":48,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2883},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/pool.rs","byte_start":474412,"byte_end":474432,"line_start":54,"line_end":54,"column_start":12,"column_end":32},"name":"size_table_pool_size","qualname":"<RRBPool<A>>::size_table_pool_size","value":"fn size_table_pool_size(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the size of the size table subpool.\n","sig":null,"attributes":[{"value":"/ Get the size of the size table subpool.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/pool.rs","byte_start":474357,"byte_end":474400,"line_start":53,"line_end":53,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2886},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/pool.rs","byte_start":474601,"byte_end":474608,"line_start":61,"line_end":61,"column_start":8,"column_end":15},"name":"default","qualname":"<RRBPool<A> as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":" Construct a pool with a reasonable default pool size.\n","sig":null,"attributes":[{"value":"/ Construct a pool with a reasonable default pool size.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/pool.rs","byte_start":474536,"byte_end":474593,"line_start":60,"line_end":60,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2889},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/pool.rs","byte_start":474697,"byte_end":474702,"line_start":67,"line_end":67,"column_start":8,"column_end":13},"name":"clone","qualname":"<RRBPool<A> as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2893},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/rayon.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rayon","qualname":"::vector::rayon","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/rayon.rs","parent":null,"children":[{"krate":0,"index":2894},{"krate":0,"index":2895},{"krate":0,"index":2896},{"krate":0,"index":2899},{"krate":0,"index":2902},{"krate":0,"index":2905},{"krate":0,"index":2908},{"krate":0,"index":2911},{"krate":0,"index":2912},{"krate":0,"index":2915},{"krate":0,"index":2918},{"krate":0,"index":2921},{"krate":0,"index":2924},{"krate":0,"index":2930},{"krate":0,"index":2936},{"krate":0,"index":2940},{"krate":0,"index":2946},{"krate":0,"index":2954},{"krate":0,"index":2958},{"krate":0,"index":2964},{"krate":0,"index":2972},{"krate":0,"index":2976},{"krate":0,"index":2983},{"krate":0,"index":2987}],"decl_id":null,"docs":" Parallel iterators.","sig":null,"attributes":[{"value":"cfg(all(threadsafe, any(test, feature = \"rayon\")))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":357194,"byte_end":357247,"line_start":71,"line_end":71,"column_start":1,"column_end":54}},{"value":"/ Parallel iterators.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/rayon.rs","byte_start":474897,"byte_end":474920,"line_start":1,"line_end":1,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/rayon.rs","byte_start":474921,"byte_end":474924,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ These are only available when using the `rayon` feature flag.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/rayon.rs","byte_start":474925,"byte_end":474990,"line_start":3,"line_end":3,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2929},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/rayon.rs","byte_start":475385,"byte_end":475393,"line_start":18,"line_end":18,"column_start":8,"column_end":16},"name":"par_iter","qualname":"<Vector<A> as rayon::iter::IntoParallelRefIterator>::par_iter","value":"fn par_iter(&'a Self) -> Self::Iter","parent":{"krate":27,"index":4652},"children":[],"decl_id":{"krate":27,"index":4656},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2935},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/rayon.rs","byte_start":475658,"byte_end":475670,"line_start":32,"line_end":32,"column_start":8,"column_end":20},"name":"par_iter_mut","qualname":"<Vector<A> as rayon::iter::IntoParallelRefMutIterator>::par_iter_mut","value":"fn par_iter_mut(&'a mut Self) -> Self::Iter","parent":{"krate":27,"index":4663},"children":[],"decl_id":{"krate":27,"index":4667},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2936},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/rayon.rs","byte_start":475877,"byte_end":475884,"line_start":42,"line_end":42,"column_start":12,"column_end":19},"name":"ParIter","qualname":"::vector::rayon::ParIter","value":"ParIter {  }","parent":null,"children":[{"krate":0,"index":2939}],"decl_id":null,"docs":" A parallel iterator for [`Vector`][Vector].","sig":null,"attributes":[{"value":"/ A parallel iterator for [`Vector`][Vector].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/rayon.rs","byte_start":475778,"byte_end":475825,"line_start":39,"line_end":39,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/rayon.rs","byte_start":475826,"byte_end":475829,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ [Vector]: ../struct.Vector.html","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/rayon.rs","byte_start":475830,"byte_end":475865,"line_start":41,"line_end":41,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2944},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/rayon.rs","byte_start":476076,"byte_end":476091,"line_start":55,"line_end":55,"column_start":8,"column_end":23},"name":"drive_unindexed","qualname":"<ParIter as rayon::iter::ParallelIterator>::drive_unindexed","value":"fn drive_unindexed<C>(Self, C) -> C::Result where\nC: UnindexedConsumer<Self::Item>","parent":{"krate":27,"index":4674},"children":[],"decl_id":{"krate":27,"index":4874},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2949},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/rayon.rs","byte_start":476328,"byte_end":476333,"line_start":67,"line_end":67,"column_start":8,"column_end":13},"name":"drive","qualname":"<ParIter as rayon::iter::IndexedParallelIterator>::drive","value":"fn drive<C>(Self, C) -> C::Result where C: Consumer<Self::Item>","parent":{"krate":27,"index":4882},"children":[],"decl_id":{"krate":27,"index":4943},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2951},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/rayon.rs","byte_start":476463,"byte_end":476466,"line_start":74,"line_end":74,"column_start":8,"column_end":11},"name":"len","qualname":"<ParIter as rayon::iter::IndexedParallelIterator>::len","value":"fn len(&Self) -> usize","parent":{"krate":27,"index":4882},"children":[],"decl_id":{"krate":27,"index":4942},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2952},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/rayon.rs","byte_start":476524,"byte_end":476537,"line_start":78,"line_end":78,"column_start":8,"column_end":21},"name":"with_producer","qualname":"<ParIter as rayon::iter::IndexedParallelIterator>::with_producer","value":"fn with_producer<CB>(Self, CB) -> CB::Output where\nCB: ProducerCallback<Self::Item>","parent":{"krate":27,"index":4882},"children":[],"decl_id":{"krate":27,"index":4945},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2954},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/rayon.rs","byte_start":476814,"byte_end":476824,"line_start":89,"line_end":89,"column_start":12,"column_end":22},"name":"ParIterMut","qualname":"::vector::rayon::ParIterMut","value":"ParIterMut {  }","parent":null,"children":[{"krate":0,"index":2957}],"decl_id":null,"docs":" A mutable parallel iterator for [`Vector`][Vector].","sig":null,"attributes":[{"value":"/ A mutable parallel iterator for [`Vector`][Vector].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/rayon.rs","byte_start":476707,"byte_end":476762,"line_start":86,"line_end":86,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/rayon.rs","byte_start":476763,"byte_end":476766,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ [Vector]: ../struct.Vector.html","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/rayon.rs","byte_start":476767,"byte_end":476802,"line_start":88,"line_end":88,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2962},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/rayon.rs","byte_start":477026,"byte_end":477041,"line_start":102,"line_end":102,"column_start":8,"column_end":23},"name":"drive_unindexed","qualname":"<ParIterMut as rayon::iter::ParallelIterator>::drive_unindexed","value":"fn drive_unindexed<C>(Self, C) -> C::Result where\nC: UnindexedConsumer<Self::Item>","parent":{"krate":27,"index":4674},"children":[],"decl_id":{"krate":27,"index":4874},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2967},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/rayon.rs","byte_start":477281,"byte_end":477286,"line_start":114,"line_end":114,"column_start":8,"column_end":13},"name":"drive","qualname":"<ParIterMut as rayon::iter::IndexedParallelIterator>::drive","value":"fn drive<C>(Self, C) -> C::Result where C: Consumer<Self::Item>","parent":{"krate":27,"index":4882},"children":[],"decl_id":{"krate":27,"index":4943},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2969},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/rayon.rs","byte_start":477416,"byte_end":477419,"line_start":121,"line_end":121,"column_start":8,"column_end":11},"name":"len","qualname":"<ParIterMut as rayon::iter::IndexedParallelIterator>::len","value":"fn len(&Self) -> usize","parent":{"krate":27,"index":4882},"children":[],"decl_id":{"krate":27,"index":4942},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2970},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/rayon.rs","byte_start":477477,"byte_end":477490,"line_start":125,"line_end":125,"column_start":8,"column_end":21},"name":"with_producer","qualname":"<ParIterMut as rayon::iter::IndexedParallelIterator>::with_producer","value":"fn with_producer<CB>(Self, CB) -> CB::Output where\nCB: ProducerCallback<Self::Item>","parent":{"krate":27,"index":4882},"children":[],"decl_id":{"krate":27,"index":4945},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2995},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":359983,"byte_end":359989,"line_start":145,"line_end":145,"column_start":12,"column_end":18},"name":"Vector","qualname":"::vector::Vector","value":"Vector {  }","parent":null,"children":[{"krate":0,"index":2997}],"decl_id":null,"docs":" A persistent vector.","sig":null,"attributes":[{"value":"/ A persistent vector.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":357919,"byte_end":357943,"line_start":109,"line_end":109,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":357944,"byte_end":357947,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ This is a sequence of elements in insertion order - if you need a list of","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":357948,"byte_end":358025,"line_start":111,"line_end":111,"column_start":1,"column_end":78}},{"value":"/ things, any kind of list of things, this is what you're looking for.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":358026,"byte_end":358098,"line_start":112,"line_end":112,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":358099,"byte_end":358102,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ It's implemented as an [RRB vector][rrbpaper] with [smart head/tail","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":358103,"byte_end":358174,"line_start":114,"line_end":114,"column_start":1,"column_end":72}},{"value":"/ chunking][chunkedseq]. In performance terms, this means that practically","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":358175,"byte_end":358251,"line_start":115,"line_end":115,"column_start":1,"column_end":77}},{"value":"/ every operation is O(log n), except push/pop on both sides, which will be","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":358252,"byte_end":358329,"line_start":116,"line_end":116,"column_start":1,"column_end":78}},{"value":"/ O(1) amortised, and O(log n) in the worst case. In practice, the push/pop","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":358330,"byte_end":358407,"line_start":117,"line_end":117,"column_start":1,"column_end":78}},{"value":"/ operations will be blindingly fast, nearly on par with the native","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":358408,"byte_end":358477,"line_start":118,"line_end":118,"column_start":1,"column_end":70}},{"value":"/ [`VecDeque`][VecDeque], and other operations will have decent, if not high,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":358478,"byte_end":358557,"line_start":119,"line_end":119,"column_start":1,"column_end":80}},{"value":"/ performance, but they all have more or less the same O(log n) complexity, so","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":358558,"byte_end":358638,"line_start":120,"line_end":120,"column_start":1,"column_end":81}},{"value":"/ you don't need to keep their performance characteristics in mind -","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":358639,"byte_end":358709,"line_start":121,"line_end":121,"column_start":1,"column_end":71}},{"value":"/ everything, even splitting and merging, is safe to use and never too slow.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":358710,"byte_end":358788,"line_start":122,"line_end":122,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":358789,"byte_end":358792,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ ## Performance Notes","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":358793,"byte_end":358817,"line_start":124,"line_end":124,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":358818,"byte_end":358821,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ Because of the head/tail chunking technique, until you push a number of","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":358822,"byte_end":358897,"line_start":126,"line_end":126,"column_start":1,"column_end":76}},{"value":"/ items above double the tree's branching factor (that's `self.len()` = 2 ×","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":358898,"byte_end":358976,"line_start":127,"line_end":127,"column_start":1,"column_end":78}},{"value":"/ *k* (where *k* = 64) = 128) on either side, the data structure is still just","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":358977,"byte_end":359057,"line_start":128,"line_end":128,"column_start":1,"column_end":81}},{"value":"/ a handful of arrays, not yet an RRB tree, so you'll see performance and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":359058,"byte_end":359133,"line_start":129,"line_end":129,"column_start":1,"column_end":76}},{"value":"/ memory characteristics similar to [`Vec`][Vec] or [`VecDeque`][VecDeque].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":359134,"byte_end":359211,"line_start":130,"line_end":130,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":359212,"byte_end":359215,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ This means that the structure always preallocates four chunks of size *k*","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":359216,"byte_end":359293,"line_start":132,"line_end":132,"column_start":1,"column_end":78}},{"value":"/ (*k* being the tree's branching factor), equivalent to a [`Vec`][Vec] with","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":359294,"byte_end":359372,"line_start":133,"line_end":133,"column_start":1,"column_end":79}},{"value":"/ an initial capacity of 256. Beyond that, it will allocate tree nodes of","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":359373,"byte_end":359448,"line_start":134,"line_end":134,"column_start":1,"column_end":76}},{"value":"/ capacity *k* as needed.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":359449,"byte_end":359476,"line_start":135,"line_end":135,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":359477,"byte_end":359480,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ In addition, vectors start out as single chunks, and only expand into the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":359481,"byte_end":359558,"line_start":137,"line_end":137,"column_start":1,"column_end":78}},{"value":"/ full data structure once you go past the chunk size. This makes them","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":359559,"byte_end":359631,"line_start":138,"line_end":138,"column_start":1,"column_end":73}},{"value":"/ perform identically to [`Vec`][Vec] at small sizes.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":359632,"byte_end":359687,"line_start":139,"line_end":139,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":359688,"byte_end":359691,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ [rrbpaper]: https://infoscience.epfl.ch/record/213452/files/rrbvector.pdf","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":359692,"byte_end":359769,"line_start":141,"line_end":141,"column_start":1,"column_end":78}},{"value":"/ [chunkedseq]: http://deepsea.inria.fr/pasl/chunkedseq.pdf","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":359770,"byte_end":359831,"line_start":142,"line_end":142,"column_start":1,"column_end":62}},{"value":"/ [Vec]: https://doc.rust-lang.org/std/vec/struct.Vec.html","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":359832,"byte_end":359892,"line_start":143,"line_end":143,"column_start":1,"column_end":61}},{"value":"/ [VecDeque]: https://doc.rust-lang.org/std/collections/struct.VecDeque.html","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":359893,"byte_end":359971,"line_start":144,"line_end":144,"column_start":1,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":3012},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":360198,"byte_end":360201,"line_start":156,"line_end":156,"column_start":12,"column_end":15},"name":"Rrb","qualname":"::vector::Rrb","value":"Rrb {  }","parent":null,"children":[{"krate":0,"index":3014},{"krate":0,"index":3015},{"krate":0,"index":3016},{"krate":0,"index":3017},{"krate":0,"index":3018},{"krate":0,"index":3019},{"krate":0,"index":3020}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3023},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":360442,"byte_end":360447,"line_start":167,"line_end":167,"column_start":8,"column_end":13},"name":"clone","qualname":"<Rrb<A> as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3026},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":361082,"byte_end":361086,"line_start":186,"line_end":186,"column_start":12,"column_end":16},"name":"pool","qualname":"<Vector<A>>::pool","value":"fn pool(&Self) -> &RRBPool<A>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the memory pool this `Vector` is using.","sig":null,"attributes":[{"value":"/ Get a reference to the memory pool this `Vector` is using.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":360820,"byte_end":360882,"line_start":181,"line_end":181,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":360887,"byte_end":360890,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ Note that if you didn't specifically construct it with a pool, you'll","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":360895,"byte_end":360968,"line_start":183,"line_end":183,"column_start":5,"column_end":78}},{"value":"/ get back a reference to a pool of size 0.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":360973,"byte_end":361018,"line_start":184,"line_end":184,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3031},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":363886,"byte_end":363889,"line_start":265,"line_end":265,"column_start":12,"column_end":15},"name":"new","qualname":"<Vector<A>>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct an empty vector.\n","sig":null,"attributes":[{"value":"/ Construct an empty vector.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":363828,"byte_end":363858,"line_start":263,"line_end":263,"column_start":5,"column_end":35}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":363863,"byte_end":363874,"line_start":264,"line_end":264,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3032},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":364511,"byte_end":364514,"line_start":292,"line_end":292,"column_start":12,"column_end":15},"name":"len","qualname":"<Vector<A>>::len","value":"fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the length of a vector.","sig":null,"attributes":[{"value":"/ Get the length of a vector.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":364259,"byte_end":364290,"line_start":280,"line_end":280,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":364295,"byte_end":364298,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ Time: O(1)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":364303,"byte_end":364317,"line_start":282,"line_end":282,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":364322,"byte_end":364325,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":364330,"byte_end":364344,"line_start":284,"line_end":284,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":364349,"byte_end":364352,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":364357,"byte_end":364364,"line_start":286,"line_end":286,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":364369,"byte_end":364404,"line_start":287,"line_end":287,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(5, vector![1, 2, 3, 4, 5].len());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":364409,"byte_end":364457,"line_start":288,"line_end":288,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":364462,"byte_end":364469,"line_start":289,"line_end":289,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":364474,"byte_end":364483,"line_start":290,"line_end":290,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":364488,"byte_end":364499,"line_start":291,"line_end":291,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3033},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":365098,"byte_end":365106,"line_start":315,"line_end":315,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Vector<A>>::is_empty","value":"fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test whether a vector is empty.","sig":null,"attributes":[{"value":"/ Test whether a vector is empty.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":364715,"byte_end":364750,"line_start":300,"line_end":300,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":364755,"byte_end":364758,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ Time: O(1)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":364763,"byte_end":364777,"line_start":302,"line_end":302,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":364782,"byte_end":364785,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":364790,"byte_end":364804,"line_start":304,"line_end":304,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":364809,"byte_end":364812,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":364817,"byte_end":364824,"line_start":306,"line_end":306,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":364829,"byte_end":364864,"line_start":307,"line_end":307,"column_start":5,"column_end":40}},{"value":"/ # use im::Vector;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":364869,"byte_end":364890,"line_start":308,"line_end":308,"column_start":5,"column_end":26}},{"value":"/ let vec = vector![\"Joe\", \"Mike\", \"Robert\"];","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":364895,"byte_end":364942,"line_start":309,"line_end":309,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(false, vec.is_empty());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":364947,"byte_end":364985,"line_start":310,"line_end":310,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(true, Vector::<i32>::new().is_empty());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":364990,"byte_end":365044,"line_start":311,"line_end":311,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":365049,"byte_end":365056,"line_start":312,"line_end":312,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":365061,"byte_end":365070,"line_start":313,"line_end":313,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":365075,"byte_end":365086,"line_start":314,"line_end":314,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3034},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":365889,"byte_end":365898,"line_start":336,"line_end":336,"column_start":12,"column_end":21},"name":"is_inline","qualname":"<Vector<A>>::is_inline","value":"fn is_inline(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test whether a vector is currently inlined.","sig":null,"attributes":[{"value":"/ Test whether a vector is currently inlined.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":365159,"byte_end":365206,"line_start":319,"line_end":319,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":365211,"byte_end":365214,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ Vectors small enough that their contents could be stored entirely inside","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":365219,"byte_end":365295,"line_start":321,"line_end":321,"column_start":5,"column_end":81}},{"value":"/ the space of `std::mem::size_of::<Vector<A>>()` bytes are stored inline on","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":365300,"byte_end":365378,"line_start":322,"line_end":322,"column_start":5,"column_end":83}},{"value":"/ the stack instead of allocating any chunks. This method returns `true` if","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":365383,"byte_end":365460,"line_start":323,"line_end":323,"column_start":5,"column_end":82}},{"value":"/ this vector is currently inlined, or `false` if it currently has chunks allocated","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":365465,"byte_end":365550,"line_start":324,"line_end":324,"column_start":5,"column_end":90}},{"value":"/ on the heap.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":365555,"byte_end":365571,"line_start":325,"line_end":325,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":365576,"byte_end":365579,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ This may be useful in conjunction with [`ptr_eq()`][ptr_eq], which checks if","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":365584,"byte_end":365664,"line_start":327,"line_end":327,"column_start":5,"column_end":85}},{"value":"/ two vectors' heap allocations are the same, and thus will never return `true`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":365669,"byte_end":365750,"line_start":328,"line_end":328,"column_start":5,"column_end":86}},{"value":"/ for inlined vectors.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":365755,"byte_end":365779,"line_start":329,"line_end":329,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":365784,"byte_end":365787,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ Time: O(1)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":365792,"byte_end":365806,"line_start":331,"line_end":331,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":365811,"byte_end":365814,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ [ptr_eq]: #method.ptr_eq","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":365819,"byte_end":365847,"line_start":333,"line_end":333,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":365852,"byte_end":365861,"line_start":334,"line_end":334,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":365866,"byte_end":365877,"line_start":335,"line_end":335,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3035},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":366792,"byte_end":366798,"line_start":355,"line_end":355,"column_start":12,"column_end":18},"name":"ptr_eq","qualname":"<Vector<A>>::ptr_eq","value":"fn ptr_eq(&Self, &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test whether two vectors refer to the same content in memory.","sig":null,"attributes":[{"value":"/ Test whether two vectors refer to the same content in memory.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":365972,"byte_end":366037,"line_start":340,"line_end":340,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":366042,"byte_end":366045,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ This uses the following rules to determine equality:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":366050,"byte_end":366106,"line_start":342,"line_end":342,"column_start":5,"column_end":61}},{"value":"/ * If the two sides are references to the same vector, return true.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":366111,"byte_end":366181,"line_start":343,"line_end":343,"column_start":5,"column_end":75}},{"value":"/ * If the two sides are single chunk vectors pointing to the same chunk, return true.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":366186,"byte_end":366274,"line_start":344,"line_end":344,"column_start":5,"column_end":93}},{"value":"/ * If the two sides are full trees pointing to the same chunks, return true.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":366279,"byte_end":366358,"line_start":345,"line_end":345,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":366363,"byte_end":366366,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ This would return true if you're comparing a vector to itself, or","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":366371,"byte_end":366440,"line_start":347,"line_end":347,"column_start":5,"column_end":74}},{"value":"/ if you're comparing a vector to a fresh clone of itself. The exception to this is","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":366445,"byte_end":366530,"line_start":348,"line_end":348,"column_start":5,"column_end":90}},{"value":"/ if you've cloned an inline array (ie. an array with so few elements they can fit","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":366535,"byte_end":366619,"line_start":349,"line_end":349,"column_start":5,"column_end":89}},{"value":"/ inside the space a `Vector` allocates for its pointers, so there are no heap allocations","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":366624,"byte_end":366716,"line_start":350,"line_end":350,"column_start":5,"column_end":97}},{"value":"/ to compare).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":366721,"byte_end":366737,"line_start":351,"line_end":351,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":366742,"byte_end":366745,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Time: O(1)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":366750,"byte_end":366764,"line_start":353,"line_end":353,"column_start":5,"column_end":19}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":366769,"byte_end":366780,"line_start":354,"line_end":354,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3038},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":367811,"byte_end":367815,"line_start":383,"line_end":383,"column_start":12,"column_end":16},"name":"iter","qualname":"<Vector<A>>::iter","value":"fn iter(&Self) -> Iter<, A>","parent":null,"children":[],"decl_id":null,"docs":" Get an iterator over a vector.","sig":null,"attributes":[{"value":"/ Get an iterator over a vector.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":367708,"byte_end":367742,"line_start":378,"line_end":378,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":367747,"byte_end":367750,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ Time: O(1)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":367755,"byte_end":367769,"line_start":380,"line_end":380,"column_start":5,"column_end":19}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":367774,"byte_end":367783,"line_start":381,"line_end":381,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":367788,"byte_end":367799,"line_start":382,"line_end":382,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3039},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":367985,"byte_end":367993,"line_start":392,"line_end":392,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<Vector<A>>::iter_mut","value":"fn iter_mut(&mut Self) -> IterMut<, A>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable iterator over a vector.","sig":null,"attributes":[{"value":"/ Get a mutable iterator over a vector.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":367875,"byte_end":367916,"line_start":387,"line_end":387,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":367921,"byte_end":367924,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ Time: O(1)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":367929,"byte_end":367943,"line_start":389,"line_end":389,"column_start":5,"column_end":19}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":367948,"byte_end":367957,"line_start":390,"line_end":390,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":367962,"byte_end":367973,"line_start":391,"line_end":391,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3040},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":368465,"byte_end":368471,"line_start":407,"line_end":407,"column_start":12,"column_end":18},"name":"leaves","qualname":"<Vector<A>>::leaves","value":"fn leaves(&Self) -> Chunks<, A>","parent":null,"children":[],"decl_id":null,"docs":" Get an iterator over the leaf nodes of a vector.","sig":null,"attributes":[{"value":"/ Get an iterator over the leaf nodes of a vector.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":368063,"byte_end":368115,"line_start":396,"line_end":396,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":368120,"byte_end":368123,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ This returns an iterator over the [`Chunk`s][Chunk] at the leaves of the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":368128,"byte_end":368204,"line_start":398,"line_end":398,"column_start":5,"column_end":81}},{"value":"/ RRB tree. These are useful for efficient parallelisation of work on","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":368209,"byte_end":368280,"line_start":399,"line_end":399,"column_start":5,"column_end":76}},{"value":"/ the vector, but should not be used for basic iteration.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":368285,"byte_end":368344,"line_start":400,"line_end":400,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":368349,"byte_end":368352,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ Time: O(1)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":368357,"byte_end":368371,"line_start":402,"line_end":402,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":368376,"byte_end":368379,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ [Chunk]: ../chunk/struct.Chunk.html","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":368384,"byte_end":368423,"line_start":404,"line_end":404,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":368428,"byte_end":368437,"line_start":405,"line_end":405,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":368442,"byte_end":368453,"line_start":406,"line_end":406,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3041},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":368943,"byte_end":368953,"line_start":422,"line_end":422,"column_start":12,"column_end":22},"name":"leaves_mut","qualname":"<Vector<A>>::leaves_mut","value":"fn leaves_mut(&mut Self) -> ChunksMut<, A>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable iterator over the leaf nodes of a vector.\n This returns an iterator over the [`Chunk`s][Chunk] at the leaves of the\n RRB tree. These are useful for efficient parallelisation of work on\n the vector, but should not be used for basic iteration.","sig":null,"attributes":[{"value":"/ Get a mutable iterator over the leaf nodes of a vector.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":368535,"byte_end":368594,"line_start":411,"line_end":411,"column_start":5,"column_end":64}},{"value":"/ This returns an iterator over the [`Chunk`s][Chunk] at the leaves of the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":368606,"byte_end":368682,"line_start":413,"line_end":413,"column_start":5,"column_end":81}},{"value":"/ RRB tree. These are useful for efficient parallelisation of work on","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":368687,"byte_end":368758,"line_start":414,"line_end":414,"column_start":5,"column_end":76}},{"value":"/ the vector, but should not be used for basic iteration.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":368763,"byte_end":368822,"line_start":415,"line_end":415,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":368827,"byte_end":368830,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ Time: O(1)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":368835,"byte_end":368849,"line_start":417,"line_end":417,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":368854,"byte_end":368857,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ [Chunk]: ../chunk/struct.Chunk.html","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":368862,"byte_end":368901,"line_start":419,"line_end":419,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":368906,"byte_end":368915,"line_start":420,"line_end":420,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":368920,"byte_end":368931,"line_start":421,"line_end":421,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3042},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":369183,"byte_end":369188,"line_start":433,"line_end":433,"column_start":12,"column_end":17},"name":"focus","qualname":"<Vector<A>>::focus","value":"fn focus(&Self) -> Focus<, A>","parent":null,"children":[],"decl_id":null,"docs":" Construct a [`Focus`][Focus] for a vector.","sig":null,"attributes":[{"value":"/ Construct a [`Focus`][Focus] for a vector.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":369027,"byte_end":369073,"line_start":426,"line_end":426,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":369078,"byte_end":369081,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ Time: O(1)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":369086,"byte_end":369100,"line_start":428,"line_end":428,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":369105,"byte_end":369108,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ [Focus]: enum.Focus.html","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":369113,"byte_end":369141,"line_start":430,"line_end":430,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":369146,"byte_end":369155,"line_start":431,"line_end":431,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":369160,"byte_end":369171,"line_start":432,"line_end":432,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3043},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":369418,"byte_end":369427,"line_start":444,"line_end":444,"column_start":12,"column_end":21},"name":"focus_mut","qualname":"<Vector<A>>::focus_mut","value":"fn focus_mut(&mut Self) -> FocusMut<, A>","parent":null,"children":[],"decl_id":null,"docs":" Construct a [`FocusMut`][FocusMut] for a vector.","sig":null,"attributes":[{"value":"/ Construct a [`FocusMut`][FocusMut] for a vector.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":369250,"byte_end":369302,"line_start":437,"line_end":437,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":369307,"byte_end":369310,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ Time: O(1)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":369315,"byte_end":369329,"line_start":439,"line_end":439,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":369334,"byte_end":369337,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ [FocusMut]: enum.FocusMut.html","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":369342,"byte_end":369376,"line_start":441,"line_end":441,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":369381,"byte_end":369390,"line_start":442,"line_end":442,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":369395,"byte_end":369406,"line_start":443,"line_end":443,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3044},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":369946,"byte_end":369949,"line_start":464,"line_end":464,"column_start":12,"column_end":15},"name":"get","qualname":"<Vector<A>>::get","value":"fn get(&Self, usize) -> Option<&A>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the value at index `index` in a vector.","sig":null,"attributes":[{"value":"/ Get a reference to the value at index `index` in a vector.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":369499,"byte_end":369561,"line_start":448,"line_end":448,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":369566,"byte_end":369569,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the index is out of bounds.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":369574,"byte_end":369623,"line_start":450,"line_end":450,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":369628,"byte_end":369631,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":369636,"byte_end":369654,"line_start":452,"line_end":452,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":369659,"byte_end":369662,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":369667,"byte_end":369681,"line_start":454,"line_end":454,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":369686,"byte_end":369689,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":369694,"byte_end":369701,"line_start":456,"line_end":456,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":369706,"byte_end":369741,"line_start":457,"line_end":457,"column_start":5,"column_end":40}},{"value":"/ # use im::Vector;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":369746,"byte_end":369767,"line_start":458,"line_end":458,"column_start":5,"column_end":26}},{"value":"/ let vec = vector![\"Joe\", \"Mike\", \"Robert\"];","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":369772,"byte_end":369819,"line_start":459,"line_end":459,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(Some(&\"Robert\"), vec.get(2));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":369824,"byte_end":369868,"line_start":460,"line_end":460,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(None, vec.get(5));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":369873,"byte_end":369906,"line_start":461,"line_end":461,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":369911,"byte_end":369918,"line_start":462,"line_end":462,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":369923,"byte_end":369934,"line_start":463,"line_end":463,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3045},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":371695,"byte_end":371702,"line_start":521,"line_end":521,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Vector<A>>::get_mut","value":"fn get_mut(&mut Self, usize) -> Option<&mut A>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the value at index `index` in a\n vector.","sig":null,"attributes":[{"value":"/ Get a mutable reference to the value at index `index` in a","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":371107,"byte_end":371169,"line_start":500,"line_end":500,"column_start":5,"column_end":67}},{"value":"/ vector.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":371174,"byte_end":371185,"line_start":501,"line_end":501,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":371190,"byte_end":371193,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the index is out of bounds.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":371198,"byte_end":371247,"line_start":503,"line_end":503,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":371252,"byte_end":371255,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":371260,"byte_end":371278,"line_start":505,"line_end":505,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":371283,"byte_end":371286,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":371291,"byte_end":371305,"line_start":507,"line_end":507,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":371310,"byte_end":371313,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":371318,"byte_end":371325,"line_start":509,"line_end":509,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":371330,"byte_end":371365,"line_start":510,"line_end":510,"column_start":5,"column_end":40}},{"value":"/ # use im::Vector;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":371370,"byte_end":371391,"line_start":511,"line_end":511,"column_start":5,"column_end":26}},{"value":"/ let mut vec = vector![\"Joe\", \"Mike\", \"Robert\"];","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":371396,"byte_end":371447,"line_start":512,"line_end":512,"column_start":5,"column_end":56}},{"value":"/ {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":371452,"byte_end":371457,"line_start":513,"line_end":513,"column_start":5,"column_end":10}},{"value":"/     let robert = vec.get_mut(2).unwrap();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":371462,"byte_end":371507,"line_start":514,"line_end":514,"column_start":5,"column_end":50}},{"value":"/     assert_eq!(&mut \"Robert\", robert);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":371512,"byte_end":371554,"line_start":515,"line_end":515,"column_start":5,"column_end":47}},{"value":"/     *robert = \"Bjarne\";","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":371559,"byte_end":371586,"line_start":516,"line_end":516,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":371591,"byte_end":371596,"line_start":517,"line_end":517,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(vector![\"Joe\", \"Mike\", \"Bjarne\"], vec);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":371601,"byte_end":371655,"line_start":518,"line_end":518,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":371660,"byte_end":371667,"line_start":519,"line_end":519,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":371672,"byte_end":371683,"line_start":520,"line_end":520,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3046},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":373517,"byte_end":373522,"line_start":569,"line_end":569,"column_start":12,"column_end":17},"name":"front","qualname":"<Vector<A>>::front","value":"fn front(&Self) -> Option<&A>","parent":null,"children":[],"decl_id":null,"docs":" Get the first element of a vector.","sig":null,"attributes":[{"value":"/ Get the first element of a vector.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":373346,"byte_end":373384,"line_start":562,"line_end":562,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":373389,"byte_end":373392,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ If the vector is empty, `None` is returned.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":373397,"byte_end":373444,"line_start":564,"line_end":564,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":373449,"byte_end":373452,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":373457,"byte_end":373475,"line_start":566,"line_end":566,"column_start":5,"column_end":23}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":373480,"byte_end":373489,"line_start":567,"line_end":567,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":373494,"byte_end":373505,"line_start":568,"line_end":568,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3047},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":373771,"byte_end":373780,"line_start":580,"line_end":580,"column_start":12,"column_end":21},"name":"front_mut","qualname":"<Vector<A>>::front_mut","value":"fn front_mut(&mut Self) -> Option<&mut A>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the first element of a vector.","sig":null,"attributes":[{"value":"/ Get a mutable reference to the first element of a vector.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":373577,"byte_end":373638,"line_start":573,"line_end":573,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":373643,"byte_end":373646,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ If the vector is empty, `None` is returned.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":373651,"byte_end":373698,"line_start":575,"line_end":575,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":373703,"byte_end":373706,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":373711,"byte_end":373729,"line_start":577,"line_end":577,"column_start":5,"column_end":23}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":373734,"byte_end":373743,"line_start":578,"line_end":578,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":373748,"byte_end":373759,"line_start":579,"line_end":579,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3048},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":374123,"byte_end":374127,"line_start":595,"line_end":595,"column_start":12,"column_end":16},"name":"head","qualname":"<Vector<A>>::head","value":"fn head(&Self) -> Option<&A>","parent":null,"children":[],"decl_id":null,"docs":" Get the first element of a vector.","sig":null,"attributes":[{"value":"/ Get the first element of a vector.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":373847,"byte_end":373885,"line_start":584,"line_end":584,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":373890,"byte_end":373893,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ If the vector is empty, `None` is returned.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":373898,"byte_end":373945,"line_start":586,"line_end":586,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":373950,"byte_end":373953,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ This is an alias for the [`front`][front] method.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":373958,"byte_end":374011,"line_start":588,"line_end":588,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":374016,"byte_end":374019,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":374024,"byte_end":374042,"line_start":590,"line_end":590,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":374047,"byte_end":374050,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ [front]: #method.front","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":374055,"byte_end":374081,"line_start":592,"line_end":592,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":374086,"byte_end":374095,"line_start":593,"line_end":593,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":374100,"byte_end":374111,"line_start":594,"line_end":594,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3049},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":374338,"byte_end":374342,"line_start":605,"line_end":605,"column_start":12,"column_end":16},"name":"back","qualname":"<Vector<A>>::back","value":"fn back(&Self) -> Option<&A>","parent":null,"children":[],"decl_id":null,"docs":" Get the last element of a vector.","sig":null,"attributes":[{"value":"/ Get the last element of a vector.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":374182,"byte_end":374219,"line_start":599,"line_end":599,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":374224,"byte_end":374227,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ If the vector is empty, `None` is returned.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":374232,"byte_end":374279,"line_start":601,"line_end":601,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":374284,"byte_end":374287,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":374292,"byte_end":374310,"line_start":603,"line_end":603,"column_start":5,"column_end":23}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":374315,"byte_end":374326,"line_start":604,"line_end":604,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3050},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":374666,"byte_end":374674,"line_start":619,"line_end":619,"column_start":12,"column_end":20},"name":"back_mut","qualname":"<Vector<A>>::back_mut","value":"fn back_mut(&mut Self) -> Option<&mut A>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the last element of a vector.","sig":null,"attributes":[{"value":"/ Get a mutable reference to the last element of a vector.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":374487,"byte_end":374547,"line_start":613,"line_end":613,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":374552,"byte_end":374555,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ If the vector is empty, `None` is returned.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":374560,"byte_end":374607,"line_start":615,"line_end":615,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":374612,"byte_end":374615,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":374620,"byte_end":374638,"line_start":617,"line_end":617,"column_start":5,"column_end":23}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":374643,"byte_end":374654,"line_start":618,"line_end":618,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3051},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":375129,"byte_end":375133,"line_start":639,"line_end":639,"column_start":12,"column_end":16},"name":"last","qualname":"<Vector<A>>::last","value":"fn last(&Self) -> Option<&A>","parent":null,"children":[],"decl_id":null,"docs":" Get the last element of a vector.","sig":null,"attributes":[{"value":"/ Get the last element of a vector.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":374858,"byte_end":374895,"line_start":628,"line_end":628,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":374900,"byte_end":374903,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ If the vector is empty, `None` is returned.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":374908,"byte_end":374955,"line_start":630,"line_end":630,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":374960,"byte_end":374963,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ This is an alias for the [`back`][back] method.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":374968,"byte_end":375019,"line_start":632,"line_end":632,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":375024,"byte_end":375027,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":375032,"byte_end":375050,"line_start":634,"line_end":634,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":375055,"byte_end":375058,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ [back]: #method.back","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":375063,"byte_end":375087,"line_start":636,"line_end":636,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":375092,"byte_end":375101,"line_start":637,"line_end":637,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":375106,"byte_end":375117,"line_start":638,"line_end":638,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3052},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":375735,"byte_end":375743,"line_start":661,"line_end":661,"column_start":12,"column_end":20},"name":"index_of","qualname":"<Vector<A>>::index_of","value":"fn index_of(&Self, &A) -> Option<usize> where A: PartialEq","parent":null,"children":[],"decl_id":null,"docs":" Get the index of a given element in the vector.","sig":null,"attributes":[{"value":"/ Get the index of a given element in the vector.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":375188,"byte_end":375239,"line_start":643,"line_end":643,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":375244,"byte_end":375247,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ Searches the vector for the first occurrence of a given value,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":375252,"byte_end":375318,"line_start":645,"line_end":645,"column_start":5,"column_end":71}},{"value":"/ and returns the index of the value if it's there. Otherwise,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":375323,"byte_end":375387,"line_start":646,"line_end":646,"column_start":5,"column_end":69}},{"value":"/ it returns `None`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":375392,"byte_end":375414,"line_start":647,"line_end":647,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":375419,"byte_end":375422,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ Time: O(n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":375427,"byte_end":375441,"line_start":649,"line_end":649,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":375446,"byte_end":375449,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":375454,"byte_end":375468,"line_start":651,"line_end":651,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":375473,"byte_end":375476,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":375481,"byte_end":375488,"line_start":653,"line_end":653,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":375493,"byte_end":375528,"line_start":654,"line_end":654,"column_start":5,"column_end":40}},{"value":"/ # use im::Vector;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":375533,"byte_end":375554,"line_start":655,"line_end":655,"column_start":5,"column_end":26}},{"value":"/ let mut vec = vector![1, 2, 3, 4, 5];","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":375559,"byte_end":375600,"line_start":656,"line_end":656,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(Some(2), vec.index_of(&3));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":375605,"byte_end":375647,"line_start":657,"line_end":657,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(None, vec.index_of(&31337));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":375652,"byte_end":375695,"line_start":658,"line_end":658,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":375700,"byte_end":375707,"line_start":659,"line_end":659,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":375712,"byte_end":375723,"line_start":660,"line_end":660,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3053},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":376557,"byte_end":376565,"line_start":692,"line_end":692,"column_start":12,"column_end":20},"name":"contains","qualname":"<Vector<A>>::contains","value":"fn contains(&Self, &A) -> bool where A: PartialEq","parent":null,"children":[],"decl_id":null,"docs":" Test if a given element is in the vector.","sig":null,"attributes":[{"value":"/ Test if a given element is in the vector.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":375987,"byte_end":376032,"line_start":673,"line_end":673,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":376037,"byte_end":376040,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ Searches the vector for the first occurrence of a given value,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":376045,"byte_end":376111,"line_start":675,"line_end":675,"column_start":5,"column_end":71}},{"value":"/ and returns `true` if it's there. If it's nowhere to be found","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":376116,"byte_end":376181,"line_start":676,"line_end":676,"column_start":5,"column_end":70}},{"value":"/ in the vector, it returns `false`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":376186,"byte_end":376224,"line_start":677,"line_end":677,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":376229,"byte_end":376232,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ Time: O(n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":376237,"byte_end":376251,"line_start":679,"line_end":679,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":376256,"byte_end":376259,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":376264,"byte_end":376278,"line_start":681,"line_end":681,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":376283,"byte_end":376286,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":376291,"byte_end":376298,"line_start":683,"line_end":683,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":376303,"byte_end":376338,"line_start":684,"line_end":684,"column_start":5,"column_end":40}},{"value":"/ # use im::Vector;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":376343,"byte_end":376364,"line_start":685,"line_end":685,"column_start":5,"column_end":26}},{"value":"/ let mut vec = vector![1, 2, 3, 4, 5];","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":376369,"byte_end":376410,"line_start":686,"line_end":686,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(true, vec.contains(&3));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":376415,"byte_end":376454,"line_start":687,"line_end":687,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(false, vec.contains(&31337));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":376459,"byte_end":376503,"line_start":688,"line_end":688,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":376508,"byte_end":376515,"line_start":689,"line_end":689,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":376520,"byte_end":376529,"line_start":690,"line_end":690,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":376534,"byte_end":376545,"line_start":691,"line_end":691,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3054},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":376883,"byte_end":376888,"line_start":705,"line_end":705,"column_start":12,"column_end":17},"name":"clear","qualname":"<Vector<A>>::clear","value":"fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Discard all elements from the vector.","sig":null,"attributes":[{"value":"/ Discard all elements from the vector.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":376680,"byte_end":376721,"line_start":699,"line_end":699,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":376726,"byte_end":376729,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ This leaves you with an empty vector, and all elements that","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":376734,"byte_end":376797,"line_start":701,"line_end":701,"column_start":5,"column_end":68}},{"value":"/ were previously inside it are dropped.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":376802,"byte_end":376844,"line_start":702,"line_end":702,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":376849,"byte_end":376852,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ Time: O(n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":376857,"byte_end":376871,"line_start":704,"line_end":704,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":3055},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":377621,"byte_end":377637,"line_start":725,"line_end":725,"column_start":12,"column_end":28},"name":"binary_search_by","qualname":"<Vector<A>>::binary_search_by","value":"fn binary_search_by<F>(&Self, F) -> Result<usize, usize> where\nF: for<'_> FnMut(&'_ A) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Binary search a sorted vector for a given element using a comparator\n function.","sig":null,"attributes":[{"value":"/ Binary search a sorted vector for a given element using a comparator","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":377028,"byte_end":377100,"line_start":711,"line_end":711,"column_start":5,"column_end":77}},{"value":"/ function.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":377105,"byte_end":377118,"line_start":712,"line_end":712,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":377123,"byte_end":377126,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ Assumes the vector has already been sorted using the same comparator","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":377131,"byte_end":377203,"line_start":714,"line_end":714,"column_start":5,"column_end":77}},{"value":"/ function, eg. by using [`sort_by`][sort_by].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":377208,"byte_end":377256,"line_start":715,"line_end":715,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":377261,"byte_end":377264,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ If the value is found, it returns `Ok(index)` where `index` is the index","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":377269,"byte_end":377345,"line_start":717,"line_end":717,"column_start":5,"column_end":81}},{"value":"/ of the element. If the value isn't found, it returns `Err(index)` where","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":377350,"byte_end":377425,"line_start":718,"line_end":718,"column_start":5,"column_end":80}},{"value":"/ `index` is the index at which the element would need to be inserted to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":377430,"byte_end":377504,"line_start":719,"line_end":719,"column_start":5,"column_end":79}},{"value":"/ maintain sorted order.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":377509,"byte_end":377535,"line_start":720,"line_end":720,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":377540,"byte_end":377543,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":377548,"byte_end":377566,"line_start":722,"line_end":722,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":377571,"byte_end":377574,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ [sort_by]: #method.sort_by","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":377579,"byte_end":377609,"line_start":724,"line_end":724,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":3057},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":378665,"byte_end":378678,"line_start":758,"line_end":758,"column_start":12,"column_end":25},"name":"binary_search","qualname":"<Vector<A>>::binary_search","value":"fn binary_search(&Self, &A) -> Result<usize, usize> where A: Ord","parent":null,"children":[],"decl_id":null,"docs":" Binary search a sorted vector for a given element.","sig":null,"attributes":[{"value":"/ Binary search a sorted vector for a given element.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":378289,"byte_end":378343,"line_start":750,"line_end":750,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":378348,"byte_end":378351,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ If the value is found, it returns `Ok(index)` where `index` is the index","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":378356,"byte_end":378432,"line_start":752,"line_end":752,"column_start":5,"column_end":81}},{"value":"/ of the element. If the value isn't found, it returns `Err(index)` where","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":378437,"byte_end":378512,"line_start":753,"line_end":753,"column_start":5,"column_end":80}},{"value":"/ `index` is the index at which the element would need to be inserted to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":378517,"byte_end":378591,"line_start":754,"line_end":754,"column_start":5,"column_end":79}},{"value":"/ maintain sorted order.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":378596,"byte_end":378622,"line_start":755,"line_end":755,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":378627,"byte_end":378630,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":378635,"byte_end":378653,"line_start":757,"line_end":757,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":3059},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":379422,"byte_end":379442,"line_start":779,"line_end":779,"column_start":12,"column_end":32},"name":"binary_search_by_key","qualname":"<Vector<A>>::binary_search_by_key","value":"fn binary_search_by_key<B, F>(&Self, &B, F) -> Result<usize, usize> where\nF: for<'_> FnMut(&'_ A) -> B, B: Ord","parent":null,"children":[],"decl_id":null,"docs":" Binary search a sorted vector for a given element with a key extract\n function.","sig":null,"attributes":[{"value":"/ Binary search a sorted vector for a given element with a key extract","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":378812,"byte_end":378884,"line_start":765,"line_end":765,"column_start":5,"column_end":77}},{"value":"/ function.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":378889,"byte_end":378902,"line_start":766,"line_end":766,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":378907,"byte_end":378910,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ Assumes the vector has already been sorted using the same key extract","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":378915,"byte_end":378988,"line_start":768,"line_end":768,"column_start":5,"column_end":78}},{"value":"/ function, eg. by using [`sort_by_key`][sort_by_key].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":378993,"byte_end":379049,"line_start":769,"line_end":769,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":379054,"byte_end":379057,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ If the value is found, it returns `Ok(index)` where `index` is the index","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":379062,"byte_end":379138,"line_start":771,"line_end":771,"column_start":5,"column_end":81}},{"value":"/ of the element. If the value isn't found, it returns `Err(index)` where","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":379143,"byte_end":379218,"line_start":772,"line_end":772,"column_start":5,"column_end":80}},{"value":"/ `index` is the index at which the element would need to be inserted to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":379223,"byte_end":379297,"line_start":773,"line_end":773,"column_start":5,"column_end":79}},{"value":"/ maintain sorted order.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":379302,"byte_end":379328,"line_start":774,"line_end":774,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":379333,"byte_end":379336,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":379341,"byte_end":379359,"line_start":776,"line_end":776,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":379364,"byte_end":379367,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ [sort_by_key]: #method.sort_by_key","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":379372,"byte_end":379410,"line_start":778,"line_end":778,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3065},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":380008,"byte_end":380012,"line_start":805,"line_end":805,"column_start":12,"column_end":16},"name":"unit","qualname":"<Vector<A>>::unit","value":"fn unit(A) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a vector with a single value.","sig":null,"attributes":[{"value":"/ Construct a vector with a single value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":379643,"byte_end":379686,"line_start":789,"line_end":789,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":379691,"byte_end":379694,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":379699,"byte_end":379713,"line_start":791,"line_end":791,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":379718,"byte_end":379721,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":379726,"byte_end":379733,"line_start":793,"line_end":793,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":379738,"byte_end":379773,"line_start":794,"line_end":794,"column_start":5,"column_end":40}},{"value":"/ # use im::vector::Vector;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":379778,"byte_end":379807,"line_start":795,"line_end":795,"column_start":5,"column_end":34}},{"value":"/ let vec = Vector::unit(1337);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":379812,"byte_end":379845,"line_start":796,"line_end":796,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(1, vec.len());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":379850,"byte_end":379879,"line_start":797,"line_end":797,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":379884,"byte_end":379899,"line_start":798,"line_end":798,"column_start":5,"column_end":20}},{"value":"/   vec.get(0),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":379904,"byte_end":379921,"line_start":799,"line_end":799,"column_start":5,"column_end":22}},{"value":"/   Some(&1337)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":379926,"byte_end":379943,"line_start":800,"line_end":800,"column_start":5,"column_end":22}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":379948,"byte_end":379954,"line_start":801,"line_end":801,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":379959,"byte_end":379966,"line_start":802,"line_end":802,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":379971,"byte_end":379980,"line_start":803,"line_end":803,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":379985,"byte_end":379996,"line_start":804,"line_end":804,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3066},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":380859,"byte_end":380865,"line_start":836,"line_end":836,"column_start":12,"column_end":18},"name":"update","qualname":"<Vector<A>>::update","value":"fn update(&Self, usize, A) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new vector with the value at index `index` updated.","sig":null,"attributes":[{"value":"/ Create a new vector with the value at index `index` updated.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":380461,"byte_end":380525,"line_start":821,"line_end":821,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":380530,"byte_end":380533,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/ Panics if the index is out of bounds.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":380538,"byte_end":380579,"line_start":823,"line_end":823,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":380584,"byte_end":380587,"line_start":824,"line_end":824,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":380592,"byte_end":380610,"line_start":825,"line_end":825,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":380615,"byte_end":380618,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":380623,"byte_end":380637,"line_start":827,"line_end":827,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":380642,"byte_end":380645,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":380650,"byte_end":380657,"line_start":829,"line_end":829,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":380662,"byte_end":380697,"line_start":830,"line_end":830,"column_start":5,"column_end":40}},{"value":"/ # use im::Vector;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":380702,"byte_end":380723,"line_start":831,"line_end":831,"column_start":5,"column_end":26}},{"value":"/ let mut vec = vector![1, 2, 3];","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":380728,"byte_end":380763,"line_start":832,"line_end":832,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(vector![1, 5, 3], vec.update(1, 5));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":380768,"byte_end":380819,"line_start":833,"line_end":833,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":380824,"byte_end":380831,"line_start":834,"line_end":834,"column_start":5,"column_end":12}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":380836,"byte_end":380847,"line_start":835,"line_end":835,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3067},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":381212,"byte_end":381215,"line_start":850,"line_end":850,"column_start":12,"column_end":15},"name":"set","qualname":"<Vector<A>>::set","value":"fn set(&mut Self, usize, A) -> A","parent":null,"children":[],"decl_id":null,"docs":" Update the value at index `index` in a vector.","sig":null,"attributes":[{"value":"/ Update the value at index `index` in a vector.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":380994,"byte_end":381044,"line_start":842,"line_end":842,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":381049,"byte_end":381052,"line_start":843,"line_end":843,"column_start":5,"column_end":8}},{"value":"/ Returns the previous value at the index.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":381057,"byte_end":381101,"line_start":844,"line_end":844,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":381106,"byte_end":381109,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ Panics if the index is out of bounds.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":381114,"byte_end":381155,"line_start":846,"line_end":846,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":381160,"byte_end":381163,"line_start":847,"line_end":847,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":381168,"byte_end":381186,"line_start":848,"line_end":848,"column_start":5,"column_end":23}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":381191,"byte_end":381200,"line_start":849,"line_end":849,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3068},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":381398,"byte_end":381402,"line_start":857,"line_end":857,"column_start":12,"column_end":16},"name":"swap","qualname":"<Vector<A>>::swap","value":"fn swap(&mut Self, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Swap the elements at indices `i` and `j`.","sig":null,"attributes":[{"value":"/ Swap the elements at indices `i` and `j`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":381310,"byte_end":381355,"line_start":854,"line_end":854,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":381360,"byte_end":381363,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":381368,"byte_end":381386,"line_start":856,"line_end":856,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":3069},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":381800,"byte_end":381810,"line_start":874,"line_end":874,"column_start":12,"column_end":22},"name":"push_front","qualname":"<Vector<A>>::push_front","value":"fn push_front(&mut Self, A)","parent":null,"children":[],"decl_id":null,"docs":" Push a value to the front of a vector.","sig":null,"attributes":[{"value":"/ Push a value to the front of a vector.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":381480,"byte_end":381522,"line_start":861,"line_end":861,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":381527,"byte_end":381530,"line_start":862,"line_end":862,"column_start":5,"column_end":8}},{"value":"/ Time: O(1)*","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":381535,"byte_end":381550,"line_start":863,"line_end":863,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":381555,"byte_end":381558,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":381563,"byte_end":381577,"line_start":865,"line_end":865,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":381582,"byte_end":381585,"line_start":866,"line_end":866,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":381590,"byte_end":381597,"line_start":867,"line_end":867,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":381602,"byte_end":381637,"line_start":868,"line_end":868,"column_start":5,"column_end":40}},{"value":"/ # use im::Vector;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":381642,"byte_end":381663,"line_start":869,"line_end":869,"column_start":5,"column_end":26}},{"value":"/ let mut vec = vector![5, 6, 7];","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":381668,"byte_end":381703,"line_start":870,"line_end":870,"column_start":5,"column_end":40}},{"value":"/ vec.push_front(4);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":381708,"byte_end":381730,"line_start":871,"line_end":871,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(vector![4, 5, 6, 7], vec);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":381735,"byte_end":381776,"line_start":872,"line_end":872,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":381781,"byte_end":381788,"line_start":873,"line_end":873,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3070},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":382532,"byte_end":382541,"line_start":900,"line_end":900,"column_start":12,"column_end":21},"name":"push_back","qualname":"<Vector<A>>::push_back","value":"fn push_back(&mut Self, A)","parent":null,"children":[],"decl_id":null,"docs":" Push a value to the back of a vector.","sig":null,"attributes":[{"value":"/ Push a value to the back of a vector.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":382214,"byte_end":382255,"line_start":887,"line_end":887,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":382260,"byte_end":382263,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ Time: O(1)*","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":382268,"byte_end":382283,"line_start":889,"line_end":889,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":382288,"byte_end":382291,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":382296,"byte_end":382310,"line_start":891,"line_end":891,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":382315,"byte_end":382318,"line_start":892,"line_end":892,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":382323,"byte_end":382330,"line_start":893,"line_end":893,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":382335,"byte_end":382370,"line_start":894,"line_end":894,"column_start":5,"column_end":40}},{"value":"/ # use im::Vector;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":382375,"byte_end":382396,"line_start":895,"line_end":895,"column_start":5,"column_end":26}},{"value":"/ let mut vec = vector![1, 2, 3];","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":382401,"byte_end":382436,"line_start":896,"line_end":896,"column_start":5,"column_end":40}},{"value":"/ vec.push_back(4);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":382441,"byte_end":382462,"line_start":897,"line_end":897,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(vector![1, 2, 3, 4], vec);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":382467,"byte_end":382508,"line_start":898,"line_end":898,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":382513,"byte_end":382520,"line_start":899,"line_end":899,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3071},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":383287,"byte_end":383296,"line_start":926,"line_end":926,"column_start":12,"column_end":21},"name":"pop_front","qualname":"<Vector<A>>::pop_front","value":"fn pop_front(&mut Self) -> Option<A>","parent":null,"children":[],"decl_id":null,"docs":" Remove the first element from a vector and return it.","sig":null,"attributes":[{"value":"/ Remove the first element from a vector and return it.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":382939,"byte_end":382996,"line_start":913,"line_end":913,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":383001,"byte_end":383004,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/ Time: O(1)*","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":383009,"byte_end":383024,"line_start":915,"line_end":915,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":383029,"byte_end":383032,"line_start":916,"line_end":916,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":383037,"byte_end":383051,"line_start":917,"line_end":917,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":383056,"byte_end":383059,"line_start":918,"line_end":918,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":383064,"byte_end":383071,"line_start":919,"line_end":919,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":383076,"byte_end":383111,"line_start":920,"line_end":920,"column_start":5,"column_end":40}},{"value":"/ # use im::Vector;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":383116,"byte_end":383137,"line_start":921,"line_end":921,"column_start":5,"column_end":26}},{"value":"/ let mut vec = vector![1, 2, 3];","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":383142,"byte_end":383177,"line_start":922,"line_end":922,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(Some(1), vec.pop_front());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":383182,"byte_end":383223,"line_start":923,"line_end":923,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(vector![2, 3], vec);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":383228,"byte_end":383263,"line_start":924,"line_end":924,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":383268,"byte_end":383275,"line_start":925,"line_end":925,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3072},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":384016,"byte_end":384024,"line_start":951,"line_end":951,"column_start":12,"column_end":20},"name":"pop_back","qualname":"<Vector<A>>::pop_back","value":"fn pop_back(&mut Self) -> Option<A>","parent":null,"children":[],"decl_id":null,"docs":" Remove the last element from a vector and return it.","sig":null,"attributes":[{"value":"/ Remove the last element from a vector and return it.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":383670,"byte_end":383726,"line_start":938,"line_end":938,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":383731,"byte_end":383734,"line_start":939,"line_end":939,"column_start":5,"column_end":8}},{"value":"/ Time: O(1)*","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":383739,"byte_end":383754,"line_start":940,"line_end":940,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":383759,"byte_end":383762,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":383767,"byte_end":383781,"line_start":942,"line_end":942,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":383786,"byte_end":383789,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":383794,"byte_end":383801,"line_start":944,"line_end":944,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":383806,"byte_end":383841,"line_start":945,"line_end":945,"column_start":5,"column_end":40}},{"value":"/ # use im::Vector;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":383846,"byte_end":383867,"line_start":946,"line_end":946,"column_start":5,"column_end":26}},{"value":"/ let mut vec = vector![1, 2, 3];","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":383872,"byte_end":383907,"line_start":947,"line_end":947,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(Some(3), vec.pop_back());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":383912,"byte_end":383952,"line_start":948,"line_end":948,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(vector![1, 2], vec);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":383957,"byte_end":383992,"line_start":949,"line_end":949,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":383997,"byte_end":384004,"line_start":950,"line_end":950,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3073},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":384761,"byte_end":384767,"line_start":976,"line_end":976,"column_start":12,"column_end":18},"name":"append","qualname":"<Vector<A>>::append","value":"fn append(&mut Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Append the vector `other` to the end of the current vector.","sig":null,"attributes":[{"value":"/ Append the vector `other` to the end of the current vector.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":384392,"byte_end":384455,"line_start":963,"line_end":963,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":384460,"byte_end":384463,"line_start":964,"line_end":964,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":384468,"byte_end":384486,"line_start":965,"line_end":965,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":384491,"byte_end":384494,"line_start":966,"line_end":966,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":384499,"byte_end":384513,"line_start":967,"line_end":967,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":384518,"byte_end":384521,"line_start":968,"line_end":968,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":384526,"byte_end":384533,"line_start":969,"line_end":969,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":384538,"byte_end":384573,"line_start":970,"line_end":970,"column_start":5,"column_end":40}},{"value":"/ # use im::vector::Vector;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":384578,"byte_end":384607,"line_start":971,"line_end":971,"column_start":5,"column_end":34}},{"value":"/ let mut vec = vector![1, 2, 3];","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":384612,"byte_end":384647,"line_start":972,"line_end":972,"column_start":5,"column_end":40}},{"value":"/ vec.append(vector![7, 8, 9]);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":384652,"byte_end":384685,"line_start":973,"line_end":973,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(vector![1, 2, 3, 7, 8, 9], vec);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":384690,"byte_end":384737,"line_start":974,"line_end":974,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":384742,"byte_end":384749,"line_start":975,"line_end":975,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3074},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":389924,"byte_end":389930,"line_start":1092,"line_end":1092,"column_start":12,"column_end":18},"name":"retain","qualname":"<Vector<A>>::retain","value":"fn retain<F>(&mut Self, F) where F: for<'_> FnMut(&'_ A) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Retain only the elements specified by the predicate.","sig":null,"attributes":[{"value":"/ Retain only the elements specified by the predicate.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":389718,"byte_end":389774,"line_start":1086,"line_end":1086,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":389779,"byte_end":389782,"line_start":1087,"line_end":1087,"column_start":5,"column_end":8}},{"value":"/ Remove all elements for which the provided function `f`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":389787,"byte_end":389846,"line_start":1088,"line_end":1088,"column_start":5,"column_end":64}},{"value":"/ returns false from the vector.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":389851,"byte_end":389885,"line_start":1089,"line_end":1089,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":389890,"byte_end":389893,"line_start":1090,"line_end":1090,"column_start":5,"column_end":8}},{"value":"/ Time: O(n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":389898,"byte_end":389912,"line_start":1091,"line_end":1091,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":3076},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":390977,"byte_end":390985,"line_start":1131,"line_end":1131,"column_start":12,"column_end":20},"name":"split_at","qualname":"<Vector<A>>::split_at","value":"fn split_at(Self, usize) -> (Self, Self)","parent":null,"children":[],"decl_id":null,"docs":" Split a vector at a given index.","sig":null,"attributes":[{"value":"/ Split a vector at a given index.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":390415,"byte_end":390451,"line_start":1113,"line_end":1113,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":390456,"byte_end":390459,"line_start":1114,"line_end":1114,"column_start":5,"column_end":8}},{"value":"/ Split a vector at a given index, consuming the vector and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":390464,"byte_end":390525,"line_start":1115,"line_end":1115,"column_start":5,"column_end":66}},{"value":"/ returning a pair of the left hand side and the right hand side","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":390530,"byte_end":390596,"line_start":1116,"line_end":1116,"column_start":5,"column_end":71}},{"value":"/ of the split.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":390601,"byte_end":390618,"line_start":1117,"line_end":1117,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":390623,"byte_end":390626,"line_start":1118,"line_end":1118,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":390631,"byte_end":390649,"line_start":1119,"line_end":1119,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":390654,"byte_end":390657,"line_start":1120,"line_end":1120,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":390662,"byte_end":390676,"line_start":1121,"line_end":1121,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":390681,"byte_end":390684,"line_start":1122,"line_end":1122,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":390689,"byte_end":390696,"line_start":1123,"line_end":1123,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":390701,"byte_end":390736,"line_start":1124,"line_end":1124,"column_start":5,"column_end":40}},{"value":"/ # use im::vector::Vector;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":390741,"byte_end":390770,"line_start":1125,"line_end":1125,"column_start":5,"column_end":34}},{"value":"/ let mut vec = vector![1, 2, 3, 7, 8, 9];","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":390775,"byte_end":390819,"line_start":1126,"line_end":1126,"column_start":5,"column_end":49}},{"value":"/ let (left, right) = vec.split_at(3);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":390824,"byte_end":390864,"line_start":1127,"line_end":1127,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(vector![1, 2, 3], left);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":390869,"byte_end":390908,"line_start":1128,"line_end":1128,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(vector![7, 8, 9], right);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":390913,"byte_end":390953,"line_start":1129,"line_end":1129,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":390958,"byte_end":390965,"line_start":1130,"line_end":1130,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3077},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":391667,"byte_end":391676,"line_start":1154,"line_end":1154,"column_start":12,"column_end":21},"name":"split_off","qualname":"<Vector<A>>::split_off","value":"fn split_off(&mut Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Split a vector at a given index.","sig":null,"attributes":[{"value":"/ Split a vector at a given index.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":391104,"byte_end":391140,"line_start":1136,"line_end":1136,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":391145,"byte_end":391148,"line_start":1137,"line_end":1137,"column_start":5,"column_end":8}},{"value":"/ Split a vector at a given index, leaving the left hand side in","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":391153,"byte_end":391219,"line_start":1138,"line_end":1138,"column_start":5,"column_end":71}},{"value":"/ the current vector and returning a new vector containing the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":391224,"byte_end":391288,"line_start":1139,"line_end":1139,"column_start":5,"column_end":69}},{"value":"/ right hand side.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":391293,"byte_end":391313,"line_start":1140,"line_end":1140,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":391318,"byte_end":391321,"line_start":1141,"line_end":1141,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":391326,"byte_end":391344,"line_start":1142,"line_end":1142,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":391349,"byte_end":391352,"line_start":1143,"line_end":1143,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":391357,"byte_end":391371,"line_start":1144,"line_end":1144,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":391376,"byte_end":391379,"line_start":1145,"line_end":1145,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":391384,"byte_end":391391,"line_start":1146,"line_end":1146,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":391396,"byte_end":391431,"line_start":1147,"line_end":1147,"column_start":5,"column_end":40}},{"value":"/ # use im::vector::Vector;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":391436,"byte_end":391465,"line_start":1148,"line_end":1148,"column_start":5,"column_end":34}},{"value":"/ let mut left = vector![1, 2, 3, 7, 8, 9];","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":391470,"byte_end":391515,"line_start":1149,"line_end":1149,"column_start":5,"column_end":50}},{"value":"/ let right = left.split_off(3);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":391520,"byte_end":391554,"line_start":1150,"line_end":1150,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(vector![1, 2, 3], left);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":391559,"byte_end":391598,"line_start":1151,"line_end":1151,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(vector![7, 8, 9], right);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":391603,"byte_end":391643,"line_start":1152,"line_end":1152,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":391648,"byte_end":391655,"line_start":1153,"line_end":1153,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3078},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":398218,"byte_end":398222,"line_start":1299,"line_end":1299,"column_start":12,"column_end":16},"name":"skip","qualname":"<Vector<A>>::skip","value":"fn skip(&Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a vector with `count` elements removed from the\n start of the current vector.","sig":null,"attributes":[{"value":"/ Construct a vector with `count` elements removed from the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":398061,"byte_end":398122,"line_start":1294,"line_end":1294,"column_start":5,"column_end":66}},{"value":"/ start of the current vector.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":398127,"byte_end":398159,"line_start":1295,"line_end":1295,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":398164,"byte_end":398167,"line_start":1296,"line_end":1296,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":398172,"byte_end":398190,"line_start":1297,"line_end":1297,"column_start":5,"column_end":23}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":398195,"byte_end":398206,"line_start":1298,"line_end":1298,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3079},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":398545,"byte_end":398549,"line_start":1309,"line_end":1309,"column_start":12,"column_end":16},"name":"take","qualname":"<Vector<A>>::take","value":"fn take(&Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a vector of the first `count` elements from the\n current vector.","sig":null,"attributes":[{"value":"/ Construct a vector of the first `count` elements from the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":398401,"byte_end":398462,"line_start":1304,"line_end":1304,"column_start":5,"column_end":66}},{"value":"/ current vector.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":398467,"byte_end":398486,"line_start":1305,"line_end":1305,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":398491,"byte_end":398494,"line_start":1306,"line_end":1306,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":398499,"byte_end":398517,"line_start":1307,"line_end":1307,"column_start":5,"column_end":23}},{"value":"must_use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":398522,"byte_end":398533,"line_start":1308,"line_end":1308,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3080},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":399008,"byte_end":399016,"line_start":1323,"line_end":1323,"column_start":12,"column_end":20},"name":"truncate","qualname":"<Vector<A>>::truncate","value":"fn truncate(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Truncate a vector to the given size.","sig":null,"attributes":[{"value":"/ Truncate a vector to the given size.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":398771,"byte_end":398811,"line_start":1316,"line_end":1316,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":398816,"byte_end":398819,"line_start":1317,"line_end":1317,"column_start":5,"column_end":8}},{"value":"/ Discards all elements in the vector beyond the given length.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":398824,"byte_end":398888,"line_start":1318,"line_end":1318,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":398893,"byte_end":398896,"line_start":1319,"line_end":1319,"column_start":5,"column_end":8}},{"value":"/ Panics if the new length is greater than the current length.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":398901,"byte_end":398965,"line_start":1320,"line_end":1320,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":398970,"byte_end":398973,"line_start":1321,"line_end":1321,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":398978,"byte_end":398996,"line_start":1322,"line_end":1322,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":3081},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":399414,"byte_end":399419,"line_start":1335,"line_end":1335,"column_start":12,"column_end":17},"name":"slice","qualname":"<Vector<A>>::slice","value":"fn slice<R>(&mut Self, R) -> Self where R: RangeBounds<usize>","parent":null,"children":[],"decl_id":null,"docs":" Extract a slice from a vector.","sig":null,"attributes":[{"value":"/ Extract a slice from a vector.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":399180,"byte_end":399214,"line_start":1328,"line_end":1328,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":399219,"byte_end":399222,"line_start":1329,"line_end":1329,"column_start":5,"column_end":8}},{"value":"/ Remove the elements from `start_index` until `end_index` in","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":399227,"byte_end":399290,"line_start":1330,"line_end":1330,"column_start":5,"column_end":68}},{"value":"/ the current vector and return the removed slice as a new","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":399295,"byte_end":399355,"line_start":1331,"line_end":1331,"column_start":5,"column_end":65}},{"value":"/ vector.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":399360,"byte_end":399371,"line_start":1332,"line_end":1332,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":399376,"byte_end":399379,"line_start":1333,"line_end":1333,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":399384,"byte_end":399402,"line_start":1334,"line_end":1334,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":3083},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":400531,"byte_end":400537,"line_start":1366,"line_end":1366,"column_start":12,"column_end":18},"name":"insert","qualname":"<Vector<A>>::insert","value":"fn insert(&mut Self, usize, A)","parent":null,"children":[],"decl_id":null,"docs":" Insert an element into a vector.","sig":null,"attributes":[{"value":"/ Insert an element into a vector.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":399803,"byte_end":399839,"line_start":1349,"line_end":1349,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":399844,"byte_end":399847,"line_start":1350,"line_end":1350,"column_start":5,"column_end":8}},{"value":"/ Insert an element at position `index`, shifting all elements","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":399852,"byte_end":399916,"line_start":1351,"line_end":1351,"column_start":5,"column_end":69}},{"value":"/ after it to the right.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":399921,"byte_end":399947,"line_start":1352,"line_end":1352,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":399952,"byte_end":399955,"line_start":1353,"line_end":1353,"column_start":5,"column_end":8}},{"value":"/ ## Performance Note","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":399960,"byte_end":399983,"line_start":1354,"line_end":1354,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":399988,"byte_end":399991,"line_start":1355,"line_end":1355,"column_start":5,"column_end":8}},{"value":"/ While `push_front` and `push_back` are heavily optimised","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":399996,"byte_end":400056,"line_start":1356,"line_end":1356,"column_start":5,"column_end":65}},{"value":"/ operations, `insert` in the middle of a vector requires a","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":400061,"byte_end":400122,"line_start":1357,"line_end":1357,"column_start":5,"column_end":66}},{"value":"/ split, a push, and an append. Thus, if you want to insert","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":400127,"byte_end":400188,"line_start":1358,"line_end":1358,"column_start":5,"column_end":66}},{"value":"/ many elements at the same location, instead of `insert`ing","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":400193,"byte_end":400255,"line_start":1359,"line_end":1359,"column_start":5,"column_end":67}},{"value":"/ them one by one, you should rather create a new vector","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":400260,"byte_end":400318,"line_start":1360,"line_end":1360,"column_start":5,"column_end":63}},{"value":"/ containing the elements to insert, split the vector at the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":400323,"byte_end":400385,"line_start":1361,"line_end":1361,"column_start":5,"column_end":67}},{"value":"/ insertion point, and append the left hand, the new vector and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":400390,"byte_end":400455,"line_start":1362,"line_end":1362,"column_start":5,"column_end":70}},{"value":"/ the right hand in order.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":400460,"byte_end":400488,"line_start":1363,"line_end":1363,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":400493,"byte_end":400496,"line_start":1364,"line_end":1364,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":400501,"byte_end":400519,"line_start":1365,"line_end":1365,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":3084},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":402108,"byte_end":402114,"line_start":1413,"line_end":1413,"column_start":12,"column_end":18},"name":"remove","qualname":"<Vector<A>>::remove","value":"fn remove(&mut Self, usize) -> A","parent":null,"children":[],"decl_id":null,"docs":" Remove an element from a vector.","sig":null,"attributes":[{"value":"/ Remove an element from a vector.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":401473,"byte_end":401509,"line_start":1397,"line_end":1397,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":401514,"byte_end":401517,"line_start":1398,"line_end":1398,"column_start":5,"column_end":8}},{"value":"/ Remove the element from position 'index', shifting all","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":401522,"byte_end":401580,"line_start":1399,"line_end":1399,"column_start":5,"column_end":63}},{"value":"/ elements after it to the left, and return the removed element.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":401585,"byte_end":401651,"line_start":1400,"line_end":1400,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":401656,"byte_end":401659,"line_start":1401,"line_end":1401,"column_start":5,"column_end":8}},{"value":"/ ## Performance Note","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":401664,"byte_end":401687,"line_start":1402,"line_end":1402,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":401692,"byte_end":401695,"line_start":1403,"line_end":1403,"column_start":5,"column_end":8}},{"value":"/ While `pop_front` and `pop_back` are heavily optimised","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":401700,"byte_end":401758,"line_start":1404,"line_end":1404,"column_start":5,"column_end":63}},{"value":"/ operations, `remove` in the middle of a vector requires a","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":401763,"byte_end":401824,"line_start":1405,"line_end":1405,"column_start":5,"column_end":66}},{"value":"/ split, a pop, and an append. Thus, if you want to remove many","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":401829,"byte_end":401894,"line_start":1406,"line_end":1406,"column_start":5,"column_end":70}},{"value":"/ elements from the same location, instead of `remove`ing them","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":401899,"byte_end":401963,"line_start":1407,"line_end":1407,"column_start":5,"column_end":69}},{"value":"/ one by one, it is much better to use [`slice`][slice].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":401968,"byte_end":402026,"line_start":1408,"line_end":1408,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":402031,"byte_end":402034,"line_start":1409,"line_end":1409,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":402039,"byte_end":402057,"line_start":1410,"line_end":1410,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":402062,"byte_end":402065,"line_start":1411,"line_end":1411,"column_start":5,"column_end":8}},{"value":"/ [slice]: #method.slice","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":402070,"byte_end":402096,"line_start":1412,"line_end":1412,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3085},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":403353,"byte_end":403363,"line_start":1450,"line_end":1450,"column_start":12,"column_end":22},"name":"insert_ord","qualname":"<Vector<A>>::insert_ord","value":"fn insert_ord(&mut Self, A) where A: Ord","parent":null,"children":[],"decl_id":null,"docs":" Insert an element into a sorted vector.","sig":null,"attributes":[{"value":"/ Insert an element into a sorted vector.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":402882,"byte_end":402925,"line_start":1434,"line_end":1434,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":402930,"byte_end":402933,"line_start":1435,"line_end":1435,"column_start":5,"column_end":8}},{"value":"/ Insert an element into a vector in sorted order, assuming the vector is","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":402938,"byte_end":403013,"line_start":1436,"line_end":1436,"column_start":5,"column_end":80}},{"value":"/ already in sorted order.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":403018,"byte_end":403046,"line_start":1437,"line_end":1437,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":403051,"byte_end":403054,"line_start":1438,"line_end":1438,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":403059,"byte_end":403077,"line_start":1439,"line_end":1439,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":403082,"byte_end":403085,"line_start":1440,"line_end":1440,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":403090,"byte_end":403104,"line_start":1441,"line_end":1441,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":403109,"byte_end":403112,"line_start":1442,"line_end":1442,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":403117,"byte_end":403124,"line_start":1443,"line_end":1443,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":403129,"byte_end":403164,"line_start":1444,"line_end":1444,"column_start":5,"column_end":40}},{"value":"/ # use im::vector::Vector;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":403169,"byte_end":403198,"line_start":1445,"line_end":1445,"column_start":5,"column_end":34}},{"value":"/ let mut vec = vector![1, 2, 3, 7, 8, 9];","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":403203,"byte_end":403247,"line_start":1446,"line_end":1446,"column_start":5,"column_end":49}},{"value":"/ vec.insert_ord(5);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":403252,"byte_end":403274,"line_start":1447,"line_end":1447,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(vector![1, 2, 3, 5, 7, 8, 9], vec);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":403279,"byte_end":403329,"line_start":1448,"line_end":1448,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":403334,"byte_end":403341,"line_start":1449,"line_end":1449,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3086},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":403893,"byte_end":403897,"line_start":1473,"line_end":1473,"column_start":12,"column_end":16},"name":"sort","qualname":"<Vector<A>>::sort","value":"fn sort(&mut Self) where A: Ord","parent":null,"children":[],"decl_id":null,"docs":" Sort a vector.","sig":null,"attributes":[{"value":"/ Sort a vector.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":403582,"byte_end":403600,"line_start":1460,"line_end":1460,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":403605,"byte_end":403608,"line_start":1461,"line_end":1461,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":403613,"byte_end":403633,"line_start":1462,"line_end":1462,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":403638,"byte_end":403641,"line_start":1463,"line_end":1463,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":403646,"byte_end":403660,"line_start":1464,"line_end":1464,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":403665,"byte_end":403668,"line_start":1465,"line_end":1465,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":403673,"byte_end":403680,"line_start":1466,"line_end":1466,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":403685,"byte_end":403720,"line_start":1467,"line_end":1467,"column_start":5,"column_end":40}},{"value":"/ # use im::vector::Vector;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":403725,"byte_end":403754,"line_start":1468,"line_end":1468,"column_start":5,"column_end":34}},{"value":"/ let mut vec = vector![3, 2, 5, 4, 1];","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":403759,"byte_end":403800,"line_start":1469,"line_end":1469,"column_start":5,"column_end":46}},{"value":"/ vec.sort();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":403805,"byte_end":403820,"line_start":1470,"line_end":1470,"column_start":5,"column_end":20}},{"value":"/ assert_eq!(vector![1, 2, 3, 4, 5], vec);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":403825,"byte_end":403869,"line_start":1471,"line_end":1471,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":403874,"byte_end":403881,"line_start":1472,"line_end":1472,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3087},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":404354,"byte_end":404361,"line_start":1493,"line_end":1493,"column_start":12,"column_end":19},"name":"sort_by","qualname":"<Vector<A>>::sort_by","value":"fn sort_by<F>(&mut Self, F) where F: for<'_, '_> Fn(&'_ A, &'_ A) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Sort a vector using a comparator function.","sig":null,"attributes":[{"value":"/ Sort a vector using a comparator function.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":403983,"byte_end":404029,"line_start":1480,"line_end":1480,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":404034,"byte_end":404037,"line_start":1481,"line_end":1481,"column_start":5,"column_end":8}},{"value":"/ Time: O(n log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":404042,"byte_end":404062,"line_start":1482,"line_end":1482,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":404067,"byte_end":404070,"line_start":1483,"line_end":1483,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":404075,"byte_end":404089,"line_start":1484,"line_end":1484,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":404094,"byte_end":404097,"line_start":1485,"line_end":1485,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":404102,"byte_end":404109,"line_start":1486,"line_end":1486,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":404114,"byte_end":404149,"line_start":1487,"line_end":1487,"column_start":5,"column_end":40}},{"value":"/ # use im::vector::Vector;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":404154,"byte_end":404183,"line_start":1488,"line_end":1488,"column_start":5,"column_end":34}},{"value":"/ let mut vec = vector![3, 2, 5, 4, 1];","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":404188,"byte_end":404229,"line_start":1489,"line_end":1489,"column_start":5,"column_end":46}},{"value":"/ vec.sort_by(|left, right| left.cmp(right));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":404234,"byte_end":404281,"line_start":1490,"line_end":1490,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(vector![1, 2, 3, 4, 5], vec);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":404286,"byte_end":404330,"line_start":1491,"line_end":1491,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":404335,"byte_end":404342,"line_start":1492,"line_end":1492,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3103},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":410979,"byte_end":410986,"line_start":1681,"line_end":1681,"column_start":8,"column_end":15},"name":"default","qualname":"<Vector<A> as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3106},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":411185,"byte_end":411190,"line_start":1690,"line_end":1690,"column_start":8,"column_end":13},"name":"clone","qualname":"<Vector<A> as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":" Clone a vector.","sig":null,"attributes":[{"value":"/ Clone a vector.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":411069,"byte_end":411088,"line_start":1687,"line_end":1687,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":411093,"byte_end":411096,"line_start":1688,"line_end":1688,"column_start":5,"column_end":8}},{"value":"/ Time: O(1), or O(n) with a very small, bounded *n* for an inline vector.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":411101,"byte_end":411177,"line_start":1689,"line_end":1689,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":3109},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":411572,"byte_end":411575,"line_start":1702,"line_end":1702,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Vector<A> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut Formatter) -> Result<(), Error>","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3112},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":412130,"byte_end":412132,"line_start":1717,"line_end":1717,"column_start":8,"column_end":10},"name":"eq","qualname":"<Vector<A> as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &Self) -> bool","parent":{"krate":2,"index":2831},"children":[],"decl_id":{"krate":2,"index":2833},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3117},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":413939,"byte_end":413950,"line_start":1771,"line_end":1771,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<Vector<A> as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp(&Self, &Self) -> Option<Ordering>","parent":{"krate":2,"index":2877},"children":[],"decl_id":{"krate":2,"index":2879},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3120},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":414097,"byte_end":414100,"line_start":1777,"line_end":1777,"column_start":8,"column_end":11},"name":"cmp","qualname":"<Vector<A> as std::cmp::Ord>::cmp","value":"fn cmp(&Self, &Self) -> Ordering","parent":{"krate":2,"index":2867},"children":[],"decl_id":{"krate":2,"index":2868},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3123},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":414233,"byte_end":414237,"line_start":1783,"line_end":1783,"column_start":8,"column_end":12},"name":"hash","qualname":"<Vector<A> as std::hash::Hash>::hash","value":"fn hash<H>(&Self, &mut H) where H: Hasher","parent":{"krate":2,"index":10324},"children":[],"decl_id":{"krate":2,"index":10325},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3127},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":414384,"byte_end":414387,"line_start":1791,"line_end":1791,"column_start":8,"column_end":11},"name":"sum","qualname":"<Vector<A> as std::iter::Sum>::sum","value":"fn sum<I>(I) -> Self where I: Iterator<Item = Self>","parent":{"krate":2,"index":8238},"children":[],"decl_id":{"krate":2,"index":8240},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3133},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":414644,"byte_end":414647,"line_start":1805,"line_end":1805,"column_start":8,"column_end":11},"name":"add","qualname":"<Vector<A> as std::ops::Add>::add","value":"fn add(Self, Self) -> Self::Output","parent":{"krate":2,"index":3247},"children":[],"decl_id":{"krate":2,"index":3250},"docs":" Concatenate two vectors.","sig":null,"attributes":[{"value":"/ Concatenate two vectors.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":414577,"byte_end":414605,"line_start":1802,"line_end":1802,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":414610,"byte_end":414613,"line_start":1803,"line_end":1803,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":414618,"byte_end":414636,"line_start":1804,"line_end":1804,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":3138},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":414883,"byte_end":414886,"line_start":1817,"line_end":1817,"column_start":8,"column_end":11},"name":"add","qualname":"<&'a Vector<A> as std::ops::Add>::add","value":"fn add(Self, Self) -> Self::Output","parent":{"krate":2,"index":3247},"children":[],"decl_id":{"krate":2,"index":3250},"docs":" Concatenate two vectors.","sig":null,"attributes":[{"value":"/ Concatenate two vectors.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":414816,"byte_end":414844,"line_start":1814,"line_end":1814,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":414849,"byte_end":414852,"line_start":1815,"line_end":1815,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":414857,"byte_end":414875,"line_start":1816,"line_end":1816,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":3141},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":415159,"byte_end":415165,"line_start":1828,"line_end":1828,"column_start":8,"column_end":14},"name":"extend","qualname":"<Vector<A> as std::iter::Extend>::extend","value":"fn extend<I>(&mut Self, I) where I: IntoIterator<Item = A>","parent":{"krate":2,"index":8288},"children":[],"decl_id":{"krate":2,"index":8290},"docs":" Add values to the end of a vector by consuming an iterator.","sig":null,"attributes":[{"value":"/ Add values to the end of a vector by consuming an iterator.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":415061,"byte_end":415124,"line_start":1825,"line_end":1825,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":415129,"byte_end":415132,"line_start":1826,"line_end":1826,"column_start":5,"column_end":8}},{"value":"/ Time: O(n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":415137,"byte_end":415151,"line_start":1827,"line_end":1827,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":3146},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":415491,"byte_end":415496,"line_start":1843,"line_end":1843,"column_start":8,"column_end":13},"name":"index","qualname":"<Vector<A> as std::ops::Index>::index","value":"fn index(&Self, usize) -> &Self::Output","parent":{"krate":2,"index":3483},"children":[],"decl_id":{"krate":2,"index":3486},"docs":" Get a reference to the value at index `index` in the vector.","sig":null,"attributes":[{"value":"/ Get a reference to the value at index `index` in the vector.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":415388,"byte_end":415452,"line_start":1840,"line_end":1840,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":415457,"byte_end":415460,"line_start":1841,"line_end":1841,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":415465,"byte_end":415483,"line_start":1842,"line_end":1842,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":3149},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":415948,"byte_end":415957,"line_start":1860,"line_end":1860,"column_start":8,"column_end":17},"name":"index_mut","qualname":"<Vector<A> as std::ops::IndexMut>::index_mut","value":"fn index_mut(&mut Self, usize) -> &mut Self::Output","parent":{"krate":2,"index":3487},"children":[],"decl_id":{"krate":2,"index":3489},"docs":" Get a mutable reference to the value at index `index` in the\n vector.","sig":null,"attributes":[{"value":"/ Get a mutable reference to the value at index `index` in the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":415829,"byte_end":415893,"line_start":1856,"line_end":1856,"column_start":5,"column_end":69}},{"value":"/ vector.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":415898,"byte_end":415909,"line_start":1857,"line_end":1857,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":415914,"byte_end":415917,"line_start":1858,"line_end":1858,"column_start":5,"column_end":8}},{"value":"/ Time: O(log n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":415922,"byte_end":415940,"line_start":1859,"line_end":1859,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":3155},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":416296,"byte_end":416305,"line_start":1873,"line_end":1873,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<&'a Vector<A> as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":2,"index":8279},"children":[],"decl_id":{"krate":2,"index":8282},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3160},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":416469,"byte_end":416478,"line_start":1881,"line_end":1881,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<Vector<A> as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":2,"index":8279},"children":[],"decl_id":{"krate":2,"index":8282},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3163},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":416670,"byte_end":416679,"line_start":1890,"line_end":1890,"column_start":8,"column_end":17},"name":"from_iter","qualname":"<Vector<A> as std::iter::FromIterator>::from_iter","value":"fn from_iter<I>(I) -> Self where I: IntoIterator<Item = A>","parent":{"krate":2,"index":8275},"children":[],"decl_id":{"krate":2,"index":8277},"docs":" Create a vector from an iterator.","sig":null,"attributes":[{"value":"/ Create a vector from an iterator.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":416598,"byte_end":416635,"line_start":1887,"line_end":1887,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":416640,"byte_end":416643,"line_start":1888,"line_end":1888,"column_start":5,"column_end":8}},{"value":"/ Time: O(n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":416648,"byte_end":416662,"line_start":1889,"line_end":1889,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":3170},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":417005,"byte_end":417009,"line_start":1907,"line_end":1907,"column_start":8,"column_end":12},"name":"from","qualname":"<Vector<OA> as std::convert::From>::from","value":"fn from(&Vector<&A>) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3175},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":417157,"byte_end":417161,"line_start":1913,"line_end":1913,"column_start":8,"column_end":12},"name":"from","qualname":"<Vector<A> as std::convert::From>::from","value":"fn from(&[A]) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3178},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":417440,"byte_end":417444,"line_start":1924,"line_end":1924,"column_start":8,"column_end":12},"name":"from","qualname":"<Vector<A> as std::convert::From>::from","value":"fn from(Vec<A>) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":" Create a vector from a [`std::vec::Vec`][vec].","sig":null,"attributes":[{"value":"/ Create a vector from a [`std::vec::Vec`][vec].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":417282,"byte_end":417332,"line_start":1919,"line_end":1919,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":417337,"byte_end":417340,"line_start":1920,"line_end":1920,"column_start":5,"column_end":8}},{"value":"/ Time: O(n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":417345,"byte_end":417359,"line_start":1921,"line_end":1921,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":417364,"byte_end":417367,"line_start":1922,"line_end":1922,"column_start":5,"column_end":8}},{"value":"/ [vec]: https://doc.rust-lang.org/std/vec/struct.Vec.html","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":417372,"byte_end":417432,"line_start":1923,"line_end":1923,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3182},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":417725,"byte_end":417729,"line_start":1935,"line_end":1935,"column_start":8,"column_end":12},"name":"from","qualname":"<Vector<A> as std::convert::From>::from","value":"fn from(&Vec<A>) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":" Create a vector from a [`std::vec::Vec`][vec].","sig":null,"attributes":[{"value":"/ Create a vector from a [`std::vec::Vec`][vec].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":417567,"byte_end":417617,"line_start":1930,"line_end":1930,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":417622,"byte_end":417625,"line_start":1931,"line_end":1931,"column_start":5,"column_end":8}},{"value":"/ Time: O(n)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":417630,"byte_end":417644,"line_start":1932,"line_end":1932,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":417649,"byte_end":417652,"line_start":1933,"line_end":1933,"column_start":5,"column_end":8}},{"value":"/ [vec]: https://doc.rust-lang.org/std/vec/struct.Vec.html","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":417657,"byte_end":417717,"line_start":1934,"line_end":1934,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":3183},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":417978,"byte_end":417982,"line_start":1947,"line_end":1947,"column_start":12,"column_end":16},"name":"Iter","qualname":"::vector::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":3186},{"krate":0,"index":3187},{"krate":0,"index":3188}],"decl_id":null,"docs":" An iterator over vectors with values of type `A`.","sig":null,"attributes":[{"value":"/ An iterator over vectors with values of type `A`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":417815,"byte_end":417868,"line_start":1942,"line_end":1942,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":417869,"byte_end":417872,"line_start":1943,"line_end":1943,"column_start":1,"column_end":4}},{"value":"/ To obtain one, use [`Vector::iter()`][iter].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":417873,"byte_end":417921,"line_start":1944,"line_end":1944,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":417922,"byte_end":417925,"line_start":1945,"line_end":1945,"column_start":1,"column_end":4}},{"value":"/ [iter]: enum.Vector.html#method.iter","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":417926,"byte_end":417966,"line_start":1946,"line_end":1946,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":3198},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":418596,"byte_end":418600,"line_start":1977,"line_end":1977,"column_start":8,"column_end":12},"name":"next","qualname":"<Iter as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8476},"docs":" Advance the iterator and return the next value.","sig":null,"attributes":[{"value":"/ Advance the iterator and return the next value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":418509,"byte_end":418560,"line_start":1974,"line_end":1974,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":418565,"byte_end":418568,"line_start":1975,"line_end":1975,"column_start":5,"column_end":8}},{"value":"/ Time: O(1)*","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":418573,"byte_end":418588,"line_start":1976,"line_end":1976,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3199},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":418946,"byte_end":418955,"line_start":1988,"line_end":1988,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Iter as std::iter::Iterator>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8477},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3203},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":419245,"byte_end":419254,"line_start":1998,"line_end":1998,"column_start":8,"column_end":17},"name":"next_back","qualname":"<Iter as std::iter::DoubleEndedIterator>::next_back","value":"fn next_back(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8323},"children":[],"decl_id":{"krate":2,"index":8324},"docs":" Advance the iterator and return the next value.","sig":null,"attributes":[{"value":"/ Advance the iterator and return the next value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":419158,"byte_end":419209,"line_start":1995,"line_end":1995,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":419214,"byte_end":419217,"line_start":1996,"line_end":1996,"column_start":5,"column_end":8}},{"value":"/ Time: O(1)*","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":419222,"byte_end":419237,"line_start":1997,"line_end":1997,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3210},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":419862,"byte_end":419869,"line_start":2018,"line_end":2018,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::vector::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":3213},{"krate":0,"index":3214},{"krate":0,"index":3215}],"decl_id":null,"docs":" A mutable iterator over vectors with values of type `A`.","sig":null,"attributes":[{"value":"/ A mutable iterator over vectors with values of type `A`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":419676,"byte_end":419736,"line_start":2013,"line_end":2013,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":419737,"byte_end":419740,"line_start":2014,"line_end":2014,"column_start":1,"column_end":4}},{"value":"/ To obtain one, use [`Vector::iter_mut()`][iter_mut].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":419741,"byte_end":419797,"line_start":2015,"line_end":2015,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":419798,"byte_end":419801,"line_start":2016,"line_end":2016,"column_start":1,"column_end":4}},{"value":"/ [iter_mut]: enum.Vector.html#method.iter_mut","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":419802,"byte_end":419850,"line_start":2017,"line_end":2017,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":3225},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":420589,"byte_end":420593,"line_start":2056,"line_end":2056,"column_start":8,"column_end":12},"name":"next","qualname":"<IterMut as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8476},"docs":" Advance the iterator and return the next value.","sig":null,"attributes":[{"value":"/ Advance the iterator and return the next value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":420502,"byte_end":420553,"line_start":2053,"line_end":2053,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":420558,"byte_end":420561,"line_start":2054,"line_end":2054,"column_start":5,"column_end":8}},{"value":"/ Time: O(1)*","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":420566,"byte_end":420581,"line_start":2055,"line_end":2055,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3226},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":420946,"byte_end":420955,"line_start":2067,"line_end":2067,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<IterMut as std::iter::Iterator>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8477},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3230},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":421278,"byte_end":421287,"line_start":2080,"line_end":2080,"column_start":8,"column_end":17},"name":"next_back","qualname":"<IterMut as std::iter::DoubleEndedIterator>::next_back","value":"fn next_back(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8323},"children":[],"decl_id":{"krate":2,"index":8324},"docs":" Remove and return an element from the back of the iterator.","sig":null,"attributes":[{"value":"/ Remove and return an element from the back of the iterator.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":421179,"byte_end":421242,"line_start":2077,"line_end":2077,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":421247,"byte_end":421250,"line_start":2078,"line_end":2078,"column_start":5,"column_end":8}},{"value":"/ Time: O(1)*","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":421255,"byte_end":421270,"line_start":2079,"line_end":2079,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3237},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":421796,"byte_end":421809,"line_start":2096,"line_end":2096,"column_start":12,"column_end":25},"name":"ConsumingIter","qualname":"::vector::ConsumingIter","value":"ConsumingIter {  }","parent":null,"children":[{"krate":0,"index":3239}],"decl_id":null,"docs":" A consuming iterator over vectors with values of type `A`.\n","sig":null,"attributes":[{"value":"/ A consuming iterator over vectors with values of type `A`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":421722,"byte_end":421784,"line_start":2095,"line_end":2095,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3246},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":422106,"byte_end":422110,"line_start":2112,"line_end":2112,"column_start":8,"column_end":12},"name":"next","qualname":"<ConsumingIter<A> as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8476},"docs":" Advance the iterator and return the next value.","sig":null,"attributes":[{"value":"/ Advance the iterator and return the next value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":422019,"byte_end":422070,"line_start":2109,"line_end":2109,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":422075,"byte_end":422078,"line_start":2110,"line_end":2110,"column_start":5,"column_end":8}},{"value":"/ Time: O(1)*","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":422083,"byte_end":422098,"line_start":2111,"line_end":2111,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3247},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":422192,"byte_end":422201,"line_start":2116,"line_end":2116,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<ConsumingIter<A> as std::iter::Iterator>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8477},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3250},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":422469,"byte_end":422478,"line_start":2126,"line_end":2126,"column_start":8,"column_end":17},"name":"next_back","qualname":"<ConsumingIter<A> as std::iter::DoubleEndedIterator>::next_back","value":"fn next_back(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8323},"children":[],"decl_id":{"krate":2,"index":8324},"docs":" Remove and return an element from the back of the iterator.","sig":null,"attributes":[{"value":"/ Remove and return an element from the back of the iterator.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":422370,"byte_end":422433,"line_start":2123,"line_end":2123,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":422438,"byte_end":422441,"line_start":2124,"line_end":2124,"column_start":5,"column_end":8}},{"value":"/ Time: O(1)*","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":422446,"byte_end":422461,"line_start":2125,"line_end":2125,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3255},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":422832,"byte_end":422838,"line_start":2140,"line_end":2140,"column_start":12,"column_end":18},"name":"Chunks","qualname":"::vector::Chunks","value":"Chunks {  }","parent":null,"children":[{"krate":0,"index":3258},{"krate":0,"index":3259},{"krate":0,"index":3260}],"decl_id":null,"docs":" An iterator over the leaf nodes of a vector.","sig":null,"attributes":[{"value":"/ An iterator over the leaf nodes of a vector.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":422666,"byte_end":422714,"line_start":2135,"line_end":2135,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":422715,"byte_end":422718,"line_start":2136,"line_end":2136,"column_start":1,"column_end":4}},{"value":"/ To obtain one, use [`Vector::chunks()`][chunks].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":422719,"byte_end":422771,"line_start":2137,"line_end":2137,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":422772,"byte_end":422775,"line_start":2138,"line_end":2138,"column_start":1,"column_end":4}},{"value":"/ [chunks]: enum.Vector.html#method.chunks","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":422776,"byte_end":422820,"line_start":2139,"line_end":2139,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3269},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":423295,"byte_end":423299,"line_start":2162,"line_end":2162,"column_start":8,"column_end":12},"name":"next","qualname":"<Chunks as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8476},"docs":" Advance the iterator and return the next value.","sig":null,"attributes":[{"value":"/ Advance the iterator and return the next value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":423208,"byte_end":423259,"line_start":2159,"line_end":2159,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":423264,"byte_end":423267,"line_start":2160,"line_end":2160,"column_start":5,"column_end":8}},{"value":"/ Time: O(1)*","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":423272,"byte_end":423287,"line_start":2161,"line_end":2161,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3273},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":423829,"byte_end":423838,"line_start":2178,"line_end":2178,"column_start":8,"column_end":17},"name":"next_back","qualname":"<Chunks as std::iter::DoubleEndedIterator>::next_back","value":"fn next_back(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8323},"children":[],"decl_id":{"krate":2,"index":8324},"docs":" Remove and return an element from the back of the iterator.","sig":null,"attributes":[{"value":"/ Remove and return an element from the back of the iterator.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":423730,"byte_end":423793,"line_start":2175,"line_end":2175,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":423798,"byte_end":423801,"line_start":2176,"line_end":2176,"column_start":5,"column_end":8}},{"value":"/ Time: O(1)*","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":423806,"byte_end":423821,"line_start":2177,"line_end":2177,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3277},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":424480,"byte_end":424489,"line_start":2198,"line_end":2198,"column_start":12,"column_end":21},"name":"ChunksMut","qualname":"::vector::ChunksMut","value":"ChunksMut {  }","parent":null,"children":[{"krate":0,"index":3280},{"krate":0,"index":3281},{"krate":0,"index":3282}],"decl_id":null,"docs":" A mutable iterator over the leaf nodes of a vector.","sig":null,"attributes":[{"value":"/ A mutable iterator over the leaf nodes of a vector.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":424291,"byte_end":424346,"line_start":2193,"line_end":2193,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":424347,"byte_end":424350,"line_start":2194,"line_end":2194,"column_start":1,"column_end":4}},{"value":"/ To obtain one, use [`Vector::chunks_mut()`][chunks_mut].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":424351,"byte_end":424411,"line_start":2195,"line_end":2195,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":424412,"byte_end":424415,"line_start":2196,"line_end":2196,"column_start":1,"column_end":4}},{"value":"/ [chunks_mut]: enum.Vector.html#method.chunks_mut","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":424416,"byte_end":424468,"line_start":2197,"line_end":2197,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":3291},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":424993,"byte_end":424997,"line_start":2221,"line_end":2221,"column_start":8,"column_end":12},"name":"next","qualname":"<ChunksMut as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8476},"docs":" Advance the iterator and return the next value.","sig":null,"attributes":[{"value":"/ Advance the iterator and return the next value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":424906,"byte_end":424957,"line_start":2218,"line_end":2218,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":424962,"byte_end":424965,"line_start":2219,"line_end":2219,"column_start":5,"column_end":8}},{"value":"/ Time: O(1)*","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":424970,"byte_end":424985,"line_start":2220,"line_end":2220,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3295},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":425533,"byte_end":425542,"line_start":2237,"line_end":2237,"column_start":8,"column_end":17},"name":"next_back","qualname":"<ChunksMut as std::iter::DoubleEndedIterator>::next_back","value":"fn next_back(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8323},"children":[],"decl_id":{"krate":2,"index":8324},"docs":" Remove and return an element from the back of the iterator.","sig":null,"attributes":[{"value":"/ Remove and return an element from the back of the iterator.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":425434,"byte_end":425497,"line_start":2234,"line_end":2234,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":425502,"byte_end":425505,"line_start":2235,"line_end":2235,"column_start":5,"column_end":8}},{"value":"/ Time: O(1)*","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":425510,"byte_end":425525,"line_start":2236,"line_end":2236,"column_start":5,"column_end":20}}]},{"kind":"Mod","id":{"krate":0,"index":3299},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/iter.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"iter","qualname":"::iter","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/iter.rs","parent":null,"children":[{"krate":0,"index":3300}],"decl_id":null,"docs":" Iterators over immutable data.\n","sig":null,"attributes":[{"value":"/ Iterators over immutable data.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/iter.rs","byte_start":479767,"byte_end":479801,"line_start":5,"line_end":5,"column_start":1,"column_end":35}}]},{"kind":"Function","id":{"krate":0,"index":3300},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/iter.rs","byte_start":480803,"byte_end":480809,"line_start":31,"line_end":31,"column_start":8,"column_end":14},"name":"unfold","qualname":"::iter::unfold","value":"fn unfold<F, S, A>(S, F) -> /*impl Trait*/ where F: Fn(S) -> Option<(A, S)>","parent":null,"children":[],"decl_id":null,"docs":" Create an iterator of values using a function to update an owned state\n value.","sig":null,"attributes":[{"value":"/ Create an iterator of values using a function to update an owned state","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/iter.rs","byte_start":479803,"byte_end":479877,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/ value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/iter.rs","byte_start":479878,"byte_end":479888,"line_start":8,"line_end":8,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/iter.rs","byte_start":479889,"byte_end":479892,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The function is called with the current state as its argument, and should","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/iter.rs","byte_start":479893,"byte_end":479970,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ return an [`Option`][std::option::Option] of a tuple of the next value to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/iter.rs","byte_start":479971,"byte_end":480048,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ yield from the iterator and the updated state. If the function returns","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/iter.rs","byte_start":480049,"byte_end":480123,"line_start":12,"line_end":12,"column_start":1,"column_end":75}},{"value":"/ [`None`][std::option::Option::None], the iterator ends.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/iter.rs","byte_start":480124,"byte_end":480183,"line_start":13,"line_end":13,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/iter.rs","byte_start":480184,"byte_end":480187,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/iter.rs","byte_start":480188,"byte_end":480202,"line_start":15,"line_end":15,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/iter.rs","byte_start":480203,"byte_end":480210,"line_start":16,"line_end":16,"column_start":1,"column_end":8}},{"value":"/ # #[macro_use] extern crate im;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/iter.rs","byte_start":480211,"byte_end":480246,"line_start":17,"line_end":17,"column_start":1,"column_end":36}},{"value":"/ # use im::iter::unfold;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/iter.rs","byte_start":480247,"byte_end":480274,"line_start":18,"line_end":18,"column_start":1,"column_end":28}},{"value":"/ # use im::vector::Vector;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/iter.rs","byte_start":480275,"byte_end":480304,"line_start":19,"line_end":19,"column_start":1,"column_end":30}},{"value":"/ # use std::iter::FromIterator;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/iter.rs","byte_start":480305,"byte_end":480339,"line_start":20,"line_end":20,"column_start":1,"column_end":35}},{"value":"/ // Create an infinite stream of numbers, starting at 0.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/iter.rs","byte_start":480340,"byte_end":480399,"line_start":21,"line_end":21,"column_start":1,"column_end":60}},{"value":"/ let mut it = unfold(0, |i| Some((i, i + 1)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/iter.rs","byte_start":480400,"byte_end":480449,"line_start":22,"line_end":22,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/iter.rs","byte_start":480450,"byte_end":480453,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ // Make a list out of its first five elements.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/iter.rs","byte_start":480454,"byte_end":480504,"line_start":24,"line_end":24,"column_start":1,"column_end":51}},{"value":"/ let numbers = Vector::from_iter(it.take(5));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/iter.rs","byte_start":480505,"byte_end":480553,"line_start":25,"line_end":25,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(numbers, vector![0, 1, 2, 3, 4]);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/iter.rs","byte_start":480554,"byte_end":480602,"line_start":26,"line_end":26,"column_start":1,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/iter.rs","byte_start":480603,"byte_end":480610,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/iter.rs","byte_start":480611,"byte_end":480614,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ [std::option::Option]: https://doc.rust-lang.org/std/option/enum.Option.html","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/iter.rs","byte_start":480615,"byte_end":480695,"line_start":29,"line_end":29,"column_start":1,"column_end":81}},{"value":"/ [std::option::Option::None]: https://doc.rust-lang.org/std/option/enum.Option.html#variant.None","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/iter.rs","byte_start":480696,"byte_end":480795,"line_start":30,"line_end":30,"column_start":1,"column_end":100}}]},{"kind":"Mod","id":{"krate":0,"index":3307},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ser.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ser","qualname":"::ser","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ser.rs","parent":null,"children":[{"krate":0,"index":3308},{"krate":0,"index":3309},{"krate":0,"index":3312},{"krate":0,"index":3315},{"krate":0,"index":3318},{"krate":0,"index":3321},{"krate":0,"index":3324},{"krate":0,"index":3325},{"krate":0,"index":3328},{"krate":0,"index":3331},{"krate":0,"index":3334},{"krate":0,"index":3337},{"krate":0,"index":3340},{"krate":0,"index":3341},{"krate":0,"index":3344},{"krate":0,"index":3345},{"krate":0,"index":3347},{"krate":0,"index":3348},{"krate":0,"index":3350},{"krate":0,"index":3353},{"krate":0,"index":3356},{"krate":0,"index":3359},{"krate":0,"index":3362},{"krate":0,"index":3365},{"krate":0,"index":3368},{"krate":0,"index":3375},{"krate":0,"index":3380},{"krate":0,"index":3388},{"krate":0,"index":3397},{"krate":0,"index":3403},{"krate":0,"index":3412},{"krate":0,"index":3417},{"krate":0,"index":3421},{"krate":0,"index":3427},{"krate":0,"index":3432},{"krate":0,"index":3439},{"krate":0,"index":3445},{"krate":0,"index":3451},{"krate":0,"index":3456},{"krate":0,"index":3461}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(any(test, feature = \"serde\"))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":20109,"byte_end":20145,"line_start":373,"line_end":373,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3415},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ser.rs","byte_start":484248,"byte_end":484259,"line_start":126,"line_end":126,"column_start":8,"column_end":19},"name":"deserialize","qualname":"<OrdSet<A> as serde::Deserialize>::deserialize","value":"fn deserialize<D>(D) -> Result<Self, D::Error> where D: Deserializer","parent":{"krate":38,"index":1600},"children":[],"decl_id":{"krate":38,"index":1602},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3419},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ser.rs","byte_start":484465,"byte_end":484474,"line_start":135,"line_end":135,"column_start":8,"column_end":17},"name":"serialize","qualname":"<OrdSet<A> as serde::Serialize>::serialize","value":"fn serialize<S>(&Self, S) -> Result<S::Ok, S::Error> where S: Serializer","parent":{"krate":38,"index":2149},"children":[],"decl_id":{"krate":38,"index":2150},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3425},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ser.rs","byte_start":484857,"byte_end":484868,"line_start":152,"line_end":152,"column_start":8,"column_end":19},"name":"deserialize","qualname":"<OrdMap<K, V> as serde::Deserialize>::deserialize","value":"fn deserialize<D>(D) -> Result<Self, D::Error> where D: Deserializer","parent":{"krate":38,"index":1600},"children":[],"decl_id":{"krate":38,"index":1602},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3430},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ser.rs","byte_start":485126,"byte_end":485135,"line_start":161,"line_end":161,"column_start":8,"column_end":17},"name":"serialize","qualname":"<OrdMap<K, V> as serde::Serialize>::serialize","value":"fn serialize<S>(&Self, S) -> Result<S::Ok, S::Error> where S: Serializer","parent":{"krate":38,"index":2149},"children":[],"decl_id":{"krate":38,"index":2150},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3437},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ser.rs","byte_start":485595,"byte_end":485606,"line_start":181,"line_end":181,"column_start":8,"column_end":19},"name":"deserialize","qualname":"<HashMap<K, V, S> as serde::Deserialize>::deserialize","value":"fn deserialize<D>(D) -> Result<Self, D::Error> where D: Deserializer","parent":{"krate":38,"index":1600},"children":[],"decl_id":{"krate":38,"index":1602},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3443},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ser.rs","byte_start":485931,"byte_end":485940,"line_start":195,"line_end":195,"column_start":8,"column_end":17},"name":"serialize","qualname":"<HashMap<K, V, S> as serde::Serialize>::serialize","value":"fn serialize<Ser>(&Self, Ser) -> Result<Ser::Ok, Ser::Error> where\nSer: Serializer","parent":{"krate":38,"index":2149},"children":[],"decl_id":{"krate":38,"index":2150},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3449},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ser.rs","byte_start":486355,"byte_end":486366,"line_start":212,"line_end":212,"column_start":8,"column_end":19},"name":"deserialize","qualname":"<HashSet<A, S> as serde::Deserialize>::deserialize","value":"fn deserialize<D>(D) -> Result<Self, D::Error> where D: Deserializer","parent":{"krate":38,"index":1600},"children":[],"decl_id":{"krate":38,"index":1602},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3454},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ser.rs","byte_start":486608,"byte_end":486617,"line_start":221,"line_end":221,"column_start":8,"column_end":17},"name":"serialize","qualname":"<HashSet<A, S> as serde::Serialize>::serialize","value":"fn serialize<Ser>(&Self, Ser) -> Result<Ser::Ok, Ser::Error> where\nSer: Serializer","parent":{"krate":38,"index":2149},"children":[],"decl_id":{"krate":38,"index":2150},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3459},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ser.rs","byte_start":486971,"byte_end":486982,"line_start":236,"line_end":236,"column_start":8,"column_end":19},"name":"deserialize","qualname":"<Vector<A> as serde::Deserialize>::deserialize","value":"fn deserialize<D>(D) -> Result<Self, D::Error> where D: Deserializer","parent":{"krate":38,"index":1600},"children":[],"decl_id":{"krate":38,"index":1602},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3463},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ser.rs","byte_start":487203,"byte_end":487212,"line_start":245,"line_end":245,"column_start":8,"column_end":17},"name":"serialize","qualname":"<Vector<A> as serde::Serialize>::serialize","value":"fn serialize<S>(&Self, S) -> Result<S::Ok, S::Error> where S: Serializer","parent":{"krate":38,"index":2149},"children":[],"decl_id":{"krate":38,"index":2150},"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/btree.rs","byte_start":26978,"byte_end":26982,"line_start":52,"line_end":52,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/btree.rs","byte_start":27357,"byte_end":27361,"line_start":63,"line_end":63,"column_start":23,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/btree.rs","byte_start":28245,"byte_end":28249,"line_start":110,"line_end":110,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/btree.rs","byte_start":28441,"byte_end":28445,"line_start":122,"line_end":122,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/btree.rs","byte_start":28593,"byte_end":28597,"line_start":131,"line_end":131,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/btree.rs","byte_start":29737,"byte_end":29741,"line_start":181,"line_end":181,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":156},{"krate":0,"index":158},{"krate":0,"index":160},{"krate":0,"index":162},{"krate":0,"index":166},{"krate":0,"index":170},{"krate":0,"index":173},{"krate":0,"index":176},{"krate":0,"index":179},{"krate":0,"index":182},{"krate":0,"index":185},{"krate":0,"index":188},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":199},{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/btree.rs","byte_start":58516,"byte_end":58520,"line_start":939,"line_end":939,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":214},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/btree.rs","byte_start":63602,"byte_end":63606,"line_start":1072,"line_end":1072,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/btree.rs","byte_start":64323,"byte_end":64327,"line_start":1096,"line_end":1096,"column_start":54,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/btree.rs","byte_start":65196,"byte_end":65209,"line_start":1129,"line_end":1129,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/btree.rs","byte_start":66817,"byte_end":66830,"line_start":1175,"line_end":1175,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/btree.rs","byte_start":67948,"byte_end":67961,"line_start":1211,"line_end":1211,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/btree.rs","byte_start":68981,"byte_end":68994,"line_start":1241,"line_end":1241,"column_start":51,"column_end":64},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/btree.rs","byte_start":69704,"byte_end":69712,"line_start":1272,"line_end":1272,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/btree.rs","byte_start":70703,"byte_end":70711,"line_start":1304,"line_end":1304,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":286},{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/hamt.rs","byte_start":75282,"byte_end":75286,"line_start":49,"line_end":49,"column_start":25,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/hamt.rs","byte_start":75669,"byte_end":75673,"line_start":63,"line_end":63,"column_start":23,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/hamt.rs","byte_start":76272,"byte_end":76277,"line_start":91,"line_end":91,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/hamt.rs","byte_start":76568,"byte_end":76573,"line_start":101,"line_end":101,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/hamt.rs","byte_start":77008,"byte_end":77013,"line_start":118,"line_end":118,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/hamt.rs","byte_start":77135,"byte_end":77139,"line_start":124,"line_end":124,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/hamt.rs","byte_start":77209,"byte_end":77213,"line_start":130,"line_end":130,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/hamt.rs","byte_start":78092,"byte_end":78096,"line_start":169,"line_end":169,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":423},{"krate":0,"index":425},{"krate":0,"index":426}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/hamt.rs","byte_start":86345,"byte_end":86358,"line_start":398,"line_end":398,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":434},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":439}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/hamt.rs","byte_start":88240,"byte_end":88244,"line_start":479,"line_end":479,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/hamt.rs","byte_start":88557,"byte_end":88561,"line_start":493,"line_end":493,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/hamt.rs","byte_start":90065,"byte_end":90069,"line_start":545,"line_end":545,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/hamt.rs","byte_start":90123,"byte_end":90127,"line_start":547,"line_end":547,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/hamt.rs","byte_start":90428,"byte_end":90435,"line_start":559,"line_end":559,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/hamt.rs","byte_start":90813,"byte_end":90820,"line_start":574,"line_end":574,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/hamt.rs","byte_start":92474,"byte_end":92481,"line_start":628,"line_end":628,"column_start":35,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/hamt.rs","byte_start":92543,"byte_end":92550,"line_start":630,"line_end":630,"column_start":31,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/hamt.rs","byte_start":92818,"byte_end":92823,"line_start":645,"line_end":645,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":496}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/hamt.rs","byte_start":93140,"byte_end":93145,"line_start":660,"line_end":660,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":501}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/hamt.rs","byte_start":94604,"byte_end":94609,"line_start":709,"line_end":709,"column_start":42,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/hamt.rs","byte_start":94669,"byte_end":94674,"line_start":711,"line_end":711,"column_start":38,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/hamt.rs","byte_start":94744,"byte_end":94748,"line_start":713,"line_end":713,"column_start":48,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":508}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/rrb.rs","byte_start":95802,"byte_end":95806,"line_start":25,"line_end":25,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":546}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/rrb.rs","byte_start":96001,"byte_end":96005,"line_start":34,"line_end":34,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":553}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/rrb.rs","byte_start":100305,"byte_end":100310,"line_start":168,"line_end":168,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":591}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/rrb.rs","byte_start":100566,"byte_end":100571,"line_start":178,"line_end":178,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/rrb.rs","byte_start":102549,"byte_end":102553,"line_start":248,"line_end":248,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":608}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/rrb.rs","byte_start":102695,"byte_end":102699,"line_start":256,"line_end":256,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":611}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/rrb.rs","byte_start":102776,"byte_end":102780,"line_start":262,"line_end":262,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":622},{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":641},{"krate":0,"index":642},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":646},{"krate":0,"index":647}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/sync.rs","byte_start":143732,"byte_end":143736,"line_start":16,"line_end":16,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":707},{"krate":0,"index":708}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/sync.rs","byte_start":144043,"byte_end":144047,"line_start":29,"line_end":29,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":711}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":153930,"byte_end":153936,"line_start":172,"line_end":172,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":881}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":157318,"byte_end":157324,"line_start":311,"line_end":311,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":885},{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":891},{"krate":0,"index":892},{"krate":0,"index":893},{"krate":0,"index":895},{"krate":0,"index":898},{"krate":0,"index":901},{"krate":0,"index":904},{"krate":0,"index":907},{"krate":0,"index":909},{"krate":0,"index":915},{"krate":0,"index":919},{"krate":0,"index":921}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":165861,"byte_end":165867,"line_start":620,"line_end":620,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":926},{"krate":0,"index":929},{"krate":0,"index":932},{"krate":0,"index":935},{"krate":0,"index":936},{"krate":0,"index":939},{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":945},{"krate":0,"index":947},{"krate":0,"index":949},{"krate":0,"index":952},{"krate":0,"index":956},{"krate":0,"index":959},{"krate":0,"index":962},{"krate":0,"index":963},{"krate":0,"index":966},{"krate":0,"index":969},{"krate":0,"index":971},{"krate":0,"index":973},{"krate":0,"index":977},{"krate":0,"index":981},{"krate":0,"index":982},{"krate":0,"index":984},{"krate":0,"index":986},{"krate":0,"index":989},{"krate":0,"index":991},{"krate":0,"index":993},{"krate":0,"index":994},{"krate":0,"index":996},{"krate":0,"index":1001},{"krate":0,"index":1005},{"krate":0,"index":1007},{"krate":0,"index":1010},{"krate":0,"index":1012},{"krate":0,"index":1014},{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":1019},{"krate":0,"index":1020}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":193270,"byte_end":193275,"line_start":1512,"line_end":1512,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1035},{"krate":0,"index":1037},{"krate":0,"index":1039},{"krate":0,"index":1040},{"krate":0,"index":1041}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":194962,"byte_end":194975,"line_start":1578,"line_end":1578,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1053},{"krate":0,"index":1054},{"krate":0,"index":1055},{"krate":0,"index":1056},{"krate":0,"index":1057},{"krate":0,"index":1058},{"krate":0,"index":1059}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":196327,"byte_end":196338,"line_start":1635,"line_end":1635,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1070},{"krate":0,"index":1071},{"krate":0,"index":1072}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":196910,"byte_end":196916,"line_start":1662,"line_end":1662,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1076}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":197213,"byte_end":197219,"line_start":1677,"line_end":1677,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1080}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":197953,"byte_end":197959,"line_start":1710,"line_end":1710,"column_start":33,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":197996,"byte_end":198002,"line_start":1712,"line_end":1712,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1087}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":198184,"byte_end":198190,"line_start":1722,"line_end":1722,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1091}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":198342,"byte_end":198348,"line_start":1732,"line_end":1732,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1095}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":198567,"byte_end":198573,"line_start":1747,"line_end":1747,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1100}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":198871,"byte_end":198877,"line_start":1765,"line_end":1765,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1110},{"krate":0,"index":1111}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":199061,"byte_end":199067,"line_start":1777,"line_end":1777,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1115}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":199291,"byte_end":199297,"line_start":1790,"line_end":1790,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1123}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":199615,"byte_end":199621,"line_start":1805,"line_end":1805,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1130},{"krate":0,"index":1131}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":199953,"byte_end":199959,"line_start":1820,"line_end":1820,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1137}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":200373,"byte_end":200379,"line_start":1835,"line_end":1835,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1141}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":200784,"byte_end":200788,"line_start":1856,"line_end":1856,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1151},{"krate":0,"index":1152},{"krate":0,"index":1154}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":201120,"byte_end":201124,"line_start":1871,"line_end":1871,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1159}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":201319,"byte_end":201323,"line_start":1880,"line_end":1880,"column_start":38,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":201988,"byte_end":201996,"line_start":1903,"line_end":1903,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1174},{"krate":0,"index":1175}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":202685,"byte_end":202689,"line_start":1929,"line_end":1929,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1186},{"krate":0,"index":1187},{"krate":0,"index":1189}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":202981,"byte_end":202985,"line_start":1945,"line_end":1945,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1194}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":203174,"byte_end":203178,"line_start":1955,"line_end":1955,"column_start":38,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":203355,"byte_end":203361,"line_start":1967,"line_end":1967,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1209},{"krate":0,"index":1210},{"krate":0,"index":1212}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":203653,"byte_end":203659,"line_start":1983,"line_end":1983,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1217}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":203848,"byte_end":203854,"line_start":1993,"line_end":1993,"column_start":38,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":203950,"byte_end":203956,"line_start":2000,"line_end":2000,"column_start":47,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1228}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":204503,"byte_end":204509,"line_start":2029,"line_end":2029,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1240},{"krate":0,"index":1241},{"krate":0,"index":1242}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":204779,"byte_end":204785,"line_start":2044,"line_end":2044,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1246}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":204914,"byte_end":204920,"line_start":2050,"line_end":2050,"column_start":67,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":1255}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":205286,"byte_end":205292,"line_start":2064,"line_end":2064,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1265}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":205667,"byte_end":205673,"line_start":2080,"line_end":2080,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1272}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":205897,"byte_end":205903,"line_start":2090,"line_end":2090,"column_start":65,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":1281}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":206312,"byte_end":206318,"line_start":2106,"line_end":2106,"column_start":75,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":1288}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":206567,"byte_end":206573,"line_start":2116,"line_end":2116,"column_start":75,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":1297}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":206990,"byte_end":206996,"line_start":2132,"line_end":2132,"column_start":65,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":1304}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":207252,"byte_end":207258,"line_start":2142,"line_end":2142,"column_start":81,"column_end":87},"value":"","parent":null,"children":[{"krate":0,"index":1313}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":207692,"byte_end":207698,"line_start":2158,"line_end":2158,"column_start":87,"column_end":93},"value":"","parent":null,"children":[{"krate":0,"index":1319}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":207889,"byte_end":207895,"line_start":2165,"line_end":2165,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1325}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":227182,"byte_end":227187,"line_start":69,"line_end":69,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1418},{"krate":0,"index":1419}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":227465,"byte_end":227470,"line_start":79,"line_end":79,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1422},{"krate":0,"index":1423},{"krate":0,"index":1424},{"krate":0,"index":1427},{"krate":0,"index":1429},{"krate":0,"index":1431}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":230214,"byte_end":230220,"line_start":181,"line_end":181,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1439},{"krate":0,"index":1440},{"krate":0,"index":1441},{"krate":0,"index":1442},{"krate":0,"index":1443},{"krate":0,"index":1444}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":233436,"byte_end":233442,"line_start":313,"line_end":313,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1447},{"krate":0,"index":1448},{"krate":0,"index":1449},{"krate":0,"index":1450},{"krate":0,"index":1453},{"krate":0,"index":1455},{"krate":0,"index":1457},{"krate":0,"index":1459},{"krate":0,"index":1461},{"krate":0,"index":1464}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":237994,"byte_end":238000,"line_start":469,"line_end":469,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1468},{"krate":0,"index":1469},{"krate":0,"index":1471},{"krate":0,"index":1472},{"krate":0,"index":1473},{"krate":0,"index":1474},{"krate":0,"index":1476},{"krate":0,"index":1477},{"krate":0,"index":1478},{"krate":0,"index":1479},{"krate":0,"index":1481},{"krate":0,"index":1482},{"krate":0,"index":1483},{"krate":0,"index":1484},{"krate":0,"index":1485},{"krate":0,"index":1487},{"krate":0,"index":1489},{"krate":0,"index":1490}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":247695,"byte_end":247701,"line_start":830,"line_end":830,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1493}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":247965,"byte_end":247971,"line_start":844,"line_end":844,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1496}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":248181,"byte_end":248187,"line_start":851,"line_end":851,"column_start":26,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":248223,"byte_end":248229,"line_start":853,"line_end":853,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1501}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":248373,"byte_end":248379,"line_start":859,"line_end":859,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1504}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":248507,"byte_end":248513,"line_start":865,"line_end":865,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1507}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":248688,"byte_end":248694,"line_start":876,"line_end":876,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1511}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":248787,"byte_end":248793,"line_start":882,"line_end":882,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1514},{"krate":0,"index":1515}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":249119,"byte_end":249125,"line_start":898,"line_end":898,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1523},{"krate":0,"index":1524}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":249465,"byte_end":249471,"line_start":914,"line_end":914,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1532}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":249633,"byte_end":249639,"line_start":923,"line_end":923,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1538}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":249891,"byte_end":249897,"line_start":937,"line_end":937,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1542}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":250171,"byte_end":250175,"line_start":950,"line_end":950,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1550},{"krate":0,"index":1551},{"krate":0,"index":1552}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":250561,"byte_end":250565,"line_start":968,"line_end":968,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1556}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":250739,"byte_end":250743,"line_start":977,"line_end":977,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":251103,"byte_end":251113,"line_start":988,"line_end":988,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1567},{"krate":0,"index":1568},{"krate":0,"index":1569}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":251474,"byte_end":251484,"line_start":1006,"line_end":1006,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1573}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":251768,"byte_end":251781,"line_start":1020,"line_end":1020,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1579},{"krate":0,"index":1580}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":252156,"byte_end":252164,"line_start":1039,"line_end":1039,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1589},{"krate":0,"index":1590}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":252736,"byte_end":252742,"line_start":1060,"line_end":1060,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1595}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":253223,"byte_end":253229,"line_start":1088,"line_end":1088,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1605},{"krate":0,"index":1606},{"krate":0,"index":1607}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":253532,"byte_end":253538,"line_start":1104,"line_end":1104,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1613}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":253760,"byte_end":253766,"line_start":1114,"line_end":1114,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1618}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":253923,"byte_end":253929,"line_start":1123,"line_end":1123,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1621}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":254059,"byte_end":254065,"line_start":1129,"line_end":1129,"column_start":47,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1625}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":254221,"byte_end":254227,"line_start":1135,"line_end":1135,"column_start":68,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":1628}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":254413,"byte_end":254419,"line_start":1141,"line_end":1141,"column_start":76,"column_end":82},"value":"","parent":null,"children":[{"krate":0,"index":1632}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":254591,"byte_end":254597,"line_start":1147,"line_end":1147,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1635}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":254775,"byte_end":254781,"line_start":1153,"line_end":1153,"column_start":65,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":1639}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":254973,"byte_end":254979,"line_start":1159,"line_end":1159,"column_start":74,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":1643}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":255159,"byte_end":255165,"line_start":1165,"line_end":1165,"column_start":82,"column_end":88},"value":"","parent":null,"children":[{"krate":0,"index":1648}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":261919,"byte_end":261926,"line_start":122,"line_end":122,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1762}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":262443,"byte_end":262450,"line_start":144,"line_end":144,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1766}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":262981,"byte_end":262988,"line_start":169,"line_end":169,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1771},{"krate":0,"index":1772},{"krate":0,"index":1773},{"krate":0,"index":1774},{"krate":0,"index":1776},{"krate":0,"index":1777},{"krate":0,"index":1780},{"krate":0,"index":1781},{"krate":0,"index":1782},{"krate":0,"index":1783}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":268317,"byte_end":268324,"line_start":364,"line_end":364,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1788},{"krate":0,"index":1789},{"krate":0,"index":1792},{"krate":0,"index":1795},{"krate":0,"index":1797},{"krate":0,"index":1803},{"krate":0,"index":1807},{"krate":0,"index":1809}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":273526,"byte_end":273533,"line_start":561,"line_end":561,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1815},{"krate":0,"index":1816},{"krate":0,"index":1818},{"krate":0,"index":1820},{"krate":0,"index":1823},{"krate":0,"index":1825},{"krate":0,"index":1826},{"krate":0,"index":1827},{"krate":0,"index":1829},{"krate":0,"index":1831},{"krate":0,"index":1833},{"krate":0,"index":1836},{"krate":0,"index":1838},{"krate":0,"index":1840},{"krate":0,"index":1843},{"krate":0,"index":1846},{"krate":0,"index":1847},{"krate":0,"index":1850},{"krate":0,"index":1853},{"krate":0,"index":1855},{"krate":0,"index":1857},{"krate":0,"index":1861},{"krate":0,"index":1865},{"krate":0,"index":1866},{"krate":0,"index":1868},{"krate":0,"index":1870},{"krate":0,"index":1873},{"krate":0,"index":1875},{"krate":0,"index":1877},{"krate":0,"index":1878},{"krate":0,"index":1880},{"krate":0,"index":1885}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":298321,"byte_end":298326,"line_start":1369,"line_end":1369,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1905},{"krate":0,"index":1907},{"krate":0,"index":1909},{"krate":0,"index":1910},{"krate":0,"index":1911}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":300113,"byte_end":300126,"line_start":1438,"line_end":1438,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1926},{"krate":0,"index":1927},{"krate":0,"index":1928},{"krate":0,"index":1929},{"krate":0,"index":1930},{"krate":0,"index":1931},{"krate":0,"index":1932}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":301960,"byte_end":301971,"line_start":1507,"line_end":1507,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1946},{"krate":0,"index":1947},{"krate":0,"index":1948}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":302899,"byte_end":302906,"line_start":1545,"line_end":1545,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1953}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":303285,"byte_end":303292,"line_start":1565,"line_end":1565,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1958}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":303983,"byte_end":303990,"line_start":1603,"line_end":1603,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":304089,"byte_end":304096,"line_start":1611,"line_end":1611,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1967}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":304461,"byte_end":304468,"line_start":1625,"line_end":1625,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1972}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":304788,"byte_end":304795,"line_start":1639,"line_end":1639,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1977}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":305039,"byte_end":305046,"line_start":1655,"line_end":1655,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1983}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":305381,"byte_end":305388,"line_start":1672,"line_end":1672,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1988},{"krate":0,"index":1989}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":305859,"byte_end":305866,"line_start":1698,"line_end":1698,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2001}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":306132,"byte_end":306139,"line_start":1712,"line_end":1712,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2010}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":306489,"byte_end":306496,"line_start":1728,"line_end":1728,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2018},{"krate":0,"index":2019}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":306897,"byte_end":306904,"line_start":1744,"line_end":1744,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2026}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":307423,"byte_end":307430,"line_start":1761,"line_end":1761,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2031}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":308618,"byte_end":308622,"line_start":1817,"line_end":1817,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2041},{"krate":0,"index":2042},{"krate":0,"index":2044}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":308897,"byte_end":308901,"line_start":1829,"line_end":1829,"column_start":38,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":308949,"byte_end":308953,"line_start":1831,"line_end":1831,"column_start":34,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":309148,"byte_end":309155,"line_start":1842,"line_end":1842,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2062},{"krate":0,"index":2063},{"krate":0,"index":2065}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":309470,"byte_end":309477,"line_start":1858,"line_end":1858,"column_start":38,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":309560,"byte_end":309567,"line_start":1865,"line_end":1865,"column_start":34,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":309757,"byte_end":309770,"line_start":1877,"line_end":1877,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2079},{"krate":0,"index":2080},{"krate":0,"index":2082}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":310040,"byte_end":310053,"line_start":1892,"line_end":1892,"column_start":31,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":310114,"byte_end":310127,"line_start":1894,"line_end":1894,"column_start":27,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":310291,"byte_end":310295,"line_start":1901,"line_end":1901,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2096},{"krate":0,"index":2097},{"krate":0,"index":2099}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":310556,"byte_end":310560,"line_start":1913,"line_end":1913,"column_start":38,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":310608,"byte_end":310612,"line_start":1915,"line_end":1915,"column_start":34,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":310760,"byte_end":310766,"line_start":1922,"line_end":1922,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2117},{"krate":0,"index":2118},{"krate":0,"index":2120}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":311027,"byte_end":311033,"line_start":1934,"line_end":1934,"column_start":38,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":311081,"byte_end":311087,"line_start":1936,"line_end":1936,"column_start":34,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":311390,"byte_end":311397,"line_start":1952,"line_end":1952,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2141},{"krate":0,"index":2142},{"krate":0,"index":2143}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":311766,"byte_end":311773,"line_start":1971,"line_end":1971,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2148}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":312119,"byte_end":312126,"line_start":1989,"line_end":1989,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2154}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":312285,"byte_end":312292,"line_start":1996,"line_end":1996,"column_start":80,"column_end":87},"value":"","parent":null,"children":[{"krate":0,"index":2165}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":312716,"byte_end":312723,"line_start":2012,"line_end":2012,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2172}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":312931,"byte_end":312938,"line_start":2023,"line_end":2023,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2177}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":313149,"byte_end":313156,"line_start":2034,"line_end":2034,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2183}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":313382,"byte_end":313389,"line_start":2045,"line_end":2045,"column_start":52,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2188}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":313630,"byte_end":313637,"line_start":2056,"line_end":2056,"column_start":60,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":2194}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":313907,"byte_end":313914,"line_start":2067,"line_end":2067,"column_start":53,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2200}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":314157,"byte_end":314164,"line_start":2078,"line_end":2078,"column_start":61,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":2206}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":329998,"byte_end":330003,"line_start":104,"line_end":104,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2310},{"krate":0,"index":2311}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":330242,"byte_end":330247,"line_start":113,"line_end":113,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2314},{"krate":0,"index":2315},{"krate":0,"index":2316}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":330438,"byte_end":330445,"line_start":128,"line_end":128,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2319}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":330910,"byte_end":330917,"line_start":148,"line_end":148,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2322}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":331368,"byte_end":331375,"line_start":170,"line_end":170,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2326},{"krate":0,"index":2327},{"krate":0,"index":2328},{"krate":0,"index":2329},{"krate":0,"index":2331},{"krate":0,"index":2332},{"krate":0,"index":2334},{"krate":0,"index":2335}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":335551,"byte_end":335558,"line_start":329,"line_end":329,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2339},{"krate":0,"index":2340},{"krate":0,"index":2342},{"krate":0,"index":2345}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":337166,"byte_end":337173,"line_start":392,"line_end":392,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2350},{"krate":0,"index":2351},{"krate":0,"index":2354},{"krate":0,"index":2355},{"krate":0,"index":2357},{"krate":0,"index":2359},{"krate":0,"index":2360},{"krate":0,"index":2362},{"krate":0,"index":2363},{"krate":0,"index":2364},{"krate":0,"index":2365}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":343668,"byte_end":343675,"line_start":638,"line_end":638,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2369}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":344002,"byte_end":344009,"line_start":656,"line_end":656,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2373}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":344168,"byte_end":344175,"line_start":666,"line_end":666,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":344267,"byte_end":344274,"line_start":673,"line_end":673,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2380}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":344616,"byte_end":344623,"line_start":686,"line_end":686,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2384}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":344927,"byte_end":344934,"line_start":699,"line_end":699,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2388}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":345169,"byte_end":345176,"line_start":714,"line_end":714,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2393}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":345491,"byte_end":345498,"line_start":730,"line_end":730,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2397},{"krate":0,"index":2398}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":345695,"byte_end":345702,"line_start":742,"line_end":742,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2402},{"krate":0,"index":2403}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":346369,"byte_end":346376,"line_start":778,"line_end":778,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2419}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":346610,"byte_end":346617,"line_start":791,"line_end":791,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2426}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":346920,"byte_end":346927,"line_start":807,"line_end":807,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2431}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":347752,"byte_end":347756,"line_start":846,"line_end":846,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2439},{"krate":0,"index":2440},{"krate":0,"index":2442}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":348026,"byte_end":348030,"line_start":861,"line_end":861,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":348072,"byte_end":348076,"line_start":863,"line_end":863,"column_start":31,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":348256,"byte_end":348269,"line_start":873,"line_end":873,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2454},{"krate":0,"index":2455},{"krate":0,"index":2457}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":348541,"byte_end":348554,"line_start":888,"line_end":888,"column_start":31,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":348615,"byte_end":348628,"line_start":890,"line_end":890,"column_start":27,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":348724,"byte_end":348731,"line_start":894,"line_end":894,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2466}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":349290,"byte_end":349297,"line_start":924,"line_end":924,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2478},{"krate":0,"index":2479},{"krate":0,"index":2480}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":349656,"byte_end":349663,"line_start":941,"line_end":941,"column_start":62,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":2488}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":349961,"byte_end":349968,"line_start":953,"line_end":953,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2494}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":350154,"byte_end":350161,"line_start":963,"line_end":963,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2498}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":350346,"byte_end":350353,"line_start":973,"line_end":973,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2503}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":350538,"byte_end":350545,"line_start":983,"line_end":983,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2507}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":350742,"byte_end":350749,"line_start":993,"line_end":993,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2512}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":350957,"byte_end":350964,"line_start":1003,"line_end":1003,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2516}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":351193,"byte_end":351200,"line_start":1013,"line_end":1013,"column_start":54,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2521}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":351422,"byte_end":351429,"line_start":1023,"line_end":1023,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2526}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":351631,"byte_end":351638,"line_start":1033,"line_end":1033,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2530}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":351841,"byte_end":351848,"line_start":1043,"line_end":1043,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2535}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":445593,"byte_end":445598,"line_start":92,"line_end":92,"column_start":13,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2736},{"krate":0,"index":2737},{"krate":0,"index":2738},{"krate":0,"index":2739},{"krate":0,"index":2740},{"krate":0,"index":2741},{"krate":0,"index":2742},{"krate":0,"index":2744}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":450466,"byte_end":450471,"line_start":234,"line_end":234,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2748},{"krate":0,"index":2749},{"krate":0,"index":2750}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":450668,"byte_end":450673,"line_start":246,"line_end":246,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2754}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":451082,"byte_end":451091,"line_start":266,"line_end":266,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2764}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":451447,"byte_end":451456,"line_start":281,"line_end":281,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":451534,"byte_end":451543,"line_start":284,"line_end":284,"column_start":31,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":451679,"byte_end":451688,"line_start":291,"line_end":291,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2773},{"krate":0,"index":2774},{"krate":0,"index":2775},{"krate":0,"index":2776},{"krate":0,"index":2777},{"krate":0,"index":2778},{"krate":0,"index":2779},{"krate":0,"index":2780},{"krate":0,"index":2781},{"krate":0,"index":2782}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":457679,"byte_end":457687,"line_start":469,"line_end":469,"column_start":13,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2797},{"krate":0,"index":2798},{"krate":0,"index":2799},{"krate":0,"index":2800},{"krate":0,"index":2802},{"krate":0,"index":2803},{"krate":0,"index":2804},{"krate":0,"index":2805},{"krate":0,"index":2807},{"krate":0,"index":2809},{"krate":0,"index":2812},{"krate":0,"index":2815},{"krate":0,"index":2816},{"krate":0,"index":2818},{"krate":0,"index":2819}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":466914,"byte_end":466922,"line_start":736,"line_end":736,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2823},{"krate":0,"index":2824},{"krate":0,"index":2825}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":467145,"byte_end":467150,"line_start":748,"line_end":748,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2829}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":467459,"byte_end":467471,"line_start":765,"line_end":765,"column_start":13,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2841},{"krate":0,"index":2842},{"krate":0,"index":2843},{"krate":0,"index":2844},{"krate":0,"index":2845},{"krate":0,"index":2846},{"krate":0,"index":2847},{"krate":0,"index":2848},{"krate":0,"index":2849},{"krate":0,"index":2850}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/pool.rs","byte_start":473348,"byte_end":473355,"line_start":17,"line_end":17,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2878},{"krate":0,"index":2879},{"krate":0,"index":2880},{"krate":0,"index":2881},{"krate":0,"index":2882},{"krate":0,"index":2883}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/pool.rs","byte_start":474519,"byte_end":474526,"line_start":59,"line_end":59,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2886}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/pool.rs","byte_start":474677,"byte_end":474684,"line_start":66,"line_end":66,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2889}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/rayon.rs","byte_start":475271,"byte_end":475277,"line_start":11,"line_end":11,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2927},{"krate":0,"index":2928},{"krate":0,"index":2929}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/rayon.rs","byte_start":475537,"byte_end":475543,"line_start":25,"line_end":25,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2933},{"krate":0,"index":2934},{"krate":0,"index":2935}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/rayon.rs","byte_start":475989,"byte_end":475996,"line_start":49,"line_end":49,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2943},{"krate":0,"index":2944}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/rayon.rs","byte_start":476265,"byte_end":476272,"line_start":63,"line_end":63,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2949},{"krate":0,"index":2951},{"krate":0,"index":2952}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/rayon.rs","byte_start":476932,"byte_end":476942,"line_start":96,"line_end":96,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2961},{"krate":0,"index":2962}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/rayon.rs","byte_start":477215,"byte_end":477225,"line_start":110,"line_end":110,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2967},{"krate":0,"index":2969},{"krate":0,"index":2970}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/rayon.rs","byte_start":477781,"byte_end":477795,"line_start":140,"line_end":140,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2979},{"krate":0,"index":2980},{"krate":0,"index":2981},{"krate":0,"index":2982}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/rayon.rs","byte_start":478334,"byte_end":478351,"line_start":167,"line_end":167,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2990},{"krate":0,"index":2991},{"krate":0,"index":2992},{"krate":0,"index":2993}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":360426,"byte_end":360429,"line_start":166,"line_end":166,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3023}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":360804,"byte_end":360810,"line_start":180,"line_end":180,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3026},{"krate":0,"index":3027},{"krate":0,"index":3028},{"krate":0,"index":3029},{"krate":0,"index":3030},{"krate":0,"index":3031},{"krate":0,"index":3032},{"krate":0,"index":3033},{"krate":0,"index":3034},{"krate":0,"index":3035},{"krate":0,"index":3038},{"krate":0,"index":3039},{"krate":0,"index":3040},{"krate":0,"index":3041},{"krate":0,"index":3042},{"krate":0,"index":3043},{"krate":0,"index":3044},{"krate":0,"index":3045},{"krate":0,"index":3046},{"krate":0,"index":3047},{"krate":0,"index":3048},{"krate":0,"index":3049},{"krate":0,"index":3050},{"krate":0,"index":3051},{"krate":0,"index":3052},{"krate":0,"index":3053},{"krate":0,"index":3054},{"krate":0,"index":3055},{"krate":0,"index":3057},{"krate":0,"index":3059}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":379627,"byte_end":379633,"line_start":788,"line_end":788,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3065},{"krate":0,"index":3066},{"krate":0,"index":3067},{"krate":0,"index":3068},{"krate":0,"index":3069},{"krate":0,"index":3070},{"krate":0,"index":3071},{"krate":0,"index":3072},{"krate":0,"index":3073},{"krate":0,"index":3074},{"krate":0,"index":3076},{"krate":0,"index":3077},{"krate":0,"index":3078},{"krate":0,"index":3079},{"krate":0,"index":3080},{"krate":0,"index":3081},{"krate":0,"index":3083},{"krate":0,"index":3084},{"krate":0,"index":3085},{"krate":0,"index":3086},{"krate":0,"index":3087}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":405090,"byte_end":405093,"line_start":1520,"line_end":1520,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3091},{"krate":0,"index":3092},{"krate":0,"index":3093},{"krate":0,"index":3094},{"krate":0,"index":3095},{"krate":0,"index":3096},{"krate":0,"index":3097},{"krate":0,"index":3098}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":410960,"byte_end":410966,"line_start":1680,"line_end":1680,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3103}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":411053,"byte_end":411059,"line_start":1686,"line_end":1686,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3106}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":411553,"byte_end":411559,"line_start":1701,"line_end":1701,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3109}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":412111,"byte_end":412117,"line_start":1716,"line_end":1716,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3112}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":413863,"byte_end":413869,"line_start":1768,"line_end":1768,"column_start":28,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":413920,"byte_end":413926,"line_start":1770,"line_end":1770,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3117}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":414078,"byte_end":414084,"line_start":1776,"line_end":1776,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3120}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":414214,"byte_end":414220,"line_start":1782,"line_end":1782,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3123}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":414365,"byte_end":414371,"line_start":1790,"line_end":1790,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3127}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":414531,"byte_end":414537,"line_start":1799,"line_end":1799,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3132},{"krate":0,"index":3133}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":415045,"byte_end":415051,"line_start":1824,"line_end":1824,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3141}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":415351,"byte_end":415357,"line_start":1838,"line_end":1838,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3145},{"krate":0,"index":3146}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":415813,"byte_end":415819,"line_start":1855,"line_end":1855,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3149}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":416393,"byte_end":416399,"line_start":1878,"line_end":1878,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3158},{"krate":0,"index":3159},{"krate":0,"index":3160}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":416582,"byte_end":416588,"line_start":1886,"line_end":1886,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3163}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":416924,"byte_end":416930,"line_start":1902,"line_end":1902,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3170}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":417138,"byte_end":417144,"line_start":1912,"line_end":1912,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3175}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":417266,"byte_end":417272,"line_start":1918,"line_end":1918,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3178}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":417551,"byte_end":417557,"line_start":1929,"line_end":1929,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3182}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":418086,"byte_end":418090,"line_start":1953,"line_end":1953,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3192},{"krate":0,"index":3193}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":418467,"byte_end":418471,"line_start":1971,"line_end":1971,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3197},{"krate":0,"index":3198},{"krate":0,"index":3199}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":419140,"byte_end":419144,"line_start":1994,"line_end":1994,"column_start":44,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3203}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":419607,"byte_end":419611,"line_start":2009,"line_end":2009,"column_start":42,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":419660,"byte_end":419664,"line_start":2011,"line_end":2011,"column_start":38,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":419969,"byte_end":419976,"line_start":2024,"line_end":2024,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3219},{"krate":0,"index":3220}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":420428,"byte_end":420435,"line_start":2047,"line_end":2047,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3224},{"krate":0,"index":3225},{"krate":0,"index":3226}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":421133,"byte_end":421140,"line_start":2073,"line_end":2073,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3230}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":421647,"byte_end":421654,"line_start":2091,"line_end":2091,"column_start":42,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":421703,"byte_end":421710,"line_start":2093,"line_end":2093,"column_start":38,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":421856,"byte_end":421869,"line_start":2100,"line_end":2100,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3242}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":421976,"byte_end":421989,"line_start":2106,"line_end":2106,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3245},{"krate":0,"index":3246},{"krate":0,"index":3247}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":422347,"byte_end":422360,"line_start":2122,"line_end":2122,"column_start":40,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3250}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":422591,"byte_end":422604,"line_start":2131,"line_end":2131,"column_start":38,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":422645,"byte_end":422658,"line_start":2133,"line_end":2133,"column_start":34,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":422942,"byte_end":422948,"line_start":2146,"line_end":2146,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3264}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":423162,"byte_end":423168,"line_start":2156,"line_end":2156,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3268},{"krate":0,"index":3269}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":423710,"byte_end":423716,"line_start":2174,"line_end":2174,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3273}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":424273,"byte_end":424279,"line_start":2191,"line_end":2191,"column_start":38,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":424596,"byte_end":424605,"line_start":2204,"line_end":2204,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3286}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":424853,"byte_end":424862,"line_start":2215,"line_end":2215,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3290},{"krate":0,"index":3291}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":425411,"byte_end":425420,"line_start":2233,"line_end":2233,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3295}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":425980,"byte_end":425989,"line_start":2250,"line_end":2250,"column_start":38,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ser.rs","byte_start":481891,"byte_end":481901,"line_start":28,"line_end":28,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3379}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ser.rs","byte_start":482206,"byte_end":482216,"line_start":42,"line_end":42,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3384},{"krate":0,"index":3385},{"krate":0,"index":3386}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ser.rs","byte_start":483105,"byte_end":483115,"line_start":80,"line_end":80,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3402}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ser.rs","byte_start":483495,"byte_end":483505,"line_start":96,"line_end":96,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3408},{"krate":0,"index":3409},{"krate":0,"index":3410}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ser.rs","byte_start":484229,"byte_end":484235,"line_start":125,"line_end":125,"column_start":67,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":3415}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ser.rs","byte_start":484446,"byte_end":484452,"line_start":134,"line_end":134,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":3419}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ser.rs","byte_start":484835,"byte_end":484841,"line_start":150,"line_end":150,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":3425}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ser.rs","byte_start":485104,"byte_end":485110,"line_start":160,"line_end":160,"column_start":70,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":3430}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ser.rs","byte_start":485455,"byte_end":485462,"line_start":175,"line_end":175,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3437}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ser.rs","byte_start":485805,"byte_end":485812,"line_start":189,"line_end":189,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3443}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ser.rs","byte_start":486332,"byte_end":486339,"line_start":210,"line_end":210,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3449}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ser.rs","byte_start":486585,"byte_end":486592,"line_start":220,"line_end":220,"column_start":80,"column_end":87},"value":"","parent":null,"children":[{"krate":0,"index":3454}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ser.rs","byte_start":486952,"byte_end":486958,"line_start":235,"line_end":235,"column_start":61,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":3459}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ser.rs","byte_start":487184,"byte_end":487190,"line_start":244,"line_end":244,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3463}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/fakepool.rs","byte_start":489089,"byte_end":489094,"line_start":17,"line_end":17,"column_start":25,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/fakepool.rs","byte_start":489123,"byte_end":489128,"line_start":18,"line_end":18,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/fakepool.rs","byte_start":489203,"byte_end":489207,"line_start":22,"line_end":22,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3493},{"krate":0,"index":3494},{"krate":0,"index":3495}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/fakepool.rs","byte_start":489413,"byte_end":489417,"line_start":34,"line_end":34,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3498}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/fakepool.rs","byte_start":489551,"byte_end":489553,"line_start":45,"line_end":45,"column_start":9,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3501},{"krate":0,"index":3502},{"krate":0,"index":3503},{"krate":0,"index":3504},{"krate":0,"index":3506},{"krate":0,"index":3507}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/fakepool.rs","byte_start":490490,"byte_end":490492,"line_start":88,"line_end":88,"column_start":19,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3511}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/fakepool.rs","byte_start":490604,"byte_end":490606,"line_start":95,"line_end":95,"column_start":19,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3514},{"krate":0,"index":3515}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/fakepool.rs","byte_start":490748,"byte_end":490750,"line_start":103,"line_end":103,"column_start":23,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3518}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/fakepool.rs","byte_start":490893,"byte_end":490895,"line_start":113,"line_end":113,"column_start":16,"column_end":18},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/fakepool.rs","byte_start":490943,"byte_end":490945,"line_start":115,"line_end":115,"column_start":29,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3523}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/fakepool.rs","byte_start":491189,"byte_end":491192,"line_start":130,"line_end":130,"column_start":9,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":3526},{"krate":0,"index":3527},{"krate":0,"index":3528},{"krate":0,"index":3529},{"krate":0,"index":3531},{"krate":0,"index":3532}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/fakepool.rs","byte_start":492138,"byte_end":492141,"line_start":173,"line_end":173,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3536}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/fakepool.rs","byte_start":492255,"byte_end":492258,"line_start":180,"line_end":180,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3539},{"krate":0,"index":3540}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/fakepool.rs","byte_start":492400,"byte_end":492403,"line_start":188,"line_end":188,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3543}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/fakepool.rs","byte_start":492546,"byte_end":492549,"line_start":198,"line_end":198,"column_start":16,"column_end":19},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/fakepool.rs","byte_start":492597,"byte_end":492600,"line_start":200,"line_end":200,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3548}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/mod.rs","byte_start":149035,"byte_end":149038,"line_start":6,"line_end":6,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":761}},{"kind":"Mod","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/mod.rs","byte_start":149061,"byte_end":149064,"line_start":8,"line_end":8,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1327}},{"kind":"Mod","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/mod.rs","byte_start":258114,"byte_end":258117,"line_start":6,"line_end":6,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1656}},{"kind":"Mod","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/mod.rs","byte_start":258140,"byte_end":258143,"line_start":8,"line_end":8,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":2208}},{"kind":"Mod","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":20026,"byte_end":20032,"line_start":366,"line_end":366,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":2542}},{"kind":"Mod","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":357256,"byte_end":357261,"line_start":72,"line_end":72,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":2893}},{"kind":"Mod","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":20043,"byte_end":20047,"line_start":368,"line_end":368,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":3299}},{"kind":"Mod","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/lib.rs","byte_start":20169,"byte_end":20172,"line_start":375,"line_end":375,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":3307}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/btree.rs","byte_start":26978,"byte_end":26982,"line_start":52,"line_end":52,"column_start":25,"column_end":29},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":66},"to":{"krate":0,"index":3481}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/btree.rs","byte_start":27357,"byte_end":27361,"line_start":63,"line_end":63,"column_start":23,"column_end":27},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":66},"to":{"krate":0,"index":3482}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/btree.rs","byte_start":28245,"byte_end":28249,"line_start":110,"line_end":110,"column_start":19,"column_end":23},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/btree.rs","byte_start":28441,"byte_end":28445,"line_start":122,"line_end":122,"column_start":21,"column_end":25},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/btree.rs","byte_start":28593,"byte_end":28597,"line_start":131,"line_end":131,"column_start":9,"column_end":13},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":66},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/btree.rs","byte_start":29737,"byte_end":29741,"line_start":181,"line_end":181,"column_start":21,"column_end":25},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":66},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/btree.rs","byte_start":58516,"byte_end":58520,"line_start":939,"line_end":939,"column_start":25,"column_end":29},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":205},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/btree.rs","byte_start":63602,"byte_end":63606,"line_start":1072,"line_end":1072,"column_start":43,"column_end":47},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":205},"to":{"krate":2,"index":8474}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/btree.rs","byte_start":64323,"byte_end":64327,"line_start":1096,"line_end":1096,"column_start":54,"column_end":58},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":205},"to":{"krate":2,"index":8323}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/btree.rs","byte_start":65196,"byte_end":65209,"line_start":1129,"line_end":1129,"column_start":16,"column_end":29},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":238},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/btree.rs","byte_start":66817,"byte_end":66830,"line_start":1175,"line_end":1175,"column_start":22,"column_end":35},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":238},"to":{"krate":2,"index":8474}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/btree.rs","byte_start":67948,"byte_end":67961,"line_start":1211,"line_end":1211,"column_start":33,"column_end":46},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":238},"to":{"krate":2,"index":8323}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/btree.rs","byte_start":68981,"byte_end":68994,"line_start":1241,"line_end":1241,"column_start":51,"column_end":64},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":238},"to":{"krate":2,"index":8348}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/btree.rs","byte_start":69704,"byte_end":69712,"line_start":1272,"line_end":1272,"column_start":17,"column_end":25},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":263},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/btree.rs","byte_start":70703,"byte_end":70711,"line_start":1304,"line_end":1304,"column_start":26,"column_end":34},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":263},"to":{"krate":2,"index":8474}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/hamt.rs","byte_start":75282,"byte_end":75286,"line_start":49,"line_end":49,"column_start":25,"column_end":29},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":3597},"to":{"krate":0,"index":3481}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/hamt.rs","byte_start":75669,"byte_end":75673,"line_start":63,"line_end":63,"column_start":23,"column_end":27},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":3597},"to":{"krate":0,"index":3482}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/hamt.rs","byte_start":76272,"byte_end":76277,"line_start":91,"line_end":91,"column_start":26,"column_end":31},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":384},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/hamt.rs","byte_start":76568,"byte_end":76573,"line_start":101,"line_end":101,"column_start":9,"column_end":14},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":384},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/hamt.rs","byte_start":77008,"byte_end":77013,"line_start":118,"line_end":118,"column_start":36,"column_end":41},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":384},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/hamt.rs","byte_start":77135,"byte_end":77139,"line_start":124,"line_end":124,"column_start":21,"column_end":25},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":3597},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/hamt.rs","byte_start":77209,"byte_end":77213,"line_start":130,"line_end":130,"column_start":9,"column_end":13},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":3597},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/hamt.rs","byte_start":78092,"byte_end":78096,"line_start":169,"line_end":169,"column_start":20,"column_end":24},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":3597},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/hamt.rs","byte_start":86345,"byte_end":86358,"line_start":398,"line_end":398,"column_start":20,"column_end":33},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":3603},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/hamt.rs","byte_start":88240,"byte_end":88244,"line_start":479,"line_end":479,"column_start":13,"column_end":17},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":440},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/hamt.rs","byte_start":88557,"byte_end":88561,"line_start":493,"line_end":493,"column_start":26,"column_end":30},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":440},"to":{"krate":2,"index":8474}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/hamt.rs","byte_start":90065,"byte_end":90069,"line_start":545,"line_end":545,"column_start":35,"column_end":39},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":440},"to":{"krate":2,"index":8348}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/hamt.rs","byte_start":90123,"byte_end":90127,"line_start":547,"line_end":547,"column_start":31,"column_end":35},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":440},"to":{"krate":2,"index":8749}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/hamt.rs","byte_start":90428,"byte_end":90435,"line_start":559,"line_end":559,"column_start":13,"column_end":20},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":463},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/hamt.rs","byte_start":90813,"byte_end":90820,"line_start":574,"line_end":574,"column_start":26,"column_end":33},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":463},"to":{"krate":2,"index":8474}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/hamt.rs","byte_start":92474,"byte_end":92481,"line_start":628,"line_end":628,"column_start":35,"column_end":42},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":463},"to":{"krate":2,"index":8348}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/hamt.rs","byte_start":92543,"byte_end":92550,"line_start":630,"line_end":630,"column_start":31,"column_end":38},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":463},"to":{"krate":2,"index":8749}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/hamt.rs","byte_start":92818,"byte_end":92823,"line_start":645,"line_end":645,"column_start":9,"column_end":14},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":487},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/hamt.rs","byte_start":93140,"byte_end":93145,"line_start":660,"line_end":660,"column_start":22,"column_end":27},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":487},"to":{"krate":2,"index":8474}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/hamt.rs","byte_start":94604,"byte_end":94609,"line_start":709,"line_end":709,"column_start":42,"column_end":47},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":487},"to":{"krate":2,"index":8348}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/hamt.rs","byte_start":94669,"byte_end":94674,"line_start":711,"line_end":711,"column_start":38,"column_end":43},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":487},"to":{"krate":2,"index":8749}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/hamt.rs","byte_start":94744,"byte_end":94748,"line_start":713,"line_end":713,"column_start":48,"column_end":52},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":3597},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/rrb.rs","byte_start":95802,"byte_end":95806,"line_start":25,"line_end":25,"column_start":16,"column_end":20},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":3610},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/rrb.rs","byte_start":96001,"byte_end":96005,"line_start":34,"line_end":34,"column_start":6,"column_end":10},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":3610},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/rrb.rs","byte_start":100305,"byte_end":100310,"line_start":168,"line_end":168,"column_start":26,"column_end":31},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":578},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/rrb.rs","byte_start":100566,"byte_end":100571,"line_start":178,"line_end":178,"column_start":16,"column_end":21},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":578},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/rrb.rs","byte_start":102549,"byte_end":102553,"line_start":248,"line_end":248,"column_start":26,"column_end":30},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":603},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/rrb.rs","byte_start":102695,"byte_end":102699,"line_start":256,"line_end":256,"column_start":28,"column_end":32},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":603},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/nodes/rrb.rs","byte_start":102776,"byte_end":102780,"line_start":262,"line_end":262,"column_start":16,"column_end":20},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":603},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/sync.rs","byte_start":143732,"byte_end":143736,"line_start":16,"line_end":16,"column_start":13,"column_end":17},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":702},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/sync.rs","byte_start":144043,"byte_end":144047,"line_start":29,"line_end":29,"column_start":23,"column_end":27},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":702},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":153930,"byte_end":153936,"line_start":172,"line_end":172,"column_start":12,"column_end":18},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":867},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":157318,"byte_end":157324,"line_start":311,"line_end":311,"column_start":12,"column_end":18},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":867},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":165861,"byte_end":165867,"line_start":620,"line_end":620,"column_start":12,"column_end":18},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":867},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":193270,"byte_end":193275,"line_start":1512,"line_end":1512,"column_start":16,"column_end":21},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1021},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":194962,"byte_end":194975,"line_start":1578,"line_end":1578,"column_start":16,"column_end":29},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1043},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":196327,"byte_end":196338,"line_start":1635,"line_end":1635,"column_start":16,"column_end":27},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1060},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":196910,"byte_end":196916,"line_start":1662,"line_end":1662,"column_start":22,"column_end":28},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":867},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":197213,"byte_end":197219,"line_start":1677,"line_end":1677,"column_start":26,"column_end":32},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":867},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":197953,"byte_end":197959,"line_start":1710,"line_end":1710,"column_start":33,"column_end":39},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":867},"to":{"krate":2,"index":2836}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":197996,"byte_end":198002,"line_start":1712,"line_end":1712,"column_start":27,"column_end":33},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":867},"to":{"krate":2,"index":2877}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":198184,"byte_end":198190,"line_start":1722,"line_end":1722,"column_start":20,"column_end":26},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":867},"to":{"krate":2,"index":2867}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":198342,"byte_end":198348,"line_start":1732,"line_end":1732,"column_start":21,"column_end":27},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":867},"to":{"krate":2,"index":10324}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":198567,"byte_end":198573,"line_start":1747,"line_end":1747,"column_start":24,"column_end":30},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":867},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":198871,"byte_end":198877,"line_start":1765,"line_end":1765,"column_start":20,"column_end":26},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":867},"to":{"krate":2,"index":3247}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":199061,"byte_end":199067,"line_start":1777,"line_end":1777,"column_start":20,"column_end":26},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":867},"to":{"krate":2,"index":8238}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":199291,"byte_end":199297,"line_start":1790,"line_end":1790,"column_start":41,"column_end":47},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":867},"to":{"krate":2,"index":8288}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":199615,"byte_end":199621,"line_start":1805,"line_end":1805,"column_start":38,"column_end":44},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":867},"to":{"krate":2,"index":3483}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":199953,"byte_end":199959,"line_start":1820,"line_end":1820,"column_start":41,"column_end":47},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":867},"to":{"krate":2,"index":3487}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":200373,"byte_end":200379,"line_start":1835,"line_end":1835,"column_start":22,"column_end":28},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":867},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":200784,"byte_end":200788,"line_start":1856,"line_end":1856,"column_start":29,"column_end":33},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1142},"to":{"krate":2,"index":8474}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":201120,"byte_end":201124,"line_start":1871,"line_end":1871,"column_start":40,"column_end":44},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1142},"to":{"krate":2,"index":8323}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":201319,"byte_end":201323,"line_start":1880,"line_end":1880,"column_start":38,"column_end":42},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1142},"to":{"krate":2,"index":8348}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":201988,"byte_end":201996,"line_start":1903,"line_end":1903,"column_start":29,"column_end":37},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1165},"to":{"krate":2,"index":8474}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":202685,"byte_end":202689,"line_start":1929,"line_end":1929,"column_start":29,"column_end":33},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1177},"to":{"krate":2,"index":8474}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":202981,"byte_end":202985,"line_start":1945,"line_end":1945,"column_start":40,"column_end":44},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1177},"to":{"krate":2,"index":8323}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":203174,"byte_end":203178,"line_start":1955,"line_end":1955,"column_start":38,"column_end":42},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1177},"to":{"krate":2,"index":8348}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":203355,"byte_end":203361,"line_start":1967,"line_end":1967,"column_start":29,"column_end":35},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1200},"to":{"krate":2,"index":8474}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":203653,"byte_end":203659,"line_start":1983,"line_end":1983,"column_start":40,"column_end":46},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1200},"to":{"krate":2,"index":8323}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":203848,"byte_end":203854,"line_start":1993,"line_end":1993,"column_start":38,"column_end":44},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1200},"to":{"krate":2,"index":8348}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":203950,"byte_end":203956,"line_start":2000,"line_end":2000,"column_start":47,"column_end":53},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":867},"to":{"krate":2,"index":8275}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":204503,"byte_end":204509,"line_start":2029,"line_end":2029,"column_start":29,"column_end":35},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":867},"to":{"krate":2,"index":8279}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":204779,"byte_end":204785,"line_start":2044,"line_end":2044,"column_start":36,"column_end":42},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":867},"to":{"krate":2,"index":3076}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":204914,"byte_end":204920,"line_start":2050,"line_end":2050,"column_start":67,"column_end":73},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":867},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":205286,"byte_end":205292,"line_start":2064,"line_end":2064,"column_start":57,"column_end":63},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":867},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":205667,"byte_end":205673,"line_start":2080,"line_end":2080,"column_start":44,"column_end":50},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":867},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":205897,"byte_end":205903,"line_start":2090,"line_end":2090,"column_start":65,"column_end":71},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":867},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":206312,"byte_end":206318,"line_start":2106,"line_end":2106,"column_start":75,"column_end":81},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":867},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":206567,"byte_end":206573,"line_start":2116,"line_end":2116,"column_start":75,"column_end":81},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":867},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":206990,"byte_end":206996,"line_start":2132,"line_end":2132,"column_start":65,"column_end":71},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":867},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":207252,"byte_end":207258,"line_start":2142,"line_end":2142,"column_start":81,"column_end":87},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":867},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":207692,"byte_end":207698,"line_start":2158,"line_end":2158,"column_start":87,"column_end":93},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":867},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/map.rs","byte_start":207889,"byte_end":207895,"line_start":2165,"line_end":2165,"column_start":9,"column_end":15},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":867},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":227182,"byte_end":227187,"line_start":69,"line_end":69,"column_start":19,"column_end":24},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":3693},"to":{"krate":2,"index":3398}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":227465,"byte_end":227470,"line_start":79,"line_end":79,"column_start":29,"column_end":34},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":3693},"to":{"krate":0,"index":57}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":230214,"byte_end":230220,"line_start":181,"line_end":181,"column_start":9,"column_end":15},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1432},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":233436,"byte_end":233442,"line_start":313,"line_end":313,"column_start":9,"column_end":15},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1432},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":237994,"byte_end":238000,"line_start":469,"line_end":469,"column_start":9,"column_end":15},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1432},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":247695,"byte_end":247701,"line_start":830,"line_end":830,"column_start":19,"column_end":25},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1432},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":247965,"byte_end":247971,"line_start":844,"line_end":844,"column_start":28,"column_end":34},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1432},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":248181,"byte_end":248187,"line_start":851,"line_end":851,"column_start":26,"column_end":32},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1432},"to":{"krate":2,"index":2836}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":248223,"byte_end":248229,"line_start":853,"line_end":853,"column_start":29,"column_end":35},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1432},"to":{"krate":2,"index":2877}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":248373,"byte_end":248379,"line_start":859,"line_end":859,"column_start":22,"column_end":28},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1432},"to":{"krate":2,"index":2867}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":248507,"byte_end":248513,"line_start":865,"line_end":865,"column_start":30,"column_end":36},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1432},"to":{"krate":2,"index":10324}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":248688,"byte_end":248694,"line_start":876,"line_end":876,"column_start":21,"column_end":27},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1432},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":248787,"byte_end":248793,"line_start":882,"line_end":882,"column_start":30,"column_end":36},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1432},"to":{"krate":2,"index":3247}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":249119,"byte_end":249125,"line_start":898,"line_end":898,"column_start":30,"column_end":36},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1432},"to":{"krate":2,"index":3257}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":249465,"byte_end":249471,"line_start":914,"line_end":914,"column_start":30,"column_end":36},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1432},"to":{"krate":2,"index":8238}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":249633,"byte_end":249639,"line_start":923,"line_end":923,"column_start":26,"column_end":32},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1432},"to":{"krate":2,"index":8288}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":249891,"byte_end":249897,"line_start":937,"line_end":937,"column_start":32,"column_end":38},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1432},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":250171,"byte_end":250175,"line_start":950,"line_end":950,"column_start":26,"column_end":30},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1543},"to":{"krate":2,"index":8474}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":250561,"byte_end":250565,"line_start":968,"line_end":968,"column_start":37,"column_end":41},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1543},"to":{"krate":2,"index":8323}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":250739,"byte_end":250743,"line_start":977,"line_end":977,"column_start":35,"column_end":39},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1543},"to":{"krate":2,"index":8348}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":251103,"byte_end":251113,"line_start":988,"line_end":988,"column_start":26,"column_end":36},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1560},"to":{"krate":2,"index":8474}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":251474,"byte_end":251484,"line_start":1006,"line_end":1006,"column_start":37,"column_end":47},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1560},"to":{"krate":2,"index":8323}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":251768,"byte_end":251781,"line_start":1020,"line_end":1020,"column_start":22,"column_end":35},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1574},"to":{"krate":2,"index":8474}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":252156,"byte_end":252164,"line_start":1039,"line_end":1039,"column_start":26,"column_end":34},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1582},"to":{"krate":2,"index":8474}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":252736,"byte_end":252742,"line_start":1060,"line_end":1060,"column_start":32,"column_end":38},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1432},"to":{"krate":2,"index":8275}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":253223,"byte_end":253229,"line_start":1088,"line_end":1088,"column_start":26,"column_end":32},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1432},"to":{"krate":2,"index":8279}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":253532,"byte_end":253538,"line_start":1104,"line_end":1104,"column_start":49,"column_end":55},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1432},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":253760,"byte_end":253766,"line_start":1114,"line_end":1114,"column_start":31,"column_end":37},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1432},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":253923,"byte_end":253929,"line_start":1123,"line_end":1123,"column_start":39,"column_end":45},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1432},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":254059,"byte_end":254065,"line_start":1129,"line_end":1129,"column_start":47,"column_end":53},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1432},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":254221,"byte_end":254227,"line_start":1135,"line_end":1135,"column_start":68,"column_end":74},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1432},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":254413,"byte_end":254419,"line_start":1141,"line_end":1141,"column_start":76,"column_end":82},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1432},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":254591,"byte_end":254597,"line_start":1147,"line_end":1147,"column_start":57,"column_end":63},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1432},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":254775,"byte_end":254781,"line_start":1153,"line_end":1153,"column_start":65,"column_end":71},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1432},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":254973,"byte_end":254979,"line_start":1159,"line_end":1159,"column_start":74,"column_end":80},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1432},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ord/set.rs","byte_start":255159,"byte_end":255165,"line_start":1165,"line_end":1165,"column_start":82,"column_end":88},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1432},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":261919,"byte_end":261926,"line_start":122,"line_end":122,"column_start":12,"column_end":19},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1745},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":262443,"byte_end":262450,"line_start":144,"line_end":144,"column_start":12,"column_end":19},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1745},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":262981,"byte_end":262988,"line_start":169,"line_end":169,"column_start":15,"column_end":22},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1745},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":268317,"byte_end":268324,"line_start":364,"line_end":364,"column_start":15,"column_end":22},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1745},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":273526,"byte_end":273533,"line_start":561,"line_end":561,"column_start":15,"column_end":22},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1745},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":298321,"byte_end":298326,"line_start":1369,"line_end":1369,"column_start":19,"column_end":24},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1889},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":300113,"byte_end":300126,"line_start":1438,"line_end":1438,"column_start":19,"column_end":32},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1913},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":301960,"byte_end":301971,"line_start":1507,"line_end":1507,"column_start":19,"column_end":30},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":1933},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":302899,"byte_end":302906,"line_start":1545,"line_end":1545,"column_start":25,"column_end":32},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":1745},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":303285,"byte_end":303292,"line_start":1565,"line_end":1565,"column_start":29,"column_end":36},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":1745},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":303983,"byte_end":303990,"line_start":1603,"line_end":1603,"column_start":22,"column_end":29},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":1745},"to":{"krate":2,"index":2836}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":304089,"byte_end":304096,"line_start":1611,"line_end":1611,"column_start":30,"column_end":37},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":1745},"to":{"krate":2,"index":2877}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":304461,"byte_end":304468,"line_start":1625,"line_end":1625,"column_start":23,"column_end":30},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":1745},"to":{"krate":2,"index":2867}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":304788,"byte_end":304795,"line_start":1639,"line_end":1639,"column_start":24,"column_end":31},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":1745},"to":{"krate":2,"index":10324}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":305039,"byte_end":305046,"line_start":1655,"line_end":1655,"column_start":27,"column_end":34},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":1745},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":305381,"byte_end":305388,"line_start":1672,"line_end":1672,"column_start":23,"column_end":30},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":1745},"to":{"krate":2,"index":3247}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":305859,"byte_end":305866,"line_start":1698,"line_end":1698,"column_start":23,"column_end":30},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":1745},"to":{"krate":2,"index":8238}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":306132,"byte_end":306139,"line_start":1712,"line_end":1712,"column_start":44,"column_end":51},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":1745},"to":{"krate":2,"index":8288}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":306489,"byte_end":306496,"line_start":1728,"line_end":1728,"column_start":41,"column_end":48},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":1745},"to":{"krate":2,"index":3483}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":306897,"byte_end":306904,"line_start":1744,"line_end":1744,"column_start":44,"column_end":51},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":1745},"to":{"krate":2,"index":3487}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":307423,"byte_end":307430,"line_start":1761,"line_end":1761,"column_start":25,"column_end":32},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":1745},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":308618,"byte_end":308622,"line_start":1817,"line_end":1817,"column_start":29,"column_end":33},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":2032},"to":{"krate":2,"index":8474}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":308897,"byte_end":308901,"line_start":1829,"line_end":1829,"column_start":38,"column_end":42},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":2032},"to":{"krate":2,"index":8348}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":308949,"byte_end":308953,"line_start":1831,"line_end":1831,"column_start":34,"column_end":38},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":2032},"to":{"krate":2,"index":8749}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":309148,"byte_end":309155,"line_start":1842,"line_end":1842,"column_start":29,"column_end":36},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":2053},"to":{"krate":2,"index":8474}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":309470,"byte_end":309477,"line_start":1858,"line_end":1858,"column_start":38,"column_end":45},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":2053},"to":{"krate":2,"index":8348}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":309560,"byte_end":309567,"line_start":1865,"line_end":1865,"column_start":34,"column_end":41},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":2053},"to":{"krate":2,"index":8749}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":309757,"byte_end":309770,"line_start":1877,"line_end":1877,"column_start":22,"column_end":35},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":2074},"to":{"krate":2,"index":8474}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":310040,"byte_end":310053,"line_start":1892,"line_end":1892,"column_start":31,"column_end":44},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":2074},"to":{"krate":2,"index":8348}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":310114,"byte_end":310127,"line_start":1894,"line_end":1894,"column_start":27,"column_end":40},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":2074},"to":{"krate":2,"index":8749}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":310291,"byte_end":310295,"line_start":1901,"line_end":1901,"column_start":29,"column_end":33},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":2087},"to":{"krate":2,"index":8474}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":310556,"byte_end":310560,"line_start":1913,"line_end":1913,"column_start":38,"column_end":42},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":2087},"to":{"krate":2,"index":8348}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":310608,"byte_end":310612,"line_start":1915,"line_end":1915,"column_start":34,"column_end":38},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":2087},"to":{"krate":2,"index":8749}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":310760,"byte_end":310766,"line_start":1922,"line_end":1922,"column_start":29,"column_end":35},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":2108},"to":{"krate":2,"index":8474}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":311027,"byte_end":311033,"line_start":1934,"line_end":1934,"column_start":38,"column_end":44},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":2108},"to":{"krate":2,"index":8348}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":311081,"byte_end":311087,"line_start":1936,"line_end":1936,"column_start":34,"column_end":40},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":2108},"to":{"krate":2,"index":8749}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":311390,"byte_end":311397,"line_start":1952,"line_end":1952,"column_start":32,"column_end":39},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":1745},"to":{"krate":2,"index":8279}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":311766,"byte_end":311773,"line_start":1971,"line_end":1971,"column_start":40,"column_end":47},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":1745},"to":{"krate":2,"index":8275}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":312119,"byte_end":312126,"line_start":1989,"line_end":1989,"column_start":43,"column_end":50},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":1745},"to":{"krate":2,"index":3076}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":312285,"byte_end":312292,"line_start":1996,"line_end":1996,"column_start":80,"column_end":87},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":1745},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":312716,"byte_end":312723,"line_start":2012,"line_end":2012,"column_start":42,"column_end":49},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":1745},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":312931,"byte_end":312938,"line_start":2023,"line_end":2023,"column_start":37,"column_end":44},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":1745},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":313149,"byte_end":313156,"line_start":2034,"line_end":2034,"column_start":45,"column_end":52},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":1745},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":313382,"byte_end":313389,"line_start":2045,"line_end":2045,"column_start":52,"column_end":59},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":1745},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":313630,"byte_end":313637,"line_start":2056,"line_end":2056,"column_start":60,"column_end":67},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":1745},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":313907,"byte_end":313914,"line_start":2067,"line_end":2067,"column_start":53,"column_end":60},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":1745},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/map.rs","byte_start":314157,"byte_end":314164,"line_start":2078,"line_end":2078,"column_start":61,"column_end":68},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":1745},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":329998,"byte_end":330003,"line_start":104,"line_end":104,"column_start":19,"column_end":24},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":3771},"to":{"krate":2,"index":3398}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":330242,"byte_end":330247,"line_start":113,"line_end":113,"column_start":23,"column_end":28},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":3771},"to":{"krate":0,"index":376}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":330438,"byte_end":330445,"line_start":128,"line_end":128,"column_start":9,"column_end":16},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":2301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":330910,"byte_end":330917,"line_start":148,"line_end":148,"column_start":9,"column_end":16},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":2301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":331368,"byte_end":331375,"line_start":170,"line_end":170,"column_start":12,"column_end":19},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":2301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":335551,"byte_end":335558,"line_start":329,"line_end":329,"column_start":12,"column_end":19},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":2301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":337166,"byte_end":337173,"line_start":392,"line_end":392,"column_start":12,"column_end":19},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":2301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":343668,"byte_end":343675,"line_start":638,"line_end":638,"column_start":22,"column_end":29},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":2301},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":344002,"byte_end":344009,"line_start":656,"line_end":656,"column_start":26,"column_end":33},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":2301},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":344168,"byte_end":344175,"line_start":666,"line_end":666,"column_start":19,"column_end":26},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":2301},"to":{"krate":2,"index":2836}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":344267,"byte_end":344274,"line_start":673,"line_end":673,"column_start":27,"column_end":34},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":2301},"to":{"krate":2,"index":2877}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":344616,"byte_end":344623,"line_start":686,"line_end":686,"column_start":20,"column_end":27},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":2301},"to":{"krate":2,"index":2867}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":344927,"byte_end":344934,"line_start":699,"line_end":699,"column_start":21,"column_end":28},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":2301},"to":{"krate":2,"index":10324}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":345169,"byte_end":345176,"line_start":714,"line_end":714,"column_start":24,"column_end":31},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":2301},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":345491,"byte_end":345498,"line_start":730,"line_end":730,"column_start":20,"column_end":27},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":2301},"to":{"krate":2,"index":3247}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":345695,"byte_end":345702,"line_start":742,"line_end":742,"column_start":20,"column_end":27},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":2301},"to":{"krate":2,"index":3257}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":346369,"byte_end":346376,"line_start":778,"line_end":778,"column_start":20,"column_end":27},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":2301},"to":{"krate":2,"index":8238}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":346610,"byte_end":346617,"line_start":791,"line_end":791,"column_start":29,"column_end":36},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":2301},"to":{"krate":2,"index":8288}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":346920,"byte_end":346927,"line_start":807,"line_end":807,"column_start":22,"column_end":29},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":2301},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":347752,"byte_end":347756,"line_start":846,"line_end":846,"column_start":26,"column_end":30},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":2432},"to":{"krate":2,"index":8474}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":348026,"byte_end":348030,"line_start":861,"line_end":861,"column_start":35,"column_end":39},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":2432},"to":{"krate":2,"index":8348}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":348072,"byte_end":348076,"line_start":863,"line_end":863,"column_start":31,"column_end":35},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":2432},"to":{"krate":2,"index":8749}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":348256,"byte_end":348269,"line_start":873,"line_end":873,"column_start":22,"column_end":35},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":2449},"to":{"krate":2,"index":8474}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":348541,"byte_end":348554,"line_start":888,"line_end":888,"column_start":31,"column_end":44},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":2449},"to":{"krate":2,"index":8348}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":348615,"byte_end":348628,"line_start":890,"line_end":890,"column_start":27,"column_end":40},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":2449},"to":{"krate":2,"index":8749}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":348724,"byte_end":348731,"line_start":894,"line_end":894,"column_start":37,"column_end":44},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":2301},"to":{"krate":2,"index":8275}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":349290,"byte_end":349297,"line_start":924,"line_end":924,"column_start":29,"column_end":36},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":2301},"to":{"krate":2,"index":8279}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":349656,"byte_end":349663,"line_start":941,"line_end":941,"column_start":62,"column_end":69},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":2301},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":349961,"byte_end":349968,"line_start":953,"line_end":953,"column_start":34,"column_end":41},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":2301},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":350154,"byte_end":350161,"line_start":963,"line_end":963,"column_start":29,"column_end":36},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":2301},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":350346,"byte_end":350353,"line_start":973,"line_end":973,"column_start":37,"column_end":44},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":2301},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":350538,"byte_end":350545,"line_start":983,"line_end":983,"column_start":32,"column_end":39},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":2301},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":350742,"byte_end":350749,"line_start":993,"line_end":993,"column_start":40,"column_end":47},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":2301},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":350957,"byte_end":350964,"line_start":1003,"line_end":1003,"column_start":46,"column_end":53},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":2301},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":351193,"byte_end":351200,"line_start":1013,"line_end":1013,"column_start":54,"column_end":61},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":2301},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":351422,"byte_end":351429,"line_start":1023,"line_end":1023,"column_start":42,"column_end":49},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":2301},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":351631,"byte_end":351638,"line_start":1033,"line_end":1033,"column_start":32,"column_end":39},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":2301},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/hash/set.rs","byte_start":351841,"byte_end":351848,"line_start":1043,"line_end":1043,"column_start":40,"column_end":47},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":2301},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":445593,"byte_end":445598,"line_start":92,"line_end":92,"column_start":13,"column_end":18},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":2724},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":450466,"byte_end":450471,"line_start":234,"line_end":234,"column_start":30,"column_end":35},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":2724},"to":{"krate":2,"index":8279}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":450668,"byte_end":450673,"line_start":246,"line_end":246,"column_start":23,"column_end":28},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":2724},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":451082,"byte_end":451091,"line_start":266,"line_end":266,"column_start":19,"column_end":28},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":2755},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":451447,"byte_end":451456,"line_start":281,"line_end":281,"column_start":31,"column_end":40},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":2755},"to":{"krate":2,"index":3179}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":451534,"byte_end":451543,"line_start":284,"line_end":284,"column_start":31,"column_end":40},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":2755},"to":{"krate":2,"index":3191}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":451679,"byte_end":451688,"line_start":291,"line_end":291,"column_start":9,"column_end":18},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":2755},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":457679,"byte_end":457687,"line_start":469,"line_end":469,"column_start":13,"column_end":21},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":2783},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":466914,"byte_end":466922,"line_start":736,"line_end":736,"column_start":30,"column_end":38},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":2783},"to":{"krate":2,"index":8279}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":467145,"byte_end":467150,"line_start":748,"line_end":748,"column_start":39,"column_end":44},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":2724},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/focus.rs","byte_start":467459,"byte_end":467471,"line_start":765,"line_end":765,"column_start":13,"column_end":25},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":2830},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/pool.rs","byte_start":473348,"byte_end":473355,"line_start":17,"line_end":17,"column_start":9,"column_end":16},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":2871},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/pool.rs","byte_start":474519,"byte_end":474526,"line_start":59,"line_end":59,"column_start":21,"column_end":28},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":2871},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/pool.rs","byte_start":474677,"byte_end":474684,"line_start":66,"line_end":66,"column_start":19,"column_end":26},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":2871},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/rayon.rs","byte_start":475271,"byte_end":475277,"line_start":11,"line_end":11,"column_start":45,"column_end":51},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":2995},"to":{"krate":27,"index":4652}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/rayon.rs","byte_start":475537,"byte_end":475543,"line_start":25,"line_end":25,"column_start":48,"column_end":54},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":2995},"to":{"krate":27,"index":4663}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/rayon.rs","byte_start":475989,"byte_end":475996,"line_start":49,"line_end":49,"column_start":34,"column_end":41},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":2936},"to":{"krate":27,"index":4674}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/rayon.rs","byte_start":476265,"byte_end":476272,"line_start":63,"line_end":63,"column_start":41,"column_end":48},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":2936},"to":{"krate":27,"index":4882}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/rayon.rs","byte_start":476932,"byte_end":476942,"line_start":96,"line_end":96,"column_start":34,"column_end":44},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":2954},"to":{"krate":27,"index":4674}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/rayon.rs","byte_start":477215,"byte_end":477225,"line_start":110,"line_end":110,"column_start":41,"column_end":51},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":2954},"to":{"krate":27,"index":4882}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/rayon.rs","byte_start":477781,"byte_end":477795,"line_start":140,"line_end":140,"column_start":26,"column_end":40},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":2972},"to":{"krate":27,"index":404}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/rayon.rs","byte_start":478334,"byte_end":478351,"line_start":167,"line_end":167,"column_start":26,"column_end":43},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":2983},"to":{"krate":27,"index":404}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":360426,"byte_end":360429,"line_start":166,"line_end":166,"column_start":19,"column_end":22},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":3012},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":360804,"byte_end":360810,"line_start":180,"line_end":180,"column_start":16,"column_end":22},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":2995},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":379627,"byte_end":379633,"line_start":788,"line_end":788,"column_start":16,"column_end":22},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":2995},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":405090,"byte_end":405093,"line_start":1520,"line_end":1520,"column_start":16,"column_end":19},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":3012},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":410960,"byte_end":410966,"line_start":1680,"line_end":1680,"column_start":28,"column_end":34},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":2995},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":411053,"byte_end":411059,"line_start":1686,"line_end":1686,"column_start":26,"column_end":32},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":2995},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":411553,"byte_end":411559,"line_start":1701,"line_end":1701,"column_start":34,"column_end":40},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":2995},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":412111,"byte_end":412117,"line_start":1716,"line_end":1716,"column_start":42,"column_end":48},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":2995},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":413863,"byte_end":413869,"line_start":1768,"line_end":1768,"column_start":28,"column_end":34},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":2995},"to":{"krate":2,"index":2836}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":413920,"byte_end":413926,"line_start":1770,"line_end":1770,"column_start":44,"column_end":50},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":2995},"to":{"krate":2,"index":2877}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":414078,"byte_end":414084,"line_start":1776,"line_end":1776,"column_start":30,"column_end":36},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":2995},"to":{"krate":2,"index":2867}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":414214,"byte_end":414220,"line_start":1782,"line_end":1782,"column_start":32,"column_end":38},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":2995},"to":{"krate":2,"index":10324}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":414365,"byte_end":414371,"line_start":1790,"line_end":1790,"column_start":24,"column_end":30},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":2995},"to":{"krate":2,"index":8238}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":414531,"byte_end":414537,"line_start":1799,"line_end":1799,"column_start":24,"column_end":30},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":2995},"to":{"krate":2,"index":3247}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":415045,"byte_end":415051,"line_start":1824,"line_end":1824,"column_start":30,"column_end":36},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":2995},"to":{"krate":2,"index":8288}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":415351,"byte_end":415357,"line_start":1838,"line_end":1838,"column_start":33,"column_end":39},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":2995},"to":{"krate":2,"index":3483}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":415813,"byte_end":415819,"line_start":1855,"line_end":1855,"column_start":36,"column_end":42},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":2995},"to":{"krate":2,"index":3487}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":416393,"byte_end":416399,"line_start":1878,"line_end":1878,"column_start":33,"column_end":39},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":2995},"to":{"krate":2,"index":8279}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":416582,"byte_end":416588,"line_start":1886,"line_end":1886,"column_start":36,"column_end":42},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":2995},"to":{"krate":2,"index":8275}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":416924,"byte_end":416930,"line_start":1902,"line_end":1902,"column_start":49,"column_end":55},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":2995},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":417138,"byte_end":417144,"line_start":1912,"line_end":1912,"column_start":38,"column_end":44},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":2995},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":417266,"byte_end":417272,"line_start":1918,"line_end":1918,"column_start":33,"column_end":39},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":2995},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":417551,"byte_end":417557,"line_start":1929,"line_end":1929,"column_start":41,"column_end":47},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":2995},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":418086,"byte_end":418090,"line_start":1953,"line_end":1953,"column_start":20,"column_end":24},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":3183},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":418467,"byte_end":418471,"line_start":1971,"line_end":1971,"column_start":33,"column_end":37},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":3183},"to":{"krate":2,"index":8474}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":419140,"byte_end":419144,"line_start":1994,"line_end":1994,"column_start":44,"column_end":48},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":3183},"to":{"krate":2,"index":8323}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":419607,"byte_end":419611,"line_start":2009,"line_end":2009,"column_start":42,"column_end":46},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":3183},"to":{"krate":2,"index":8348}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":419660,"byte_end":419664,"line_start":2011,"line_end":2011,"column_start":38,"column_end":42},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":3183},"to":{"krate":2,"index":8749}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":419969,"byte_end":419976,"line_start":2024,"line_end":2024,"column_start":13,"column_end":20},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":3210},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":420428,"byte_end":420435,"line_start":2047,"line_end":2047,"column_start":26,"column_end":33},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":3210},"to":{"krate":2,"index":8474}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":421133,"byte_end":421140,"line_start":2073,"line_end":2073,"column_start":37,"column_end":44},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":3210},"to":{"krate":2,"index":8323}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":421647,"byte_end":421654,"line_start":2091,"line_end":2091,"column_start":42,"column_end":49},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":3210},"to":{"krate":2,"index":8348}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":421703,"byte_end":421710,"line_start":2093,"line_end":2093,"column_start":38,"column_end":45},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":3210},"to":{"krate":2,"index":8749}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":421856,"byte_end":421869,"line_start":2100,"line_end":2100,"column_start":16,"column_end":29},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":3237},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":421976,"byte_end":421989,"line_start":2106,"line_end":2106,"column_start":29,"column_end":42},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":3237},"to":{"krate":2,"index":8474}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":422347,"byte_end":422360,"line_start":2122,"line_end":2122,"column_start":40,"column_end":53},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":3237},"to":{"krate":2,"index":8323}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":422591,"byte_end":422604,"line_start":2131,"line_end":2131,"column_start":38,"column_end":51},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":3237},"to":{"krate":2,"index":8348}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":422645,"byte_end":422658,"line_start":2133,"line_end":2133,"column_start":34,"column_end":47},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":3237},"to":{"krate":2,"index":8749}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":422942,"byte_end":422948,"line_start":2146,"line_end":2146,"column_start":20,"column_end":26},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":3255},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":423162,"byte_end":423168,"line_start":2156,"line_end":2156,"column_start":33,"column_end":39},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":3255},"to":{"krate":2,"index":8474}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":423710,"byte_end":423716,"line_start":2174,"line_end":2174,"column_start":44,"column_end":50},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":3255},"to":{"krate":2,"index":8323}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":424273,"byte_end":424279,"line_start":2191,"line_end":2191,"column_start":38,"column_end":44},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":3255},"to":{"krate":2,"index":8749}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":424596,"byte_end":424605,"line_start":2204,"line_end":2204,"column_start":20,"column_end":29},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":3277},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":424853,"byte_end":424862,"line_start":2215,"line_end":2215,"column_start":33,"column_end":42},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":3277},"to":{"krate":2,"index":8474}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":425411,"byte_end":425420,"line_start":2233,"line_end":2233,"column_start":44,"column_end":53},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":3277},"to":{"krate":2,"index":8323}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/vector/mod.rs","byte_start":425980,"byte_end":425989,"line_start":2250,"line_end":2250,"column_start":38,"column_end":47},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":3277},"to":{"krate":2,"index":8749}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ser.rs","byte_start":481891,"byte_end":481901,"line_start":28,"line_end":28,"column_start":17,"column_end":27},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":3368},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ser.rs","byte_start":482206,"byte_end":482216,"line_start":42,"line_end":42,"column_start":34,"column_end":44},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":3368},"to":{"krate":38,"index":1686}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ser.rs","byte_start":483105,"byte_end":483115,"line_start":80,"line_end":80,"column_start":20,"column_end":30},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":3388},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ser.rs","byte_start":483495,"byte_end":483505,"line_start":96,"line_end":96,"column_start":37,"column_end":47},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":3388},"to":{"krate":38,"index":1686}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ser.rs","byte_start":484229,"byte_end":484235,"line_start":125,"line_end":125,"column_start":67,"column_end":73},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":1432},"to":{"krate":38,"index":1600}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ser.rs","byte_start":484446,"byte_end":484452,"line_start":134,"line_end":134,"column_start":48,"column_end":54},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":1432},"to":{"krate":38,"index":2149}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ser.rs","byte_start":484835,"byte_end":484841,"line_start":150,"line_end":150,"column_start":9,"column_end":15},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":867},"to":{"krate":38,"index":1600}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ser.rs","byte_start":485104,"byte_end":485110,"line_start":160,"line_end":160,"column_start":70,"column_end":76},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":867},"to":{"krate":38,"index":2149}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ser.rs","byte_start":485455,"byte_end":485462,"line_start":175,"line_end":175,"column_start":41,"column_end":48},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":1745},"to":{"krate":38,"index":1600}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ser.rs","byte_start":485805,"byte_end":485812,"line_start":189,"line_end":189,"column_start":29,"column_end":36},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":1745},"to":{"krate":38,"index":2149}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ser.rs","byte_start":486332,"byte_end":486339,"line_start":210,"line_end":210,"column_start":9,"column_end":16},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":2301},"to":{"krate":38,"index":1600}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ser.rs","byte_start":486585,"byte_end":486592,"line_start":220,"line_end":220,"column_start":80,"column_end":87},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":2301},"to":{"krate":38,"index":2149}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ser.rs","byte_start":486952,"byte_end":486958,"line_start":235,"line_end":235,"column_start":61,"column_end":67},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":2995},"to":{"krate":38,"index":1600}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/ser.rs","byte_start":487184,"byte_end":487190,"line_start":244,"line_end":244,"column_start":42,"column_end":48},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":2995},"to":{"krate":38,"index":2149}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/fakepool.rs","byte_start":489016,"byte_end":489023,"line_start":14,"line_end":14,"column_start":31,"column_end":38},"kind":"SuperTrait","from":{"krate":2,"index":3157},"to":{"krate":0,"index":3481}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/fakepool.rs","byte_start":489055,"byte_end":489060,"line_start":15,"line_end":15,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":2801},"to":{"krate":0,"index":3482}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/fakepool.rs","byte_start":489089,"byte_end":489094,"line_start":17,"line_end":17,"column_start":25,"column_end":30},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":658},"to":{"krate":0,"index":3481}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/fakepool.rs","byte_start":489123,"byte_end":489128,"line_start":18,"line_end":18,"column_start":23,"column_end":28},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":658},"to":{"krate":0,"index":3482}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/fakepool.rs","byte_start":489203,"byte_end":489207,"line_start":22,"line_end":22,"column_start":9,"column_end":13},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":3487},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/fakepool.rs","byte_start":489413,"byte_end":489417,"line_start":34,"line_end":34,"column_start":19,"column_end":23},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":3487},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/fakepool.rs","byte_start":489551,"byte_end":489553,"line_start":45,"line_end":45,"column_start":9,"column_end":11},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":3800},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/fakepool.rs","byte_start":490490,"byte_end":490492,"line_start":88,"line_end":88,"column_start":19,"column_end":21},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":3800},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/fakepool.rs","byte_start":490604,"byte_end":490606,"line_start":95,"line_end":95,"column_start":19,"column_end":21},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":3800},"to":{"krate":2,"index":3398}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/fakepool.rs","byte_start":490748,"byte_end":490750,"line_start":103,"line_end":103,"column_start":23,"column_end":25},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":3800},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/fakepool.rs","byte_start":490893,"byte_end":490895,"line_start":113,"line_end":113,"column_start":16,"column_end":18},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":3800},"to":{"krate":2,"index":2836}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/fakepool.rs","byte_start":490943,"byte_end":490945,"line_start":115,"line_end":115,"column_start":29,"column_end":31},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":3800},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/fakepool.rs","byte_start":491189,"byte_end":491192,"line_start":130,"line_end":130,"column_start":9,"column_end":12},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":3807},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/fakepool.rs","byte_start":492138,"byte_end":492141,"line_start":173,"line_end":173,"column_start":19,"column_end":22},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":3807},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/fakepool.rs","byte_start":492255,"byte_end":492258,"line_start":180,"line_end":180,"column_start":19,"column_end":22},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":3807},"to":{"krate":2,"index":3398}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/fakepool.rs","byte_start":492400,"byte_end":492403,"line_start":188,"line_end":188,"column_start":23,"column_end":26},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":3807},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/fakepool.rs","byte_start":492546,"byte_end":492549,"line_start":198,"line_end":198,"column_start":16,"column_end":19},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":3807},"to":{"krate":2,"index":2836}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/im-15.1.0/./src/fakepool.rs","byte_start":492597,"byte_end":492600,"line_start":200,"line_end":200,"column_start":29,"column_end":32},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":3807},"to":{"krate":2,"index":10110}}]}