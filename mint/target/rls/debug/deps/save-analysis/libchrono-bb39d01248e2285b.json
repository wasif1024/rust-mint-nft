{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22","program":"/Users/air/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","chrono","--edition=2018","/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"clock\"","--cfg","feature=\"default\"","--cfg","feature=\"iana-time-zone\"","--cfg","feature=\"js-sys\"","--cfg","feature=\"oldtime\"","--cfg","feature=\"serde\"","--cfg","feature=\"std\"","--cfg","feature=\"time\"","--cfg","feature=\"wasm-bindgen\"","--cfg","feature=\"wasmbind\"","--cfg","feature=\"winapi\"","-C","metadata=bb39d01248e2285b","-C","extra-filename=-bb39d01248e2285b","--out-dir","/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps","-L","dependency=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps","--extern","iana_time_zone=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libiana_time_zone-e60dfb93138ec7d1.rmeta","--extern","num_integer=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libnum_integer-8b69364ffe5cc46c.rmeta","--extern","num_traits=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libnum_traits-c7cafcc6d677ef07.rmeta","--extern","serde=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libserde-2e6e0464b7ba0e58.rmeta","--extern","time=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libtime-9ca252a4ac3b24cd.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/air/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libchrono-bb39d01248e2285b.rmeta"},"prelude":{"crate_id":{"name":"chrono","disambiguator":[16186767500754607596,0]},"crate_root":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src","external_crates":[{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[4485569597606079733,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","num":2,"id":{"name":"core","disambiguator":[9994580471200982198,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13944031075627487246,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5133993387825513881,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","num":5,"id":{"name":"alloc","disambiguator":[14116380118705386640,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6269322086078963025,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16152481959168563413,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7897074911849024150,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[7299104579826168146,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2669544452907545777,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[14288251452253695433,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[13943810077905921301,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[2237926517141734526,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[5541021343498733002,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[7188895526679788668,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[15555671723428220450,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[13375000548276363576,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[8920282723255285566,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[2397004371161247654,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","num":20,"id":{"name":"time","disambiguator":[3774553049128402124,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","num":21,"id":{"name":"libc","disambiguator":[2594694148884002105,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","num":22,"id":{"name":"serde","disambiguator":[18037409615073048381,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","num":23,"id":{"name":"serde_derive","disambiguator":[8793957035152621601,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","num":24,"id":{"name":"num_integer","disambiguator":[2762838762505822326,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","num":25,"id":{"name":"num_traits","disambiguator":[107365325918312878,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/unix.rs","num":26,"id":{"name":"iana_time_zone","disambiguator":[3253796252914349829,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/unix.rs","num":27,"id":{"name":"core_foundation_sys","disambiguator":[12650069415418419591,0]}}],"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":76,"byte_end":22970,"line_start":4,"line_end":532,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":20,"index":408},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":20321,"byte_end":20329,"line_start":432,"line_end":432,"column_start":18,"column_end":26},"alias_span":null,"name":"Duration","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3450},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":20686,"byte_end":20690,"line_start":445,"line_end":445,"column_start":20,"column_end":24},"alias_span":null,"name":"Date","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":4280},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":20763,"byte_end":20768,"line_start":448,"line_end":448,"column_start":20,"column_end":25},"alias_span":null,"name":"Local","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":4281},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":20763,"byte_end":20768,"line_start":448,"line_end":448,"column_start":20,"column_end":25},"alias_span":null,"name":"Local","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":3248},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":20901,"byte_end":20912,"line_start":453,"line_end":453,"column_start":20,"column_end":31},"alias_span":null,"name":"SubsecRound","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":3497},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":20956,"byte_end":20964,"line_start":455,"line_end":455,"column_start":21,"column_end":29},"alias_span":null,"name":"DateTime","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":3473},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":20966,"byte_end":20979,"line_start":455,"line_end":455,"column_start":31,"column_end":44},"alias_span":null,"name":"SecondsFormat","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":3411},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21024,"byte_end":21032,"line_start":457,"line_end":457,"column_start":21,"column_end":29},"alias_span":null,"name":"Datelike","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":4397},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21034,"byte_end":21039,"line_start":457,"line_end":457,"column_start":31,"column_end":36},"alias_span":null,"name":"Month","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":3430},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21041,"byte_end":21049,"line_start":457,"line_end":457,"column_start":38,"column_end":46},"alias_span":null,"name":"Timelike","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":4350},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21051,"byte_end":21058,"line_start":457,"line_end":457,"column_start":48,"column_end":55},"alias_span":null,"name":"Weekday","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":3977},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21103,"byte_end":21114,"line_start":459,"line_end":459,"column_start":21,"column_end":32},"alias_span":null,"name":"FixedOffset","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":4287},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21116,"byte_end":21119,"line_start":459,"line_end":459,"column_start":34,"column_end":37},"alias_span":null,"name":"Utc","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":4288},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21116,"byte_end":21119,"line_start":459,"line_end":459,"column_start":34,"column_end":37},"alias_span":null,"name":"Utc","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":3823},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21164,"byte_end":21173,"line_start":461,"line_end":461,"column_start":21,"column_end":30},"alias_span":null,"name":"NaiveDate","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":3884},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21175,"byte_end":21188,"line_start":461,"line_end":461,"column_start":32,"column_end":45},"alias_span":null,"name":"NaiveDateTime","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":3957},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21190,"byte_end":21199,"line_start":461,"line_end":461,"column_start":47,"column_end":56},"alias_span":null,"name":"NaiveTime","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":3170},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21244,"byte_end":21250,"line_start":463,"line_end":463,"column_start":21,"column_end":27},"alias_span":null,"name":"Offset","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":3172},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21252,"byte_end":21260,"line_start":463,"line_end":463,"column_start":29,"column_end":37},"alias_span":null,"name":"TimeZone","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":3450},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21312,"byte_end":21316,"line_start":468,"line_end":468,"column_start":16,"column_end":20},"alias_span":null,"name":"Date","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":129},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21318,"byte_end":21326,"line_start":468,"line_end":468,"column_start":22,"column_end":30},"alias_span":null,"name":"MAX_DATE","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":128},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21328,"byte_end":21336,"line_start":468,"line_end":468,"column_start":32,"column_end":40},"alias_span":null,"name":"MIN_DATE","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3497},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21476,"byte_end":21484,"line_start":474,"line_end":474,"column_start":20,"column_end":28},"alias_span":null,"name":"DateTime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3473},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21486,"byte_end":21499,"line_start":474,"line_end":474,"column_start":30,"column_end":43},"alias_span":null,"name":"SecondsFormat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":752},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21501,"byte_end":21513,"line_start":474,"line_end":474,"column_start":45,"column_end":57},"alias_span":null,"name":"MAX_DATETIME","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":751},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21515,"byte_end":21527,"line_start":474,"line_end":474,"column_start":59,"column_end":71},"alias_span":null,"name":"MIN_DATETIME","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1291},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":120527,"byte_end":120532,"line_start":58,"line_end":58,"column_start":16,"column_end":21},"alias_span":null,"name":"parse","value":"","parent":{"krate":0,"index":942}},{"kind":"Use","ref_id":{"krate":0,"index":3754},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":120550,"byte_end":120556,"line_start":59,"line_end":59,"column_start":17,"column_end":23},"alias_span":null,"name":"Parsed","value":"","parent":{"krate":0,"index":942}},{"kind":"Use","ref_id":{"krate":0,"index":3790},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":120666,"byte_end":120679,"line_start":63,"line_end":63,"column_start":19,"column_end":32},"alias_span":null,"name":"StrftimeItems","value":"","parent":{"krate":0,"index":942}},{"kind":"Use","ref_id":{"krate":0,"index":3711},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21643,"byte_end":21653,"line_start":480,"line_end":480,"column_start":18,"column_end":28},"alias_span":null,"name":"ParseError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1027},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21655,"byte_end":21666,"line_start":480,"line_end":480,"column_start":30,"column_end":41},"alias_span":null,"name":"ParseResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3823},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/mod.rs","byte_start":298417,"byte_end":298426,"line_start":14,"line_end":14,"column_start":22,"column_end":31},"alias_span":null,"name":"NaiveDate","value":"","parent":{"krate":0,"index":1456}},{"kind":"Use","ref_id":{"krate":0,"index":3818},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/mod.rs","byte_start":298428,"byte_end":298437,"line_start":14,"line_end":14,"column_start":33,"column_end":42},"alias_span":null,"name":"NaiveWeek","value":"","parent":{"krate":0,"index":1456}},{"kind":"Use","ref_id":{"krate":0,"index":1571},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/mod.rs","byte_start":298439,"byte_end":298447,"line_start":14,"line_end":14,"column_start":44,"column_end":52},"alias_span":null,"name":"MAX_DATE","value":"","parent":{"krate":0,"index":1456}},{"kind":"Use","ref_id":{"krate":0,"index":1570},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/mod.rs","byte_start":298449,"byte_end":298457,"line_start":14,"line_end":14,"column_start":54,"column_end":62},"alias_span":null,"name":"MIN_DATE","value":"","parent":{"krate":0,"index":1456}},{"kind":"Use","ref_id":{"krate":0,"index":3884},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/mod.rs","byte_start":298615,"byte_end":298628,"line_start":19,"line_end":19,"column_start":26,"column_end":39},"alias_span":null,"name":"NaiveDateTime","value":"","parent":{"krate":0,"index":1456}},{"kind":"Use","ref_id":{"krate":0,"index":2154},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/mod.rs","byte_start":298630,"byte_end":298642,"line_start":19,"line_end":19,"column_start":41,"column_end":53},"alias_span":null,"name":"MAX_DATETIME","value":"","parent":{"krate":0,"index":1456}},{"kind":"Use","ref_id":{"krate":0,"index":2153},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/mod.rs","byte_start":298644,"byte_end":298656,"line_start":19,"line_end":19,"column_start":55,"column_end":67},"alias_span":null,"name":"MIN_DATETIME","value":"","parent":{"krate":0,"index":1456}},{"kind":"Use","ref_id":{"krate":0,"index":3941},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/mod.rs","byte_start":298682,"byte_end":298689,"line_start":20,"line_end":20,"column_start":24,"column_end":31},"alias_span":null,"name":"IsoWeek","value":"","parent":{"krate":0,"index":1456}},{"kind":"Use","ref_id":{"krate":0,"index":3957},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/mod.rs","byte_start":298711,"byte_end":298720,"line_start":21,"line_end":21,"column_start":21,"column_end":30},"alias_span":null,"name":"NaiveTime","value":"","parent":{"krate":0,"index":1456}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/mod.rs","byte_start":299263,"byte_end":299264,"line_start":37,"line_end":37,"column_start":37,"column_end":38},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":2538}},{"kind":"Use","ref_id":{"krate":0,"index":3941},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21719,"byte_end":21726,"line_start":484,"line_end":484,"column_start":17,"column_end":24},"alias_span":null,"name":"IsoWeek","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3823},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21728,"byte_end":21737,"line_start":484,"line_end":484,"column_start":26,"column_end":35},"alias_span":null,"name":"NaiveDate","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3884},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21739,"byte_end":21752,"line_start":484,"line_end":484,"column_start":37,"column_end":50},"alias_span":null,"name":"NaiveDateTime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3957},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21754,"byte_end":21763,"line_start":484,"line_end":484,"column_start":52,"column_end":61},"alias_span":null,"name":"NaiveTime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3818},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21765,"byte_end":21774,"line_start":484,"line_end":484,"column_start":63,"column_end":72},"alias_span":null,"name":"NaiveWeek","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3977},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":598110,"byte_end":598121,"line_start":29,"line_end":29,"column_start":22,"column_end":33},"alias_span":null,"name":"FixedOffset","value":"","parent":{"krate":0,"index":2556}},{"kind":"Use","ref_id":{"krate":0,"index":4280},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":598208,"byte_end":598213,"line_start":34,"line_end":34,"column_start":22,"column_end":27},"alias_span":null,"name":"Local","value":"","parent":{"krate":0,"index":2556}},{"kind":"Use","ref_id":{"krate":0,"index":4281},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":598208,"byte_end":598213,"line_start":34,"line_end":34,"column_start":22,"column_end":27},"alias_span":null,"name":"Local","value":"","parent":{"krate":0,"index":2556}},{"kind":"Use","ref_id":{"krate":0,"index":4287},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":598244,"byte_end":598247,"line_start":37,"line_end":37,"column_start":20,"column_end":23},"alias_span":null,"name":"Utc","value":"","parent":{"krate":0,"index":2556}},{"kind":"Use","ref_id":{"krate":0,"index":4288},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":598244,"byte_end":598247,"line_start":37,"line_end":37,"column_start":20,"column_end":23},"alias_span":null,"name":"Utc","value":"","parent":{"krate":0,"index":2556}},{"kind":"Use","ref_id":{"krate":0,"index":4280},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21854,"byte_end":21859,"line_start":489,"line_end":489,"column_start":17,"column_end":22},"alias_span":null,"name":"Local","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4281},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21854,"byte_end":21859,"line_start":489,"line_end":489,"column_start":17,"column_end":22},"alias_span":null,"name":"Local","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3977},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21896,"byte_end":21907,"line_start":491,"line_end":491,"column_start":18,"column_end":29},"alias_span":null,"name":"FixedOffset","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4298},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21909,"byte_end":21920,"line_start":491,"line_end":491,"column_start":31,"column_end":42},"alias_span":null,"name":"LocalResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3170},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21922,"byte_end":21928,"line_start":491,"line_end":491,"column_start":44,"column_end":50},"alias_span":null,"name":"Offset","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3172},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21930,"byte_end":21938,"line_start":491,"line_end":491,"column_start":52,"column_end":60},"alias_span":null,"name":"TimeZone","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4287},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21940,"byte_end":21943,"line_start":491,"line_end":491,"column_start":62,"column_end":65},"alias_span":null,"name":"Utc","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4288},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21940,"byte_end":21943,"line_start":491,"line_end":491,"column_start":62,"column_end":65},"alias_span":null,"name":"Utc","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3256},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21974,"byte_end":21987,"line_start":494,"line_end":494,"column_start":17,"column_end":30},"alias_span":null,"name":"DurationRound","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4332},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21989,"byte_end":22002,"line_start":494,"line_end":494,"column_start":32,"column_end":45},"alias_span":null,"name":"RoundingError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3248},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":22004,"byte_end":22015,"line_start":494,"line_end":494,"column_start":47,"column_end":58},"alias_span":null,"name":"SubsecRound","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4386},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":22050,"byte_end":22067,"line_start":497,"line_end":497,"column_start":19,"column_end":36},"alias_span":null,"name":"ParseWeekdayError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4350},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":22069,"byte_end":22076,"line_start":497,"line_end":497,"column_start":38,"column_end":45},"alias_span":null,"name":"Weekday","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4397},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":22107,"byte_end":22112,"line_start":500,"line_end":500,"column_start":17,"column_end":22},"alias_span":null,"name":"Month","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4448},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":22114,"byte_end":22120,"line_start":500,"line_end":500,"column_start":24,"column_end":30},"alias_span":null,"name":"Months","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4449},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":22114,"byte_end":22120,"line_start":500,"line_end":500,"column_start":24,"column_end":30},"alias_span":null,"name":"Months","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4468},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":22122,"byte_end":22137,"line_start":500,"line_end":500,"column_start":32,"column_end":47},"alias_span":null,"name":"ParseMonthError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3411},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":22170,"byte_end":22178,"line_start":503,"line_end":503,"column_start":18,"column_end":26},"alias_span":null,"name":"Datelike","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3430},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":22180,"byte_end":22188,"line_start":503,"line_end":503,"column_start":28,"column_end":36},"alias_span":null,"name":"Timelike","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":22694,"byte_end":22695,"line_start":519,"line_end":519,"column_start":37,"column_end":38},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":3448}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":76,"byte_end":22970,"line_start":4,"line_end":532,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":61},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":250},{"krate":0,"index":253},{"krate":0,"index":256},{"krate":0,"index":929},{"krate":0,"index":930},{"krate":0,"index":933},{"krate":0,"index":936},{"krate":0,"index":939},{"krate":0,"index":942},{"krate":0,"index":1449},{"krate":0,"index":1450},{"krate":0,"index":1453},{"krate":0,"index":1456},{"krate":0,"index":2540},{"krate":0,"index":2541},{"krate":0,"index":2544},{"krate":0,"index":2547},{"krate":0,"index":2550},{"krate":0,"index":2553},{"krate":0,"index":2556},{"krate":0,"index":3197},{"krate":0,"index":3198},{"krate":0,"index":3200},{"krate":0,"index":3201},{"krate":0,"index":3204},{"krate":0,"index":3207},{"krate":0,"index":3210},{"krate":0,"index":3213},{"krate":0,"index":3214},{"krate":0,"index":3216},{"krate":0,"index":3278},{"krate":0,"index":3279},{"krate":0,"index":3282},{"krate":0,"index":3285},{"krate":0,"index":3288},{"krate":0,"index":3339},{"krate":0,"index":3340},{"krate":0,"index":3343},{"krate":0,"index":3346},{"krate":0,"index":3393},{"krate":0,"index":3394},{"krate":0,"index":3397},{"krate":0,"index":3398},{"krate":0,"index":3400},{"krate":0,"index":3403},{"krate":0,"index":3441},{"krate":0,"index":3442},{"krate":0,"index":3445},{"krate":0,"index":3448}],"decl_id":null,"docs":" # Chrono: Date and Time for Rust","sig":null,"attributes":[{"value":"/ # Chrono: Date and Time for Rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":76,"byte_end":112,"line_start":4,"line_end":4,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":113,"byte_end":116,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ It aims to be a feature-complete superset of","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":117,"byte_end":165,"line_start":6,"line_end":6,"column_start":1,"column_end":49}},{"value":"/ the [time](https://github.com/rust-lang-deprecated/time) library.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":166,"byte_end":235,"line_start":7,"line_end":7,"column_start":1,"column_end":70}},{"value":"/ In particular,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":236,"byte_end":254,"line_start":8,"line_end":8,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":255,"byte_end":258,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ * Chrono strictly adheres to ISO 8601.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":259,"byte_end":301,"line_start":10,"line_end":10,"column_start":1,"column_end":43}},{"value":"/ * Chrono is timezone-aware by default, with separate timezone-naive types.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":302,"byte_end":380,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ * Chrono is space-optimal and (while not being the primary goal) reasonably efficient.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":381,"byte_end":471,"line_start":12,"line_end":12,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":472,"byte_end":475,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ There were several previous attempts to bring a good date and time library to Rust,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":476,"byte_end":563,"line_start":14,"line_end":14,"column_start":1,"column_end":88}},{"value":"/ which Chrono builds upon and should acknowledge:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":564,"byte_end":616,"line_start":15,"line_end":15,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":617,"byte_end":620,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ * [Initial research on","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":621,"byte_end":647,"line_start":17,"line_end":17,"column_start":1,"column_end":27}},{"value":"/    the wiki](https://github.com/rust-lang/rust-wiki-backup/blob/master/Lib-datetime.md)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":648,"byte_end":739,"line_start":18,"line_end":18,"column_start":1,"column_end":92}},{"value":"/ * Dietrich Epp's [datetime-rs](https://github.com/depp/datetime-rs)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":740,"byte_end":811,"line_start":19,"line_end":19,"column_start":1,"column_end":72}},{"value":"/ * Luis de Bethencourt's [rust-datetime](https://github.com/luisbg/rust-datetime)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":812,"byte_end":896,"line_start":20,"line_end":20,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":897,"byte_end":900,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Any significant changes to Chrono are documented in","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":901,"byte_end":956,"line_start":22,"line_end":22,"column_start":1,"column_end":56}},{"value":"/ the [`CHANGELOG.md`](https://github.com/chronotope/chrono/blob/main/CHANGELOG.md) file.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":957,"byte_end":1048,"line_start":23,"line_end":23,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":1049,"byte_end":1052,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ## Usage","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":1053,"byte_end":1065,"line_start":25,"line_end":25,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":1066,"byte_end":1069,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Put this in your `Cargo.toml`:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":1070,"byte_end":1104,"line_start":27,"line_end":27,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":1105,"byte_end":1108,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":1109,"byte_end":1120,"line_start":29,"line_end":29,"column_start":1,"column_end":12}},{"value":"/ [dependencies]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":1121,"byte_end":1139,"line_start":30,"line_end":30,"column_start":1,"column_end":19}},{"value":"/ chrono = \"0.4\"","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":1140,"byte_end":1158,"line_start":31,"line_end":31,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":1159,"byte_end":1166,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":1167,"byte_end":1170,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ### Features","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":1171,"byte_end":1187,"line_start":34,"line_end":34,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":1188,"byte_end":1191,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Chrono supports various runtime environments and operating systems, and has","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":1192,"byte_end":1271,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ several features that may be enabled or disabled.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":1272,"byte_end":1325,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":1326,"byte_end":1329,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Default features:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":1330,"byte_end":1351,"line_start":39,"line_end":39,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":1352,"byte_end":1355,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ - `alloc`: Enable features that depend on allocation (primarily string formatting)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":1356,"byte_end":1442,"line_start":41,"line_end":41,"column_start":1,"column_end":87}},{"value":"/ - `std`: Enables functionality that depends on the standard library. This","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":1443,"byte_end":1520,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/   is a superset of `alloc` and adds interoperation with standard library types","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":1521,"byte_end":1603,"line_start":43,"line_end":43,"column_start":1,"column_end":83}},{"value":"/   and traits.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":1604,"byte_end":1621,"line_start":44,"line_end":44,"column_start":1,"column_end":18}},{"value":"/ - `clock`: Enables reading the system time (`now`) that depends on the standard library for","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":1622,"byte_end":1717,"line_start":45,"line_end":45,"column_start":1,"column_end":96}},{"value":"/ UNIX-like operating systems and the Windows API (`winapi`) for Windows.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":1718,"byte_end":1793,"line_start":46,"line_end":46,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":1794,"byte_end":1797,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ Optional features:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":1798,"byte_end":1820,"line_start":48,"line_end":48,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":1821,"byte_end":1824,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ - [`serde`][]: Enable serialization/deserialization via serde.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":1825,"byte_end":1891,"line_start":50,"line_end":50,"column_start":1,"column_end":67}},{"value":"/ - `unstable-locales`: Enable localization. This adds various methods with a","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":1892,"byte_end":1971,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/   `_localized` suffix. The implementation and API may change or even be","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":1972,"byte_end":2047,"line_start":52,"line_end":52,"column_start":1,"column_end":76}},{"value":"/   removed in a patch release. Feedback welcome.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":2048,"byte_end":2099,"line_start":53,"line_end":53,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":2100,"byte_end":2103,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ [`serde`]: https://github.com/serde-rs/serde","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":2104,"byte_end":2152,"line_start":55,"line_end":55,"column_start":1,"column_end":49}},{"value":"/ [wasm-bindgen]: https://github.com/rustwasm/wasm-bindgen","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":2153,"byte_end":2213,"line_start":56,"line_end":56,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":2214,"byte_end":2217,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ See the [cargo docs][] for examples of specifying features.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":2218,"byte_end":2281,"line_start":58,"line_end":58,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":2282,"byte_end":2285,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ [cargo docs]: https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html#choosing-features","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":2286,"byte_end":2392,"line_start":60,"line_end":60,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":2393,"byte_end":2396,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ## Overview","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":2397,"byte_end":2412,"line_start":62,"line_end":62,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":2413,"byte_end":2416,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ ### Duration","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":2417,"byte_end":2433,"line_start":64,"line_end":64,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":2434,"byte_end":2437,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Chrono currently uses its own [`Duration`] type to represent the magnitude","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":2438,"byte_end":2516,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"/ of a time span. Since this has the same name as the newer, standard type for","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":2517,"byte_end":2597,"line_start":67,"line_end":67,"column_start":1,"column_end":81}},{"value":"/ duration, the reference will refer this type as `OldDuration`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":2598,"byte_end":2664,"line_start":68,"line_end":68,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":2665,"byte_end":2668,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ Note that this is an \"accurate\" duration represented as seconds and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":2669,"byte_end":2740,"line_start":70,"line_end":70,"column_start":1,"column_end":72}},{"value":"/ nanoseconds and does not represent \"nominal\" components such as days or","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":2741,"byte_end":2816,"line_start":71,"line_end":71,"column_start":1,"column_end":76}},{"value":"/ months.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":2817,"byte_end":2828,"line_start":72,"line_end":72,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":2829,"byte_end":2832,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ When the `oldtime` feature is enabled, [`Duration`] is an alias for the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":2833,"byte_end":2908,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/ [`time::Duration`](https://docs.rs/time/0.1.40/time/struct.Duration.html)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":2909,"byte_end":2986,"line_start":75,"line_end":75,"column_start":1,"column_end":78}},{"value":"/ type from v0.1 of the time crate. time v0.1 is deprecated, so new code","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":2987,"byte_end":3061,"line_start":76,"line_end":76,"column_start":1,"column_end":75}},{"value":"/ should disable the `oldtime` feature and use the `chrono::Duration` type","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":3062,"byte_end":3138,"line_start":77,"line_end":77,"column_start":1,"column_end":77}},{"value":"/ instead. The `oldtime` feature is enabled by default for backwards","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":3139,"byte_end":3209,"line_start":78,"line_end":78,"column_start":1,"column_end":71}},{"value":"/ compatibility, but future versions of Chrono are likely to remove the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":3210,"byte_end":3283,"line_start":79,"line_end":79,"column_start":1,"column_end":74}},{"value":"/ feature entirely.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":3284,"byte_end":3305,"line_start":80,"line_end":80,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":3306,"byte_end":3309,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ Chrono does not yet natively support","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":3310,"byte_end":3350,"line_start":82,"line_end":82,"column_start":1,"column_end":41}},{"value":"/ the standard [`Duration`](https://doc.rust-lang.org/std/time/struct.Duration.html) type,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":3351,"byte_end":3443,"line_start":83,"line_end":83,"column_start":1,"column_end":93}},{"value":"/ but it will be supported in the future.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":3444,"byte_end":3487,"line_start":84,"line_end":84,"column_start":1,"column_end":44}},{"value":"/ Meanwhile you can convert between two types with","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":3488,"byte_end":3540,"line_start":85,"line_end":85,"column_start":1,"column_end":53}},{"value":"/ [`Duration::from_std`](https://docs.rs/time/0.1.40/time/struct.Duration.html#method.from_std)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":3541,"byte_end":3638,"line_start":86,"line_end":86,"column_start":1,"column_end":98}},{"value":"/ and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":3639,"byte_end":3646,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"/ [`Duration::to_std`](https://docs.rs/time/0.1.40/time/struct.Duration.html#method.to_std)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":3647,"byte_end":3740,"line_start":88,"line_end":88,"column_start":1,"column_end":94}},{"value":"/ methods.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":3741,"byte_end":3753,"line_start":89,"line_end":89,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":3754,"byte_end":3757,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ### Date and Time","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":3758,"byte_end":3779,"line_start":91,"line_end":91,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":3780,"byte_end":3783,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ Chrono provides a","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":3784,"byte_end":3805,"line_start":93,"line_end":93,"column_start":1,"column_end":22}},{"value":"/ [**`DateTime`**](./struct.DateTime.html)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":3806,"byte_end":3850,"line_start":94,"line_end":94,"column_start":1,"column_end":45}},{"value":"/ type to represent a date and a time in a timezone.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":3851,"byte_end":3905,"line_start":95,"line_end":95,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":3906,"byte_end":3909,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ For more abstract moment-in-time tracking such as internal timekeeping","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":3910,"byte_end":3984,"line_start":97,"line_end":97,"column_start":1,"column_end":75}},{"value":"/ that is unconcerned with timezones, consider","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":3985,"byte_end":4033,"line_start":98,"line_end":98,"column_start":1,"column_end":49}},{"value":"/ [`time::SystemTime`](https://doc.rust-lang.org/std/time/struct.SystemTime.html),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":4034,"byte_end":4118,"line_start":99,"line_end":99,"column_start":1,"column_end":85}},{"value":"/ which tracks your system clock, or","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":4119,"byte_end":4157,"line_start":100,"line_end":100,"column_start":1,"column_end":39}},{"value":"/ [`time::Instant`](https://doc.rust-lang.org/std/time/struct.Instant.html), which","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":4158,"byte_end":4242,"line_start":101,"line_end":101,"column_start":1,"column_end":85}},{"value":"/ is an opaque but monotonically-increasing representation of a moment in time.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":4243,"byte_end":4324,"line_start":102,"line_end":102,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":4325,"byte_end":4328,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ `DateTime` is timezone-aware and must be constructed from","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":4329,"byte_end":4390,"line_start":104,"line_end":104,"column_start":1,"column_end":62}},{"value":"/ the [**`TimeZone`**](./offset/trait.TimeZone.html) object,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":4391,"byte_end":4453,"line_start":105,"line_end":105,"column_start":1,"column_end":63}},{"value":"/ which defines how the local date is converted to and back from the UTC date.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":4454,"byte_end":4534,"line_start":106,"line_end":106,"column_start":1,"column_end":81}},{"value":"/ There are three well-known `TimeZone` implementations:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":4535,"byte_end":4593,"line_start":107,"line_end":107,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":4594,"byte_end":4597,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ * [**`Utc`**](./offset/struct.Utc.html) specifies the UTC time zone. It is most efficient.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":4598,"byte_end":4692,"line_start":109,"line_end":109,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":4693,"byte_end":4696,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ * [**`Local`**](./offset/struct.Local.html) specifies the system local time zone.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":4697,"byte_end":4782,"line_start":111,"line_end":111,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":4783,"byte_end":4786,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ * [**`FixedOffset`**](./offset/struct.FixedOffset.html) specifies","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":4787,"byte_end":4856,"line_start":113,"line_end":113,"column_start":1,"column_end":70}},{"value":"/   an arbitrary, fixed time zone such as UTC+09:00 or UTC-10:30.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":4857,"byte_end":4924,"line_start":114,"line_end":114,"column_start":1,"column_end":68}},{"value":"/   This often results from the parsed textual date and time.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":4925,"byte_end":4988,"line_start":115,"line_end":115,"column_start":1,"column_end":64}},{"value":"/   Since it stores the most information and does not depend on the system environment,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":4989,"byte_end":5078,"line_start":116,"line_end":116,"column_start":1,"column_end":90}},{"value":"/   you would want to normalize other `TimeZone`s into this type.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":5079,"byte_end":5146,"line_start":117,"line_end":117,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":5147,"byte_end":5150,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ `DateTime`s with different `TimeZone` types are distinct and do not mix,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":5151,"byte_end":5227,"line_start":119,"line_end":119,"column_start":1,"column_end":77}},{"value":"/ but can be converted to each other using","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":5228,"byte_end":5272,"line_start":120,"line_end":120,"column_start":1,"column_end":45}},{"value":"/ the [`DateTime::with_timezone`](./struct.DateTime.html#method.with_timezone) method.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":5273,"byte_end":5361,"line_start":121,"line_end":121,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":5362,"byte_end":5365,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ You can get the current date and time in the UTC time zone","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":5366,"byte_end":5428,"line_start":123,"line_end":123,"column_start":1,"column_end":63}},{"value":"/ ([`Utc::now()`](./offset/struct.Utc.html#method.now))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":5429,"byte_end":5486,"line_start":124,"line_end":124,"column_start":1,"column_end":58}},{"value":"/ or in the local time zone","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":5487,"byte_end":5516,"line_start":125,"line_end":125,"column_start":1,"column_end":30}},{"value":"/ ([`Local::now()`](./offset/struct.Local.html#method.now)).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":5517,"byte_end":5579,"line_start":126,"line_end":126,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":5580,"byte_end":5583,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":5584,"byte_end":5595,"line_start":128,"line_end":128,"column_start":1,"column_end":12}},{"value":"/ use chrono::prelude::*;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":5596,"byte_end":5623,"line_start":129,"line_end":129,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":5624,"byte_end":5627,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ let utc: DateTime<Utc> = Utc::now();       // e.g. `2014-11-28T12:45:59.324310806Z`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":5628,"byte_end":5715,"line_start":131,"line_end":131,"column_start":1,"column_end":88}},{"value":"/ let local: DateTime<Local> = Local::now(); // e.g. `2014-11-28T21:45:59.324310806+09:00`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":5716,"byte_end":5808,"line_start":132,"line_end":132,"column_start":1,"column_end":93}},{"value":"/ # let _ = utc; let _ = local;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":5809,"byte_end":5842,"line_start":133,"line_end":133,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":5843,"byte_end":5850,"line_start":134,"line_end":134,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":5851,"byte_end":5854,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ Alternatively, you can create your own date and time.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":5855,"byte_end":5912,"line_start":136,"line_end":136,"column_start":1,"column_end":58}},{"value":"/ This is a bit verbose due to Rust's lack of function and method overloading,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":5913,"byte_end":5993,"line_start":137,"line_end":137,"column_start":1,"column_end":81}},{"value":"/ but in turn we get a rich combination of initialization methods.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":5994,"byte_end":6062,"line_start":138,"line_end":138,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":6063,"byte_end":6066,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":6067,"byte_end":6078,"line_start":140,"line_end":140,"column_start":1,"column_end":12}},{"value":"/ use chrono::prelude::*;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":6079,"byte_end":6106,"line_start":141,"line_end":141,"column_start":1,"column_end":28}},{"value":"/ use chrono::offset::LocalResult;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":6107,"byte_end":6143,"line_start":142,"line_end":142,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":6144,"byte_end":6147,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ let dt = Utc.ymd(2014, 7, 8).and_hms(9, 10, 11); // `2014-07-08T09:10:11Z`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":6148,"byte_end":6226,"line_start":144,"line_end":144,"column_start":1,"column_end":79}},{"value":"/ // July 8 is 188th day of the year 2014 (`o` for \"ordinal\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":6227,"byte_end":6290,"line_start":145,"line_end":145,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(dt, Utc.yo(2014, 189).and_hms(9, 10, 11));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":6291,"byte_end":6348,"line_start":146,"line_end":146,"column_start":1,"column_end":58}},{"value":"/ // July 8 is Tuesday in ISO week 28 of the year 2014.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":6349,"byte_end":6406,"line_start":147,"line_end":147,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(dt, Utc.isoywd(2014, 28, Weekday::Tue).and_hms(9, 10, 11));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":6407,"byte_end":6481,"line_start":148,"line_end":148,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":6482,"byte_end":6485,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ let dt = Utc.ymd(2014, 7, 8).and_hms_milli(9, 10, 11, 12); // `2014-07-08T09:10:11.012Z`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":6486,"byte_end":6578,"line_start":150,"line_end":150,"column_start":1,"column_end":93}},{"value":"/ assert_eq!(dt, Utc.ymd(2014, 7, 8).and_hms_micro(9, 10, 11, 12_000));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":6579,"byte_end":6652,"line_start":151,"line_end":151,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(dt, Utc.ymd(2014, 7, 8).and_hms_nano(9, 10, 11, 12_000_000));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":6653,"byte_end":6729,"line_start":152,"line_end":152,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":6730,"byte_end":6733,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ // dynamic verification","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":6734,"byte_end":6761,"line_start":154,"line_end":154,"column_start":1,"column_end":28}},{"value":"/ assert_eq!(Utc.ymd_opt(2014, 7, 8).and_hms_opt(21, 15, 33),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":6762,"byte_end":6825,"line_start":155,"line_end":155,"column_start":1,"column_end":64}},{"value":"/            LocalResult::Single(Utc.ymd(2014, 7, 8).and_hms(21, 15, 33)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":6826,"byte_end":6903,"line_start":156,"line_end":156,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(Utc.ymd_opt(2014, 7, 8).and_hms_opt(80, 15, 33), LocalResult::None);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":6904,"byte_end":6987,"line_start":157,"line_end":157,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(Utc.ymd_opt(2014, 7, 38).and_hms_opt(21, 15, 33), LocalResult::None);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":6988,"byte_end":7072,"line_start":158,"line_end":158,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":7073,"byte_end":7076,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ // other time zone objects can be used to construct a local datetime.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":7077,"byte_end":7150,"line_start":160,"line_end":160,"column_start":1,"column_end":74}},{"value":"/ // obviously, `local_dt` is normally different from `dt`, but `fixed_dt` should be identical.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":7151,"byte_end":7248,"line_start":161,"line_end":161,"column_start":1,"column_end":98}},{"value":"/ let local_dt = Local.ymd(2014, 7, 8).and_hms_milli(9, 10, 11, 12);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":7249,"byte_end":7319,"line_start":162,"line_end":162,"column_start":1,"column_end":71}},{"value":"/ let fixed_dt = FixedOffset::east(9 * 3600).ymd(2014, 7, 8).and_hms_milli(18, 10, 11, 12);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":7320,"byte_end":7413,"line_start":163,"line_end":163,"column_start":1,"column_end":94}},{"value":"/ assert_eq!(dt, fixed_dt);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":7414,"byte_end":7443,"line_start":164,"line_end":164,"column_start":1,"column_end":30}},{"value":"/ # let _ = local_dt;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":7444,"byte_end":7467,"line_start":165,"line_end":165,"column_start":1,"column_end":24}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":7468,"byte_end":7475,"line_start":166,"line_end":166,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":7476,"byte_end":7479,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ Various properties are available to the date and time, and can be altered individually.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":7480,"byte_end":7571,"line_start":168,"line_end":168,"column_start":1,"column_end":92}},{"value":"/ Most of them are defined in the traits [`Datelike`](./trait.Datelike.html) and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":7572,"byte_end":7654,"line_start":169,"line_end":169,"column_start":1,"column_end":83}},{"value":"/ [`Timelike`](./trait.Timelike.html) which you should `use` before.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":7655,"byte_end":7725,"line_start":170,"line_end":170,"column_start":1,"column_end":71}},{"value":"/ Addition and subtraction is also supported.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":7726,"byte_end":7773,"line_start":171,"line_end":171,"column_start":1,"column_end":48}},{"value":"/ The following illustrates most supported operations to the date and time:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":7774,"byte_end":7851,"line_start":172,"line_end":172,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":7852,"byte_end":7855,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":7856,"byte_end":7867,"line_start":174,"line_end":174,"column_start":1,"column_end":12}},{"value":"/ use chrono::prelude::*;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":7868,"byte_end":7895,"line_start":175,"line_end":175,"column_start":1,"column_end":28}},{"value":"/ use chrono::Duration;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":7896,"byte_end":7921,"line_start":176,"line_end":176,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":7922,"byte_end":7925,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ // assume this returned `2014-11-28T21:45:59.324310806+09:00`:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":7926,"byte_end":7992,"line_start":178,"line_end":178,"column_start":1,"column_end":67}},{"value":"/ let dt = FixedOffset::east(9*3600).ymd(2014, 11, 28).and_hms_nano(21, 45, 59, 324310806);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":7993,"byte_end":8086,"line_start":179,"line_end":179,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":8087,"byte_end":8090,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ // property accessors","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":8091,"byte_end":8116,"line_start":181,"line_end":181,"column_start":1,"column_end":26}},{"value":"/ assert_eq!((dt.year(), dt.month(), dt.day()), (2014, 11, 28));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":8117,"byte_end":8183,"line_start":182,"line_end":182,"column_start":1,"column_end":67}},{"value":"/ assert_eq!((dt.month0(), dt.day0()), (10, 27)); // for unfortunate souls","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":8184,"byte_end":8260,"line_start":183,"line_end":183,"column_start":1,"column_end":77}},{"value":"/ assert_eq!((dt.hour(), dt.minute(), dt.second()), (21, 45, 59));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":8261,"byte_end":8329,"line_start":184,"line_end":184,"column_start":1,"column_end":69}},{"value":"/ assert_eq!(dt.weekday(), Weekday::Fri);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":8330,"byte_end":8373,"line_start":185,"line_end":185,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(dt.weekday().number_from_monday(), 5); // Mon=1, ..., Sun=7","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":8374,"byte_end":8448,"line_start":186,"line_end":186,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(dt.ordinal(), 332); // the day of year","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":8449,"byte_end":8502,"line_start":187,"line_end":187,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(dt.num_days_from_ce(), 735565); // the number of days from and including Jan 1, 1","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":8503,"byte_end":8599,"line_start":188,"line_end":188,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":8600,"byte_end":8603,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ // time zone accessor and manipulation","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":8604,"byte_end":8646,"line_start":190,"line_end":190,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(dt.offset().fix().local_minus_utc(), 9 * 3600);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":8647,"byte_end":8709,"line_start":191,"line_end":191,"column_start":1,"column_end":63}},{"value":"/ assert_eq!(dt.timezone(), FixedOffset::east(9 * 3600));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":8710,"byte_end":8769,"line_start":192,"line_end":192,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(dt.with_timezone(&Utc), Utc.ymd(2014, 11, 28).and_hms_nano(12, 45, 59, 324310806));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":8770,"byte_end":8868,"line_start":193,"line_end":193,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":8869,"byte_end":8872,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ // a sample of property manipulations (validates dynamically)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":8873,"byte_end":8938,"line_start":195,"line_end":195,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(dt.with_day(29).unwrap().weekday(), Weekday::Sat); // 2014-11-29 is Saturday","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":8939,"byte_end":9030,"line_start":196,"line_end":196,"column_start":1,"column_end":92}},{"value":"/ assert_eq!(dt.with_day(32), None);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":9031,"byte_end":9069,"line_start":197,"line_end":197,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(dt.with_year(-300).unwrap().num_days_from_ce(), -109606); // November 29, 301 BCE","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":9070,"byte_end":9166,"line_start":198,"line_end":198,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":9167,"byte_end":9170,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ // arithmetic operations","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":9171,"byte_end":9199,"line_start":200,"line_end":200,"column_start":1,"column_end":29}},{"value":"/ let dt1 = Utc.ymd(2014, 11, 14).and_hms(8, 9, 10);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":9200,"byte_end":9254,"line_start":201,"line_end":201,"column_start":1,"column_end":55}},{"value":"/ let dt2 = Utc.ymd(2014, 11, 14).and_hms(10, 9, 8);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":9255,"byte_end":9309,"line_start":202,"line_end":202,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(dt1.signed_duration_since(dt2), Duration::seconds(-2 * 3600 + 2));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":9310,"byte_end":9391,"line_start":203,"line_end":203,"column_start":1,"column_end":82}},{"value":"/ assert_eq!(dt2.signed_duration_since(dt1), Duration::seconds(2 * 3600 - 2));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":9392,"byte_end":9472,"line_start":204,"line_end":204,"column_start":1,"column_end":81}},{"value":"/ assert_eq!(Utc.ymd(1970, 1, 1).and_hms(0, 0, 0) + Duration::seconds(1_000_000_000),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":9473,"byte_end":9560,"line_start":205,"line_end":205,"column_start":1,"column_end":88}},{"value":"/            Utc.ymd(2001, 9, 9).and_hms(1, 46, 40));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":9561,"byte_end":9616,"line_start":206,"line_end":206,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(Utc.ymd(1970, 1, 1).and_hms(0, 0, 0) - Duration::seconds(1_000_000_000),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":9617,"byte_end":9704,"line_start":207,"line_end":207,"column_start":1,"column_end":88}},{"value":"/            Utc.ymd(1938, 4, 24).and_hms(22, 13, 20));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":9705,"byte_end":9762,"line_start":208,"line_end":208,"column_start":1,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":9763,"byte_end":9770,"line_start":209,"line_end":209,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":9771,"byte_end":9774,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"/ ### Formatting and Parsing","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":9775,"byte_end":9805,"line_start":211,"line_end":211,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":9806,"byte_end":9809,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"/ Formatting is done via the [`format`](./struct.DateTime.html#method.format) method,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":9810,"byte_end":9897,"line_start":213,"line_end":213,"column_start":1,"column_end":88}},{"value":"/ which format is equivalent to the familiar `strftime` format.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":9898,"byte_end":9963,"line_start":214,"line_end":214,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":9964,"byte_end":9967,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ See [`format::strftime`](./format/strftime/index.html#specifiers)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":9968,"byte_end":10037,"line_start":216,"line_end":216,"column_start":1,"column_end":70}},{"value":"/ documentation for full syntax and list of specifiers.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":10038,"byte_end":10095,"line_start":217,"line_end":217,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":10096,"byte_end":10099,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ The default `to_string` method and `{:?}` specifier also give a reasonable representation.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":10100,"byte_end":10194,"line_start":219,"line_end":219,"column_start":1,"column_end":95}},{"value":"/ Chrono also provides [`to_rfc2822`](./struct.DateTime.html#method.to_rfc2822) and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":10195,"byte_end":10280,"line_start":220,"line_end":220,"column_start":1,"column_end":86}},{"value":"/ [`to_rfc3339`](./struct.DateTime.html#method.to_rfc3339) methods","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":10281,"byte_end":10349,"line_start":221,"line_end":221,"column_start":1,"column_end":69}},{"value":"/ for well-known formats.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":10350,"byte_end":10377,"line_start":222,"line_end":222,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":10378,"byte_end":10381,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ Chrono now also provides date formatting in almost any language without the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":10382,"byte_end":10461,"line_start":224,"line_end":224,"column_start":1,"column_end":80}},{"value":"/ help of an additional C library. This functionality is under the feature","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":10462,"byte_end":10538,"line_start":225,"line_end":225,"column_start":1,"column_end":77}},{"value":"/ `unstable-locales`:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":10539,"byte_end":10562,"line_start":226,"line_end":226,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":10563,"byte_end":10566,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":10567,"byte_end":10578,"line_start":228,"line_end":228,"column_start":1,"column_end":12}},{"value":"/ chrono = { version = \"0.4\", features = [\"unstable-locales\"] }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":10579,"byte_end":10644,"line_start":229,"line_end":229,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":10645,"byte_end":10652,"line_start":230,"line_end":230,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":10653,"byte_end":10656,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/ The `unstable-locales` feature requires and implies at least the `alloc` feature.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":10657,"byte_end":10742,"line_start":232,"line_end":232,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":10743,"byte_end":10746,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":10747,"byte_end":10758,"line_start":234,"line_end":234,"column_start":1,"column_end":12}},{"value":"/ use chrono::prelude::*;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":10759,"byte_end":10786,"line_start":235,"line_end":235,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":10787,"byte_end":10790,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ # #[cfg(feature = \"unstable-locales\")]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":10791,"byte_end":10833,"line_start":237,"line_end":237,"column_start":1,"column_end":43}},{"value":"/ # fn test() {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":10834,"byte_end":10851,"line_start":238,"line_end":238,"column_start":1,"column_end":18}},{"value":"/ let dt = Utc.ymd(2014, 11, 28).and_hms(12, 0, 9);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":10852,"byte_end":10905,"line_start":239,"line_end":239,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(dt.format(\"%Y-%m-%d %H:%M:%S\").to_string(), \"2014-11-28 12:00:09\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":10906,"byte_end":10988,"line_start":240,"line_end":240,"column_start":1,"column_end":83}},{"value":"/ assert_eq!(dt.format(\"%a %b %e %T %Y\").to_string(), \"Fri Nov 28 12:00:09 2014\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":10989,"byte_end":11073,"line_start":241,"line_end":241,"column_start":1,"column_end":85}},{"value":"/ assert_eq!(dt.format_localized(\"%A %e %B %Y, %T\", Locale::fr_BE).to_string(), \"vendredi 28 novembre 2014, 12:00:09\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":11074,"byte_end":11195,"line_start":242,"line_end":242,"column_start":1,"column_end":122}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":11196,"byte_end":11199,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(dt.format(\"%a %b %e %T %Y\").to_string(), dt.format(\"%c\").to_string());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":11200,"byte_end":11285,"line_start":244,"line_end":244,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(dt.to_string(), \"2014-11-28 12:00:09 UTC\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":11286,"byte_end":11344,"line_start":245,"line_end":245,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(dt.to_rfc2822(), \"Fri, 28 Nov 2014 12:00:09 +0000\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":11345,"byte_end":11412,"line_start":246,"line_end":246,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(dt.to_rfc3339(), \"2014-11-28T12:00:09+00:00\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":11413,"byte_end":11474,"line_start":247,"line_end":247,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(format!(\"{:?}\", dt), \"2014-11-28T12:00:09Z\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":11475,"byte_end":11535,"line_start":248,"line_end":248,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":11536,"byte_end":11539,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ // Note that milli/nanoseconds are only printed if they are non-zero","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":11540,"byte_end":11612,"line_start":250,"line_end":250,"column_start":1,"column_end":73}},{"value":"/ let dt_nano = Utc.ymd(2014, 11, 28).and_hms_nano(12, 0, 9, 1);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":11613,"byte_end":11679,"line_start":251,"line_end":251,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(format!(\"{:?}\", dt_nano), \"2014-11-28T12:00:09.000000001Z\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":11680,"byte_end":11755,"line_start":252,"line_end":252,"column_start":1,"column_end":76}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":11756,"byte_end":11763,"line_start":253,"line_end":253,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(not(feature = \"unstable-locales\"))]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":11764,"byte_end":11811,"line_start":254,"line_end":254,"column_start":1,"column_end":48}},{"value":"/ # fn test() {}","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":11812,"byte_end":11830,"line_start":255,"line_end":255,"column_start":1,"column_end":19}},{"value":"/ # if cfg!(feature = \"unstable-locales\") {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":11831,"byte_end":11876,"line_start":256,"line_end":256,"column_start":1,"column_end":46}},{"value":"/ #    test();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":11877,"byte_end":11893,"line_start":257,"line_end":257,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":11894,"byte_end":11901,"line_start":258,"line_end":258,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":11902,"byte_end":11909,"line_start":259,"line_end":259,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":11910,"byte_end":11913,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ Parsing can be done with three methods:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":11914,"byte_end":11957,"line_start":261,"line_end":261,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":11958,"byte_end":11961,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ 1. The standard [`FromStr`](https://doc.rust-lang.org/std/str/trait.FromStr.html) trait","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":11962,"byte_end":12053,"line_start":263,"line_end":263,"column_start":1,"column_end":92}},{"value":"/    (and [`parse`](https://doc.rust-lang.org/std/primitive.str.html#method.parse) method","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":12054,"byte_end":12145,"line_start":264,"line_end":264,"column_start":1,"column_end":92}},{"value":"/    on a string) can be used for parsing `DateTime<FixedOffset>`, `DateTime<Utc>` and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":12146,"byte_end":12234,"line_start":265,"line_end":265,"column_start":1,"column_end":89}},{"value":"/    `DateTime<Local>` values. This parses what the `{:?}`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":12235,"byte_end":12295,"line_start":266,"line_end":266,"column_start":1,"column_end":61}},{"value":"/    ([`std::fmt::Debug`](https://doc.rust-lang.org/std/fmt/trait.Debug.html))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":12296,"byte_end":12376,"line_start":267,"line_end":267,"column_start":1,"column_end":81}},{"value":"/    format specifier prints, and requires the offset to be present.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":12377,"byte_end":12447,"line_start":268,"line_end":268,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":12448,"byte_end":12451,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/ 2. [`DateTime::parse_from_str`](./struct.DateTime.html#method.parse_from_str) parses","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":12452,"byte_end":12540,"line_start":270,"line_end":270,"column_start":1,"column_end":89}},{"value":"/    a date and time with offsets and returns `DateTime<FixedOffset>`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":12541,"byte_end":12613,"line_start":271,"line_end":271,"column_start":1,"column_end":73}},{"value":"/    This should be used when the offset is a part of input and the caller cannot guess that.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":12614,"byte_end":12709,"line_start":272,"line_end":272,"column_start":1,"column_end":96}},{"value":"/    It *cannot* be used when the offset can be missing.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":12710,"byte_end":12768,"line_start":273,"line_end":273,"column_start":1,"column_end":59}},{"value":"/    [`DateTime::parse_from_rfc2822`](./struct.DateTime.html#method.parse_from_rfc2822)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":12769,"byte_end":12858,"line_start":274,"line_end":274,"column_start":1,"column_end":90}},{"value":"/    and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":12859,"byte_end":12869,"line_start":275,"line_end":275,"column_start":1,"column_end":11}},{"value":"/    [`DateTime::parse_from_rfc3339`](./struct.DateTime.html#method.parse_from_rfc3339)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":12870,"byte_end":12959,"line_start":276,"line_end":276,"column_start":1,"column_end":90}},{"value":"/    are similar but for well-known formats.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":12960,"byte_end":13006,"line_start":277,"line_end":277,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":13007,"byte_end":13010,"line_start":278,"line_end":278,"column_start":1,"column_end":4}},{"value":"/ 3. [`Offset::datetime_from_str`](./offset/trait.TimeZone.html#method.datetime_from_str) is","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":13011,"byte_end":13105,"line_start":279,"line_end":279,"column_start":1,"column_end":95}},{"value":"/    similar but returns `DateTime` of given offset.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":13106,"byte_end":13160,"line_start":280,"line_end":280,"column_start":1,"column_end":55}},{"value":"/    When the explicit offset is missing from the input, it simply uses given offset.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":13161,"byte_end":13248,"line_start":281,"line_end":281,"column_start":1,"column_end":88}},{"value":"/    It issues an error when the input contains an explicit offset different","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":13249,"byte_end":13327,"line_start":282,"line_end":282,"column_start":1,"column_end":79}},{"value":"/    from the current offset.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":13328,"byte_end":13359,"line_start":283,"line_end":283,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":13360,"byte_end":13363,"line_start":284,"line_end":284,"column_start":1,"column_end":4}},{"value":"/ More detailed control over the parsing process is available via","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":13364,"byte_end":13431,"line_start":285,"line_end":285,"column_start":1,"column_end":68}},{"value":"/ [`format`](./format/index.html) module.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":13432,"byte_end":13475,"line_start":286,"line_end":286,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":13476,"byte_end":13479,"line_start":287,"line_end":287,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":13480,"byte_end":13491,"line_start":288,"line_end":288,"column_start":1,"column_end":12}},{"value":"/ use chrono::prelude::*;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":13492,"byte_end":13519,"line_start":289,"line_end":289,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":13520,"byte_end":13523,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"/ let dt = Utc.ymd(2014, 11, 28).and_hms(12, 0, 9);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":13524,"byte_end":13577,"line_start":291,"line_end":291,"column_start":1,"column_end":54}},{"value":"/ let fixed_dt = dt.with_timezone(&FixedOffset::east(9*3600));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":13578,"byte_end":13642,"line_start":292,"line_end":292,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":13643,"byte_end":13646,"line_start":293,"line_end":293,"column_start":1,"column_end":4}},{"value":"/ // method 1","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":13647,"byte_end":13662,"line_start":294,"line_end":294,"column_start":1,"column_end":16}},{"value":"/ assert_eq!(\"2014-11-28T12:00:09Z\".parse::<DateTime<Utc>>(), Ok(dt.clone()));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":13663,"byte_end":13743,"line_start":295,"line_end":295,"column_start":1,"column_end":81}},{"value":"/ assert_eq!(\"2014-11-28T21:00:09+09:00\".parse::<DateTime<Utc>>(), Ok(dt.clone()));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":13744,"byte_end":13829,"line_start":296,"line_end":296,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(\"2014-11-28T21:00:09+09:00\".parse::<DateTime<FixedOffset>>(), Ok(fixed_dt.clone()));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":13830,"byte_end":13929,"line_start":297,"line_end":297,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":13930,"byte_end":13933,"line_start":298,"line_end":298,"column_start":1,"column_end":4}},{"value":"/ // method 2","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":13934,"byte_end":13949,"line_start":299,"line_end":299,"column_start":1,"column_end":16}},{"value":"/ assert_eq!(DateTime::parse_from_str(\"2014-11-28 21:00:09 +09:00\", \"%Y-%m-%d %H:%M:%S %z\"),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":13950,"byte_end":14044,"line_start":300,"line_end":300,"column_start":1,"column_end":95}},{"value":"/            Ok(fixed_dt.clone()));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":14045,"byte_end":14082,"line_start":301,"line_end":301,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(DateTime::parse_from_rfc2822(\"Fri, 28 Nov 2014 21:00:09 +0900\"),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":14083,"byte_end":14162,"line_start":302,"line_end":302,"column_start":1,"column_end":80}},{"value":"/            Ok(fixed_dt.clone()));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":14163,"byte_end":14200,"line_start":303,"line_end":303,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(DateTime::parse_from_rfc3339(\"2014-11-28T21:00:09+09:00\"), Ok(fixed_dt.clone()));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":14201,"byte_end":14297,"line_start":304,"line_end":304,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":14298,"byte_end":14301,"line_start":305,"line_end":305,"column_start":1,"column_end":4}},{"value":"/ // method 3","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":14302,"byte_end":14317,"line_start":306,"line_end":306,"column_start":1,"column_end":16}},{"value":"/ assert_eq!(Utc.datetime_from_str(\"2014-11-28 12:00:09\", \"%Y-%m-%d %H:%M:%S\"), Ok(dt.clone()));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":14318,"byte_end":14416,"line_start":307,"line_end":307,"column_start":1,"column_end":99}},{"value":"/ assert_eq!(Utc.datetime_from_str(\"Fri Nov 28 12:00:09 2014\", \"%a %b %e %T %Y\"), Ok(dt.clone()));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":14417,"byte_end":14517,"line_start":308,"line_end":308,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":14518,"byte_end":14521,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ // oops, the year is missing!","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":14522,"byte_end":14555,"line_start":310,"line_end":310,"column_start":1,"column_end":34}},{"value":"/ assert!(Utc.datetime_from_str(\"Fri Nov 28 12:00:09\", \"%a %b %e %T %Y\").is_err());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":14556,"byte_end":14641,"line_start":311,"line_end":311,"column_start":1,"column_end":86}},{"value":"/ // oops, the format string does not include the year at all!","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":14642,"byte_end":14706,"line_start":312,"line_end":312,"column_start":1,"column_end":65}},{"value":"/ assert!(Utc.datetime_from_str(\"Fri Nov 28 12:00:09\", \"%a %b %e %T\").is_err());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":14707,"byte_end":14789,"line_start":313,"line_end":313,"column_start":1,"column_end":83}},{"value":"/ // oops, the weekday is incorrect!","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":14790,"byte_end":14828,"line_start":314,"line_end":314,"column_start":1,"column_end":39}},{"value":"/ assert!(Utc.datetime_from_str(\"Sat Nov 28 12:00:09 2014\", \"%a %b %e %T %Y\").is_err());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":14829,"byte_end":14919,"line_start":315,"line_end":315,"column_start":1,"column_end":91}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":14920,"byte_end":14927,"line_start":316,"line_end":316,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":14928,"byte_end":14931,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"/ Again : See [`format::strftime`](./format/strftime/index.html#specifiers)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":14932,"byte_end":15009,"line_start":318,"line_end":318,"column_start":1,"column_end":78}},{"value":"/ documentation for full syntax and list of specifiers.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":15010,"byte_end":15067,"line_start":319,"line_end":319,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":15068,"byte_end":15071,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/ ### Conversion from and to EPOCH timestamps","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":15072,"byte_end":15119,"line_start":321,"line_end":321,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":15120,"byte_end":15123,"line_start":322,"line_end":322,"column_start":1,"column_end":4}},{"value":"/ Use [`Utc.timestamp(seconds, nanoseconds)`](./offset/trait.TimeZone.html#method.timestamp)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":15124,"byte_end":15218,"line_start":323,"line_end":323,"column_start":1,"column_end":95}},{"value":"/ to construct a [`DateTime<Utc>`](./struct.DateTime.html) from a UNIX timestamp","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":15219,"byte_end":15301,"line_start":324,"line_end":324,"column_start":1,"column_end":83}},{"value":"/ (seconds, nanoseconds that passed since January 1st 1970).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":15302,"byte_end":15364,"line_start":325,"line_end":325,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":15365,"byte_end":15368,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"/ Use [`DateTime.timestamp`](./struct.DateTime.html#method.timestamp) to get the timestamp (in seconds)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":15369,"byte_end":15474,"line_start":327,"line_end":327,"column_start":1,"column_end":106}},{"value":"/ from a [`DateTime`](./struct.DateTime.html). Additionally, you can use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":15475,"byte_end":15549,"line_start":328,"line_end":328,"column_start":1,"column_end":75}},{"value":"/ [`DateTime.timestamp_subsec_nanos`](./struct.DateTime.html#method.timestamp_subsec_nanos)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":15550,"byte_end":15643,"line_start":329,"line_end":329,"column_start":1,"column_end":94}},{"value":"/ to get the number of additional number of nanoseconds.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":15644,"byte_end":15702,"line_start":330,"line_end":330,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":15703,"byte_end":15706,"line_start":331,"line_end":331,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":15707,"byte_end":15718,"line_start":332,"line_end":332,"column_start":1,"column_end":12}},{"value":"/ // We need the trait in scope to use Utc::timestamp().","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":15719,"byte_end":15777,"line_start":333,"line_end":333,"column_start":1,"column_end":59}},{"value":"/ use chrono::{DateTime, TimeZone, Utc};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":15778,"byte_end":15820,"line_start":334,"line_end":334,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":15821,"byte_end":15824,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ // Construct a datetime from epoch:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":15825,"byte_end":15864,"line_start":336,"line_end":336,"column_start":1,"column_end":40}},{"value":"/ let dt = Utc.timestamp(1_500_000_000, 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":15865,"byte_end":15910,"line_start":337,"line_end":337,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(dt.to_rfc2822(), \"Fri, 14 Jul 2017 02:40:00 +0000\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":15911,"byte_end":15978,"line_start":338,"line_end":338,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":15979,"byte_end":15982,"line_start":339,"line_end":339,"column_start":1,"column_end":4}},{"value":"/ // Get epoch value from a datetime:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":15983,"byte_end":16022,"line_start":340,"line_end":340,"column_start":1,"column_end":40}},{"value":"/ let dt = DateTime::parse_from_rfc2822(\"Fri, 14 Jul 2017 02:40:00 +0000\").unwrap();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":16023,"byte_end":16109,"line_start":341,"line_end":341,"column_start":1,"column_end":87}},{"value":"/ assert_eq!(dt.timestamp(), 1_500_000_000);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":16110,"byte_end":16156,"line_start":342,"line_end":342,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":16157,"byte_end":16164,"line_start":343,"line_end":343,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":16165,"byte_end":16168,"line_start":344,"line_end":344,"column_start":1,"column_end":4}},{"value":"/ ### Individual date","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":16169,"byte_end":16192,"line_start":345,"line_end":345,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":16193,"byte_end":16196,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ Chrono also provides an individual date type ([**`Date`**](./struct.Date.html)).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":16197,"byte_end":16281,"line_start":347,"line_end":347,"column_start":1,"column_end":85}},{"value":"/ It also has time zones attached, and have to be constructed via time zones.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":16282,"byte_end":16361,"line_start":348,"line_end":348,"column_start":1,"column_end":80}},{"value":"/ Most operations available to `DateTime` are also available to `Date` whenever appropriate.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":16362,"byte_end":16456,"line_start":349,"line_end":349,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":16457,"byte_end":16460,"line_start":350,"line_end":350,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":16461,"byte_end":16472,"line_start":351,"line_end":351,"column_start":1,"column_end":12}},{"value":"/ use chrono::prelude::*;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":16473,"byte_end":16500,"line_start":352,"line_end":352,"column_start":1,"column_end":28}},{"value":"/ use chrono::offset::LocalResult;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":16501,"byte_end":16537,"line_start":353,"line_end":353,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":16538,"byte_end":16541,"line_start":354,"line_end":354,"column_start":1,"column_end":4}},{"value":"/ # // these *may* fail, but only very rarely. just rerun the test if you were that unfortunate ;)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":16542,"byte_end":16642,"line_start":355,"line_end":355,"column_start":1,"column_end":101}},{"value":"/ assert_eq!(Utc::today(), Utc::now().date());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":16643,"byte_end":16691,"line_start":356,"line_end":356,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(Local::today(), Local::now().date());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":16692,"byte_end":16744,"line_start":357,"line_end":357,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":16745,"byte_end":16748,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Utc.ymd(2014, 11, 28).weekday(), Weekday::Fri);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":16749,"byte_end":16811,"line_start":359,"line_end":359,"column_start":1,"column_end":63}},{"value":"/ assert_eq!(Utc.ymd_opt(2014, 11, 31), LocalResult::None);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":16812,"byte_end":16873,"line_start":360,"line_end":360,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(Utc.ymd(2014, 11, 28).and_hms_milli(7, 8, 9, 10).format(\"%H%M%S\").to_string(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":16874,"byte_end":16967,"line_start":361,"line_end":361,"column_start":1,"column_end":94}},{"value":"/            \"070809\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":16968,"byte_end":16993,"line_start":362,"line_end":362,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":16994,"byte_end":17001,"line_start":363,"line_end":363,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":17002,"byte_end":17005,"line_start":364,"line_end":364,"column_start":1,"column_end":4}},{"value":"/ There is no timezone-aware `Time` due to the lack of usefulness and also the complexity.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":17006,"byte_end":17098,"line_start":365,"line_end":365,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":17099,"byte_end":17102,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ `DateTime` has [`date`](./struct.DateTime.html#method.date) method","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":17103,"byte_end":17173,"line_start":367,"line_end":367,"column_start":1,"column_end":71}},{"value":"/ which returns a `Date` which represents its date component.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":17174,"byte_end":17237,"line_start":368,"line_end":368,"column_start":1,"column_end":64}},{"value":"/ There is also a [`time`](./struct.DateTime.html#method.time) method,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":17238,"byte_end":17310,"line_start":369,"line_end":369,"column_start":1,"column_end":73}},{"value":"/ which simply returns a naive local time described below.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":17311,"byte_end":17371,"line_start":370,"line_end":370,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":17372,"byte_end":17375,"line_start":371,"line_end":371,"column_start":1,"column_end":4}},{"value":"/ ### Naive date and time","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":17376,"byte_end":17403,"line_start":372,"line_end":372,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":17404,"byte_end":17407,"line_start":373,"line_end":373,"column_start":1,"column_end":4}},{"value":"/ Chrono provides naive counterparts to `Date`, (non-existent) `Time` and `DateTime`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":17408,"byte_end":17494,"line_start":374,"line_end":374,"column_start":1,"column_end":87}},{"value":"/ as [**`NaiveDate`**](./naive/struct.NaiveDate.html),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":17495,"byte_end":17551,"line_start":375,"line_end":375,"column_start":1,"column_end":57}},{"value":"/ [**`NaiveTime`**](./naive/struct.NaiveTime.html) and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":17552,"byte_end":17608,"line_start":376,"line_end":376,"column_start":1,"column_end":57}},{"value":"/ [**`NaiveDateTime`**](./naive/struct.NaiveDateTime.html) respectively.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":17609,"byte_end":17683,"line_start":377,"line_end":377,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":17684,"byte_end":17687,"line_start":378,"line_end":378,"column_start":1,"column_end":4}},{"value":"/ They have almost equivalent interfaces as their timezone-aware twins,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":17688,"byte_end":17761,"line_start":379,"line_end":379,"column_start":1,"column_end":74}},{"value":"/ but are not associated to time zones obviously and can be quite low-level.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":17762,"byte_end":17840,"line_start":380,"line_end":380,"column_start":1,"column_end":79}},{"value":"/ They are mostly useful for building blocks for higher-level types.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":17841,"byte_end":17911,"line_start":381,"line_end":381,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":17912,"byte_end":17915,"line_start":382,"line_end":382,"column_start":1,"column_end":4}},{"value":"/ Timezone-aware `DateTime` and `Date` types have two methods returning naive versions:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":17916,"byte_end":18005,"line_start":383,"line_end":383,"column_start":1,"column_end":90}},{"value":"/ [`naive_local`](./struct.DateTime.html#method.naive_local) returns","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":18006,"byte_end":18076,"line_start":384,"line_end":384,"column_start":1,"column_end":71}},{"value":"/ a view to the naive local time,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":18077,"byte_end":18112,"line_start":385,"line_end":385,"column_start":1,"column_end":36}},{"value":"/ and [`naive_utc`](./struct.DateTime.html#method.naive_utc) returns","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":18113,"byte_end":18183,"line_start":386,"line_end":386,"column_start":1,"column_end":71}},{"value":"/ a view to the naive UTC time.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":18184,"byte_end":18217,"line_start":387,"line_end":387,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":18218,"byte_end":18221,"line_start":388,"line_end":388,"column_start":1,"column_end":4}},{"value":"/ ## Limitations","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":18222,"byte_end":18240,"line_start":389,"line_end":389,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":18241,"byte_end":18244,"line_start":390,"line_end":390,"column_start":1,"column_end":4}},{"value":"/ Only proleptic Gregorian calendar (i.e. extended to support older dates) is supported.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":18245,"byte_end":18335,"line_start":391,"line_end":391,"column_start":1,"column_end":91}},{"value":"/ Be very careful if you really have to deal with pre-20C dates, they can be in Julian or others.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":18336,"byte_end":18435,"line_start":392,"line_end":392,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":18436,"byte_end":18439,"line_start":393,"line_end":393,"column_start":1,"column_end":4}},{"value":"/ Date types are limited in about +/- 262,000 years from the common epoch.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":18440,"byte_end":18516,"line_start":394,"line_end":394,"column_start":1,"column_end":77}},{"value":"/ Time types are limited in the nanosecond accuracy.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":18517,"byte_end":18571,"line_start":395,"line_end":395,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":18572,"byte_end":18575,"line_start":396,"line_end":396,"column_start":1,"column_end":4}},{"value":"/ [Leap seconds are supported in the representation but","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":18576,"byte_end":18633,"line_start":397,"line_end":397,"column_start":1,"column_end":58}},{"value":"/ Chrono doesn't try to make use of them](./naive/struct.NaiveTime.html#leap-second-handling).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":18634,"byte_end":18730,"line_start":398,"line_end":398,"column_start":1,"column_end":97}},{"value":"/ (The main reason is that leap seconds are not really predictable.)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":18731,"byte_end":18801,"line_start":399,"line_end":399,"column_start":1,"column_end":71}},{"value":"/ Almost *every* operation over the possible leap seconds will ignore them.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":18802,"byte_end":18879,"line_start":400,"line_end":400,"column_start":1,"column_end":78}},{"value":"/ Consider using `NaiveDateTime` with the implicit TAI (International Atomic Time) scale","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":18880,"byte_end":18970,"line_start":401,"line_end":401,"column_start":1,"column_end":91}},{"value":"/ if you want.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":18971,"byte_end":18987,"line_start":402,"line_end":402,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":18988,"byte_end":18991,"line_start":403,"line_end":403,"column_start":1,"column_end":4}},{"value":"/ Chrono inherently does not support an inaccurate or partial date and time representation.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":18992,"byte_end":19085,"line_start":404,"line_end":404,"column_start":1,"column_end":94}},{"value":"/ Any operation that can be ambiguous will return `None` in such cases.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":19086,"byte_end":19159,"line_start":405,"line_end":405,"column_start":1,"column_end":74}},{"value":"/ For example, \"a month later\" of 2014-01-30 is not well-defined","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":19160,"byte_end":19226,"line_start":406,"line_end":406,"column_start":1,"column_end":67}},{"value":"/ and consequently `Utc.ymd(2014, 1, 30).with_month(2)` returns `None`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":19227,"byte_end":19300,"line_start":407,"line_end":407,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":19301,"byte_end":19304,"line_start":408,"line_end":408,"column_start":1,"column_end":4}},{"value":"/ Non ISO week handling is not yet supported.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":19305,"byte_end":19352,"line_start":409,"line_end":409,"column_start":1,"column_end":48}},{"value":"/ For now you can use the [chrono_ext](https://crates.io/crates/chrono_ext)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":19353,"byte_end":19430,"line_start":410,"line_end":410,"column_start":1,"column_end":78}},{"value":"/ crate ([sources](https://github.com/bcourtine/chrono-ext/)).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":19431,"byte_end":19495,"line_start":411,"line_end":411,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":19496,"byte_end":19499,"line_start":412,"line_end":412,"column_start":1,"column_end":4}},{"value":"/ Advanced time zone handling is not yet supported.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":19500,"byte_end":19553,"line_start":413,"line_end":413,"column_start":1,"column_end":54}},{"value":"/ For now you can try the [Chrono-tz](https://github.com/chronotope/chrono-tz/) crate instead.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":19554,"byte_end":19650,"line_start":414,"line_end":414,"column_start":1,"column_end":97}},{"value":"deny(missing_docs)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":19799,"byte_end":19821,"line_start":418,"line_end":418,"column_start":1,"column_end":23}},{"value":"deny(missing_debug_implementations)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":19822,"byte_end":19861,"line_start":419,"line_end":419,"column_start":1,"column_end":40}},{"value":"warn(unreachable_pub)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":19862,"byte_end":19887,"line_start":420,"line_end":420,"column_start":1,"column_end":26}},{"value":"deny(dead_code)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":19888,"byte_end":19907,"line_start":421,"line_end":421,"column_start":1,"column_end":20}}]},{"kind":"Mod","id":{"krate":0,"index":7},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":20635,"byte_end":20642,"line_start":443,"line_end":443,"column_start":9,"column_end":16},"name":"prelude","qualname":"::prelude","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","parent":null,"children":[{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":58}],"decl_id":null,"docs":" A convenience module appropriate for glob imports (`use chrono::prelude::*;`).\n","sig":null,"attributes":[{"value":"/ A convenience module appropriate for glob imports (`use chrono::prelude::*;`).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":20544,"byte_end":20626,"line_start":442,"line_end":442,"column_start":1,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":3450},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":25359,"byte_end":25363,"line_start":58,"line_end":58,"column_start":12,"column_end":16},"name":"Date","qualname":"::date::Date","value":"Date {  }","parent":null,"children":[{"krate":0,"index":3452},{"krate":0,"index":3453}],"decl_id":null,"docs":" ISO 8601 calendar date with time zone.","sig":null,"attributes":[{"value":"/ ISO 8601 calendar date with time zone.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":23702,"byte_end":23744,"line_start":25,"line_end":25,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":23745,"byte_end":23748,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ You almost certainly want to be using a [`NaiveDate`] instead of this type.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":23749,"byte_end":23828,"line_start":27,"line_end":27,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":23829,"byte_end":23832,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This type primarily exists to aid in the construction of DateTimes that","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":23833,"byte_end":23908,"line_start":29,"line_end":29,"column_start":1,"column_end":76}},{"value":"/ have a timezone by way of the [`TimeZone`] datelike constructors (e.g.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":23909,"byte_end":23983,"line_start":30,"line_end":30,"column_start":1,"column_end":75}},{"value":"/ [`TimeZone::ymd`]).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":23984,"byte_end":24007,"line_start":31,"line_end":31,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":24008,"byte_end":24011,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This type should be considered ambiguous at best, due to the inherent lack","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":24012,"byte_end":24090,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/ of precision required for the time zone resolution.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":24091,"byte_end":24146,"line_start":34,"line_end":34,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":24147,"byte_end":24150,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ There are some guarantees on the usage of `Date<Tz>`:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":24151,"byte_end":24208,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":24209,"byte_end":24212,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ - If properly constructed via [`TimeZone::ymd`] and others without an error,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":24213,"byte_end":24293,"line_start":38,"line_end":38,"column_start":1,"column_end":81}},{"value":"/   the corresponding local date should exist for at least a moment.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":24294,"byte_end":24364,"line_start":39,"line_end":39,"column_start":1,"column_end":71}},{"value":"/   (It may still have a gap from the offset changes.)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":24365,"byte_end":24421,"line_start":40,"line_end":40,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":24422,"byte_end":24425,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ - The `TimeZone` is free to assign *any* [`Offset`](crate::offset::Offset) to the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":24426,"byte_end":24511,"line_start":42,"line_end":42,"column_start":1,"column_end":86}},{"value":"/   local date, as long as that offset did occur in given day.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":24512,"byte_end":24576,"line_start":43,"line_end":43,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":24577,"byte_end":24580,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/   For example, if `2015-03-08T01:59-08:00` is followed by `2015-03-08T03:00-07:00`,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":24581,"byte_end":24668,"line_start":45,"line_end":45,"column_start":1,"column_end":88}},{"value":"/   it may produce either `2015-03-08-08:00` or `2015-03-08-07:00`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":24669,"byte_end":24737,"line_start":46,"line_end":46,"column_start":1,"column_end":69}},{"value":"/   but *not* `2015-03-08+00:00` and others.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":24738,"byte_end":24784,"line_start":47,"line_end":47,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":24785,"byte_end":24788,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ - Once constructed as a full `DateTime`, [`DateTime::date`] and other associated","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":24789,"byte_end":24873,"line_start":49,"line_end":49,"column_start":1,"column_end":85}},{"value":"/   methods should return those for the original `Date`. For example, if `dt =","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":24874,"byte_end":24954,"line_start":50,"line_end":50,"column_start":1,"column_end":81}},{"value":"/   tz.ymd(y,m,d).hms(h,n,s)` were valid, `dt.date() == tz.ymd(y,m,d)`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":24955,"byte_end":25028,"line_start":51,"line_end":51,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":25029,"byte_end":25032,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ - The date is timezone-agnostic up to one day (i.e. practically always),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":25033,"byte_end":25109,"line_start":53,"line_end":53,"column_start":1,"column_end":77}},{"value":"/   so the local date and UTC date should be equal for most cases","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":25110,"byte_end":25177,"line_start":54,"line_end":54,"column_start":1,"column_end":68}},{"value":"/   even though the raw calculation between `NaiveDate` and `Duration` may not.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":25178,"byte_end":25259,"line_start":55,"line_end":55,"column_start":1,"column_end":82}}]},{"kind":"Const","id":{"krate":0,"index":128},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":25560,"byte_end":25568,"line_start":66,"line_end":66,"column_start":11,"column_end":19},"name":"MIN_DATE","qualname":"::date::MIN_DATE","value":"Date<Utc>","parent":null,"children":[],"decl_id":null,"docs":" The minimum possible `Date`.\n","sig":null,"attributes":[{"value":"/ The minimum possible `Date`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":25428,"byte_end":25460,"line_start":63,"line_end":63,"column_start":1,"column_end":33}},{"value":"allow(deprecated)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":25461,"byte_end":25481,"line_start":64,"line_end":64,"column_start":1,"column_end":21}},{"value":"deprecated(since = \"0.4.20\", note = \"Use Date::MIN_UTC instead\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":25482,"byte_end":25549,"line_start":65,"line_end":65,"column_start":1,"column_end":68}}]},{"kind":"Const","id":{"krate":0,"index":129},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":25736,"byte_end":25744,"line_start":70,"line_end":70,"column_start":11,"column_end":19},"name":"MAX_DATE","qualname":"::date::MAX_DATE","value":"Date<Utc>","parent":null,"children":[],"decl_id":null,"docs":" The maximum possible `Date`.\n","sig":null,"attributes":[{"value":"/ The maximum possible `Date`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":25604,"byte_end":25636,"line_start":67,"line_end":67,"column_start":1,"column_end":33}},{"value":"allow(deprecated)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":25637,"byte_end":25657,"line_start":68,"line_end":68,"column_start":1,"column_end":21}},{"value":"deprecated(since = \"0.4.20\", note = \"Use Date::MAX_UTC instead\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":25658,"byte_end":25725,"line_start":69,"line_end":69,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":26069,"byte_end":26077,"line_start":78,"line_end":78,"column_start":12,"column_end":20},"name":"from_utc","qualname":"<Date<Tz>>::from_utc","value":"fn from_utc(NaiveDate, Tz::Offset) -> Date<Tz>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `Date` with given *UTC* date and offset.\n The local date should be constructed via the `TimeZone` trait.\n","sig":null,"attributes":[{"value":"/ Makes a new `Date` with given *UTC* date and offset.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":25815,"byte_end":25871,"line_start":73,"line_end":73,"column_start":5,"column_end":61}},{"value":"/ The local date should be constructed via the `TimeZone` trait.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":25876,"byte_end":25942,"line_start":74,"line_end":74,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":26048,"byte_end":26057,"line_start":77,"line_end":77,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":26364,"byte_end":26372,"line_start":87,"line_end":87,"column_start":12,"column_end":20},"name":"and_time","qualname":"<Date<Tz>>::and_time","value":"fn and_time(&Self, NaiveTime) -> Option<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date and given `NaiveTime`.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the current date and given `NaiveTime`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":26170,"byte_end":26241,"line_start":82,"line_end":82,"column_start":5,"column_end":76}},{"value":"/ The offset in the current date is preserved.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":26246,"byte_end":26294,"line_start":83,"line_end":83,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":26299,"byte_end":26302,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Panics on invalid datetime.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":26307,"byte_end":26338,"line_start":85,"line_end":85,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":26343,"byte_end":26352,"line_start":86,"line_end":86,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":26769,"byte_end":26776,"line_start":97,"line_end":97,"column_start":12,"column_end":19},"name":"and_hms","qualname":"<Date<Tz>>::and_hms","value":"fn and_hms(&Self, u32, u32, u32) -> DateTime<Tz>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute and second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the current date, hour, minute and second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":26554,"byte_end":26628,"line_start":92,"line_end":92,"column_start":5,"column_end":79}},{"value":"/ The offset in the current date is preserved.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":26633,"byte_end":26681,"line_start":93,"line_end":93,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":26686,"byte_end":26689,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ Panics on invalid hour, minute and/or second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":26694,"byte_end":26743,"line_start":95,"line_end":95,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":26748,"byte_end":26757,"line_start":96,"line_end":96,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":27131,"byte_end":27142,"line_start":106,"line_end":106,"column_start":12,"column_end":23},"name":"and_hms_opt","qualname":"<Date<Tz>>::and_hms_opt","value":"fn and_hms_opt(&Self, u32, u32, u32) -> Option<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute and second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the current date, hour, minute and second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":26908,"byte_end":26982,"line_start":101,"line_end":101,"column_start":5,"column_end":79}},{"value":"/ The offset in the current date is preserved.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":26987,"byte_end":27035,"line_start":102,"line_end":102,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":27040,"byte_end":27043,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on invalid hour, minute and/or second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":27048,"byte_end":27105,"line_start":104,"line_end":104,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":27110,"byte_end":27119,"line_start":105,"line_end":105,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":27629,"byte_end":27642,"line_start":116,"line_end":116,"column_start":12,"column_end":25},"name":"and_hms_milli","qualname":"<Date<Tz>>::and_hms_milli","value":"fn and_hms_milli(&Self, u32, u32, u32, u32) -> DateTime<Tz>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute, second and millisecond.\n The millisecond part can exceed 1,000 in order to represent the leap second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the current date, hour, minute, second and millisecond.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":27303,"byte_end":27390,"line_start":110,"line_end":110,"column_start":5,"column_end":92}},{"value":"/ The millisecond part can exceed 1,000 in order to represent the leap second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":27395,"byte_end":27475,"line_start":111,"line_end":111,"column_start":5,"column_end":85}},{"value":"/ The offset in the current date is preserved.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":27480,"byte_end":27528,"line_start":112,"line_end":112,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":27533,"byte_end":27536,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ Panics on invalid hour, minute, second and/or millisecond.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":27541,"byte_end":27603,"line_start":114,"line_end":114,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":27608,"byte_end":27617,"line_start":115,"line_end":115,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":28133,"byte_end":28150,"line_start":126,"line_end":126,"column_start":12,"column_end":29},"name":"and_hms_milli_opt","qualname":"<Date<Tz>>::and_hms_milli_opt","value":"fn and_hms_milli_opt(&Self, u32, u32, u32, u32) -> Option<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute, second and millisecond.\n The millisecond part can exceed 1,000 in order to represent the leap second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the current date, hour, minute, second and millisecond.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":27799,"byte_end":27886,"line_start":120,"line_end":120,"column_start":5,"column_end":92}},{"value":"/ The millisecond part can exceed 1,000 in order to represent the leap second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":27891,"byte_end":27971,"line_start":121,"line_end":121,"column_start":5,"column_end":85}},{"value":"/ The offset in the current date is preserved.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":27976,"byte_end":28024,"line_start":122,"line_end":122,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":28029,"byte_end":28032,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on invalid hour, minute, second and/or millisecond.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":28037,"byte_end":28107,"line_start":124,"line_end":124,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":28112,"byte_end":28121,"line_start":125,"line_end":125,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":28713,"byte_end":28726,"line_start":142,"line_end":142,"column_start":12,"column_end":25},"name":"and_hms_micro","qualname":"<Date<Tz>>::and_hms_micro","value":"fn and_hms_micro(&Self, u32, u32, u32, u32) -> DateTime<Tz>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute, second and microsecond.\n The microsecond part can exceed 1,000,000 in order to represent the leap second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the current date, hour, minute, second and microsecond.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":28383,"byte_end":28470,"line_start":136,"line_end":136,"column_start":5,"column_end":92}},{"value":"/ The microsecond part can exceed 1,000,000 in order to represent the leap second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":28475,"byte_end":28559,"line_start":137,"line_end":137,"column_start":5,"column_end":89}},{"value":"/ The offset in the current date is preserved.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":28564,"byte_end":28612,"line_start":138,"line_end":138,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":28617,"byte_end":28620,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ Panics on invalid hour, minute, second and/or microsecond.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":28625,"byte_end":28687,"line_start":140,"line_end":140,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":28692,"byte_end":28701,"line_start":141,"line_end":141,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":29221,"byte_end":29238,"line_start":152,"line_end":152,"column_start":12,"column_end":29},"name":"and_hms_micro_opt","qualname":"<Date<Tz>>::and_hms_micro_opt","value":"fn and_hms_micro_opt(&Self, u32, u32, u32, u32) -> Option<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute, second and microsecond.\n The microsecond part can exceed 1,000,000 in order to represent the leap second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the current date, hour, minute, second and microsecond.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":28883,"byte_end":28970,"line_start":146,"line_end":146,"column_start":5,"column_end":92}},{"value":"/ The microsecond part can exceed 1,000,000 in order to represent the leap second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":28975,"byte_end":29059,"line_start":147,"line_end":147,"column_start":5,"column_end":89}},{"value":"/ The offset in the current date is preserved.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":29064,"byte_end":29112,"line_start":148,"line_end":148,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":29117,"byte_end":29120,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on invalid hour, minute, second and/or microsecond.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":29125,"byte_end":29195,"line_start":150,"line_end":150,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":29200,"byte_end":29209,"line_start":151,"line_end":151,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":29802,"byte_end":29814,"line_start":168,"line_end":168,"column_start":12,"column_end":24},"name":"and_hms_nano","qualname":"<Date<Tz>>::and_hms_nano","value":"fn and_hms_nano(&Self, u32, u32, u32, u32) -> DateTime<Tz>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute, second and nanosecond.\n The nanosecond part can exceed 1,000,000,000 in order to represent the leap second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the current date, hour, minute, second and nanosecond.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":29471,"byte_end":29557,"line_start":162,"line_end":162,"column_start":5,"column_end":91}},{"value":"/ The nanosecond part can exceed 1,000,000,000 in order to represent the leap second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":29562,"byte_end":29649,"line_start":163,"line_end":163,"column_start":5,"column_end":92}},{"value":"/ The offset in the current date is preserved.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":29654,"byte_end":29702,"line_start":164,"line_end":164,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":29707,"byte_end":29710,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ Panics on invalid hour, minute, second and/or nanosecond.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":29715,"byte_end":29776,"line_start":166,"line_end":166,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":29781,"byte_end":29790,"line_start":167,"line_end":167,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":30307,"byte_end":30323,"line_start":178,"line_end":178,"column_start":12,"column_end":28},"name":"and_hms_nano_opt","qualname":"<Date<Tz>>::and_hms_nano_opt","value":"fn and_hms_nano_opt(&Self, u32, u32, u32, u32) -> Option<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute, second and nanosecond.\n The nanosecond part can exceed 1,000,000,000 in order to represent the leap second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the current date, hour, minute, second and nanosecond.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":29968,"byte_end":30054,"line_start":172,"line_end":172,"column_start":5,"column_end":91}},{"value":"/ The nanosecond part can exceed 1,000,000,000 in order to represent the leap second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":30059,"byte_end":30146,"line_start":173,"line_end":173,"column_start":5,"column_end":92}},{"value":"/ The offset in the current date is preserved.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":30151,"byte_end":30199,"line_start":174,"line_end":174,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":30204,"byte_end":30207,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on invalid hour, minute, second and/or nanosecond.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":30212,"byte_end":30281,"line_start":176,"line_end":176,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":30286,"byte_end":30295,"line_start":177,"line_end":177,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":30687,"byte_end":30691,"line_start":192,"line_end":192,"column_start":12,"column_end":16},"name":"succ","qualname":"<Date<Tz>>::succ","value":"fn succ(&Self) -> Date<Tz>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `Date` for the next date.","sig":null,"attributes":[{"value":"/ Makes a new `Date` for the next date.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":30553,"byte_end":30594,"line_start":188,"line_end":188,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":30599,"byte_end":30602,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Panics when `self` is the last representable date.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":30607,"byte_end":30661,"line_start":190,"line_end":190,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":30666,"byte_end":30675,"line_start":191,"line_end":191,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":30913,"byte_end":30921,"line_start":200,"line_end":200,"column_start":12,"column_end":20},"name":"succ_opt","qualname":"<Date<Tz>>::succ_opt","value":"fn succ_opt(&Self) -> Option<Date<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `Date` for the next date.","sig":null,"attributes":[{"value":"/ Makes a new `Date` for the next date.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":30771,"byte_end":30812,"line_start":196,"line_end":196,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":30817,"byte_end":30820,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when `self` is the last representable date.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":30825,"byte_end":30887,"line_start":198,"line_end":198,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":30892,"byte_end":30901,"line_start":199,"line_end":199,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":31181,"byte_end":31185,"line_start":208,"line_end":208,"column_start":12,"column_end":16},"name":"pred","qualname":"<Date<Tz>>::pred","value":"fn pred(&Self) -> Date<Tz>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `Date` for the prior date.","sig":null,"attributes":[{"value":"/ Makes a new `Date` for the prior date.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":31045,"byte_end":31087,"line_start":204,"line_end":204,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":31092,"byte_end":31095,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ Panics when `self` is the first representable date.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":31100,"byte_end":31155,"line_start":206,"line_end":206,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":31160,"byte_end":31169,"line_start":207,"line_end":207,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":31409,"byte_end":31417,"line_start":216,"line_end":216,"column_start":12,"column_end":20},"name":"pred_opt","qualname":"<Date<Tz>>::pred_opt","value":"fn pred_opt(&Self) -> Option<Date<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `Date` for the prior date.","sig":null,"attributes":[{"value":"/ Makes a new `Date` for the prior date.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":31265,"byte_end":31307,"line_start":212,"line_end":212,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":31312,"byte_end":31315,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when `self` is the first representable date.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":31320,"byte_end":31383,"line_start":214,"line_end":214,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":31388,"byte_end":31397,"line_start":215,"line_end":215,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":31611,"byte_end":31617,"line_start":222,"line_end":222,"column_start":12,"column_end":18},"name":"offset","qualname":"<Date<Tz>>::offset","value":"fn offset(&Self) -> &Tz::Offset","parent":null,"children":[],"decl_id":null,"docs":" Retrieves an associated offset from UTC.\n","sig":null,"attributes":[{"value":"/ Retrieves an associated offset from UTC.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":31541,"byte_end":31585,"line_start":220,"line_end":220,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":31590,"byte_end":31599,"line_start":221,"line_end":221,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":31738,"byte_end":31746,"line_start":228,"line_end":228,"column_start":12,"column_end":20},"name":"timezone","qualname":"<Date<Tz>>::timezone","value":"fn timezone(&Self) -> Tz","parent":null,"children":[],"decl_id":null,"docs":" Retrieves an associated time zone.\n","sig":null,"attributes":[{"value":"/ Retrieves an associated time zone.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":31674,"byte_end":31712,"line_start":226,"line_end":226,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":31717,"byte_end":31726,"line_start":227,"line_end":227,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":31972,"byte_end":31985,"line_start":235,"line_end":235,"column_start":12,"column_end":25},"name":"with_timezone","qualname":"<Date<Tz>>::with_timezone","value":"fn with_timezone<Tz2>(&Self, &Tz2) -> Date<Tz2> where Tz2: TimeZone","parent":null,"children":[],"decl_id":null,"docs":" Changes the associated time zone.\n This does not change the actual `Date` (but will change the string representation).\n","sig":null,"attributes":[{"value":"/ Changes the associated time zone.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":31817,"byte_end":31854,"line_start":232,"line_end":232,"column_start":5,"column_end":42}},{"value":"/ This does not change the actual `Date` (but will change the string representation).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":31859,"byte_end":31946,"line_start":233,"line_end":233,"column_start":5,"column_end":92}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":31951,"byte_end":31960,"line_start":234,"line_end":234,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":32217,"byte_end":32235,"line_start":243,"line_end":243,"column_start":12,"column_end":30},"name":"checked_add_signed","qualname":"<Date<Tz>>::checked_add_signed","value":"fn checked_add_signed(Self, OldDuration) -> Option<Date<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Adds given `Duration` to the current date.","sig":null,"attributes":[{"value":"/ Adds given `Duration` to the current date.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":32081,"byte_end":32127,"line_start":239,"line_end":239,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":32132,"byte_end":32135,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when it will result in overflow.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":32140,"byte_end":32191,"line_start":241,"line_end":241,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":32196,"byte_end":32205,"line_start":242,"line_end":242,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":32540,"byte_end":32558,"line_start":252,"line_end":252,"column_start":12,"column_end":30},"name":"checked_sub_signed","qualname":"<Date<Tz>>::checked_sub_signed","value":"fn checked_sub_signed(Self, OldDuration) -> Option<Date<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Subtracts given `Duration` from the current date.","sig":null,"attributes":[{"value":"/ Subtracts given `Duration` from the current date.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":32397,"byte_end":32450,"line_start":248,"line_end":248,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":32455,"byte_end":32458,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when it will result in overflow.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":32463,"byte_end":32514,"line_start":250,"line_end":250,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":32519,"byte_end":32528,"line_start":251,"line_end":251,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":32971,"byte_end":32992,"line_start":263,"line_end":263,"column_start":12,"column_end":33},"name":"signed_duration_since","qualname":"<Date<Tz>>::signed_duration_since","value":"fn signed_duration_since<Tz2>(Self, Date<Tz2>) -> OldDuration where\nTz2: TimeZone","parent":null,"children":[],"decl_id":null,"docs":" Subtracts another `Date` from the current date.\n Returns a `Duration` of integral numbers.","sig":null,"attributes":[{"value":"/ Subtracts another `Date` from the current date.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":32720,"byte_end":32771,"line_start":257,"line_end":257,"column_start":5,"column_end":56}},{"value":"/ Returns a `Duration` of integral numbers.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":32776,"byte_end":32821,"line_start":258,"line_end":258,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":32826,"byte_end":32829,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ This does not overflow or underflow at all,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":32834,"byte_end":32881,"line_start":260,"line_end":260,"column_start":5,"column_end":52}},{"value":"/ as all possible output fits in the range of `Duration`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":32886,"byte_end":32945,"line_start":261,"line_end":261,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":32950,"byte_end":32959,"line_start":262,"line_end":262,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":33175,"byte_end":33184,"line_start":269,"line_end":269,"column_start":12,"column_end":21},"name":"naive_utc","qualname":"<Date<Tz>>::naive_utc","value":"fn naive_utc(&Self) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Returns a view to the naive UTC date.\n","sig":null,"attributes":[{"value":"/ Returns a view to the naive UTC date.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":33108,"byte_end":33149,"line_start":267,"line_end":267,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":33154,"byte_end":33163,"line_start":268,"line_end":268,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":33494,"byte_end":33505,"line_start":279,"line_end":279,"column_start":12,"column_end":23},"name":"naive_local","qualname":"<Date<Tz>>::naive_local","value":"fn naive_local(&Self) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Returns a view to the naive local date.","sig":null,"attributes":[{"value":"/ Returns a view to the naive local date.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":33236,"byte_end":33279,"line_start":273,"line_end":273,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":33284,"byte_end":33287,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ This is technically the same as [`naive_utc`](#method.naive_utc)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":33292,"byte_end":33360,"line_start":275,"line_end":275,"column_start":5,"column_end":73}},{"value":"/ because the offset is restricted to never exceed one day,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":33365,"byte_end":33426,"line_start":276,"line_end":276,"column_start":5,"column_end":66}},{"value":"/ but provided for the consistency.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":33431,"byte_end":33468,"line_start":277,"line_end":277,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":33473,"byte_end":33482,"line_start":278,"line_end":278,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":33642,"byte_end":33653,"line_start":284,"line_end":284,"column_start":12,"column_end":23},"name":"years_since","qualname":"<Date<Tz>>::years_since","value":"fn years_since(&Self, Self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of whole years from the given `base` until `self`.\n","sig":null,"attributes":[{"value":"/ Returns the number of whole years from the given `base` until `self`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":33557,"byte_end":33630,"line_start":283,"line_end":283,"column_start":5,"column_end":78}}]},{"kind":"Const","id":{"krate":0,"index":163},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":34007,"byte_end":34014,"line_start":297,"line_end":297,"column_start":15,"column_end":22},"name":"MIN_UTC","qualname":"::date::Date::<Tz>::MIN_UTC","value":"Date<Utc>","parent":{"krate":0,"index":130},"children":[],"decl_id":null,"docs":" The minimum possible `Date`.\n","sig":null,"attributes":[{"value":"/ The minimum possible `Date`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":33960,"byte_end":33992,"line_start":296,"line_end":296,"column_start":5,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":164},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":34123,"byte_end":34130,"line_start":299,"line_end":299,"column_start":15,"column_end":22},"name":"MAX_UTC","qualname":"::date::Date::<Tz>::MAX_UTC","value":"Date<Utc>","parent":{"krate":0,"index":130},"children":[],"decl_id":null,"docs":" The maximum possible `Date`.\n","sig":null,"attributes":[{"value":"/ The maximum possible `Date`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":34076,"byte_end":34108,"line_start":298,"line_end":298,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":34688,"byte_end":34705,"line_start":317,"line_end":317,"column_start":12,"column_end":29},"name":"format_with_items","qualname":"<Date<Tz>>::format_with_items","value":"fn format_with_items<'a, I, B>(&Self, I) -> DelayedFormat<I> where\nI: Iterator<Item = B> + Clone, B: Borrow<Item>","parent":null,"children":[],"decl_id":null,"docs":" Formats the date with the specified formatting items.\n","sig":null,"attributes":[{"value":"/ Formats the date with the specified formatting items.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":34547,"byte_end":34604,"line_start":314,"line_end":314,"column_start":5,"column_end":62}},{"value":"cfg(any(feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":34609,"byte_end":34662,"line_start":315,"line_end":315,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":34667,"byte_end":34676,"line_start":316,"line_end":316,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":35438,"byte_end":35444,"line_start":339,"line_end":339,"column_start":12,"column_end":18},"name":"format","qualname":"<Date<Tz>>::format","value":"fn format<'a>(&Self, &'a str) -> DelayedFormat<StrftimeItems>","parent":null,"children":[],"decl_id":null,"docs":" Formats the date with the specified format string.\n See the [`crate::format::strftime`] module\n on the supported escape sequences.","sig":null,"attributes":[{"value":"/ Formats the date with the specified format string.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":34940,"byte_end":34994,"line_start":325,"line_end":325,"column_start":5,"column_end":59}},{"value":"/ See the [`crate::format::strftime`] module","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":34999,"byte_end":35045,"line_start":326,"line_end":326,"column_start":5,"column_end":51}},{"value":"/ on the supported escape sequences.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":35050,"byte_end":35088,"line_start":327,"line_end":327,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":35093,"byte_end":35096,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":35101,"byte_end":35114,"line_start":329,"line_end":329,"column_start":5,"column_end":18}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":35119,"byte_end":35130,"line_start":330,"line_end":330,"column_start":5,"column_end":16}},{"value":"/ use chrono::prelude::*;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":35135,"byte_end":35162,"line_start":331,"line_end":331,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":35167,"byte_end":35170,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ let date_time: Date<Utc> = Utc.ymd(2017, 04, 02);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":35175,"byte_end":35228,"line_start":333,"line_end":333,"column_start":5,"column_end":58}},{"value":"/ let formatted = format!(\"{}\", date_time.format(\"%d/%m/%Y\"));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":35233,"byte_end":35297,"line_start":334,"line_end":334,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(formatted, \"02/04/2017\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":35302,"byte_end":35342,"line_start":335,"line_end":335,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":35347,"byte_end":35354,"line_start":336,"line_end":336,"column_start":5,"column_end":12}},{"value":"cfg(any(feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":35359,"byte_end":35412,"line_start":337,"line_end":337,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":35417,"byte_end":35426,"line_start":338,"line_end":338,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":36624,"byte_end":36628,"line_start":380,"line_end":380,"column_start":8,"column_end":12},"name":"year","qualname":"<Date<Tz> as traits::Datelike>::year","value":"fn year(&Self) -> i32","parent":{"krate":0,"index":3411},"children":[],"decl_id":{"krate":0,"index":3412},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":36607,"byte_end":36616,"line_start":379,"line_end":379,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":36706,"byte_end":36711,"line_start":384,"line_end":384,"column_start":8,"column_end":13},"name":"month","qualname":"<Date<Tz> as traits::Datelike>::month","value":"fn month(&Self) -> u32","parent":{"krate":0,"index":3411},"children":[],"decl_id":{"krate":0,"index":3414},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":36689,"byte_end":36698,"line_start":383,"line_end":383,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":36790,"byte_end":36796,"line_start":388,"line_end":388,"column_start":8,"column_end":14},"name":"month0","qualname":"<Date<Tz> as traits::Datelike>::month0","value":"fn month0(&Self) -> u32","parent":{"krate":0,"index":3411},"children":[],"decl_id":{"krate":0,"index":3415},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":36773,"byte_end":36782,"line_start":387,"line_end":387,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":36876,"byte_end":36879,"line_start":392,"line_end":392,"column_start":8,"column_end":11},"name":"day","qualname":"<Date<Tz> as traits::Datelike>::day","value":"fn day(&Self) -> u32","parent":{"krate":0,"index":3411},"children":[],"decl_id":{"krate":0,"index":3416},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":36859,"byte_end":36868,"line_start":391,"line_end":391,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":36956,"byte_end":36960,"line_start":396,"line_end":396,"column_start":8,"column_end":12},"name":"day0","qualname":"<Date<Tz> as traits::Datelike>::day0","value":"fn day0(&Self) -> u32","parent":{"krate":0,"index":3411},"children":[],"decl_id":{"krate":0,"index":3417},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":36939,"byte_end":36948,"line_start":395,"line_end":395,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":37038,"byte_end":37045,"line_start":400,"line_end":400,"column_start":8,"column_end":15},"name":"ordinal","qualname":"<Date<Tz> as traits::Datelike>::ordinal","value":"fn ordinal(&Self) -> u32","parent":{"krate":0,"index":3411},"children":[],"decl_id":{"krate":0,"index":3418},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":37021,"byte_end":37030,"line_start":399,"line_end":399,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":37126,"byte_end":37134,"line_start":404,"line_end":404,"column_start":8,"column_end":16},"name":"ordinal0","qualname":"<Date<Tz> as traits::Datelike>::ordinal0","value":"fn ordinal0(&Self) -> u32","parent":{"krate":0,"index":3411},"children":[],"decl_id":{"krate":0,"index":3419},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":37109,"byte_end":37118,"line_start":403,"line_end":403,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":37216,"byte_end":37223,"line_start":408,"line_end":408,"column_start":8,"column_end":15},"name":"weekday","qualname":"<Date<Tz> as traits::Datelike>::weekday","value":"fn weekday(&Self) -> Weekday","parent":{"krate":0,"index":3411},"children":[],"decl_id":{"krate":0,"index":3420},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":37199,"byte_end":37208,"line_start":407,"line_end":407,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":37308,"byte_end":37316,"line_start":412,"line_end":412,"column_start":8,"column_end":16},"name":"iso_week","qualname":"<Date<Tz> as traits::Datelike>::iso_week","value":"fn iso_week(&Self) -> IsoWeek","parent":{"krate":0,"index":3411},"children":[],"decl_id":{"krate":0,"index":3421},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":37291,"byte_end":37300,"line_start":411,"line_end":411,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":37403,"byte_end":37412,"line_start":417,"line_end":417,"column_start":8,"column_end":17},"name":"with_year","qualname":"<Date<Tz> as traits::Datelike>::with_year","value":"fn with_year(&Self, i32) -> Option<Date<Tz>>","parent":{"krate":0,"index":3411},"children":[],"decl_id":{"krate":0,"index":3422},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":37386,"byte_end":37395,"line_start":416,"line_end":416,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":37534,"byte_end":37544,"line_start":422,"line_end":422,"column_start":8,"column_end":18},"name":"with_month","qualname":"<Date<Tz> as traits::Datelike>::with_month","value":"fn with_month(&Self, u32) -> Option<Date<Tz>>","parent":{"krate":0,"index":3411},"children":[],"decl_id":{"krate":0,"index":3423},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":37517,"byte_end":37526,"line_start":421,"line_end":421,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":37669,"byte_end":37680,"line_start":427,"line_end":427,"column_start":8,"column_end":19},"name":"with_month0","qualname":"<Date<Tz> as traits::Datelike>::with_month0","value":"fn with_month0(&Self, u32) -> Option<Date<Tz>>","parent":{"krate":0,"index":3411},"children":[],"decl_id":{"krate":0,"index":3424},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":37652,"byte_end":37661,"line_start":426,"line_end":426,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":37808,"byte_end":37816,"line_start":432,"line_end":432,"column_start":8,"column_end":16},"name":"with_day","qualname":"<Date<Tz> as traits::Datelike>::with_day","value":"fn with_day(&Self, u32) -> Option<Date<Tz>>","parent":{"krate":0,"index":3411},"children":[],"decl_id":{"krate":0,"index":3425},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":37791,"byte_end":37800,"line_start":431,"line_end":431,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":37935,"byte_end":37944,"line_start":437,"line_end":437,"column_start":8,"column_end":17},"name":"with_day0","qualname":"<Date<Tz> as traits::Datelike>::with_day0","value":"fn with_day0(&Self, u32) -> Option<Date<Tz>>","parent":{"krate":0,"index":3411},"children":[],"decl_id":{"krate":0,"index":3426},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":37918,"byte_end":37927,"line_start":436,"line_end":436,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":38066,"byte_end":38078,"line_start":442,"line_end":442,"column_start":8,"column_end":20},"name":"with_ordinal","qualname":"<Date<Tz> as traits::Datelike>::with_ordinal","value":"fn with_ordinal(&Self, u32) -> Option<Date<Tz>>","parent":{"krate":0,"index":3411},"children":[],"decl_id":{"krate":0,"index":3427},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":38049,"byte_end":38058,"line_start":441,"line_end":441,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":38209,"byte_end":38222,"line_start":447,"line_end":447,"column_start":8,"column_end":21},"name":"with_ordinal0","qualname":"<Date<Tz> as traits::Datelike>::with_ordinal0","value":"fn with_ordinal0(&Self, u32) -> Option<Date<Tz>>","parent":{"krate":0,"index":3411},"children":[],"decl_id":{"krate":0,"index":3428},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":38192,"byte_end":38201,"line_start":446,"line_end":446,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":38642,"byte_end":38644,"line_start":457,"line_end":457,"column_start":8,"column_end":10},"name":"eq","qualname":"<Date<Tz> as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &Date<Tz2>) -> bool","parent":{"krate":2,"index":2831},"children":[],"decl_id":{"krate":2,"index":2833},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":38813,"byte_end":38824,"line_start":465,"line_end":465,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<Date<Tz> as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp(&Self, &Date<Tz>) -> Option<Ordering>","parent":{"krate":2,"index":2877},"children":[],"decl_id":{"krate":2,"index":2879},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":38969,"byte_end":38972,"line_start":471,"line_end":471,"column_start":8,"column_end":11},"name":"cmp","qualname":"<Date<Tz> as std::cmp::Ord>::cmp","value":"fn cmp(&Self, &Date<Tz>) -> Ordering","parent":{"krate":2,"index":2867},"children":[],"decl_id":{"krate":2,"index":2868},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":39108,"byte_end":39112,"line_start":477,"line_end":477,"column_start":8,"column_end":12},"name":"hash","qualname":"<Date<Tz> as std::hash::Hash>::hash","value":"fn hash<H>(&Self, &mut H) where H: hash::Hasher","parent":{"krate":2,"index":10324},"children":[],"decl_id":{"krate":2,"index":10325},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":39294,"byte_end":39297,"line_start":486,"line_end":486,"column_start":8,"column_end":11},"name":"add","qualname":"<Date<Tz> as std::ops::Add>::add","value":"fn add(Self, OldDuration) -> Date<Tz>","parent":{"krate":2,"index":3247},"children":[],"decl_id":{"krate":2,"index":3250},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":39277,"byte_end":39286,"line_start":485,"line_end":485,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":39499,"byte_end":39509,"line_start":493,"line_end":493,"column_start":8,"column_end":18},"name":"add_assign","qualname":"<Date<Tz> as std::ops::AddAssign>::add_assign","value":"fn add_assign(&mut Self, OldDuration)","parent":{"krate":2,"index":3278},"children":[],"decl_id":{"krate":2,"index":3280},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":39482,"byte_end":39491,"line_start":492,"line_end":492,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":39745,"byte_end":39748,"line_start":502,"line_end":502,"column_start":8,"column_end":11},"name":"sub","qualname":"<Date<Tz> as std::ops::Sub>::sub","value":"fn sub(Self, OldDuration) -> Date<Tz>","parent":{"krate":2,"index":3252},"children":[],"decl_id":{"krate":2,"index":3255},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":39728,"byte_end":39737,"line_start":501,"line_end":501,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":39950,"byte_end":39960,"line_start":509,"line_end":509,"column_start":8,"column_end":18},"name":"sub_assign","qualname":"<Date<Tz> as std::ops::SubAssign>::sub_assign","value":"fn sub_assign(&mut Self, OldDuration)","parent":{"krate":2,"index":3282},"children":[],"decl_id":{"krate":2,"index":3284},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":39933,"byte_end":39942,"line_start":508,"line_end":508,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":40196,"byte_end":40199,"line_start":518,"line_end":518,"column_start":8,"column_end":11},"name":"sub","qualname":"<Date<Tz> as std::ops::Sub>::sub","value":"fn sub(Self, Date<Tz>) -> OldDuration","parent":{"krate":2,"index":3252},"children":[],"decl_id":{"krate":2,"index":3255},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":40179,"byte_end":40188,"line_start":517,"line_end":517,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":40339,"byte_end":40342,"line_start":524,"line_end":524,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Date<Tz> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":40553,"byte_end":40556,"line_start":533,"line_end":533,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Date<Tz> as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10117},"children":[],"decl_id":{"krate":2,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3457},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":83684,"byte_end":83707,"line_start":12,"line_end":12,"column_start":12,"column_end":35},"name":"SecondsTimestampVisitor","qualname":"::datetime::serde::SecondsTimestampVisitor","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3461},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":83753,"byte_end":83780,"line_start":16,"line_end":16,"column_start":12,"column_end":39},"name":"NanoSecondsTimestampVisitor","qualname":"::datetime::serde::NanoSecondsTimestampVisitor","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3465},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":83826,"byte_end":83854,"line_start":20,"line_end":20,"column_start":12,"column_end":40},"name":"MicroSecondsTimestampVisitor","qualname":"::datetime::serde::MicroSecondsTimestampVisitor","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3469},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":83900,"byte_end":83928,"line_start":24,"line_end":24,"column_start":12,"column_end":40},"name":"MilliSecondsTimestampVisitor","qualname":"::datetime::serde::MilliSecondsTimestampVisitor","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":84119,"byte_end":84128,"line_start":31,"line_end":31,"column_start":8,"column_end":17},"name":"serialize","qualname":"<DateTime<Tz> as serde::Serialize>::serialize","value":"fn serialize<S>(&Self, S) -> Result<S::Ok, S::Error> where S: ser::Serializer","parent":{"krate":22,"index":2149},"children":[],"decl_id":{"krate":22,"index":2150},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":420},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":85401,"byte_end":85412,"line_start":75,"line_end":75,"column_start":8,"column_end":19},"name":"deserialize","qualname":"<DateTime<FixedOffset> as serde::Deserialize>::deserialize","value":"fn deserialize<D>(D) -> Result<Self, D::Error> where D: de::Deserializer","parent":{"krate":22,"index":1600},"children":[],"decl_id":{"krate":22,"index":1602},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":424},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":85823,"byte_end":85834,"line_start":90,"line_end":90,"column_start":8,"column_end":19},"name":"deserialize","qualname":"<DateTime<Utc> as serde::Deserialize>::deserialize","value":"fn deserialize<D>(D) -> Result<Self, D::Error> where D: de::Deserializer","parent":{"krate":22,"index":1600},"children":[],"decl_id":{"krate":22,"index":1602},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":429},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":86354,"byte_end":86365,"line_start":107,"line_end":107,"column_start":8,"column_end":19},"name":"deserialize","qualname":"<DateTime<Local> as serde::Deserialize>::deserialize","value":"fn deserialize<D>(D) -> Result<Self, D::Error> where D: de::Deserializer","parent":{"krate":22,"index":1600},"children":[],"decl_id":{"krate":22,"index":1602},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":432},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":87349,"byte_end":87363,"line_start":142,"line_end":142,"column_start":9,"column_end":23},"name":"ts_nanoseconds","qualname":"::datetime::serde::ts_nanoseconds","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","parent":null,"children":[{"krate":0,"index":433},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":440},{"krate":0,"index":443},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":460},{"krate":0,"index":462},{"krate":0,"index":465}],"decl_id":null,"docs":" Ser/de to/from timestamps in nanoseconds","sig":null,"attributes":[{"value":"/ Ser/de to/from timestamps in nanoseconds","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":86560,"byte_end":86604,"line_start":115,"line_end":115,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":86605,"byte_end":86608,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ Intended for use with `serde`'s `with` attribute.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":86609,"byte_end":86662,"line_start":117,"line_end":117,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":86663,"byte_end":86666,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ # Example:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":86667,"byte_end":86681,"line_start":119,"line_end":119,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":86682,"byte_end":86685,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":86686,"byte_end":86697,"line_start":121,"line_end":121,"column_start":1,"column_end":12}},{"value":"/ # use chrono::{TimeZone, DateTime, Utc};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":86698,"byte_end":86742,"line_start":122,"line_end":122,"column_start":1,"column_end":45}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":86743,"byte_end":86792,"line_start":123,"line_end":123,"column_start":1,"column_end":50}},{"value":"/ use chrono::serde::ts_nanoseconds;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":86793,"byte_end":86831,"line_start":124,"line_end":124,"column_start":1,"column_end":39}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":86832,"byte_end":86869,"line_start":125,"line_end":125,"column_start":1,"column_end":38}},{"value":"/ struct S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":86870,"byte_end":86884,"line_start":126,"line_end":126,"column_start":1,"column_end":15}},{"value":"/     #[serde(with = \"ts_nanoseconds\")]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":86885,"byte_end":86926,"line_start":127,"line_end":127,"column_start":1,"column_end":42}},{"value":"/     time: DateTime<Utc>","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":86927,"byte_end":86954,"line_start":128,"line_end":128,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":86955,"byte_end":86960,"line_start":129,"line_end":129,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":86961,"byte_end":86964,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ let time = Utc.ymd(2018, 5, 17).and_hms_nano(02, 04, 59, 918355733);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":86965,"byte_end":87037,"line_start":131,"line_end":131,"column_start":1,"column_end":73}},{"value":"/ let my_s = S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":87038,"byte_end":87056,"line_start":132,"line_end":132,"column_start":1,"column_end":19}},{"value":"/     time: time.clone(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":87057,"byte_end":87084,"line_start":133,"line_end":133,"column_start":1,"column_end":28}},{"value":"/ };","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":87085,"byte_end":87091,"line_start":134,"line_end":134,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":87092,"byte_end":87095,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ let as_string = serde_json::to_string(&my_s)?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":87096,"byte_end":87146,"line_start":136,"line_end":136,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(as_string, r#\"{\"time\":1526522699918355733}\"#);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":87147,"byte_end":87208,"line_start":137,"line_end":137,"column_start":1,"column_end":62}},{"value":"/ let my_s: S = serde_json::from_str(&as_string)?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":87209,"byte_end":87261,"line_start":138,"line_end":138,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(my_s.time, time);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":87262,"byte_end":87294,"line_start":139,"line_end":139,"column_start":1,"column_end":33}},{"value":"/ # Ok::<(), serde_json::Error>(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":87295,"byte_end":87332,"line_start":140,"line_end":140,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":87333,"byte_end":87340,"line_start":141,"line_end":141,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":460},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":88352,"byte_end":88361,"line_start":174,"line_end":174,"column_start":12,"column_end":21},"name":"serialize","qualname":"::datetime::serde::ts_nanoseconds::serialize","value":"fn serialize<S>(&DateTime<Utc>, S) -> Result<S::Ok, S::Error> where\nS: ser::Serializer","parent":null,"children":[],"decl_id":null,"docs":" Serialize a UTC datetime into an integer number of nanoseconds since the epoch","sig":null,"attributes":[{"value":"/ Serialize a UTC datetime into an integer number of nanoseconds since the epoch","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":87541,"byte_end":87623,"line_start":151,"line_end":151,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":87628,"byte_end":87631,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ Intended for use with `serde`s `serialize_with` attribute.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":87636,"byte_end":87698,"line_start":153,"line_end":153,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":87703,"byte_end":87706,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ # Example:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":87711,"byte_end":87725,"line_start":155,"line_end":155,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":87730,"byte_end":87733,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":87738,"byte_end":87749,"line_start":157,"line_end":157,"column_start":5,"column_end":16}},{"value":"/ # use chrono::{TimeZone, DateTime, Utc};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":87754,"byte_end":87798,"line_start":158,"line_end":158,"column_start":5,"column_end":49}},{"value":"/ # use serde_derive::Serialize;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":87803,"byte_end":87837,"line_start":159,"line_end":159,"column_start":5,"column_end":39}},{"value":"/ use chrono::serde::ts_nanoseconds::serialize as to_nano_ts;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":87842,"byte_end":87905,"line_start":160,"line_end":160,"column_start":5,"column_end":68}},{"value":"/ #[derive(Serialize)]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":87910,"byte_end":87934,"line_start":161,"line_end":161,"column_start":5,"column_end":29}},{"value":"/ struct S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":87939,"byte_end":87953,"line_start":162,"line_end":162,"column_start":5,"column_end":19}},{"value":"/     #[serde(serialize_with = \"to_nano_ts\")]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":87958,"byte_end":88005,"line_start":163,"line_end":163,"column_start":5,"column_end":52}},{"value":"/     time: DateTime<Utc>","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":88010,"byte_end":88037,"line_start":164,"line_end":164,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":88042,"byte_end":88047,"line_start":165,"line_end":165,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":88052,"byte_end":88055,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ let my_s = S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":88060,"byte_end":88078,"line_start":167,"line_end":167,"column_start":5,"column_end":23}},{"value":"/     time: Utc.ymd(2018, 5, 17).and_hms_nano(02, 04, 59, 918355733),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":88083,"byte_end":88154,"line_start":168,"line_end":168,"column_start":5,"column_end":76}},{"value":"/ };","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":88159,"byte_end":88165,"line_start":169,"line_end":169,"column_start":5,"column_end":11}},{"value":"/ let as_string = serde_json::to_string(&my_s)?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":88170,"byte_end":88220,"line_start":170,"line_end":170,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(as_string, r#\"{\"time\":1526522699918355733}\"#);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":88225,"byte_end":88286,"line_start":171,"line_end":171,"column_start":5,"column_end":66}},{"value":"/ # Ok::<(), serde_json::Error>(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":88291,"byte_end":88328,"line_start":172,"line_end":172,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":88333,"byte_end":88340,"line_start":173,"line_end":173,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":462},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":89180,"byte_end":89191,"line_start":200,"line_end":200,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::datetime::serde::ts_nanoseconds::deserialize","value":"fn deserialize<'de, D>(D) -> Result<DateTime<Utc>, D::Error> where\nD: de::Deserializer","parent":null,"children":[],"decl_id":null,"docs":" Deserialize a [`DateTime`] from a nanosecond timestamp","sig":null,"attributes":[{"value":"/ Deserialize a [`DateTime`] from a nanosecond timestamp","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":88537,"byte_end":88595,"line_start":181,"line_end":181,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":88600,"byte_end":88603,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ Intended for use with `serde`s `deserialize_with` attribute.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":88608,"byte_end":88672,"line_start":183,"line_end":183,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":88677,"byte_end":88680,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Example:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":88685,"byte_end":88699,"line_start":185,"line_end":185,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":88704,"byte_end":88707,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":88712,"byte_end":88723,"line_start":187,"line_end":187,"column_start":5,"column_end":16}},{"value":"/ # use chrono::{DateTime, Utc};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":88728,"byte_end":88762,"line_start":188,"line_end":188,"column_start":5,"column_end":39}},{"value":"/ # use serde_derive::Deserialize;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":88767,"byte_end":88803,"line_start":189,"line_end":189,"column_start":5,"column_end":41}},{"value":"/ use chrono::serde::ts_nanoseconds::deserialize as from_nano_ts;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":88808,"byte_end":88875,"line_start":190,"line_end":190,"column_start":5,"column_end":72}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":88880,"byte_end":88906,"line_start":191,"line_end":191,"column_start":5,"column_end":31}},{"value":"/ struct S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":88911,"byte_end":88925,"line_start":192,"line_end":192,"column_start":5,"column_end":19}},{"value":"/     #[serde(deserialize_with = \"from_nano_ts\")]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":88930,"byte_end":88981,"line_start":193,"line_end":193,"column_start":5,"column_end":56}},{"value":"/     time: DateTime<Utc>","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":88986,"byte_end":89013,"line_start":194,"line_end":194,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":89018,"byte_end":89023,"line_start":195,"line_end":195,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":89028,"byte_end":89031,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ let my_s: S = serde_json::from_str(r#\"{ \"time\": 1526522699918355733 }\"#)?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":89036,"byte_end":89114,"line_start":197,"line_end":197,"column_start":5,"column_end":83}},{"value":"/ # Ok::<(), serde_json::Error>(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":89119,"byte_end":89156,"line_start":198,"line_end":198,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":89161,"byte_end":89168,"line_start":199,"line_end":199,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":89466,"byte_end":89475,"line_start":210,"line_end":210,"column_start":12,"column_end":21},"name":"expecting","qualname":"<NanoSecondsTimestampVisitor as serde::de::Visitor>::expecting","value":"fn expecting(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":22,"index":1686},"children":[],"decl_id":{"krate":22,"index":1689},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":469},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":89688,"byte_end":89697,"line_start":215,"line_end":215,"column_start":12,"column_end":21},"name":"visit_i64","qualname":"<NanoSecondsTimestampVisitor as serde::de::Visitor>::visit_i64","value":"fn visit_i64<E>(Self, i64) -> Result<Self::Value, E> where E: de::Error","parent":{"krate":22,"index":1686},"children":[],"decl_id":{"krate":22,"index":1698},"docs":" Deserialize a timestamp in nanoseconds since the epoch\n","sig":null,"attributes":[{"value":"/ Deserialize a timestamp in nanoseconds since the epoch","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":89618,"byte_end":89676,"line_start":214,"line_end":214,"column_start":9,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":90036,"byte_end":90045,"line_start":226,"line_end":226,"column_start":12,"column_end":21},"name":"visit_u64","qualname":"<NanoSecondsTimestampVisitor as serde::de::Visitor>::visit_u64","value":"fn visit_u64<E>(Self, u64) -> Result<Self::Value, E> where E: de::Error","parent":{"krate":22,"index":1686},"children":[],"decl_id":{"krate":22,"index":1706},"docs":" Deserialize a timestamp in nanoseconds since the epoch\n","sig":null,"attributes":[{"value":"/ Deserialize a timestamp in nanoseconds since the epoch","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":89966,"byte_end":90024,"line_start":225,"line_end":225,"column_start":9,"column_end":67}}]},{"kind":"Mod","id":{"krate":0,"index":473},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":91149,"byte_end":91170,"line_start":265,"line_end":265,"column_start":9,"column_end":30},"name":"ts_nanoseconds_option","qualname":"::datetime::serde::ts_nanoseconds_option","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","parent":null,"children":[{"krate":0,"index":474},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":481},{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":494},{"krate":0,"index":496},{"krate":0,"index":499},{"krate":0,"index":501}],"decl_id":null,"docs":" Ser/de to/from optional timestamps in nanoseconds","sig":null,"attributes":[{"value":"/ Ser/de to/from optional timestamps in nanoseconds","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":90323,"byte_end":90376,"line_start":238,"line_end":238,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":90377,"byte_end":90380,"line_start":239,"line_end":239,"column_start":1,"column_end":4}},{"value":"/ Intended for use with `serde`'s `with` attribute.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":90381,"byte_end":90434,"line_start":240,"line_end":240,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":90435,"byte_end":90438,"line_start":241,"line_end":241,"column_start":1,"column_end":4}},{"value":"/ # Example:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":90439,"byte_end":90453,"line_start":242,"line_end":242,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":90454,"byte_end":90457,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":90458,"byte_end":90469,"line_start":244,"line_end":244,"column_start":1,"column_end":12}},{"value":"/ # use chrono::{TimeZone, DateTime, Utc};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":90470,"byte_end":90514,"line_start":245,"line_end":245,"column_start":1,"column_end":45}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":90515,"byte_end":90564,"line_start":246,"line_end":246,"column_start":1,"column_end":50}},{"value":"/ use chrono::serde::ts_nanoseconds_option;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":90565,"byte_end":90610,"line_start":247,"line_end":247,"column_start":1,"column_end":46}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":90611,"byte_end":90648,"line_start":248,"line_end":248,"column_start":1,"column_end":38}},{"value":"/ struct S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":90649,"byte_end":90663,"line_start":249,"line_end":249,"column_start":1,"column_end":15}},{"value":"/     #[serde(with = \"ts_nanoseconds_option\")]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":90664,"byte_end":90712,"line_start":250,"line_end":250,"column_start":1,"column_end":49}},{"value":"/     time: Option<DateTime<Utc>>","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":90713,"byte_end":90748,"line_start":251,"line_end":251,"column_start":1,"column_end":36}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":90749,"byte_end":90754,"line_start":252,"line_end":252,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":90755,"byte_end":90758,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ let time = Some(Utc.ymd(2018, 5, 17).and_hms_nano(02, 04, 59, 918355733));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":90759,"byte_end":90837,"line_start":254,"line_end":254,"column_start":1,"column_end":79}},{"value":"/ let my_s = S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":90838,"byte_end":90856,"line_start":255,"line_end":255,"column_start":1,"column_end":19}},{"value":"/     time: time.clone(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":90857,"byte_end":90884,"line_start":256,"line_end":256,"column_start":1,"column_end":28}},{"value":"/ };","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":90885,"byte_end":90891,"line_start":257,"line_end":257,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":90892,"byte_end":90895,"line_start":258,"line_end":258,"column_start":1,"column_end":4}},{"value":"/ let as_string = serde_json::to_string(&my_s)?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":90896,"byte_end":90946,"line_start":259,"line_end":259,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(as_string, r#\"{\"time\":1526522699918355733}\"#);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":90947,"byte_end":91008,"line_start":260,"line_end":260,"column_start":1,"column_end":62}},{"value":"/ let my_s: S = serde_json::from_str(&as_string)?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":91009,"byte_end":91061,"line_start":261,"line_end":261,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(my_s.time, time);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":91062,"byte_end":91094,"line_start":262,"line_end":262,"column_start":1,"column_end":33}},{"value":"/ # Ok::<(), serde_json::Error>(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":91095,"byte_end":91132,"line_start":263,"line_end":263,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":91133,"byte_end":91140,"line_start":264,"line_end":264,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":494},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":92147,"byte_end":92156,"line_start":296,"line_end":296,"column_start":12,"column_end":21},"name":"serialize","qualname":"::datetime::serde::ts_nanoseconds_option::serialize","value":"fn serialize<S>(&Option<DateTime<Utc>>, S) -> Result<S::Ok, S::Error> where\nS: ser::Serializer","parent":null,"children":[],"decl_id":null,"docs":" Serialize a UTC datetime into an integer number of nanoseconds since the epoch or none","sig":null,"attributes":[{"value":"/ Serialize a UTC datetime into an integer number of nanoseconds since the epoch or none","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":91301,"byte_end":91391,"line_start":273,"line_end":273,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":91396,"byte_end":91399,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ Intended for use with `serde`s `serialize_with` attribute.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":91404,"byte_end":91466,"line_start":275,"line_end":275,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":91471,"byte_end":91474,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ # Example:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":91479,"byte_end":91493,"line_start":277,"line_end":277,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":91498,"byte_end":91501,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":91506,"byte_end":91517,"line_start":279,"line_end":279,"column_start":5,"column_end":16}},{"value":"/ # use chrono::{TimeZone, DateTime, Utc};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":91522,"byte_end":91566,"line_start":280,"line_end":280,"column_start":5,"column_end":49}},{"value":"/ # use serde_derive::Serialize;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":91571,"byte_end":91605,"line_start":281,"line_end":281,"column_start":5,"column_end":39}},{"value":"/ use chrono::serde::ts_nanoseconds_option::serialize as to_nano_tsopt;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":91610,"byte_end":91683,"line_start":282,"line_end":282,"column_start":5,"column_end":78}},{"value":"/ #[derive(Serialize)]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":91688,"byte_end":91712,"line_start":283,"line_end":283,"column_start":5,"column_end":29}},{"value":"/ struct S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":91717,"byte_end":91731,"line_start":284,"line_end":284,"column_start":5,"column_end":19}},{"value":"/     #[serde(serialize_with = \"to_nano_tsopt\")]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":91736,"byte_end":91786,"line_start":285,"line_end":285,"column_start":5,"column_end":55}},{"value":"/     time: Option<DateTime<Utc>>","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":91791,"byte_end":91826,"line_start":286,"line_end":286,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":91831,"byte_end":91836,"line_start":287,"line_end":287,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":91841,"byte_end":91844,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ let my_s = S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":91849,"byte_end":91867,"line_start":289,"line_end":289,"column_start":5,"column_end":23}},{"value":"/     time: Some(Utc.ymd(2018, 5, 17).and_hms_nano(02, 04, 59, 918355733)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":91872,"byte_end":91949,"line_start":290,"line_end":290,"column_start":5,"column_end":82}},{"value":"/ };","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":91954,"byte_end":91960,"line_start":291,"line_end":291,"column_start":5,"column_end":11}},{"value":"/ let as_string = serde_json::to_string(&my_s)?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":91965,"byte_end":92015,"line_start":292,"line_end":292,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(as_string, r#\"{\"time\":1526522699918355733}\"#);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":92020,"byte_end":92081,"line_start":293,"line_end":293,"column_start":5,"column_end":66}},{"value":"/ # Ok::<(), serde_json::Error>(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":92086,"byte_end":92123,"line_start":294,"line_end":294,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":92128,"byte_end":92135,"line_start":295,"line_end":295,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":496},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":93114,"byte_end":93125,"line_start":325,"line_end":325,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::datetime::serde::ts_nanoseconds_option::deserialize","value":"fn deserialize<'de, D>(D) -> Result<Option<DateTime<Utc>>, D::Error> where\nD: de::Deserializer","parent":null,"children":[],"decl_id":null,"docs":" Deserialize a `DateTime` from a nanosecond timestamp or none","sig":null,"attributes":[{"value":"/ Deserialize a `DateTime` from a nanosecond timestamp or none","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":92444,"byte_end":92508,"line_start":306,"line_end":306,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":92513,"byte_end":92516,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ Intended for use with `serde`s `deserialize_with` attribute.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":92521,"byte_end":92585,"line_start":308,"line_end":308,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":92590,"byte_end":92593,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ # Example:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":92598,"byte_end":92612,"line_start":310,"line_end":310,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":92617,"byte_end":92620,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":92625,"byte_end":92636,"line_start":312,"line_end":312,"column_start":5,"column_end":16}},{"value":"/ # use chrono::{DateTime, Utc};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":92641,"byte_end":92675,"line_start":313,"line_end":313,"column_start":5,"column_end":39}},{"value":"/ # use serde_derive::Deserialize;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":92680,"byte_end":92716,"line_start":314,"line_end":314,"column_start":5,"column_end":41}},{"value":"/ use chrono::serde::ts_nanoseconds_option::deserialize as from_nano_tsopt;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":92721,"byte_end":92798,"line_start":315,"line_end":315,"column_start":5,"column_end":82}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":92803,"byte_end":92829,"line_start":316,"line_end":316,"column_start":5,"column_end":31}},{"value":"/ struct S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":92834,"byte_end":92848,"line_start":317,"line_end":317,"column_start":5,"column_end":19}},{"value":"/     #[serde(deserialize_with = \"from_nano_tsopt\")]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":92853,"byte_end":92907,"line_start":318,"line_end":318,"column_start":5,"column_end":59}},{"value":"/     time: Option<DateTime<Utc>>","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":92912,"byte_end":92947,"line_start":319,"line_end":319,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":92952,"byte_end":92957,"line_start":320,"line_end":320,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":92962,"byte_end":92965,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ let my_s: S = serde_json::from_str(r#\"{ \"time\": 1526522699918355733 }\"#)?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":92970,"byte_end":93048,"line_start":322,"line_end":322,"column_start":5,"column_end":83}},{"value":"/ # Ok::<(), serde_json::Error>(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":93053,"byte_end":93090,"line_start":323,"line_end":323,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":93095,"byte_end":93102,"line_start":324,"line_end":324,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":511},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":95116,"byte_end":95131,"line_start":394,"line_end":394,"column_start":9,"column_end":24},"name":"ts_microseconds","qualname":"::datetime::serde::ts_microseconds","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","parent":null,"children":[{"krate":0,"index":512},{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":519},{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":529},{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":539},{"krate":0,"index":541},{"krate":0,"index":544}],"decl_id":null,"docs":" Ser/de to/from timestamps in microseconds","sig":null,"attributes":[{"value":"/ Ser/de to/from timestamps in microseconds","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":94329,"byte_end":94374,"line_start":367,"line_end":367,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":94375,"byte_end":94378,"line_start":368,"line_end":368,"column_start":1,"column_end":4}},{"value":"/ Intended for use with `serde`'s `with` attribute.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":94379,"byte_end":94432,"line_start":369,"line_end":369,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":94433,"byte_end":94436,"line_start":370,"line_end":370,"column_start":1,"column_end":4}},{"value":"/ # Example:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":94437,"byte_end":94451,"line_start":371,"line_end":371,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":94452,"byte_end":94455,"line_start":372,"line_end":372,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":94456,"byte_end":94467,"line_start":373,"line_end":373,"column_start":1,"column_end":12}},{"value":"/ # use chrono::{TimeZone, DateTime, Utc};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":94468,"byte_end":94512,"line_start":374,"line_end":374,"column_start":1,"column_end":45}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":94513,"byte_end":94562,"line_start":375,"line_end":375,"column_start":1,"column_end":50}},{"value":"/ use chrono::serde::ts_microseconds;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":94563,"byte_end":94602,"line_start":376,"line_end":376,"column_start":1,"column_end":40}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":94603,"byte_end":94640,"line_start":377,"line_end":377,"column_start":1,"column_end":38}},{"value":"/ struct S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":94641,"byte_end":94655,"line_start":378,"line_end":378,"column_start":1,"column_end":15}},{"value":"/     #[serde(with = \"ts_microseconds\")]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":94656,"byte_end":94698,"line_start":379,"line_end":379,"column_start":1,"column_end":43}},{"value":"/     time: DateTime<Utc>","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":94699,"byte_end":94726,"line_start":380,"line_end":380,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":94727,"byte_end":94732,"line_start":381,"line_end":381,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":94733,"byte_end":94736,"line_start":382,"line_end":382,"column_start":1,"column_end":4}},{"value":"/ let time = Utc.ymd(2018, 5, 17).and_hms_micro(02, 04, 59, 918355);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":94737,"byte_end":94807,"line_start":383,"line_end":383,"column_start":1,"column_end":71}},{"value":"/ let my_s = S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":94808,"byte_end":94826,"line_start":384,"line_end":384,"column_start":1,"column_end":19}},{"value":"/     time: time.clone(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":94827,"byte_end":94854,"line_start":385,"line_end":385,"column_start":1,"column_end":28}},{"value":"/ };","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":94855,"byte_end":94861,"line_start":386,"line_end":386,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":94862,"byte_end":94865,"line_start":387,"line_end":387,"column_start":1,"column_end":4}},{"value":"/ let as_string = serde_json::to_string(&my_s)?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":94866,"byte_end":94916,"line_start":388,"line_end":388,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(as_string, r#\"{\"time\":1526522699918355}\"#);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":94917,"byte_end":94975,"line_start":389,"line_end":389,"column_start":1,"column_end":59}},{"value":"/ let my_s: S = serde_json::from_str(&as_string)?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":94976,"byte_end":95028,"line_start":390,"line_end":390,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(my_s.time, time);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":95029,"byte_end":95061,"line_start":391,"line_end":391,"column_start":1,"column_end":33}},{"value":"/ # Ok::<(), serde_json::Error>(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":95062,"byte_end":95099,"line_start":392,"line_end":392,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":95100,"byte_end":95107,"line_start":393,"line_end":393,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":539},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":96119,"byte_end":96128,"line_start":425,"line_end":425,"column_start":12,"column_end":21},"name":"serialize","qualname":"::datetime::serde::ts_microseconds::serialize","value":"fn serialize<S>(&DateTime<Utc>, S) -> Result<S::Ok, S::Error> where\nS: ser::Serializer","parent":null,"children":[],"decl_id":null,"docs":" Serialize a UTC datetime into an integer number of microseconds since the epoch","sig":null,"attributes":[{"value":"/ Serialize a UTC datetime into an integer number of microseconds since the epoch","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":95309,"byte_end":95392,"line_start":402,"line_end":402,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":95397,"byte_end":95400,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ Intended for use with `serde`s `serialize_with` attribute.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":95405,"byte_end":95467,"line_start":404,"line_end":404,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":95472,"byte_end":95475,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ # Example:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":95480,"byte_end":95494,"line_start":406,"line_end":406,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":95499,"byte_end":95502,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":95507,"byte_end":95518,"line_start":408,"line_end":408,"column_start":5,"column_end":16}},{"value":"/ # use chrono::{TimeZone, DateTime, Utc};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":95523,"byte_end":95567,"line_start":409,"line_end":409,"column_start":5,"column_end":49}},{"value":"/ # use serde_derive::Serialize;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":95572,"byte_end":95606,"line_start":410,"line_end":410,"column_start":5,"column_end":39}},{"value":"/ use chrono::serde::ts_microseconds::serialize as to_micro_ts;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":95611,"byte_end":95676,"line_start":411,"line_end":411,"column_start":5,"column_end":70}},{"value":"/ #[derive(Serialize)]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":95681,"byte_end":95705,"line_start":412,"line_end":412,"column_start":5,"column_end":29}},{"value":"/ struct S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":95710,"byte_end":95724,"line_start":413,"line_end":413,"column_start":5,"column_end":19}},{"value":"/     #[serde(serialize_with = \"to_micro_ts\")]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":95729,"byte_end":95777,"line_start":414,"line_end":414,"column_start":5,"column_end":53}},{"value":"/     time: DateTime<Utc>","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":95782,"byte_end":95809,"line_start":415,"line_end":415,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":95814,"byte_end":95819,"line_start":416,"line_end":416,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":95824,"byte_end":95827,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ let my_s = S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":95832,"byte_end":95850,"line_start":418,"line_end":418,"column_start":5,"column_end":23}},{"value":"/     time: Utc.ymd(2018, 5, 17).and_hms_micro(02, 04, 59, 918355),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":95855,"byte_end":95924,"line_start":419,"line_end":419,"column_start":5,"column_end":74}},{"value":"/ };","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":95929,"byte_end":95935,"line_start":420,"line_end":420,"column_start":5,"column_end":11}},{"value":"/ let as_string = serde_json::to_string(&my_s)?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":95940,"byte_end":95990,"line_start":421,"line_end":421,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(as_string, r#\"{\"time\":1526522699918355}\"#);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":95995,"byte_end":96053,"line_start":422,"line_end":422,"column_start":5,"column_end":63}},{"value":"/ # Ok::<(), serde_json::Error>(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":96058,"byte_end":96095,"line_start":423,"line_end":423,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":96100,"byte_end":96107,"line_start":424,"line_end":424,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":541},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":96947,"byte_end":96958,"line_start":451,"line_end":451,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::datetime::serde::ts_microseconds::deserialize","value":"fn deserialize<'de, D>(D) -> Result<DateTime<Utc>, D::Error> where\nD: de::Deserializer","parent":null,"children":[],"decl_id":null,"docs":" Deserialize a `DateTime` from a microsecond timestamp","sig":null,"attributes":[{"value":"/ Deserialize a `DateTime` from a microsecond timestamp","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":96305,"byte_end":96362,"line_start":432,"line_end":432,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":96367,"byte_end":96370,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ Intended for use with `serde`s `deserialize_with` attribute.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":96375,"byte_end":96439,"line_start":434,"line_end":434,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":96444,"byte_end":96447,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ # Example:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":96452,"byte_end":96466,"line_start":436,"line_end":436,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":96471,"byte_end":96474,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":96479,"byte_end":96490,"line_start":438,"line_end":438,"column_start":5,"column_end":16}},{"value":"/ # use chrono::{DateTime, Utc};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":96495,"byte_end":96529,"line_start":439,"line_end":439,"column_start":5,"column_end":39}},{"value":"/ # use serde_derive::Deserialize;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":96534,"byte_end":96570,"line_start":440,"line_end":440,"column_start":5,"column_end":41}},{"value":"/ use chrono::serde::ts_microseconds::deserialize as from_micro_ts;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":96575,"byte_end":96644,"line_start":441,"line_end":441,"column_start":5,"column_end":74}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":96649,"byte_end":96675,"line_start":442,"line_end":442,"column_start":5,"column_end":31}},{"value":"/ struct S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":96680,"byte_end":96694,"line_start":443,"line_end":443,"column_start":5,"column_end":19}},{"value":"/     #[serde(deserialize_with = \"from_micro_ts\")]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":96699,"byte_end":96751,"line_start":444,"line_end":444,"column_start":5,"column_end":57}},{"value":"/     time: DateTime<Utc>","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":96756,"byte_end":96783,"line_start":445,"line_end":445,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":96788,"byte_end":96793,"line_start":446,"line_end":446,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":96798,"byte_end":96801,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ let my_s: S = serde_json::from_str(r#\"{ \"time\": 1526522699918355 }\"#)?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":96806,"byte_end":96881,"line_start":448,"line_end":448,"column_start":5,"column_end":80}},{"value":"/ # Ok::<(), serde_json::Error>(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":96886,"byte_end":96923,"line_start":449,"line_end":449,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":96928,"byte_end":96935,"line_start":450,"line_end":450,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":547},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":97235,"byte_end":97244,"line_start":461,"line_end":461,"column_start":12,"column_end":21},"name":"expecting","qualname":"<MicroSecondsTimestampVisitor as serde::de::Visitor>::expecting","value":"fn expecting(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":22,"index":1686},"children":[],"decl_id":{"krate":22,"index":1689},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":548},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":97459,"byte_end":97468,"line_start":466,"line_end":466,"column_start":12,"column_end":21},"name":"visit_i64","qualname":"<MicroSecondsTimestampVisitor as serde::de::Visitor>::visit_i64","value":"fn visit_i64<E>(Self, i64) -> Result<Self::Value, E> where E: de::Error","parent":{"krate":22,"index":1686},"children":[],"decl_id":{"krate":22,"index":1698},"docs":" Deserialize a timestamp in milliseconds since the epoch\n","sig":null,"attributes":[{"value":"/ Deserialize a timestamp in milliseconds since the epoch","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":97388,"byte_end":97447,"line_start":465,"line_end":465,"column_start":9,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":97810,"byte_end":97819,"line_start":477,"line_end":477,"column_start":12,"column_end":21},"name":"visit_u64","qualname":"<MicroSecondsTimestampVisitor as serde::de::Visitor>::visit_u64","value":"fn visit_u64<E>(Self, u64) -> Result<Self::Value, E> where E: de::Error","parent":{"krate":22,"index":1686},"children":[],"decl_id":{"krate":22,"index":1706},"docs":" Deserialize a timestamp in milliseconds since the epoch\n","sig":null,"attributes":[{"value":"/ Deserialize a timestamp in milliseconds since the epoch","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":97739,"byte_end":97798,"line_start":476,"line_end":476,"column_start":9,"column_end":68}}]},{"kind":"Mod","id":{"krate":0,"index":552},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":98923,"byte_end":98945,"line_start":516,"line_end":516,"column_start":9,"column_end":31},"name":"ts_microseconds_option","qualname":"::datetime::serde::ts_microseconds_option","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","parent":null,"children":[{"krate":0,"index":553},{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":560},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":573},{"krate":0,"index":575},{"krate":0,"index":578},{"krate":0,"index":580}],"decl_id":null,"docs":" Ser/de to/from optional timestamps in microseconds","sig":null,"attributes":[{"value":"/ Ser/de to/from optional timestamps in microseconds","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":98099,"byte_end":98153,"line_start":489,"line_end":489,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":98154,"byte_end":98157,"line_start":490,"line_end":490,"column_start":1,"column_end":4}},{"value":"/ Intended for use with `serde`'s `with` attribute.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":98158,"byte_end":98211,"line_start":491,"line_end":491,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":98212,"byte_end":98215,"line_start":492,"line_end":492,"column_start":1,"column_end":4}},{"value":"/ # Example:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":98216,"byte_end":98230,"line_start":493,"line_end":493,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":98231,"byte_end":98234,"line_start":494,"line_end":494,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":98235,"byte_end":98246,"line_start":495,"line_end":495,"column_start":1,"column_end":12}},{"value":"/ # use chrono::{TimeZone, DateTime, Utc};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":98247,"byte_end":98291,"line_start":496,"line_end":496,"column_start":1,"column_end":45}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":98292,"byte_end":98341,"line_start":497,"line_end":497,"column_start":1,"column_end":50}},{"value":"/ use chrono::serde::ts_microseconds_option;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":98342,"byte_end":98388,"line_start":498,"line_end":498,"column_start":1,"column_end":47}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":98389,"byte_end":98426,"line_start":499,"line_end":499,"column_start":1,"column_end":38}},{"value":"/ struct S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":98427,"byte_end":98441,"line_start":500,"line_end":500,"column_start":1,"column_end":15}},{"value":"/     #[serde(with = \"ts_microseconds_option\")]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":98442,"byte_end":98491,"line_start":501,"line_end":501,"column_start":1,"column_end":50}},{"value":"/     time: Option<DateTime<Utc>>","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":98492,"byte_end":98527,"line_start":502,"line_end":502,"column_start":1,"column_end":36}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":98528,"byte_end":98533,"line_start":503,"line_end":503,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":98534,"byte_end":98537,"line_start":504,"line_end":504,"column_start":1,"column_end":4}},{"value":"/ let time = Some(Utc.ymd(2018, 5, 17).and_hms_micro(02, 04, 59, 918355));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":98538,"byte_end":98614,"line_start":505,"line_end":505,"column_start":1,"column_end":77}},{"value":"/ let my_s = S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":98615,"byte_end":98633,"line_start":506,"line_end":506,"column_start":1,"column_end":19}},{"value":"/     time: time.clone(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":98634,"byte_end":98661,"line_start":507,"line_end":507,"column_start":1,"column_end":28}},{"value":"/ };","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":98662,"byte_end":98668,"line_start":508,"line_end":508,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":98669,"byte_end":98672,"line_start":509,"line_end":509,"column_start":1,"column_end":4}},{"value":"/ let as_string = serde_json::to_string(&my_s)?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":98673,"byte_end":98723,"line_start":510,"line_end":510,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(as_string, r#\"{\"time\":1526522699918355}\"#);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":98724,"byte_end":98782,"line_start":511,"line_end":511,"column_start":1,"column_end":59}},{"value":"/ let my_s: S = serde_json::from_str(&as_string)?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":98783,"byte_end":98835,"line_start":512,"line_end":512,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(my_s.time, time);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":98836,"byte_end":98868,"line_start":513,"line_end":513,"column_start":1,"column_end":33}},{"value":"/ # Ok::<(), serde_json::Error>(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":98869,"byte_end":98906,"line_start":514,"line_end":514,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":98907,"byte_end":98914,"line_start":515,"line_end":515,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":573},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":99921,"byte_end":99930,"line_start":546,"line_end":546,"column_start":12,"column_end":21},"name":"serialize","qualname":"::datetime::serde::ts_microseconds_option::serialize","value":"fn serialize<S>(&Option<DateTime<Utc>>, S) -> Result<S::Ok, S::Error> where\nS: ser::Serializer","parent":null,"children":[],"decl_id":null,"docs":" Serialize a UTC datetime into an integer number of microseconds since the epoch or none","sig":null,"attributes":[{"value":"/ Serialize a UTC datetime into an integer number of microseconds since the epoch or none","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":99076,"byte_end":99167,"line_start":523,"line_end":523,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":99172,"byte_end":99175,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ Intended for use with `serde`s `serialize_with` attribute.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":99180,"byte_end":99242,"line_start":525,"line_end":525,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":99247,"byte_end":99250,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ # Example:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":99255,"byte_end":99269,"line_start":527,"line_end":527,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":99274,"byte_end":99277,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":99282,"byte_end":99293,"line_start":529,"line_end":529,"column_start":5,"column_end":16}},{"value":"/ # use chrono::{TimeZone, DateTime, Utc};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":99298,"byte_end":99342,"line_start":530,"line_end":530,"column_start":5,"column_end":49}},{"value":"/ # use serde_derive::Serialize;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":99347,"byte_end":99381,"line_start":531,"line_end":531,"column_start":5,"column_end":39}},{"value":"/ use chrono::serde::ts_microseconds_option::serialize as to_micro_tsopt;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":99386,"byte_end":99461,"line_start":532,"line_end":532,"column_start":5,"column_end":80}},{"value":"/ #[derive(Serialize)]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":99466,"byte_end":99490,"line_start":533,"line_end":533,"column_start":5,"column_end":29}},{"value":"/ struct S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":99495,"byte_end":99509,"line_start":534,"line_end":534,"column_start":5,"column_end":19}},{"value":"/     #[serde(serialize_with = \"to_micro_tsopt\")]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":99514,"byte_end":99565,"line_start":535,"line_end":535,"column_start":5,"column_end":56}},{"value":"/     time: Option<DateTime<Utc>>","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":99570,"byte_end":99605,"line_start":536,"line_end":536,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":99610,"byte_end":99615,"line_start":537,"line_end":537,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":99620,"byte_end":99623,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ let my_s = S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":99628,"byte_end":99646,"line_start":539,"line_end":539,"column_start":5,"column_end":23}},{"value":"/     time: Some(Utc.ymd(2018, 5, 17).and_hms_micro(02, 04, 59, 918355)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":99651,"byte_end":99726,"line_start":540,"line_end":540,"column_start":5,"column_end":80}},{"value":"/ };","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":99731,"byte_end":99737,"line_start":541,"line_end":541,"column_start":5,"column_end":11}},{"value":"/ let as_string = serde_json::to_string(&my_s)?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":99742,"byte_end":99792,"line_start":542,"line_end":542,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(as_string, r#\"{\"time\":1526522699918355}\"#);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":99797,"byte_end":99855,"line_start":543,"line_end":543,"column_start":5,"column_end":63}},{"value":"/ # Ok::<(), serde_json::Error>(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":99860,"byte_end":99897,"line_start":544,"line_end":544,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":99902,"byte_end":99909,"line_start":545,"line_end":545,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":575},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":100890,"byte_end":100901,"line_start":575,"line_end":575,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::datetime::serde::ts_microseconds_option::deserialize","value":"fn deserialize<'de, D>(D) -> Result<Option<DateTime<Utc>>, D::Error> where\nD: de::Deserializer","parent":null,"children":[],"decl_id":null,"docs":" Deserialize a `DateTime` from a microsecond timestamp or none","sig":null,"attributes":[{"value":"/ Deserialize a `DateTime` from a microsecond timestamp or none","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":100219,"byte_end":100284,"line_start":556,"line_end":556,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":100289,"byte_end":100292,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ Intended for use with `serde`s `deserialize_with` attribute.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":100297,"byte_end":100361,"line_start":558,"line_end":558,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":100366,"byte_end":100369,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ # Example:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":100374,"byte_end":100388,"line_start":560,"line_end":560,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":100393,"byte_end":100396,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":100401,"byte_end":100412,"line_start":562,"line_end":562,"column_start":5,"column_end":16}},{"value":"/ # use chrono::{DateTime, Utc};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":100417,"byte_end":100451,"line_start":563,"line_end":563,"column_start":5,"column_end":39}},{"value":"/ # use serde_derive::Deserialize;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":100456,"byte_end":100492,"line_start":564,"line_end":564,"column_start":5,"column_end":41}},{"value":"/ use chrono::serde::ts_microseconds_option::deserialize as from_micro_tsopt;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":100497,"byte_end":100576,"line_start":565,"line_end":565,"column_start":5,"column_end":84}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":100581,"byte_end":100607,"line_start":566,"line_end":566,"column_start":5,"column_end":31}},{"value":"/ struct S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":100612,"byte_end":100626,"line_start":567,"line_end":567,"column_start":5,"column_end":19}},{"value":"/     #[serde(deserialize_with = \"from_micro_tsopt\")]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":100631,"byte_end":100686,"line_start":568,"line_end":568,"column_start":5,"column_end":60}},{"value":"/     time: Option<DateTime<Utc>>","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":100691,"byte_end":100726,"line_start":569,"line_end":569,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":100731,"byte_end":100736,"line_start":570,"line_end":570,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":100741,"byte_end":100744,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ let my_s: S = serde_json::from_str(r#\"{ \"time\": 1526522699918355 }\"#)?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":100749,"byte_end":100824,"line_start":572,"line_end":572,"column_start":5,"column_end":80}},{"value":"/ # Ok::<(), serde_json::Error>(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":100829,"byte_end":100866,"line_start":573,"line_end":573,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":100871,"byte_end":100878,"line_start":574,"line_end":574,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":590},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":102892,"byte_end":102907,"line_start":644,"line_end":644,"column_start":9,"column_end":24},"name":"ts_milliseconds","qualname":"::datetime::serde::ts_milliseconds","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","parent":null,"children":[{"krate":0,"index":591},{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":598},{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":608},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":618},{"krate":0,"index":620},{"krate":0,"index":624}],"decl_id":null,"docs":" Ser/de to/from timestamps in milliseconds","sig":null,"attributes":[{"value":"/ Ser/de to/from timestamps in milliseconds","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":102113,"byte_end":102158,"line_start":617,"line_end":617,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":102159,"byte_end":102162,"line_start":618,"line_end":618,"column_start":1,"column_end":4}},{"value":"/ Intended for use with `serde`s `with` attribute.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":102163,"byte_end":102215,"line_start":619,"line_end":619,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":102216,"byte_end":102219,"line_start":620,"line_end":620,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":102220,"byte_end":102233,"line_start":621,"line_end":621,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":102234,"byte_end":102237,"line_start":622,"line_end":622,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":102238,"byte_end":102249,"line_start":623,"line_end":623,"column_start":1,"column_end":12}},{"value":"/ # use chrono::{TimeZone, DateTime, Utc};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":102250,"byte_end":102294,"line_start":624,"line_end":624,"column_start":1,"column_end":45}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":102295,"byte_end":102344,"line_start":625,"line_end":625,"column_start":1,"column_end":50}},{"value":"/ use chrono::serde::ts_milliseconds;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":102345,"byte_end":102384,"line_start":626,"line_end":626,"column_start":1,"column_end":40}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":102385,"byte_end":102422,"line_start":627,"line_end":627,"column_start":1,"column_end":38}},{"value":"/ struct S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":102423,"byte_end":102437,"line_start":628,"line_end":628,"column_start":1,"column_end":15}},{"value":"/     #[serde(with = \"ts_milliseconds\")]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":102438,"byte_end":102480,"line_start":629,"line_end":629,"column_start":1,"column_end":43}},{"value":"/     time: DateTime<Utc>","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":102481,"byte_end":102508,"line_start":630,"line_end":630,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":102509,"byte_end":102514,"line_start":631,"line_end":631,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":102515,"byte_end":102518,"line_start":632,"line_end":632,"column_start":1,"column_end":4}},{"value":"/ let time = Utc.ymd(2018, 5, 17).and_hms_milli(02, 04, 59, 918);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":102519,"byte_end":102586,"line_start":633,"line_end":633,"column_start":1,"column_end":68}},{"value":"/ let my_s = S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":102587,"byte_end":102605,"line_start":634,"line_end":634,"column_start":1,"column_end":19}},{"value":"/     time: time.clone(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":102606,"byte_end":102633,"line_start":635,"line_end":635,"column_start":1,"column_end":28}},{"value":"/ };","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":102634,"byte_end":102640,"line_start":636,"line_end":636,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":102641,"byte_end":102644,"line_start":637,"line_end":637,"column_start":1,"column_end":4}},{"value":"/ let as_string = serde_json::to_string(&my_s)?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":102645,"byte_end":102695,"line_start":638,"line_end":638,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(as_string, r#\"{\"time\":1526522699918}\"#);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":102696,"byte_end":102751,"line_start":639,"line_end":639,"column_start":1,"column_end":56}},{"value":"/ let my_s: S = serde_json::from_str(&as_string)?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":102752,"byte_end":102804,"line_start":640,"line_end":640,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(my_s.time, time);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":102805,"byte_end":102837,"line_start":641,"line_end":641,"column_start":1,"column_end":33}},{"value":"/ # Ok::<(), serde_json::Error>(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":102838,"byte_end":102875,"line_start":642,"line_end":642,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":102876,"byte_end":102883,"line_start":643,"line_end":643,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":618},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":103889,"byte_end":103898,"line_start":675,"line_end":675,"column_start":12,"column_end":21},"name":"serialize","qualname":"::datetime::serde::ts_milliseconds::serialize","value":"fn serialize<S>(&DateTime<Utc>, S) -> Result<S::Ok, S::Error> where\nS: ser::Serializer","parent":null,"children":[],"decl_id":null,"docs":" Serialize a UTC datetime into an integer number of milliseconds since the epoch","sig":null,"attributes":[{"value":"/ Serialize a UTC datetime into an integer number of milliseconds since the epoch","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":103085,"byte_end":103168,"line_start":652,"line_end":652,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":103173,"byte_end":103176,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ Intended for use with `serde`s `serialize_with` attribute.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":103181,"byte_end":103243,"line_start":654,"line_end":654,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":103248,"byte_end":103251,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ # Example:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":103256,"byte_end":103270,"line_start":656,"line_end":656,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":103275,"byte_end":103278,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":103283,"byte_end":103294,"line_start":658,"line_end":658,"column_start":5,"column_end":16}},{"value":"/ # use chrono::{TimeZone, DateTime, Utc};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":103299,"byte_end":103343,"line_start":659,"line_end":659,"column_start":5,"column_end":49}},{"value":"/ # use serde_derive::Serialize;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":103348,"byte_end":103382,"line_start":660,"line_end":660,"column_start":5,"column_end":39}},{"value":"/ use chrono::serde::ts_milliseconds::serialize as to_milli_ts;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":103387,"byte_end":103452,"line_start":661,"line_end":661,"column_start":5,"column_end":70}},{"value":"/ #[derive(Serialize)]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":103457,"byte_end":103481,"line_start":662,"line_end":662,"column_start":5,"column_end":29}},{"value":"/ struct S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":103486,"byte_end":103500,"line_start":663,"line_end":663,"column_start":5,"column_end":19}},{"value":"/     #[serde(serialize_with = \"to_milli_ts\")]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":103505,"byte_end":103553,"line_start":664,"line_end":664,"column_start":5,"column_end":53}},{"value":"/     time: DateTime<Utc>","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":103558,"byte_end":103585,"line_start":665,"line_end":665,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":103590,"byte_end":103595,"line_start":666,"line_end":666,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":103600,"byte_end":103603,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ let my_s = S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":103608,"byte_end":103626,"line_start":668,"line_end":668,"column_start":5,"column_end":23}},{"value":"/     time: Utc.ymd(2018, 5, 17).and_hms_milli(02, 04, 59, 918),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":103631,"byte_end":103697,"line_start":669,"line_end":669,"column_start":5,"column_end":71}},{"value":"/ };","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":103702,"byte_end":103708,"line_start":670,"line_end":670,"column_start":5,"column_end":11}},{"value":"/ let as_string = serde_json::to_string(&my_s)?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":103713,"byte_end":103763,"line_start":671,"line_end":671,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(as_string, r#\"{\"time\":1526522699918}\"#);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":103768,"byte_end":103823,"line_start":672,"line_end":672,"column_start":5,"column_end":60}},{"value":"/ # Ok::<(), serde_json::Error>(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":103828,"byte_end":103865,"line_start":673,"line_end":673,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":103870,"byte_end":103877,"line_start":674,"line_end":674,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":620},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":104714,"byte_end":104725,"line_start":701,"line_end":701,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::datetime::serde::ts_milliseconds::deserialize","value":"fn deserialize<'de, D>(D) -> Result<DateTime<Utc>, D::Error> where\nD: de::Deserializer","parent":null,"children":[],"decl_id":null,"docs":" Deserialize a `DateTime` from a millisecond timestamp","sig":null,"attributes":[{"value":"/ Deserialize a `DateTime` from a millisecond timestamp","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":104075,"byte_end":104132,"line_start":682,"line_end":682,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":104137,"byte_end":104140,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/ Intended for use with `serde`s `deserialize_with` attribute.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":104145,"byte_end":104209,"line_start":684,"line_end":684,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":104214,"byte_end":104217,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ # Example:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":104222,"byte_end":104236,"line_start":686,"line_end":686,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":104241,"byte_end":104244,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":104249,"byte_end":104260,"line_start":688,"line_end":688,"column_start":5,"column_end":16}},{"value":"/ # use chrono::{DateTime, Utc};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":104265,"byte_end":104299,"line_start":689,"line_end":689,"column_start":5,"column_end":39}},{"value":"/ # use serde_derive::Deserialize;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":104304,"byte_end":104340,"line_start":690,"line_end":690,"column_start":5,"column_end":41}},{"value":"/ use chrono::serde::ts_milliseconds::deserialize as from_milli_ts;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":104345,"byte_end":104414,"line_start":691,"line_end":691,"column_start":5,"column_end":74}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":104419,"byte_end":104445,"line_start":692,"line_end":692,"column_start":5,"column_end":31}},{"value":"/ struct S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":104450,"byte_end":104464,"line_start":693,"line_end":693,"column_start":5,"column_end":19}},{"value":"/     #[serde(deserialize_with = \"from_milli_ts\")]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":104469,"byte_end":104521,"line_start":694,"line_end":694,"column_start":5,"column_end":57}},{"value":"/     time: DateTime<Utc>","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":104526,"byte_end":104553,"line_start":695,"line_end":695,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":104558,"byte_end":104563,"line_start":696,"line_end":696,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":104568,"byte_end":104571,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ let my_s: S = serde_json::from_str(r#\"{ \"time\": 1526522699918 }\"#)?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":104576,"byte_end":104648,"line_start":698,"line_end":698,"column_start":5,"column_end":77}},{"value":"/ # Ok::<(), serde_json::Error>(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":104653,"byte_end":104690,"line_start":699,"line_end":699,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":104695,"byte_end":104702,"line_start":700,"line_end":700,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":627},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":105035,"byte_end":105044,"line_start":711,"line_end":711,"column_start":12,"column_end":21},"name":"expecting","qualname":"<MilliSecondsTimestampVisitor as serde::de::Visitor>::expecting","value":"fn expecting(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":22,"index":1686},"children":[],"decl_id":{"krate":22,"index":1689},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":105259,"byte_end":105268,"line_start":716,"line_end":716,"column_start":12,"column_end":21},"name":"visit_i64","qualname":"<MilliSecondsTimestampVisitor as serde::de::Visitor>::visit_i64","value":"fn visit_i64<E>(Self, i64) -> Result<Self::Value, E> where E: de::Error","parent":{"krate":22,"index":1686},"children":[],"decl_id":{"krate":22,"index":1698},"docs":" Deserialize a timestamp in milliseconds since the epoch\n","sig":null,"attributes":[{"value":"/ Deserialize a timestamp in milliseconds since the epoch","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":105188,"byte_end":105247,"line_start":715,"line_end":715,"column_start":9,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":105557,"byte_end":105566,"line_start":724,"line_end":724,"column_start":12,"column_end":21},"name":"visit_u64","qualname":"<MilliSecondsTimestampVisitor as serde::de::Visitor>::visit_u64","value":"fn visit_u64<E>(Self, u64) -> Result<Self::Value, E> where E: de::Error","parent":{"krate":22,"index":1686},"children":[],"decl_id":{"krate":22,"index":1706},"docs":" Deserialize a timestamp in milliseconds since the epoch\n","sig":null,"attributes":[{"value":"/ Deserialize a timestamp in milliseconds since the epoch","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":105486,"byte_end":105545,"line_start":723,"line_end":723,"column_start":9,"column_end":68}}]},{"kind":"Mod","id":{"krate":0,"index":632},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":106656,"byte_end":106678,"line_start":763,"line_end":763,"column_start":9,"column_end":31},"name":"ts_milliseconds_option","qualname":"::datetime::serde::ts_milliseconds_option","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","parent":null,"children":[{"krate":0,"index":633},{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":640},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":646},{"krate":0,"index":647},{"krate":0,"index":650},{"krate":0,"index":651},{"krate":0,"index":653},{"krate":0,"index":655},{"krate":0,"index":660},{"krate":0,"index":662}],"decl_id":null,"docs":" Ser/de to/from optional timestamps in milliseconds","sig":null,"attributes":[{"value":"/ Ser/de to/from optional timestamps in milliseconds","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":105840,"byte_end":105894,"line_start":736,"line_end":736,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":105895,"byte_end":105898,"line_start":737,"line_end":737,"column_start":1,"column_end":4}},{"value":"/ Intended for use with `serde`s `with` attribute.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":105899,"byte_end":105951,"line_start":738,"line_end":738,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":105952,"byte_end":105955,"line_start":739,"line_end":739,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":105956,"byte_end":105969,"line_start":740,"line_end":740,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":105970,"byte_end":105973,"line_start":741,"line_end":741,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":105974,"byte_end":105985,"line_start":742,"line_end":742,"column_start":1,"column_end":12}},{"value":"/ # use chrono::{TimeZone, DateTime, Utc};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":105986,"byte_end":106030,"line_start":743,"line_end":743,"column_start":1,"column_end":45}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":106031,"byte_end":106080,"line_start":744,"line_end":744,"column_start":1,"column_end":50}},{"value":"/ use chrono::serde::ts_milliseconds_option;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":106081,"byte_end":106127,"line_start":745,"line_end":745,"column_start":1,"column_end":47}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":106128,"byte_end":106165,"line_start":746,"line_end":746,"column_start":1,"column_end":38}},{"value":"/ struct S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":106166,"byte_end":106180,"line_start":747,"line_end":747,"column_start":1,"column_end":15}},{"value":"/     #[serde(with = \"ts_milliseconds_option\")]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":106181,"byte_end":106230,"line_start":748,"line_end":748,"column_start":1,"column_end":50}},{"value":"/     time: Option<DateTime<Utc>>","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":106231,"byte_end":106266,"line_start":749,"line_end":749,"column_start":1,"column_end":36}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":106267,"byte_end":106272,"line_start":750,"line_end":750,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":106273,"byte_end":106276,"line_start":751,"line_end":751,"column_start":1,"column_end":4}},{"value":"/ let time = Some(Utc.ymd(2018, 5, 17).and_hms_milli(02, 04, 59, 918));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":106277,"byte_end":106350,"line_start":752,"line_end":752,"column_start":1,"column_end":74}},{"value":"/ let my_s = S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":106351,"byte_end":106369,"line_start":753,"line_end":753,"column_start":1,"column_end":19}},{"value":"/     time: time.clone(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":106370,"byte_end":106397,"line_start":754,"line_end":754,"column_start":1,"column_end":28}},{"value":"/ };","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":106398,"byte_end":106404,"line_start":755,"line_end":755,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":106405,"byte_end":106408,"line_start":756,"line_end":756,"column_start":1,"column_end":4}},{"value":"/ let as_string = serde_json::to_string(&my_s)?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":106409,"byte_end":106459,"line_start":757,"line_end":757,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(as_string, r#\"{\"time\":1526522699918}\"#);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":106460,"byte_end":106515,"line_start":758,"line_end":758,"column_start":1,"column_end":56}},{"value":"/ let my_s: S = serde_json::from_str(&as_string)?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":106516,"byte_end":106568,"line_start":759,"line_end":759,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(my_s.time, time);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":106569,"byte_end":106601,"line_start":760,"line_end":760,"column_start":1,"column_end":33}},{"value":"/ # Ok::<(), serde_json::Error>(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":106602,"byte_end":106639,"line_start":761,"line_end":761,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":106640,"byte_end":106647,"line_start":762,"line_end":762,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":653},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":107648,"byte_end":107657,"line_start":793,"line_end":793,"column_start":12,"column_end":21},"name":"serialize","qualname":"::datetime::serde::ts_milliseconds_option::serialize","value":"fn serialize<S>(&Option<DateTime<Utc>>, S) -> Result<S::Ok, S::Error> where\nS: ser::Serializer","parent":null,"children":[],"decl_id":null,"docs":" Serialize a UTC datetime into an integer number of milliseconds since the epoch or none","sig":null,"attributes":[{"value":"/ Serialize a UTC datetime into an integer number of milliseconds since the epoch or none","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":106809,"byte_end":106900,"line_start":770,"line_end":770,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":106905,"byte_end":106908,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ Intended for use with `serde`s `serialize_with` attribute.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":106913,"byte_end":106975,"line_start":772,"line_end":772,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":106980,"byte_end":106983,"line_start":773,"line_end":773,"column_start":5,"column_end":8}},{"value":"/ # Example:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":106988,"byte_end":107002,"line_start":774,"line_end":774,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":107007,"byte_end":107010,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":107015,"byte_end":107026,"line_start":776,"line_end":776,"column_start":5,"column_end":16}},{"value":"/ # use chrono::{TimeZone, DateTime, Utc};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":107031,"byte_end":107075,"line_start":777,"line_end":777,"column_start":5,"column_end":49}},{"value":"/ # use serde_derive::Serialize;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":107080,"byte_end":107114,"line_start":778,"line_end":778,"column_start":5,"column_end":39}},{"value":"/ use chrono::serde::ts_milliseconds_option::serialize as to_milli_tsopt;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":107119,"byte_end":107194,"line_start":779,"line_end":779,"column_start":5,"column_end":80}},{"value":"/ #[derive(Serialize)]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":107199,"byte_end":107223,"line_start":780,"line_end":780,"column_start":5,"column_end":29}},{"value":"/ struct S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":107228,"byte_end":107242,"line_start":781,"line_end":781,"column_start":5,"column_end":19}},{"value":"/     #[serde(serialize_with = \"to_milli_tsopt\")]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":107247,"byte_end":107298,"line_start":782,"line_end":782,"column_start":5,"column_end":56}},{"value":"/     time: Option<DateTime<Utc>>","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":107303,"byte_end":107338,"line_start":783,"line_end":783,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":107343,"byte_end":107348,"line_start":784,"line_end":784,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":107353,"byte_end":107356,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ let my_s = S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":107361,"byte_end":107379,"line_start":786,"line_end":786,"column_start":5,"column_end":23}},{"value":"/     time: Some(Utc.ymd(2018, 5, 17).and_hms_milli(02, 04, 59, 918)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":107384,"byte_end":107456,"line_start":787,"line_end":787,"column_start":5,"column_end":77}},{"value":"/ };","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":107461,"byte_end":107467,"line_start":788,"line_end":788,"column_start":5,"column_end":11}},{"value":"/ let as_string = serde_json::to_string(&my_s)?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":107472,"byte_end":107522,"line_start":789,"line_end":789,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(as_string, r#\"{\"time\":1526522699918}\"#);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":107527,"byte_end":107582,"line_start":790,"line_end":790,"column_start":5,"column_end":60}},{"value":"/ # Ok::<(), serde_json::Error>(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":107587,"byte_end":107624,"line_start":791,"line_end":791,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":107629,"byte_end":107636,"line_start":792,"line_end":792,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":655},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":109098,"byte_end":109109,"line_start":834,"line_end":834,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::datetime::serde::ts_milliseconds_option::deserialize","value":"fn deserialize<'de, D>(D) -> Result<Option<DateTime<Utc>>, D::Error> where\nD: de::Deserializer","parent":null,"children":[],"decl_id":null,"docs":" Deserialize a `DateTime` from a millisecond timestamp or none","sig":null,"attributes":[{"value":"/ Deserialize a `DateTime` from a millisecond timestamp or none","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":107946,"byte_end":108011,"line_start":803,"line_end":803,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":108016,"byte_end":108019,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ Intended for use with `serde`s `deserialize_with` attribute.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":108024,"byte_end":108088,"line_start":805,"line_end":805,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":108093,"byte_end":108096,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ # Example:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":108101,"byte_end":108115,"line_start":807,"line_end":807,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":108120,"byte_end":108123,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":108128,"byte_end":108139,"line_start":809,"line_end":809,"column_start":5,"column_end":16}},{"value":"/ # use chrono::{TimeZone, DateTime, Utc};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":108144,"byte_end":108188,"line_start":810,"line_end":810,"column_start":5,"column_end":49}},{"value":"/ # use serde_derive::Deserialize;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":108193,"byte_end":108229,"line_start":811,"line_end":811,"column_start":5,"column_end":41}},{"value":"/ use chrono::serde::ts_milliseconds_option::deserialize as from_milli_tsopt;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":108234,"byte_end":108313,"line_start":812,"line_end":812,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":108318,"byte_end":108321,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ #[derive(Deserialize, PartialEq, Debug)]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":108326,"byte_end":108370,"line_start":814,"line_end":814,"column_start":5,"column_end":49}},{"value":"/ #[serde(untagged)]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":108375,"byte_end":108397,"line_start":815,"line_end":815,"column_start":5,"column_end":27}},{"value":"/ enum E<T> {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":108402,"byte_end":108417,"line_start":816,"line_end":816,"column_start":5,"column_end":20}},{"value":"/     V(T),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":108422,"byte_end":108435,"line_start":817,"line_end":817,"column_start":5,"column_end":18}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":108440,"byte_end":108445,"line_start":818,"line_end":818,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":108450,"byte_end":108453,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ #[derive(Deserialize, PartialEq, Debug)]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":108458,"byte_end":108502,"line_start":820,"line_end":820,"column_start":5,"column_end":49}},{"value":"/ struct S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":108507,"byte_end":108521,"line_start":821,"line_end":821,"column_start":5,"column_end":19}},{"value":"/     #[serde(default, deserialize_with = \"from_milli_tsopt\")]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":108526,"byte_end":108590,"line_start":822,"line_end":822,"column_start":5,"column_end":69}},{"value":"/     time: Option<DateTime<Utc>>","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":108595,"byte_end":108630,"line_start":823,"line_end":823,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":108635,"byte_end":108640,"line_start":824,"line_end":824,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":108645,"byte_end":108648,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ let my_s: E<S> = serde_json::from_str(r#\"{ \"time\": 1526522699918 }\"#)?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":108653,"byte_end":108728,"line_start":826,"line_end":826,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(my_s, E::V(S { time: Some(Utc.timestamp(1526522699, 918000000)) }));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":108733,"byte_end":108816,"line_start":827,"line_end":827,"column_start":5,"column_end":88}},{"value":"/ let s: E<S> = serde_json::from_str(r#\"{ \"time\": null }\"#)?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":108821,"byte_end":108884,"line_start":828,"line_end":828,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(s, E::V(S { time: None }));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":108889,"byte_end":108931,"line_start":829,"line_end":829,"column_start":5,"column_end":47}},{"value":"/ let t: E<S> = serde_json::from_str(r#\"{}\"#)?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":108936,"byte_end":108985,"line_start":830,"line_end":830,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(t, E::V(S { time: None }));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":108990,"byte_end":109032,"line_start":831,"line_end":831,"column_start":5,"column_end":47}},{"value":"/ # Ok::<(), serde_json::Error>(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":109037,"byte_end":109074,"line_start":832,"line_end":832,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":109079,"byte_end":109086,"line_start":833,"line_end":833,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":672},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":111132,"byte_end":111142,"line_start":904,"line_end":904,"column_start":9,"column_end":19},"name":"ts_seconds","qualname":"::datetime::serde::ts_seconds","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","parent":null,"children":[{"krate":0,"index":673},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":680},{"krate":0,"index":683},{"krate":0,"index":684},{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":690},{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":700},{"krate":0,"index":702},{"krate":0,"index":705}],"decl_id":null,"docs":" Ser/de to/from timestamps in seconds","sig":null,"attributes":[{"value":"/ Ser/de to/from timestamps in seconds","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":110382,"byte_end":110422,"line_start":877,"line_end":877,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":110423,"byte_end":110426,"line_start":878,"line_end":878,"column_start":1,"column_end":4}},{"value":"/ Intended for use with `serde`'s `with` attribute.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":110427,"byte_end":110480,"line_start":879,"line_end":879,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":110481,"byte_end":110484,"line_start":880,"line_end":880,"column_start":1,"column_end":4}},{"value":"/ # Example:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":110485,"byte_end":110499,"line_start":881,"line_end":881,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":110500,"byte_end":110503,"line_start":882,"line_end":882,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":110504,"byte_end":110515,"line_start":883,"line_end":883,"column_start":1,"column_end":12}},{"value":"/ # use chrono::{TimeZone, DateTime, Utc};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":110516,"byte_end":110560,"line_start":884,"line_end":884,"column_start":1,"column_end":45}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":110561,"byte_end":110610,"line_start":885,"line_end":885,"column_start":1,"column_end":50}},{"value":"/ use chrono::serde::ts_seconds;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":110611,"byte_end":110645,"line_start":886,"line_end":886,"column_start":1,"column_end":35}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":110646,"byte_end":110683,"line_start":887,"line_end":887,"column_start":1,"column_end":38}},{"value":"/ struct S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":110684,"byte_end":110698,"line_start":888,"line_end":888,"column_start":1,"column_end":15}},{"value":"/     #[serde(with = \"ts_seconds\")]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":110699,"byte_end":110736,"line_start":889,"line_end":889,"column_start":1,"column_end":38}},{"value":"/     time: DateTime<Utc>","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":110737,"byte_end":110764,"line_start":890,"line_end":890,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":110765,"byte_end":110770,"line_start":891,"line_end":891,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":110771,"byte_end":110774,"line_start":892,"line_end":892,"column_start":1,"column_end":4}},{"value":"/ let time = Utc.ymd(2015, 5, 15).and_hms(10, 0, 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":110775,"byte_end":110829,"line_start":893,"line_end":893,"column_start":1,"column_end":55}},{"value":"/ let my_s = S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":110830,"byte_end":110848,"line_start":894,"line_end":894,"column_start":1,"column_end":19}},{"value":"/     time: time.clone(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":110849,"byte_end":110876,"line_start":895,"line_end":895,"column_start":1,"column_end":28}},{"value":"/ };","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":110877,"byte_end":110883,"line_start":896,"line_end":896,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":110884,"byte_end":110887,"line_start":897,"line_end":897,"column_start":1,"column_end":4}},{"value":"/ let as_string = serde_json::to_string(&my_s)?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":110888,"byte_end":110938,"line_start":898,"line_end":898,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(as_string, r#\"{\"time\":1431684000}\"#);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":110939,"byte_end":110991,"line_start":899,"line_end":899,"column_start":1,"column_end":53}},{"value":"/ let my_s: S = serde_json::from_str(&as_string)?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":110992,"byte_end":111044,"line_start":900,"line_end":900,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(my_s.time, time);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":111045,"byte_end":111077,"line_start":901,"line_end":901,"column_start":1,"column_end":33}},{"value":"/ # Ok::<(), serde_json::Error>(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":111078,"byte_end":111115,"line_start":902,"line_end":902,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":111116,"byte_end":111123,"line_start":903,"line_end":903,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":700},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":112081,"byte_end":112090,"line_start":935,"line_end":935,"column_start":12,"column_end":21},"name":"serialize","qualname":"::datetime::serde::ts_seconds::serialize","value":"fn serialize<S>(&DateTime<Utc>, S) -> Result<S::Ok, S::Error> where\nS: ser::Serializer","parent":null,"children":[],"decl_id":null,"docs":" Serialize a UTC datetime into an integer number of seconds since the epoch","sig":null,"attributes":[{"value":"/ Serialize a UTC datetime into an integer number of seconds since the epoch","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":111315,"byte_end":111393,"line_start":912,"line_end":912,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":111398,"byte_end":111401,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/ Intended for use with `serde`s `serialize_with` attribute.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":111406,"byte_end":111468,"line_start":914,"line_end":914,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":111473,"byte_end":111476,"line_start":915,"line_end":915,"column_start":5,"column_end":8}},{"value":"/ # Example:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":111481,"byte_end":111495,"line_start":916,"line_end":916,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":111500,"byte_end":111503,"line_start":917,"line_end":917,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":111508,"byte_end":111519,"line_start":918,"line_end":918,"column_start":5,"column_end":16}},{"value":"/ # use chrono::{TimeZone, DateTime, Utc};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":111524,"byte_end":111568,"line_start":919,"line_end":919,"column_start":5,"column_end":49}},{"value":"/ # use serde_derive::Serialize;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":111573,"byte_end":111607,"line_start":920,"line_end":920,"column_start":5,"column_end":39}},{"value":"/ use chrono::serde::ts_seconds::serialize as to_ts;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":111612,"byte_end":111666,"line_start":921,"line_end":921,"column_start":5,"column_end":59}},{"value":"/ #[derive(Serialize)]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":111671,"byte_end":111695,"line_start":922,"line_end":922,"column_start":5,"column_end":29}},{"value":"/ struct S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":111700,"byte_end":111714,"line_start":923,"line_end":923,"column_start":5,"column_end":19}},{"value":"/     #[serde(serialize_with = \"to_ts\")]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":111719,"byte_end":111761,"line_start":924,"line_end":924,"column_start":5,"column_end":47}},{"value":"/     time: DateTime<Utc>","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":111766,"byte_end":111793,"line_start":925,"line_end":925,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":111798,"byte_end":111803,"line_start":926,"line_end":926,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":111808,"byte_end":111811,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/ let my_s = S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":111816,"byte_end":111834,"line_start":928,"line_end":928,"column_start":5,"column_end":23}},{"value":"/     time: Utc.ymd(2015, 5, 15).and_hms(10, 0, 0),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":111839,"byte_end":111892,"line_start":929,"line_end":929,"column_start":5,"column_end":58}},{"value":"/ };","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":111897,"byte_end":111903,"line_start":930,"line_end":930,"column_start":5,"column_end":11}},{"value":"/ let as_string = serde_json::to_string(&my_s)?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":111908,"byte_end":111958,"line_start":931,"line_end":931,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(as_string, r#\"{\"time\":1431684000}\"#);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":111963,"byte_end":112015,"line_start":932,"line_end":932,"column_start":5,"column_end":57}},{"value":"/ # Ok::<(), serde_json::Error>(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":112020,"byte_end":112057,"line_start":933,"line_end":933,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":112062,"byte_end":112069,"line_start":934,"line_end":934,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":702},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":112875,"byte_end":112886,"line_start":961,"line_end":961,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::datetime::serde::ts_seconds::deserialize","value":"fn deserialize<'de, D>(D) -> Result<DateTime<Utc>, D::Error> where\nD: de::Deserializer","parent":null,"children":[],"decl_id":null,"docs":" Deserialize a `DateTime` from a seconds timestamp","sig":null,"attributes":[{"value":"/ Deserialize a `DateTime` from a seconds timestamp","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":112260,"byte_end":112313,"line_start":942,"line_end":942,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":112318,"byte_end":112321,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ Intended for use with `serde`s `deserialize_with` attribute.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":112326,"byte_end":112390,"line_start":944,"line_end":944,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":112395,"byte_end":112398,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/ # Example:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":112403,"byte_end":112417,"line_start":946,"line_end":946,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":112422,"byte_end":112425,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":112430,"byte_end":112441,"line_start":948,"line_end":948,"column_start":5,"column_end":16}},{"value":"/ # use chrono::{DateTime, Utc};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":112446,"byte_end":112480,"line_start":949,"line_end":949,"column_start":5,"column_end":39}},{"value":"/ # use serde_derive::Deserialize;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":112485,"byte_end":112521,"line_start":950,"line_end":950,"column_start":5,"column_end":41}},{"value":"/ use chrono::serde::ts_seconds::deserialize as from_ts;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":112526,"byte_end":112584,"line_start":951,"line_end":951,"column_start":5,"column_end":63}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":112589,"byte_end":112615,"line_start":952,"line_end":952,"column_start":5,"column_end":31}},{"value":"/ struct S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":112620,"byte_end":112634,"line_start":953,"line_end":953,"column_start":5,"column_end":19}},{"value":"/     #[serde(deserialize_with = \"from_ts\")]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":112639,"byte_end":112685,"line_start":954,"line_end":954,"column_start":5,"column_end":51}},{"value":"/     time: DateTime<Utc>","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":112690,"byte_end":112717,"line_start":955,"line_end":955,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":112722,"byte_end":112727,"line_start":956,"line_end":956,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":112732,"byte_end":112735,"line_start":957,"line_end":957,"column_start":5,"column_end":8}},{"value":"/ let my_s: S = serde_json::from_str(r#\"{ \"time\": 1431684000 }\"#)?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":112740,"byte_end":112809,"line_start":958,"line_end":958,"column_start":5,"column_end":74}},{"value":"/ # Ok::<(), serde_json::Error>(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":112814,"byte_end":112851,"line_start":959,"line_end":959,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":112856,"byte_end":112863,"line_start":960,"line_end":960,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":708},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":113153,"byte_end":113162,"line_start":971,"line_end":971,"column_start":12,"column_end":21},"name":"expecting","qualname":"<SecondsTimestampVisitor as serde::de::Visitor>::expecting","value":"fn expecting(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":22,"index":1686},"children":[],"decl_id":{"krate":22,"index":1689},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":113367,"byte_end":113376,"line_start":976,"line_end":976,"column_start":12,"column_end":21},"name":"visit_i64","qualname":"<SecondsTimestampVisitor as serde::de::Visitor>::visit_i64","value":"fn visit_i64<E>(Self, i64) -> Result<Self::Value, E> where E: de::Error","parent":{"krate":22,"index":1686},"children":[],"decl_id":{"krate":22,"index":1698},"docs":" Deserialize a timestamp in seconds since the epoch\n","sig":null,"attributes":[{"value":"/ Deserialize a timestamp in seconds since the epoch","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":113301,"byte_end":113355,"line_start":975,"line_end":975,"column_start":9,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":711},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":113619,"byte_end":113628,"line_start":984,"line_end":984,"column_start":12,"column_end":21},"name":"visit_u64","qualname":"<SecondsTimestampVisitor as serde::de::Visitor>::visit_u64","value":"fn visit_u64<E>(Self, u64) -> Result<Self::Value, E> where E: de::Error","parent":{"krate":22,"index":1686},"children":[],"decl_id":{"krate":22,"index":1706},"docs":" Deserialize a timestamp in seconds since the epoch\n","sig":null,"attributes":[{"value":"/ Deserialize a timestamp in seconds since the epoch","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":113553,"byte_end":113607,"line_start":983,"line_end":983,"column_start":9,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":713},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":114599,"byte_end":114616,"line_start":1020,"line_end":1020,"column_start":9,"column_end":26},"name":"ts_seconds_option","qualname":"::datetime::serde::ts_seconds_option","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","parent":null,"children":[{"krate":0,"index":714},{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":721},{"krate":0,"index":724},{"krate":0,"index":725},{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":734},{"krate":0,"index":736},{"krate":0,"index":739},{"krate":0,"index":741}],"decl_id":null,"docs":" Ser/de to/from optional timestamps in seconds","sig":null,"attributes":[{"value":"/ Ser/de to/from optional timestamps in seconds","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":113812,"byte_end":113861,"line_start":993,"line_end":993,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":113862,"byte_end":113865,"line_start":994,"line_end":994,"column_start":1,"column_end":4}},{"value":"/ Intended for use with `serde`'s `with` attribute.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":113866,"byte_end":113919,"line_start":995,"line_end":995,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":113920,"byte_end":113923,"line_start":996,"line_end":996,"column_start":1,"column_end":4}},{"value":"/ # Example:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":113924,"byte_end":113938,"line_start":997,"line_end":997,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":113939,"byte_end":113942,"line_start":998,"line_end":998,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":113943,"byte_end":113954,"line_start":999,"line_end":999,"column_start":1,"column_end":12}},{"value":"/ # use chrono::{TimeZone, DateTime, Utc};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":113955,"byte_end":113999,"line_start":1000,"line_end":1000,"column_start":1,"column_end":45}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":114000,"byte_end":114049,"line_start":1001,"line_end":1001,"column_start":1,"column_end":50}},{"value":"/ use chrono::serde::ts_seconds_option;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":114050,"byte_end":114091,"line_start":1002,"line_end":1002,"column_start":1,"column_end":42}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":114092,"byte_end":114129,"line_start":1003,"line_end":1003,"column_start":1,"column_end":38}},{"value":"/ struct S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":114130,"byte_end":114144,"line_start":1004,"line_end":1004,"column_start":1,"column_end":15}},{"value":"/     #[serde(with = \"ts_seconds_option\")]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":114145,"byte_end":114189,"line_start":1005,"line_end":1005,"column_start":1,"column_end":45}},{"value":"/     time: Option<DateTime<Utc>>","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":114190,"byte_end":114225,"line_start":1006,"line_end":1006,"column_start":1,"column_end":36}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":114226,"byte_end":114231,"line_start":1007,"line_end":1007,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":114232,"byte_end":114235,"line_start":1008,"line_end":1008,"column_start":1,"column_end":4}},{"value":"/ let time = Some(Utc.ymd(2015, 5, 15).and_hms(10, 0, 0));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":114236,"byte_end":114296,"line_start":1009,"line_end":1009,"column_start":1,"column_end":61}},{"value":"/ let my_s = S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":114297,"byte_end":114315,"line_start":1010,"line_end":1010,"column_start":1,"column_end":19}},{"value":"/     time: time.clone(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":114316,"byte_end":114343,"line_start":1011,"line_end":1011,"column_start":1,"column_end":28}},{"value":"/ };","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":114344,"byte_end":114350,"line_start":1012,"line_end":1012,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":114351,"byte_end":114354,"line_start":1013,"line_end":1013,"column_start":1,"column_end":4}},{"value":"/ let as_string = serde_json::to_string(&my_s)?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":114355,"byte_end":114405,"line_start":1014,"line_end":1014,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(as_string, r#\"{\"time\":1431684000}\"#);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":114406,"byte_end":114458,"line_start":1015,"line_end":1015,"column_start":1,"column_end":53}},{"value":"/ let my_s: S = serde_json::from_str(&as_string)?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":114459,"byte_end":114511,"line_start":1016,"line_end":1016,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(my_s.time, time);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":114512,"byte_end":114544,"line_start":1017,"line_end":1017,"column_start":1,"column_end":33}},{"value":"/ # Ok::<(), serde_json::Error>(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":114545,"byte_end":114582,"line_start":1018,"line_end":1018,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":114583,"byte_end":114590,"line_start":1019,"line_end":1019,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":734},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":115543,"byte_end":115552,"line_start":1050,"line_end":1050,"column_start":12,"column_end":21},"name":"serialize","qualname":"::datetime::serde::ts_seconds_option::serialize","value":"fn serialize<S>(&Option<DateTime<Utc>>, S) -> Result<S::Ok, S::Error> where\nS: ser::Serializer","parent":null,"children":[],"decl_id":null,"docs":" Serialize a UTC datetime into an integer number of seconds since the epoch or none","sig":null,"attributes":[{"value":"/ Serialize a UTC datetime into an integer number of seconds since the epoch or none","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":114742,"byte_end":114828,"line_start":1027,"line_end":1027,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":114833,"byte_end":114836,"line_start":1028,"line_end":1028,"column_start":5,"column_end":8}},{"value":"/ Intended for use with `serde`s `serialize_with` attribute.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":114841,"byte_end":114903,"line_start":1029,"line_end":1029,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":114908,"byte_end":114911,"line_start":1030,"line_end":1030,"column_start":5,"column_end":8}},{"value":"/ # Example:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":114916,"byte_end":114930,"line_start":1031,"line_end":1031,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":114935,"byte_end":114938,"line_start":1032,"line_end":1032,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":114943,"byte_end":114954,"line_start":1033,"line_end":1033,"column_start":5,"column_end":16}},{"value":"/ # use chrono::{TimeZone, DateTime, Utc};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":114959,"byte_end":115003,"line_start":1034,"line_end":1034,"column_start":5,"column_end":49}},{"value":"/ # use serde_derive::Serialize;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":115008,"byte_end":115042,"line_start":1035,"line_end":1035,"column_start":5,"column_end":39}},{"value":"/ use chrono::serde::ts_seconds_option::serialize as to_tsopt;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":115047,"byte_end":115111,"line_start":1036,"line_end":1036,"column_start":5,"column_end":69}},{"value":"/ #[derive(Serialize)]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":115116,"byte_end":115140,"line_start":1037,"line_end":1037,"column_start":5,"column_end":29}},{"value":"/ struct S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":115145,"byte_end":115159,"line_start":1038,"line_end":1038,"column_start":5,"column_end":19}},{"value":"/     #[serde(serialize_with = \"to_tsopt\")]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":115164,"byte_end":115209,"line_start":1039,"line_end":1039,"column_start":5,"column_end":50}},{"value":"/     time: Option<DateTime<Utc>>","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":115214,"byte_end":115249,"line_start":1040,"line_end":1040,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":115254,"byte_end":115259,"line_start":1041,"line_end":1041,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":115264,"byte_end":115267,"line_start":1042,"line_end":1042,"column_start":5,"column_end":8}},{"value":"/ let my_s = S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":115272,"byte_end":115290,"line_start":1043,"line_end":1043,"column_start":5,"column_end":23}},{"value":"/     time: Some(Utc.ymd(2015, 5, 15).and_hms(10, 0, 0)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":115295,"byte_end":115354,"line_start":1044,"line_end":1044,"column_start":5,"column_end":64}},{"value":"/ };","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":115359,"byte_end":115365,"line_start":1045,"line_end":1045,"column_start":5,"column_end":11}},{"value":"/ let as_string = serde_json::to_string(&my_s)?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":115370,"byte_end":115420,"line_start":1046,"line_end":1046,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(as_string, r#\"{\"time\":1431684000}\"#);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":115425,"byte_end":115477,"line_start":1047,"line_end":1047,"column_start":5,"column_end":57}},{"value":"/ # Ok::<(), serde_json::Error>(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":115482,"byte_end":115519,"line_start":1048,"line_end":1048,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":115524,"byte_end":115531,"line_start":1049,"line_end":1049,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":736},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":116478,"byte_end":116489,"line_start":1079,"line_end":1079,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::datetime::serde::ts_seconds_option::deserialize","value":"fn deserialize<'de, D>(D) -> Result<Option<DateTime<Utc>>, D::Error> where\nD: de::Deserializer","parent":null,"children":[],"decl_id":null,"docs":" Deserialize a `DateTime` from a seconds timestamp or none","sig":null,"attributes":[{"value":"/ Deserialize a `DateTime` from a seconds timestamp or none","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":115834,"byte_end":115895,"line_start":1060,"line_end":1060,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":115900,"byte_end":115903,"line_start":1061,"line_end":1061,"column_start":5,"column_end":8}},{"value":"/ Intended for use with `serde`s `deserialize_with` attribute.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":115908,"byte_end":115972,"line_start":1062,"line_end":1062,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":115977,"byte_end":115980,"line_start":1063,"line_end":1063,"column_start":5,"column_end":8}},{"value":"/ # Example:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":115985,"byte_end":115999,"line_start":1064,"line_end":1064,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":116004,"byte_end":116007,"line_start":1065,"line_end":1065,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":116012,"byte_end":116023,"line_start":1066,"line_end":1066,"column_start":5,"column_end":16}},{"value":"/ # use chrono::{DateTime, Utc};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":116028,"byte_end":116062,"line_start":1067,"line_end":1067,"column_start":5,"column_end":39}},{"value":"/ # use serde_derive::Deserialize;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":116067,"byte_end":116103,"line_start":1068,"line_end":1068,"column_start":5,"column_end":41}},{"value":"/ use chrono::serde::ts_seconds_option::deserialize as from_tsopt;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":116108,"byte_end":116176,"line_start":1069,"line_end":1069,"column_start":5,"column_end":73}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":116181,"byte_end":116207,"line_start":1070,"line_end":1070,"column_start":5,"column_end":31}},{"value":"/ struct S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":116212,"byte_end":116226,"line_start":1071,"line_end":1071,"column_start":5,"column_end":19}},{"value":"/     #[serde(deserialize_with = \"from_tsopt\")]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":116231,"byte_end":116280,"line_start":1072,"line_end":1072,"column_start":5,"column_end":54}},{"value":"/     time: Option<DateTime<Utc>>","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":116285,"byte_end":116320,"line_start":1073,"line_end":1073,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":116325,"byte_end":116330,"line_start":1074,"line_end":1074,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":116335,"byte_end":116338,"line_start":1075,"line_end":1075,"column_start":5,"column_end":8}},{"value":"/ let my_s: S = serde_json::from_str(r#\"{ \"time\": 1431684000 }\"#)?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":116343,"byte_end":116412,"line_start":1076,"line_end":1076,"column_start":5,"column_end":74}},{"value":"/ # Ok::<(), serde_json::Error>(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":116417,"byte_end":116454,"line_start":1077,"line_end":1077,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":116459,"byte_end":116466,"line_start":1078,"line_end":1078,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3474},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":45483,"byte_end":45487,"line_start":55,"line_end":55,"column_start":5,"column_end":9},"name":"Secs","qualname":"::datetime::SecondsFormat::Secs","value":"SecondsFormat::Secs","parent":{"krate":0,"index":3473},"children":[],"decl_id":null,"docs":" Format whole seconds only, with no decimal point nor subseconds.\n","sig":null,"attributes":[{"value":"/ Format whole seconds only, with no decimal point nor subseconds.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":45410,"byte_end":45478,"line_start":54,"line_end":54,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3476},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":45626,"byte_end":45632,"line_start":59,"line_end":59,"column_start":5,"column_end":11},"name":"Millis","qualname":"::datetime::SecondsFormat::Millis","value":"SecondsFormat::Millis","parent":{"krate":0,"index":3473},"children":[],"decl_id":null,"docs":" Use fixed 3 subsecond digits. This corresponds to\n [Fixed::Nanosecond3](format/enum.Fixed.html#variant.Nanosecond3).\n","sig":null,"attributes":[{"value":"/ Use fixed 3 subsecond digits. This corresponds to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":45494,"byte_end":45547,"line_start":57,"line_end":57,"column_start":5,"column_end":58}},{"value":"/ [Fixed::Nanosecond3](format/enum.Fixed.html#variant.Nanosecond3).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":45552,"byte_end":45621,"line_start":58,"line_end":58,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3478},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":45771,"byte_end":45777,"line_start":63,"line_end":63,"column_start":5,"column_end":11},"name":"Micros","qualname":"::datetime::SecondsFormat::Micros","value":"SecondsFormat::Micros","parent":{"krate":0,"index":3473},"children":[],"decl_id":null,"docs":" Use fixed 6 subsecond digits. This corresponds to\n [Fixed::Nanosecond6](format/enum.Fixed.html#variant.Nanosecond6).\n","sig":null,"attributes":[{"value":"/ Use fixed 6 subsecond digits. This corresponds to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":45639,"byte_end":45692,"line_start":61,"line_end":61,"column_start":5,"column_end":58}},{"value":"/ [Fixed::Nanosecond6](format/enum.Fixed.html#variant.Nanosecond6).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":45697,"byte_end":45766,"line_start":62,"line_end":62,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3480},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":45916,"byte_end":45921,"line_start":67,"line_end":67,"column_start":5,"column_end":10},"name":"Nanos","qualname":"::datetime::SecondsFormat::Nanos","value":"SecondsFormat::Nanos","parent":{"krate":0,"index":3473},"children":[],"decl_id":null,"docs":" Use fixed 9 subsecond digits. This corresponds to\n [Fixed::Nanosecond9](format/enum.Fixed.html#variant.Nanosecond9).\n","sig":null,"attributes":[{"value":"/ Use fixed 9 subsecond digits. This corresponds to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":45784,"byte_end":45837,"line_start":65,"line_end":65,"column_start":5,"column_end":58}},{"value":"/ [Fixed::Nanosecond9](format/enum.Fixed.html#variant.Nanosecond9).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":45842,"byte_end":45911,"line_start":66,"line_end":66,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3482},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":46157,"byte_end":46163,"line_start":72,"line_end":72,"column_start":5,"column_end":11},"name":"AutoSi","qualname":"::datetime::SecondsFormat::AutoSi","value":"SecondsFormat::AutoSi","parent":{"krate":0,"index":3473},"children":[],"decl_id":null,"docs":" Automatically select one of `Secs`, `Millis`, `Micros`, or `Nanos` to\n display all available non-zero sub-second digits.  This corresponds to\n [Fixed::Nanosecond](format/enum.Fixed.html#variant.Nanosecond).\n","sig":null,"attributes":[{"value":"/ Automatically select one of `Secs`, `Millis`, `Micros`, or `Nanos` to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":45928,"byte_end":46001,"line_start":69,"line_end":69,"column_start":5,"column_end":78}},{"value":"/ display all available non-zero sub-second digits.  This corresponds to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":46006,"byte_end":46080,"line_start":70,"line_end":70,"column_start":5,"column_end":79}},{"value":"/ [Fixed::Nanosecond](format/enum.Fixed.html#variant.Nanosecond).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":46085,"byte_end":46152,"line_start":71,"line_end":71,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3484},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":46223,"byte_end":46238,"line_start":76,"line_end":76,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::datetime::SecondsFormat::__NonExhaustive","value":"SecondsFormat::__NonExhaustive","parent":{"krate":0,"index":3473},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3473},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":45390,"byte_end":45403,"line_start":53,"line_end":53,"column_start":10,"column_end":23},"name":"SecondsFormat","qualname":"::datetime::SecondsFormat","value":"enum SecondsFormat { Secs, Millis, Micros, Nanos, AutoSi, __NonExhaustive, }","parent":null,"children":[{"krate":0,"index":3474},{"krate":0,"index":3476},{"krate":0,"index":3478},{"krate":0,"index":3480},{"krate":0,"index":3482},{"krate":0,"index":3484}],"decl_id":null,"docs":" Specific formatting options for seconds. This may be extended in the\n future, so exhaustive matching in external code is not recommended.","sig":null,"attributes":[{"value":"/ Specific formatting options for seconds. This may be extended in the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":45127,"byte_end":45199,"line_start":48,"line_end":48,"column_start":1,"column_end":73}},{"value":"/ future, so exhaustive matching in external code is not recommended.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":45200,"byte_end":45271,"line_start":49,"line_end":49,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":45272,"byte_end":45275,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ See the `TimeZone::to_rfc3339_opts` function for usage.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":45276,"byte_end":45335,"line_start":51,"line_end":51,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":3497},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":46607,"byte_end":46615,"line_start":86,"line_end":86,"column_start":12,"column_end":20},"name":"DateTime","qualname":"::datetime::DateTime","value":"DateTime {  }","parent":null,"children":[{"krate":0,"index":3499},{"krate":0,"index":3500}],"decl_id":null,"docs":" ISO 8601 combined date and time with time zone.","sig":null,"attributes":[{"value":"/ ISO 8601 combined date and time with time zone.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":46243,"byte_end":46294,"line_start":79,"line_end":79,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":46295,"byte_end":46298,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ There are some constructors implemented here (the `from_*` methods), but","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":46299,"byte_end":46375,"line_start":81,"line_end":81,"column_start":1,"column_end":77}},{"value":"/ the general-purpose constructors are all via the methods on the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":46376,"byte_end":46443,"line_start":82,"line_end":82,"column_start":1,"column_end":68}},{"value":"/ [`TimeZone`](./offset/trait.TimeZone.html) implementations.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":46444,"byte_end":46507,"line_start":83,"line_end":83,"column_start":1,"column_end":64}}]},{"kind":"Const","id":{"krate":0,"index":751},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":46812,"byte_end":46824,"line_start":93,"line_end":93,"column_start":11,"column_end":23},"name":"MIN_DATETIME","qualname":"::datetime::MIN_DATETIME","value":"DateTime<Utc>","parent":null,"children":[],"decl_id":null,"docs":" The minimum possible `DateTime<Utc>`.\n","sig":null,"attributes":[{"value":"/ The minimum possible `DateTime<Utc>`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":46688,"byte_end":46729,"line_start":91,"line_end":91,"column_start":1,"column_end":42}},{"value":"deprecated(since = \"0.4.20\", note = \"Use DateTime::MIN_UTC instead\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":46730,"byte_end":46801,"line_start":92,"line_end":92,"column_start":1,"column_end":72}}]},{"kind":"Const","id":{"krate":0,"index":752},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":46992,"byte_end":47004,"line_start":96,"line_end":96,"column_start":11,"column_end":23},"name":"MAX_DATETIME","qualname":"::datetime::MAX_DATETIME","value":"DateTime<Utc>","parent":null,"children":[],"decl_id":null,"docs":" The maximum possible `DateTime<Utc>`.\n","sig":null,"attributes":[{"value":"/ The maximum possible `DateTime<Utc>`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":46868,"byte_end":46909,"line_start":94,"line_end":94,"column_start":1,"column_end":42}},{"value":"deprecated(since = \"0.4.20\", note = \"Use DateTime::MAX_UTC instead\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":46910,"byte_end":46981,"line_start":95,"line_end":95,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":755},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":47614,"byte_end":47622,"line_start":113,"line_end":113,"column_start":12,"column_end":20},"name":"from_utc","qualname":"<DateTime<Tz>>::from_utc","value":"fn from_utc(NaiveDateTime, Tz::Offset) -> DateTime<Tz>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` with given *UTC* datetime and offset.\n The local datetime should be constructed via the `TimeZone` trait.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` with given *UTC* datetime and offset.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":47087,"byte_end":47151,"line_start":99,"line_end":99,"column_start":5,"column_end":69}},{"value":"/ The local datetime should be constructed via the `TimeZone` trait.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":47156,"byte_end":47226,"line_start":100,"line_end":100,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":47231,"byte_end":47234,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":47239,"byte_end":47252,"line_start":102,"line_end":102,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":47257,"byte_end":47260,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":47265,"byte_end":47272,"line_start":104,"line_end":104,"column_start":5,"column_end":12}},{"value":"/ use chrono::{DateTime, TimeZone, NaiveDateTime, Utc};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":47277,"byte_end":47334,"line_start":105,"line_end":105,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":47339,"byte_end":47342,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ let dt = DateTime::<Utc>::from_utc(NaiveDateTime::from_timestamp(61, 0), Utc);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":47347,"byte_end":47429,"line_start":107,"line_end":107,"column_start":5,"column_end":87}},{"value":"/ assert_eq!(Utc.timestamp(61, 0), dt);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":47434,"byte_end":47475,"line_start":108,"line_end":108,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":47480,"byte_end":47487,"line_start":109,"line_end":109,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":47593,"byte_end":47602,"line_start":112,"line_end":112,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":756},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":48874,"byte_end":48884,"line_start":142,"line_end":142,"column_start":12,"column_end":22},"name":"from_local","qualname":"<DateTime<Tz>>::from_local","value":"fn from_local(NaiveDateTime, Tz::Offset) -> DateTime<Tz>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` with given **local** datetime and offset that\n presents local timezone.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` with given **local** datetime and offset that","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":47735,"byte_end":47807,"line_start":117,"line_end":117,"column_start":5,"column_end":77}},{"value":"/ presents local timezone.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":47812,"byte_end":47840,"line_start":118,"line_end":118,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":47845,"byte_end":47848,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":47853,"byte_end":47866,"line_start":120,"line_end":120,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":47871,"byte_end":47874,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":47879,"byte_end":47886,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ use chrono::DateTime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":47891,"byte_end":47916,"line_start":123,"line_end":123,"column_start":5,"column_end":30}},{"value":"/ use chrono::naive::NaiveDate;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":47921,"byte_end":47954,"line_start":124,"line_end":124,"column_start":5,"column_end":38}},{"value":"/ use chrono::offset::{Utc, FixedOffset};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":47959,"byte_end":48002,"line_start":125,"line_end":125,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":48007,"byte_end":48010,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ let naivedatetime_utc = NaiveDate::from_ymd(2000, 1, 12).and_hms(2, 0, 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":48015,"byte_end":48093,"line_start":127,"line_end":127,"column_start":5,"column_end":83}},{"value":"/ let datetime_utc = DateTime::<Utc>::from_utc(naivedatetime_utc, Utc);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":48098,"byte_end":48171,"line_start":128,"line_end":128,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":48176,"byte_end":48179,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ let timezone_east = FixedOffset::east(8 * 60 * 60);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":48184,"byte_end":48239,"line_start":130,"line_end":130,"column_start":5,"column_end":60}},{"value":"/ let naivedatetime_east = NaiveDate::from_ymd(2000, 1, 12).and_hms(10, 0, 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":48244,"byte_end":48324,"line_start":131,"line_end":131,"column_start":5,"column_end":85}},{"value":"/ let datetime_east = DateTime::<FixedOffset>::from_local(naivedatetime_east, timezone_east);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":48329,"byte_end":48424,"line_start":132,"line_end":132,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":48429,"byte_end":48432,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ let timezone_west = FixedOffset::west(7 * 60 * 60);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":48437,"byte_end":48492,"line_start":134,"line_end":134,"column_start":5,"column_end":60}},{"value":"/ let naivedatetime_west = NaiveDate::from_ymd(2000, 1, 11).and_hms(19, 0, 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":48497,"byte_end":48577,"line_start":135,"line_end":135,"column_start":5,"column_end":85}},{"value":"/ let datetime_west = DateTime::<FixedOffset>::from_local(naivedatetime_west, timezone_west);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":48582,"byte_end":48677,"line_start":136,"line_end":136,"column_start":5,"column_end":100}},{"value":"/ assert_eq!(datetime_east, datetime_utc.with_timezone(&timezone_east));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":48683,"byte_end":48757,"line_start":138,"line_end":138,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(datetime_west, datetime_utc.with_timezone(&timezone_west));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":48762,"byte_end":48836,"line_start":139,"line_end":139,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":48841,"byte_end":48848,"line_start":140,"line_end":140,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":48853,"byte_end":48862,"line_start":141,"line_end":141,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":757},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":49611,"byte_end":49615,"line_start":165,"line_end":165,"column_start":12,"column_end":16},"name":"date","qualname":"<DateTime<Tz>>::date","value":"fn date(&Self) -> Date<Tz>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves a date component","sig":null,"attributes":[{"value":"/ Retrieves a date component","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":49064,"byte_end":49094,"line_start":148,"line_end":148,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":49099,"byte_end":49102,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ Unless you are immediately planning on turning this into a `DateTime`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":49107,"byte_end":49180,"line_start":150,"line_end":150,"column_start":5,"column_end":78}},{"value":"/ with the same Timezone you should use the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":49185,"byte_end":49230,"line_start":151,"line_end":151,"column_start":5,"column_end":50}},{"value":"/ [`date_naive`](DateTime::date_naive) method.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":49235,"byte_end":49283,"line_start":152,"line_end":152,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":49288,"byte_end":49291,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":49296,"byte_end":49303,"line_start":154,"line_end":154,"column_start":5,"column_end":12}},{"value":"/ use chrono::prelude::*;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":49308,"byte_end":49335,"line_start":155,"line_end":155,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":49340,"byte_end":49343,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ let date: Date<Utc> = Utc.ymd(2020, 1, 1);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":49348,"byte_end":49394,"line_start":157,"line_end":157,"column_start":5,"column_end":51}},{"value":"/ let dt: DateTime<Utc> = date.and_hms(0, 0, 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":49399,"byte_end":49449,"line_start":158,"line_end":158,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":49454,"byte_end":49457,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(dt.date(), date);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":49462,"byte_end":49494,"line_start":160,"line_end":160,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":49499,"byte_end":49502,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(dt.date().and_hms(1, 1, 1), date.and_hms(1, 1, 1));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":49507,"byte_end":49573,"line_start":162,"line_end":162,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":49578,"byte_end":49585,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":49590,"byte_end":49599,"line_start":164,"line_end":164,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":758},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":50286,"byte_end":50296,"line_start":182,"line_end":182,"column_start":12,"column_end":22},"name":"date_naive","qualname":"<DateTime<Tz>>::date_naive","value":"fn date_naive(&Self) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the Date without an associated timezone","sig":null,"attributes":[{"value":"/ Retrieves the Date without an associated timezone","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":49719,"byte_end":49772,"line_start":169,"line_end":169,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":49777,"byte_end":49780,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ [`NaiveDate`] is a more well-defined type, and has more traits implemented on it,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":49785,"byte_end":49870,"line_start":171,"line_end":171,"column_start":5,"column_end":90}},{"value":"/ so should be preferred to [`Date`] any time you truly want to operate on Dates.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":49875,"byte_end":49958,"line_start":172,"line_end":172,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":49963,"byte_end":49966,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":49971,"byte_end":49978,"line_start":174,"line_end":174,"column_start":5,"column_end":12}},{"value":"/ use chrono::prelude::*;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":49983,"byte_end":50010,"line_start":175,"line_end":175,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":50015,"byte_end":50018,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ let date: DateTime<Utc> = Utc.ymd(2020, 1, 1).and_hms(0, 0, 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":50023,"byte_end":50090,"line_start":177,"line_end":177,"column_start":5,"column_end":72}},{"value":"/ let other: DateTime<FixedOffset> = FixedOffset::east(23).ymd(2020, 1, 1).and_hms(0, 0, 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":50095,"byte_end":50189,"line_start":178,"line_end":178,"column_start":5,"column_end":99}},{"value":"/ assert_eq!(date.date_naive(), other.date_naive());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":50194,"byte_end":50248,"line_start":179,"line_end":179,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":50253,"byte_end":50260,"line_start":180,"line_end":180,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":50265,"byte_end":50274,"line_start":181,"line_end":181,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":759},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":50561,"byte_end":50565,"line_start":190,"line_end":190,"column_start":12,"column_end":16},"name":"time","qualname":"<DateTime<Tz>>::time","value":"fn time(&Self) -> NaiveTime","parent":null,"children":[],"decl_id":null,"docs":" Retrieves a time component.\n Unlike `date`, this is not associated to the time zone.\n","sig":null,"attributes":[{"value":"/ Retrieves a time component.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":50440,"byte_end":50471,"line_start":187,"line_end":187,"column_start":5,"column_end":36}},{"value":"/ Unlike `date`, this is not associated to the time zone.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":50476,"byte_end":50535,"line_start":188,"line_end":188,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":50540,"byte_end":50549,"line_start":189,"line_end":189,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":760},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":50782,"byte_end":50791,"line_start":197,"line_end":197,"column_start":12,"column_end":21},"name":"timestamp","qualname":"<DateTime<Tz>>::timestamp","value":"fn timestamp(&Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of non-leap seconds since January 1, 1970 0:00:00 UTC\n (aka \"UNIX timestamp\").\n","sig":null,"attributes":[{"value":"/ Returns the number of non-leap seconds since January 1, 1970 0:00:00 UTC","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":50648,"byte_end":50724,"line_start":194,"line_end":194,"column_start":5,"column_end":81}},{"value":"/ (aka \"UNIX timestamp\").","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":50729,"byte_end":50756,"line_start":195,"line_end":195,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":50761,"byte_end":50770,"line_start":196,"line_end":196,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":761},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":51610,"byte_end":51626,"line_start":221,"line_end":221,"column_start":12,"column_end":28},"name":"timestamp_millis","qualname":"<DateTime<Tz>>::timestamp_millis","value":"fn timestamp_millis(&Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of non-leap-milliseconds since January 1, 1970 UTC","sig":null,"attributes":[{"value":"/ Returns the number of non-leap-milliseconds since January 1, 1970 UTC","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":50853,"byte_end":50926,"line_start":201,"line_end":201,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":50931,"byte_end":50934,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ Note that this does reduce the number of years that can be represented","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":50939,"byte_end":51013,"line_start":203,"line_end":203,"column_start":5,"column_end":79}},{"value":"/ from ~584 Billion to ~584 Million. (If this is a problem, please file","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":51018,"byte_end":51091,"line_start":204,"line_end":204,"column_start":5,"column_end":78}},{"value":"/ an issue to let me know what domain needs millisecond precision over","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":51096,"byte_end":51168,"line_start":205,"line_end":205,"column_start":5,"column_end":77}},{"value":"/ billions of years, I'm curious.)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":51173,"byte_end":51209,"line_start":206,"line_end":206,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":51214,"byte_end":51217,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":51222,"byte_end":51235,"line_start":208,"line_end":208,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":51240,"byte_end":51243,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":51248,"byte_end":51255,"line_start":210,"line_end":210,"column_start":5,"column_end":12}},{"value":"/ use chrono::Utc;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":51260,"byte_end":51280,"line_start":211,"line_end":211,"column_start":5,"column_end":25}},{"value":"/ use chrono::TimeZone;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":51285,"byte_end":51310,"line_start":212,"line_end":212,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":51315,"byte_end":51318,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ let dt = Utc.ymd(1970, 1, 1).and_hms_milli(0, 0, 1, 444);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":51323,"byte_end":51384,"line_start":214,"line_end":214,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(dt.timestamp_millis(), 1_444);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":51389,"byte_end":51434,"line_start":215,"line_end":215,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":51439,"byte_end":51442,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ let dt = Utc.ymd(2001, 9, 9).and_hms_milli(1, 46, 40, 555);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":51447,"byte_end":51510,"line_start":217,"line_end":217,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(dt.timestamp_millis(), 1_000_000_000_555);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":51515,"byte_end":51572,"line_start":218,"line_end":218,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":51577,"byte_end":51584,"line_start":219,"line_end":219,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":51589,"byte_end":51598,"line_start":220,"line_end":220,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":762},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":52453,"byte_end":52469,"line_start":245,"line_end":245,"column_start":12,"column_end":28},"name":"timestamp_micros","qualname":"<DateTime<Tz>>::timestamp_micros","value":"fn timestamp_micros(&Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of non-leap-microseconds since January 1, 1970 UTC","sig":null,"attributes":[{"value":"/ Returns the number of non-leap-microseconds since January 1, 1970 UTC","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":51695,"byte_end":51768,"line_start":225,"line_end":225,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":51773,"byte_end":51776,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ Note that this does reduce the number of years that can be represented","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":51781,"byte_end":51855,"line_start":227,"line_end":227,"column_start":5,"column_end":79}},{"value":"/ from ~584 Billion to ~584 Thousand. (If this is a problem, please file","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":51860,"byte_end":51934,"line_start":228,"line_end":228,"column_start":5,"column_end":79}},{"value":"/ an issue to let me know what domain needs microsecond precision over","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":51939,"byte_end":52011,"line_start":229,"line_end":229,"column_start":5,"column_end":77}},{"value":"/ millennia, I'm curious.)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":52016,"byte_end":52044,"line_start":230,"line_end":230,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":52049,"byte_end":52052,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":52057,"byte_end":52070,"line_start":232,"line_end":232,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":52075,"byte_end":52078,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":52083,"byte_end":52090,"line_start":234,"line_end":234,"column_start":5,"column_end":12}},{"value":"/ use chrono::Utc;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":52095,"byte_end":52115,"line_start":235,"line_end":235,"column_start":5,"column_end":25}},{"value":"/ use chrono::TimeZone;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":52120,"byte_end":52145,"line_start":236,"line_end":236,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":52150,"byte_end":52153,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ let dt = Utc.ymd(1970, 1, 1).and_hms_micro(0, 0, 1, 444);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":52158,"byte_end":52219,"line_start":238,"line_end":238,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(dt.timestamp_micros(), 1_000_444);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":52224,"byte_end":52273,"line_start":239,"line_end":239,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":52278,"byte_end":52281,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ let dt = Utc.ymd(2001, 9, 9).and_hms_micro(1, 46, 40, 555);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":52286,"byte_end":52349,"line_start":241,"line_end":241,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(dt.timestamp_micros(), 1_000_000_000_000_555);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":52354,"byte_end":52415,"line_start":242,"line_end":242,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":52420,"byte_end":52427,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":52432,"byte_end":52441,"line_start":244,"line_end":244,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":763},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":53289,"byte_end":53304,"line_start":269,"line_end":269,"column_start":12,"column_end":27},"name":"timestamp_nanos","qualname":"<DateTime<Tz>>::timestamp_nanos","value":"fn timestamp_nanos(&Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of non-leap-nanoseconds since January 1, 1970 UTC","sig":null,"attributes":[{"value":"/ Returns the number of non-leap-nanoseconds since January 1, 1970 UTC","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":52538,"byte_end":52610,"line_start":249,"line_end":249,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":52615,"byte_end":52618,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ Note that this does reduce the number of years that can be represented","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":52623,"byte_end":52697,"line_start":251,"line_end":251,"column_start":5,"column_end":79}},{"value":"/ from ~584 Billion to ~584. (If this is a problem, please file","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":52702,"byte_end":52767,"line_start":252,"line_end":252,"column_start":5,"column_end":70}},{"value":"/ an issue to let me know what domain needs nanosecond precision over","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":52772,"byte_end":52843,"line_start":253,"line_end":253,"column_start":5,"column_end":76}},{"value":"/ millennia, I'm curious.)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":52848,"byte_end":52876,"line_start":254,"line_end":254,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":52881,"byte_end":52884,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":52889,"byte_end":52902,"line_start":256,"line_end":256,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":52907,"byte_end":52910,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":52915,"byte_end":52922,"line_start":258,"line_end":258,"column_start":5,"column_end":12}},{"value":"/ use chrono::Utc;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":52927,"byte_end":52947,"line_start":259,"line_end":259,"column_start":5,"column_end":25}},{"value":"/ use chrono::TimeZone;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":52952,"byte_end":52977,"line_start":260,"line_end":260,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":52982,"byte_end":52985,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ let dt = Utc.ymd(1970, 1, 1).and_hms_nano(0, 0, 1, 444);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":52990,"byte_end":53050,"line_start":262,"line_end":262,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(dt.timestamp_nanos(), 1_000_000_444);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":53055,"byte_end":53107,"line_start":263,"line_end":263,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":53112,"byte_end":53115,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ let dt = Utc.ymd(2001, 9, 9).and_hms_nano(1, 46, 40, 555);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":53120,"byte_end":53182,"line_start":265,"line_end":265,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(dt.timestamp_nanos(), 1_000_000_000_000_000_555);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":53187,"byte_end":53251,"line_start":266,"line_end":266,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":53256,"byte_end":53263,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":53268,"byte_end":53277,"line_start":268,"line_end":268,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":764},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":53634,"byte_end":53657,"line_start":279,"line_end":279,"column_start":12,"column_end":35},"name":"timestamp_subsec_millis","qualname":"<DateTime<Tz>>::timestamp_subsec_millis","value":"fn timestamp_subsec_millis(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of milliseconds since the last second boundary","sig":null,"attributes":[{"value":"/ Returns the number of milliseconds since the last second boundary","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":53372,"byte_end":53441,"line_start":273,"line_end":273,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":53446,"byte_end":53449,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ warning: in event of a leap second, this may exceed 999","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":53454,"byte_end":53513,"line_start":275,"line_end":275,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":53518,"byte_end":53521,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ note: this is not the number of milliseconds since January 1, 1970 0:00:00 UTC","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":53526,"byte_end":53608,"line_start":277,"line_end":277,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":53613,"byte_end":53622,"line_start":278,"line_end":278,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":765},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":53999,"byte_end":54022,"line_start":289,"line_end":289,"column_start":12,"column_end":35},"name":"timestamp_subsec_micros","qualname":"<DateTime<Tz>>::timestamp_subsec_micros","value":"fn timestamp_subsec_micros(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of microseconds since the last second boundary","sig":null,"attributes":[{"value":"/ Returns the number of microseconds since the last second boundary","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":53733,"byte_end":53802,"line_start":283,"line_end":283,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":53807,"byte_end":53810,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ warning: in event of a leap second, this may exceed 999_999","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":53815,"byte_end":53878,"line_start":285,"line_end":285,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":53883,"byte_end":53886,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ note: this is not the number of microseconds since January 1, 1970 0:00:00 UTC","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":53891,"byte_end":53973,"line_start":287,"line_end":287,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":53978,"byte_end":53987,"line_start":288,"line_end":288,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":766},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":54366,"byte_end":54388,"line_start":299,"line_end":299,"column_start":12,"column_end":34},"name":"timestamp_subsec_nanos","qualname":"<DateTime<Tz>>::timestamp_subsec_nanos","value":"fn timestamp_subsec_nanos(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of nanoseconds since the last second boundary","sig":null,"attributes":[{"value":"/ Returns the number of nanoseconds since the last second boundary","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":54098,"byte_end":54166,"line_start":293,"line_end":293,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":54171,"byte_end":54174,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ warning: in event of a leap second, this may exceed 999_999_999","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":54179,"byte_end":54246,"line_start":295,"line_end":295,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":54251,"byte_end":54254,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ note: this is not the number of nanoseconds since January 1, 1970 0:00:00 UTC","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":54259,"byte_end":54340,"line_start":297,"line_end":297,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":54345,"byte_end":54354,"line_start":298,"line_end":298,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":767},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":54533,"byte_end":54539,"line_start":305,"line_end":305,"column_start":12,"column_end":18},"name":"offset","qualname":"<DateTime<Tz>>::offset","value":"fn offset(&Self) -> &Tz::Offset","parent":null,"children":[],"decl_id":null,"docs":" Retrieves an associated offset from UTC.\n","sig":null,"attributes":[{"value":"/ Retrieves an associated offset from UTC.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":54463,"byte_end":54507,"line_start":303,"line_end":303,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":54512,"byte_end":54521,"line_start":304,"line_end":304,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":768},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":54660,"byte_end":54668,"line_start":311,"line_end":311,"column_start":12,"column_end":20},"name":"timezone","qualname":"<DateTime<Tz>>::timezone","value":"fn timezone(&Self) -> Tz","parent":null,"children":[],"decl_id":null,"docs":" Retrieves an associated time zone.\n","sig":null,"attributes":[{"value":"/ Retrieves an associated time zone.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":54596,"byte_end":54634,"line_start":309,"line_end":309,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":54639,"byte_end":54648,"line_start":310,"line_end":310,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":769},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":54918,"byte_end":54931,"line_start":318,"line_end":318,"column_start":12,"column_end":25},"name":"with_timezone","qualname":"<DateTime<Tz>>::with_timezone","value":"fn with_timezone<Tz2>(&Self, &Tz2) -> DateTime<Tz2> where Tz2: TimeZone","parent":null,"children":[],"decl_id":null,"docs":" Changes the associated time zone.\n The returned `DateTime` references the same instant of time from the perspective of the provided time zone.\n","sig":null,"attributes":[{"value":"/ Changes the associated time zone.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":54739,"byte_end":54776,"line_start":315,"line_end":315,"column_start":5,"column_end":42}},{"value":"/ The returned `DateTime` references the same instant of time from the perspective of the provided time zone.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":54781,"byte_end":54892,"line_start":316,"line_end":316,"column_start":5,"column_end":116}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":54897,"byte_end":54906,"line_start":317,"line_end":317,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":771},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":55184,"byte_end":55202,"line_start":326,"line_end":326,"column_start":12,"column_end":30},"name":"checked_add_signed","qualname":"<DateTime<Tz>>::checked_add_signed","value":"fn checked_add_signed(Self, OldDuration) -> Option<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Adds given `Duration` to the current date and time.","sig":null,"attributes":[{"value":"/ Adds given `Duration` to the current date and time.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":55039,"byte_end":55094,"line_start":322,"line_end":322,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":55099,"byte_end":55102,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when it will result in overflow.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":55107,"byte_end":55158,"line_start":324,"line_end":324,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":55163,"byte_end":55172,"line_start":325,"line_end":325,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":772},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":55559,"byte_end":55577,"line_start":336,"line_end":336,"column_start":12,"column_end":30},"name":"checked_sub_signed","qualname":"<DateTime<Tz>>::checked_sub_signed","value":"fn checked_sub_signed(Self, OldDuration) -> Option<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Subtracts given `Duration` from the current date and time.","sig":null,"attributes":[{"value":"/ Subtracts given `Duration` from the current date and time.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":55407,"byte_end":55469,"line_start":332,"line_end":332,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":55474,"byte_end":55477,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when it will result in overflow.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":55482,"byte_end":55533,"line_start":334,"line_end":334,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":55538,"byte_end":55547,"line_start":335,"line_end":335,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":773},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":55924,"byte_end":55945,"line_start":345,"line_end":345,"column_start":12,"column_end":33},"name":"signed_duration_since","qualname":"<DateTime<Tz>>::signed_duration_since","value":"fn signed_duration_since<Tz2>(Self, DateTime<Tz2>) -> OldDuration where\nTz2: TimeZone","parent":null,"children":[],"decl_id":null,"docs":" Subtracts another `DateTime` from the current date and time.\n This does not overflow or underflow at all.\n","sig":null,"attributes":[{"value":"/ Subtracts another `DateTime` from the current date and time.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":55782,"byte_end":55846,"line_start":342,"line_end":342,"column_start":5,"column_end":69}},{"value":"/ This does not overflow or underflow at all.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":55851,"byte_end":55898,"line_start":343,"line_end":343,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":55903,"byte_end":55912,"line_start":344,"line_end":344,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":775},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":56144,"byte_end":56153,"line_start":351,"line_end":351,"column_start":12,"column_end":21},"name":"naive_utc","qualname":"<DateTime<Tz>>::naive_utc","value":"fn naive_utc(&Self) -> NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Returns a view to the naive UTC datetime.\n","sig":null,"attributes":[{"value":"/ Returns a view to the naive UTC datetime.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":56073,"byte_end":56118,"line_start":349,"line_end":349,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":56123,"byte_end":56132,"line_start":350,"line_end":350,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":776},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":56286,"byte_end":56297,"line_start":357,"line_end":357,"column_start":12,"column_end":23},"name":"naive_local","qualname":"<DateTime<Tz>>::naive_local","value":"fn naive_local(&Self) -> NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Returns a view to the naive local datetime.\n","sig":null,"attributes":[{"value":"/ Returns a view to the naive local datetime.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":56213,"byte_end":56260,"line_start":355,"line_end":355,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":56265,"byte_end":56274,"line_start":356,"line_end":356,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":777},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":56455,"byte_end":56466,"line_start":362,"line_end":362,"column_start":12,"column_end":23},"name":"years_since","qualname":"<DateTime<Tz>>::years_since","value":"fn years_since(&Self, Self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the elapsed years from now to the given [`DateTime`].\n","sig":null,"attributes":[{"value":"/ Retrieve the elapsed years from now to the given [`DateTime`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":56377,"byte_end":56443,"line_start":361,"line_end":361,"column_start":5,"column_end":71}}]},{"kind":"Const","id":{"krate":0,"index":778},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":56945,"byte_end":56952,"line_start":379,"line_end":379,"column_start":15,"column_end":22},"name":"MIN_UTC","qualname":"::datetime::DateTime::<Tz>::MIN_UTC","value":"DateTime<Utc>","parent":{"krate":0,"index":753},"children":[],"decl_id":null,"docs":" The minimum possible `DateTime<Utc>`.\n","sig":null,"attributes":[{"value":"/ The minimum possible `DateTime<Utc>`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":56889,"byte_end":56930,"line_start":378,"line_end":378,"column_start":5,"column_end":46}}]},{"kind":"Const","id":{"krate":0,"index":779},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":57086,"byte_end":57093,"line_start":381,"line_end":381,"column_start":15,"column_end":22},"name":"MAX_UTC","qualname":"::datetime::DateTime::<Tz>::MAX_UTC","value":"DateTime<Utc>","parent":{"krate":0,"index":753},"children":[],"decl_id":null,"docs":" The maximum possible `DateTime<Utc>`.\n","sig":null,"attributes":[{"value":"/ The maximum possible `DateTime<Utc>`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":57030,"byte_end":57071,"line_start":380,"line_end":380,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":781},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":57210,"byte_end":57217,"line_start":385,"line_end":385,"column_start":8,"column_end":15},"name":"default","qualname":"<DateTime<Utc> as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":783},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":57364,"byte_end":57371,"line_start":392,"line_end":392,"column_start":8,"column_end":15},"name":"default","qualname":"<DateTime<Local> as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":785},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":57500,"byte_end":57507,"line_start":398,"line_end":398,"column_start":8,"column_end":15},"name":"default","qualname":"<DateTime<FixedOffset> as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":787},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":58004,"byte_end":58008,"line_start":409,"line_end":409,"column_start":8,"column_end":12},"name":"from","qualname":"<DateTime<FixedOffset> as std::convert::From>::from","value":"fn from(DateTime<Utc>) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":" Convert this `DateTime<Utc>` instance into a `DateTime<FixedOffset>` instance.","sig":null,"attributes":[{"value":"/ Convert this `DateTime<Utc>` instance into a `DateTime<FixedOffset>` instance.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":57740,"byte_end":57822,"line_start":405,"line_end":405,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":57827,"byte_end":57830,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ Conversion is done via [`DateTime::with_timezone`]. Note that the converted value returned by","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":57835,"byte_end":57932,"line_start":407,"line_end":407,"column_start":5,"column_end":102}},{"value":"/ this will be created with a fixed timezone offset of 0.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":57937,"byte_end":57996,"line_start":408,"line_end":408,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":789},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":58449,"byte_end":58453,"line_start":420,"line_end":420,"column_start":8,"column_end":12},"name":"from","qualname":"<DateTime<Local> as std::convert::From>::from","value":"fn from(DateTime<Utc>) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":" Convert this `DateTime<Utc>` instance into a `DateTime<Local>` instance.","sig":null,"attributes":[{"value":"/ Convert this `DateTime<Utc>` instance into a `DateTime<Local>` instance.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":58248,"byte_end":58324,"line_start":417,"line_end":417,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":58329,"byte_end":58332,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ Conversion is performed via [`DateTime::with_timezone`], accounting for the difference in timezones.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":58337,"byte_end":58441,"line_start":419,"line_end":419,"column_start":5,"column_end":109}}]},{"kind":"Method","id":{"krate":0,"index":791},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":58875,"byte_end":58879,"line_start":431,"line_end":431,"column_start":8,"column_end":12},"name":"from","qualname":"<DateTime<Utc> as std::convert::From>::from","value":"fn from(DateTime<FixedOffset>) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":" Convert this `DateTime<FixedOffset>` instance into a `DateTime<Utc>` instance.","sig":null,"attributes":[{"value":"/ Convert this `DateTime<FixedOffset>` instance into a `DateTime<Utc>` instance.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":58664,"byte_end":58746,"line_start":427,"line_end":427,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":58751,"byte_end":58754,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ Conversion is performed via [`DateTime::with_timezone`], accounting for the timezone","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":58759,"byte_end":58847,"line_start":429,"line_end":429,"column_start":5,"column_end":93}},{"value":"/ difference.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":58852,"byte_end":58867,"line_start":430,"line_end":430,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":793},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":59343,"byte_end":59347,"line_start":443,"line_end":443,"column_start":8,"column_end":12},"name":"from","qualname":"<DateTime<Local> as std::convert::From>::from","value":"fn from(DateTime<FixedOffset>) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":" Convert this `DateTime<FixedOffset>` instance into a `DateTime<Local>` instance.","sig":null,"attributes":[{"value":"/ Convert this `DateTime<FixedOffset>` instance into a `DateTime<Local>` instance.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":59126,"byte_end":59210,"line_start":439,"line_end":439,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":59215,"byte_end":59218,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ Conversion is performed via [`DateTime::with_timezone`]. Returns the equivalent value in local","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":59223,"byte_end":59321,"line_start":441,"line_end":441,"column_start":5,"column_end":103}},{"value":"/ time.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":59326,"byte_end":59335,"line_start":442,"line_end":442,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":795},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":59789,"byte_end":59793,"line_start":455,"line_end":455,"column_start":8,"column_end":12},"name":"from","qualname":"<DateTime<Utc> as std::convert::From>::from","value":"fn from(DateTime<Local>) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":" Convert this `DateTime<Local>` instance into a `DateTime<Utc>` instance.","sig":null,"attributes":[{"value":"/ Convert this `DateTime<Local>` instance into a `DateTime<Utc>` instance.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":59580,"byte_end":59656,"line_start":451,"line_end":451,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":59661,"byte_end":59664,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ Conversion is performed via [`DateTime::with_timezone`], accounting for the difference in","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":59669,"byte_end":59762,"line_start":453,"line_end":453,"column_start":5,"column_end":98}},{"value":"/ timezones.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":59767,"byte_end":59781,"line_start":454,"line_end":454,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":797},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":60305,"byte_end":60309,"line_start":467,"line_end":467,"column_start":8,"column_end":12},"name":"from","qualname":"<DateTime<FixedOffset> as std::convert::From>::from","value":"fn from(DateTime<Local>) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":" Convert this `DateTime<Local>` instance into a `DateTime<FixedOffset>` instance.","sig":null,"attributes":[{"value":"/ Convert this `DateTime<Local>` instance into a `DateTime<FixedOffset>` instance.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":60034,"byte_end":60118,"line_start":463,"line_end":463,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":60123,"byte_end":60126,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ Conversion is performed via [`DateTime::with_timezone`]. Note that the converted value returned","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":60131,"byte_end":60230,"line_start":465,"line_end":465,"column_start":5,"column_end":104}},{"value":"/ by this will be created with a fixed timezone offset of 0.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":60235,"byte_end":60297,"line_start":466,"line_end":466,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":803},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":61335,"byte_end":61353,"line_start":494,"line_end":494,"column_start":12,"column_end":30},"name":"parse_from_rfc2822","qualname":"<DateTime<FixedOffset>>::parse_from_rfc2822","value":"fn parse_from_rfc2822(&str) -> ParseResult<DateTime<FixedOffset>>","parent":null,"children":[],"decl_id":null,"docs":" Parses an RFC 2822 date and time string such as `Tue, 1 Jul 2003 10:52:37 +0200`,\n then returns a new [`DateTime`] with a parsed [`FixedOffset`].","sig":null,"attributes":[{"value":"/ Parses an RFC 2822 date and time string such as `Tue, 1 Jul 2003 10:52:37 +0200`,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":60758,"byte_end":60843,"line_start":481,"line_end":481,"column_start":5,"column_end":90}},{"value":"/ then returns a new [`DateTime`] with a parsed [`FixedOffset`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":60848,"byte_end":60914,"line_start":482,"line_end":482,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":60919,"byte_end":60922,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ RFC 2822 is the internet message standard that specifies the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":60927,"byte_end":60991,"line_start":484,"line_end":484,"column_start":5,"column_end":69}},{"value":"/ representation of times in HTTP and email headers.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":60996,"byte_end":61050,"line_start":485,"line_end":485,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":61055,"byte_end":61058,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":61063,"byte_end":61070,"line_start":487,"line_end":487,"column_start":5,"column_end":12}},{"value":"/ # use chrono::{DateTime, FixedOffset, TimeZone};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":61075,"byte_end":61127,"line_start":488,"line_end":488,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":61132,"byte_end":61147,"line_start":489,"line_end":489,"column_start":5,"column_end":20}},{"value":"/     DateTime::parse_from_rfc2822(\"Wed, 18 Feb 2015 23:16:09 GMT\").unwrap(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":61152,"byte_end":61231,"line_start":490,"line_end":490,"column_start":5,"column_end":84}},{"value":"/     FixedOffset::east(0).ymd(2015, 2, 18).and_hms(23, 16, 9)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":61236,"byte_end":61300,"line_start":491,"line_end":491,"column_start":5,"column_end":69}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":61305,"byte_end":61311,"line_start":492,"line_end":492,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":61316,"byte_end":61323,"line_start":493,"line_end":493,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":805},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":61974,"byte_end":61992,"line_start":506,"line_end":506,"column_start":12,"column_end":30},"name":"parse_from_rfc3339","qualname":"<DateTime<FixedOffset>>::parse_from_rfc3339","value":"fn parse_from_rfc3339(&str) -> ParseResult<DateTime<FixedOffset>>","parent":null,"children":[],"decl_id":null,"docs":" Parses an RFC 3339 and ISO 8601 date and time string such as `1996-12-19T16:39:57-08:00`,\n then returns a new [`DateTime`] with a parsed [`FixedOffset`].","sig":null,"attributes":[{"value":"/ Parses an RFC 3339 and ISO 8601 date and time string such as `1996-12-19T16:39:57-08:00`,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":61601,"byte_end":61694,"line_start":501,"line_end":501,"column_start":5,"column_end":98}},{"value":"/ then returns a new [`DateTime`] with a parsed [`FixedOffset`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":61699,"byte_end":61765,"line_start":502,"line_end":502,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":61770,"byte_end":61773,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ Why isn't this named `parse_from_iso8601`? That's because ISO 8601 allows some freedom","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":61778,"byte_end":61868,"line_start":504,"line_end":504,"column_start":5,"column_end":95}},{"value":"/ over the syntax and RFC 3339 exercises that freedom to rigidly define a fixed format.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":61873,"byte_end":61962,"line_start":505,"line_end":505,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":807},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":63138,"byte_end":63152,"line_start":535,"line_end":535,"column_start":12,"column_end":26},"name":"parse_from_str","qualname":"<DateTime<FixedOffset>>::parse_from_str","value":"fn parse_from_str(&str, &str) -> ParseResult<DateTime<FixedOffset>>","parent":null,"children":[],"decl_id":null,"docs":" Parses a string with the specified format string and returns a new\n [`DateTime`] with a parsed [`FixedOffset`].","sig":null,"attributes":[{"value":"/ Parses a string with the specified format string and returns a new","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":62240,"byte_end":62310,"line_start":513,"line_end":513,"column_start":5,"column_end":75}},{"value":"/ [`DateTime`] with a parsed [`FixedOffset`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":62315,"byte_end":62362,"line_start":514,"line_end":514,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":62367,"byte_end":62370,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ See the [`crate::format::strftime`] module on the supported escape","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":62375,"byte_end":62445,"line_start":516,"line_end":516,"column_start":5,"column_end":75}},{"value":"/ sequences.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":62450,"byte_end":62464,"line_start":517,"line_end":517,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":62469,"byte_end":62472,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ See also [`TimeZone::datetime_from_str`] which gives a local","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":62477,"byte_end":62541,"line_start":519,"line_end":519,"column_start":5,"column_end":69}},{"value":"/ [`DateTime`] on specific time zone.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":62546,"byte_end":62585,"line_start":520,"line_end":520,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":62590,"byte_end":62593,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ Note that this method *requires a timezone* in the string. See","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":62598,"byte_end":62664,"line_start":522,"line_end":522,"column_start":5,"column_end":71}},{"value":"/ [`NaiveDateTime::parse_from_str`]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":62669,"byte_end":62706,"line_start":523,"line_end":523,"column_start":5,"column_end":42}},{"value":"/ for a version that does not require a timezone in the to-be-parsed str.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":62711,"byte_end":62786,"line_start":524,"line_end":524,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":62791,"byte_end":62794,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":62799,"byte_end":62812,"line_start":526,"line_end":526,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":62817,"byte_end":62820,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":62825,"byte_end":62836,"line_start":528,"line_end":528,"column_start":5,"column_end":16}},{"value":"/ use chrono::{DateTime, FixedOffset, TimeZone};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":62841,"byte_end":62891,"line_start":529,"line_end":529,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":62896,"byte_end":62899,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ let dt = DateTime::parse_from_str(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":62904,"byte_end":62942,"line_start":531,"line_end":531,"column_start":5,"column_end":43}},{"value":"/     \"1983 Apr 13 12:09:14.274 +0000\", \"%Y %b %d %H:%M:%S%.3f %z\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":62947,"byte_end":63017,"line_start":532,"line_end":532,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(dt, Ok(FixedOffset::east(0).ymd(1983, 4, 13).and_hms_milli(12, 9, 14, 274)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":63022,"byte_end":63114,"line_start":533,"line_end":533,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":63119,"byte_end":63126,"line_start":534,"line_end":534,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":810},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":63578,"byte_end":63588,"line_start":548,"line_end":548,"column_start":12,"column_end":22},"name":"to_rfc2822","qualname":"<DateTime<Tz>>::to_rfc2822","value":"fn to_rfc2822(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Returns an RFC 2822 date and time string such as `Tue, 1 Jul 2003 10:52:37 +0200`.\n","sig":null,"attributes":[{"value":"/ Returns an RFC 2822 date and time string such as `Tue, 1 Jul 2003 10:52:37 +0200`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":63422,"byte_end":63508,"line_start":546,"line_end":546,"column_start":5,"column_end":91}},{"value":"cfg(any(feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":63513,"byte_end":63566,"line_start":547,"line_end":547,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":812},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":63912,"byte_end":63922,"line_start":555,"line_end":555,"column_start":12,"column_end":22},"name":"to_rfc3339","qualname":"<DateTime<Tz>>::to_rfc3339","value":"fn to_rfc3339(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Returns an RFC 3339 and ISO 8601 date and time string such as `1996-12-19T16:39:57-08:00`.\n","sig":null,"attributes":[{"value":"/ Returns an RFC 3339 and ISO 8601 date and time string such as `1996-12-19T16:39:57-08:00`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":63748,"byte_end":63842,"line_start":553,"line_end":553,"column_start":5,"column_end":99}},{"value":"cfg(any(feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":63847,"byte_end":63900,"line_start":554,"line_end":554,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":814},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":65274,"byte_end":65289,"line_start":585,"line_end":585,"column_start":12,"column_end":27},"name":"to_rfc3339_opts","qualname":"<DateTime<Tz>>::to_rfc3339_opts","value":"fn to_rfc3339_opts(&Self, SecondsFormat, bool) -> String","parent":null,"children":[],"decl_id":null,"docs":" Return an RFC 3339 and ISO 8601 date and time string with subseconds\n formatted as per a `SecondsFormat`.","sig":null,"attributes":[{"value":"/ Return an RFC 3339 and ISO 8601 date and time string with subseconds","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":64082,"byte_end":64154,"line_start":560,"line_end":560,"column_start":5,"column_end":77}},{"value":"/ formatted as per a `SecondsFormat`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":64159,"byte_end":64198,"line_start":561,"line_end":561,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":64203,"byte_end":64206,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ If passed `use_z` true and the timezone is UTC (offset 0), use 'Z', as","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":64211,"byte_end":64285,"line_start":563,"line_end":563,"column_start":5,"column_end":79}},{"value":"/ per [`Fixed::TimezoneOffsetColonZ`] If passed `use_z` false, use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":64290,"byte_end":64358,"line_start":564,"line_end":564,"column_start":5,"column_end":73}},{"value":"/ [`Fixed::TimezoneOffsetColon`]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":64363,"byte_end":64397,"line_start":565,"line_end":565,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":64402,"byte_end":64405,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":64410,"byte_end":64424,"line_start":567,"line_end":567,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":64429,"byte_end":64432,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":64437,"byte_end":64448,"line_start":569,"line_end":569,"column_start":5,"column_end":16}},{"value":"/ # use chrono::{DateTime, FixedOffset, SecondsFormat, TimeZone, Utc};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":64453,"byte_end":64525,"line_start":570,"line_end":570,"column_start":5,"column_end":77}},{"value":"/ let dt = Utc.ymd(2018, 1, 26).and_hms_micro(18, 30, 9, 453_829);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":64530,"byte_end":64598,"line_start":571,"line_end":571,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(dt.to_rfc3339_opts(SecondsFormat::Millis, false),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":64603,"byte_end":64667,"line_start":572,"line_end":572,"column_start":5,"column_end":69}},{"value":"/            \"2018-01-26T18:30:09.453+00:00\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":64672,"byte_end":64720,"line_start":573,"line_end":573,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(dt.to_rfc3339_opts(SecondsFormat::Millis, true),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":64725,"byte_end":64788,"line_start":574,"line_end":574,"column_start":5,"column_end":68}},{"value":"/            \"2018-01-26T18:30:09.453Z\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":64793,"byte_end":64836,"line_start":575,"line_end":575,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(dt.to_rfc3339_opts(SecondsFormat::Secs, true),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":64841,"byte_end":64902,"line_start":576,"line_end":576,"column_start":5,"column_end":66}},{"value":"/            \"2018-01-26T18:30:09Z\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":64907,"byte_end":64946,"line_start":577,"line_end":577,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":64951,"byte_end":64954,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ let pst = FixedOffset::east(8 * 60 * 60);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":64959,"byte_end":65004,"line_start":579,"line_end":579,"column_start":5,"column_end":50}},{"value":"/ let dt = pst.ymd(2018, 1, 26).and_hms_micro(10, 30, 9, 453_829);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":65009,"byte_end":65077,"line_start":580,"line_end":580,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(dt.to_rfc3339_opts(SecondsFormat::Secs, true),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":65082,"byte_end":65143,"line_start":581,"line_end":581,"column_start":5,"column_end":66}},{"value":"/            \"2018-01-26T10:30:09+08:00\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":65148,"byte_end":65192,"line_start":582,"line_end":582,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":65197,"byte_end":65204,"line_start":583,"line_end":583,"column_start":5,"column_end":12}},{"value":"cfg(any(feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":65209,"byte_end":65262,"line_start":584,"line_end":584,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":821},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":66912,"byte_end":66929,"line_start":630,"line_end":630,"column_start":12,"column_end":29},"name":"format_with_items","qualname":"<DateTime<Tz>>::format_with_items","value":"fn format_with_items<'a, I, B>(&Self, I) -> DelayedFormat<I> where\nI: Iterator<Item = B> + Clone, B: Borrow<Item>","parent":null,"children":[],"decl_id":null,"docs":" Formats the combined date and time with the specified formatting items.\n","sig":null,"attributes":[{"value":"/ Formats the combined date and time with the specified formatting items.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":66753,"byte_end":66828,"line_start":627,"line_end":627,"column_start":5,"column_end":80}},{"value":"cfg(any(feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":66833,"byte_end":66886,"line_start":628,"line_end":628,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":66891,"byte_end":66900,"line_start":629,"line_end":629,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":825},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":67764,"byte_end":67770,"line_start":653,"line_end":653,"column_start":12,"column_end":18},"name":"format","qualname":"<DateTime<Tz>>::format","value":"fn format<'a>(&Self, &'a str) -> DelayedFormat<StrftimeItems>","parent":null,"children":[],"decl_id":null,"docs":" Formats the combined date and time with the specified format string.\n See the [`crate::format::strftime`] module\n on the supported escape sequences.","sig":null,"attributes":[{"value":"/ Formats the combined date and time with the specified format string.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":67212,"byte_end":67284,"line_start":639,"line_end":639,"column_start":5,"column_end":77}},{"value":"/ See the [`crate::format::strftime`] module","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":67289,"byte_end":67335,"line_start":640,"line_end":640,"column_start":5,"column_end":51}},{"value":"/ on the supported escape sequences.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":67340,"byte_end":67378,"line_start":641,"line_end":641,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":67383,"byte_end":67386,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":67391,"byte_end":67404,"line_start":643,"line_end":643,"column_start":5,"column_end":18}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":67409,"byte_end":67420,"line_start":644,"line_end":644,"column_start":5,"column_end":16}},{"value":"/ use chrono::prelude::*;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":67425,"byte_end":67452,"line_start":645,"line_end":645,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":67457,"byte_end":67460,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ let date_time: DateTime<Utc> = Utc.ymd(2017, 04, 02).and_hms(12, 50, 32);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":67465,"byte_end":67542,"line_start":647,"line_end":647,"column_start":5,"column_end":82}},{"value":"/ let formatted = format!(\"{}\", date_time.format(\"%d/%m/%Y %H:%M\"));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":67547,"byte_end":67617,"line_start":648,"line_end":648,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(formatted, \"02/04/2017 12:50\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":67622,"byte_end":67668,"line_start":649,"line_end":649,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":67673,"byte_end":67680,"line_start":650,"line_end":650,"column_start":5,"column_end":12}},{"value":"cfg(any(feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":67685,"byte_end":67738,"line_start":651,"line_end":651,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":67743,"byte_end":67752,"line_start":652,"line_end":652,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":829},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":69054,"byte_end":69058,"line_start":697,"line_end":697,"column_start":8,"column_end":12},"name":"year","qualname":"<DateTime<Tz> as traits::Datelike>::year","value":"fn year(&Self) -> i32","parent":{"krate":0,"index":3411},"children":[],"decl_id":{"krate":0,"index":3412},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":69037,"byte_end":69046,"line_start":696,"line_end":696,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":830},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":69136,"byte_end":69141,"line_start":701,"line_end":701,"column_start":8,"column_end":13},"name":"month","qualname":"<DateTime<Tz> as traits::Datelike>::month","value":"fn month(&Self) -> u32","parent":{"krate":0,"index":3411},"children":[],"decl_id":{"krate":0,"index":3414},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":69119,"byte_end":69128,"line_start":700,"line_end":700,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":831},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":69220,"byte_end":69226,"line_start":705,"line_end":705,"column_start":8,"column_end":14},"name":"month0","qualname":"<DateTime<Tz> as traits::Datelike>::month0","value":"fn month0(&Self) -> u32","parent":{"krate":0,"index":3411},"children":[],"decl_id":{"krate":0,"index":3415},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":69203,"byte_end":69212,"line_start":704,"line_end":704,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":832},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":69306,"byte_end":69309,"line_start":709,"line_end":709,"column_start":8,"column_end":11},"name":"day","qualname":"<DateTime<Tz> as traits::Datelike>::day","value":"fn day(&Self) -> u32","parent":{"krate":0,"index":3411},"children":[],"decl_id":{"krate":0,"index":3416},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":69289,"byte_end":69298,"line_start":708,"line_end":708,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":833},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":69386,"byte_end":69390,"line_start":713,"line_end":713,"column_start":8,"column_end":12},"name":"day0","qualname":"<DateTime<Tz> as traits::Datelike>::day0","value":"fn day0(&Self) -> u32","parent":{"krate":0,"index":3411},"children":[],"decl_id":{"krate":0,"index":3417},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":69369,"byte_end":69378,"line_start":712,"line_end":712,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":834},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":69468,"byte_end":69475,"line_start":717,"line_end":717,"column_start":8,"column_end":15},"name":"ordinal","qualname":"<DateTime<Tz> as traits::Datelike>::ordinal","value":"fn ordinal(&Self) -> u32","parent":{"krate":0,"index":3411},"children":[],"decl_id":{"krate":0,"index":3418},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":69451,"byte_end":69460,"line_start":716,"line_end":716,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":835},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":69556,"byte_end":69564,"line_start":721,"line_end":721,"column_start":8,"column_end":16},"name":"ordinal0","qualname":"<DateTime<Tz> as traits::Datelike>::ordinal0","value":"fn ordinal0(&Self) -> u32","parent":{"krate":0,"index":3411},"children":[],"decl_id":{"krate":0,"index":3419},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":69539,"byte_end":69548,"line_start":720,"line_end":720,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":836},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":69646,"byte_end":69653,"line_start":725,"line_end":725,"column_start":8,"column_end":15},"name":"weekday","qualname":"<DateTime<Tz> as traits::Datelike>::weekday","value":"fn weekday(&Self) -> Weekday","parent":{"krate":0,"index":3411},"children":[],"decl_id":{"krate":0,"index":3420},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":69629,"byte_end":69638,"line_start":724,"line_end":724,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":837},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":69738,"byte_end":69746,"line_start":729,"line_end":729,"column_start":8,"column_end":16},"name":"iso_week","qualname":"<DateTime<Tz> as traits::Datelike>::iso_week","value":"fn iso_week(&Self) -> IsoWeek","parent":{"krate":0,"index":3411},"children":[],"decl_id":{"krate":0,"index":3421},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":69721,"byte_end":69730,"line_start":728,"line_end":728,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":838},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":69833,"byte_end":69842,"line_start":734,"line_end":734,"column_start":8,"column_end":17},"name":"with_year","qualname":"<DateTime<Tz> as traits::Datelike>::with_year","value":"fn with_year(&Self, i32) -> Option<DateTime<Tz>>","parent":{"krate":0,"index":3411},"children":[],"decl_id":{"krate":0,"index":3422},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":69816,"byte_end":69825,"line_start":733,"line_end":733,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":840},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":69976,"byte_end":69986,"line_start":739,"line_end":739,"column_start":8,"column_end":18},"name":"with_month","qualname":"<DateTime<Tz> as traits::Datelike>::with_month","value":"fn with_month(&Self, u32) -> Option<DateTime<Tz>>","parent":{"krate":0,"index":3411},"children":[],"decl_id":{"krate":0,"index":3423},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":69959,"byte_end":69968,"line_start":738,"line_end":738,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":842},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":70123,"byte_end":70134,"line_start":744,"line_end":744,"column_start":8,"column_end":19},"name":"with_month0","qualname":"<DateTime<Tz> as traits::Datelike>::with_month0","value":"fn with_month0(&Self, u32) -> Option<DateTime<Tz>>","parent":{"krate":0,"index":3411},"children":[],"decl_id":{"krate":0,"index":3424},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":70106,"byte_end":70115,"line_start":743,"line_end":743,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":844},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":70274,"byte_end":70282,"line_start":749,"line_end":749,"column_start":8,"column_end":16},"name":"with_day","qualname":"<DateTime<Tz> as traits::Datelike>::with_day","value":"fn with_day(&Self, u32) -> Option<DateTime<Tz>>","parent":{"krate":0,"index":3411},"children":[],"decl_id":{"krate":0,"index":3425},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":70257,"byte_end":70266,"line_start":748,"line_end":748,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":846},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":70413,"byte_end":70422,"line_start":754,"line_end":754,"column_start":8,"column_end":17},"name":"with_day0","qualname":"<DateTime<Tz> as traits::Datelike>::with_day0","value":"fn with_day0(&Self, u32) -> Option<DateTime<Tz>>","parent":{"krate":0,"index":3411},"children":[],"decl_id":{"krate":0,"index":3426},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":70396,"byte_end":70405,"line_start":753,"line_end":753,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":848},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":70556,"byte_end":70568,"line_start":759,"line_end":759,"column_start":8,"column_end":20},"name":"with_ordinal","qualname":"<DateTime<Tz> as traits::Datelike>::with_ordinal","value":"fn with_ordinal(&Self, u32) -> Option<DateTime<Tz>>","parent":{"krate":0,"index":3411},"children":[],"decl_id":{"krate":0,"index":3427},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":70539,"byte_end":70548,"line_start":758,"line_end":758,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":850},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":70711,"byte_end":70724,"line_start":764,"line_end":764,"column_start":8,"column_end":21},"name":"with_ordinal0","qualname":"<DateTime<Tz> as traits::Datelike>::with_ordinal0","value":"fn with_ordinal0(&Self, u32) -> Option<DateTime<Tz>>","parent":{"krate":0,"index":3411},"children":[],"decl_id":{"krate":0,"index":3428},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":70694,"byte_end":70703,"line_start":763,"line_end":763,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":854},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":70919,"byte_end":70923,"line_start":771,"line_end":771,"column_start":8,"column_end":12},"name":"hour","qualname":"<DateTime<Tz> as traits::Timelike>::hour","value":"fn hour(&Self) -> u32","parent":{"krate":0,"index":3430},"children":[],"decl_id":{"krate":0,"index":3431},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":70902,"byte_end":70911,"line_start":770,"line_end":770,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":855},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":71001,"byte_end":71007,"line_start":775,"line_end":775,"column_start":8,"column_end":14},"name":"minute","qualname":"<DateTime<Tz> as traits::Timelike>::minute","value":"fn minute(&Self) -> u32","parent":{"krate":0,"index":3430},"children":[],"decl_id":{"krate":0,"index":3433},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":70984,"byte_end":70993,"line_start":774,"line_end":774,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":856},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":71087,"byte_end":71093,"line_start":779,"line_end":779,"column_start":8,"column_end":14},"name":"second","qualname":"<DateTime<Tz> as traits::Timelike>::second","value":"fn second(&Self) -> u32","parent":{"krate":0,"index":3430},"children":[],"decl_id":{"krate":0,"index":3434},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":71070,"byte_end":71079,"line_start":778,"line_end":778,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":857},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":71173,"byte_end":71183,"line_start":783,"line_end":783,"column_start":8,"column_end":18},"name":"nanosecond","qualname":"<DateTime<Tz> as traits::Timelike>::nanosecond","value":"fn nanosecond(&Self) -> u32","parent":{"krate":0,"index":3430},"children":[],"decl_id":{"krate":0,"index":3435},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":71156,"byte_end":71165,"line_start":782,"line_end":782,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":858},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":71268,"byte_end":71277,"line_start":788,"line_end":788,"column_start":8,"column_end":17},"name":"with_hour","qualname":"<DateTime<Tz> as traits::Timelike>::with_hour","value":"fn with_hour(&Self, u32) -> Option<DateTime<Tz>>","parent":{"krate":0,"index":3430},"children":[],"decl_id":{"krate":0,"index":3436},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":71251,"byte_end":71260,"line_start":787,"line_end":787,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":860},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":71411,"byte_end":71422,"line_start":793,"line_end":793,"column_start":8,"column_end":19},"name":"with_minute","qualname":"<DateTime<Tz> as traits::Timelike>::with_minute","value":"fn with_minute(&Self, u32) -> Option<DateTime<Tz>>","parent":{"krate":0,"index":3430},"children":[],"decl_id":{"krate":0,"index":3437},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":71394,"byte_end":71403,"line_start":792,"line_end":792,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":862},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":71556,"byte_end":71567,"line_start":798,"line_end":798,"column_start":8,"column_end":19},"name":"with_second","qualname":"<DateTime<Tz> as traits::Timelike>::with_second","value":"fn with_second(&Self, u32) -> Option<DateTime<Tz>>","parent":{"krate":0,"index":3430},"children":[],"decl_id":{"krate":0,"index":3438},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":71539,"byte_end":71548,"line_start":797,"line_end":797,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":864},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":71701,"byte_end":71716,"line_start":803,"line_end":803,"column_start":8,"column_end":23},"name":"with_nanosecond","qualname":"<DateTime<Tz> as traits::Timelike>::with_nanosecond","value":"fn with_nanosecond(&Self, u32) -> Option<DateTime<Tz>>","parent":{"krate":0,"index":3430},"children":[],"decl_id":{"krate":0,"index":3439},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":71684,"byte_end":71693,"line_start":802,"line_end":802,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":873},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":72158,"byte_end":72160,"line_start":813,"line_end":813,"column_start":8,"column_end":10},"name":"eq","qualname":"<DateTime<Tz> as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &DateTime<Tz2>) -> bool","parent":{"krate":2,"index":2831},"children":[],"decl_id":{"krate":2,"index":2833},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":879},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":72953,"byte_end":72964,"line_start":836,"line_end":836,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<DateTime<Tz> as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp(&Self, &DateTime<Tz2>) -> Option<Ordering>","parent":{"krate":2,"index":2877},"children":[],"decl_id":{"krate":2,"index":2879},"docs":" Compare two DateTimes based on their true time, ignoring time zones","sig":null,"attributes":[{"value":"/ Compare two DateTimes based on their true time, ignoring time zones","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":72376,"byte_end":72447,"line_start":821,"line_end":821,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":72452,"byte_end":72455,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":72460,"byte_end":72473,"line_start":823,"line_end":823,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":72478,"byte_end":72481,"line_start":824,"line_end":824,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":72486,"byte_end":72493,"line_start":825,"line_end":825,"column_start":5,"column_end":12}},{"value":"/ use chrono::prelude::*;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":72498,"byte_end":72525,"line_start":826,"line_end":826,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":72530,"byte_end":72533,"line_start":827,"line_end":827,"column_start":5,"column_end":8}},{"value":"/ let earlier = Utc.ymd(2015, 5, 15).and_hms(2, 0, 0).with_timezone(&FixedOffset::west(1 * 3600));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":72538,"byte_end":72638,"line_start":828,"line_end":828,"column_start":5,"column_end":105}},{"value":"/ let later   = Utc.ymd(2015, 5, 15).and_hms(3, 0, 0).with_timezone(&FixedOffset::west(5 * 3600));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":72643,"byte_end":72743,"line_start":829,"line_end":829,"column_start":5,"column_end":105}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":72748,"byte_end":72751,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(earlier.to_string(), \"2015-05-15 01:00:00 -01:00\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":72756,"byte_end":72822,"line_start":831,"line_end":831,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(later.to_string(), \"2015-05-14 22:00:00 -05:00\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":72827,"byte_end":72891,"line_start":832,"line_end":832,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":72896,"byte_end":72899,"line_start":833,"line_end":833,"column_start":5,"column_end":8}},{"value":"/ assert!(later > earlier);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":72904,"byte_end":72933,"line_start":834,"line_end":834,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":72938,"byte_end":72945,"line_start":835,"line_end":835,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":882},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":73126,"byte_end":73129,"line_start":842,"line_end":842,"column_start":8,"column_end":11},"name":"cmp","qualname":"<DateTime<Tz> as std::cmp::Ord>::cmp","value":"fn cmp(&Self, &DateTime<Tz>) -> Ordering","parent":{"krate":2,"index":2867},"children":[],"decl_id":{"krate":2,"index":2868},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":885},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":73281,"byte_end":73285,"line_start":848,"line_end":848,"column_start":8,"column_end":12},"name":"hash","qualname":"<DateTime<Tz> as std::hash::Hash>::hash","value":"fn hash<H>(&Self, &mut H) where H: hash::Hasher","parent":{"krate":2,"index":10324},"children":[],"decl_id":{"krate":2,"index":10325},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":890},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":73479,"byte_end":73482,"line_start":857,"line_end":857,"column_start":8,"column_end":11},"name":"add","qualname":"<DateTime<Tz> as std::ops::Add>::add","value":"fn add(Self, OldDuration) -> DateTime<Tz>","parent":{"krate":2,"index":3247},"children":[],"decl_id":{"krate":2,"index":3250},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":73462,"byte_end":73471,"line_start":856,"line_end":856,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":893},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":73696,"byte_end":73706,"line_start":864,"line_end":864,"column_start":8,"column_end":18},"name":"add_assign","qualname":"<DateTime<Tz> as std::ops::AddAssign>::add_assign","value":"fn add_assign(&mut Self, OldDuration)","parent":{"krate":2,"index":3278},"children":[],"decl_id":{"krate":2,"index":3280},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":73679,"byte_end":73688,"line_start":863,"line_end":863,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":897},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":74056,"byte_end":74059,"line_start":876,"line_end":876,"column_start":8,"column_end":11},"name":"sub","qualname":"<DateTime<Tz> as std::ops::Sub>::sub","value":"fn sub(Self, OldDuration) -> DateTime<Tz>","parent":{"krate":2,"index":3252},"children":[],"decl_id":{"krate":2,"index":3255},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":74039,"byte_end":74048,"line_start":875,"line_end":875,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":900},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":74273,"byte_end":74283,"line_start":883,"line_end":883,"column_start":8,"column_end":18},"name":"sub_assign","qualname":"<DateTime<Tz> as std::ops::SubAssign>::sub_assign","value":"fn sub_assign(&mut Self, OldDuration)","parent":{"krate":2,"index":3282},"children":[],"decl_id":{"krate":2,"index":3284},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":74256,"byte_end":74265,"line_start":882,"line_end":882,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":904},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":74632,"byte_end":74635,"line_start":895,"line_end":895,"column_start":8,"column_end":11},"name":"sub","qualname":"<DateTime<Tz> as std::ops::Sub>::sub","value":"fn sub(Self, DateTime<Tz>) -> OldDuration","parent":{"krate":2,"index":3252},"children":[],"decl_id":{"krate":2,"index":3255},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":74615,"byte_end":74624,"line_start":894,"line_end":894,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":907},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":74783,"byte_end":74786,"line_start":901,"line_end":901,"column_start":8,"column_end":11},"name":"fmt","qualname":"<DateTime<Tz> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":910},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":75001,"byte_end":75004,"line_start":910,"line_end":910,"column_start":8,"column_end":11},"name":"fmt","qualname":"<DateTime<Tz> as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10117},"children":[],"decl_id":{"krate":2,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":913},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":75635,"byte_end":75643,"line_start":929,"line_end":929,"column_start":8,"column_end":16},"name":"from_str","qualname":"<DateTime<Utc> as std::str::FromStr>::from_str","value":"fn from_str(&str) -> ParseResult<DateTime<Utc>>","parent":{"krate":2,"index":12767},"children":[],"decl_id":{"krate":2,"index":12769},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":917},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":76319,"byte_end":76327,"line_start":949,"line_end":949,"column_start":8,"column_end":16},"name":"from_str","qualname":"<DateTime<Local> as std::str::FromStr>::from_str","value":"fn from_str(&str) -> ParseResult<DateTime<Local>>","parent":{"krate":2,"index":12767},"children":[],"decl_id":{"krate":2,"index":12769},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":920},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":76542,"byte_end":76546,"line_start":956,"line_end":956,"column_start":8,"column_end":12},"name":"from","qualname":"<DateTime<Utc> as std::convert::From>::from","value":"fn from(SystemTime) -> DateTime<Utc>","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":922},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":77204,"byte_end":77208,"line_start":976,"line_end":976,"column_start":8,"column_end":12},"name":"from","qualname":"<DateTime<Local> as std::convert::From>::from","value":"fn from(SystemTime) -> DateTime<Local>","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":925},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":77406,"byte_end":77410,"line_start":983,"line_end":983,"column_start":8,"column_end":12},"name":"from","qualname":"<SystemTime as std::convert::From>::from","value":"fn from(DateTime<Tz>) -> SystemTime","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":942},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"format","qualname":"::format","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","parent":null,"children":[{"krate":0,"index":943},{"krate":0,"index":944},{"krate":0,"index":947},{"krate":0,"index":948},{"krate":0,"index":951},{"krate":0,"index":954},{"krate":0,"index":957},{"krate":0,"index":960},{"krate":0,"index":963},{"krate":0,"index":966},{"krate":0,"index":967},{"krate":0,"index":970},{"krate":0,"index":973},{"krate":0,"index":974},{"krate":0,"index":977},{"krate":0,"index":980},{"krate":0,"index":981},{"krate":0,"index":984},{"krate":0,"index":987},{"krate":0,"index":988},{"krate":0,"index":991},{"krate":0,"index":994},{"krate":0,"index":997},{"krate":0,"index":1000},{"krate":0,"index":1003},{"krate":0,"index":1006},{"krate":0,"index":3504},{"krate":0,"index":3506},{"krate":0,"index":3508},{"krate":0,"index":3509},{"krate":0,"index":3511},{"krate":0,"index":3512},{"krate":0,"index":3514},{"krate":0,"index":3515},{"krate":0,"index":3517},{"krate":0,"index":3524},{"krate":0,"index":3525},{"krate":0,"index":3527},{"krate":0,"index":3528},{"krate":0,"index":3530},{"krate":0,"index":3531},{"krate":0,"index":3533},{"krate":0,"index":3535},{"krate":0,"index":3579},{"krate":0,"index":3581},{"krate":0,"index":3582},{"krate":0,"index":3585},{"krate":0,"index":3586},{"krate":0,"index":3588},{"krate":0,"index":1009},{"krate":0,"index":1011},{"krate":0,"index":1013},{"krate":0,"index":1015},{"krate":0,"index":1016},{"krate":0,"index":3590},{"krate":0,"index":3628},{"krate":0,"index":3630},{"krate":0,"index":3631},{"krate":0,"index":3634},{"krate":0,"index":3635},{"krate":0,"index":3637},{"krate":0,"index":3639},{"krate":0,"index":3641},{"krate":0,"index":3643},{"krate":0,"index":3645},{"krate":0,"index":3646},{"krate":0,"index":3649},{"krate":0,"index":3650},{"krate":0,"index":3652},{"krate":0,"index":3661},{"krate":0,"index":3663},{"krate":0,"index":3665},{"krate":0,"index":3666},{"krate":0,"index":3668},{"krate":0,"index":3669},{"krate":0,"index":3671},{"krate":0,"index":3694},{"krate":0,"index":3697},{"krate":0,"index":3699},{"krate":0,"index":3703},{"krate":0,"index":3705},{"krate":0,"index":3708},{"krate":0,"index":1018},{"krate":0,"index":1019},{"krate":0,"index":1020},{"krate":0,"index":1021},{"krate":0,"index":1022},{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":3711},{"krate":0,"index":3714},{"krate":0,"index":3716},{"krate":0,"index":3718},{"krate":0,"index":3719},{"krate":0,"index":3722},{"krate":0,"index":3723},{"krate":0,"index":3725},{"krate":0,"index":1025},{"krate":0,"index":3726},{"krate":0,"index":3743},{"krate":0,"index":3745},{"krate":0,"index":3747},{"krate":0,"index":3748},{"krate":0,"index":3750},{"krate":0,"index":3751},{"krate":0,"index":3753},{"krate":0,"index":1027},{"krate":0,"index":1029},{"krate":0,"index":1031},{"krate":0,"index":1033},{"krate":0,"index":1034},{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":1037},{"krate":0,"index":1038},{"krate":0,"index":1039},{"krate":0,"index":1040},{"krate":0,"index":1042},{"krate":0,"index":1096},{"krate":0,"index":1100},{"krate":0,"index":1209},{"krate":0,"index":1324},{"krate":0,"index":1390},{"krate":0,"index":3809},{"krate":0,"index":3815},{"krate":0,"index":1431},{"krate":0,"index":1438},{"krate":0,"index":1443},{"krate":0,"index":1446}],"decl_id":null,"docs":" Formatting (and parsing) utilities for date and time.","sig":null,"attributes":[{"value":"/ Formatting (and parsing) utilities for date and time.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":118512,"byte_end":118569,"line_start":4,"line_end":4,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":118570,"byte_end":118573,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module provides the common types and routines to implement,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":118574,"byte_end":118642,"line_start":6,"line_end":6,"column_start":1,"column_end":69}},{"value":"/ for example, [`DateTime::format`](../struct.DateTime.html#method.format) or","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":118643,"byte_end":118722,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ [`DateTime::parse_from_str`](../struct.DateTime.html#method.parse_from_str) methods.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":118723,"byte_end":118811,"line_start":8,"line_end":8,"column_start":1,"column_end":89}},{"value":"/ For most cases you should use these high-level interfaces.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":118812,"byte_end":118874,"line_start":9,"line_end":9,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":118875,"byte_end":118878,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Internally the formatting and parsing shares the same abstract **formatting items**,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":118879,"byte_end":118967,"line_start":11,"line_end":11,"column_start":1,"column_end":89}},{"value":"/ which are just an [`Iterator`](https://doc.rust-lang.org/std/iter/trait.Iterator.html) of","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":118968,"byte_end":119061,"line_start":12,"line_end":12,"column_start":1,"column_end":94}},{"value":"/ the [`Item`](./enum.Item.html) type.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":119062,"byte_end":119102,"line_start":13,"line_end":13,"column_start":1,"column_end":41}},{"value":"/ They are generated from more readable **format strings**;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":119103,"byte_end":119164,"line_start":14,"line_end":14,"column_start":1,"column_end":62}},{"value":"/ currently Chrono supports a built-in syntax closely resembling","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":119165,"byte_end":119231,"line_start":15,"line_end":15,"column_start":1,"column_end":67}},{"value":"/ C's `strftime` format. The available options can be found [here](./strftime/index.html).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":119232,"byte_end":119324,"line_start":16,"line_end":16,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":119325,"byte_end":119328,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":119329,"byte_end":119342,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":119343,"byte_end":119354,"line_start":19,"line_end":19,"column_start":1,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":119355,"byte_end":119383,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/ use chrono::prelude::*;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":119384,"byte_end":119411,"line_start":21,"line_end":21,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":119412,"byte_end":119415,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ let date_time = Utc.ymd(2020, 11, 10).and_hms(0, 1, 32);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":119416,"byte_end":119476,"line_start":23,"line_end":23,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":119477,"byte_end":119480,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let formatted = format!(\"{}\", date_time.format(\"%Y-%m-%d %H:%M:%S\"));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":119481,"byte_end":119554,"line_start":25,"line_end":25,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(formatted, \"2020-11-10 00:01:32\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":119555,"byte_end":119604,"line_start":26,"line_end":26,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":119605,"byte_end":119608,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let parsed = Utc.datetime_from_str(&formatted, \"%Y-%m-%d %H:%M:%S\")?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":119609,"byte_end":119682,"line_start":28,"line_end":28,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(parsed, date_time);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":119683,"byte_end":119717,"line_start":29,"line_end":29,"column_start":1,"column_end":35}},{"value":"/ # Ok::<(), chrono::ParseError>(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":119718,"byte_end":119756,"line_start":30,"line_end":30,"column_start":1,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":119757,"byte_end":119764,"line_start":31,"line_end":31,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3518},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":121007,"byte_end":121011,"line_start":77,"line_end":77,"column_start":5,"column_end":9},"name":"None","qualname":"::format::Pad::None","value":"Pad::None","parent":{"krate":0,"index":3517},"children":[],"decl_id":null,"docs":" No padding.\n","sig":null,"attributes":[{"value":"/ No padding.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":120987,"byte_end":121002,"line_start":76,"line_end":76,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3520},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":121045,"byte_end":121049,"line_start":79,"line_end":79,"column_start":5,"column_end":9},"name":"Zero","qualname":"::format::Pad::Zero","value":"Pad::Zero","parent":{"krate":0,"index":3517},"children":[],"decl_id":null,"docs":" Zero (`0`) padding.\n","sig":null,"attributes":[{"value":"/ Zero (`0`) padding.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":121017,"byte_end":121040,"line_start":78,"line_end":78,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3522},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":121078,"byte_end":121083,"line_start":81,"line_end":81,"column_start":5,"column_end":10},"name":"Space","qualname":"::format::Pad::Space","value":"Pad::Space","parent":{"krate":0,"index":3517},"children":[],"decl_id":null,"docs":" Space padding.\n","sig":null,"attributes":[{"value":"/ Space padding.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":121055,"byte_end":121073,"line_start":80,"line_end":80,"column_start":5,"column_end":23}}]},{"kind":"Enum","id":{"krate":0,"index":3517},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":120977,"byte_end":120980,"line_start":75,"line_end":75,"column_start":10,"column_end":13},"name":"Pad","qualname":"::format::Pad","value":"enum Pad { None, Zero, Space, }","parent":null,"children":[{"krate":0,"index":3518},{"krate":0,"index":3520},{"krate":0,"index":3522}],"decl_id":null,"docs":" Padding characters for numeric items.\n","sig":null,"attributes":[{"value":"/ Padding characters for numeric items.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":120881,"byte_end":120922,"line_start":73,"line_end":73,"column_start":1,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3536},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":121979,"byte_end":121983,"line_start":101,"line_end":101,"column_start":5,"column_end":9},"name":"Year","qualname":"::format::Numeric::Year","value":"Numeric::Year","parent":{"krate":0,"index":3535},"children":[],"decl_id":null,"docs":" Full Gregorian year (FW=4, PW=∞).\n May accept years before 1 BCE or after 9999 CE, given an initial sign.\n","sig":null,"attributes":[{"value":"/ Full Gregorian year (FW=4, PW=∞).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":121856,"byte_end":121895,"line_start":99,"line_end":99,"column_start":5,"column_end":42}},{"value":"/ May accept years before 1 BCE or after 9999 CE, given an initial sign.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":121900,"byte_end":121974,"line_start":100,"line_end":100,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3538},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":122085,"byte_end":122095,"line_start":103,"line_end":103,"column_start":5,"column_end":15},"name":"YearDiv100","qualname":"::format::Numeric::YearDiv100","value":"Numeric::YearDiv100","parent":{"krate":0,"index":3535},"children":[],"decl_id":null,"docs":" Gregorian year divided by 100 (century number; FW=PW=2). Implies the non-negative year.\n","sig":null,"attributes":[{"value":"/ Gregorian year divided by 100 (century number; FW=PW=2). Implies the non-negative year.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":121989,"byte_end":122080,"line_start":102,"line_end":102,"column_start":5,"column_end":96}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3540},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":122166,"byte_end":122176,"line_start":105,"line_end":105,"column_start":5,"column_end":15},"name":"YearMod100","qualname":"::format::Numeric::YearMod100","value":"Numeric::YearMod100","parent":{"krate":0,"index":3535},"children":[],"decl_id":null,"docs":" Gregorian year modulo 100 (FW=PW=2). Cannot be negative.\n","sig":null,"attributes":[{"value":"/ Gregorian year modulo 100 (FW=PW=2). Cannot be negative.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":122101,"byte_end":122161,"line_start":104,"line_end":104,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3542},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":122311,"byte_end":122318,"line_start":108,"line_end":108,"column_start":5,"column_end":12},"name":"IsoYear","qualname":"::format::Numeric::IsoYear","value":"Numeric::IsoYear","parent":{"krate":0,"index":3535},"children":[],"decl_id":null,"docs":" Year in the ISO week date (FW=4, PW=∞).\n May accept years before 1 BCE or after 9999 CE, given an initial sign.\n","sig":null,"attributes":[{"value":"/ Year in the ISO week date (FW=4, PW=∞).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":122182,"byte_end":122227,"line_start":106,"line_end":106,"column_start":5,"column_end":48}},{"value":"/ May accept years before 1 BCE or after 9999 CE, given an initial sign.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":122232,"byte_end":122306,"line_start":107,"line_end":107,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3544},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":122416,"byte_end":122429,"line_start":110,"line_end":110,"column_start":5,"column_end":18},"name":"IsoYearDiv100","qualname":"::format::Numeric::IsoYearDiv100","value":"Numeric::IsoYearDiv100","parent":{"krate":0,"index":3535},"children":[],"decl_id":null,"docs":" Year in the ISO week date, divided by 100 (FW=PW=2). Implies the non-negative year.\n","sig":null,"attributes":[{"value":"/ Year in the ISO week date, divided by 100 (FW=PW=2). Implies the non-negative year.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":122324,"byte_end":122411,"line_start":109,"line_end":109,"column_start":5,"column_end":92}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3546},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":122512,"byte_end":122525,"line_start":112,"line_end":112,"column_start":5,"column_end":18},"name":"IsoYearMod100","qualname":"::format::Numeric::IsoYearMod100","value":"Numeric::IsoYearMod100","parent":{"krate":0,"index":3535},"children":[],"decl_id":null,"docs":" Year in the ISO week date, modulo 100 (FW=PW=2). Cannot be negative.\n","sig":null,"attributes":[{"value":"/ Year in the ISO week date, modulo 100 (FW=PW=2). Cannot be negative.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":122435,"byte_end":122507,"line_start":111,"line_end":111,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3548},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":122556,"byte_end":122561,"line_start":114,"line_end":114,"column_start":5,"column_end":10},"name":"Month","qualname":"::format::Numeric::Month","value":"Numeric::Month","parent":{"krate":0,"index":3535},"children":[],"decl_id":null,"docs":" Month (FW=PW=2).\n","sig":null,"attributes":[{"value":"/ Month (FW=PW=2).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":122531,"byte_end":122551,"line_start":113,"line_end":113,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3550},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":122603,"byte_end":122606,"line_start":116,"line_end":116,"column_start":5,"column_end":8},"name":"Day","qualname":"::format::Numeric::Day","value":"Numeric::Day","parent":{"krate":0,"index":3535},"children":[],"decl_id":null,"docs":" Day of the month (FW=PW=2).\n","sig":null,"attributes":[{"value":"/ Day of the month (FW=PW=2).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":122567,"byte_end":122598,"line_start":115,"line_end":115,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3552},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":122699,"byte_end":122710,"line_start":118,"line_end":118,"column_start":5,"column_end":16},"name":"WeekFromSun","qualname":"::format::Numeric::WeekFromSun","value":"Numeric::WeekFromSun","parent":{"krate":0,"index":3535},"children":[],"decl_id":null,"docs":" Week number, where the week 1 starts at the first Sunday of January (FW=PW=2).\n","sig":null,"attributes":[{"value":"/ Week number, where the week 1 starts at the first Sunday of January (FW=PW=2).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":122612,"byte_end":122694,"line_start":117,"line_end":117,"column_start":5,"column_end":87}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3554},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":122803,"byte_end":122814,"line_start":120,"line_end":120,"column_start":5,"column_end":16},"name":"WeekFromMon","qualname":"::format::Numeric::WeekFromMon","value":"Numeric::WeekFromMon","parent":{"krate":0,"index":3535},"children":[],"decl_id":null,"docs":" Week number, where the week 1 starts at the first Monday of January (FW=PW=2).\n","sig":null,"attributes":[{"value":"/ Week number, where the week 1 starts at the first Monday of January (FW=PW=2).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":122716,"byte_end":122798,"line_start":119,"line_end":119,"column_start":5,"column_end":87}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3556},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":122872,"byte_end":122879,"line_start":122,"line_end":122,"column_start":5,"column_end":12},"name":"IsoWeek","qualname":"::format::Numeric::IsoWeek","value":"Numeric::IsoWeek","parent":{"krate":0,"index":3535},"children":[],"decl_id":null,"docs":" Week number in the ISO week date (FW=PW=2).\n","sig":null,"attributes":[{"value":"/ Week number in the ISO week date (FW=PW=2).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":122820,"byte_end":122867,"line_start":121,"line_end":121,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3558},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":122955,"byte_end":122969,"line_start":124,"line_end":124,"column_start":5,"column_end":19},"name":"NumDaysFromSun","qualname":"::format::Numeric::NumDaysFromSun","value":"Numeric::NumDaysFromSun","parent":{"krate":0,"index":3535},"children":[],"decl_id":null,"docs":" Day of the week, where Sunday = 0 and Saturday = 6 (FW=PW=1).\n","sig":null,"attributes":[{"value":"/ Day of the week, where Sunday = 0 and Saturday = 6 (FW=PW=1).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":122885,"byte_end":122950,"line_start":123,"line_end":123,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3560},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":123043,"byte_end":123057,"line_start":126,"line_end":126,"column_start":5,"column_end":19},"name":"WeekdayFromMon","qualname":"::format::Numeric::WeekdayFromMon","value":"Numeric::WeekdayFromMon","parent":{"krate":0,"index":3535},"children":[],"decl_id":null,"docs":" Day of the week, where Monday = 1 and Sunday = 7 (FW=PW=1).\n","sig":null,"attributes":[{"value":"/ Day of the week, where Monday = 1 and Sunday = 7 (FW=PW=1).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":122975,"byte_end":123038,"line_start":125,"line_end":125,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3562},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":123098,"byte_end":123105,"line_start":128,"line_end":128,"column_start":5,"column_end":12},"name":"Ordinal","qualname":"::format::Numeric::Ordinal","value":"Numeric::Ordinal","parent":{"krate":0,"index":3535},"children":[],"decl_id":null,"docs":" Day of the year (FW=PW=3).\n","sig":null,"attributes":[{"value":"/ Day of the year (FW=PW=3).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":123063,"byte_end":123093,"line_start":127,"line_end":127,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3564},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":123164,"byte_end":123168,"line_start":130,"line_end":130,"column_start":5,"column_end":9},"name":"Hour","qualname":"::format::Numeric::Hour","value":"Numeric::Hour","parent":{"krate":0,"index":3535},"children":[],"decl_id":null,"docs":" Hour number in the 24-hour clocks (FW=PW=2).\n","sig":null,"attributes":[{"value":"/ Hour number in the 24-hour clocks (FW=PW=2).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":123111,"byte_end":123159,"line_start":129,"line_end":129,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3566},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":123227,"byte_end":123233,"line_start":132,"line_end":132,"column_start":5,"column_end":11},"name":"Hour12","qualname":"::format::Numeric::Hour12","value":"Numeric::Hour12","parent":{"krate":0,"index":3535},"children":[],"decl_id":null,"docs":" Hour number in the 12-hour clocks (FW=PW=2).\n","sig":null,"attributes":[{"value":"/ Hour number in the 12-hour clocks (FW=PW=2).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":123174,"byte_end":123222,"line_start":131,"line_end":131,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3568},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":123306,"byte_end":123312,"line_start":134,"line_end":134,"column_start":5,"column_end":11},"name":"Minute","qualname":"::format::Numeric::Minute","value":"Numeric::Minute","parent":{"krate":0,"index":3535},"children":[],"decl_id":null,"docs":" The number of minutes since the last whole hour (FW=PW=2).\n","sig":null,"attributes":[{"value":"/ The number of minutes since the last whole hour (FW=PW=2).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":123239,"byte_end":123301,"line_start":133,"line_end":133,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3570},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":123387,"byte_end":123393,"line_start":136,"line_end":136,"column_start":5,"column_end":11},"name":"Second","qualname":"::format::Numeric::Second","value":"Numeric::Second","parent":{"krate":0,"index":3535},"children":[],"decl_id":null,"docs":" The number of seconds since the last whole minute (FW=PW=2).\n","sig":null,"attributes":[{"value":"/ The number of seconds since the last whole minute (FW=PW=2).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":123318,"byte_end":123382,"line_start":135,"line_end":135,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3572},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":123596,"byte_end":123606,"line_start":140,"line_end":140,"column_start":5,"column_end":15},"name":"Nanosecond","qualname":"::format::Numeric::Nanosecond","value":"Numeric::Nanosecond","parent":{"krate":0,"index":3535},"children":[],"decl_id":null,"docs":" The number of nanoseconds since the last whole second (FW=PW=9).\n Note that this is *not* left-aligned;\n see also [`Fixed::Nanosecond`](./enum.Fixed.html#variant.Nanosecond).\n","sig":null,"attributes":[{"value":"/ The number of nanoseconds since the last whole second (FW=PW=9).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":123399,"byte_end":123467,"line_start":137,"line_end":137,"column_start":5,"column_end":73}},{"value":"/ Note that this is *not* left-aligned;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":123472,"byte_end":123513,"line_start":138,"line_end":138,"column_start":5,"column_end":46}},{"value":"/ see also [`Fixed::Nanosecond`](./enum.Fixed.html#variant.Nanosecond).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":123518,"byte_end":123591,"line_start":139,"line_end":139,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3574},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":123786,"byte_end":123795,"line_start":143,"line_end":143,"column_start":5,"column_end":14},"name":"Timestamp","qualname":"::format::Numeric::Timestamp","value":"Numeric::Timestamp","parent":{"krate":0,"index":3535},"children":[],"decl_id":null,"docs":" The number of non-leap seconds since the midnight UTC on January 1, 1970 (FW=1, PW=∞).\n For formatting, it assumes UTC upon the absence of time zone offset.\n","sig":null,"attributes":[{"value":"/ The number of non-leap seconds since the midnight UTC on January 1, 1970 (FW=1, PW=∞).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":123612,"byte_end":123704,"line_start":141,"line_end":141,"column_start":5,"column_end":95}},{"value":"/ For formatting, it assumes UTC upon the absence of time zone offset.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":123709,"byte_end":123781,"line_start":142,"line_end":142,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3576},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":124014,"byte_end":124022,"line_start":149,"line_end":149,"column_start":5,"column_end":13},"name":"Internal","qualname":"::format::Numeric::Internal","value":"Numeric::Internal(InternalNumeric)","parent":{"krate":0,"index":3535},"children":[],"decl_id":null,"docs":" Internal uses only.","sig":null,"attributes":[{"value":"/ Internal uses only.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":123802,"byte_end":123825,"line_start":145,"line_end":145,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":123830,"byte_end":123833,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ This item exists so that one can add additional internal-only formatting","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":123838,"byte_end":123914,"line_start":147,"line_end":147,"column_start":5,"column_end":81}},{"value":"/ without breaking major compatibility (as enum variants cannot be selectively private).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":123919,"byte_end":124009,"line_start":148,"line_end":148,"column_start":5,"column_end":95}}]},{"kind":"Field","id":{"krate":0,"index":3578},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":124023,"byte_end":124038,"line_start":149,"line_end":149,"column_start":14,"column_end":29},"name":"0","qualname":"::format::Numeric::Internal::0","value":"format::InternalNumeric","parent":{"krate":0,"index":3576},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3535},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":121842,"byte_end":121849,"line_start":98,"line_end":98,"column_start":10,"column_end":17},"name":"Numeric","qualname":"::format::Numeric","value":"enum Numeric {\n    Year,\n    YearDiv100,\n    YearMod100,\n    IsoYear,\n    IsoYearDiv100,\n    IsoYearMod100,\n    Month,\n    Day,\n    WeekFromSun,\n    WeekFromMon,\n    IsoWeek,\n    NumDaysFromSun,\n    WeekdayFromMon,\n    Ordinal,\n    Hour,\n    Hour12,\n    Minute,\n    Second,\n    Nanosecond,\n    Timestamp,\n    Internal(InternalNumeric),\n}","parent":null,"children":[{"krate":0,"index":3536},{"krate":0,"index":3538},{"krate":0,"index":3540},{"krate":0,"index":3542},{"krate":0,"index":3544},{"krate":0,"index":3546},{"krate":0,"index":3548},{"krate":0,"index":3550},{"krate":0,"index":3552},{"krate":0,"index":3554},{"krate":0,"index":3556},{"krate":0,"index":3558},{"krate":0,"index":3560},{"krate":0,"index":3562},{"krate":0,"index":3564},{"krate":0,"index":3566},{"krate":0,"index":3568},{"krate":0,"index":3570},{"krate":0,"index":3572},{"krate":0,"index":3574},{"krate":0,"index":3576}],"decl_id":null,"docs":" Numeric item types.\n They have associated formatting width (FW) and parsing width (PW).","sig":null,"attributes":[{"value":"/ Numeric item types.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":121088,"byte_end":121111,"line_start":84,"line_end":84,"column_start":1,"column_end":24}},{"value":"/ They have associated formatting width (FW) and parsing width (PW).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":121112,"byte_end":121182,"line_start":85,"line_end":85,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":121183,"byte_end":121186,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ The **formatting width** is the minimal width to be formatted.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":121187,"byte_end":121253,"line_start":87,"line_end":87,"column_start":1,"column_end":67}},{"value":"/ If the number is too short, and the padding is not [`Pad::None`](./enum.Pad.html#variant.None),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":121254,"byte_end":121353,"line_start":88,"line_end":88,"column_start":1,"column_end":100}},{"value":"/ then it is left-padded.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":121354,"byte_end":121381,"line_start":89,"line_end":89,"column_start":1,"column_end":28}},{"value":"/ If the number is too long or (in some cases) negative, it is printed as is.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":121382,"byte_end":121461,"line_start":90,"line_end":90,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":121462,"byte_end":121465,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ The **parsing width** is the maximal width to be scanned.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":121466,"byte_end":121527,"line_start":92,"line_end":92,"column_start":1,"column_end":62}},{"value":"/ The parser only tries to consume from one to given number of digits (greedily).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":121528,"byte_end":121611,"line_start":93,"line_end":93,"column_start":1,"column_end":84}},{"value":"/ It also trims the preceding whitespace if any.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":121612,"byte_end":121662,"line_start":94,"line_end":94,"column_start":1,"column_end":51}},{"value":"/ It cannot parse the negative number, so some date and time cannot be formatted then","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":121663,"byte_end":121750,"line_start":95,"line_end":95,"column_start":1,"column_end":88}},{"value":"/ parsed with the same formatting items.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":121751,"byte_end":121793,"line_start":96,"line_end":96,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":1009},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":124130,"byte_end":124145,"line_start":153,"line_end":153,"column_start":12,"column_end":27},"name":"InternalNumeric","qualname":"::format::InternalNumeric","value":"InternalNumeric {  }","parent":null,"children":[{"krate":0,"index":1010}],"decl_id":null,"docs":" An opaque type representing numeric item types for internal uses only.\n","sig":null,"attributes":[{"value":"/ An opaque type representing numeric item types for internal uses only.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":124044,"byte_end":124118,"line_start":152,"line_end":152,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1012},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":124209,"byte_end":124214,"line_start":158,"line_end":158,"column_start":8,"column_end":13},"name":"clone","qualname":"<InternalNumeric as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1014},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":124314,"byte_end":124316,"line_start":164,"line_end":164,"column_start":8,"column_end":10},"name":"eq","qualname":"<InternalNumeric as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &InternalNumeric) -> bool","parent":{"krate":2,"index":2831},"children":[],"decl_id":{"krate":2,"index":2833},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1017},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":124475,"byte_end":124478,"line_start":172,"line_end":172,"column_start":8,"column_end":11},"name":"fmt","qualname":"<InternalNumeric as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3591},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":124943,"byte_end":124957,"line_start":186,"line_end":186,"column_start":5,"column_end":19},"name":"ShortMonthName","qualname":"::format::Fixed::ShortMonthName","value":"Fixed::ShortMonthName","parent":{"krate":0,"index":3590},"children":[],"decl_id":null,"docs":" Abbreviated month names.","sig":null,"attributes":[{"value":"/ Abbreviated month names.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":124810,"byte_end":124838,"line_start":183,"line_end":183,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":124843,"byte_end":124846,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ Prints a three-letter-long name in the title case, reads the same name in any case.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":124851,"byte_end":124938,"line_start":185,"line_end":185,"column_start":5,"column_end":92}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3593},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":125090,"byte_end":125103,"line_start":190,"line_end":190,"column_start":5,"column_end":18},"name":"LongMonthName","qualname":"::format::Fixed::LongMonthName","value":"Fixed::LongMonthName","parent":{"krate":0,"index":3590},"children":[],"decl_id":null,"docs":" Full month names.","sig":null,"attributes":[{"value":"/ Full month names.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":124963,"byte_end":124984,"line_start":187,"line_end":187,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":124989,"byte_end":124992,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ Prints a full name in the title case, reads either a short or full name in any case.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":124997,"byte_end":125085,"line_start":189,"line_end":189,"column_start":5,"column_end":93}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3595},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":125252,"byte_end":125268,"line_start":194,"line_end":194,"column_start":5,"column_end":21},"name":"ShortWeekdayName","qualname":"::format::Fixed::ShortWeekdayName","value":"Fixed::ShortWeekdayName","parent":{"krate":0,"index":3590},"children":[],"decl_id":null,"docs":" Abbreviated day of the week names.","sig":null,"attributes":[{"value":"/ Abbreviated day of the week names.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":125109,"byte_end":125147,"line_start":191,"line_end":191,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":125152,"byte_end":125155,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ Prints a three-letter-long name in the title case, reads the same name in any case.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":125160,"byte_end":125247,"line_start":193,"line_end":193,"column_start":5,"column_end":92}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3597},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":125411,"byte_end":125426,"line_start":198,"line_end":198,"column_start":5,"column_end":20},"name":"LongWeekdayName","qualname":"::format::Fixed::LongWeekdayName","value":"Fixed::LongWeekdayName","parent":{"krate":0,"index":3590},"children":[],"decl_id":null,"docs":" Full day of the week names.","sig":null,"attributes":[{"value":"/ Full day of the week names.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":125274,"byte_end":125305,"line_start":195,"line_end":195,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":125310,"byte_end":125313,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ Prints a full name in the title case, reads either a short or full name in any case.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":125318,"byte_end":125406,"line_start":197,"line_end":197,"column_start":5,"column_end":93}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3599},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":125504,"byte_end":125513,"line_start":202,"line_end":202,"column_start":5,"column_end":14},"name":"LowerAmPm","qualname":"::format::Fixed::LowerAmPm","value":"Fixed::LowerAmPm","parent":{"krate":0,"index":3590},"children":[],"decl_id":null,"docs":" AM/PM.","sig":null,"attributes":[{"value":"/ AM/PM.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":125432,"byte_end":125442,"line_start":199,"line_end":199,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":125447,"byte_end":125450,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Prints in lower case, reads in any case.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":125455,"byte_end":125499,"line_start":201,"line_end":201,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3601},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":125591,"byte_end":125600,"line_start":206,"line_end":206,"column_start":5,"column_end":14},"name":"UpperAmPm","qualname":"::format::Fixed::UpperAmPm","value":"Fixed::UpperAmPm","parent":{"krate":0,"index":3590},"children":[],"decl_id":null,"docs":" AM/PM.","sig":null,"attributes":[{"value":"/ AM/PM.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":125519,"byte_end":125529,"line_start":203,"line_end":203,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":125534,"byte_end":125537,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Prints in upper case, reads in any case.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":125542,"byte_end":125586,"line_start":205,"line_end":205,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3603},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":125847,"byte_end":125857,"line_start":210,"line_end":210,"column_start":5,"column_end":15},"name":"Nanosecond","qualname":"::format::Fixed::Nanosecond","value":"Fixed::Nanosecond","parent":{"krate":0,"index":3590},"children":[],"decl_id":null,"docs":" An optional dot plus one or more digits for left-aligned nanoseconds.\n May print nothing, 3, 6 or 9 digits according to the available accuracy.\n See also [`Numeric::Nanosecond`](./enum.Numeric.html#variant.Nanosecond).\n","sig":null,"attributes":[{"value":"/ An optional dot plus one or more digits for left-aligned nanoseconds.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":125606,"byte_end":125679,"line_start":207,"line_end":207,"column_start":5,"column_end":78}},{"value":"/ May print nothing, 3, 6 or 9 digits according to the available accuracy.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":125684,"byte_end":125760,"line_start":208,"line_end":208,"column_start":5,"column_end":81}},{"value":"/ See also [`Numeric::Nanosecond`](./enum.Numeric.html#variant.Nanosecond).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":125765,"byte_end":125842,"line_start":209,"line_end":209,"column_start":5,"column_end":82}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3605},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":125947,"byte_end":125958,"line_start":212,"line_end":212,"column_start":5,"column_end":16},"name":"Nanosecond3","qualname":"::format::Fixed::Nanosecond3","value":"Fixed::Nanosecond3","parent":{"krate":0,"index":3590},"children":[],"decl_id":null,"docs":" Same as [`Nanosecond`](#variant.Nanosecond) but the accuracy is fixed to 3.\n","sig":null,"attributes":[{"value":"/ Same as [`Nanosecond`](#variant.Nanosecond) but the accuracy is fixed to 3.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":125863,"byte_end":125942,"line_start":211,"line_end":211,"column_start":5,"column_end":84}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3607},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":126048,"byte_end":126059,"line_start":214,"line_end":214,"column_start":5,"column_end":16},"name":"Nanosecond6","qualname":"::format::Fixed::Nanosecond6","value":"Fixed::Nanosecond6","parent":{"krate":0,"index":3590},"children":[],"decl_id":null,"docs":" Same as [`Nanosecond`](#variant.Nanosecond) but the accuracy is fixed to 6.\n","sig":null,"attributes":[{"value":"/ Same as [`Nanosecond`](#variant.Nanosecond) but the accuracy is fixed to 6.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":125964,"byte_end":126043,"line_start":213,"line_end":213,"column_start":5,"column_end":84}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3609},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":126149,"byte_end":126160,"line_start":216,"line_end":216,"column_start":5,"column_end":16},"name":"Nanosecond9","qualname":"::format::Fixed::Nanosecond9","value":"Fixed::Nanosecond9","parent":{"krate":0,"index":3590},"children":[],"decl_id":null,"docs":" Same as [`Nanosecond`](#variant.Nanosecond) but the accuracy is fixed to 9.\n","sig":null,"attributes":[{"value":"/ Same as [`Nanosecond`](#variant.Nanosecond) but the accuracy is fixed to 9.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":126065,"byte_end":126144,"line_start":215,"line_end":215,"column_start":5,"column_end":84}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3611},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":126281,"byte_end":126293,"line_start":220,"line_end":220,"column_start":5,"column_end":17},"name":"TimezoneName","qualname":"::format::Fixed::TimezoneName","value":"Fixed::TimezoneName","parent":{"krate":0,"index":3590},"children":[],"decl_id":null,"docs":" Timezone name.","sig":null,"attributes":[{"value":"/ Timezone name.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":126166,"byte_end":126184,"line_start":217,"line_end":217,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":126189,"byte_end":126192,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ It does not support parsing, its use in the parser is an immediate failure.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":126197,"byte_end":126276,"line_start":219,"line_end":219,"column_start":5,"column_end":84}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3613},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":126628,"byte_end":126647,"line_start":226,"line_end":226,"column_start":5,"column_end":24},"name":"TimezoneOffsetColon","qualname":"::format::Fixed::TimezoneOffsetColon","value":"Fixed::TimezoneOffsetColon","parent":{"krate":0,"index":3590},"children":[],"decl_id":null,"docs":" Offset from the local time to UTC (`+09:00` or `-04:00` or `+00:00`).","sig":null,"attributes":[{"value":"/ Offset from the local time to UTC (`+09:00` or `-04:00` or `+00:00`).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":126299,"byte_end":126372,"line_start":221,"line_end":221,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":126377,"byte_end":126380,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ In the parser, the colon can be omitted and/or surrounded with any amount of whitespace.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":126385,"byte_end":126477,"line_start":223,"line_end":223,"column_start":5,"column_end":97}},{"value":"/ The offset is limited from `-24:00` to `+24:00`,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":126482,"byte_end":126534,"line_start":224,"line_end":224,"column_start":5,"column_end":57}},{"value":"/ which is the same as [`FixedOffset`](../offset/struct.FixedOffset.html)'s range.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":126539,"byte_end":126623,"line_start":225,"line_end":225,"column_start":5,"column_end":89}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3615},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":127039,"byte_end":127059,"line_start":233,"line_end":233,"column_start":5,"column_end":25},"name":"TimezoneOffsetColonZ","qualname":"::format::Fixed::TimezoneOffsetColonZ","value":"Fixed::TimezoneOffsetColonZ","parent":{"krate":0,"index":3590},"children":[],"decl_id":null,"docs":" Offset from the local time to UTC (`+09:00` or `-04:00` or `Z`).","sig":null,"attributes":[{"value":"/ Offset from the local time to UTC (`+09:00` or `-04:00` or `Z`).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":126653,"byte_end":126721,"line_start":227,"line_end":227,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":126726,"byte_end":126729,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ In the parser, the colon can be omitted and/or surrounded with any amount of whitespace,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":126734,"byte_end":126826,"line_start":229,"line_end":229,"column_start":5,"column_end":97}},{"value":"/ and `Z` can be either in upper case or in lower case.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":126831,"byte_end":126888,"line_start":230,"line_end":230,"column_start":5,"column_end":62}},{"value":"/ The offset is limited from `-24:00` to `+24:00`,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":126893,"byte_end":126945,"line_start":231,"line_end":231,"column_start":5,"column_end":57}},{"value":"/ which is the same as [`FixedOffset`](../offset/struct.FixedOffset.html)'s range.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":126950,"byte_end":127034,"line_start":232,"line_end":232,"column_start":5,"column_end":89}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3617},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":127198,"byte_end":127212,"line_start":236,"line_end":236,"column_start":5,"column_end":19},"name":"TimezoneOffset","qualname":"::format::Fixed::TimezoneOffset","value":"Fixed::TimezoneOffset","parent":{"krate":0,"index":3590},"children":[],"decl_id":null,"docs":" Same as [`TimezoneOffsetColon`](#variant.TimezoneOffsetColon) but prints no colon.\n Parsing allows an optional colon.\n","sig":null,"attributes":[{"value":"/ Same as [`TimezoneOffsetColon`](#variant.TimezoneOffsetColon) but prints no colon.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":127065,"byte_end":127151,"line_start":234,"line_end":234,"column_start":5,"column_end":91}},{"value":"/ Parsing allows an optional colon.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":127156,"byte_end":127193,"line_start":235,"line_end":235,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3619},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":127353,"byte_end":127368,"line_start":239,"line_end":239,"column_start":5,"column_end":20},"name":"TimezoneOffsetZ","qualname":"::format::Fixed::TimezoneOffsetZ","value":"Fixed::TimezoneOffsetZ","parent":{"krate":0,"index":3590},"children":[],"decl_id":null,"docs":" Same as [`TimezoneOffsetColonZ`](#variant.TimezoneOffsetColonZ) but prints no colon.\n Parsing allows an optional colon.\n","sig":null,"attributes":[{"value":"/ Same as [`TimezoneOffsetColonZ`](#variant.TimezoneOffsetColonZ) but prints no colon.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":127218,"byte_end":127306,"line_start":237,"line_end":237,"column_start":5,"column_end":93}},{"value":"/ Parsing allows an optional colon.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":127311,"byte_end":127348,"line_start":238,"line_end":238,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3621},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":127461,"byte_end":127468,"line_start":241,"line_end":241,"column_start":5,"column_end":12},"name":"RFC2822","qualname":"::format::Fixed::RFC2822","value":"Fixed::RFC2822","parent":{"krate":0,"index":3590},"children":[],"decl_id":null,"docs":" RFC 2822 date and time syntax. Commonly used for email and MIME date and time.\n","sig":null,"attributes":[{"value":"/ RFC 2822 date and time syntax. Commonly used for email and MIME date and time.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":127374,"byte_end":127456,"line_start":240,"line_end":240,"column_start":5,"column_end":87}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3623},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":127524,"byte_end":127531,"line_start":243,"line_end":243,"column_start":5,"column_end":12},"name":"RFC3339","qualname":"::format::Fixed::RFC3339","value":"Fixed::RFC3339","parent":{"krate":0,"index":3590},"children":[],"decl_id":null,"docs":" RFC 3339 & ISO 8601 date and time syntax.\n","sig":null,"attributes":[{"value":"/ RFC 3339 & ISO 8601 date and time syntax.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":127474,"byte_end":127519,"line_start":242,"line_end":242,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3625},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":127750,"byte_end":127758,"line_start":249,"line_end":249,"column_start":5,"column_end":13},"name":"Internal","qualname":"::format::Fixed::Internal","value":"Fixed::Internal(InternalFixed)","parent":{"krate":0,"index":3590},"children":[],"decl_id":null,"docs":" Internal uses only.","sig":null,"attributes":[{"value":"/ Internal uses only.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":127538,"byte_end":127561,"line_start":245,"line_end":245,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":127566,"byte_end":127569,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ This item exists so that one can add additional internal-only formatting","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":127574,"byte_end":127650,"line_start":247,"line_end":247,"column_start":5,"column_end":81}},{"value":"/ without breaking major compatibility (as enum variants cannot be selectively private).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":127655,"byte_end":127745,"line_start":248,"line_end":248,"column_start":5,"column_end":95}}]},{"kind":"Field","id":{"krate":0,"index":3627},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":127759,"byte_end":127772,"line_start":249,"line_end":249,"column_start":14,"column_end":27},"name":"0","qualname":"::format::Fixed::Internal::0","value":"format::InternalFixed","parent":{"krate":0,"index":3625},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3590},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":124798,"byte_end":124803,"line_start":182,"line_end":182,"column_start":10,"column_end":15},"name":"Fixed","qualname":"::format::Fixed","value":"enum Fixed {\n    ShortMonthName,\n    LongMonthName,\n    ShortWeekdayName,\n    LongWeekdayName,\n    LowerAmPm,\n    UpperAmPm,\n    Nanosecond,\n    Nanosecond3,\n    Nanosecond6,\n    Nanosecond9,\n    TimezoneName,\n    TimezoneOffsetColon,\n    TimezoneOffsetColonZ,\n    TimezoneOffset,\n    TimezoneOffsetZ,\n    RFC2822,\n    RFC3339,\n    Internal(InternalFixed),\n}","parent":null,"children":[{"krate":0,"index":3591},{"krate":0,"index":3593},{"krate":0,"index":3595},{"krate":0,"index":3597},{"krate":0,"index":3599},{"krate":0,"index":3601},{"krate":0,"index":3603},{"krate":0,"index":3605},{"krate":0,"index":3607},{"krate":0,"index":3609},{"krate":0,"index":3611},{"krate":0,"index":3613},{"krate":0,"index":3615},{"krate":0,"index":3617},{"krate":0,"index":3619},{"krate":0,"index":3621},{"krate":0,"index":3623},{"krate":0,"index":3625}],"decl_id":null,"docs":" Fixed-format item types.","sig":null,"attributes":[{"value":"/ Fixed-format item types.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":124575,"byte_end":124603,"line_start":177,"line_end":177,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":124604,"byte_end":124607,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ They have their own rules of formatting and parsing.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":124608,"byte_end":124664,"line_start":179,"line_end":179,"column_start":1,"column_end":57}},{"value":"/ Otherwise noted, they print in the specified cases but parse case-insensitively.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":124665,"byte_end":124749,"line_start":180,"line_end":180,"column_start":1,"column_end":85}}]},{"kind":"Struct","id":{"krate":0,"index":3639},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":127908,"byte_end":127921,"line_start":254,"line_end":254,"column_start":12,"column_end":25},"name":"InternalFixed","qualname":"::format::InternalFixed","value":"InternalFixed {  }","parent":null,"children":[{"krate":0,"index":3640}],"decl_id":null,"docs":" An opaque type representing fixed-format item types for internal uses only.\n","sig":null,"attributes":[{"value":"/ An opaque type representing fixed-format item types for internal uses only.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":127778,"byte_end":127857,"line_start":252,"line_end":252,"column_start":1,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3673},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":128937,"byte_end":128944,"line_start":281,"line_end":281,"column_start":5,"column_end":12},"name":"Literal","qualname":"::format::Item::Literal","value":"Item::Literal(&'a str)","parent":{"krate":0,"index":3671},"children":[],"decl_id":null,"docs":" A literally printed and parsed text.\n","sig":null,"attributes":[{"value":"/ A literally printed and parsed text.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":128892,"byte_end":128932,"line_start":280,"line_end":280,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":3675},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":128945,"byte_end":128952,"line_start":281,"line_end":281,"column_start":13,"column_end":20},"name":"0","qualname":"::format::Item::Literal::0","value":"&'a str","parent":{"krate":0,"index":3673},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3676},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":129082,"byte_end":129094,"line_start":284,"line_end":284,"column_start":5,"column_end":17},"name":"OwnedLiteral","qualname":"::format::Item::OwnedLiteral","value":"Item::OwnedLiteral(Box<str>)","parent":{"krate":0,"index":3671},"children":[],"decl_id":null,"docs":" Same as `Literal` but with the string owned by the item.\n","sig":null,"attributes":[{"value":"/ Same as `Literal` but with the string owned by the item.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":128959,"byte_end":129019,"line_start":282,"line_end":282,"column_start":5,"column_end":65}},{"value":"cfg(any(feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":129024,"byte_end":129077,"line_start":283,"line_end":283,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":3678},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":129095,"byte_end":129103,"line_start":284,"line_end":284,"column_start":18,"column_end":26},"name":"0","qualname":"::format::Item::OwnedLiteral::0","value":"std::boxed::Box<str>","parent":{"krate":0,"index":3676},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3679},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":129182,"byte_end":129187,"line_start":286,"line_end":286,"column_start":5,"column_end":10},"name":"Space","qualname":"::format::Item::Space","value":"Item::Space(&'a str)","parent":{"krate":0,"index":3671},"children":[],"decl_id":null,"docs":" Whitespace. Prints literally but reads zero or more whitespace.\n","sig":null,"attributes":[{"value":"/ Whitespace. Prints literally but reads zero or more whitespace.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":129110,"byte_end":129177,"line_start":285,"line_end":285,"column_start":5,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":3681},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":129188,"byte_end":129195,"line_start":286,"line_end":286,"column_start":11,"column_end":18},"name":"0","qualname":"::format::Item::Space::0","value":"&'a str","parent":{"krate":0,"index":3679},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3682},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":129323,"byte_end":129333,"line_start":289,"line_end":289,"column_start":5,"column_end":15},"name":"OwnedSpace","qualname":"::format::Item::OwnedSpace","value":"Item::OwnedSpace(Box<str>)","parent":{"krate":0,"index":3671},"children":[],"decl_id":null,"docs":" Same as `Space` but with the string owned by the item.\n","sig":null,"attributes":[{"value":"/ Same as `Space` but with the string owned by the item.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":129202,"byte_end":129260,"line_start":287,"line_end":287,"column_start":5,"column_end":63}},{"value":"cfg(any(feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":129265,"byte_end":129318,"line_start":288,"line_end":288,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":3684},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":129334,"byte_end":129342,"line_start":289,"line_end":289,"column_start":16,"column_end":24},"name":"0","qualname":"::format::Item::OwnedSpace::0","value":"std::boxed::Box<str>","parent":{"krate":0,"index":3682},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3685},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":129512,"byte_end":129519,"line_start":292,"line_end":292,"column_start":5,"column_end":12},"name":"Numeric","qualname":"::format::Item::Numeric","value":"Item::Numeric(Numeric, Pad)","parent":{"krate":0,"index":3671},"children":[],"decl_id":null,"docs":" Numeric item. Can be optionally padded to the maximal length (if any) when formatting;\n the parser simply ignores any padded whitespace and zeroes.\n","sig":null,"attributes":[{"value":"/ Numeric item. Can be optionally padded to the maximal length (if any) when formatting;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":129349,"byte_end":129439,"line_start":290,"line_end":290,"column_start":5,"column_end":95}},{"value":"/ the parser simply ignores any padded whitespace and zeroes.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":129444,"byte_end":129507,"line_start":291,"line_end":291,"column_start":5,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":3687},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":129520,"byte_end":129527,"line_start":292,"line_end":292,"column_start":13,"column_end":20},"name":"0","qualname":"::format::Item::Numeric::0","value":"format::Numeric","parent":{"krate":0,"index":3685},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3688},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":129529,"byte_end":129532,"line_start":292,"line_end":292,"column_start":22,"column_end":25},"name":"1","qualname":"::format::Item::Numeric::1","value":"format::Pad","parent":{"krate":0,"index":3685},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3689},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":129566,"byte_end":129571,"line_start":294,"line_end":294,"column_start":5,"column_end":10},"name":"Fixed","qualname":"::format::Item::Fixed","value":"Item::Fixed(Fixed)","parent":{"krate":0,"index":3671},"children":[],"decl_id":null,"docs":" Fixed-format item.\n","sig":null,"attributes":[{"value":"/ Fixed-format item.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":129539,"byte_end":129561,"line_start":293,"line_end":293,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":3691},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":129572,"byte_end":129577,"line_start":294,"line_end":294,"column_start":11,"column_end":16},"name":"0","qualname":"::format::Item::Fixed::0","value":"format::Fixed","parent":{"krate":0,"index":3689},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3692},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":129660,"byte_end":129665,"line_start":296,"line_end":296,"column_start":5,"column_end":10},"name":"Error","qualname":"::format::Item::Error","value":"Item::Error","parent":{"krate":0,"index":3671},"children":[],"decl_id":null,"docs":" Issues a formatting error. Used to signal an invalid format string.\n","sig":null,"attributes":[{"value":"/ Issues a formatting error. Used to signal an invalid format string.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":129584,"byte_end":129655,"line_start":295,"line_end":295,"column_start":5,"column_end":76}}]},{"kind":"Enum","id":{"krate":0,"index":3671},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":128877,"byte_end":128881,"line_start":279,"line_end":279,"column_start":10,"column_end":14},"name":"Item","qualname":"::format::Item","value":"enum Item<'a> {\n    Literal(&'a str),\n    OwnedLiteral(Box<str>),\n    Space(&'a str),\n    OwnedSpace(Box<str>),\n    Numeric(Numeric, Pad),\n    Fixed(Fixed),\n    Error,\n}","parent":null,"children":[{"krate":0,"index":3673},{"krate":0,"index":3676},{"krate":0,"index":3679},{"krate":0,"index":3682},{"krate":0,"index":3685},{"krate":0,"index":3689},{"krate":0,"index":3692}],"decl_id":null,"docs":" A single formatting item. This is used for both formatting and parsing.\n","sig":null,"attributes":[{"value":"/ A single formatting item. This is used for both formatting and parsing.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":128753,"byte_end":128828,"line_start":277,"line_end":277,"column_start":1,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":3711},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":130413,"byte_end":130423,"line_start":337,"line_end":337,"column_start":12,"column_end":22},"name":"ParseError","qualname":"::format::ParseError","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error from the `parse` function.\n","sig":null,"attributes":[{"value":"/ An error from the `parse` function.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":130317,"byte_end":130356,"line_start":335,"line_end":335,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1026},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":130507,"byte_end":130511,"line_start":341,"line_end":341,"column_start":12,"column_end":16},"name":"kind","qualname":"<ParseError>::kind","value":"fn kind(&Self) -> ParseErrorKind","parent":null,"children":[],"decl_id":null,"docs":" The category of parse error\n","sig":null,"attributes":[{"value":"/ The category of parse error","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":130464,"byte_end":130495,"line_start":340,"line_end":340,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3727},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":130717,"byte_end":130727,"line_start":350,"line_end":350,"column_start":5,"column_end":15},"name":"OutOfRange","qualname":"::format::ParseErrorKind::OutOfRange","value":"ParseErrorKind::OutOfRange","parent":{"krate":0,"index":3726},"children":[],"decl_id":null,"docs":" Given field is out of permitted range.\n","sig":null,"attributes":[{"value":"/ Given field is out of permitted range.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":130670,"byte_end":130712,"line_start":349,"line_end":349,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3729},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":131005,"byte_end":131015,"line_start":356,"line_end":356,"column_start":5,"column_end":15},"name":"Impossible","qualname":"::format::ParseErrorKind::Impossible","value":"ParseErrorKind::Impossible","parent":{"krate":0,"index":3726},"children":[],"decl_id":null,"docs":" There is no possible date and time value with given set of fields.","sig":null,"attributes":[{"value":"/ There is no possible date and time value with given set of fields.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":130734,"byte_end":130804,"line_start":352,"line_end":352,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":130809,"byte_end":130812,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ This does not include the out-of-range conditions, which are trivially invalid.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":130817,"byte_end":130900,"line_start":354,"line_end":354,"column_start":5,"column_end":88}},{"value":"/ It includes the case that there are one or more fields that are inconsistent to each other.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":130905,"byte_end":131000,"line_start":355,"line_end":355,"column_start":5,"column_end":100}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3731},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":131381,"byte_end":131390,"line_start":363,"line_end":363,"column_start":5,"column_end":14},"name":"NotEnough","qualname":"::format::ParseErrorKind::NotEnough","value":"ParseErrorKind::NotEnough","parent":{"krate":0,"index":3726},"children":[],"decl_id":null,"docs":" Given set of fields is not enough to make a requested date and time value.","sig":null,"attributes":[{"value":"/ Given set of fields is not enough to make a requested date and time value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":131022,"byte_end":131100,"line_start":358,"line_end":358,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":131105,"byte_end":131108,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ Note that there *may* be a case that given fields constrain the possible values so much","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":131113,"byte_end":131204,"line_start":360,"line_end":360,"column_start":5,"column_end":96}},{"value":"/ that there is a unique possible value. Chrono only tries to be correct for","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":131209,"byte_end":131287,"line_start":361,"line_end":361,"column_start":5,"column_end":83}},{"value":"/ most useful sets of fields however, as such constraint solving can be expensive.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":131292,"byte_end":131376,"line_start":362,"line_end":362,"column_start":5,"column_end":89}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3733},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":131486,"byte_end":131493,"line_start":366,"line_end":366,"column_start":5,"column_end":12},"name":"Invalid","qualname":"::format::ParseErrorKind::Invalid","value":"ParseErrorKind::Invalid","parent":{"krate":0,"index":3726},"children":[],"decl_id":null,"docs":" The input string has some invalid character sequence for given formatting items.\n","sig":null,"attributes":[{"value":"/ The input string has some invalid character sequence for given formatting items.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":131397,"byte_end":131481,"line_start":365,"line_end":365,"column_start":5,"column_end":89}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3735},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":131553,"byte_end":131561,"line_start":369,"line_end":369,"column_start":5,"column_end":13},"name":"TooShort","qualname":"::format::ParseErrorKind::TooShort","value":"ParseErrorKind::TooShort","parent":{"krate":0,"index":3726},"children":[],"decl_id":null,"docs":" The input string has been prematurely ended.\n","sig":null,"attributes":[{"value":"/ The input string has been prematurely ended.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":131500,"byte_end":131548,"line_start":368,"line_end":368,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3737},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":131644,"byte_end":131651,"line_start":372,"line_end":372,"column_start":5,"column_end":12},"name":"TooLong","qualname":"::format::ParseErrorKind::TooLong","value":"ParseErrorKind::TooLong","parent":{"krate":0,"index":3726},"children":[],"decl_id":null,"docs":" All formatting items have been read but there is a remaining input.\n","sig":null,"attributes":[{"value":"/ All formatting items have been read but there is a remaining input.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":131568,"byte_end":131639,"line_start":371,"line_end":371,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3739},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":131756,"byte_end":131765,"line_start":375,"line_end":375,"column_start":5,"column_end":14},"name":"BadFormat","qualname":"::format::ParseErrorKind::BadFormat","value":"ParseErrorKind::BadFormat","parent":{"krate":0,"index":3726},"children":[],"decl_id":null,"docs":" There was an error on the formatting string, or there were non-supported formating items.\n","sig":null,"attributes":[{"value":"/ There was an error on the formatting string, or there were non-supported formating items.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":131658,"byte_end":131751,"line_start":374,"line_end":374,"column_start":5,"column_end":98}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3741},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":131876,"byte_end":131891,"line_start":379,"line_end":379,"column_start":5,"column_end":20},"name":"__Nonexhaustive","qualname":"::format::ParseErrorKind::__Nonexhaustive","value":"ParseErrorKind::__Nonexhaustive","parent":{"krate":0,"index":3726},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3726},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":130649,"byte_end":130663,"line_start":348,"line_end":348,"column_start":10,"column_end":24},"name":"ParseErrorKind","qualname":"::format::ParseErrorKind","value":"enum ParseErrorKind {\n    OutOfRange,\n    Impossible,\n    NotEnough,\n    Invalid,\n    TooShort,\n    TooLong,\n    BadFormat,\n    __Nonexhaustive,\n}","parent":null,"children":[{"krate":0,"index":3727},{"krate":0,"index":3729},{"krate":0,"index":3731},{"krate":0,"index":3733},{"krate":0,"index":3735},{"krate":0,"index":3737},{"krate":0,"index":3739},{"krate":0,"index":3741}],"decl_id":null,"docs":" The category of parse error\n","sig":null,"attributes":[{"value":"/ The category of parse error","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":130563,"byte_end":130594,"line_start":346,"line_end":346,"column_start":1,"column_end":32}}]},{"kind":"Type","id":{"krate":0,"index":1027},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":131942,"byte_end":131953,"line_start":383,"line_end":383,"column_start":10,"column_end":21},"name":"ParseResult","qualname":"::format::ParseResult","value":"Result<T, ParseError>","parent":null,"children":[],"decl_id":null,"docs":" Same as `Result<T, ParseError>`.\n","sig":null,"attributes":[{"value":"/ Same as `Result<T, ParseError>`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":131896,"byte_end":131932,"line_start":382,"line_end":382,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1030},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":132025,"byte_end":132028,"line_start":386,"line_end":386,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ParseError as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10117},"children":[],"decl_id":{"krate":2,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1032},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":132842,"byte_end":132853,"line_start":403,"line_end":403,"column_start":8,"column_end":19},"name":"description","qualname":"<ParseError as std::error::Error>::description","value":"fn description(&Self) -> &str","parent":{"krate":1,"index":2569},"children":[],"decl_id":{"krate":1,"index":2573},"docs":"","sig":null,"attributes":[{"value":"allow(deprecated)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":132814,"byte_end":132834,"line_start":402,"line_end":402,"column_start":5,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":1040},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":133556,"byte_end":133567,"line_start":419,"line_end":419,"column_start":8,"column_end":19},"name":"format_item","qualname":"::format::format_item","value":"fn format_item<'a>(&mut fmt::Formatter, Option<&NaiveDate>,\nOption<&NaiveTime>, Option<&(String, FixedOffset)>, &Item) -> fmt::Result","parent":null,"children":[],"decl_id":null,"docs":" Formats single formatting item\n","sig":null,"attributes":[{"value":"/ Formats single formatting item","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":133460,"byte_end":133494,"line_start":417,"line_end":417,"column_start":1,"column_end":35}},{"value":"cfg(any(feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":133495,"byte_end":133548,"line_start":418,"line_end":418,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":1096},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":146902,"byte_end":146908,"line_start":717,"line_end":717,"column_start":8,"column_end":14},"name":"format","qualname":"::format::format","value":"fn format<'a, I,\nB>(&mut fmt::Formatter, Option<&NaiveDate>, Option<&NaiveTime>,\nOption<&(String, FixedOffset)>, I) -> fmt::Result where I: Iterator<Item =\nB> + Clone, B: Borrow<Item>","parent":null,"children":[],"decl_id":null,"docs":" Tries to format given arguments with given formatting items.\n Internally used by `DelayedFormat`.\n","sig":null,"attributes":[{"value":"/ Tries to format given arguments with given formatting items.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":146736,"byte_end":146800,"line_start":714,"line_end":714,"column_start":1,"column_end":65}},{"value":"/ Internally used by `DelayedFormat`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":146801,"byte_end":146840,"line_start":715,"line_end":715,"column_start":1,"column_end":40}},{"value":"cfg(any(feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":146841,"byte_end":146894,"line_start":716,"line_end":716,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":3754},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":155481,"byte_end":155487,"line_start":26,"line_end":26,"column_start":12,"column_end":18},"name":"Parsed","qualname":"::format::parsed::Parsed","value":"Parsed { year, year_div_100, year_mod_100, isoyear, isoyear_div_100, isoyear_mod_100, month, week_from_sun, week_from_mon, isoweek, weekday, ordinal, day, hour_div_12, hour_mod_12, minute, second, nanosecond, timestamp, offset }","parent":null,"children":[{"krate":0,"index":3755},{"krate":0,"index":3756},{"krate":0,"index":3757},{"krate":0,"index":3758},{"krate":0,"index":3759},{"krate":0,"index":3760},{"krate":0,"index":3761},{"krate":0,"index":3762},{"krate":0,"index":3763},{"krate":0,"index":3764},{"krate":0,"index":3765},{"krate":0,"index":3766},{"krate":0,"index":3767},{"krate":0,"index":3768},{"krate":0,"index":3769},{"krate":0,"index":3770},{"krate":0,"index":3771},{"krate":0,"index":3772},{"krate":0,"index":3773},{"krate":0,"index":3774},{"krate":0,"index":3775}],"decl_id":null,"docs":" Parsed parts of date and time. There are two classes of methods:","sig":null,"attributes":[{"value":"/ Parsed parts of date and time. There are two classes of methods:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":154989,"byte_end":155057,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":155058,"byte_end":155061,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ - `set_*` methods try to set given field(s) while checking for the consistency.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":155062,"byte_end":155145,"line_start":20,"line_end":20,"column_start":1,"column_end":84}},{"value":"/   It may or may not check for the range constraint immediately (for efficiency reasons).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":155146,"byte_end":155238,"line_start":21,"line_end":21,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":155239,"byte_end":155242,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ - `to_*` methods try to make a concrete date and time value out of set fields.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":155243,"byte_end":155325,"line_start":23,"line_end":23,"column_start":1,"column_end":83}},{"value":"/   It fully checks any remaining out-of-range conditions and inconsistent/impossible fields.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":155326,"byte_end":155421,"line_start":24,"line_end":24,"column_start":1,"column_end":96}}]},{"kind":"Field","id":{"krate":0,"index":3755},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":155664,"byte_end":155668,"line_start":31,"line_end":31,"column_start":9,"column_end":13},"name":"year","qualname":"::format::parsed::Parsed::year","value":"std::option::Option<i32>","parent":{"krate":0,"index":3754},"children":[],"decl_id":null,"docs":" Year.","sig":null,"attributes":[{"value":"/ Year.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":155494,"byte_end":155503,"line_start":27,"line_end":27,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":155508,"byte_end":155511,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ This can be negative unlike [`year_div_100`](#structfield.year_div_100)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":155516,"byte_end":155591,"line_start":29,"line_end":29,"column_start":5,"column_end":80}},{"value":"/ and [`year_mod_100`](#structfield.year_mod_100) fields.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":155596,"byte_end":155655,"line_start":30,"line_end":30,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":3756},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":155972,"byte_end":155984,"line_start":38,"line_end":38,"column_start":9,"column_end":21},"name":"year_div_100","qualname":"::format::parsed::Parsed::year_div_100","value":"std::option::Option<i32>","parent":{"krate":0,"index":3754},"children":[],"decl_id":null,"docs":" Year divided by 100. Implies that the year is >= 1 BCE when set.","sig":null,"attributes":[{"value":"/ Year divided by 100. Implies that the year is >= 1 BCE when set.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":155688,"byte_end":155756,"line_start":33,"line_end":33,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":155761,"byte_end":155764,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ Due to the common usage, if this field is missing but","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":155769,"byte_end":155826,"line_start":35,"line_end":35,"column_start":5,"column_end":62}},{"value":"/ [`year_mod_100`](#structfield.year_mod_100) is present,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":155831,"byte_end":155890,"line_start":36,"line_end":36,"column_start":5,"column_end":64}},{"value":"/ it is inferred to 19 when `year_mod_100 >= 70` and 20 otherwise.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":155895,"byte_end":155963,"line_start":37,"line_end":37,"column_start":5,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":3757},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":156077,"byte_end":156089,"line_start":41,"line_end":41,"column_start":9,"column_end":21},"name":"year_mod_100","qualname":"::format::parsed::Parsed::year_mod_100","value":"std::option::Option<i32>","parent":{"krate":0,"index":3754},"children":[],"decl_id":null,"docs":" Year modulo 100. Implies that the year is >= 1 BCE when set.\n","sig":null,"attributes":[{"value":"/ Year modulo 100. Implies that the year is >= 1 BCE when set.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":156004,"byte_end":156068,"line_start":40,"line_end":40,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":3758},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":156356,"byte_end":156363,"line_start":47,"line_end":47,"column_start":9,"column_end":16},"name":"isoyear","qualname":"::format::parsed::Parsed::isoyear","value":"std::option::Option<i32>","parent":{"krate":0,"index":3754},"children":[],"decl_id":null,"docs":" Year in the [ISO week date](../naive/struct.NaiveDate.html#week-date).","sig":null,"attributes":[{"value":"/ Year in the [ISO week date](../naive/struct.NaiveDate.html#week-date).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":156109,"byte_end":156183,"line_start":43,"line_end":43,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":156188,"byte_end":156191,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ This can be negative unlike [`isoyear_div_100`](#structfield.isoyear_div_100) and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":156196,"byte_end":156281,"line_start":45,"line_end":45,"column_start":5,"column_end":90}},{"value":"/ [`isoyear_mod_100`](#structfield.isoyear_mod_100) fields.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":156286,"byte_end":156347,"line_start":46,"line_end":46,"column_start":5,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":3759},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":156750,"byte_end":156765,"line_start":55,"line_end":55,"column_start":9,"column_end":24},"name":"isoyear_div_100","qualname":"::format::parsed::Parsed::isoyear_div_100","value":"std::option::Option<i32>","parent":{"krate":0,"index":3754},"children":[],"decl_id":null,"docs":" Year in the [ISO week date](../naive/struct.NaiveDate.html#week-date), divided by 100.\n Implies that the year is >= 1 BCE when set.","sig":null,"attributes":[{"value":"/ Year in the [ISO week date](../naive/struct.NaiveDate.html#week-date), divided by 100.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":156383,"byte_end":156473,"line_start":49,"line_end":49,"column_start":5,"column_end":95}},{"value":"/ Implies that the year is >= 1 BCE when set.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":156478,"byte_end":156525,"line_start":50,"line_end":50,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":156530,"byte_end":156533,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ Due to the common usage, if this field is missing but","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":156538,"byte_end":156595,"line_start":52,"line_end":52,"column_start":5,"column_end":62}},{"value":"/ [`isoyear_mod_100`](#structfield.isoyear_mod_100) is present,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":156600,"byte_end":156665,"line_start":53,"line_end":53,"column_start":5,"column_end":70}},{"value":"/ it is inferred to 19 when `isoyear_mod_100 >= 70` and 20 otherwise.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":156670,"byte_end":156741,"line_start":54,"line_end":54,"column_start":5,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":3760},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":156932,"byte_end":156947,"line_start":59,"line_end":59,"column_start":9,"column_end":24},"name":"isoyear_mod_100","qualname":"::format::parsed::Parsed::isoyear_mod_100","value":"std::option::Option<i32>","parent":{"krate":0,"index":3754},"children":[],"decl_id":null,"docs":" Year in the [ISO week date](../naive/struct.NaiveDate.html#week-date), modulo 100.\n Implies that the year is >= 1 BCE when set.\n","sig":null,"attributes":[{"value":"/ Year in the [ISO week date](../naive/struct.NaiveDate.html#week-date), modulo 100.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":156785,"byte_end":156871,"line_start":57,"line_end":57,"column_start":5,"column_end":91}},{"value":"/ Implies that the year is >= 1 BCE when set.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":156876,"byte_end":156923,"line_start":58,"line_end":58,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3761},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":156994,"byte_end":156999,"line_start":62,"line_end":62,"column_start":9,"column_end":14},"name":"month","qualname":"::format::parsed::Parsed::month","value":"std::option::Option<u32>","parent":{"krate":0,"index":3754},"children":[],"decl_id":null,"docs":" Month (1--12).\n","sig":null,"attributes":[{"value":"/ Month (1--12).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":156967,"byte_end":156985,"line_start":61,"line_end":61,"column_start":5,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":3762},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":157154,"byte_end":157167,"line_start":66,"line_end":66,"column_start":9,"column_end":22},"name":"week_from_sun","qualname":"::format::parsed::Parsed::week_from_sun","value":"std::option::Option<u32>","parent":{"krate":0,"index":3754},"children":[],"decl_id":null,"docs":" Week number, where the week 1 starts at the first Sunday of January\n (0--53, 1--53 or 1--52 depending on the year).\n","sig":null,"attributes":[{"value":"/ Week number, where the week 1 starts at the first Sunday of January","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":157019,"byte_end":157090,"line_start":64,"line_end":64,"column_start":5,"column_end":76}},{"value":"/ (0--53, 1--53 or 1--52 depending on the year).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":157095,"byte_end":157145,"line_start":65,"line_end":65,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":3763},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":157322,"byte_end":157335,"line_start":70,"line_end":70,"column_start":9,"column_end":22},"name":"week_from_mon","qualname":"::format::parsed::Parsed::week_from_mon","value":"std::option::Option<u32>","parent":{"krate":0,"index":3754},"children":[],"decl_id":null,"docs":" Week number, where the week 1 starts at the first Monday of January\n (0--53, 1--53 or 1--52 depending on the year).\n","sig":null,"attributes":[{"value":"/ Week number, where the week 1 starts at the first Monday of January","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":157187,"byte_end":157258,"line_start":68,"line_end":68,"column_start":5,"column_end":76}},{"value":"/ (0--53, 1--53 or 1--52 depending on the year).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":157263,"byte_end":157313,"line_start":69,"line_end":69,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":3764},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":157475,"byte_end":157482,"line_start":74,"line_end":74,"column_start":9,"column_end":16},"name":"isoweek","qualname":"::format::parsed::Parsed::isoweek","value":"std::option::Option<u32>","parent":{"krate":0,"index":3754},"children":[],"decl_id":null,"docs":" [ISO week number](../naive/struct.NaiveDate.html#week-date)\n (1--52 or 1--53 depending on the year).\n","sig":null,"attributes":[{"value":"/ [ISO week number](../naive/struct.NaiveDate.html#week-date)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":157355,"byte_end":157418,"line_start":72,"line_end":72,"column_start":5,"column_end":68}},{"value":"/ (1--52 or 1--53 depending on the year).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":157423,"byte_end":157466,"line_start":73,"line_end":73,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":3765},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":157531,"byte_end":157538,"line_start":77,"line_end":77,"column_start":9,"column_end":16},"name":"weekday","qualname":"::format::parsed::Parsed::weekday","value":"std::option::Option<weekday::Weekday>","parent":{"krate":0,"index":3754},"children":[],"decl_id":null,"docs":" Day of the week.\n","sig":null,"attributes":[{"value":"/ Day of the week.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":157502,"byte_end":157522,"line_start":76,"line_end":76,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":3766},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":157632,"byte_end":157639,"line_start":80,"line_end":80,"column_start":9,"column_end":16},"name":"ordinal","qualname":"::format::parsed::Parsed::ordinal","value":"std::option::Option<u32>","parent":{"krate":0,"index":3754},"children":[],"decl_id":null,"docs":" Day of the year (1--365 or 1--366 depending on the year).\n","sig":null,"attributes":[{"value":"/ Day of the year (1--365 or 1--366 depending on the year).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":157562,"byte_end":157623,"line_start":79,"line_end":79,"column_start":5,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":3767},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":157743,"byte_end":157746,"line_start":83,"line_end":83,"column_start":9,"column_end":12},"name":"day","qualname":"::format::parsed::Parsed::day","value":"std::option::Option<u32>","parent":{"krate":0,"index":3754},"children":[],"decl_id":null,"docs":" Day of the month (1--28, 1--29, 1--30 or 1--31 depending on the month).\n","sig":null,"attributes":[{"value":"/ Day of the month (1--28, 1--29, 1--30 or 1--31 depending on the month).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":157659,"byte_end":157734,"line_start":82,"line_end":82,"column_start":5,"column_end":80}}]},{"kind":"Field","id":{"krate":0,"index":3768},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":157847,"byte_end":157858,"line_start":86,"line_end":86,"column_start":9,"column_end":20},"name":"hour_div_12","qualname":"::format::parsed::Parsed::hour_div_12","value":"std::option::Option<u32>","parent":{"krate":0,"index":3754},"children":[],"decl_id":null,"docs":" Hour number divided by 12 (0--1). 0 indicates AM and 1 indicates PM.\n","sig":null,"attributes":[{"value":"/ Hour number divided by 12 (0--1). 0 indicates AM and 1 indicates PM.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":157766,"byte_end":157838,"line_start":85,"line_end":85,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":3769},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":157921,"byte_end":157932,"line_start":89,"line_end":89,"column_start":9,"column_end":20},"name":"hour_mod_12","qualname":"::format::parsed::Parsed::hour_mod_12","value":"std::option::Option<u32>","parent":{"krate":0,"index":3754},"children":[],"decl_id":null,"docs":" Hour number modulo 12 (0--11).\n","sig":null,"attributes":[{"value":"/ Hour number modulo 12 (0--11).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":157878,"byte_end":157912,"line_start":88,"line_end":88,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":3770},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":157987,"byte_end":157993,"line_start":92,"line_end":92,"column_start":9,"column_end":15},"name":"minute","qualname":"::format::parsed::Parsed::minute","value":"std::option::Option<u32>","parent":{"krate":0,"index":3754},"children":[],"decl_id":null,"docs":" Minute number (0--59).\n","sig":null,"attributes":[{"value":"/ Minute number (0--59).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":157952,"byte_end":157978,"line_start":91,"line_end":91,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":3771},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":158077,"byte_end":158083,"line_start":95,"line_end":95,"column_start":9,"column_end":15},"name":"second","qualname":"::format::parsed::Parsed::second","value":"std::option::Option<u32>","parent":{"krate":0,"index":3754},"children":[],"decl_id":null,"docs":" Second number (0--60, accounting for leap seconds).\n","sig":null,"attributes":[{"value":"/ Second number (0--60, accounting for leap seconds).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":158013,"byte_end":158068,"line_start":94,"line_end":94,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":3772},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":158182,"byte_end":158192,"line_start":98,"line_end":98,"column_start":9,"column_end":19},"name":"nanosecond","qualname":"::format::parsed::Parsed::nanosecond","value":"std::option::Option<u32>","parent":{"krate":0,"index":3754},"children":[],"decl_id":null,"docs":" The number of nanoseconds since the whole second (0--999,999,999).\n","sig":null,"attributes":[{"value":"/ The number of nanoseconds since the whole second (0--999,999,999).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":158103,"byte_end":158173,"line_start":97,"line_end":97,"column_start":5,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":3773},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":158395,"byte_end":158404,"line_start":103,"line_end":103,"column_start":9,"column_end":18},"name":"timestamp","qualname":"::format::parsed::Parsed::timestamp","value":"std::option::Option<i64>","parent":{"krate":0,"index":3754},"children":[],"decl_id":null,"docs":" The number of non-leap seconds since the midnight UTC on January 1, 1970.","sig":null,"attributes":[{"value":"/ The number of non-leap seconds since the midnight UTC on January 1, 1970.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":158212,"byte_end":158289,"line_start":100,"line_end":100,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":158294,"byte_end":158297,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ This can be off by one if [`second`](#structfield.second) is 60 (a leap second).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":158302,"byte_end":158386,"line_start":102,"line_end":102,"column_start":5,"column_end":89}}]},{"kind":"Field","id":{"krate":0,"index":3774},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":158483,"byte_end":158489,"line_start":106,"line_end":106,"column_start":9,"column_end":15},"name":"offset","qualname":"::format::parsed::Parsed::offset","value":"std::option::Option<i32>","parent":{"krate":0,"index":3754},"children":[],"decl_id":null,"docs":" Offset from the local time to UTC, in seconds.\n","sig":null,"attributes":[{"value":"/ Offset from the local time to UTC, in seconds.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":158424,"byte_end":158474,"line_start":105,"line_end":105,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1162},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":159124,"byte_end":159127,"line_start":130,"line_end":130,"column_start":12,"column_end":15},"name":"new","qualname":"<Parsed>::new","value":"fn new() -> Parsed","parent":null,"children":[],"decl_id":null,"docs":" Returns the initial value of parsed parts.\n","sig":null,"attributes":[{"value":"/ Returns the initial value of parsed parts.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":159066,"byte_end":159112,"line_start":129,"line_end":129,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1163},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":159277,"byte_end":159285,"line_start":136,"line_end":136,"column_start":12,"column_end":20},"name":"set_year","qualname":"<Parsed>::set_year","value":"fn set_year(&mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`year`](#structfield.year) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`year`](#structfield.year) field from given value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":159179,"byte_end":159251,"line_start":134,"line_end":134,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":159256,"byte_end":159265,"line_start":135,"line_end":135,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1164},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":159534,"byte_end":159550,"line_start":142,"line_end":142,"column_start":12,"column_end":28},"name":"set_year_div_100","qualname":"<Parsed>::set_year_div_100","value":"fn set_year_div_100(&mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`year_div_100`](#structfield.year_div_100) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`year_div_100`](#structfield.year_div_100) field from given value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":159420,"byte_end":159508,"line_start":140,"line_end":140,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":159513,"byte_end":159522,"line_start":141,"line_end":141,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1165},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":159878,"byte_end":159894,"line_start":151,"line_end":151,"column_start":12,"column_end":28},"name":"set_year_mod_100","qualname":"<Parsed>::set_year_mod_100","value":"fn set_year_mod_100(&mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`year_mod_100`](#structfield.year_mod_100) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`year_mod_100`](#structfield.year_mod_100) field from given value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":159764,"byte_end":159852,"line_start":149,"line_end":149,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":159857,"byte_end":159866,"line_start":150,"line_end":150,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1166},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":160212,"byte_end":160223,"line_start":160,"line_end":160,"column_start":12,"column_end":23},"name":"set_isoyear","qualname":"<Parsed>::set_isoyear","value":"fn set_isoyear(&mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`isoyear`](#structfield.isoyear) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`isoyear`](#structfield.isoyear) field from given value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":160108,"byte_end":160186,"line_start":158,"line_end":158,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":160191,"byte_end":160200,"line_start":159,"line_end":159,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1167},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":160481,"byte_end":160500,"line_start":166,"line_end":166,"column_start":12,"column_end":31},"name":"set_isoyear_div_100","qualname":"<Parsed>::set_isoyear_div_100","value":"fn set_isoyear_div_100(&mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`isoyear_div_100`](#structfield.isoyear_div_100) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`isoyear_div_100`](#structfield.isoyear_div_100) field from given value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":160361,"byte_end":160455,"line_start":164,"line_end":164,"column_start":5,"column_end":99}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":160460,"byte_end":160469,"line_start":165,"line_end":165,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1168},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":160837,"byte_end":160856,"line_start":175,"line_end":175,"column_start":12,"column_end":31},"name":"set_isoyear_mod_100","qualname":"<Parsed>::set_isoyear_mod_100","value":"fn set_isoyear_mod_100(&mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`isoyear_mod_100`](#structfield.isoyear_mod_100) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`isoyear_mod_100`](#structfield.isoyear_mod_100) field from given value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":160717,"byte_end":160811,"line_start":173,"line_end":173,"column_start":5,"column_end":99}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":160816,"byte_end":160825,"line_start":174,"line_end":174,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1169},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":161173,"byte_end":161182,"line_start":184,"line_end":184,"column_start":12,"column_end":21},"name":"set_month","qualname":"<Parsed>::set_month","value":"fn set_month(&mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`month`](#structfield.month) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`month`](#structfield.month) field from given value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":161073,"byte_end":161147,"line_start":182,"line_end":182,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":161152,"byte_end":161161,"line_start":183,"line_end":183,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1170},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":161434,"byte_end":161451,"line_start":190,"line_end":190,"column_start":12,"column_end":29},"name":"set_week_from_sun","qualname":"<Parsed>::set_week_from_sun","value":"fn set_week_from_sun(&mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`week_from_sun`](#structfield.week_from_sun) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`week_from_sun`](#structfield.week_from_sun) field from given value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":161318,"byte_end":161408,"line_start":188,"line_end":188,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":161413,"byte_end":161422,"line_start":189,"line_end":189,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1171},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":161711,"byte_end":161728,"line_start":196,"line_end":196,"column_start":12,"column_end":29},"name":"set_week_from_mon","qualname":"<Parsed>::set_week_from_mon","value":"fn set_week_from_mon(&mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`week_from_mon`](#structfield.week_from_mon) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`week_from_mon`](#structfield.week_from_mon) field from given value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":161595,"byte_end":161685,"line_start":194,"line_end":194,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":161690,"byte_end":161699,"line_start":195,"line_end":195,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1172},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":161976,"byte_end":161987,"line_start":202,"line_end":202,"column_start":12,"column_end":23},"name":"set_isoweek","qualname":"<Parsed>::set_isoweek","value":"fn set_isoweek(&mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`isoweek`](#structfield.isoweek) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`isoweek`](#structfield.isoweek) field from given value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":161872,"byte_end":161950,"line_start":200,"line_end":200,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":161955,"byte_end":161964,"line_start":201,"line_end":201,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1173},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":162229,"byte_end":162240,"line_start":208,"line_end":208,"column_start":12,"column_end":23},"name":"set_weekday","qualname":"<Parsed>::set_weekday","value":"fn set_weekday(&mut Self, Weekday) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`weekday`](#structfield.weekday) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`weekday`](#structfield.weekday) field from given value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":162125,"byte_end":162203,"line_start":206,"line_end":206,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":162208,"byte_end":162217,"line_start":207,"line_end":207,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1174},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":162456,"byte_end":162467,"line_start":214,"line_end":214,"column_start":12,"column_end":23},"name":"set_ordinal","qualname":"<Parsed>::set_ordinal","value":"fn set_ordinal(&mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`ordinal`](#structfield.ordinal) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`ordinal`](#structfield.ordinal) field from given value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":162352,"byte_end":162430,"line_start":212,"line_end":212,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":162435,"byte_end":162444,"line_start":213,"line_end":213,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1175},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":162701,"byte_end":162708,"line_start":220,"line_end":220,"column_start":12,"column_end":19},"name":"set_day","qualname":"<Parsed>::set_day","value":"fn set_day(&mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`day`](#structfield.day) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`day`](#structfield.day) field from given value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":162605,"byte_end":162675,"line_start":218,"line_end":218,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":162680,"byte_end":162689,"line_start":219,"line_end":219,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1176},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":162994,"byte_end":163002,"line_start":227,"line_end":227,"column_start":12,"column_end":20},"name":"set_ampm","qualname":"<Parsed>::set_ampm","value":"fn set_ampm(&mut Self, bool) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`hour_div_12`](#structfield.hour_div_12) field from given value.\n (`false` for AM, `true` for PM)\n","sig":null,"attributes":[{"value":"/ Tries to set the [`hour_div_12`](#structfield.hour_div_12) field from given value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":162842,"byte_end":162928,"line_start":224,"line_end":224,"column_start":5,"column_end":91}},{"value":"/ (`false` for AM, `true` for PM)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":162933,"byte_end":162968,"line_start":225,"line_end":225,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":162973,"byte_end":162982,"line_start":226,"line_end":226,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1177},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":163279,"byte_end":163289,"line_start":234,"line_end":234,"column_start":12,"column_end":22},"name":"set_hour12","qualname":"<Parsed>::set_hour12","value":"fn set_hour12(&mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`hour_mod_12`](#structfield.hour_mod_12) field from\n given hour number in 12-hour clocks.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`hour_mod_12`](#structfield.hour_mod_12) field from","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":163135,"byte_end":163208,"line_start":231,"line_end":231,"column_start":5,"column_end":78}},{"value":"/ given hour number in 12-hour clocks.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":163213,"byte_end":163253,"line_start":232,"line_end":232,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":163258,"byte_end":163267,"line_start":233,"line_end":233,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1178},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":163669,"byte_end":163677,"line_start":244,"line_end":244,"column_start":12,"column_end":20},"name":"set_hour","qualname":"<Parsed>::set_hour","value":"fn set_hour(&mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set both [`hour_div_12`](#structfield.hour_div_12) and\n [`hour_mod_12`](#structfield.hour_mod_12) fields from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set both [`hour_div_12`](#structfield.hour_div_12) and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":163501,"byte_end":163568,"line_start":241,"line_end":241,"column_start":5,"column_end":72}},{"value":"/ [`hour_mod_12`](#structfield.hour_mod_12) fields from given value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":163573,"byte_end":163643,"line_start":242,"line_end":242,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":163648,"byte_end":163657,"line_start":243,"line_end":243,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1179},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":164021,"byte_end":164031,"line_start":253,"line_end":253,"column_start":12,"column_end":22},"name":"set_minute","qualname":"<Parsed>::set_minute","value":"fn set_minute(&mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`minute`](#structfield.minute) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`minute`](#structfield.minute) field from given value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":163919,"byte_end":163995,"line_start":251,"line_end":251,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":164000,"byte_end":164009,"line_start":252,"line_end":252,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1180},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":164270,"byte_end":164280,"line_start":259,"line_end":259,"column_start":12,"column_end":22},"name":"set_second","qualname":"<Parsed>::set_second","value":"fn set_second(&mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`second`](#structfield.second) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`second`](#structfield.second) field from given value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":164168,"byte_end":164244,"line_start":257,"line_end":257,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":164249,"byte_end":164258,"line_start":258,"line_end":258,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1181},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":164527,"byte_end":164541,"line_start":265,"line_end":265,"column_start":12,"column_end":26},"name":"set_nanosecond","qualname":"<Parsed>::set_nanosecond","value":"fn set_nanosecond(&mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`nanosecond`](#structfield.nanosecond) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`nanosecond`](#structfield.nanosecond) field from given value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":164417,"byte_end":164501,"line_start":263,"line_end":263,"column_start":5,"column_end":89}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":164506,"byte_end":164515,"line_start":264,"line_end":264,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1182},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":164790,"byte_end":164803,"line_start":271,"line_end":271,"column_start":12,"column_end":25},"name":"set_timestamp","qualname":"<Parsed>::set_timestamp","value":"fn set_timestamp(&mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`timestamp`](#structfield.timestamp) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`timestamp`](#structfield.timestamp) field from given value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":164682,"byte_end":164764,"line_start":269,"line_end":269,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":164769,"byte_end":164778,"line_start":270,"line_end":270,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1183},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":165015,"byte_end":165025,"line_start":277,"line_end":277,"column_start":12,"column_end":22},"name":"set_offset","qualname":"<Parsed>::set_offset","value":"fn set_offset(&mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`offset`](#structfield.offset) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`offset`](#structfield.offset) field from given value.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":164913,"byte_end":164989,"line_start":275,"line_end":275,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":164994,"byte_end":165003,"line_start":276,"line_end":276,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1184},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":165669,"byte_end":165682,"line_start":292,"line_end":292,"column_start":12,"column_end":25},"name":"to_naive_date","qualname":"<Parsed>::to_naive_date","value":"fn to_naive_date(&Self) -> ParseResult<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Returns a parsed naive date out of given fields.","sig":null,"attributes":[{"value":"/ Returns a parsed naive date out of given fields.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":165162,"byte_end":165214,"line_start":281,"line_end":281,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":165219,"byte_end":165222,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ This method is able to determine the date from given subset of fields:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":165227,"byte_end":165301,"line_start":283,"line_end":283,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":165306,"byte_end":165309,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ - Year, month, day.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":165314,"byte_end":165337,"line_start":285,"line_end":285,"column_start":5,"column_end":28}},{"value":"/ - Year, day of the year (ordinal).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":165342,"byte_end":165380,"line_start":286,"line_end":286,"column_start":5,"column_end":43}},{"value":"/ - Year, week number counted from Sunday or Monday, day of the week.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":165385,"byte_end":165456,"line_start":287,"line_end":287,"column_start":5,"column_end":76}},{"value":"/ - ISO week date.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":165461,"byte_end":165481,"line_start":288,"line_end":288,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":165486,"byte_end":165489,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ Gregorian year and ISO week date year can have their century number (`*_div_100`) omitted,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":165494,"byte_end":165588,"line_start":290,"line_end":290,"column_start":5,"column_end":99}},{"value":"/ the two-digit year is used to guess the century number then.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":165593,"byte_end":165657,"line_start":291,"line_end":291,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1192},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":175001,"byte_end":175014,"line_start":500,"line_end":500,"column_start":12,"column_end":25},"name":"to_naive_time","qualname":"<Parsed>::to_naive_time","value":"fn to_naive_time(&Self) -> ParseResult<NaiveTime>","parent":null,"children":[],"decl_id":null,"docs":" Returns a parsed naive time out of given fields.","sig":null,"attributes":[{"value":"/ Returns a parsed naive time out of given fields.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":174598,"byte_end":174650,"line_start":491,"line_end":491,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":174655,"byte_end":174658,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ This method is able to determine the time from given subset of fields:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":174663,"byte_end":174737,"line_start":493,"line_end":493,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":174742,"byte_end":174745,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ - Hour, minute. (second and nanosecond assumed to be 0)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":174750,"byte_end":174809,"line_start":495,"line_end":495,"column_start":5,"column_end":64}},{"value":"/ - Hour, minute, second. (nanosecond assumed to be 0)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":174814,"byte_end":174870,"line_start":496,"line_end":496,"column_start":5,"column_end":61}},{"value":"/ - Hour, minute, second, nanosecond.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":174875,"byte_end":174914,"line_start":497,"line_end":497,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":174919,"byte_end":174922,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ It is able to handle leap seconds when given second is 60.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":174927,"byte_end":174989,"line_start":499,"line_end":499,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1193},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":176797,"byte_end":176826,"line_start":542,"line_end":542,"column_start":12,"column_end":41},"name":"to_naive_datetime_with_offset","qualname":"<Parsed>::to_naive_datetime_with_offset","value":"fn to_naive_datetime_with_offset(&Self, i32) -> ParseResult<NaiveDateTime>","parent":null,"children":[],"decl_id":null,"docs":" Returns a parsed naive date and time out of given fields,\n except for the [`offset`](#structfield.offset) field (assumed to have a given value).\n This is required for parsing a local time or other known-timezone inputs.","sig":null,"attributes":[{"value":"/ Returns a parsed naive date and time out of given fields,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":176312,"byte_end":176373,"line_start":535,"line_end":535,"column_start":5,"column_end":66}},{"value":"/ except for the [`offset`](#structfield.offset) field (assumed to have a given value).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":176378,"byte_end":176467,"line_start":536,"line_end":536,"column_start":5,"column_end":94}},{"value":"/ This is required for parsing a local time or other known-timezone inputs.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":176472,"byte_end":176549,"line_start":537,"line_end":537,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":176554,"byte_end":176557,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ This method is able to determine the combined date and time","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":176562,"byte_end":176625,"line_start":539,"line_end":539,"column_start":5,"column_end":68}},{"value":"/ from date and time fields or a single [`timestamp`](#structfield.timestamp) field.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":176630,"byte_end":176716,"line_start":540,"line_end":540,"column_start":5,"column_end":91}},{"value":"/ Either way those fields have to be consistent to each other.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":176721,"byte_end":176785,"line_start":541,"line_end":541,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1204},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":180244,"byte_end":180259,"line_start":615,"line_end":615,"column_start":12,"column_end":27},"name":"to_fixed_offset","qualname":"<Parsed>::to_fixed_offset","value":"fn to_fixed_offset(&Self) -> ParseResult<FixedOffset>","parent":null,"children":[],"decl_id":null,"docs":" Returns a parsed fixed time zone offset out of given fields.\n","sig":null,"attributes":[{"value":"/ Returns a parsed fixed time zone offset out of given fields.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":180168,"byte_end":180232,"line_start":614,"line_end":614,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1205},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":180731,"byte_end":180742,"line_start":625,"line_end":625,"column_start":12,"column_end":23},"name":"to_datetime","qualname":"<Parsed>::to_datetime","value":"fn to_datetime(&Self) -> ParseResult<DateTime<FixedOffset>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a parsed timezone-aware date and time out of given fields.","sig":null,"attributes":[{"value":"/ Returns a parsed timezone-aware date and time out of given fields.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":180380,"byte_end":180450,"line_start":619,"line_end":619,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":180455,"byte_end":180458,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ This method is able to determine the combined date and time","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":180463,"byte_end":180526,"line_start":621,"line_end":621,"column_start":5,"column_end":68}},{"value":"/ from date and time fields or a single [`timestamp`](#structfield.timestamp) field,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":180531,"byte_end":180617,"line_start":622,"line_end":622,"column_start":5,"column_end":91}},{"value":"/ plus a time zone offset.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":180622,"byte_end":180650,"line_start":623,"line_end":623,"column_start":5,"column_end":33}},{"value":"/ Either way those fields have to be consistent to each other.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":180655,"byte_end":180719,"line_start":624,"line_end":624,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1206},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":182008,"byte_end":182033,"line_start":651,"line_end":651,"column_start":12,"column_end":37},"name":"to_datetime_with_timezone","qualname":"<Parsed>::to_datetime_with_timezone","value":"fn to_datetime_with_timezone<Tz>(&Self, &Tz) -> ParseResult<DateTime<Tz>>\nwhere Tz: TimeZone","parent":null,"children":[],"decl_id":null,"docs":" Returns a parsed timezone-aware date and time out of given fields,\n with an additional `TimeZone` used to interpret and validate the local date.","sig":null,"attributes":[{"value":"/ Returns a parsed timezone-aware date and time out of given fields,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":181451,"byte_end":181521,"line_start":642,"line_end":642,"column_start":5,"column_end":75}},{"value":"/ with an additional `TimeZone` used to interpret and validate the local date.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":181526,"byte_end":181606,"line_start":643,"line_end":643,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":181611,"byte_end":181614,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ This method is able to determine the combined date and time","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":181619,"byte_end":181682,"line_start":645,"line_end":645,"column_start":5,"column_end":68}},{"value":"/ from date and time fields or a single [`timestamp`](#structfield.timestamp) field,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":181687,"byte_end":181773,"line_start":646,"line_end":646,"column_start":5,"column_end":91}},{"value":"/ plus a time zone offset.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":181778,"byte_end":181806,"line_start":647,"line_end":647,"column_start":5,"column_end":33}},{"value":"/ Either way those fields have to be consistent to each other.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":181811,"byte_end":181875,"line_start":648,"line_end":648,"column_start":5,"column_end":69}},{"value":"/ If parsed fields include an UTC offset, it also has to be consistent to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":181880,"byte_end":181955,"line_start":649,"line_end":649,"column_start":5,"column_end":80}},{"value":"/ [`offset`](#structfield.offset).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":181960,"byte_end":181996,"line_start":650,"line_end":650,"column_start":5,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":1291},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parse.rs","byte_start":219591,"byte_end":219596,"line_start":243,"line_end":243,"column_start":8,"column_end":13},"name":"parse","qualname":"::format::parse::parse","value":"fn parse<'a, I, B>(&mut Parsed, &str, I) -> ParseResult<()> where\nI: Iterator<Item = B>, B: Borrow<Item>","parent":null,"children":[],"decl_id":null,"docs":" Tries to parse given string into `parsed` with given formatting items.\n Returns `Ok` when the entire string has been parsed (otherwise `parsed` should not be used).\n There should be no trailing string after parsing;\n use a stray [`Item::Space`](./enum.Item.html#variant.Space) to trim whitespaces.","sig":null,"attributes":[{"value":"/ Tries to parse given string into `parsed` with given formatting items.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parse.rs","byte_start":218688,"byte_end":218762,"line_start":227,"line_end":227,"column_start":1,"column_end":75}},{"value":"/ Returns `Ok` when the entire string has been parsed (otherwise `parsed` should not be used).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parse.rs","byte_start":218763,"byte_end":218859,"line_start":228,"line_end":228,"column_start":1,"column_end":97}},{"value":"/ There should be no trailing string after parsing;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parse.rs","byte_start":218860,"byte_end":218913,"line_start":229,"line_end":229,"column_start":1,"column_end":54}},{"value":"/ use a stray [`Item::Space`](./enum.Item.html#variant.Space) to trim whitespaces.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parse.rs","byte_start":218914,"byte_end":218998,"line_start":230,"line_end":230,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parse.rs","byte_start":218999,"byte_end":219002,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/ This particular date and time parser is:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parse.rs","byte_start":219003,"byte_end":219047,"line_start":232,"line_end":232,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parse.rs","byte_start":219048,"byte_end":219051,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ - Greedy. It will consume the longest possible prefix.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parse.rs","byte_start":219052,"byte_end":219110,"line_start":234,"line_end":234,"column_start":1,"column_end":59}},{"value":"/   For example, `April` is always consumed entirely when the long month name is requested;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parse.rs","byte_start":219111,"byte_end":219204,"line_start":235,"line_end":235,"column_start":1,"column_end":94}},{"value":"/   it equally accepts `Apr`, but prefers the longer prefix in this case.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parse.rs","byte_start":219205,"byte_end":219280,"line_start":236,"line_end":236,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parse.rs","byte_start":219281,"byte_end":219284,"line_start":237,"line_end":237,"column_start":1,"column_end":4}},{"value":"/ - Padding-agnostic (for numeric items).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parse.rs","byte_start":219285,"byte_end":219328,"line_start":238,"line_end":238,"column_start":1,"column_end":44}},{"value":"/   The [`Pad`](./enum.Pad.html) field is completely ignored,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parse.rs","byte_start":219329,"byte_end":219392,"line_start":239,"line_end":239,"column_start":1,"column_end":64}},{"value":"/   so one can prepend any number of whitespace then any number of zeroes before numbers.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parse.rs","byte_start":219393,"byte_end":219484,"line_start":240,"line_end":240,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parse.rs","byte_start":219485,"byte_end":219488,"line_start":241,"line_end":241,"column_start":1,"column_end":4}},{"value":"/ - (Still) obeying the intrinsic parsing width. This allows, for example, parsing `HHMMSS`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parse.rs","byte_start":219489,"byte_end":219583,"line_start":242,"line_end":242,"column_start":1,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":1321},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parse.rs","byte_start":229160,"byte_end":229168,"line_start":481,"line_end":481,"column_start":8,"column_end":16},"name":"from_str","qualname":"<DateTime<FixedOffset> as std::str::FromStr>::from_str","value":"fn from_str(&str) -> ParseResult<DateTime<FixedOffset>>","parent":{"krate":2,"index":12767},"children":[],"decl_id":{"krate":2,"index":12769},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1390},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/strftime.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"strftime","qualname":"::format::strftime","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/strftime.rs","parent":null,"children":[{"krate":0,"index":1391},{"krate":0,"index":1392},{"krate":0,"index":1395},{"krate":0,"index":1398},{"krate":0,"index":1401},{"krate":0,"index":1404},{"krate":0,"index":1407},{"krate":0,"index":1410},{"krate":0,"index":1412},{"krate":0,"index":1413},{"krate":0,"index":1414},{"krate":0,"index":3790},{"krate":0,"index":3797},{"krate":0,"index":3800},{"krate":0,"index":1415},{"krate":0,"index":1421},{"krate":0,"index":1422}],"decl_id":null,"docs":"`strftime`/`strptime`-inspired date and time formatting syntax.","sig":null,"attributes":[{"value":"*\n`strftime`/`strptime`-inspired date and time formatting syntax.\n\n## Specifiers\n\nThe following specifiers are available both to formatting and parsing.\n\n| Spec. | Example  | Description                                                                |\n|-------|----------|----------------------------------------------------------------------------|\n|       |          | **DATE SPECIFIERS:**                                                       |\n| `%Y`  | `2001`   | The full proleptic Gregorian year, zero-padded to 4 digits. chrono supports years from -262144 to 262143. |\n| `%C`  | `20`     | The proleptic Gregorian year divided by 100, zero-padded to 2 digits. [^1] |\n| `%y`  | `01`     | The proleptic Gregorian year modulo 100, zero-padded to 2 digits. [^1]     |\n|       |          |                                                                            |\n| `%m`  | `07`     | Month number (01--12), zero-padded to 2 digits.                            |\n| `%b`  | `Jul`    | Abbreviated month name. Always 3 letters.                                  |\n| `%B`  | `July`   | Full month name. Also accepts corresponding abbreviation in parsing.       |\n| `%h`  | `Jul`    | Same as `%b`.                                                              |\n|       |          |                                                                            |\n| `%d`  | `08`     | Day number (01--31), zero-padded to 2 digits.                              |\n| `%e`  | ` 8`     | Same as `%d` but space-padded. Same as `%_d`.                              |\n|       |          |                                                                            |\n| `%a`  | `Sun`    | Abbreviated weekday name. Always 3 letters.                                |\n| `%A`  | `Sunday` | Full weekday name. Also accepts corresponding abbreviation in parsing.     |\n| `%w`  | `0`      | Sunday = 0, Monday = 1, ..., Saturday = 6.                                 |\n| `%u`  | `7`      | Monday = 1, Tuesday = 2, ..., Sunday = 7. (ISO 8601)                       |\n|       |          |                                                                            |\n| `%U`  | `28`     | Week number starting with Sunday (00--53), zero-padded to 2 digits. [^2]   |\n| `%W`  | `27`     | Same as `%U`, but week 1 starts with the first Monday in that year instead.|\n|       |          |                                                                            |\n| `%G`  | `2001`   | Same as `%Y` but uses the year number in ISO 8601 week date. [^3]          |\n| `%g`  | `01`     | Same as `%y` but uses the year number in ISO 8601 week date. [^3]          |\n| `%V`  | `27`     | Same as `%U` but uses the week number in ISO 8601 week date (01--53). [^3] |\n|       |          |                                                                            |\n| `%j`  | `189`    | Day of the year (001--366), zero-padded to 3 digits.                       |\n|       |          |                                                                            |\n| `%D`  | `07/08/01`    | Month-day-year format. Same as `%m/%d/%y`.                            |\n| `%x`  | `07/08/01`    | Locale's date representation (e.g., 12/31/99).                        |\n| `%F`  | `2001-07-08`  | Year-month-day format (ISO 8601). Same as `%Y-%m-%d`.                 |\n| `%v`  | ` 8-Jul-2001` | Day-month-year format. Same as `%e-%b-%Y`.                            |\n|       |          |                                                                            |\n|       |          | **TIME SPECIFIERS:**                                                       |\n| `%H`  | `00`     | Hour number (00--23), zero-padded to 2 digits.                             |\n| `%k`  | ` 0`     | Same as `%H` but space-padded. Same as `%_H`.                              |\n| `%I`  | `12`     | Hour number in 12-hour clocks (01--12), zero-padded to 2 digits.           |\n| `%l`  | `12`     | Same as `%I` but space-padded. Same as `%_I`.                              |\n|       |          |                                                                            |\n| `%P`  | `am`     | `am` or `pm` in 12-hour clocks.                                            |\n| `%p`  | `AM`     | `AM` or `PM` in 12-hour clocks.                                            |\n|       |          |                                                                            |\n| `%M`  | `34`     | Minute number (00--59), zero-padded to 2 digits.                           |\n| `%S`  | `60`     | Second number (00--60), zero-padded to 2 digits. [^4]                      |\n| `%f`  | `026490000`   | The fractional seconds (in nanoseconds) since last whole second. [^7] |\n| `%.f` | `.026490`| Similar to `.%f` but left-aligned. These all consume the leading dot. [^7] |\n| `%.3f`| `.026`        | Similar to `.%f` but left-aligned but fixed to a length of 3. [^7]    |\n| `%.6f`| `.026490`     | Similar to `.%f` but left-aligned but fixed to a length of 6. [^7]    |\n| `%.9f`| `.026490000`  | Similar to `.%f` but left-aligned but fixed to a length of 9. [^7]    |\n| `%3f` | `026`         | Similar to `%.3f` but without the leading dot. [^7]                   |\n| `%6f` | `026490`      | Similar to `%.6f` but without the leading dot. [^7]                   |\n| `%9f` | `026490000`   | Similar to `%.9f` but without the leading dot. [^7]                   |\n|       |               |                                                                       |\n| `%R`  | `00:34`       | Hour-minute format. Same as `%H:%M`.                                  |\n| `%T`  | `00:34:60`    | Hour-minute-second format. Same as `%H:%M:%S`.                        |\n| `%X`  | `00:34:60`    | Locale's time representation (e.g., 23:13:48).                        |\n| `%r`  | `12:34:60 AM` | Hour-minute-second format in 12-hour clocks. Same as `%I:%M:%S %p`.   |\n|       |          |                                                                            |\n|       |          | **TIME ZONE SPECIFIERS:**                                                  |\n| `%Z`  | `ACST`   | Local time zone name. Skips all non-whitespace characters during parsing. [^8] |\n| `%z`  | `+0930`  | Offset from the local time to UTC (with UTC being `+0000`).                |\n| `%:z` | `+09:30` | Same as `%z` but with a colon.                                             |\n| `%#z` | `+09`    | *Parsing only:* Same as `%z` but allows minutes to be missing or present.  |\n|       |          |                                                                            |\n|       |          | **DATE & TIME SPECIFIERS:**                                                |\n|`%c`|`Sun Jul  8 00:34:60 2001`|Locale's date and time (e.g., Thu Mar  3 23:05:25 2005).       |\n| `%+`  | `2001-07-08T00:34:60.026490+09:30` | ISO 8601 / RFC 3339 date & time format. [^5]     |\n|       |               |                                                                       |\n| `%s`  | `994518299`   | UNIX timestamp, the number of seconds since 1970-01-01 00:00 UTC. [^6]|\n|       |          |                                                                            |\n|       |          | **SPECIAL SPECIFIERS:**                                                    |\n| `%t`  |          | Literal tab (`\\t`).                                                        |\n| `%n`  |          | Literal newline (`\\n`).                                                    |\n| `%%`  |          | Literal percent sign.                                                      |\n\nIt is possible to override the default padding behavior of numeric specifiers `%?`.\nThis is not allowed for other specifiers and will result in the `BAD_FORMAT` error.\n\nModifier | Description\n-------- | -----------\n`%-?`    | Suppresses any padding including spaces and zeroes. (e.g. `%j` = `012`, `%-j` = `12`)\n`%_?`    | Uses spaces as a padding. (e.g. `%j` = `012`, `%_j` = ` 12`)\n`%0?`    | Uses zeroes as a padding. (e.g. `%e` = ` 9`, `%0e` = `09`)\n\nNotes:\n\n[^1]: `%C`, `%y`:\n   This is floor division, so 100 BCE (year number -99) will print `-1` and `99` respectively.\n\n[^2]: `%U`:\n   Week 1 starts with the first Sunday in that year.\n   It is possible to have week 0 for days before the first Sunday.\n\n[^3]: `%G`, `%g`, `%V`:\n   Week 1 is the first week with at least 4 days in that year.\n   Week 0 does not exist, so this should be used with `%G` or `%g`.\n\n[^4]: `%S`:\n   It accounts for leap seconds, so `60` is possible.\n\n[^5]: `%+`: Same as `%Y-%m-%dT%H:%M:%S%.f%:z`, i.e. 0, 3, 6 or 9 fractional\n   digits for seconds and colons in the time zone offset.\n   <br>\n   <br>\n   The typical `strftime` implementations have different (and locale-dependent)\n   formats for this specifier. While Chrono's format for `%+` is far more\n   stable, it is best to avoid this specifier if you want to control the exact\n   output.\n\n[^6]: `%s`:\n   This is not padded and can be negative.\n   For the purpose of Chrono, it only accounts for non-leap seconds\n   so it slightly differs from ISO C `strftime` behavior.\n\n[^7]: `%f`, `%.f`, `%.3f`, `%.6f`, `%.9f`, `%3f`, `%6f`, `%9f`:\n   <br>\n   The default `%f` is right-aligned and always zero-padded to 9 digits\n   for the compatibility with glibc and others,\n   so it always counts the number of nanoseconds since the last whole second.\n   E.g. 7ms after the last second will print `007000000`,\n   and parsing `7000000` will yield the same.\n   <br>\n   <br>\n   The variant `%.f` is left-aligned and print 0, 3, 6 or 9 fractional digits\n   according to the precision.\n   E.g. 70ms after the last second under `%.f` will print `.070` (note: not `.07`),\n   and parsing `.07`, `.070000` etc. will yield the same.\n   Note that they can print or read nothing if the fractional part is zero or\n   the next character is not `.`.\n   <br>\n   <br>\n   The variant `%.3f`, `%.6f` and `%.9f` are left-aligned and print 3, 6 or 9 fractional digits\n   according to the number preceding `f`.\n   E.g. 70ms after the last second under `%.3f` will print `.070` (note: not `.07`),\n   and parsing `.07`, `.070000` etc. will yield the same.\n   Note that they can read nothing if the fractional part is zero or\n   the next character is not `.` however will print with the specified length.\n   <br>\n   <br>\n   The variant `%3f`, `%6f` and `%9f` are left-aligned and print 3, 6 or 9 fractional digits\n   according to the number preceding `f`, but without the leading dot.\n   E.g. 70ms after the last second under `%3f` will print `070` (note: not `07`),\n   and parsing `07`, `070000` etc. will yield the same.\n   Note that they can read nothing if the fractional part is zero.\n\n[^8]: `%Z`:\n   Offset will not be populated from the parsed data, nor will it be validated.\n   Timezone is completely ignored. Similar to the glibc `strptime` treatment of\n   this format code.\n   <br>\n   <br>\n   It is not possible to reliably convert from an abbreviation to an offset,\n   for example CDT can mean either Central Daylight Time (North America) or\n   China Daylight Time.\n*/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/strftime.rs","byte_start":267475,"byte_end":278499,"line_start":4,"line_end":166,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":3790},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/strftime.rs","byte_start":279363,"byte_end":279376,"line_start":198,"line_end":198,"column_start":12,"column_end":25},"name":"StrftimeItems","qualname":"::format::strftime::StrftimeItems","value":"StrftimeItems {  }","parent":null,"children":[{"krate":0,"index":3792},{"krate":0,"index":3793},{"krate":0,"index":3794},{"krate":0,"index":3795},{"krate":0,"index":3796}],"decl_id":null,"docs":" Parsing iterator for `strftime`-like format strings.\n","sig":null,"attributes":[{"value":"/ Parsing iterator for `strftime`-like format strings.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/strftime.rs","byte_start":279271,"byte_end":279327,"line_start":196,"line_end":196,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1417},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/strftime.rs","byte_start":279966,"byte_end":279969,"line_start":215,"line_end":215,"column_start":12,"column_end":15},"name":"new","qualname":"<StrftimeItems>::new","value":"fn new(&'a str) -> StrftimeItems","parent":null,"children":[],"decl_id":null,"docs":" Creates a new parsing iterator from the `strftime`-like format string.\n","sig":null,"attributes":[{"value":"/ Creates a new parsing iterator from the `strftime`-like format string.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/strftime.rs","byte_start":279880,"byte_end":279954,"line_start":214,"line_end":214,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1425},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/strftime.rs","byte_start":281310,"byte_end":281314,"line_start":259,"line_end":259,"column_start":8,"column_end":12},"name":"next","qualname":"<StrftimeItems as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Item>","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8476},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3809},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":147680,"byte_end":147693,"line_start":747,"line_end":747,"column_start":12,"column_end":25},"name":"DelayedFormat","qualname":"::format::DelayedFormat","value":"DelayedFormat {  }","parent":null,"children":[{"krate":0,"index":3811},{"krate":0,"index":3812},{"krate":0,"index":3813},{"krate":0,"index":3814}],"decl_id":null,"docs":" A *temporary* object which can be used as an argument to `format!` or others.\n This is normally constructed via `format` methods of each date and time type.\n","sig":null,"attributes":[{"value":"/ A *temporary* object which can be used as an argument to `format!` or others.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":147434,"byte_end":147515,"line_start":743,"line_end":743,"column_start":1,"column_end":82}},{"value":"/ This is normally constructed via `format` methods of each date and time type.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":147516,"byte_end":147597,"line_start":744,"line_end":744,"column_start":1,"column_end":82}},{"value":"cfg(any(feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":147598,"byte_end":147651,"line_start":745,"line_end":745,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1435},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":148444,"byte_end":148447,"line_start":766,"line_end":766,"column_start":12,"column_end":15},"name":"new","qualname":"<DelayedFormat<I>>::new","value":"fn new(Option<NaiveDate>, Option<NaiveTime>, I) -> DelayedFormat<I>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DelayedFormat` value out of local date and time.\n","sig":null,"attributes":[{"value":"/ Makes a new `DelayedFormat` value out of local date and time.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":148367,"byte_end":148432,"line_start":765,"line_end":765,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1436},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":148820,"byte_end":148835,"line_start":778,"line_end":778,"column_start":12,"column_end":27},"name":"new_with_offset","qualname":"<DelayedFormat<I>>::new_with_offset","value":"fn new_with_offset<Off>(Option<NaiveDate>, Option<NaiveTime>, &Off, I)\n-> DelayedFormat<I> where Off: Offset + fmt::Display","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DelayedFormat` value out of local date and time and UTC offset.\n","sig":null,"attributes":[{"value":"/ Makes a new `DelayedFormat` value out of local date and time and UTC offset.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":148728,"byte_end":148808,"line_start":777,"line_end":777,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1442},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":150378,"byte_end":150381,"line_start":828,"line_end":828,"column_start":8,"column_end":11},"name":"fmt","qualname":"<DelayedFormat<I> as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10117},"children":[],"decl_id":{"krate":2,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1445},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":151698,"byte_end":151706,"line_start":876,"line_end":876,"column_start":8,"column_end":16},"name":"from_str","qualname":"<Weekday as std::str::FromStr>::from_str","value":"fn from_str(&str) -> Result<Self, Self::Err>","parent":{"krate":2,"index":12767},"children":[],"decl_id":{"krate":2,"index":12769},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1448},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":153653,"byte_end":153661,"line_start":950,"line_end":950,"column_start":8,"column_end":16},"name":"from_str","qualname":"<Month as std::str::FromStr>::from_str","value":"fn from_str(&str) -> Result<Self, Self::Err>","parent":{"krate":2,"index":12767},"children":[],"decl_id":{"krate":2,"index":12769},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1456},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"naive","qualname":"::naive","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/mod.rs","parent":null,"children":[{"krate":0,"index":1457},{"krate":0,"index":1723},{"krate":0,"index":2244},{"krate":0,"index":2332},{"krate":0,"index":2353},{"krate":0,"index":2509},{"krate":0,"index":2510},{"krate":0,"index":2513},{"krate":0,"index":2516},{"krate":0,"index":2519},{"krate":0,"index":2522},{"krate":0,"index":2523},{"krate":0,"index":2526},{"krate":0,"index":2529},{"krate":0,"index":2532},{"krate":0,"index":2535},{"krate":0,"index":2538}],"decl_id":null,"docs":" Date and time types unconcerned with timezones.","sig":null,"attributes":[{"value":"/ Date and time types unconcerned with timezones.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/mod.rs","byte_start":298068,"byte_end":298119,"line_start":1,"line_end":1,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/mod.rs","byte_start":298120,"byte_end":298123,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ They are primarily building blocks for other types","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/mod.rs","byte_start":298124,"byte_end":298178,"line_start":3,"line_end":3,"column_start":1,"column_end":55}},{"value":"/ (e.g. [`TimeZone`](../offset/trait.TimeZone.html)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/mod.rs","byte_start":298179,"byte_end":298234,"line_start":4,"line_end":4,"column_start":1,"column_end":56}},{"value":"/ but can be also used for the simpler date and time handling.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/mod.rs","byte_start":298235,"byte_end":298299,"line_start":5,"line_end":5,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":3818},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":301344,"byte_end":301353,"line_start":57,"line_end":57,"column_start":12,"column_end":21},"name":"NaiveWeek","qualname":"::naive::date::NaiveWeek","value":"NaiveWeek {  }","parent":null,"children":[{"krate":0,"index":3819},{"krate":0,"index":3820}],"decl_id":null,"docs":" A week represented by a [`NaiveDate`] and a [`Weekday`] which is the first\n day of the week.\n","sig":null,"attributes":[{"value":"/ A week represented by a [`NaiveDate`] and a [`Weekday`] which is the first","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":301216,"byte_end":301294,"line_start":54,"line_end":54,"column_start":1,"column_end":79}},{"value":"/ day of the week.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":301295,"byte_end":301315,"line_start":55,"line_end":55,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1567},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":301754,"byte_end":301763,"line_start":75,"line_end":75,"column_start":12,"column_end":21},"name":"first_day","qualname":"<NaiveWeek>::first_day","value":"fn first_day(&Self) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Returns a date representing the first day of the week.","sig":null,"attributes":[{"value":"/ Returns a date representing the first day of the week.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":301421,"byte_end":301479,"line_start":63,"line_end":63,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":301484,"byte_end":301487,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":301492,"byte_end":301506,"line_start":65,"line_end":65,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":301511,"byte_end":301514,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":301519,"byte_end":301526,"line_start":67,"line_end":67,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Weekday};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":301531,"byte_end":301568,"line_start":68,"line_end":68,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":301573,"byte_end":301576,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ let date = NaiveDate::from_ymd(2022, 4, 18);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":301581,"byte_end":301629,"line_start":70,"line_end":70,"column_start":5,"column_end":53}},{"value":"/ let week = date.week(Weekday::Mon);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":301634,"byte_end":301673,"line_start":71,"line_end":71,"column_start":5,"column_end":44}},{"value":"/ assert!(week.first_day() <= date);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":301678,"byte_end":301716,"line_start":72,"line_end":72,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":301721,"byte_end":301728,"line_start":73,"line_end":73,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":301733,"byte_end":301742,"line_start":74,"line_end":74,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1568},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":302369,"byte_end":302377,"line_start":94,"line_end":94,"column_start":12,"column_end":20},"name":"last_day","qualname":"<NaiveWeek>::last_day","value":"fn last_day(&Self) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Returns a date representing the last day of the week.","sig":null,"attributes":[{"value":"/ Returns a date representing the last day of the week.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":302038,"byte_end":302095,"line_start":82,"line_end":82,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":302100,"byte_end":302103,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":302108,"byte_end":302122,"line_start":84,"line_end":84,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":302127,"byte_end":302130,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":302135,"byte_end":302142,"line_start":86,"line_end":86,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Weekday};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":302147,"byte_end":302184,"line_start":87,"line_end":87,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":302189,"byte_end":302192,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ let date = NaiveDate::from_ymd(2022, 4, 18);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":302197,"byte_end":302245,"line_start":89,"line_end":89,"column_start":5,"column_end":53}},{"value":"/ let week = date.week(Weekday::Mon);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":302250,"byte_end":302289,"line_start":90,"line_end":90,"column_start":5,"column_end":44}},{"value":"/ assert!(week.last_day() >= date);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":302294,"byte_end":302331,"line_start":91,"line_end":91,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":302336,"byte_end":302343,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":302348,"byte_end":302357,"line_start":93,"line_end":93,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1569},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":302970,"byte_end":302974,"line_start":113,"line_end":113,"column_start":12,"column_end":16},"name":"days","qualname":"<NaiveWeek>::days","value":"fn days(&Self) -> RangeInclusive<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Returns a [`RangeInclusive<T>`] representing the whole week bounded by\n [first_day](./struct.NaiveWeek.html#method.first_day) and\n [last_day](./struct.NaiveWeek.html#method.last_day) functions.","sig":null,"attributes":[{"value":"/ Returns a [`RangeInclusive<T>`] representing the whole week bounded by","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":302456,"byte_end":302530,"line_start":98,"line_end":98,"column_start":5,"column_end":79}},{"value":"/ [first_day](./struct.NaiveWeek.html#method.first_day) and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":302535,"byte_end":302596,"line_start":99,"line_end":99,"column_start":5,"column_end":66}},{"value":"/ [last_day](./struct.NaiveWeek.html#method.last_day) functions.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":302601,"byte_end":302667,"line_start":100,"line_end":100,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":302672,"byte_end":302675,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":302680,"byte_end":302694,"line_start":102,"line_end":102,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":302699,"byte_end":302702,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":302707,"byte_end":302714,"line_start":104,"line_end":104,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Weekday};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":302719,"byte_end":302756,"line_start":105,"line_end":105,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":302761,"byte_end":302764,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ let date = NaiveDate::from_ymd(2022, 4, 18);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":302769,"byte_end":302817,"line_start":107,"line_end":107,"column_start":5,"column_end":53}},{"value":"/ let week = date.week(Weekday::Mon);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":302822,"byte_end":302861,"line_start":108,"line_end":108,"column_start":5,"column_end":44}},{"value":"/ let days = week.days();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":302866,"byte_end":302893,"line_start":109,"line_end":109,"column_start":5,"column_end":32}},{"value":"/ assert!(days.contains(&date));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":302898,"byte_end":302932,"line_start":110,"line_end":110,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":302937,"byte_end":302944,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":302949,"byte_end":302958,"line_start":112,"line_end":112,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":3823},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":305714,"byte_end":305723,"line_start":168,"line_end":168,"column_start":12,"column_end":21},"name":"NaiveDate","qualname":"::naive::date::NaiveDate","value":"NaiveDate {  }","parent":null,"children":[{"krate":0,"index":3824}],"decl_id":null,"docs":" ISO 8601 calendar date without timezone.\n Allows for every [proleptic Gregorian date](#calendar-date)\n from Jan 1, 262145 BCE to Dec 31, 262143 CE.\n Also supports the conversion from ISO 8601 ordinal and week date.","sig":null,"attributes":[{"value":"/ ISO 8601 calendar date without timezone.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":303065,"byte_end":303109,"line_start":118,"line_end":118,"column_start":1,"column_end":45}},{"value":"/ Allows for every [proleptic Gregorian date](#calendar-date)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":303110,"byte_end":303173,"line_start":119,"line_end":119,"column_start":1,"column_end":64}},{"value":"/ from Jan 1, 262145 BCE to Dec 31, 262143 CE.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":303174,"byte_end":303222,"line_start":120,"line_end":120,"column_start":1,"column_end":49}},{"value":"/ Also supports the conversion from ISO 8601 ordinal and week date.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":303223,"byte_end":303292,"line_start":121,"line_end":121,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":303293,"byte_end":303296,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ # Calendar Date","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":303297,"byte_end":303316,"line_start":123,"line_end":123,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":303317,"byte_end":303320,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ The ISO 8601 **calendar date** follows the proleptic Gregorian calendar.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":303321,"byte_end":303397,"line_start":125,"line_end":125,"column_start":1,"column_end":77}},{"value":"/ It is like a normal civil calendar but note some slight differences:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":303398,"byte_end":303470,"line_start":126,"line_end":126,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":303471,"byte_end":303474,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ * Dates before the Gregorian calendar's inception in 1582 are defined via the extrapolation.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":303475,"byte_end":303571,"line_start":128,"line_end":128,"column_start":1,"column_end":97}},{"value":"/   Be careful, as historical dates are often noted in the Julian calendar and others","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":303572,"byte_end":303659,"line_start":129,"line_end":129,"column_start":1,"column_end":88}},{"value":"/   and the transition to Gregorian may differ across countries (as late as early 20C).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":303660,"byte_end":303749,"line_start":130,"line_end":130,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":303750,"byte_end":303753,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/   (Some example: Both Shakespeare from Britain and Cervantes from Spain seemingly died","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":303754,"byte_end":303844,"line_start":132,"line_end":132,"column_start":1,"column_end":91}},{"value":"/   on the same calendar date---April 23, 1616---but in the different calendar.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":303845,"byte_end":303926,"line_start":133,"line_end":133,"column_start":1,"column_end":82}},{"value":"/   Britain used the Julian calendar at that time, so Shakespeare's death is later.)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":303927,"byte_end":304013,"line_start":134,"line_end":134,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":304014,"byte_end":304017,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ * ISO 8601 calendars has the year 0, which is 1 BCE (a year before 1 CE).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":304018,"byte_end":304095,"line_start":136,"line_end":136,"column_start":1,"column_end":78}},{"value":"/   If you need a typical BCE/BC and CE/AD notation for year numbers,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":304096,"byte_end":304167,"line_start":137,"line_end":137,"column_start":1,"column_end":72}},{"value":"/   use the [`Datelike::year_ce`](../trait.Datelike.html#method.year_ce) method.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":304168,"byte_end":304250,"line_start":138,"line_end":138,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":304251,"byte_end":304254,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ # Week Date","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":304255,"byte_end":304270,"line_start":140,"line_end":140,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":304271,"byte_end":304274,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ The ISO 8601 **week date** is a triple of year number, week number","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":304275,"byte_end":304345,"line_start":142,"line_end":142,"column_start":1,"column_end":71}},{"value":"/ and [day of the week](../enum.Weekday.html) with the following rules:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":304346,"byte_end":304419,"line_start":143,"line_end":143,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":304420,"byte_end":304423,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ * A week consists of Monday through Sunday, and is always numbered within some year.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":304424,"byte_end":304512,"line_start":145,"line_end":145,"column_start":1,"column_end":89}},{"value":"/   The week number ranges from 1 to 52 or 53 depending on the year.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":304513,"byte_end":304583,"line_start":146,"line_end":146,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":304584,"byte_end":304587,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ * The week 1 of given year is defined as the first week containing January 4 of that year,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":304588,"byte_end":304682,"line_start":148,"line_end":148,"column_start":1,"column_end":95}},{"value":"/   or equivalently, the first week containing four or more days in that year.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":304683,"byte_end":304763,"line_start":149,"line_end":149,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":304764,"byte_end":304767,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ * The year number in the week date may *not* correspond to the actual Gregorian year.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":304768,"byte_end":304857,"line_start":151,"line_end":151,"column_start":1,"column_end":90}},{"value":"/   For example, January 3, 2016 (Sunday) was on the last (53rd) week of 2015.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":304858,"byte_end":304938,"line_start":152,"line_end":152,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":304939,"byte_end":304942,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ Chrono's date types default to the ISO 8601 [calendar date](#calendar-date),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":304943,"byte_end":305023,"line_start":154,"line_end":154,"column_start":1,"column_end":81}},{"value":"/ but [`Datelike::iso_week`](../trait.Datelike.html#tymethod.iso_week) and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":305024,"byte_end":305100,"line_start":155,"line_end":155,"column_start":1,"column_end":77}},{"value":"/ [`Datelike::weekday`](../trait.Datelike.html#tymethod.weekday) methods","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":305101,"byte_end":305175,"line_start":156,"line_end":156,"column_start":1,"column_end":75}},{"value":"/ can be used to get the corresponding week date.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":305176,"byte_end":305227,"line_start":157,"line_end":157,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":305228,"byte_end":305231,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ # Ordinal Date","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":305232,"byte_end":305250,"line_start":159,"line_end":159,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":305251,"byte_end":305254,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ The ISO 8601 **ordinal date** is a pair of year number and day of the year (\"ordinal\").","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":305255,"byte_end":305346,"line_start":161,"line_end":161,"column_start":1,"column_end":92}},{"value":"/ The ordinal number ranges from 1 to 365 or 366 depending on the year.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":305347,"byte_end":305420,"line_start":162,"line_end":162,"column_start":1,"column_end":74}},{"value":"/ The year number is the same as that of the [calendar date](#calendar-date).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":305421,"byte_end":305500,"line_start":163,"line_end":163,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":305501,"byte_end":305504,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ This is currently the internal format of Chrono's date types.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":305505,"byte_end":305570,"line_start":165,"line_end":165,"column_start":1,"column_end":66}}]},{"kind":"Const","id":{"krate":0,"index":1570},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":305911,"byte_end":305919,"line_start":174,"line_end":174,"column_start":11,"column_end":19},"name":"MIN_DATE","qualname":"::naive::date::MIN_DATE","value":"NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" The minimum possible `NaiveDate` (January 1, 262145 BCE).\n","sig":null,"attributes":[{"value":"/ The minimum possible `NaiveDate` (January 1, 262145 BCE).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":305770,"byte_end":305831,"line_start":172,"line_end":172,"column_start":1,"column_end":62}},{"value":"deprecated(since = \"0.4.20\", note = \"Use NaiveDate::MIN instead\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":305832,"byte_end":305900,"line_start":173,"line_end":173,"column_start":1,"column_end":69}}]},{"kind":"Const","id":{"krate":0,"index":1571},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":306091,"byte_end":306099,"line_start":177,"line_end":177,"column_start":11,"column_end":19},"name":"MAX_DATE","qualname":"::naive::date::MAX_DATE","value":"NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" The maximum possible `NaiveDate` (December 31, 262143 CE).\n","sig":null,"attributes":[{"value":"/ The maximum possible `NaiveDate` (December 31, 262143 CE).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":305949,"byte_end":306011,"line_start":175,"line_end":175,"column_start":1,"column_end":63}},{"value":"deprecated(since = \"0.4.20\", note = \"Use NaiveDate::MAX instead\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":306012,"byte_end":306080,"line_start":176,"line_end":176,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1575},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":308462,"byte_end":308470,"line_start":243,"line_end":243,"column_start":12,"column_end":20},"name":"from_ymd","qualname":"<NaiveDate>::from_ymd","value":"fn from_ymd(i32, u32, u32) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` from the [calendar date](#calendar-date)\n (year, month and day).","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` from the [calendar date](#calendar-date)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":307734,"byte_end":307802,"line_start":223,"line_end":223,"column_start":5,"column_end":73}},{"value":"/ (year, month and day).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":307807,"byte_end":307833,"line_start":224,"line_end":224,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":307838,"byte_end":307841,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ Panics on the out-of-range date, invalid month and/or day.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":307846,"byte_end":307908,"line_start":226,"line_end":226,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":307913,"byte_end":307916,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":307921,"byte_end":307934,"line_start":228,"line_end":228,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":307939,"byte_end":307942,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":307947,"byte_end":307954,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike, Weekday};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":307959,"byte_end":308006,"line_start":231,"line_end":231,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":308011,"byte_end":308014,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_ymd(2015, 3, 14);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":308019,"byte_end":308064,"line_start":233,"line_end":233,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(d.year(), 2015);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":308069,"byte_end":308100,"line_start":234,"line_end":234,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(d.month(), 3);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":308105,"byte_end":308134,"line_start":235,"line_end":235,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(d.day(), 14);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":308139,"byte_end":308167,"line_start":236,"line_end":236,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(d.ordinal(), 73); // day of year","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":308172,"byte_end":308219,"line_start":237,"line_end":237,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(d.iso_week().year(), 2015);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":308224,"byte_end":308266,"line_start":238,"line_end":238,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(d.iso_week().week(), 11);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":308271,"byte_end":308311,"line_start":239,"line_end":239,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(d.weekday(), Weekday::Sat);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":308316,"byte_end":308358,"line_start":240,"line_end":240,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(d.num_days_from_ce(), 735671); // days since January 1, 1 CE","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":308363,"byte_end":308438,"line_start":241,"line_end":241,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":308443,"byte_end":308450,"line_start":242,"line_end":242,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1576},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":309319,"byte_end":309331,"line_start":266,"line_end":266,"column_start":12,"column_end":24},"name":"from_ymd_opt","qualname":"<NaiveDate>::from_ymd_opt","value":"fn from_ymd_opt(i32, u32, u32) -> Option<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` from the [calendar date](#calendar-date)\n (year, month and day).","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` from the [calendar date](#calendar-date)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":308619,"byte_end":308687,"line_start":247,"line_end":247,"column_start":5,"column_end":73}},{"value":"/ (year, month and day).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":308692,"byte_end":308718,"line_start":248,"line_end":248,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":308723,"byte_end":308726,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on the out-of-range date, invalid month and/or day.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":308731,"byte_end":308801,"line_start":250,"line_end":250,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":308806,"byte_end":308809,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":308814,"byte_end":308827,"line_start":252,"line_end":252,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":308832,"byte_end":308835,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":308840,"byte_end":308847,"line_start":254,"line_end":254,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":308852,"byte_end":308878,"line_start":255,"line_end":255,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":308883,"byte_end":308886,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ let from_ymd_opt = NaiveDate::from_ymd_opt;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":308891,"byte_end":308938,"line_start":257,"line_end":257,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":308943,"byte_end":308946,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ assert!(from_ymd_opt(2015, 3, 14).is_some());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":308951,"byte_end":309000,"line_start":259,"line_end":259,"column_start":5,"column_end":54}},{"value":"/ assert!(from_ymd_opt(2015, 0, 14).is_none());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":309005,"byte_end":309054,"line_start":260,"line_end":260,"column_start":5,"column_end":54}},{"value":"/ assert!(from_ymd_opt(2015, 2, 29).is_none());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":309059,"byte_end":309108,"line_start":261,"line_end":261,"column_start":5,"column_end":54}},{"value":"/ assert!(from_ymd_opt(-4, 2, 29).is_some()); // 5 BCE is a leap year","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":309113,"byte_end":309184,"line_start":262,"line_end":262,"column_start":5,"column_end":76}},{"value":"/ assert!(from_ymd_opt(400000, 1, 1).is_none());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":309189,"byte_end":309239,"line_start":263,"line_end":263,"column_start":5,"column_end":55}},{"value":"/ assert!(from_ymd_opt(-400000, 1, 1).is_none());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":309244,"byte_end":309295,"line_start":264,"line_end":264,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":309300,"byte_end":309307,"line_start":265,"line_end":265,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1577},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":310223,"byte_end":310230,"line_start":291,"line_end":291,"column_start":12,"column_end":19},"name":"from_yo","qualname":"<NaiveDate>::from_yo","value":"fn from_yo(i32, u32) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` from the [ordinal date](#ordinal-date)\n (year and day of the year).","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` from the [ordinal date](#ordinal-date)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":309510,"byte_end":309576,"line_start":271,"line_end":271,"column_start":5,"column_end":71}},{"value":"/ (year and day of the year).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":309581,"byte_end":309612,"line_start":272,"line_end":272,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":309617,"byte_end":309620,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ Panics on the out-of-range date and/or invalid day of year.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":309625,"byte_end":309688,"line_start":274,"line_end":274,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":309693,"byte_end":309696,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":309701,"byte_end":309714,"line_start":276,"line_end":276,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":309719,"byte_end":309722,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":309727,"byte_end":309734,"line_start":278,"line_end":278,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike, Weekday};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":309739,"byte_end":309786,"line_start":279,"line_end":279,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":309791,"byte_end":309794,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_yo(2015, 73);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":309799,"byte_end":309840,"line_start":281,"line_end":281,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(d.ordinal(), 73);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":309845,"byte_end":309877,"line_start":282,"line_end":282,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(d.year(), 2015);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":309882,"byte_end":309913,"line_start":283,"line_end":283,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(d.month(), 3);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":309918,"byte_end":309947,"line_start":284,"line_end":284,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(d.day(), 14);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":309952,"byte_end":309980,"line_start":285,"line_end":285,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(d.iso_week().year(), 2015);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":309985,"byte_end":310027,"line_start":286,"line_end":286,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(d.iso_week().week(), 11);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":310032,"byte_end":310072,"line_start":287,"line_end":287,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(d.weekday(), Weekday::Sat);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":310077,"byte_end":310119,"line_start":288,"line_end":288,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(d.num_days_from_ce(), 735671); // days since January 1, 1 CE","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":310124,"byte_end":310199,"line_start":289,"line_end":289,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":310204,"byte_end":310211,"line_start":290,"line_end":290,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1578},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":311098,"byte_end":311109,"line_start":315,"line_end":315,"column_start":12,"column_end":23},"name":"from_yo_opt","qualname":"<NaiveDate>::from_yo_opt","value":"fn from_yo_opt(i32, u32) -> Option<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` from the [ordinal date](#ordinal-date)\n (year and day of the year).","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` from the [ordinal date](#ordinal-date)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":310367,"byte_end":310433,"line_start":295,"line_end":295,"column_start":5,"column_end":71}},{"value":"/ (year and day of the year).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":310438,"byte_end":310469,"line_start":296,"line_end":296,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":310474,"byte_end":310477,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on the out-of-range date and/or invalid day of year.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":310482,"byte_end":310553,"line_start":298,"line_end":298,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":310558,"byte_end":310561,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":310566,"byte_end":310579,"line_start":300,"line_end":300,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":310584,"byte_end":310587,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":310592,"byte_end":310599,"line_start":302,"line_end":302,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":310604,"byte_end":310630,"line_start":303,"line_end":303,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":310635,"byte_end":310638,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ let from_yo_opt = NaiveDate::from_yo_opt;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":310643,"byte_end":310688,"line_start":305,"line_end":305,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":310693,"byte_end":310696,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ assert!(from_yo_opt(2015, 100).is_some());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":310701,"byte_end":310747,"line_start":307,"line_end":307,"column_start":5,"column_end":51}},{"value":"/ assert!(from_yo_opt(2015, 0).is_none());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":310752,"byte_end":310796,"line_start":308,"line_end":308,"column_start":5,"column_end":49}},{"value":"/ assert!(from_yo_opt(2015, 365).is_some());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":310801,"byte_end":310847,"line_start":309,"line_end":309,"column_start":5,"column_end":51}},{"value":"/ assert!(from_yo_opt(2015, 366).is_none());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":310852,"byte_end":310898,"line_start":310,"line_end":310,"column_start":5,"column_end":51}},{"value":"/ assert!(from_yo_opt(-4, 366).is_some()); // 5 BCE is a leap year","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":310903,"byte_end":310971,"line_start":311,"line_end":311,"column_start":5,"column_end":73}},{"value":"/ assert!(from_yo_opt(400000, 1).is_none());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":310976,"byte_end":311022,"line_start":312,"line_end":312,"column_start":5,"column_end":51}},{"value":"/ assert!(from_yo_opt(-400000, 1).is_none());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":311027,"byte_end":311074,"line_start":313,"line_end":313,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":311079,"byte_end":311086,"line_start":314,"line_end":314,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1579},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":312113,"byte_end":312124,"line_start":341,"line_end":341,"column_start":12,"column_end":23},"name":"from_isoywd","qualname":"<NaiveDate>::from_isoywd","value":"fn from_isoywd(i32, u32, Weekday) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` from the [ISO week date](#week-date)\n (year, week number and day of the week).\n The resulting `NaiveDate` may have a different year from the input year.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` from the [ISO week date](#week-date)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":311275,"byte_end":311339,"line_start":320,"line_end":320,"column_start":5,"column_end":69}},{"value":"/ (year, week number and day of the week).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":311344,"byte_end":311388,"line_start":321,"line_end":321,"column_start":5,"column_end":49}},{"value":"/ The resulting `NaiveDate` may have a different year from the input year.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":311393,"byte_end":311469,"line_start":322,"line_end":322,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":311474,"byte_end":311477,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ Panics on the out-of-range date and/or invalid week number.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":311482,"byte_end":311545,"line_start":324,"line_end":324,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":311550,"byte_end":311553,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":311558,"byte_end":311571,"line_start":326,"line_end":326,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":311576,"byte_end":311579,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":311584,"byte_end":311591,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike, Weekday};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":311596,"byte_end":311643,"line_start":329,"line_end":329,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":311648,"byte_end":311651,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_isoywd(2015, 11, Weekday::Sat);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":311656,"byte_end":311715,"line_start":331,"line_end":331,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(d.iso_week().year(), 2015);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":311720,"byte_end":311762,"line_start":332,"line_end":332,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(d.iso_week().week(), 11);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":311767,"byte_end":311807,"line_start":333,"line_end":333,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(d.weekday(), Weekday::Sat);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":311812,"byte_end":311854,"line_start":334,"line_end":334,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(d.year(), 2015);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":311859,"byte_end":311890,"line_start":335,"line_end":335,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(d.month(), 3);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":311895,"byte_end":311924,"line_start":336,"line_end":336,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(d.day(), 14);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":311929,"byte_end":311957,"line_start":337,"line_end":337,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(d.ordinal(), 73); // day of year","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":311962,"byte_end":312009,"line_start":338,"line_end":338,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(d.num_days_from_ce(), 735671); // days since January 1, 1 CE","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":312014,"byte_end":312089,"line_start":339,"line_end":339,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":312094,"byte_end":312101,"line_start":340,"line_end":340,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1580},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":314483,"byte_end":314498,"line_start":389,"line_end":389,"column_start":12,"column_end":27},"name":"from_isoywd_opt","qualname":"<NaiveDate>::from_isoywd_opt","value":"fn from_isoywd_opt(i32, u32, Weekday) -> Option<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` from the [ISO week date](#week-date)\n (year, week number and day of the week).\n The resulting `NaiveDate` may have a different year from the input year.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` from the [ISO week date](#week-date)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":312286,"byte_end":312350,"line_start":345,"line_end":345,"column_start":5,"column_end":69}},{"value":"/ (year, week number and day of the week).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":312355,"byte_end":312399,"line_start":346,"line_end":346,"column_start":5,"column_end":49}},{"value":"/ The resulting `NaiveDate` may have a different year from the input year.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":312404,"byte_end":312480,"line_start":347,"line_end":347,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":312485,"byte_end":312488,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on the out-of-range date and/or invalid week number.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":312493,"byte_end":312564,"line_start":349,"line_end":349,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":312569,"byte_end":312572,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":312577,"byte_end":312590,"line_start":351,"line_end":351,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":312595,"byte_end":312598,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":312603,"byte_end":312610,"line_start":353,"line_end":353,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Weekday};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":312615,"byte_end":312652,"line_start":354,"line_end":354,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":312657,"byte_end":312660,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ let from_ymd = NaiveDate::from_ymd;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":312665,"byte_end":312704,"line_start":356,"line_end":356,"column_start":5,"column_end":44}},{"value":"/ let from_isoywd_opt = NaiveDate::from_isoywd_opt;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":312709,"byte_end":312762,"line_start":357,"line_end":357,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":312767,"byte_end":312770,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(from_isoywd_opt(2015, 0, Weekday::Sun), None);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":312775,"byte_end":312836,"line_start":359,"line_end":359,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(from_isoywd_opt(2015, 10, Weekday::Sun), Some(from_ymd(2015, 3, 8)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":312841,"byte_end":312925,"line_start":360,"line_end":360,"column_start":5,"column_end":89}},{"value":"/ assert_eq!(from_isoywd_opt(2015, 30, Weekday::Mon), Some(from_ymd(2015, 7, 20)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":312930,"byte_end":313015,"line_start":361,"line_end":361,"column_start":5,"column_end":90}},{"value":"/ assert_eq!(from_isoywd_opt(2015, 60, Weekday::Mon), None);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":313020,"byte_end":313082,"line_start":362,"line_end":362,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":313087,"byte_end":313090,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(from_isoywd_opt(400000, 10, Weekday::Fri), None);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":313095,"byte_end":313159,"line_start":364,"line_end":364,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(from_isoywd_opt(-400000, 10, Weekday::Sat), None);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":313164,"byte_end":313229,"line_start":365,"line_end":365,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":313234,"byte_end":313241,"line_start":366,"line_end":366,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":313246,"byte_end":313249,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ The year number of ISO week date may differ from that of the calendar date.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":313254,"byte_end":313333,"line_start":368,"line_end":368,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":313338,"byte_end":313341,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":313346,"byte_end":313353,"line_start":370,"line_end":370,"column_start":5,"column_end":12}},{"value":"/ # use chrono::{NaiveDate, Weekday};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":313358,"byte_end":313397,"line_start":371,"line_end":371,"column_start":5,"column_end":44}},{"value":"/ # let from_ymd = NaiveDate::from_ymd;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":313402,"byte_end":313443,"line_start":372,"line_end":372,"column_start":5,"column_end":46}},{"value":"/ # let from_isoywd_opt = NaiveDate::from_isoywd_opt;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":313448,"byte_end":313503,"line_start":373,"line_end":373,"column_start":5,"column_end":60}},{"value":"/ //           Mo Tu We Th Fr Sa Su","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":313508,"byte_end":313545,"line_start":374,"line_end":374,"column_start":5,"column_end":42}},{"value":"/ // 2014-W52  22 23 24 25 26 27 28    has 4+ days of new year,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":313550,"byte_end":313615,"line_start":375,"line_end":375,"column_start":5,"column_end":70}},{"value":"/ // 2015-W01  29 30 31  1  2  3  4 <- so this is the first week","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":313620,"byte_end":313686,"line_start":376,"line_end":376,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(from_isoywd_opt(2014, 52, Weekday::Sun), Some(from_ymd(2014, 12, 28)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":313691,"byte_end":313777,"line_start":377,"line_end":377,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(from_isoywd_opt(2014, 53, Weekday::Mon), None);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":313782,"byte_end":313844,"line_start":378,"line_end":378,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(from_isoywd_opt(2015, 1, Weekday::Mon), Some(from_ymd(2014, 12, 29)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":313849,"byte_end":313934,"line_start":379,"line_end":379,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":313939,"byte_end":313942,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ // 2015-W52  21 22 23 24 25 26 27    has 4+ days of old year,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":313947,"byte_end":314012,"line_start":381,"line_end":381,"column_start":5,"column_end":70}},{"value":"/ // 2015-W53  28 29 30 31  1  2  3 <- so this is the last week","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":314017,"byte_end":314082,"line_start":382,"line_end":382,"column_start":5,"column_end":70}},{"value":"/ // 2016-W01   4  5  6  7  8  9 10","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":314087,"byte_end":314124,"line_start":383,"line_end":383,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(from_isoywd_opt(2015, 52, Weekday::Sun), Some(from_ymd(2015, 12, 27)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":314129,"byte_end":314215,"line_start":384,"line_end":384,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(from_isoywd_opt(2015, 53, Weekday::Sun), Some(from_ymd(2016, 1, 3)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":314220,"byte_end":314304,"line_start":385,"line_end":385,"column_start":5,"column_end":89}},{"value":"/ assert_eq!(from_isoywd_opt(2015, 54, Weekday::Mon), None);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":314309,"byte_end":314371,"line_start":386,"line_end":386,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(from_isoywd_opt(2016, 1, Weekday::Mon), Some(from_ymd(2016, 1, 4)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":314376,"byte_end":314459,"line_start":387,"line_end":387,"column_start":5,"column_end":88}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":314464,"byte_end":314471,"line_start":388,"line_end":388,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1581},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":317437,"byte_end":317458,"line_start":464,"line_end":464,"column_start":12,"column_end":33},"name":"from_num_days_from_ce","qualname":"<NaiveDate>::from_num_days_from_ce","value":"fn from_num_days_from_ce(i32) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` from a day's number in the proleptic Gregorian calendar, with\n January 1, 1 being day 1.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` from a day's number in the proleptic Gregorian calendar, with","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":315710,"byte_end":315799,"line_start":420,"line_end":420,"column_start":5,"column_end":94}},{"value":"/ January 1, 1 being day 1.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":315804,"byte_end":315833,"line_start":421,"line_end":421,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":315838,"byte_end":315841,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ Panics if the date is out of range.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":315846,"byte_end":315885,"line_start":423,"line_end":423,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":315890,"byte_end":315893,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":315898,"byte_end":315911,"line_start":425,"line_end":425,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":315916,"byte_end":315919,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":315924,"byte_end":315931,"line_start":427,"line_end":427,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike, Weekday};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":315936,"byte_end":315983,"line_start":428,"line_end":428,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":315988,"byte_end":315991,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_num_days_from_ce(735671);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":315996,"byte_end":316049,"line_start":430,"line_end":430,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(d.num_days_from_ce(), 735671); // days since January 1, 1 CE","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":316054,"byte_end":316129,"line_start":431,"line_end":431,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(d.year(), 2015);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":316134,"byte_end":316165,"line_start":432,"line_end":432,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(d.month(), 3);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":316170,"byte_end":316199,"line_start":433,"line_end":433,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(d.day(), 14);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":316204,"byte_end":316232,"line_start":434,"line_end":434,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(d.ordinal(), 73); // day of year","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":316237,"byte_end":316284,"line_start":435,"line_end":435,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(d.iso_week().year(), 2015);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":316289,"byte_end":316331,"line_start":436,"line_end":436,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(d.iso_week().week(), 11);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":316336,"byte_end":316376,"line_start":437,"line_end":437,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(d.weekday(), Weekday::Sat);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":316381,"byte_end":316423,"line_start":438,"line_end":438,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":316428,"byte_end":316435,"line_start":439,"line_end":439,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":316440,"byte_end":316443,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ While not directly supported by Chrono,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":316448,"byte_end":316491,"line_start":441,"line_end":441,"column_start":5,"column_end":48}},{"value":"/ it is easy to convert from the Julian day number","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":316496,"byte_end":316548,"line_start":442,"line_end":442,"column_start":5,"column_end":57}},{"value":"/ (January 1, 4713 BCE in the *Julian* calendar being Day 0)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":316553,"byte_end":316615,"line_start":443,"line_end":443,"column_start":5,"column_end":67}},{"value":"/ to Gregorian with this method.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":316620,"byte_end":316654,"line_start":444,"line_end":444,"column_start":5,"column_end":39}},{"value":"/ (Note that this panics when `jd` is out of range.)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":316659,"byte_end":316713,"line_start":445,"line_end":445,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":316718,"byte_end":316721,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":316726,"byte_end":316733,"line_start":447,"line_end":447,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":316738,"byte_end":316764,"line_start":448,"line_end":448,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":316769,"byte_end":316772,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ fn jd_to_date(jd: i32) -> NaiveDate {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":316777,"byte_end":316818,"line_start":450,"line_end":450,"column_start":5,"column_end":46}},{"value":"/     // keep in mind that the Julian day number is 0-based","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":316823,"byte_end":316884,"line_start":451,"line_end":451,"column_start":5,"column_end":66}},{"value":"/     // while this method requires an 1-based number.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":316889,"byte_end":316945,"line_start":452,"line_end":452,"column_start":5,"column_end":61}},{"value":"/     NaiveDate::from_num_days_from_ce(jd - 1721425)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":316950,"byte_end":317004,"line_start":453,"line_end":453,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":317009,"byte_end":317014,"line_start":454,"line_end":454,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":317019,"byte_end":317022,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ // January 1, 4713 BCE in Julian = November 24, 4714 BCE in Gregorian","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":317027,"byte_end":317100,"line_start":456,"line_end":456,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(jd_to_date(0), NaiveDate::from_ymd(-4713, 11, 24));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":317105,"byte_end":317171,"line_start":457,"line_end":457,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":317176,"byte_end":317179,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(jd_to_date(1721426), NaiveDate::from_ymd(1, 1, 1));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":317184,"byte_end":317250,"line_start":459,"line_end":459,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(jd_to_date(2450000), NaiveDate::from_ymd(1995, 10, 9));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":317255,"byte_end":317325,"line_start":460,"line_end":460,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(jd_to_date(2451545), NaiveDate::from_ymd(2000, 1, 1));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":317330,"byte_end":317399,"line_start":461,"line_end":461,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":317404,"byte_end":317411,"line_start":462,"line_end":462,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":317416,"byte_end":317425,"line_start":463,"line_end":463,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1582},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":318405,"byte_end":318430,"line_start":488,"line_end":488,"column_start":12,"column_end":37},"name":"from_num_days_from_ce_opt","qualname":"<NaiveDate>::from_num_days_from_ce_opt","value":"fn from_num_days_from_ce_opt(i32) -> Option<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` from a day's number in the proleptic Gregorian calendar, with\n January 1, 1 being day 1.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` from a day's number in the proleptic Gregorian calendar, with","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":317575,"byte_end":317664,"line_start":468,"line_end":468,"column_start":5,"column_end":94}},{"value":"/ January 1, 1 being day 1.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":317669,"byte_end":317698,"line_start":469,"line_end":469,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":317703,"byte_end":317706,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the date is out of range.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":317711,"byte_end":317758,"line_start":471,"line_end":471,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":317763,"byte_end":317766,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":317771,"byte_end":317784,"line_start":473,"line_end":473,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":317789,"byte_end":317792,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":317797,"byte_end":317804,"line_start":475,"line_end":475,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":317809,"byte_end":317835,"line_start":476,"line_end":476,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":317840,"byte_end":317843,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ let from_ndays_opt = NaiveDate::from_num_days_from_ce_opt;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":317848,"byte_end":317910,"line_start":478,"line_end":478,"column_start":5,"column_end":67}},{"value":"/ let from_ymd = NaiveDate::from_ymd;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":317915,"byte_end":317954,"line_start":479,"line_end":479,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":317959,"byte_end":317962,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(from_ndays_opt(730_000),      Some(from_ymd(1999, 9, 3)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":317967,"byte_end":318040,"line_start":481,"line_end":481,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(from_ndays_opt(1),            Some(from_ymd(1, 1, 1)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":318045,"byte_end":318115,"line_start":482,"line_end":482,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(from_ndays_opt(0),            Some(from_ymd(0, 12, 31)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":318120,"byte_end":318192,"line_start":483,"line_end":483,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(from_ndays_opt(-1),           Some(from_ymd(0, 12, 30)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":318197,"byte_end":318269,"line_start":484,"line_end":484,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(from_ndays_opt(100_000_000),  None);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":318274,"byte_end":318325,"line_start":485,"line_end":485,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(from_ndays_opt(-100_000_000), None);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":318330,"byte_end":318381,"line_start":486,"line_end":486,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":318386,"byte_end":318393,"line_start":487,"line_end":487,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1583},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":320138,"byte_end":320159,"line_start":521,"line_end":521,"column_start":12,"column_end":33},"name":"from_weekday_of_month","qualname":"<NaiveDate>::from_weekday_of_month","value":"fn from_weekday_of_month(i32, u32, Weekday, u8) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` by counting the number of occurrences of a particular day-of-week\n since the beginning of the given month.  For instance, if you want the 2nd Friday of March\n 2017, you would use `NaiveDate::from_weekday_of_month(2017, 3, Weekday::Fri, 2)`.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` by counting the number of occurrences of a particular day-of-week","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":318856,"byte_end":318949,"line_start":496,"line_end":496,"column_start":5,"column_end":98}},{"value":"/ since the beginning of the given month.  For instance, if you want the 2nd Friday of March","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":318954,"byte_end":319048,"line_start":497,"line_end":497,"column_start":5,"column_end":99}},{"value":"/ 2017, you would use `NaiveDate::from_weekday_of_month(2017, 3, Weekday::Fri, 2)`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":319053,"byte_end":319138,"line_start":498,"line_end":498,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":319143,"byte_end":319146,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":319151,"byte_end":319163,"line_start":500,"line_end":500,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":319168,"byte_end":319171,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ The resulting `NaiveDate` is guaranteed to be in `month`.  If `n` is larger than the number","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":319176,"byte_end":319271,"line_start":502,"line_end":502,"column_start":5,"column_end":100}},{"value":"/ of `weekday` in `month` (eg. the 6th Friday of March 2017) then this function will panic.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":319276,"byte_end":319369,"line_start":503,"line_end":503,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":319374,"byte_end":319377,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ `n` is 1-indexed.  Passing `n=0` will cause a panic.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":319382,"byte_end":319438,"line_start":505,"line_end":505,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":319443,"byte_end":319446,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":319451,"byte_end":319464,"line_start":507,"line_end":507,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":319469,"byte_end":319472,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":319477,"byte_end":319484,"line_start":509,"line_end":509,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Weekday};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":319489,"byte_end":319526,"line_start":510,"line_end":510,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":319531,"byte_end":319534,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ let from_weekday_of_month = NaiveDate::from_weekday_of_month;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":319539,"byte_end":319604,"line_start":512,"line_end":512,"column_start":5,"column_end":70}},{"value":"/ let from_ymd = NaiveDate::from_ymd;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":319609,"byte_end":319648,"line_start":513,"line_end":513,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":319653,"byte_end":319656,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(from_weekday_of_month(2018, 8, Weekday::Wed, 1), from_ymd(2018, 8, 1));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":319661,"byte_end":319747,"line_start":515,"line_end":515,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(from_weekday_of_month(2018, 8, Weekday::Fri, 1), from_ymd(2018, 8, 3));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":319752,"byte_end":319838,"line_start":516,"line_end":516,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(from_weekday_of_month(2018, 8, Weekday::Tue, 2), from_ymd(2018, 8, 14));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":319843,"byte_end":319930,"line_start":517,"line_end":517,"column_start":5,"column_end":92}},{"value":"/ assert_eq!(from_weekday_of_month(2018, 8, Weekday::Fri, 4), from_ymd(2018, 8, 24));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":319935,"byte_end":320022,"line_start":518,"line_end":518,"column_start":5,"column_end":92}},{"value":"/ assert_eq!(from_weekday_of_month(2018, 8, Weekday::Fri, 5), from_ymd(2018, 8, 31));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":320027,"byte_end":320114,"line_start":519,"line_end":519,"column_start":5,"column_end":92}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":320119,"byte_end":320126,"line_start":520,"line_end":520,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1584},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":321032,"byte_end":321057,"line_start":537,"line_end":537,"column_start":12,"column_end":37},"name":"from_weekday_of_month_opt","qualname":"<NaiveDate>::from_weekday_of_month_opt","value":"fn from_weekday_of_month_opt(i32, u32, Weekday, u8) -> Option<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` by counting the number of occurrences of a particular day-of-week\n since the beginning of the given month.  For instance, if you want the 2nd Friday of March\n 2017, you would use `NaiveDate::from_weekday_of_month(2017, 3, Weekday::Fri, 2)`.  `n` is 1-indexed.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` by counting the number of occurrences of a particular day-of-week","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":320332,"byte_end":320425,"line_start":525,"line_end":525,"column_start":5,"column_end":98}},{"value":"/ since the beginning of the given month.  For instance, if you want the 2nd Friday of March","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":320430,"byte_end":320524,"line_start":526,"line_end":526,"column_start":5,"column_end":99}},{"value":"/ 2017, you would use `NaiveDate::from_weekday_of_month(2017, 3, Weekday::Fri, 2)`.  `n` is 1-indexed.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":320529,"byte_end":320633,"line_start":527,"line_end":527,"column_start":5,"column_end":109}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":320638,"byte_end":320641,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":320646,"byte_end":320653,"line_start":529,"line_end":529,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Weekday};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":320658,"byte_end":320695,"line_start":530,"line_end":530,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(NaiveDate::from_weekday_of_month_opt(2017, 3, Weekday::Fri, 2),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":320700,"byte_end":320778,"line_start":531,"line_end":531,"column_start":5,"column_end":83}},{"value":"/            NaiveDate::from_ymd_opt(2017, 3, 10))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":320783,"byte_end":320835,"line_start":532,"line_end":532,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":320840,"byte_end":320847,"line_start":533,"line_end":533,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":320852,"byte_end":320855,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if `n` out-of-range; ie. if `n` is larger than the number of `weekday` in","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":320860,"byte_end":320952,"line_start":535,"line_end":535,"column_start":5,"column_end":97}},{"value":"/ `month` (eg. the 6th Friday of March 2017), or if `n == 0`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":320957,"byte_end":321020,"line_start":536,"line_end":536,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1585},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":323069,"byte_end":323083,"line_start":594,"line_end":594,"column_start":12,"column_end":26},"name":"parse_from_str","qualname":"<NaiveDate>::parse_from_str","value":"fn parse_from_str(&str, &str) -> ParseResult<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Parses a string with the specified format string and returns a new `NaiveDate`.\n See the [`format::strftime` module](../format/strftime/index.html)\n on the supported escape sequences.","sig":null,"attributes":[{"value":"/ Parses a string with the specified format string and returns a new `NaiveDate`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":321508,"byte_end":321591,"line_start":552,"line_end":552,"column_start":5,"column_end":88}},{"value":"/ See the [`format::strftime` module](../format/strftime/index.html)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":321596,"byte_end":321666,"line_start":553,"line_end":553,"column_start":5,"column_end":75}},{"value":"/ on the supported escape sequences.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":321671,"byte_end":321709,"line_start":554,"line_end":554,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":321714,"byte_end":321717,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":321722,"byte_end":321735,"line_start":556,"line_end":556,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":321740,"byte_end":321743,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":321748,"byte_end":321755,"line_start":558,"line_end":558,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":321760,"byte_end":321786,"line_start":559,"line_end":559,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":321791,"byte_end":321794,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ let parse_from_str = NaiveDate::parse_from_str;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":321799,"byte_end":321850,"line_start":561,"line_end":561,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":321855,"byte_end":321858,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(parse_from_str(\"2015-09-05\", \"%Y-%m-%d\"),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":321863,"byte_end":321919,"line_start":563,"line_end":563,"column_start":5,"column_end":61}},{"value":"/            Ok(NaiveDate::from_ymd(2015, 9, 5)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":321924,"byte_end":321976,"line_start":564,"line_end":564,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(parse_from_str(\"5sep2015\", \"%d%b%Y\"),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":321981,"byte_end":322033,"line_start":565,"line_end":565,"column_start":5,"column_end":57}},{"value":"/            Ok(NaiveDate::from_ymd(2015, 9, 5)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":322038,"byte_end":322090,"line_start":566,"line_end":566,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":322095,"byte_end":322102,"line_start":567,"line_end":567,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":322107,"byte_end":322110,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ Time and offset is ignored for the purpose of parsing.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":322115,"byte_end":322173,"line_start":569,"line_end":569,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":322178,"byte_end":322181,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":322186,"byte_end":322193,"line_start":571,"line_end":571,"column_start":5,"column_end":12}},{"value":"/ # use chrono::NaiveDate;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":322198,"byte_end":322226,"line_start":572,"line_end":572,"column_start":5,"column_end":33}},{"value":"/ # let parse_from_str = NaiveDate::parse_from_str;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":322231,"byte_end":322284,"line_start":573,"line_end":573,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(parse_from_str(\"2014-5-17T12:34:56+09:30\", \"%Y-%m-%dT%H:%M:%S%z\"),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":322289,"byte_end":322370,"line_start":574,"line_end":574,"column_start":5,"column_end":86}},{"value":"/            Ok(NaiveDate::from_ymd(2014, 5, 17)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":322375,"byte_end":322428,"line_start":575,"line_end":575,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":322433,"byte_end":322440,"line_start":576,"line_end":576,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":322445,"byte_end":322448,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ Out-of-bound dates or insufficient fields are errors.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":322453,"byte_end":322510,"line_start":578,"line_end":578,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":322515,"byte_end":322518,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":322523,"byte_end":322530,"line_start":580,"line_end":580,"column_start":5,"column_end":12}},{"value":"/ # use chrono::NaiveDate;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":322535,"byte_end":322563,"line_start":581,"line_end":581,"column_start":5,"column_end":33}},{"value":"/ # let parse_from_str = NaiveDate::parse_from_str;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":322568,"byte_end":322621,"line_start":582,"line_end":582,"column_start":5,"column_end":58}},{"value":"/ assert!(parse_from_str(\"2015/9\", \"%Y/%m\").is_err());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":322626,"byte_end":322682,"line_start":583,"line_end":583,"column_start":5,"column_end":61}},{"value":"/ assert!(parse_from_str(\"2015/9/31\", \"%Y/%m/%d\").is_err());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":322687,"byte_end":322749,"line_start":584,"line_end":584,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":322754,"byte_end":322761,"line_start":585,"line_end":585,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":322766,"byte_end":322769,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ All parsed fields should be consistent to each other, otherwise it's an error.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":322774,"byte_end":322856,"line_start":587,"line_end":587,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":322861,"byte_end":322864,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":322869,"byte_end":322876,"line_start":589,"line_end":589,"column_start":5,"column_end":12}},{"value":"/ # use chrono::NaiveDate;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":322881,"byte_end":322909,"line_start":590,"line_end":590,"column_start":5,"column_end":33}},{"value":"/ # let parse_from_str = NaiveDate::parse_from_str;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":322914,"byte_end":322967,"line_start":591,"line_end":591,"column_start":5,"column_end":58}},{"value":"/ assert!(parse_from_str(\"Sat, 09 Aug 2013\", \"%a, %d %b %Y\").is_err());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":322972,"byte_end":323045,"line_start":592,"line_end":592,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":323050,"byte_end":323057,"line_start":593,"line_end":593,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1586},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":323911,"byte_end":323929,"line_start":617,"line_end":617,"column_start":12,"column_end":30},"name":"checked_add_months","qualname":"<NaiveDate>::checked_add_months","value":"fn checked_add_months(Self, Months) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Add a duration in [`Months`] to the date","sig":null,"attributes":[{"value":"/ Add a duration in [`Months`] to the date","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":323271,"byte_end":323315,"line_start":600,"line_end":600,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":323320,"byte_end":323323,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ If the day would be out of range for the resulting month, use the last day for that month.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":323328,"byte_end":323422,"line_start":602,"line_end":602,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":323427,"byte_end":323430,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the resulting date would be out of range.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":323435,"byte_end":323498,"line_start":604,"line_end":604,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":323503,"byte_end":323506,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":323511,"byte_end":323518,"line_start":606,"line_end":606,"column_start":5,"column_end":12}},{"value":"/ # use chrono::{NaiveDate, Months};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":323523,"byte_end":323561,"line_start":607,"line_end":607,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":323566,"byte_end":323581,"line_start":608,"line_end":608,"column_start":5,"column_end":20}},{"value":"/     NaiveDate::from_ymd(2022, 2, 20).checked_add_months(Months::new(6)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":323586,"byte_end":323662,"line_start":609,"line_end":609,"column_start":5,"column_end":81}},{"value":"/     Some(NaiveDate::from_ymd(2022, 8, 20))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":323667,"byte_end":323713,"line_start":610,"line_end":610,"column_start":5,"column_end":51}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":323718,"byte_end":323724,"line_start":611,"line_end":611,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":323729,"byte_end":323744,"line_start":612,"line_end":612,"column_start":5,"column_end":20}},{"value":"/     NaiveDate::from_ymd(2022, 7, 31).checked_add_months(Months::new(2)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":323749,"byte_end":323825,"line_start":613,"line_end":613,"column_start":5,"column_end":81}},{"value":"/     Some(NaiveDate::from_ymd(2022, 9, 30))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":323830,"byte_end":323876,"line_start":614,"line_end":614,"column_start":5,"column_end":51}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":323881,"byte_end":323887,"line_start":615,"line_end":615,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":323892,"byte_end":323899,"line_start":616,"line_end":616,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1587},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":324676,"byte_end":324694,"line_start":641,"line_end":641,"column_start":12,"column_end":30},"name":"checked_sub_months","qualname":"<NaiveDate>::checked_sub_months","value":"fn checked_sub_months(Self, Months) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Subtract a duration in [`Months`] from the date","sig":null,"attributes":[{"value":"/ Subtract a duration in [`Months`] from the date","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":324192,"byte_end":324243,"line_start":628,"line_end":628,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":324248,"byte_end":324251,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ If the day would be out of range for the resulting month, use the last day for that month.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":324256,"byte_end":324350,"line_start":630,"line_end":630,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":324355,"byte_end":324358,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the resulting date would be out of range.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":324363,"byte_end":324426,"line_start":632,"line_end":632,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":324431,"byte_end":324434,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":324439,"byte_end":324446,"line_start":634,"line_end":634,"column_start":5,"column_end":12}},{"value":"/ # use chrono::{NaiveDate, Months};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":324451,"byte_end":324489,"line_start":635,"line_end":635,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":324494,"byte_end":324509,"line_start":636,"line_end":636,"column_start":5,"column_end":20}},{"value":"/     NaiveDate::from_ymd(2022, 2, 20).checked_sub_months(Months::new(6)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":324514,"byte_end":324590,"line_start":637,"line_end":637,"column_start":5,"column_end":81}},{"value":"/     Some(NaiveDate::from_ymd(2021, 8, 20))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":324595,"byte_end":324641,"line_start":638,"line_end":638,"column_start":5,"column_end":51}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":324646,"byte_end":324652,"line_start":639,"line_end":639,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":324657,"byte_end":324664,"line_start":640,"line_end":640,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1589},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":326738,"byte_end":326746,"line_start":710,"line_end":710,"column_start":12,"column_end":20},"name":"and_time","qualname":"<NaiveDate>::and_time","value":"fn and_time(&Self, NaiveTime) -> NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` from the current date and given `NaiveTime`.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` from the current date and given `NaiveTime`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":326279,"byte_end":326355,"line_start":695,"line_end":695,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":326360,"byte_end":326363,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":326368,"byte_end":326381,"line_start":697,"line_end":697,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":326386,"byte_end":326389,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":326394,"byte_end":326401,"line_start":699,"line_end":699,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveTime, NaiveDateTime};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":326406,"byte_end":326460,"line_start":700,"line_end":700,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":326465,"byte_end":326468,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_ymd(2015, 6, 3);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":326473,"byte_end":326517,"line_start":702,"line_end":702,"column_start":5,"column_end":49}},{"value":"/ let t = NaiveTime::from_hms_milli(12, 34, 56, 789);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":326522,"byte_end":326577,"line_start":703,"line_end":703,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":326582,"byte_end":326585,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = d.and_time(t);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":326590,"byte_end":326632,"line_start":705,"line_end":705,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(dt.date(), d);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":326637,"byte_end":326666,"line_start":706,"line_end":706,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(dt.time(), t);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":326671,"byte_end":326700,"line_start":707,"line_end":707,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":326705,"byte_end":326712,"line_start":708,"line_end":708,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":326717,"byte_end":326726,"line_start":709,"line_end":709,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1590},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":327560,"byte_end":327567,"line_start":734,"line_end":734,"column_start":12,"column_end":19},"name":"and_hms","qualname":"<NaiveDate>::and_hms","value":"fn and_hms(&Self, u32, u32, u32) -> NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` from the current date, hour, minute and second.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` from the current date, hour, minute and second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":326841,"byte_end":326920,"line_start":714,"line_end":714,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":326925,"byte_end":326928,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ No [leap second](./struct.NaiveTime.html#leap-second-handling) is allowed here;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":326933,"byte_end":327016,"line_start":716,"line_end":716,"column_start":5,"column_end":88}},{"value":"/ use `NaiveDate::and_hms_*` methods with a subsecond parameter instead.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":327021,"byte_end":327095,"line_start":717,"line_end":717,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":327100,"byte_end":327103,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ Panics on invalid hour, minute and/or second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":327108,"byte_end":327157,"line_start":719,"line_end":719,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":327162,"byte_end":327165,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":327170,"byte_end":327183,"line_start":721,"line_end":721,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":327188,"byte_end":327191,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":327196,"byte_end":327203,"line_start":723,"line_end":723,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Datelike, Timelike, Weekday};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":327208,"byte_end":327280,"line_start":724,"line_end":724,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":327285,"byte_end":327288,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_ymd(2015, 6, 3);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":327293,"byte_end":327337,"line_start":726,"line_end":726,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":327342,"byte_end":327345,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = d.and_hms(12, 34, 56);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":327350,"byte_end":327400,"line_start":728,"line_end":728,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(dt.year(), 2015);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":327405,"byte_end":327437,"line_start":729,"line_end":729,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(dt.weekday(), Weekday::Wed);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":327442,"byte_end":327485,"line_start":730,"line_end":730,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(dt.second(), 56);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":327490,"byte_end":327522,"line_start":731,"line_end":731,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":327527,"byte_end":327534,"line_start":732,"line_end":732,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":327539,"byte_end":327548,"line_start":733,"line_end":733,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1591},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":328451,"byte_end":328462,"line_start":757,"line_end":757,"column_start":12,"column_end":23},"name":"and_hms_opt","qualname":"<NaiveDate>::and_hms_opt","value":"fn and_hms_opt(&Self, u32, u32, u32) -> Option<NaiveDateTime>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` from the current date, hour, minute and second.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` from the current date, hour, minute and second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":327700,"byte_end":327779,"line_start":738,"line_end":738,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":327784,"byte_end":327787,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ No [leap second](./struct.NaiveTime.html#leap-second-handling) is allowed here;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":327792,"byte_end":327875,"line_start":740,"line_end":740,"column_start":5,"column_end":88}},{"value":"/ use `NaiveDate::and_hms_*_opt` methods with a subsecond parameter instead.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":327880,"byte_end":327958,"line_start":741,"line_end":741,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":327963,"byte_end":327966,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on invalid hour, minute and/or second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":327971,"byte_end":328028,"line_start":743,"line_end":743,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":328033,"byte_end":328036,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":328041,"byte_end":328054,"line_start":745,"line_end":745,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":328059,"byte_end":328062,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":328067,"byte_end":328074,"line_start":747,"line_end":747,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":328079,"byte_end":328105,"line_start":748,"line_end":748,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":328110,"byte_end":328113,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_ymd(2015, 6, 3);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":328118,"byte_end":328162,"line_start":750,"line_end":750,"column_start":5,"column_end":49}},{"value":"/ assert!(d.and_hms_opt(12, 34, 56).is_some());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":328167,"byte_end":328216,"line_start":751,"line_end":751,"column_start":5,"column_end":54}},{"value":"/ assert!(d.and_hms_opt(12, 34, 60).is_none()); // use `and_hms_milli_opt` instead","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":328221,"byte_end":328305,"line_start":752,"line_end":752,"column_start":5,"column_end":89}},{"value":"/ assert!(d.and_hms_opt(12, 60, 56).is_none());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":328310,"byte_end":328359,"line_start":753,"line_end":753,"column_start":5,"column_end":54}},{"value":"/ assert!(d.and_hms_opt(24, 34, 56).is_none());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":328364,"byte_end":328413,"line_start":754,"line_end":754,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":328418,"byte_end":328425,"line_start":755,"line_end":755,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":328430,"byte_end":328439,"line_start":756,"line_end":756,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1593},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":329399,"byte_end":329412,"line_start":782,"line_end":782,"column_start":12,"column_end":25},"name":"and_hms_milli","qualname":"<NaiveDate>::and_hms_milli","value":"fn and_hms_milli(&Self, u32, u32, u32, u32) -> NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` from the current date, hour, minute, second and millisecond.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` from the current date, hour, minute, second and millisecond.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":328619,"byte_end":328711,"line_start":761,"line_end":761,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":328716,"byte_end":328719,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ The millisecond part can exceed 1,000","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":328724,"byte_end":328765,"line_start":763,"line_end":763,"column_start":5,"column_end":46}},{"value":"/ in order to represent the [leap second](./struct.NaiveTime.html#leap-second-handling).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":328770,"byte_end":328860,"line_start":764,"line_end":764,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":328865,"byte_end":328868,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ Panics on invalid hour, minute, second and/or millisecond.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":328873,"byte_end":328935,"line_start":766,"line_end":766,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":328940,"byte_end":328943,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":328948,"byte_end":328961,"line_start":768,"line_end":768,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":328966,"byte_end":328969,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":328974,"byte_end":328981,"line_start":770,"line_end":770,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Datelike, Timelike, Weekday};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":328986,"byte_end":329058,"line_start":771,"line_end":771,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":329063,"byte_end":329066,"line_start":772,"line_end":772,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_ymd(2015, 6, 3);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":329071,"byte_end":329115,"line_start":773,"line_end":773,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":329120,"byte_end":329123,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = d.and_hms_milli(12, 34, 56, 789);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":329128,"byte_end":329189,"line_start":775,"line_end":775,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(dt.year(), 2015);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":329194,"byte_end":329226,"line_start":776,"line_end":776,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(dt.weekday(), Weekday::Wed);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":329231,"byte_end":329274,"line_start":777,"line_end":777,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(dt.second(), 56);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":329279,"byte_end":329311,"line_start":778,"line_end":778,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(dt.nanosecond(), 789_000_000);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":329316,"byte_end":329361,"line_start":779,"line_end":779,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":329366,"byte_end":329373,"line_start":780,"line_end":780,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":329378,"byte_end":329387,"line_start":781,"line_end":781,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1594},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":330483,"byte_end":330500,"line_start":807,"line_end":807,"column_start":12,"column_end":29},"name":"and_hms_milli_opt","qualname":"<NaiveDate>::and_hms_milli_opt","value":"fn and_hms_milli_opt(&Self, u32, u32, u32, u32) -> Option<NaiveDateTime>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` from the current date, hour, minute, second and millisecond.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` from the current date, hour, minute, second and millisecond.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":329570,"byte_end":329662,"line_start":786,"line_end":786,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":329667,"byte_end":329670,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ The millisecond part can exceed 1,000","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":329675,"byte_end":329716,"line_start":788,"line_end":788,"column_start":5,"column_end":46}},{"value":"/ in order to represent the [leap second](./struct.NaiveTime.html#leap-second-handling).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":329721,"byte_end":329811,"line_start":789,"line_end":789,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":329816,"byte_end":329819,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on invalid hour, minute, second and/or millisecond.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":329824,"byte_end":329894,"line_start":791,"line_end":791,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":329899,"byte_end":329902,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":329907,"byte_end":329920,"line_start":793,"line_end":793,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":329925,"byte_end":329928,"line_start":794,"line_end":794,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":329933,"byte_end":329940,"line_start":795,"line_end":795,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":329945,"byte_end":329971,"line_start":796,"line_end":796,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":329976,"byte_end":329979,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_ymd(2015, 6, 3);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":329984,"byte_end":330028,"line_start":798,"line_end":798,"column_start":5,"column_end":49}},{"value":"/ assert!(d.and_hms_milli_opt(12, 34, 56,   789).is_some());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":330033,"byte_end":330095,"line_start":799,"line_end":799,"column_start":5,"column_end":67}},{"value":"/ assert!(d.and_hms_milli_opt(12, 34, 59, 1_789).is_some()); // leap second","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":330100,"byte_end":330177,"line_start":800,"line_end":800,"column_start":5,"column_end":82}},{"value":"/ assert!(d.and_hms_milli_opt(12, 34, 59, 2_789).is_none());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":330182,"byte_end":330244,"line_start":801,"line_end":801,"column_start":5,"column_end":67}},{"value":"/ assert!(d.and_hms_milli_opt(12, 34, 60,   789).is_none());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":330249,"byte_end":330311,"line_start":802,"line_end":802,"column_start":5,"column_end":67}},{"value":"/ assert!(d.and_hms_milli_opt(12, 60, 56,   789).is_none());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":330316,"byte_end":330378,"line_start":803,"line_end":803,"column_start":5,"column_end":67}},{"value":"/ assert!(d.and_hms_milli_opt(24, 34, 56,   789).is_none());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":330383,"byte_end":330445,"line_start":804,"line_end":804,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":330450,"byte_end":330457,"line_start":805,"line_end":805,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":330462,"byte_end":330471,"line_start":806,"line_end":806,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1596},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":331517,"byte_end":331530,"line_start":838,"line_end":838,"column_start":12,"column_end":25},"name":"and_hms_micro","qualname":"<NaiveDate>::and_hms_micro","value":"fn and_hms_micro(&Self, u32, u32, u32, u32) -> NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` from the current date, hour, minute, second and microsecond.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` from the current date, hour, minute, second and microsecond.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":330729,"byte_end":330821,"line_start":817,"line_end":817,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":330826,"byte_end":330829,"line_start":818,"line_end":818,"column_start":5,"column_end":8}},{"value":"/ The microsecond part can exceed 1,000,000","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":330834,"byte_end":330879,"line_start":819,"line_end":819,"column_start":5,"column_end":50}},{"value":"/ in order to represent the [leap second](./struct.NaiveTime.html#leap-second-handling).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":330884,"byte_end":330974,"line_start":820,"line_end":820,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":330979,"byte_end":330982,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ Panics on invalid hour, minute, second and/or microsecond.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":330987,"byte_end":331049,"line_start":822,"line_end":822,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":331054,"byte_end":331057,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":331062,"byte_end":331075,"line_start":824,"line_end":824,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":331080,"byte_end":331083,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":331088,"byte_end":331095,"line_start":826,"line_end":826,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Datelike, Timelike, Weekday};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":331100,"byte_end":331172,"line_start":827,"line_end":827,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":331177,"byte_end":331180,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_ymd(2015, 6, 3);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":331185,"byte_end":331229,"line_start":829,"line_end":829,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":331234,"byte_end":331237,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = d.and_hms_micro(12, 34, 56, 789_012);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":331242,"byte_end":331307,"line_start":831,"line_end":831,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(dt.year(), 2015);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":331312,"byte_end":331344,"line_start":832,"line_end":832,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(dt.weekday(), Weekday::Wed);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":331349,"byte_end":331392,"line_start":833,"line_end":833,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(dt.second(), 56);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":331397,"byte_end":331429,"line_start":834,"line_end":834,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(dt.nanosecond(), 789_012_000);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":331434,"byte_end":331479,"line_start":835,"line_end":835,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":331484,"byte_end":331491,"line_start":836,"line_end":836,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":331496,"byte_end":331505,"line_start":837,"line_end":837,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1597},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":332629,"byte_end":332646,"line_start":863,"line_end":863,"column_start":12,"column_end":29},"name":"and_hms_micro_opt","qualname":"<NaiveDate>::and_hms_micro_opt","value":"fn and_hms_micro_opt(&Self, u32, u32, u32, u32) -> Option<NaiveDateTime>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` from the current date, hour, minute, second and microsecond.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` from the current date, hour, minute, second and microsecond.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":331688,"byte_end":331780,"line_start":842,"line_end":842,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":331785,"byte_end":331788,"line_start":843,"line_end":843,"column_start":5,"column_end":8}},{"value":"/ The microsecond part can exceed 1,000,000","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":331793,"byte_end":331838,"line_start":844,"line_end":844,"column_start":5,"column_end":50}},{"value":"/ in order to represent the [leap second](./struct.NaiveTime.html#leap-second-handling).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":331843,"byte_end":331933,"line_start":845,"line_end":845,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":331938,"byte_end":331941,"line_start":846,"line_end":846,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on invalid hour, minute, second and/or microsecond.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":331946,"byte_end":332016,"line_start":847,"line_end":847,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":332021,"byte_end":332024,"line_start":848,"line_end":848,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":332029,"byte_end":332042,"line_start":849,"line_end":849,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":332047,"byte_end":332050,"line_start":850,"line_end":850,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":332055,"byte_end":332062,"line_start":851,"line_end":851,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":332067,"byte_end":332093,"line_start":852,"line_end":852,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":332098,"byte_end":332101,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_ymd(2015, 6, 3);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":332106,"byte_end":332150,"line_start":854,"line_end":854,"column_start":5,"column_end":49}},{"value":"/ assert!(d.and_hms_micro_opt(12, 34, 56,   789_012).is_some());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":332155,"byte_end":332221,"line_start":855,"line_end":855,"column_start":5,"column_end":71}},{"value":"/ assert!(d.and_hms_micro_opt(12, 34, 59, 1_789_012).is_some()); // leap second","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":332226,"byte_end":332307,"line_start":856,"line_end":856,"column_start":5,"column_end":86}},{"value":"/ assert!(d.and_hms_micro_opt(12, 34, 59, 2_789_012).is_none());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":332312,"byte_end":332378,"line_start":857,"line_end":857,"column_start":5,"column_end":71}},{"value":"/ assert!(d.and_hms_micro_opt(12, 34, 60,   789_012).is_none());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":332383,"byte_end":332449,"line_start":858,"line_end":858,"column_start":5,"column_end":71}},{"value":"/ assert!(d.and_hms_micro_opt(12, 60, 56,   789_012).is_none());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":332454,"byte_end":332520,"line_start":859,"line_end":859,"column_start":5,"column_end":71}},{"value":"/ assert!(d.and_hms_micro_opt(24, 34, 56,   789_012).is_none());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":332525,"byte_end":332591,"line_start":860,"line_end":860,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":332596,"byte_end":332603,"line_start":861,"line_end":861,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":332608,"byte_end":332617,"line_start":862,"line_end":862,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1599},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":333667,"byte_end":333679,"line_start":894,"line_end":894,"column_start":12,"column_end":24},"name":"and_hms_nano","qualname":"<NaiveDate>::and_hms_nano","value":"fn and_hms_nano(&Self, u32, u32, u32, u32) -> NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` from the current date, hour, minute, second and nanosecond.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` from the current date, hour, minute, second and nanosecond.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":332875,"byte_end":332966,"line_start":873,"line_end":873,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":332971,"byte_end":332974,"line_start":874,"line_end":874,"column_start":5,"column_end":8}},{"value":"/ The nanosecond part can exceed 1,000,000,000","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":332979,"byte_end":333027,"line_start":875,"line_end":875,"column_start":5,"column_end":53}},{"value":"/ in order to represent the [leap second](./struct.NaiveTime.html#leap-second-handling).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":333032,"byte_end":333122,"line_start":876,"line_end":876,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":333127,"byte_end":333130,"line_start":877,"line_end":877,"column_start":5,"column_end":8}},{"value":"/ Panics on invalid hour, minute, second and/or nanosecond.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":333135,"byte_end":333196,"line_start":878,"line_end":878,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":333201,"byte_end":333204,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":333209,"byte_end":333222,"line_start":880,"line_end":880,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":333227,"byte_end":333230,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":333235,"byte_end":333242,"line_start":882,"line_end":882,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Datelike, Timelike, Weekday};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":333247,"byte_end":333319,"line_start":883,"line_end":883,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":333324,"byte_end":333327,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_ymd(2015, 6, 3);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":333332,"byte_end":333376,"line_start":885,"line_end":885,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":333381,"byte_end":333384,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = d.and_hms_nano(12, 34, 56, 789_012_345);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":333389,"byte_end":333457,"line_start":887,"line_end":887,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(dt.year(), 2015);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":333462,"byte_end":333494,"line_start":888,"line_end":888,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(dt.weekday(), Weekday::Wed);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":333499,"byte_end":333542,"line_start":889,"line_end":889,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(dt.second(), 56);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":333547,"byte_end":333579,"line_start":890,"line_end":890,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(dt.nanosecond(), 789_012_345);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":333584,"byte_end":333629,"line_start":891,"line_end":891,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":333634,"byte_end":333641,"line_start":892,"line_end":892,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":333646,"byte_end":333655,"line_start":893,"line_end":893,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1600},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":334794,"byte_end":334810,"line_start":919,"line_end":919,"column_start":12,"column_end":28},"name":"and_hms_nano_opt","qualname":"<NaiveDate>::and_hms_nano_opt","value":"fn and_hms_nano_opt(&Self, u32, u32, u32, u32) -> Option<NaiveDateTime>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` from the current date, hour, minute, second and nanosecond.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` from the current date, hour, minute, second and nanosecond.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":333834,"byte_end":333925,"line_start":898,"line_end":898,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":333930,"byte_end":333933,"line_start":899,"line_end":899,"column_start":5,"column_end":8}},{"value":"/ The nanosecond part can exceed 1,000,000,000","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":333938,"byte_end":333986,"line_start":900,"line_end":900,"column_start":5,"column_end":53}},{"value":"/ in order to represent the [leap second](./struct.NaiveTime.html#leap-second-handling).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":333991,"byte_end":334081,"line_start":901,"line_end":901,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":334086,"byte_end":334089,"line_start":902,"line_end":902,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on invalid hour, minute, second and/or nanosecond.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":334094,"byte_end":334163,"line_start":903,"line_end":903,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":334168,"byte_end":334171,"line_start":904,"line_end":904,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":334176,"byte_end":334189,"line_start":905,"line_end":905,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":334194,"byte_end":334197,"line_start":906,"line_end":906,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":334202,"byte_end":334209,"line_start":907,"line_end":907,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":334214,"byte_end":334240,"line_start":908,"line_end":908,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":334245,"byte_end":334248,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_ymd(2015, 6, 3);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":334253,"byte_end":334297,"line_start":910,"line_end":910,"column_start":5,"column_end":49}},{"value":"/ assert!(d.and_hms_nano_opt(12, 34, 56,   789_012_345).is_some());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":334302,"byte_end":334371,"line_start":911,"line_end":911,"column_start":5,"column_end":74}},{"value":"/ assert!(d.and_hms_nano_opt(12, 34, 59, 1_789_012_345).is_some()); // leap second","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":334376,"byte_end":334460,"line_start":912,"line_end":912,"column_start":5,"column_end":89}},{"value":"/ assert!(d.and_hms_nano_opt(12, 34, 59, 2_789_012_345).is_none());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":334465,"byte_end":334534,"line_start":913,"line_end":913,"column_start":5,"column_end":74}},{"value":"/ assert!(d.and_hms_nano_opt(12, 34, 60,   789_012_345).is_none());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":334539,"byte_end":334608,"line_start":914,"line_end":914,"column_start":5,"column_end":74}},{"value":"/ assert!(d.and_hms_nano_opt(12, 60, 56,   789_012_345).is_none());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":334613,"byte_end":334682,"line_start":915,"line_end":915,"column_start":5,"column_end":74}},{"value":"/ assert!(d.and_hms_nano_opt(24, 34, 56,   789_012_345).is_none());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":334687,"byte_end":334756,"line_start":916,"line_end":916,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":334761,"byte_end":334768,"line_start":917,"line_end":917,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":334773,"byte_end":334782,"line_start":918,"line_end":918,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1606},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":336500,"byte_end":336504,"line_start":976,"line_end":976,"column_start":12,"column_end":16},"name":"succ","qualname":"<NaiveDate>::succ","value":"fn succ(&Self) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` for the next calendar date.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` for the next calendar date.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":335970,"byte_end":336025,"line_start":962,"line_end":962,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":336030,"byte_end":336033,"line_start":963,"line_end":963,"column_start":5,"column_end":8}},{"value":"/ Panics when `self` is the last representable date.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":336038,"byte_end":336092,"line_start":964,"line_end":964,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":336097,"byte_end":336100,"line_start":965,"line_end":965,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":336105,"byte_end":336118,"line_start":966,"line_end":966,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":336123,"byte_end":336126,"line_start":967,"line_end":967,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":336131,"byte_end":336138,"line_start":968,"line_end":968,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":336143,"byte_end":336169,"line_start":969,"line_end":969,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":336174,"byte_end":336177,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015,  6,  3).succ(), NaiveDate::from_ymd(2015, 6, 4));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":336182,"byte_end":336272,"line_start":971,"line_end":971,"column_start":5,"column_end":95}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015,  6, 30).succ(), NaiveDate::from_ymd(2015, 7, 1));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":336277,"byte_end":336367,"line_start":972,"line_end":972,"column_start":5,"column_end":95}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 12, 31).succ(), NaiveDate::from_ymd(2016, 1, 1));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":336372,"byte_end":336462,"line_start":973,"line_end":973,"column_start":5,"column_end":95}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":336467,"byte_end":336474,"line_start":974,"line_end":974,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":336479,"byte_end":336488,"line_start":975,"line_end":975,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1607},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":337013,"byte_end":337021,"line_start":994,"line_end":994,"column_start":12,"column_end":20},"name":"succ_opt","qualname":"<NaiveDate>::succ_opt","value":"fn succ_opt(&Self) -> Option<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` for the next calendar date.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` for the next calendar date.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":336585,"byte_end":336640,"line_start":980,"line_end":980,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":336645,"byte_end":336648,"line_start":981,"line_end":981,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when `self` is the last representable date.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":336653,"byte_end":336715,"line_start":982,"line_end":982,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":336720,"byte_end":336723,"line_start":983,"line_end":983,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":336728,"byte_end":336741,"line_start":984,"line_end":984,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":336746,"byte_end":336749,"line_start":985,"line_end":985,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":336754,"byte_end":336761,"line_start":986,"line_end":986,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":336766,"byte_end":336792,"line_start":987,"line_end":987,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":336797,"byte_end":336800,"line_start":988,"line_end":988,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 6, 3).succ_opt(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":336805,"byte_end":336863,"line_start":989,"line_end":989,"column_start":5,"column_end":63}},{"value":"/            Some(NaiveDate::from_ymd(2015, 6, 4)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":336868,"byte_end":336922,"line_start":990,"line_end":990,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(NaiveDate::MAX.succ_opt(), None);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":336927,"byte_end":336975,"line_start":991,"line_end":991,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":336980,"byte_end":336987,"line_start":992,"line_end":992,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":336992,"byte_end":337001,"line_start":993,"line_end":993,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1609},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":337696,"byte_end":337700,"line_start":1012,"line_end":1012,"column_start":12,"column_end":16},"name":"pred","qualname":"<NaiveDate>::pred","value":"fn pred(&Self) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` for the previous calendar date.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` for the previous calendar date.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":337161,"byte_end":337220,"line_start":998,"line_end":998,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":337225,"byte_end":337228,"line_start":999,"line_end":999,"column_start":5,"column_end":8}},{"value":"/ Panics when `self` is the first representable date.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":337233,"byte_end":337288,"line_start":1000,"line_end":1000,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":337293,"byte_end":337296,"line_start":1001,"line_end":1001,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":337301,"byte_end":337314,"line_start":1002,"line_end":1002,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":337319,"byte_end":337322,"line_start":1003,"line_end":1003,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":337327,"byte_end":337334,"line_start":1004,"line_end":1004,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":337339,"byte_end":337365,"line_start":1005,"line_end":1005,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":337370,"byte_end":337373,"line_start":1006,"line_end":1006,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 6, 3).pred(), NaiveDate::from_ymd(2015,  6,  2));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":337378,"byte_end":337468,"line_start":1007,"line_end":1007,"column_start":5,"column_end":95}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 6, 1).pred(), NaiveDate::from_ymd(2015,  5, 31));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":337473,"byte_end":337563,"line_start":1008,"line_end":1008,"column_start":5,"column_end":95}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 1, 1).pred(), NaiveDate::from_ymd(2014, 12, 31));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":337568,"byte_end":337658,"line_start":1009,"line_end":1009,"column_start":5,"column_end":95}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":337663,"byte_end":337670,"line_start":1010,"line_end":1010,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":337675,"byte_end":337684,"line_start":1011,"line_end":1011,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1610},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":338214,"byte_end":338222,"line_start":1030,"line_end":1030,"column_start":12,"column_end":20},"name":"pred_opt","qualname":"<NaiveDate>::pred_opt","value":"fn pred_opt(&Self) -> Option<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` for the previous calendar date.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` for the previous calendar date.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":337781,"byte_end":337840,"line_start":1016,"line_end":1016,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":337845,"byte_end":337848,"line_start":1017,"line_end":1017,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when `self` is the first representable date.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":337853,"byte_end":337916,"line_start":1018,"line_end":1018,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":337921,"byte_end":337924,"line_start":1019,"line_end":1019,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":337929,"byte_end":337942,"line_start":1020,"line_end":1020,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":337947,"byte_end":337950,"line_start":1021,"line_end":1021,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":337955,"byte_end":337962,"line_start":1022,"line_end":1022,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":337967,"byte_end":337993,"line_start":1023,"line_end":1023,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":337998,"byte_end":338001,"line_start":1024,"line_end":1024,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 6, 3).pred_opt(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":338006,"byte_end":338064,"line_start":1025,"line_end":1025,"column_start":5,"column_end":63}},{"value":"/            Some(NaiveDate::from_ymd(2015, 6, 2)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":338069,"byte_end":338123,"line_start":1026,"line_end":1026,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(NaiveDate::MIN.pred_opt(), None);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":338128,"byte_end":338176,"line_start":1027,"line_end":1027,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":338181,"byte_end":338188,"line_start":1028,"line_end":1028,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":338193,"byte_end":338202,"line_start":1029,"line_end":1029,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1612},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":339146,"byte_end":339164,"line_start":1052,"line_end":1052,"column_start":12,"column_end":30},"name":"checked_add_signed","qualname":"<NaiveDate>::checked_add_signed","value":"fn checked_add_signed(Self, OldDuration) -> Option<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Adds the `days` part of given `Duration` to the current date.","sig":null,"attributes":[{"value":"/ Adds the `days` part of given `Duration` to the current date.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":338364,"byte_end":338429,"line_start":1034,"line_end":1034,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":338434,"byte_end":338437,"line_start":1035,"line_end":1035,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when it will result in overflow.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":338442,"byte_end":338493,"line_start":1036,"line_end":1036,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":338498,"byte_end":338501,"line_start":1037,"line_end":1037,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":338506,"byte_end":338519,"line_start":1038,"line_end":1038,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":338524,"byte_end":338527,"line_start":1039,"line_end":1039,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":338532,"byte_end":338539,"line_start":1040,"line_end":1040,"column_start":5,"column_end":12}},{"value":"/ use chrono::{Duration, NaiveDate};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":338544,"byte_end":338582,"line_start":1041,"line_end":1041,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":338587,"byte_end":338590,"line_start":1042,"line_end":1042,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_ymd(2015, 9, 5);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":338595,"byte_end":338639,"line_start":1043,"line_end":1043,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(d.checked_add_signed(Duration::days(40)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":338644,"byte_end":338700,"line_start":1044,"line_end":1044,"column_start":5,"column_end":61}},{"value":"/            Some(NaiveDate::from_ymd(2015, 10, 15)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":338705,"byte_end":338761,"line_start":1045,"line_end":1045,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(d.checked_add_signed(Duration::days(-40)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":338766,"byte_end":338823,"line_start":1046,"line_end":1046,"column_start":5,"column_end":62}},{"value":"/            Some(NaiveDate::from_ymd(2015, 7, 27)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":338828,"byte_end":338883,"line_start":1047,"line_end":1047,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(d.checked_add_signed(Duration::days(1_000_000_000)), None);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":338888,"byte_end":338962,"line_start":1048,"line_end":1048,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(d.checked_add_signed(Duration::days(-1_000_000_000)), None);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":338967,"byte_end":339042,"line_start":1049,"line_end":1049,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(NaiveDate::MAX.checked_add_signed(Duration::days(1)), None);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":339047,"byte_end":339122,"line_start":1050,"line_end":1050,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":339127,"byte_end":339134,"line_start":1051,"line_end":1051,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1613},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":340629,"byte_end":340647,"line_start":1083,"line_end":1083,"column_start":12,"column_end":30},"name":"checked_sub_signed","qualname":"<NaiveDate>::checked_sub_signed","value":"fn checked_sub_signed(Self, OldDuration) -> Option<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Subtracts the `days` part of given `Duration` from the current date.","sig":null,"attributes":[{"value":"/ Subtracts the `days` part of given `Duration` from the current date.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":339840,"byte_end":339912,"line_start":1065,"line_end":1065,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":339917,"byte_end":339920,"line_start":1066,"line_end":1066,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when it will result in overflow.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":339925,"byte_end":339976,"line_start":1067,"line_end":1067,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":339981,"byte_end":339984,"line_start":1068,"line_end":1068,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":339989,"byte_end":340002,"line_start":1069,"line_end":1069,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":340007,"byte_end":340010,"line_start":1070,"line_end":1070,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":340015,"byte_end":340022,"line_start":1071,"line_end":1071,"column_start":5,"column_end":12}},{"value":"/ use chrono::{Duration, NaiveDate};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":340027,"byte_end":340065,"line_start":1072,"line_end":1072,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":340070,"byte_end":340073,"line_start":1073,"line_end":1073,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_ymd(2015, 9, 5);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":340078,"byte_end":340122,"line_start":1074,"line_end":1074,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(d.checked_sub_signed(Duration::days(40)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":340127,"byte_end":340183,"line_start":1075,"line_end":1075,"column_start":5,"column_end":61}},{"value":"/            Some(NaiveDate::from_ymd(2015, 7, 27)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":340188,"byte_end":340243,"line_start":1076,"line_end":1076,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(d.checked_sub_signed(Duration::days(-40)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":340248,"byte_end":340305,"line_start":1077,"line_end":1077,"column_start":5,"column_end":62}},{"value":"/            Some(NaiveDate::from_ymd(2015, 10, 15)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":340310,"byte_end":340366,"line_start":1078,"line_end":1078,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(d.checked_sub_signed(Duration::days(1_000_000_000)), None);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":340371,"byte_end":340445,"line_start":1079,"line_end":1079,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(d.checked_sub_signed(Duration::days(-1_000_000_000)), None);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":340450,"byte_end":340525,"line_start":1080,"line_end":1080,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(NaiveDate::MIN.checked_sub_signed(Duration::days(1)), None);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":340530,"byte_end":340605,"line_start":1081,"line_end":1081,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":340610,"byte_end":340617,"line_start":1082,"line_end":1082,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1614},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":342436,"byte_end":342457,"line_start":1118,"line_end":1118,"column_start":12,"column_end":33},"name":"signed_duration_since","qualname":"<NaiveDate>::signed_duration_since","value":"fn signed_duration_since(Self, NaiveDate) -> OldDuration","parent":null,"children":[],"decl_id":null,"docs":" Subtracts another `NaiveDate` from the current date.\n Returns a `Duration` of integral numbers.","sig":null,"attributes":[{"value":"/ Subtracts another `NaiveDate` from the current date.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":341323,"byte_end":341379,"line_start":1096,"line_end":1096,"column_start":5,"column_end":61}},{"value":"/ Returns a `Duration` of integral numbers.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":341384,"byte_end":341429,"line_start":1097,"line_end":1097,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":341434,"byte_end":341437,"line_start":1098,"line_end":1098,"column_start":5,"column_end":8}},{"value":"/ This does not overflow or underflow at all,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":341442,"byte_end":341489,"line_start":1099,"line_end":1099,"column_start":5,"column_end":52}},{"value":"/ as all possible output fits in the range of `Duration`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":341494,"byte_end":341553,"line_start":1100,"line_end":1100,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":341558,"byte_end":341561,"line_start":1101,"line_end":1101,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":341566,"byte_end":341579,"line_start":1102,"line_end":1102,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":341584,"byte_end":341587,"line_start":1103,"line_end":1103,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":341592,"byte_end":341599,"line_start":1104,"line_end":1104,"column_start":5,"column_end":12}},{"value":"/ use chrono::{Duration, NaiveDate};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":341604,"byte_end":341642,"line_start":1105,"line_end":1105,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":341647,"byte_end":341650,"line_start":1106,"line_end":1106,"column_start":5,"column_end":8}},{"value":"/ let from_ymd = NaiveDate::from_ymd;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":341655,"byte_end":341694,"line_start":1107,"line_end":1107,"column_start":5,"column_end":44}},{"value":"/ let since = NaiveDate::signed_duration_since;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":341699,"byte_end":341748,"line_start":1108,"line_end":1108,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":341753,"byte_end":341756,"line_start":1109,"line_end":1109,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(since(from_ymd(2014, 1, 1), from_ymd(2014, 1, 1)), Duration::zero());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":341761,"byte_end":341845,"line_start":1110,"line_end":1110,"column_start":5,"column_end":89}},{"value":"/ assert_eq!(since(from_ymd(2014, 1, 1), from_ymd(2013, 12, 31)), Duration::days(1));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":341850,"byte_end":341937,"line_start":1111,"line_end":1111,"column_start":5,"column_end":92}},{"value":"/ assert_eq!(since(from_ymd(2014, 1, 1), from_ymd(2014, 1, 2)), Duration::days(-1));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":341942,"byte_end":342028,"line_start":1112,"line_end":1112,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(since(from_ymd(2014, 1, 1), from_ymd(2013, 9, 23)), Duration::days(100));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":342033,"byte_end":342121,"line_start":1113,"line_end":1113,"column_start":5,"column_end":93}},{"value":"/ assert_eq!(since(from_ymd(2014, 1, 1), from_ymd(2013, 1, 1)), Duration::days(365));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":342126,"byte_end":342213,"line_start":1114,"line_end":1114,"column_start":5,"column_end":92}},{"value":"/ assert_eq!(since(from_ymd(2014, 1, 1), from_ymd(2010, 1, 1)), Duration::days(365*4 + 1));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":342218,"byte_end":342311,"line_start":1115,"line_end":1115,"column_start":5,"column_end":98}},{"value":"/ assert_eq!(since(from_ymd(2014, 1, 1), from_ymd(1614, 1, 1)), Duration::days(365*400 + 97));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":342316,"byte_end":342412,"line_start":1116,"line_end":1116,"column_start":5,"column_end":101}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":342417,"byte_end":342424,"line_start":1117,"line_end":1117,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1615},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":344213,"byte_end":344230,"line_start":1159,"line_end":1159,"column_start":12,"column_end":29},"name":"format_with_items","qualname":"<NaiveDate>::format_with_items","value":"fn format_with_items<'a, I, B>(&Self, I) -> DelayedFormat<I> where\nI: Iterator<Item = B> + Clone, B: Borrow<Item>","parent":null,"children":[],"decl_id":null,"docs":" Formats the date with the specified formatting items.\n Otherwise it is the same as the ordinary `format` method.","sig":null,"attributes":[{"value":"/ Formats the date with the specified formatting items.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":343048,"byte_end":343105,"line_start":1130,"line_end":1130,"column_start":5,"column_end":62}},{"value":"/ Otherwise it is the same as the ordinary `format` method.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":343110,"byte_end":343171,"line_start":1131,"line_end":1131,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":343176,"byte_end":343179,"line_start":1132,"line_end":1132,"column_start":5,"column_end":8}},{"value":"/ The `Iterator` of items should be `Clone`able,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":343184,"byte_end":343234,"line_start":1133,"line_end":1133,"column_start":5,"column_end":55}},{"value":"/ since the resulting `DelayedFormat` value may be formatted multiple times.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":343239,"byte_end":343317,"line_start":1134,"line_end":1134,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":343322,"byte_end":343325,"line_start":1135,"line_end":1135,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":343330,"byte_end":343343,"line_start":1136,"line_end":1136,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":343348,"byte_end":343351,"line_start":1137,"line_end":1137,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":343356,"byte_end":343363,"line_start":1138,"line_end":1138,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":343368,"byte_end":343394,"line_start":1139,"line_end":1139,"column_start":5,"column_end":31}},{"value":"/ use chrono::format::strftime::StrftimeItems;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":343399,"byte_end":343447,"line_start":1140,"line_end":1140,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":343452,"byte_end":343455,"line_start":1141,"line_end":1141,"column_start":5,"column_end":8}},{"value":"/ let fmt = StrftimeItems::new(\"%Y-%m-%d\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":343460,"byte_end":343505,"line_start":1142,"line_end":1142,"column_start":5,"column_end":50}},{"value":"/ let d = NaiveDate::from_ymd(2015, 9, 5);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":343510,"byte_end":343554,"line_start":1143,"line_end":1143,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(d.format_with_items(fmt.clone()).to_string(), \"2015-09-05\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":343559,"byte_end":343634,"line_start":1144,"line_end":1144,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(d.format(\"%Y-%m-%d\").to_string(),             \"2015-09-05\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":343639,"byte_end":343714,"line_start":1145,"line_end":1145,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":343719,"byte_end":343726,"line_start":1146,"line_end":1146,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":343731,"byte_end":343734,"line_start":1147,"line_end":1147,"column_start":5,"column_end":8}},{"value":"/ The resulting `DelayedFormat` can be formatted directly via the `Display` trait.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":343739,"byte_end":343823,"line_start":1148,"line_end":1148,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":343828,"byte_end":343831,"line_start":1149,"line_end":1149,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":343836,"byte_end":343843,"line_start":1150,"line_end":1150,"column_start":5,"column_end":12}},{"value":"/ # use chrono::NaiveDate;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":343848,"byte_end":343876,"line_start":1151,"line_end":1151,"column_start":5,"column_end":33}},{"value":"/ # use chrono::format::strftime::StrftimeItems;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":343881,"byte_end":343931,"line_start":1152,"line_end":1152,"column_start":5,"column_end":55}},{"value":"/ # let fmt = StrftimeItems::new(\"%Y-%m-%d\").clone();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":343936,"byte_end":343991,"line_start":1153,"line_end":1153,"column_start":5,"column_end":60}},{"value":"/ # let d = NaiveDate::from_ymd(2015, 9, 5);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":343996,"byte_end":344042,"line_start":1154,"line_end":1154,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(format!(\"{}\", d.format_with_items(fmt)), \"2015-09-05\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":344047,"byte_end":344117,"line_start":1155,"line_end":1155,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":344122,"byte_end":344129,"line_start":1156,"line_end":1156,"column_start":5,"column_end":12}},{"value":"cfg(any(feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":344134,"byte_end":344187,"line_start":1157,"line_end":1157,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":344192,"byte_end":344201,"line_start":1158,"line_end":1158,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1619},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":345914,"byte_end":345920,"line_start":1201,"line_end":1201,"column_start":12,"column_end":18},"name":"format","qualname":"<NaiveDate>::format","value":"fn format<'a>(&Self, &'a str) -> DelayedFormat<StrftimeItems>","parent":null,"children":[],"decl_id":null,"docs":" Formats the date with the specified format string.\n See the [`format::strftime` module](../format/strftime/index.html)\n on the supported escape sequences.","sig":null,"attributes":[{"value":"/ Formats the date with the specified format string.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":344426,"byte_end":344480,"line_start":1167,"line_end":1167,"column_start":5,"column_end":59}},{"value":"/ See the [`format::strftime` module](../format/strftime/index.html)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":344485,"byte_end":344555,"line_start":1168,"line_end":1168,"column_start":5,"column_end":75}},{"value":"/ on the supported escape sequences.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":344560,"byte_end":344598,"line_start":1169,"line_end":1169,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":344603,"byte_end":344606,"line_start":1170,"line_end":1170,"column_start":5,"column_end":8}},{"value":"/ This returns a `DelayedFormat`,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":344611,"byte_end":344646,"line_start":1171,"line_end":1171,"column_start":5,"column_end":40}},{"value":"/ which gets converted to a string only when actual formatting happens.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":344651,"byte_end":344724,"line_start":1172,"line_end":1172,"column_start":5,"column_end":78}},{"value":"/ You may use the `to_string` method to get a `String`,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":344729,"byte_end":344786,"line_start":1173,"line_end":1173,"column_start":5,"column_end":62}},{"value":"/ or just feed it into `print!` and other formatting macros.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":344791,"byte_end":344853,"line_start":1174,"line_end":1174,"column_start":5,"column_end":67}},{"value":"/ (In this way it avoids the redundant memory allocation.)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":344858,"byte_end":344918,"line_start":1175,"line_end":1175,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":344923,"byte_end":344926,"line_start":1176,"line_end":1176,"column_start":5,"column_end":8}},{"value":"/ A wrong format string does *not* issue an error immediately.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":344931,"byte_end":344995,"line_start":1177,"line_end":1177,"column_start":5,"column_end":69}},{"value":"/ Rather, converting or formatting the `DelayedFormat` fails.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":345000,"byte_end":345063,"line_start":1178,"line_end":1178,"column_start":5,"column_end":68}},{"value":"/ You are recommended to immediately use `DelayedFormat` for this reason.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":345068,"byte_end":345143,"line_start":1179,"line_end":1179,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":345148,"byte_end":345151,"line_start":1180,"line_end":1180,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":345156,"byte_end":345169,"line_start":1181,"line_end":1181,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":345174,"byte_end":345177,"line_start":1182,"line_end":1182,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":345182,"byte_end":345189,"line_start":1183,"line_end":1183,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":345194,"byte_end":345220,"line_start":1184,"line_end":1184,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":345225,"byte_end":345228,"line_start":1185,"line_end":1185,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_ymd(2015, 9, 5);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":345233,"byte_end":345277,"line_start":1186,"line_end":1186,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(d.format(\"%Y-%m-%d\").to_string(), \"2015-09-05\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":345282,"byte_end":345345,"line_start":1187,"line_end":1187,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(d.format(\"%A, %-d %B, %C%y\").to_string(), \"Saturday, 5 September, 2015\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":345350,"byte_end":345438,"line_start":1188,"line_end":1188,"column_start":5,"column_end":93}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":345443,"byte_end":345450,"line_start":1189,"line_end":1189,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":345455,"byte_end":345458,"line_start":1190,"line_end":1190,"column_start":5,"column_end":8}},{"value":"/ The resulting `DelayedFormat` can be formatted directly via the `Display` trait.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":345463,"byte_end":345547,"line_start":1191,"line_end":1191,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":345552,"byte_end":345555,"line_start":1192,"line_end":1192,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":345560,"byte_end":345567,"line_start":1193,"line_end":1193,"column_start":5,"column_end":12}},{"value":"/ # use chrono::NaiveDate;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":345572,"byte_end":345600,"line_start":1194,"line_end":1194,"column_start":5,"column_end":33}},{"value":"/ # let d = NaiveDate::from_ymd(2015, 9, 5);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":345605,"byte_end":345651,"line_start":1195,"line_end":1195,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(format!(\"{}\", d.format(\"%Y-%m-%d\")), \"2015-09-05\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":345656,"byte_end":345722,"line_start":1196,"line_end":1196,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(format!(\"{}\", d.format(\"%A, %-d %B, %C%y\")), \"Saturday, 5 September, 2015\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":345727,"byte_end":345818,"line_start":1197,"line_end":1197,"column_start":5,"column_end":96}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":345823,"byte_end":345830,"line_start":1198,"line_end":1198,"column_start":5,"column_end":12}},{"value":"cfg(any(feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":345835,"byte_end":345888,"line_start":1199,"line_end":1199,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":345893,"byte_end":345902,"line_start":1200,"line_end":1200,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1621},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":346862,"byte_end":346871,"line_start":1232,"line_end":1232,"column_start":12,"column_end":21},"name":"iter_days","qualname":"<NaiveDate>::iter_days","value":"fn iter_days(&Self) -> NaiveDateDaysIterator","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that steps by days across all representable dates.","sig":null,"attributes":[{"value":"/ Returns an iterator that steps by days across all representable dates.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":346051,"byte_end":346125,"line_start":1205,"line_end":1205,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":346130,"byte_end":346133,"line_start":1206,"line_end":1206,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":346138,"byte_end":346151,"line_start":1207,"line_end":1207,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":346156,"byte_end":346159,"line_start":1208,"line_end":1208,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":346164,"byte_end":346171,"line_start":1209,"line_end":1209,"column_start":5,"column_end":12}},{"value":"/ # use chrono::NaiveDate;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":346176,"byte_end":346204,"line_start":1210,"line_end":1210,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":346209,"byte_end":346212,"line_start":1211,"line_end":1211,"column_start":5,"column_end":8}},{"value":"/ let expected = [","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":346217,"byte_end":346237,"line_start":1212,"line_end":1212,"column_start":5,"column_end":25}},{"value":"/     NaiveDate::from_ymd(2016, 2, 27),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":346242,"byte_end":346283,"line_start":1213,"line_end":1213,"column_start":5,"column_end":46}},{"value":"/     NaiveDate::from_ymd(2016, 2, 28),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":346288,"byte_end":346329,"line_start":1214,"line_end":1214,"column_start":5,"column_end":46}},{"value":"/     NaiveDate::from_ymd(2016, 2, 29),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":346334,"byte_end":346375,"line_start":1215,"line_end":1215,"column_start":5,"column_end":46}},{"value":"/     NaiveDate::from_ymd(2016, 3, 1),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":346380,"byte_end":346420,"line_start":1216,"line_end":1216,"column_start":5,"column_end":45}},{"value":"/ ];","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":346425,"byte_end":346431,"line_start":1217,"line_end":1217,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":346436,"byte_end":346439,"line_start":1218,"line_end":1218,"column_start":5,"column_end":8}},{"value":"/ let mut count = 0;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":346444,"byte_end":346466,"line_start":1219,"line_end":1219,"column_start":5,"column_end":27}},{"value":"/ for (idx, d) in NaiveDate::from_ymd(2016, 2, 27).iter_days().take(4).enumerate() {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":346471,"byte_end":346557,"line_start":1220,"line_end":1220,"column_start":5,"column_end":91}},{"value":"/    assert_eq!(d, expected[idx]);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":346562,"byte_end":346598,"line_start":1221,"line_end":1221,"column_start":5,"column_end":41}},{"value":"/    count += 1;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":346603,"byte_end":346621,"line_start":1222,"line_end":1222,"column_start":5,"column_end":23}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":346626,"byte_end":346631,"line_start":1223,"line_end":1223,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(count, 4);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":346636,"byte_end":346661,"line_start":1224,"line_end":1224,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":346666,"byte_end":346669,"line_start":1225,"line_end":1225,"column_start":5,"column_end":8}},{"value":"/ for d in NaiveDate::from_ymd(2016, 3, 1).iter_days().rev().take(4) {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":346674,"byte_end":346746,"line_start":1226,"line_end":1226,"column_start":5,"column_end":77}},{"value":"/     count -= 1;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":346751,"byte_end":346770,"line_start":1227,"line_end":1227,"column_start":5,"column_end":24}},{"value":"/     assert_eq!(d, expected[count]);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":346775,"byte_end":346814,"line_start":1228,"line_end":1228,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":346819,"byte_end":346824,"line_start":1229,"line_end":1229,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":346829,"byte_end":346836,"line_start":1230,"line_end":1230,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":346841,"byte_end":346850,"line_start":1231,"line_end":1231,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1622},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":347779,"byte_end":347789,"line_start":1263,"line_end":1263,"column_start":12,"column_end":22},"name":"iter_weeks","qualname":"<NaiveDate>::iter_weeks","value":"fn iter_weeks(&Self) -> NaiveDateWeeksIterator","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that steps by weeks across all representable dates.","sig":null,"attributes":[{"value":"/ Returns an iterator that steps by weeks across all representable dates.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":346964,"byte_end":347039,"line_start":1236,"line_end":1236,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":347044,"byte_end":347047,"line_start":1237,"line_end":1237,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":347052,"byte_end":347065,"line_start":1238,"line_end":1238,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":347070,"byte_end":347073,"line_start":1239,"line_end":1239,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":347078,"byte_end":347085,"line_start":1240,"line_end":1240,"column_start":5,"column_end":12}},{"value":"/ # use chrono::NaiveDate;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":347090,"byte_end":347118,"line_start":1241,"line_end":1241,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":347123,"byte_end":347126,"line_start":1242,"line_end":1242,"column_start":5,"column_end":8}},{"value":"/ let expected = [","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":347131,"byte_end":347151,"line_start":1243,"line_end":1243,"column_start":5,"column_end":25}},{"value":"/     NaiveDate::from_ymd(2016, 2, 27),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":347156,"byte_end":347197,"line_start":1244,"line_end":1244,"column_start":5,"column_end":46}},{"value":"/     NaiveDate::from_ymd(2016, 3, 5),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":347202,"byte_end":347242,"line_start":1245,"line_end":1245,"column_start":5,"column_end":45}},{"value":"/     NaiveDate::from_ymd(2016, 3, 12),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":347247,"byte_end":347288,"line_start":1246,"line_end":1246,"column_start":5,"column_end":46}},{"value":"/     NaiveDate::from_ymd(2016, 3, 19),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":347293,"byte_end":347334,"line_start":1247,"line_end":1247,"column_start":5,"column_end":46}},{"value":"/ ];","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":347339,"byte_end":347345,"line_start":1248,"line_end":1248,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":347350,"byte_end":347353,"line_start":1249,"line_end":1249,"column_start":5,"column_end":8}},{"value":"/ let mut count = 0;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":347358,"byte_end":347380,"line_start":1250,"line_end":1250,"column_start":5,"column_end":27}},{"value":"/ for (idx, d) in NaiveDate::from_ymd(2016, 2, 27).iter_weeks().take(4).enumerate() {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":347385,"byte_end":347472,"line_start":1251,"line_end":1251,"column_start":5,"column_end":92}},{"value":"/    assert_eq!(d, expected[idx]);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":347477,"byte_end":347513,"line_start":1252,"line_end":1252,"column_start":5,"column_end":41}},{"value":"/    count += 1;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":347518,"byte_end":347536,"line_start":1253,"line_end":1253,"column_start":5,"column_end":23}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":347541,"byte_end":347546,"line_start":1254,"line_end":1254,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(count, 4);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":347551,"byte_end":347576,"line_start":1255,"line_end":1255,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":347581,"byte_end":347584,"line_start":1256,"line_end":1256,"column_start":5,"column_end":8}},{"value":"/ for d in NaiveDate::from_ymd(2016, 3, 19).iter_weeks().rev().take(4) {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":347589,"byte_end":347663,"line_start":1257,"line_end":1257,"column_start":5,"column_end":79}},{"value":"/     count -= 1;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":347668,"byte_end":347687,"line_start":1258,"line_end":1258,"column_start":5,"column_end":24}},{"value":"/     assert_eq!(d, expected[count]);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":347692,"byte_end":347731,"line_start":1259,"line_end":1259,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":347736,"byte_end":347741,"line_start":1260,"line_end":1260,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":347746,"byte_end":347753,"line_start":1261,"line_end":1261,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":347758,"byte_end":347767,"line_start":1262,"line_end":1262,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1623},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":348014,"byte_end":348018,"line_start":1270,"line_end":1270,"column_start":12,"column_end":16},"name":"week","qualname":"<NaiveDate>::week","value":"fn week(&Self, Weekday) -> NaiveWeek","parent":null,"children":[],"decl_id":null,"docs":" Returns the [`NaiveWeek`] that the date belongs to, starting with the [`Weekday`]\n specified.\n","sig":null,"attributes":[{"value":"/ Returns the [`NaiveWeek`] that the date belongs to, starting with the [`Weekday`]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":347884,"byte_end":347969,"line_start":1267,"line_end":1267,"column_start":5,"column_end":90}},{"value":"/ specified.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":347974,"byte_end":347988,"line_start":1268,"line_end":1268,"column_start":5,"column_end":19}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":347993,"byte_end":348002,"line_start":1269,"line_end":1269,"column_start":5,"column_end":14}}]},{"kind":"Const","id":{"krate":0,"index":1624},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":348185,"byte_end":348188,"line_start":1275,"line_end":1275,"column_start":15,"column_end":18},"name":"MIN","qualname":"::naive::date::NaiveDate::MIN","value":"NaiveDate","parent":{"krate":0,"index":1572},"children":[],"decl_id":null,"docs":" The minimum possible `NaiveDate` (January 1, 262145 BCE).\n","sig":null,"attributes":[{"value":"/ The minimum possible `NaiveDate` (January 1, 262145 BCE).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":348109,"byte_end":348170,"line_start":1274,"line_end":1274,"column_start":5,"column_end":66}}]},{"kind":"Const","id":{"krate":0,"index":1625},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":348346,"byte_end":348349,"line_start":1277,"line_end":1277,"column_start":15,"column_end":18},"name":"MAX","qualname":"::naive::date::NaiveDate::MAX","value":"NaiveDate","parent":{"krate":0,"index":1572},"children":[],"decl_id":null,"docs":" The maximum possible `NaiveDate` (December 31, 262143 CE).\n","sig":null,"attributes":[{"value":"/ The maximum possible `NaiveDate` (December 31, 262143 CE).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":348269,"byte_end":348331,"line_start":1276,"line_end":1276,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1627},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":348806,"byte_end":348810,"line_start":1292,"line_end":1292,"column_start":8,"column_end":12},"name":"year","qualname":"<NaiveDate as traits::Datelike>::year","value":"fn year(&Self) -> i32","parent":{"krate":0,"index":3411},"children":[],"decl_id":{"krate":0,"index":3412},"docs":" Returns the year number in the [calendar date](#calendar-date).","sig":null,"attributes":[{"value":"/ Returns the year number in the [calendar date](#calendar-date).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":348464,"byte_end":348531,"line_start":1281,"line_end":1281,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":348536,"byte_end":348539,"line_start":1282,"line_end":1282,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":348544,"byte_end":348557,"line_start":1283,"line_end":1283,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":348562,"byte_end":348565,"line_start":1284,"line_end":1284,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":348570,"byte_end":348577,"line_start":1285,"line_end":1285,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":348582,"byte_end":348620,"line_start":1286,"line_end":1286,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":348625,"byte_end":348628,"line_start":1287,"line_end":1287,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 9, 8).year(), 2015);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":348633,"byte_end":348694,"line_start":1288,"line_end":1288,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(NaiveDate::from_ymd(-308, 3, 14).year(), -308); // 309 BCE","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":348699,"byte_end":348772,"line_start":1289,"line_end":1289,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":348777,"byte_end":348784,"line_start":1290,"line_end":1290,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":348789,"byte_end":348798,"line_start":1291,"line_end":1291,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1628},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":349221,"byte_end":349226,"line_start":1309,"line_end":1309,"column_start":8,"column_end":13},"name":"month","qualname":"<NaiveDate as traits::Datelike>::month","value":"fn month(&Self) -> u32","parent":{"krate":0,"index":3411},"children":[],"decl_id":{"krate":0,"index":3414},"docs":" Returns the month number starting from 1.","sig":null,"attributes":[{"value":"/ Returns the month number starting from 1.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":348862,"byte_end":348907,"line_start":1296,"line_end":1296,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":348912,"byte_end":348915,"line_start":1297,"line_end":1297,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 1 to 12.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":348920,"byte_end":348961,"line_start":1298,"line_end":1298,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":348966,"byte_end":348969,"line_start":1299,"line_end":1299,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":348974,"byte_end":348987,"line_start":1300,"line_end":1300,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":348992,"byte_end":348995,"line_start":1301,"line_end":1301,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":349000,"byte_end":349007,"line_start":1302,"line_end":1302,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":349012,"byte_end":349050,"line_start":1303,"line_end":1303,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":349055,"byte_end":349058,"line_start":1304,"line_end":1304,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 9, 8).month(), 9);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":349063,"byte_end":349122,"line_start":1305,"line_end":1305,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(NaiveDate::from_ymd(-308, 3, 14).month(), 3);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":349127,"byte_end":349187,"line_start":1306,"line_end":1306,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":349192,"byte_end":349199,"line_start":1307,"line_end":1307,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":349204,"byte_end":349213,"line_start":1308,"line_end":1308,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1629},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":349642,"byte_end":349648,"line_start":1326,"line_end":1326,"column_start":8,"column_end":14},"name":"month0","qualname":"<NaiveDate as traits::Datelike>::month0","value":"fn month0(&Self) -> u32","parent":{"krate":0,"index":3411},"children":[],"decl_id":{"krate":0,"index":3415},"docs":" Returns the month number starting from 0.","sig":null,"attributes":[{"value":"/ Returns the month number starting from 0.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":349281,"byte_end":349326,"line_start":1313,"line_end":1313,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":349331,"byte_end":349334,"line_start":1314,"line_end":1314,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 0 to 11.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":349339,"byte_end":349380,"line_start":1315,"line_end":1315,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":349385,"byte_end":349388,"line_start":1316,"line_end":1316,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":349393,"byte_end":349406,"line_start":1317,"line_end":1317,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":349411,"byte_end":349414,"line_start":1318,"line_end":1318,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":349419,"byte_end":349426,"line_start":1319,"line_end":1319,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":349431,"byte_end":349469,"line_start":1320,"line_end":1320,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":349474,"byte_end":349477,"line_start":1321,"line_end":1321,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 9, 8).month0(), 8);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":349482,"byte_end":349542,"line_start":1322,"line_end":1322,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(NaiveDate::from_ymd(-308, 3, 14).month0(), 2);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":349547,"byte_end":349608,"line_start":1323,"line_end":1323,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":349613,"byte_end":349620,"line_start":1324,"line_end":1324,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":349625,"byte_end":349634,"line_start":1325,"line_end":1325,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1630},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":350994,"byte_end":350997,"line_start":1366,"line_end":1366,"column_start":8,"column_end":11},"name":"day","qualname":"<NaiveDate as traits::Datelike>::day","value":"fn day(&Self) -> u32","parent":{"krate":0,"index":3411},"children":[],"decl_id":{"krate":0,"index":3416},"docs":" Returns the day of month starting from 1.","sig":null,"attributes":[{"value":"/ Returns the day of month starting from 1.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":349707,"byte_end":349752,"line_start":1330,"line_end":1330,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":349757,"byte_end":349760,"line_start":1331,"line_end":1331,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 1 to 31. (The last day of month differs by months.)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":349765,"byte_end":349849,"line_start":1332,"line_end":1332,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":349854,"byte_end":349857,"line_start":1333,"line_end":1333,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":349862,"byte_end":349875,"line_start":1334,"line_end":1334,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":349880,"byte_end":349883,"line_start":1335,"line_end":1335,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":349888,"byte_end":349895,"line_start":1336,"line_end":1336,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":349900,"byte_end":349938,"line_start":1337,"line_end":1337,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":349943,"byte_end":349946,"line_start":1338,"line_end":1338,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 9, 8).day(), 8);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":349951,"byte_end":350008,"line_start":1339,"line_end":1339,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(NaiveDate::from_ymd(-308, 3, 14).day(), 14);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":350013,"byte_end":350072,"line_start":1340,"line_end":1340,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":350077,"byte_end":350084,"line_start":1341,"line_end":1341,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":350089,"byte_end":350092,"line_start":1342,"line_end":1342,"column_start":5,"column_end":8}},{"value":"/ Combined with [`NaiveDate::pred`](#method.pred),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":350097,"byte_end":350149,"line_start":1343,"line_end":1343,"column_start":5,"column_end":57}},{"value":"/ one can determine the number of days in a particular month.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":350154,"byte_end":350217,"line_start":1344,"line_end":1344,"column_start":5,"column_end":68}},{"value":"/ (Note that this panics when `year` is out of range.)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":350222,"byte_end":350278,"line_start":1345,"line_end":1345,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":350283,"byte_end":350286,"line_start":1346,"line_end":1346,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":350291,"byte_end":350298,"line_start":1347,"line_end":1347,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":350303,"byte_end":350341,"line_start":1348,"line_end":1348,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":350346,"byte_end":350349,"line_start":1349,"line_end":1349,"column_start":5,"column_end":8}},{"value":"/ fn ndays_in_month(year: i32, month: u32) -> u32 {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":350354,"byte_end":350407,"line_start":1350,"line_end":1350,"column_start":5,"column_end":58}},{"value":"/     // the first day of the next month...","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":350412,"byte_end":350457,"line_start":1351,"line_end":1351,"column_start":5,"column_end":50}},{"value":"/     let (y, m) = if month == 12 { (year + 1, 1) } else { (year, month + 1) };","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":350462,"byte_end":350543,"line_start":1352,"line_end":1352,"column_start":5,"column_end":86}},{"value":"/     let d = NaiveDate::from_ymd(y, m, 1);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":350548,"byte_end":350593,"line_start":1353,"line_end":1353,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":350598,"byte_end":350601,"line_start":1354,"line_end":1354,"column_start":5,"column_end":8}},{"value":"/     // ...is preceded by the last day of the original month","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":350606,"byte_end":350669,"line_start":1355,"line_end":1355,"column_start":5,"column_end":68}},{"value":"/     d.pred().day()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":350674,"byte_end":350696,"line_start":1356,"line_end":1356,"column_start":5,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":350701,"byte_end":350706,"line_start":1357,"line_end":1357,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":350711,"byte_end":350714,"line_start":1358,"line_end":1358,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(ndays_in_month(2015, 8), 31);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":350719,"byte_end":350763,"line_start":1359,"line_end":1359,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(ndays_in_month(2015, 9), 30);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":350768,"byte_end":350812,"line_start":1360,"line_end":1360,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(ndays_in_month(2015, 12), 31);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":350817,"byte_end":350862,"line_start":1361,"line_end":1361,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(ndays_in_month(2016, 2), 29);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":350867,"byte_end":350911,"line_start":1362,"line_end":1362,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(ndays_in_month(2017, 2), 28);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":350916,"byte_end":350960,"line_start":1363,"line_end":1363,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":350965,"byte_end":350972,"line_start":1364,"line_end":1364,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":350977,"byte_end":350986,"line_start":1365,"line_end":1365,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1631},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":351451,"byte_end":351455,"line_start":1383,"line_end":1383,"column_start":8,"column_end":12},"name":"day0","qualname":"<NaiveDate as traits::Datelike>::day0","value":"fn day0(&Self) -> u32","parent":{"krate":0,"index":3411},"children":[],"decl_id":{"krate":0,"index":3417},"docs":" Returns the day of month starting from 0.","sig":null,"attributes":[{"value":"/ Returns the day of month starting from 0.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":351050,"byte_end":351095,"line_start":1370,"line_end":1370,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":351100,"byte_end":351103,"line_start":1371,"line_end":1371,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 0 to 30. (The last day of month differs by months.)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":351108,"byte_end":351192,"line_start":1372,"line_end":1372,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":351197,"byte_end":351200,"line_start":1373,"line_end":1373,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":351205,"byte_end":351218,"line_start":1374,"line_end":1374,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":351223,"byte_end":351226,"line_start":1375,"line_end":1375,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":351231,"byte_end":351238,"line_start":1376,"line_end":1376,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":351243,"byte_end":351281,"line_start":1377,"line_end":1377,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":351286,"byte_end":351289,"line_start":1378,"line_end":1378,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 9, 8).day0(), 7);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":351294,"byte_end":351352,"line_start":1379,"line_end":1379,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(NaiveDate::from_ymd(-308, 3, 14).day0(), 13);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":351357,"byte_end":351417,"line_start":1380,"line_end":1380,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":351422,"byte_end":351429,"line_start":1381,"line_end":1381,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":351434,"byte_end":351443,"line_start":1382,"line_end":1382,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1632},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":352700,"byte_end":352707,"line_start":1422,"line_end":1422,"column_start":8,"column_end":15},"name":"ordinal","qualname":"<NaiveDate as traits::Datelike>::ordinal","value":"fn ordinal(&Self) -> u32","parent":{"krate":0,"index":3411},"children":[],"decl_id":{"krate":0,"index":3418},"docs":" Returns the day of year starting from 1.","sig":null,"attributes":[{"value":"/ Returns the day of year starting from 1.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":351512,"byte_end":351556,"line_start":1387,"line_end":1387,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":351561,"byte_end":351564,"line_start":1388,"line_end":1388,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 1 to 366. (The last day of year differs by years.)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":351569,"byte_end":351652,"line_start":1389,"line_end":1389,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":351657,"byte_end":351660,"line_start":1390,"line_end":1390,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":351665,"byte_end":351678,"line_start":1391,"line_end":1391,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":351683,"byte_end":351686,"line_start":1392,"line_end":1392,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":351691,"byte_end":351698,"line_start":1393,"line_end":1393,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":351703,"byte_end":351741,"line_start":1394,"line_end":1394,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":351746,"byte_end":351749,"line_start":1395,"line_end":1395,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 9, 8).ordinal(), 251);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":351754,"byte_end":351817,"line_start":1396,"line_end":1396,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(NaiveDate::from_ymd(-308, 3, 14).ordinal(), 74);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":351822,"byte_end":351885,"line_start":1397,"line_end":1397,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":351890,"byte_end":351897,"line_start":1398,"line_end":1398,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":351902,"byte_end":351905,"line_start":1399,"line_end":1399,"column_start":5,"column_end":8}},{"value":"/ Combined with [`NaiveDate::pred`](#method.pred),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":351910,"byte_end":351962,"line_start":1400,"line_end":1400,"column_start":5,"column_end":57}},{"value":"/ one can determine the number of days in a particular year.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":351967,"byte_end":352029,"line_start":1401,"line_end":1401,"column_start":5,"column_end":67}},{"value":"/ (Note that this panics when `year` is out of range.)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":352034,"byte_end":352090,"line_start":1402,"line_end":1402,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":352095,"byte_end":352098,"line_start":1403,"line_end":1403,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":352103,"byte_end":352110,"line_start":1404,"line_end":1404,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":352115,"byte_end":352153,"line_start":1405,"line_end":1405,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":352158,"byte_end":352161,"line_start":1406,"line_end":1406,"column_start":5,"column_end":8}},{"value":"/ fn ndays_in_year(year: i32) -> u32 {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":352166,"byte_end":352206,"line_start":1407,"line_end":1407,"column_start":5,"column_end":45}},{"value":"/     // the first day of the next year...","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":352211,"byte_end":352255,"line_start":1408,"line_end":1408,"column_start":5,"column_end":49}},{"value":"/     let d = NaiveDate::from_ymd(year + 1, 1, 1);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":352260,"byte_end":352312,"line_start":1409,"line_end":1409,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":352317,"byte_end":352320,"line_start":1410,"line_end":1410,"column_start":5,"column_end":8}},{"value":"/     // ...is preceded by the last day of the original year","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":352325,"byte_end":352387,"line_start":1411,"line_end":1411,"column_start":5,"column_end":67}},{"value":"/     d.pred().ordinal()","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":352392,"byte_end":352418,"line_start":1412,"line_end":1412,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":352423,"byte_end":352428,"line_start":1413,"line_end":1413,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":352433,"byte_end":352436,"line_start":1414,"line_end":1414,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(ndays_in_year(2015), 365);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":352441,"byte_end":352482,"line_start":1415,"line_end":1415,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(ndays_in_year(2016), 366);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":352487,"byte_end":352528,"line_start":1416,"line_end":1416,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(ndays_in_year(2017), 365);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":352533,"byte_end":352574,"line_start":1417,"line_end":1417,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(ndays_in_year(2000), 366);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":352579,"byte_end":352620,"line_start":1418,"line_end":1418,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(ndays_in_year(2100), 365);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":352625,"byte_end":352666,"line_start":1419,"line_end":1419,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":352671,"byte_end":352678,"line_start":1420,"line_end":1420,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":352683,"byte_end":352692,"line_start":1421,"line_end":1421,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1633},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":353172,"byte_end":353180,"line_start":1439,"line_end":1439,"column_start":8,"column_end":16},"name":"ordinal0","qualname":"<NaiveDate as traits::Datelike>::ordinal0","value":"fn ordinal0(&Self) -> u32","parent":{"krate":0,"index":3411},"children":[],"decl_id":{"krate":0,"index":3419},"docs":" Returns the day of year starting from 0.","sig":null,"attributes":[{"value":"/ Returns the day of year starting from 0.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":352763,"byte_end":352807,"line_start":1426,"line_end":1426,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":352812,"byte_end":352815,"line_start":1427,"line_end":1427,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 0 to 365. (The last day of year differs by years.)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":352820,"byte_end":352903,"line_start":1428,"line_end":1428,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":352908,"byte_end":352911,"line_start":1429,"line_end":1429,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":352916,"byte_end":352929,"line_start":1430,"line_end":1430,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":352934,"byte_end":352937,"line_start":1431,"line_end":1431,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":352942,"byte_end":352949,"line_start":1432,"line_end":1432,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":352954,"byte_end":352992,"line_start":1433,"line_end":1433,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":352997,"byte_end":353000,"line_start":1434,"line_end":1434,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 9, 8).ordinal0(), 250);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":353005,"byte_end":353069,"line_start":1435,"line_end":1435,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(NaiveDate::from_ymd(-308, 3, 14).ordinal0(), 73);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":353074,"byte_end":353138,"line_start":1436,"line_end":1436,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":353143,"byte_end":353150,"line_start":1437,"line_end":1437,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":353155,"byte_end":353164,"line_start":1438,"line_end":1438,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1634},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":353563,"byte_end":353570,"line_start":1454,"line_end":1454,"column_start":8,"column_end":15},"name":"weekday","qualname":"<NaiveDate as traits::Datelike>::weekday","value":"fn weekday(&Self) -> Weekday","parent":{"krate":0,"index":3411},"children":[],"decl_id":{"krate":0,"index":3420},"docs":" Returns the day of week.","sig":null,"attributes":[{"value":"/ Returns the day of week.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":353240,"byte_end":353268,"line_start":1443,"line_end":1443,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":353273,"byte_end":353276,"line_start":1444,"line_end":1444,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":353281,"byte_end":353294,"line_start":1445,"line_end":1445,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":353299,"byte_end":353302,"line_start":1446,"line_end":1446,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":353307,"byte_end":353314,"line_start":1447,"line_end":1447,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike, Weekday};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":353319,"byte_end":353366,"line_start":1448,"line_end":1448,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":353371,"byte_end":353374,"line_start":1449,"line_end":1449,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 9, 8).weekday(), Weekday::Tue);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":353379,"byte_end":353451,"line_start":1450,"line_end":1450,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(NaiveDate::from_ymd(-308, 3, 14).weekday(), Weekday::Fri);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":353456,"byte_end":353529,"line_start":1451,"line_end":1451,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":353534,"byte_end":353541,"line_start":1452,"line_end":1452,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":353546,"byte_end":353555,"line_start":1453,"line_end":1453,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1635},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":353647,"byte_end":353655,"line_start":1459,"line_end":1459,"column_start":8,"column_end":16},"name":"iso_week","qualname":"<NaiveDate as traits::Datelike>::iso_week","value":"fn iso_week(&Self) -> IsoWeek","parent":{"krate":0,"index":3411},"children":[],"decl_id":{"krate":0,"index":3421},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":353630,"byte_end":353639,"line_start":1458,"line_end":1458,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1636},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":354594,"byte_end":354603,"line_start":1486,"line_end":1486,"column_start":8,"column_end":17},"name":"with_year","qualname":"<NaiveDate as traits::Datelike>::with_year","value":"fn with_year(&Self, i32) -> Option<NaiveDate>","parent":{"krate":0,"index":3411},"children":[],"decl_id":{"krate":0,"index":3422},"docs":" Makes a new `NaiveDate` with the year number changed.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` with the year number changed.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":353746,"byte_end":353803,"line_start":1463,"line_end":1463,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":353808,"byte_end":353811,"line_start":1464,"line_end":1464,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting `NaiveDate` would be invalid.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":353816,"byte_end":353883,"line_start":1465,"line_end":1465,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":353888,"byte_end":353891,"line_start":1466,"line_end":1466,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":353896,"byte_end":353909,"line_start":1467,"line_end":1467,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":353914,"byte_end":353917,"line_start":1468,"line_end":1468,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":353922,"byte_end":353929,"line_start":1469,"line_end":1469,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":353934,"byte_end":353972,"line_start":1470,"line_end":1470,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":353977,"byte_end":353980,"line_start":1471,"line_end":1471,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 9, 8).with_year(2016),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":353985,"byte_end":354048,"line_start":1472,"line_end":1472,"column_start":5,"column_end":68}},{"value":"/            Some(NaiveDate::from_ymd(2016, 9, 8)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":354053,"byte_end":354107,"line_start":1473,"line_end":1473,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 9, 8).with_year(-308),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":354112,"byte_end":354175,"line_start":1474,"line_end":1474,"column_start":5,"column_end":68}},{"value":"/            Some(NaiveDate::from_ymd(-308, 9, 8)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":354180,"byte_end":354234,"line_start":1475,"line_end":1475,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":354239,"byte_end":354246,"line_start":1476,"line_end":1476,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":354251,"byte_end":354254,"line_start":1477,"line_end":1477,"column_start":5,"column_end":8}},{"value":"/ A leap day (February 29) is a good example that this method can return `None`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":354259,"byte_end":354341,"line_start":1478,"line_end":1478,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":354346,"byte_end":354349,"line_start":1479,"line_end":1479,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":354354,"byte_end":354361,"line_start":1480,"line_end":1480,"column_start":5,"column_end":12}},{"value":"/ # use chrono::{NaiveDate, Datelike};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":354366,"byte_end":354406,"line_start":1481,"line_end":1481,"column_start":5,"column_end":45}},{"value":"/ assert!(NaiveDate::from_ymd(2016, 2, 29).with_year(2015).is_none());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":354411,"byte_end":354483,"line_start":1482,"line_end":1482,"column_start":5,"column_end":77}},{"value":"/ assert!(NaiveDate::from_ymd(2016, 2, 29).with_year(2020).is_some());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":354488,"byte_end":354560,"line_start":1483,"line_end":1483,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":354565,"byte_end":354572,"line_start":1484,"line_end":1484,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":354577,"byte_end":354586,"line_start":1485,"line_end":1485,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1637},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":355542,"byte_end":355552,"line_start":1512,"line_end":1512,"column_start":8,"column_end":18},"name":"with_month","qualname":"<NaiveDate as traits::Datelike>::with_month","value":"fn with_month(&Self, u32) -> Option<NaiveDate>","parent":{"krate":0,"index":3411},"children":[],"decl_id":{"krate":0,"index":3423},"docs":" Makes a new `NaiveDate` with the month number (starting from 1) changed.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` with the month number (starting from 1) changed.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":354947,"byte_end":355023,"line_start":1497,"line_end":1497,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":355028,"byte_end":355031,"line_start":1498,"line_end":1498,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting `NaiveDate` would be invalid.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":355036,"byte_end":355103,"line_start":1499,"line_end":1499,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":355108,"byte_end":355111,"line_start":1500,"line_end":1500,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":355116,"byte_end":355129,"line_start":1501,"line_end":1501,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":355134,"byte_end":355137,"line_start":1502,"line_end":1502,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":355142,"byte_end":355149,"line_start":1503,"line_end":1503,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":355154,"byte_end":355192,"line_start":1504,"line_end":1504,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":355197,"byte_end":355200,"line_start":1505,"line_end":1505,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 9, 8).with_month(10),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":355205,"byte_end":355267,"line_start":1506,"line_end":1506,"column_start":5,"column_end":67}},{"value":"/            Some(NaiveDate::from_ymd(2015, 10, 8)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":355272,"byte_end":355327,"line_start":1507,"line_end":1507,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 9, 8).with_month(13), None); // no month 13","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":355332,"byte_end":355416,"line_start":1508,"line_end":1508,"column_start":5,"column_end":89}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 9, 30).with_month(2), None); // no February 30","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":355421,"byte_end":355508,"line_start":1509,"line_end":1509,"column_start":5,"column_end":92}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":355513,"byte_end":355520,"line_start":1510,"line_end":1510,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":355525,"byte_end":355534,"line_start":1511,"line_end":1511,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1638},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":356255,"byte_end":356266,"line_start":1531,"line_end":1531,"column_start":8,"column_end":19},"name":"with_month0","qualname":"<NaiveDate as traits::Datelike>::with_month0","value":"fn with_month0(&Self, u32) -> Option<NaiveDate>","parent":{"krate":0,"index":3411},"children":[],"decl_id":{"krate":0,"index":3424},"docs":" Makes a new `NaiveDate` with the month number (starting from 0) changed.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` with the month number (starting from 0) changed.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":355658,"byte_end":355734,"line_start":1516,"line_end":1516,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":355739,"byte_end":355742,"line_start":1517,"line_end":1517,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting `NaiveDate` would be invalid.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":355747,"byte_end":355814,"line_start":1518,"line_end":1518,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":355819,"byte_end":355822,"line_start":1519,"line_end":1519,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":355827,"byte_end":355840,"line_start":1520,"line_end":1520,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":355845,"byte_end":355848,"line_start":1521,"line_end":1521,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":355853,"byte_end":355860,"line_start":1522,"line_end":1522,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":355865,"byte_end":355903,"line_start":1523,"line_end":1523,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":355908,"byte_end":355911,"line_start":1524,"line_end":1524,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 9, 8).with_month0(9),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":355916,"byte_end":355978,"line_start":1525,"line_end":1525,"column_start":5,"column_end":67}},{"value":"/            Some(NaiveDate::from_ymd(2015, 10, 8)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":355983,"byte_end":356038,"line_start":1526,"line_end":1526,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 9, 8).with_month0(12), None); // no month 13","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":356043,"byte_end":356128,"line_start":1527,"line_end":1527,"column_start":5,"column_end":90}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 9, 30).with_month0(1), None); // no February 30","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":356133,"byte_end":356221,"line_start":1528,"line_end":1528,"column_start":5,"column_end":93}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":356226,"byte_end":356233,"line_start":1529,"line_end":1529,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":356238,"byte_end":356247,"line_start":1530,"line_end":1530,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1639},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":356900,"byte_end":356908,"line_start":1550,"line_end":1550,"column_start":8,"column_end":16},"name":"with_day","qualname":"<NaiveDate as traits::Datelike>::with_day","value":"fn with_day(&Self, u32) -> Option<NaiveDate>","parent":{"krate":0,"index":3411},"children":[],"decl_id":{"krate":0,"index":3425},"docs":" Makes a new `NaiveDate` with the day of month (starting from 1) changed.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` with the day of month (starting from 1) changed.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":356378,"byte_end":356454,"line_start":1535,"line_end":1535,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":356459,"byte_end":356462,"line_start":1536,"line_end":1536,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting `NaiveDate` would be invalid.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":356467,"byte_end":356534,"line_start":1537,"line_end":1537,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":356539,"byte_end":356542,"line_start":1538,"line_end":1538,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":356547,"byte_end":356560,"line_start":1539,"line_end":1539,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":356565,"byte_end":356568,"line_start":1540,"line_end":1540,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":356573,"byte_end":356580,"line_start":1541,"line_end":1541,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":356585,"byte_end":356623,"line_start":1542,"line_end":1542,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":356628,"byte_end":356631,"line_start":1543,"line_end":1543,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 9, 8).with_day(30),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":356636,"byte_end":356696,"line_start":1544,"line_end":1544,"column_start":5,"column_end":65}},{"value":"/            Some(NaiveDate::from_ymd(2015, 9, 30)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":356701,"byte_end":356756,"line_start":1545,"line_end":1545,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 9, 8).with_day(31),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":356761,"byte_end":356821,"line_start":1546,"line_end":1546,"column_start":5,"column_end":65}},{"value":"/            None); // no September 31","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":356826,"byte_end":356866,"line_start":1547,"line_end":1547,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":356871,"byte_end":356878,"line_start":1548,"line_end":1548,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":356883,"byte_end":356892,"line_start":1549,"line_end":1549,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1640},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":357532,"byte_end":357541,"line_start":1569,"line_end":1569,"column_start":8,"column_end":17},"name":"with_day0","qualname":"<NaiveDate as traits::Datelike>::with_day0","value":"fn with_day0(&Self, u32) -> Option<NaiveDate>","parent":{"krate":0,"index":3411},"children":[],"decl_id":{"krate":0,"index":3426},"docs":" Makes a new `NaiveDate` with the day of month (starting from 0) changed.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` with the day of month (starting from 0) changed.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":357008,"byte_end":357084,"line_start":1554,"line_end":1554,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":357089,"byte_end":357092,"line_start":1555,"line_end":1555,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting `NaiveDate` would be invalid.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":357097,"byte_end":357164,"line_start":1556,"line_end":1556,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":357169,"byte_end":357172,"line_start":1557,"line_end":1557,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":357177,"byte_end":357190,"line_start":1558,"line_end":1558,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":357195,"byte_end":357198,"line_start":1559,"line_end":1559,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":357203,"byte_end":357210,"line_start":1560,"line_end":1560,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":357215,"byte_end":357253,"line_start":1561,"line_end":1561,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":357258,"byte_end":357261,"line_start":1562,"line_end":1562,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 9, 8).with_day0(29),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":357266,"byte_end":357327,"line_start":1563,"line_end":1563,"column_start":5,"column_end":66}},{"value":"/            Some(NaiveDate::from_ymd(2015, 9, 30)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":357332,"byte_end":357387,"line_start":1564,"line_end":1564,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 9, 8).with_day0(30),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":357392,"byte_end":357453,"line_start":1565,"line_end":1565,"column_start":5,"column_end":66}},{"value":"/            None); // no September 31","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":357458,"byte_end":357498,"line_start":1566,"line_end":1566,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":357503,"byte_end":357510,"line_start":1567,"line_end":1567,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":357515,"byte_end":357524,"line_start":1568,"line_end":1568,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1641},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":358451,"byte_end":358463,"line_start":1593,"line_end":1593,"column_start":8,"column_end":20},"name":"with_ordinal","qualname":"<NaiveDate as traits::Datelike>::with_ordinal","value":"fn with_ordinal(&Self, u32) -> Option<NaiveDate>","parent":{"krate":0,"index":3411},"children":[],"decl_id":{"krate":0,"index":3427},"docs":" Makes a new `NaiveDate` with the day of year (starting from 1) changed.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` with the day of year (starting from 1) changed.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":357647,"byte_end":357722,"line_start":1573,"line_end":1573,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":357727,"byte_end":357730,"line_start":1574,"line_end":1574,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting `NaiveDate` would be invalid.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":357735,"byte_end":357802,"line_start":1575,"line_end":1575,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":357807,"byte_end":357810,"line_start":1576,"line_end":1576,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":357815,"byte_end":357828,"line_start":1577,"line_end":1577,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":357833,"byte_end":357836,"line_start":1578,"line_end":1578,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":357841,"byte_end":357848,"line_start":1579,"line_end":1579,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":357853,"byte_end":357891,"line_start":1580,"line_end":1580,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":357896,"byte_end":357899,"line_start":1581,"line_end":1581,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 1, 1).with_ordinal(60),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":357904,"byte_end":357968,"line_start":1582,"line_end":1582,"column_start":5,"column_end":69}},{"value":"/            Some(NaiveDate::from_ymd(2015, 3, 1)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":357973,"byte_end":358027,"line_start":1583,"line_end":1583,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 1, 1).with_ordinal(366),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":358032,"byte_end":358097,"line_start":1584,"line_end":1584,"column_start":5,"column_end":70}},{"value":"/            None); // 2015 had only 365 days","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":358102,"byte_end":358149,"line_start":1585,"line_end":1585,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":358154,"byte_end":358157,"line_start":1586,"line_end":1586,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2016, 1, 1).with_ordinal(60),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":358162,"byte_end":358226,"line_start":1587,"line_end":1587,"column_start":5,"column_end":69}},{"value":"/            Some(NaiveDate::from_ymd(2016, 2, 29)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":358231,"byte_end":358286,"line_start":1588,"line_end":1588,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2016, 1, 1).with_ordinal(366),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":358291,"byte_end":358356,"line_start":1589,"line_end":1589,"column_start":5,"column_end":70}},{"value":"/            Some(NaiveDate::from_ymd(2016, 12, 31)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":358361,"byte_end":358417,"line_start":1590,"line_end":1590,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":358422,"byte_end":358429,"line_start":1591,"line_end":1591,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":358434,"byte_end":358443,"line_start":1592,"line_end":1592,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1642},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":359381,"byte_end":359394,"line_start":1617,"line_end":1617,"column_start":8,"column_end":21},"name":"with_ordinal0","qualname":"<NaiveDate as traits::Datelike>::with_ordinal0","value":"fn with_ordinal0(&Self, u32) -> Option<NaiveDate>","parent":{"krate":0,"index":3411},"children":[],"decl_id":{"krate":0,"index":3428},"docs":" Makes a new `NaiveDate` with the day of year (starting from 0) changed.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` with the day of year (starting from 0) changed.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":358573,"byte_end":358648,"line_start":1597,"line_end":1597,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":358653,"byte_end":358656,"line_start":1598,"line_end":1598,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting `NaiveDate` would be invalid.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":358661,"byte_end":358728,"line_start":1599,"line_end":1599,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":358733,"byte_end":358736,"line_start":1600,"line_end":1600,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":358741,"byte_end":358754,"line_start":1601,"line_end":1601,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":358759,"byte_end":358762,"line_start":1602,"line_end":1602,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":358767,"byte_end":358774,"line_start":1603,"line_end":1603,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":358779,"byte_end":358817,"line_start":1604,"line_end":1604,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":358822,"byte_end":358825,"line_start":1605,"line_end":1605,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 1, 1).with_ordinal0(59),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":358830,"byte_end":358895,"line_start":1606,"line_end":1606,"column_start":5,"column_end":70}},{"value":"/            Some(NaiveDate::from_ymd(2015, 3, 1)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":358900,"byte_end":358954,"line_start":1607,"line_end":1607,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 1, 1).with_ordinal0(365),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":358959,"byte_end":359025,"line_start":1608,"line_end":1608,"column_start":5,"column_end":71}},{"value":"/            None); // 2015 had only 365 days","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":359030,"byte_end":359077,"line_start":1609,"line_end":1609,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":359082,"byte_end":359085,"line_start":1610,"line_end":1610,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2016, 1, 1).with_ordinal0(59),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":359090,"byte_end":359155,"line_start":1611,"line_end":1611,"column_start":5,"column_end":70}},{"value":"/            Some(NaiveDate::from_ymd(2016, 2, 29)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":359160,"byte_end":359215,"line_start":1612,"line_end":1612,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2016, 1, 1).with_ordinal0(365),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":359220,"byte_end":359286,"line_start":1613,"line_end":1613,"column_start":5,"column_end":71}},{"value":"/            Some(NaiveDate::from_ymd(2016, 12, 31)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":359291,"byte_end":359347,"line_start":1614,"line_end":1614,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":359352,"byte_end":359359,"line_start":1615,"line_end":1615,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":359364,"byte_end":359373,"line_start":1616,"line_end":1616,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1645},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":360736,"byte_end":360739,"line_start":1648,"line_end":1648,"column_start":8,"column_end":11},"name":"add","qualname":"<NaiveDate as std::ops::Add>::add","value":"fn add(Self, OldDuration) -> NaiveDate","parent":{"krate":2,"index":3247},"children":[],"decl_id":{"krate":2,"index":3250},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":360719,"byte_end":360728,"line_start":1647,"line_end":1647,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1647},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":360934,"byte_end":360944,"line_start":1655,"line_end":1655,"column_start":8,"column_end":18},"name":"add_assign","qualname":"<NaiveDate as std::ops::AddAssign>::add_assign","value":"fn add_assign(&mut Self, OldDuration)","parent":{"krate":2,"index":3278},"children":[],"decl_id":{"krate":2,"index":3280},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":360917,"byte_end":360926,"line_start":1654,"line_end":1654,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1650},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":361929,"byte_end":361932,"line_start":1683,"line_end":1683,"column_start":8,"column_end":11},"name":"add","qualname":"<NaiveDate as std::ops::Add>::add","value":"fn add(Self, Months) -> Self::Output","parent":{"krate":2,"index":3247},"children":[],"decl_id":{"krate":2,"index":3250},"docs":" An addition of months to `NaiveDate` clamped to valid days in resulting month.","sig":null,"attributes":[{"value":"/ An addition of months to `NaiveDate` clamped to valid days in resulting month.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":361083,"byte_end":361165,"line_start":1663,"line_end":1663,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":361170,"byte_end":361173,"line_start":1664,"line_end":1664,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":361178,"byte_end":361190,"line_start":1665,"line_end":1665,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":361195,"byte_end":361198,"line_start":1666,"line_end":1666,"column_start":5,"column_end":8}},{"value":"/ Panics if the resulting date would be out of range.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":361203,"byte_end":361258,"line_start":1667,"line_end":1667,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":361263,"byte_end":361266,"line_start":1668,"line_end":1668,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":361271,"byte_end":361284,"line_start":1669,"line_end":1669,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":361289,"byte_end":361292,"line_start":1670,"line_end":1670,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":361297,"byte_end":361304,"line_start":1671,"line_end":1671,"column_start":5,"column_end":12}},{"value":"/ use chrono::{Duration, NaiveDate, Months};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":361309,"byte_end":361355,"line_start":1672,"line_end":1672,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":361360,"byte_end":361363,"line_start":1673,"line_end":1673,"column_start":5,"column_end":8}},{"value":"/ let from_ymd = NaiveDate::from_ymd;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":361368,"byte_end":361407,"line_start":1674,"line_end":1674,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":361412,"byte_end":361415,"line_start":1675,"line_end":1675,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(from_ymd(2014, 1, 1) + Months::new(1), from_ymd(2014, 2, 1));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":361420,"byte_end":361496,"line_start":1676,"line_end":1676,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(from_ymd(2014, 1, 1) + Months::new(11), from_ymd(2014, 12, 1));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":361501,"byte_end":361579,"line_start":1677,"line_end":1677,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(from_ymd(2014, 1, 1) + Months::new(12), from_ymd(2015, 1, 1));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":361584,"byte_end":361661,"line_start":1678,"line_end":1678,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(from_ymd(2014, 1, 1) + Months::new(13), from_ymd(2015, 2, 1));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":361666,"byte_end":361743,"line_start":1679,"line_end":1679,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(from_ymd(2014, 1, 31) + Months::new(1), from_ymd(2014, 2, 28));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":361748,"byte_end":361826,"line_start":1680,"line_end":1680,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(from_ymd(2020, 1, 31) + Months::new(1), from_ymd(2020, 2, 29));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":361831,"byte_end":361909,"line_start":1681,"line_end":1681,"column_start":5,"column_end":83}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":361914,"byte_end":361921,"line_start":1682,"line_end":1682,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1653},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":362701,"byte_end":362704,"line_start":1708,"line_end":1708,"column_start":8,"column_end":11},"name":"sub","qualname":"<NaiveDate as std::ops::Sub>::sub","value":"fn sub(Self, Months) -> Self::Output","parent":{"krate":2,"index":3252},"children":[],"decl_id":{"krate":2,"index":3255},"docs":" A subtraction of Months from `NaiveDate` clamped to valid days in resulting month.","sig":null,"attributes":[{"value":"/ A subtraction of Months from `NaiveDate` clamped to valid days in resulting month.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":362098,"byte_end":362184,"line_start":1691,"line_end":1691,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":362189,"byte_end":362192,"line_start":1692,"line_end":1692,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":362197,"byte_end":362209,"line_start":1693,"line_end":1693,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":362214,"byte_end":362217,"line_start":1694,"line_end":1694,"column_start":5,"column_end":8}},{"value":"/ Panics if the resulting date would be out of range.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":362222,"byte_end":362277,"line_start":1695,"line_end":1695,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":362282,"byte_end":362285,"line_start":1696,"line_end":1696,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":362290,"byte_end":362303,"line_start":1697,"line_end":1697,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":362308,"byte_end":362311,"line_start":1698,"line_end":1698,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":362316,"byte_end":362323,"line_start":1699,"line_end":1699,"column_start":5,"column_end":12}},{"value":"/ use chrono::{Duration, NaiveDate, Months};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":362328,"byte_end":362374,"line_start":1700,"line_end":1700,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":362379,"byte_end":362382,"line_start":1701,"line_end":1701,"column_start":5,"column_end":8}},{"value":"/ let from_ymd = NaiveDate::from_ymd;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":362387,"byte_end":362426,"line_start":1702,"line_end":1702,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":362431,"byte_end":362434,"line_start":1703,"line_end":1703,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(from_ymd(2014, 1, 1) - Months::new(11), from_ymd(2013, 2, 1));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":362439,"byte_end":362516,"line_start":1704,"line_end":1704,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(from_ymd(2014, 1, 1) - Months::new(12), from_ymd(2013, 1, 1));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":362521,"byte_end":362598,"line_start":1705,"line_end":1705,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(from_ymd(2014, 1, 1) - Months::new(13), from_ymd(2012, 12, 1));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":362603,"byte_end":362681,"line_start":1706,"line_end":1706,"column_start":5,"column_end":83}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":362686,"byte_end":362693,"line_start":1707,"line_end":1707,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1656},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":364095,"byte_end":364098,"line_start":1740,"line_end":1740,"column_start":8,"column_end":11},"name":"sub","qualname":"<NaiveDate as std::ops::Sub>::sub","value":"fn sub(Self, OldDuration) -> NaiveDate","parent":{"krate":2,"index":3252},"children":[],"decl_id":{"krate":2,"index":3255},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":364078,"byte_end":364087,"line_start":1739,"line_end":1739,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1658},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":364293,"byte_end":364303,"line_start":1747,"line_end":1747,"column_start":8,"column_end":18},"name":"sub_assign","qualname":"<NaiveDate as std::ops::SubAssign>::sub_assign","value":"fn sub_assign(&mut Self, OldDuration)","parent":{"krate":2,"index":3282},"children":[],"decl_id":{"krate":2,"index":3284},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":364276,"byte_end":364285,"line_start":1746,"line_end":1746,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1661},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":365510,"byte_end":365513,"line_start":1780,"line_end":1780,"column_start":8,"column_end":11},"name":"sub","qualname":"<NaiveDate as std::ops::Sub>::sub","value":"fn sub(Self, NaiveDate) -> OldDuration","parent":{"krate":2,"index":3252},"children":[],"decl_id":{"krate":2,"index":3255},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":365493,"byte_end":365502,"line_start":1779,"line_end":1779,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":3842},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":365740,"byte_end":365761,"line_start":1787,"line_end":1787,"column_start":12,"column_end":33},"name":"NaiveDateDaysIterator","qualname":"::naive::date::NaiveDateDaysIterator","value":"NaiveDateDaysIterator {  }","parent":null,"children":[{"krate":0,"index":3843}],"decl_id":null,"docs":" Iterator over `NaiveDate` with a step size of one day.\n","sig":null,"attributes":[{"value":"/ Iterator over `NaiveDate` with a step size of one day.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":365602,"byte_end":365660,"line_start":1785,"line_end":1785,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1664},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":365866,"byte_end":365870,"line_start":1794,"line_end":1794,"column_start":8,"column_end":12},"name":"next","qualname":"<NaiveDateDaysIterator as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8476},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1665},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":366205,"byte_end":366214,"line_start":1805,"line_end":1805,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<NaiveDateDaysIterator as std::iter::Iterator>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8477},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1668},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":366515,"byte_end":366524,"line_start":1814,"line_end":1814,"column_start":8,"column_end":17},"name":"next_back","qualname":"<NaiveDateDaysIterator as std::iter::DoubleEndedIterator>::next_back","value":"fn next_back(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8323},"children":[],"decl_id":{"krate":2,"index":8324},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3863},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":366818,"byte_end":366840,"line_start":1825,"line_end":1825,"column_start":12,"column_end":34},"name":"NaiveDateWeeksIterator","qualname":"::naive::date::NaiveDateWeeksIterator","value":"NaiveDateWeeksIterator {  }","parent":null,"children":[{"krate":0,"index":3864}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1671},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":366946,"byte_end":366950,"line_start":1832,"line_end":1832,"column_start":8,"column_end":12},"name":"next","qualname":"<NaiveDateWeeksIterator as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8476},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1672},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":367210,"byte_end":367219,"line_start":1841,"line_end":1841,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<NaiveDateWeeksIterator as std::iter::Iterator>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8474},"children":[],"decl_id":{"krate":2,"index":8477},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1675},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":367523,"byte_end":367532,"line_start":1850,"line_end":1850,"column_start":8,"column_end":17},"name":"next_back","qualname":"<NaiveDateWeeksIterator as std::iter::DoubleEndedIterator>::next_back","value":"fn next_back(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8323},"children":[],"decl_id":{"krate":2,"index":8324},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1677},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":368844,"byte_end":368847,"line_start":1887,"line_end":1887,"column_start":8,"column_end":11},"name":"fmt","qualname":"<NaiveDate as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1679},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":370109,"byte_end":370112,"line_start":1922,"line_end":1922,"column_start":8,"column_end":11},"name":"fmt","qualname":"<NaiveDate as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10117},"children":[],"decl_id":{"krate":2,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1682},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":370746,"byte_end":370754,"line_start":1946,"line_end":1946,"column_start":8,"column_end":16},"name":"from_str","qualname":"<NaiveDate as std::str::FromStr>::from_str","value":"fn from_str(&str) -> ParseResult<NaiveDate>","parent":{"krate":2,"index":12767},"children":[],"decl_id":{"krate":2,"index":12769},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1685},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":371562,"byte_end":371569,"line_start":1975,"line_end":1975,"column_start":8,"column_end":15},"name":"default","qualname":"<NaiveDate as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1701},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":375046,"byte_end":375055,"line_start":2070,"line_end":2070,"column_start":12,"column_end":21},"name":"serialize","qualname":"<NaiveDate as serde::Serialize>::serialize","value":"fn serialize<S>(&Self, S) -> Result<S::Ok, S::Error> where S: ser::Serializer","parent":{"krate":22,"index":2149},"children":[],"decl_id":{"krate":22,"index":2150},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1721},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":376331,"byte_end":376342,"line_start":2115,"line_end":2115,"column_start":12,"column_end":23},"name":"deserialize","qualname":"<NaiveDate as serde::Deserialize>::deserialize","value":"fn deserialize<D>(D) -> Result<Self, D::Error> where D: de::Deserializer","parent":{"krate":22,"index":1600},"children":[],"decl_id":{"krate":22,"index":1602},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1835},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":467227,"byte_end":467236,"line_start":12,"line_end":12,"column_start":8,"column_end":17},"name":"serialize","qualname":"<NaiveDateTime as serde::Serialize>::serialize","value":"fn serialize<S>(&Self, S) -> Result<S::Ok, S::Error> where S: ser::Serializer","parent":{"krate":22,"index":2149},"children":[],"decl_id":{"krate":22,"index":2150},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1855},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":468155,"byte_end":468166,"line_start":48,"line_end":48,"column_start":8,"column_end":19},"name":"deserialize","qualname":"<NaiveDateTime as serde::Deserialize>::deserialize","value":"fn deserialize<D>(D) -> Result<Self, D::Error> where D: de::Deserializer","parent":{"krate":22,"index":1600},"children":[],"decl_id":{"krate":22,"index":1602},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1857},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":469108,"byte_end":469122,"line_start":81,"line_end":81,"column_start":9,"column_end":23},"name":"ts_nanoseconds","qualname":"::naive::datetime::serde::ts_nanoseconds","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","parent":null,"children":[{"krate":0,"index":1858},{"krate":0,"index":1861},{"krate":0,"index":1862},{"krate":0,"index":1865},{"krate":0,"index":1868},{"krate":0,"index":1871},{"krate":0,"index":1874},{"krate":0,"index":1876},{"krate":0,"index":1879},{"krate":0,"index":1881}],"decl_id":null,"docs":" Used to serialize/deserialize from nanosecond-precision timestamps","sig":null,"attributes":[{"value":"/ Used to serialize/deserialize from nanosecond-precision timestamps","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":468331,"byte_end":468401,"line_start":56,"line_end":56,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":468402,"byte_end":468405,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ # Example:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":468406,"byte_end":468420,"line_start":58,"line_end":58,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":468421,"byte_end":468424,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":468425,"byte_end":468436,"line_start":60,"line_end":60,"column_start":1,"column_end":12}},{"value":"/ # use chrono::{NaiveDate, NaiveDateTime};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":468437,"byte_end":468482,"line_start":61,"line_end":61,"column_start":1,"column_end":46}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":468483,"byte_end":468532,"line_start":62,"line_end":62,"column_start":1,"column_end":50}},{"value":"/ use chrono::naive::serde::ts_nanoseconds;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":468533,"byte_end":468578,"line_start":63,"line_end":63,"column_start":1,"column_end":46}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":468579,"byte_end":468616,"line_start":64,"line_end":64,"column_start":1,"column_end":38}},{"value":"/ struct S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":468617,"byte_end":468631,"line_start":65,"line_end":65,"column_start":1,"column_end":15}},{"value":"/     #[serde(with = \"ts_nanoseconds\")]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":468632,"byte_end":468673,"line_start":66,"line_end":66,"column_start":1,"column_end":42}},{"value":"/     time: NaiveDateTime","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":468674,"byte_end":468701,"line_start":67,"line_end":67,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":468702,"byte_end":468707,"line_start":68,"line_end":68,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":468708,"byte_end":468711,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ let time = NaiveDate::from_ymd(2018, 5, 17).and_hms_nano(02, 04, 59, 918355733);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":468712,"byte_end":468796,"line_start":70,"line_end":70,"column_start":1,"column_end":85}},{"value":"/ let my_s = S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":468797,"byte_end":468815,"line_start":71,"line_end":71,"column_start":1,"column_end":19}},{"value":"/     time: time.clone(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":468816,"byte_end":468843,"line_start":72,"line_end":72,"column_start":1,"column_end":28}},{"value":"/ };","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":468844,"byte_end":468850,"line_start":73,"line_end":73,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":468851,"byte_end":468854,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ let as_string = serde_json::to_string(&my_s)?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":468855,"byte_end":468905,"line_start":75,"line_end":75,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(as_string, r#\"{\"time\":1526522699918355733}\"#);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":468906,"byte_end":468967,"line_start":76,"line_end":76,"column_start":1,"column_end":62}},{"value":"/ let my_s: S = serde_json::from_str(&as_string)?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":468968,"byte_end":469020,"line_start":77,"line_end":77,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(my_s.time, time);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":469021,"byte_end":469053,"line_start":78,"line_end":78,"column_start":1,"column_end":33}},{"value":"/ # Ok::<(), serde_json::Error>(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":469054,"byte_end":469091,"line_start":79,"line_end":79,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":469092,"byte_end":469099,"line_start":80,"line_end":80,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1874},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":470062,"byte_end":470071,"line_start":111,"line_end":111,"column_start":12,"column_end":21},"name":"serialize","qualname":"::naive::datetime::serde::ts_nanoseconds::serialize","value":"fn serialize<S>(&NaiveDateTime, S) -> Result<S::Ok, S::Error> where\nS: ser::Serializer","parent":null,"children":[],"decl_id":null,"docs":" Serialize a datetime into an integer number of nanoseconds since the epoch","sig":null,"attributes":[{"value":"/ Serialize a datetime into an integer number of nanoseconds since the epoch","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":469235,"byte_end":469313,"line_start":88,"line_end":88,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":469318,"byte_end":469321,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ Intended for use with `serde`s `serialize_with` attribute.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":469326,"byte_end":469388,"line_start":90,"line_end":90,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":469393,"byte_end":469396,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ # Example:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":469401,"byte_end":469415,"line_start":92,"line_end":92,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":469420,"byte_end":469423,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":469428,"byte_end":469439,"line_start":94,"line_end":94,"column_start":5,"column_end":16}},{"value":"/ # use chrono::{NaiveDate, NaiveDateTime};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":469444,"byte_end":469489,"line_start":95,"line_end":95,"column_start":5,"column_end":50}},{"value":"/ # use serde_derive::Serialize;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":469494,"byte_end":469528,"line_start":96,"line_end":96,"column_start":5,"column_end":39}},{"value":"/ use chrono::naive::serde::ts_nanoseconds::serialize as to_nano_ts;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":469533,"byte_end":469603,"line_start":97,"line_end":97,"column_start":5,"column_end":75}},{"value":"/ #[derive(Serialize)]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":469608,"byte_end":469632,"line_start":98,"line_end":98,"column_start":5,"column_end":29}},{"value":"/ struct S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":469637,"byte_end":469651,"line_start":99,"line_end":99,"column_start":5,"column_end":19}},{"value":"/     #[serde(serialize_with = \"to_nano_ts\")]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":469656,"byte_end":469703,"line_start":100,"line_end":100,"column_start":5,"column_end":52}},{"value":"/     time: NaiveDateTime","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":469708,"byte_end":469735,"line_start":101,"line_end":101,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":469740,"byte_end":469745,"line_start":102,"line_end":102,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":469750,"byte_end":469753,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ let my_s = S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":469758,"byte_end":469776,"line_start":104,"line_end":104,"column_start":5,"column_end":23}},{"value":"/     time: NaiveDate::from_ymd(2018, 5, 17).and_hms_nano(02, 04, 59, 918355733),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":469781,"byte_end":469864,"line_start":105,"line_end":105,"column_start":5,"column_end":88}},{"value":"/ };","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":469869,"byte_end":469875,"line_start":106,"line_end":106,"column_start":5,"column_end":11}},{"value":"/ let as_string = serde_json::to_string(&my_s)?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":469880,"byte_end":469930,"line_start":107,"line_end":107,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(as_string, r#\"{\"time\":1526522699918355733}\"#);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":469935,"byte_end":469996,"line_start":108,"line_end":108,"column_start":5,"column_end":66}},{"value":"/ # Ok::<(), serde_json::Error>(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":470001,"byte_end":470038,"line_start":109,"line_end":109,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":470043,"byte_end":470050,"line_start":110,"line_end":110,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":1876},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":470899,"byte_end":470910,"line_start":137,"line_end":137,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::naive::datetime::serde::ts_nanoseconds::deserialize","value":"fn deserialize<'de, D>(D) -> Result<NaiveDateTime, D::Error> where\nD: de::Deserializer","parent":null,"children":[],"decl_id":null,"docs":" Deserialize a `NaiveDateTime` from a nanoseconds timestamp","sig":null,"attributes":[{"value":"/ Deserialize a `NaiveDateTime` from a nanoseconds timestamp","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":470247,"byte_end":470309,"line_start":118,"line_end":118,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":470314,"byte_end":470317,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ Intended for use with `serde`s `deserialize_with` attribute.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":470322,"byte_end":470386,"line_start":120,"line_end":120,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":470391,"byte_end":470394,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ # Example:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":470399,"byte_end":470413,"line_start":122,"line_end":122,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":470418,"byte_end":470421,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":470426,"byte_end":470437,"line_start":124,"line_end":124,"column_start":5,"column_end":16}},{"value":"/ # use chrono::NaiveDateTime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":470442,"byte_end":470474,"line_start":125,"line_end":125,"column_start":5,"column_end":37}},{"value":"/ # use serde_derive::Deserialize;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":470479,"byte_end":470515,"line_start":126,"line_end":126,"column_start":5,"column_end":41}},{"value":"/ use chrono::naive::serde::ts_nanoseconds::deserialize as from_nano_ts;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":470520,"byte_end":470594,"line_start":127,"line_end":127,"column_start":5,"column_end":79}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":470599,"byte_end":470625,"line_start":128,"line_end":128,"column_start":5,"column_end":31}},{"value":"/ struct S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":470630,"byte_end":470644,"line_start":129,"line_end":129,"column_start":5,"column_end":19}},{"value":"/     #[serde(deserialize_with = \"from_nano_ts\")]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":470649,"byte_end":470700,"line_start":130,"line_end":130,"column_start":5,"column_end":56}},{"value":"/     time: NaiveDateTime","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":470705,"byte_end":470732,"line_start":131,"line_end":131,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":470737,"byte_end":470742,"line_start":132,"line_end":132,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":470747,"byte_end":470750,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ let my_s: S = serde_json::from_str(r#\"{ \"time\": 1526522699918355733 }\"#)?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":470755,"byte_end":470833,"line_start":134,"line_end":134,"column_start":5,"column_end":83}},{"value":"/ # Ok::<(), serde_json::Error>(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":470838,"byte_end":470875,"line_start":135,"line_end":135,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":470880,"byte_end":470887,"line_start":136,"line_end":136,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":1891},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":472870,"byte_end":472891,"line_start":201,"line_end":201,"column_start":9,"column_end":30},"name":"ts_nanoseconds_option","qualname":"::naive::datetime::serde::ts_nanoseconds_option","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","parent":null,"children":[{"krate":0,"index":1892},{"krate":0,"index":1895},{"krate":0,"index":1896},{"krate":0,"index":1899},{"krate":0,"index":1902},{"krate":0,"index":1903},{"krate":0,"index":1905},{"krate":0,"index":1908},{"krate":0,"index":1910},{"krate":0,"index":1913},{"krate":0,"index":1915}],"decl_id":null,"docs":" Ser/de to/from optional timestamps in nanoseconds","sig":null,"attributes":[{"value":"/ Ser/de to/from optional timestamps in nanoseconds","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":472017,"byte_end":472070,"line_start":174,"line_end":174,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":472071,"byte_end":472074,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ Intended for use with `serde`'s `with` attribute.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":472075,"byte_end":472128,"line_start":176,"line_end":176,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":472129,"byte_end":472132,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ # Example:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":472133,"byte_end":472147,"line_start":178,"line_end":178,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":472148,"byte_end":472151,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":472152,"byte_end":472163,"line_start":180,"line_end":180,"column_start":1,"column_end":12}},{"value":"/ # use chrono::naive::{NaiveDate, NaiveDateTime};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":472164,"byte_end":472216,"line_start":181,"line_end":181,"column_start":1,"column_end":53}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":472217,"byte_end":472266,"line_start":182,"line_end":182,"column_start":1,"column_end":50}},{"value":"/ use chrono::naive::serde::ts_nanoseconds_option;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":472267,"byte_end":472319,"line_start":183,"line_end":183,"column_start":1,"column_end":53}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":472320,"byte_end":472357,"line_start":184,"line_end":184,"column_start":1,"column_end":38}},{"value":"/ struct S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":472358,"byte_end":472372,"line_start":185,"line_end":185,"column_start":1,"column_end":15}},{"value":"/     #[serde(with = \"ts_nanoseconds_option\")]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":472373,"byte_end":472421,"line_start":186,"line_end":186,"column_start":1,"column_end":49}},{"value":"/     time: Option<NaiveDateTime>","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":472422,"byte_end":472457,"line_start":187,"line_end":187,"column_start":1,"column_end":36}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":472458,"byte_end":472463,"line_start":188,"line_end":188,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":472464,"byte_end":472467,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ let time = Some(NaiveDate::from_ymd(2018, 5, 17).and_hms_nano(02, 04, 59, 918355733));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":472468,"byte_end":472558,"line_start":190,"line_end":190,"column_start":1,"column_end":91}},{"value":"/ let my_s = S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":472559,"byte_end":472577,"line_start":191,"line_end":191,"column_start":1,"column_end":19}},{"value":"/     time: time.clone(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":472578,"byte_end":472605,"line_start":192,"line_end":192,"column_start":1,"column_end":28}},{"value":"/ };","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":472606,"byte_end":472612,"line_start":193,"line_end":193,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":472613,"byte_end":472616,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ let as_string = serde_json::to_string(&my_s)?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":472617,"byte_end":472667,"line_start":195,"line_end":195,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(as_string, r#\"{\"time\":1526522699918355733}\"#);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":472668,"byte_end":472729,"line_start":196,"line_end":196,"column_start":1,"column_end":62}},{"value":"/ let my_s: S = serde_json::from_str(&as_string)?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":472730,"byte_end":472782,"line_start":197,"line_end":197,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(my_s.time, time);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":472783,"byte_end":472815,"line_start":198,"line_end":198,"column_start":1,"column_end":33}},{"value":"/ # Ok::<(), serde_json::Error>(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":472816,"byte_end":472853,"line_start":199,"line_end":199,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":472854,"byte_end":472861,"line_start":200,"line_end":200,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1908},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":473904,"byte_end":473913,"line_start":231,"line_end":231,"column_start":12,"column_end":21},"name":"serialize","qualname":"::naive::datetime::serde::ts_nanoseconds_option::serialize","value":"fn serialize<S>(&Option<NaiveDateTime>, S) -> Result<S::Ok, S::Error> where\nS: ser::Serializer","parent":null,"children":[],"decl_id":null,"docs":" Serialize a datetime into an integer number of nanoseconds since the epoch or none","sig":null,"attributes":[{"value":"/ Serialize a datetime into an integer number of nanoseconds since the epoch or none","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":473035,"byte_end":473121,"line_start":208,"line_end":208,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":473126,"byte_end":473129,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ Intended for use with `serde`s `serialize_with` attribute.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":473134,"byte_end":473196,"line_start":210,"line_end":210,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":473201,"byte_end":473204,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ # Example:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":473209,"byte_end":473223,"line_start":212,"line_end":212,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":473228,"byte_end":473231,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":473236,"byte_end":473247,"line_start":214,"line_end":214,"column_start":5,"column_end":16}},{"value":"/ # use chrono::naive::{NaiveDate, NaiveDateTime};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":473252,"byte_end":473304,"line_start":215,"line_end":215,"column_start":5,"column_end":57}},{"value":"/ # use serde_derive::Serialize;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":473309,"byte_end":473343,"line_start":216,"line_end":216,"column_start":5,"column_end":39}},{"value":"/ use chrono::naive::serde::ts_nanoseconds_option::serialize as to_nano_tsopt;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":473348,"byte_end":473428,"line_start":217,"line_end":217,"column_start":5,"column_end":85}},{"value":"/ #[derive(Serialize)]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":473433,"byte_end":473457,"line_start":218,"line_end":218,"column_start":5,"column_end":29}},{"value":"/ struct S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":473462,"byte_end":473476,"line_start":219,"line_end":219,"column_start":5,"column_end":19}},{"value":"/     #[serde(serialize_with = \"to_nano_tsopt\")]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":473481,"byte_end":473531,"line_start":220,"line_end":220,"column_start":5,"column_end":55}},{"value":"/     time: Option<NaiveDateTime>","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":473536,"byte_end":473571,"line_start":221,"line_end":221,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":473576,"byte_end":473581,"line_start":222,"line_end":222,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":473586,"byte_end":473589,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ let my_s = S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":473594,"byte_end":473612,"line_start":224,"line_end":224,"column_start":5,"column_end":23}},{"value":"/     time: Some(NaiveDate::from_ymd(2018, 5, 17).and_hms_nano(02, 04, 59, 918355733)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":473617,"byte_end":473706,"line_start":225,"line_end":225,"column_start":5,"column_end":94}},{"value":"/ };","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":473711,"byte_end":473717,"line_start":226,"line_end":226,"column_start":5,"column_end":11}},{"value":"/ let as_string = serde_json::to_string(&my_s)?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":473722,"byte_end":473772,"line_start":227,"line_end":227,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(as_string, r#\"{\"time\":1526522699918355733}\"#);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":473777,"byte_end":473838,"line_start":228,"line_end":228,"column_start":5,"column_end":66}},{"value":"/ # Ok::<(), serde_json::Error>(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":473843,"byte_end":473880,"line_start":229,"line_end":229,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":473885,"byte_end":473892,"line_start":230,"line_end":230,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":1910},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":474901,"byte_end":474912,"line_start":260,"line_end":260,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::naive::datetime::serde::ts_nanoseconds_option::deserialize","value":"fn deserialize<'de, D>(D) -> Result<Option<NaiveDateTime>, D::Error> where\nD: de::Deserializer","parent":null,"children":[],"decl_id":null,"docs":" Deserialize a `NaiveDateTime` from a nanosecond timestamp or none","sig":null,"attributes":[{"value":"/ Deserialize a `NaiveDateTime` from a nanosecond timestamp or none","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":474201,"byte_end":474270,"line_start":241,"line_end":241,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":474275,"byte_end":474278,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ Intended for use with `serde`s `deserialize_with` attribute.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":474283,"byte_end":474347,"line_start":243,"line_end":243,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":474352,"byte_end":474355,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ # Example:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":474360,"byte_end":474374,"line_start":245,"line_end":245,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":474379,"byte_end":474382,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":474387,"byte_end":474398,"line_start":247,"line_end":247,"column_start":5,"column_end":16}},{"value":"/ # use chrono::naive::{NaiveDate, NaiveDateTime};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":474403,"byte_end":474455,"line_start":248,"line_end":248,"column_start":5,"column_end":57}},{"value":"/ # use serde_derive::Deserialize;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":474460,"byte_end":474496,"line_start":249,"line_end":249,"column_start":5,"column_end":41}},{"value":"/ use chrono::naive::serde::ts_nanoseconds_option::deserialize as from_nano_tsopt;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":474501,"byte_end":474585,"line_start":250,"line_end":250,"column_start":5,"column_end":89}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":474590,"byte_end":474616,"line_start":251,"line_end":251,"column_start":5,"column_end":31}},{"value":"/ struct S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":474621,"byte_end":474635,"line_start":252,"line_end":252,"column_start":5,"column_end":19}},{"value":"/     #[serde(deserialize_with = \"from_nano_tsopt\")]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":474640,"byte_end":474694,"line_start":253,"line_end":253,"column_start":5,"column_end":59}},{"value":"/     time: Option<NaiveDateTime>","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":474699,"byte_end":474734,"line_start":254,"line_end":254,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":474739,"byte_end":474744,"line_start":255,"line_end":255,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":474749,"byte_end":474752,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ let my_s: S = serde_json::from_str(r#\"{ \"time\": 1526522699918355733 }\"#)?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":474757,"byte_end":474835,"line_start":257,"line_end":257,"column_start":5,"column_end":83}},{"value":"/ # Ok::<(), serde_json::Error>(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":474840,"byte_end":474877,"line_start":258,"line_end":258,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":474882,"byte_end":474889,"line_start":259,"line_end":259,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":1925},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":476891,"byte_end":476906,"line_start":327,"line_end":327,"column_start":9,"column_end":24},"name":"ts_microseconds","qualname":"::naive::datetime::serde::ts_microseconds","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","parent":null,"children":[{"krate":0,"index":1926},{"krate":0,"index":1929},{"krate":0,"index":1930},{"krate":0,"index":1933},{"krate":0,"index":1936},{"krate":0,"index":1939},{"krate":0,"index":1942},{"krate":0,"index":1944},{"krate":0,"index":1947},{"krate":0,"index":1949}],"decl_id":null,"docs":" Used to serialize/deserialize from microsecond-precision timestamps","sig":null,"attributes":[{"value":"/ Used to serialize/deserialize from microsecond-precision timestamps","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":476116,"byte_end":476187,"line_start":302,"line_end":302,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":476188,"byte_end":476191,"line_start":303,"line_end":303,"column_start":1,"column_end":4}},{"value":"/ # Example:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":476192,"byte_end":476206,"line_start":304,"line_end":304,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":476207,"byte_end":476210,"line_start":305,"line_end":305,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":476211,"byte_end":476222,"line_start":306,"line_end":306,"column_start":1,"column_end":12}},{"value":"/ # use chrono::{NaiveDate, NaiveDateTime};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":476223,"byte_end":476268,"line_start":307,"line_end":307,"column_start":1,"column_end":46}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":476269,"byte_end":476318,"line_start":308,"line_end":308,"column_start":1,"column_end":50}},{"value":"/ use chrono::naive::serde::ts_microseconds;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":476319,"byte_end":476365,"line_start":309,"line_end":309,"column_start":1,"column_end":47}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":476366,"byte_end":476403,"line_start":310,"line_end":310,"column_start":1,"column_end":38}},{"value":"/ struct S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":476404,"byte_end":476418,"line_start":311,"line_end":311,"column_start":1,"column_end":15}},{"value":"/     #[serde(with = \"ts_microseconds\")]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":476419,"byte_end":476461,"line_start":312,"line_end":312,"column_start":1,"column_end":43}},{"value":"/     time: NaiveDateTime","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":476462,"byte_end":476489,"line_start":313,"line_end":313,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":476490,"byte_end":476495,"line_start":314,"line_end":314,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":476496,"byte_end":476499,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"/ let time = NaiveDate::from_ymd(2018, 5, 17).and_hms_micro(02, 04, 59, 918355);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":476500,"byte_end":476582,"line_start":316,"line_end":316,"column_start":1,"column_end":83}},{"value":"/ let my_s = S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":476583,"byte_end":476601,"line_start":317,"line_end":317,"column_start":1,"column_end":19}},{"value":"/     time: time.clone(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":476602,"byte_end":476629,"line_start":318,"line_end":318,"column_start":1,"column_end":28}},{"value":"/ };","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":476630,"byte_end":476636,"line_start":319,"line_end":319,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":476637,"byte_end":476640,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/ let as_string = serde_json::to_string(&my_s)?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":476641,"byte_end":476691,"line_start":321,"line_end":321,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(as_string, r#\"{\"time\":1526522699918355}\"#);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":476692,"byte_end":476750,"line_start":322,"line_end":322,"column_start":1,"column_end":59}},{"value":"/ let my_s: S = serde_json::from_str(&as_string)?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":476751,"byte_end":476803,"line_start":323,"line_end":323,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(my_s.time, time);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":476804,"byte_end":476836,"line_start":324,"line_end":324,"column_start":1,"column_end":33}},{"value":"/ # Ok::<(), serde_json::Error>(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":476837,"byte_end":476874,"line_start":325,"line_end":325,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":476875,"byte_end":476882,"line_start":326,"line_end":326,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1942},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":477845,"byte_end":477854,"line_start":357,"line_end":357,"column_start":12,"column_end":21},"name":"serialize","qualname":"::naive::datetime::serde::ts_microseconds::serialize","value":"fn serialize<S>(&NaiveDateTime, S) -> Result<S::Ok, S::Error> where\nS: ser::Serializer","parent":null,"children":[],"decl_id":null,"docs":" Serialize a datetime into an integer number of microseconds since the epoch","sig":null,"attributes":[{"value":"/ Serialize a datetime into an integer number of microseconds since the epoch","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":477019,"byte_end":477098,"line_start":334,"line_end":334,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":477103,"byte_end":477106,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ Intended for use with `serde`s `serialize_with` attribute.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":477111,"byte_end":477173,"line_start":336,"line_end":336,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":477178,"byte_end":477181,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ # Example:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":477186,"byte_end":477200,"line_start":338,"line_end":338,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":477205,"byte_end":477208,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":477213,"byte_end":477224,"line_start":340,"line_end":340,"column_start":5,"column_end":16}},{"value":"/ # use chrono::{NaiveDate, NaiveDateTime};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":477229,"byte_end":477274,"line_start":341,"line_end":341,"column_start":5,"column_end":50}},{"value":"/ # use serde_derive::Serialize;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":477279,"byte_end":477313,"line_start":342,"line_end":342,"column_start":5,"column_end":39}},{"value":"/ use chrono::naive::serde::ts_microseconds::serialize as to_micro_ts;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":477318,"byte_end":477390,"line_start":343,"line_end":343,"column_start":5,"column_end":77}},{"value":"/ #[derive(Serialize)]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":477395,"byte_end":477419,"line_start":344,"line_end":344,"column_start":5,"column_end":29}},{"value":"/ struct S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":477424,"byte_end":477438,"line_start":345,"line_end":345,"column_start":5,"column_end":19}},{"value":"/     #[serde(serialize_with = \"to_micro_ts\")]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":477443,"byte_end":477491,"line_start":346,"line_end":346,"column_start":5,"column_end":53}},{"value":"/     time: NaiveDateTime","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":477496,"byte_end":477523,"line_start":347,"line_end":347,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":477528,"byte_end":477533,"line_start":348,"line_end":348,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":477538,"byte_end":477541,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ let my_s = S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":477546,"byte_end":477564,"line_start":350,"line_end":350,"column_start":5,"column_end":23}},{"value":"/     time: NaiveDate::from_ymd(2018, 5, 17).and_hms_micro(02, 04, 59, 918355),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":477569,"byte_end":477650,"line_start":351,"line_end":351,"column_start":5,"column_end":86}},{"value":"/ };","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":477655,"byte_end":477661,"line_start":352,"line_end":352,"column_start":5,"column_end":11}},{"value":"/ let as_string = serde_json::to_string(&my_s)?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":477666,"byte_end":477716,"line_start":353,"line_end":353,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(as_string, r#\"{\"time\":1526522699918355}\"#);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":477721,"byte_end":477779,"line_start":354,"line_end":354,"column_start":5,"column_end":63}},{"value":"/ # Ok::<(), serde_json::Error>(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":477784,"byte_end":477821,"line_start":355,"line_end":355,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":477826,"byte_end":477833,"line_start":356,"line_end":356,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":1944},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":478684,"byte_end":478695,"line_start":383,"line_end":383,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::naive::datetime::serde::ts_microseconds::deserialize","value":"fn deserialize<'de, D>(D) -> Result<NaiveDateTime, D::Error> where\nD: de::Deserializer","parent":null,"children":[],"decl_id":null,"docs":" Deserialize a `NaiveDateTime` from a microseconds timestamp","sig":null,"attributes":[{"value":"/ Deserialize a `NaiveDateTime` from a microseconds timestamp","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":478031,"byte_end":478094,"line_start":364,"line_end":364,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":478099,"byte_end":478102,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ Intended for use with `serde`s `deserialize_with` attribute.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":478107,"byte_end":478171,"line_start":366,"line_end":366,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":478176,"byte_end":478179,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ # Example:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":478184,"byte_end":478198,"line_start":368,"line_end":368,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":478203,"byte_end":478206,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":478211,"byte_end":478222,"line_start":370,"line_end":370,"column_start":5,"column_end":16}},{"value":"/ # use chrono::NaiveDateTime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":478227,"byte_end":478259,"line_start":371,"line_end":371,"column_start":5,"column_end":37}},{"value":"/ # use serde_derive::Deserialize;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":478264,"byte_end":478300,"line_start":372,"line_end":372,"column_start":5,"column_end":41}},{"value":"/ use chrono::naive::serde::ts_microseconds::deserialize as from_micro_ts;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":478305,"byte_end":478381,"line_start":373,"line_end":373,"column_start":5,"column_end":81}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":478386,"byte_end":478412,"line_start":374,"line_end":374,"column_start":5,"column_end":31}},{"value":"/ struct S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":478417,"byte_end":478431,"line_start":375,"line_end":375,"column_start":5,"column_end":19}},{"value":"/     #[serde(deserialize_with = \"from_micro_ts\")]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":478436,"byte_end":478488,"line_start":376,"line_end":376,"column_start":5,"column_end":57}},{"value":"/     time: NaiveDateTime","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":478493,"byte_end":478520,"line_start":377,"line_end":377,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":478525,"byte_end":478530,"line_start":378,"line_end":378,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":478535,"byte_end":478538,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ let my_s: S = serde_json::from_str(r#\"{ \"time\": 1526522699918355 }\"#)?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":478543,"byte_end":478618,"line_start":380,"line_end":380,"column_start":5,"column_end":80}},{"value":"/ # Ok::<(), serde_json::Error>(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":478623,"byte_end":478660,"line_start":381,"line_end":381,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":478665,"byte_end":478672,"line_start":382,"line_end":382,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":1959},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":480697,"byte_end":480719,"line_start":450,"line_end":450,"column_start":9,"column_end":31},"name":"ts_microseconds_option","qualname":"::naive::datetime::serde::ts_microseconds_option","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","parent":null,"children":[{"krate":0,"index":1960},{"krate":0,"index":1963},{"krate":0,"index":1964},{"krate":0,"index":1967},{"krate":0,"index":1970},{"krate":0,"index":1971},{"krate":0,"index":1973},{"krate":0,"index":1976},{"krate":0,"index":1978},{"krate":0,"index":1981},{"krate":0,"index":1983}],"decl_id":null,"docs":" Ser/de to/from optional timestamps in microseconds","sig":null,"attributes":[{"value":"/ Ser/de to/from optional timestamps in microseconds","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":479846,"byte_end":479900,"line_start":423,"line_end":423,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":479901,"byte_end":479904,"line_start":424,"line_end":424,"column_start":1,"column_end":4}},{"value":"/ Intended for use with `serde`'s `with` attribute.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":479905,"byte_end":479958,"line_start":425,"line_end":425,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":479959,"byte_end":479962,"line_start":426,"line_end":426,"column_start":1,"column_end":4}},{"value":"/ # Example:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":479963,"byte_end":479977,"line_start":427,"line_end":427,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":479978,"byte_end":479981,"line_start":428,"line_end":428,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":479982,"byte_end":479993,"line_start":429,"line_end":429,"column_start":1,"column_end":12}},{"value":"/ # use chrono::naive::{NaiveDate, NaiveDateTime};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":479994,"byte_end":480046,"line_start":430,"line_end":430,"column_start":1,"column_end":53}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":480047,"byte_end":480096,"line_start":431,"line_end":431,"column_start":1,"column_end":50}},{"value":"/ use chrono::naive::serde::ts_microseconds_option;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":480097,"byte_end":480150,"line_start":432,"line_end":432,"column_start":1,"column_end":54}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":480151,"byte_end":480188,"line_start":433,"line_end":433,"column_start":1,"column_end":38}},{"value":"/ struct S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":480189,"byte_end":480203,"line_start":434,"line_end":434,"column_start":1,"column_end":15}},{"value":"/     #[serde(with = \"ts_microseconds_option\")]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":480204,"byte_end":480253,"line_start":435,"line_end":435,"column_start":1,"column_end":50}},{"value":"/     time: Option<NaiveDateTime>","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":480254,"byte_end":480289,"line_start":436,"line_end":436,"column_start":1,"column_end":36}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":480290,"byte_end":480295,"line_start":437,"line_end":437,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":480296,"byte_end":480299,"line_start":438,"line_end":438,"column_start":1,"column_end":4}},{"value":"/ let time = Some(NaiveDate::from_ymd(2018, 5, 17).and_hms_micro(02, 04, 59, 918355));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":480300,"byte_end":480388,"line_start":439,"line_end":439,"column_start":1,"column_end":89}},{"value":"/ let my_s = S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":480389,"byte_end":480407,"line_start":440,"line_end":440,"column_start":1,"column_end":19}},{"value":"/     time: time.clone(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":480408,"byte_end":480435,"line_start":441,"line_end":441,"column_start":1,"column_end":28}},{"value":"/ };","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":480436,"byte_end":480442,"line_start":442,"line_end":442,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":480443,"byte_end":480446,"line_start":443,"line_end":443,"column_start":1,"column_end":4}},{"value":"/ let as_string = serde_json::to_string(&my_s)?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":480447,"byte_end":480497,"line_start":444,"line_end":444,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(as_string, r#\"{\"time\":1526522699918355}\"#);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":480498,"byte_end":480556,"line_start":445,"line_end":445,"column_start":1,"column_end":59}},{"value":"/ let my_s: S = serde_json::from_str(&as_string)?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":480557,"byte_end":480609,"line_start":446,"line_end":446,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(my_s.time, time);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":480610,"byte_end":480642,"line_start":447,"line_end":447,"column_start":1,"column_end":33}},{"value":"/ # Ok::<(), serde_json::Error>(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":480643,"byte_end":480680,"line_start":448,"line_end":448,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":480681,"byte_end":480688,"line_start":449,"line_end":449,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1976},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":481733,"byte_end":481742,"line_start":480,"line_end":480,"column_start":12,"column_end":21},"name":"serialize","qualname":"::naive::datetime::serde::ts_microseconds_option::serialize","value":"fn serialize<S>(&Option<NaiveDateTime>, S) -> Result<S::Ok, S::Error> where\nS: ser::Serializer","parent":null,"children":[],"decl_id":null,"docs":" Serialize a datetime into an integer number of microseconds since the epoch or none","sig":null,"attributes":[{"value":"/ Serialize a datetime into an integer number of microseconds since the epoch or none","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":480865,"byte_end":480952,"line_start":457,"line_end":457,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":480957,"byte_end":480960,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ Intended for use with `serde`s `serialize_with` attribute.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":480965,"byte_end":481027,"line_start":459,"line_end":459,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":481032,"byte_end":481035,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ # Example:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":481040,"byte_end":481054,"line_start":461,"line_end":461,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":481059,"byte_end":481062,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":481067,"byte_end":481078,"line_start":463,"line_end":463,"column_start":5,"column_end":16}},{"value":"/ # use chrono::naive::{NaiveDate, NaiveDateTime};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":481083,"byte_end":481135,"line_start":464,"line_end":464,"column_start":5,"column_end":57}},{"value":"/ # use serde_derive::Serialize;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":481140,"byte_end":481174,"line_start":465,"line_end":465,"column_start":5,"column_end":39}},{"value":"/ use chrono::naive::serde::ts_microseconds_option::serialize as to_micro_tsopt;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":481179,"byte_end":481261,"line_start":466,"line_end":466,"column_start":5,"column_end":87}},{"value":"/ #[derive(Serialize)]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":481266,"byte_end":481290,"line_start":467,"line_end":467,"column_start":5,"column_end":29}},{"value":"/ struct S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":481295,"byte_end":481309,"line_start":468,"line_end":468,"column_start":5,"column_end":19}},{"value":"/     #[serde(serialize_with = \"to_micro_tsopt\")]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":481314,"byte_end":481365,"line_start":469,"line_end":469,"column_start":5,"column_end":56}},{"value":"/     time: Option<NaiveDateTime>","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":481370,"byte_end":481405,"line_start":470,"line_end":470,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":481410,"byte_end":481415,"line_start":471,"line_end":471,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":481420,"byte_end":481423,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ let my_s = S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":481428,"byte_end":481446,"line_start":473,"line_end":473,"column_start":5,"column_end":23}},{"value":"/     time: Some(NaiveDate::from_ymd(2018, 5, 17).and_hms_micro(02, 04, 59, 918355)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":481451,"byte_end":481538,"line_start":474,"line_end":474,"column_start":5,"column_end":92}},{"value":"/ };","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":481543,"byte_end":481549,"line_start":475,"line_end":475,"column_start":5,"column_end":11}},{"value":"/ let as_string = serde_json::to_string(&my_s)?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":481554,"byte_end":481604,"line_start":476,"line_end":476,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(as_string, r#\"{\"time\":1526522699918355}\"#);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":481609,"byte_end":481667,"line_start":477,"line_end":477,"column_start":5,"column_end":63}},{"value":"/ # Ok::<(), serde_json::Error>(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":481672,"byte_end":481709,"line_start":478,"line_end":478,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":481714,"byte_end":481721,"line_start":479,"line_end":479,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":1978},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":482731,"byte_end":482742,"line_start":509,"line_end":509,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::naive::datetime::serde::ts_microseconds_option::deserialize","value":"fn deserialize<'de, D>(D) -> Result<Option<NaiveDateTime>, D::Error> where\nD: de::Deserializer","parent":null,"children":[],"decl_id":null,"docs":" Deserialize a `NaiveDateTime` from a nanosecond timestamp or none","sig":null,"attributes":[{"value":"/ Deserialize a `NaiveDateTime` from a nanosecond timestamp or none","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":482031,"byte_end":482100,"line_start":490,"line_end":490,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":482105,"byte_end":482108,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ Intended for use with `serde`s `deserialize_with` attribute.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":482113,"byte_end":482177,"line_start":492,"line_end":492,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":482182,"byte_end":482185,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ # Example:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":482190,"byte_end":482204,"line_start":494,"line_end":494,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":482209,"byte_end":482212,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":482217,"byte_end":482228,"line_start":496,"line_end":496,"column_start":5,"column_end":16}},{"value":"/ # use chrono::naive::{NaiveDate, NaiveDateTime};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":482233,"byte_end":482285,"line_start":497,"line_end":497,"column_start":5,"column_end":57}},{"value":"/ # use serde_derive::Deserialize;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":482290,"byte_end":482326,"line_start":498,"line_end":498,"column_start":5,"column_end":41}},{"value":"/ use chrono::naive::serde::ts_microseconds_option::deserialize as from_micro_tsopt;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":482331,"byte_end":482417,"line_start":499,"line_end":499,"column_start":5,"column_end":91}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":482422,"byte_end":482448,"line_start":500,"line_end":500,"column_start":5,"column_end":31}},{"value":"/ struct S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":482453,"byte_end":482467,"line_start":501,"line_end":501,"column_start":5,"column_end":19}},{"value":"/     #[serde(deserialize_with = \"from_micro_tsopt\")]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":482472,"byte_end":482527,"line_start":502,"line_end":502,"column_start":5,"column_end":60}},{"value":"/     time: Option<NaiveDateTime>","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":482532,"byte_end":482567,"line_start":503,"line_end":503,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":482572,"byte_end":482577,"line_start":504,"line_end":504,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":482582,"byte_end":482585,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ let my_s: S = serde_json::from_str(r#\"{ \"time\": 1526522699918355 }\"#)?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":482590,"byte_end":482665,"line_start":506,"line_end":506,"column_start":5,"column_end":80}},{"value":"/ # Ok::<(), serde_json::Error>(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":482670,"byte_end":482707,"line_start":507,"line_end":507,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":482712,"byte_end":482719,"line_start":508,"line_end":508,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":1993},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":484723,"byte_end":484738,"line_start":576,"line_end":576,"column_start":9,"column_end":24},"name":"ts_milliseconds","qualname":"::naive::datetime::serde::ts_milliseconds","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","parent":null,"children":[{"krate":0,"index":1994},{"krate":0,"index":1997},{"krate":0,"index":1998},{"krate":0,"index":2001},{"krate":0,"index":2004},{"krate":0,"index":2007},{"krate":0,"index":2010},{"krate":0,"index":2012},{"krate":0,"index":2015},{"krate":0,"index":2017}],"decl_id":null,"docs":" Used to serialize/deserialize from millisecond-precision timestamps","sig":null,"attributes":[{"value":"/ Used to serialize/deserialize from millisecond-precision timestamps","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":483954,"byte_end":484025,"line_start":551,"line_end":551,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":484026,"byte_end":484029,"line_start":552,"line_end":552,"column_start":1,"column_end":4}},{"value":"/ # Example:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":484030,"byte_end":484044,"line_start":553,"line_end":553,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":484045,"byte_end":484048,"line_start":554,"line_end":554,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":484049,"byte_end":484060,"line_start":555,"line_end":555,"column_start":1,"column_end":12}},{"value":"/ # use chrono::{NaiveDate, NaiveDateTime};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":484061,"byte_end":484106,"line_start":556,"line_end":556,"column_start":1,"column_end":46}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":484107,"byte_end":484156,"line_start":557,"line_end":557,"column_start":1,"column_end":50}},{"value":"/ use chrono::naive::serde::ts_milliseconds;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":484157,"byte_end":484203,"line_start":558,"line_end":558,"column_start":1,"column_end":47}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":484204,"byte_end":484241,"line_start":559,"line_end":559,"column_start":1,"column_end":38}},{"value":"/ struct S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":484242,"byte_end":484256,"line_start":560,"line_end":560,"column_start":1,"column_end":15}},{"value":"/     #[serde(with = \"ts_milliseconds\")]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":484257,"byte_end":484299,"line_start":561,"line_end":561,"column_start":1,"column_end":43}},{"value":"/     time: NaiveDateTime","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":484300,"byte_end":484327,"line_start":562,"line_end":562,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":484328,"byte_end":484333,"line_start":563,"line_end":563,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":484334,"byte_end":484337,"line_start":564,"line_end":564,"column_start":1,"column_end":4}},{"value":"/ let time = NaiveDate::from_ymd(2018, 5, 17).and_hms_milli(02, 04, 59, 918);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":484338,"byte_end":484417,"line_start":565,"line_end":565,"column_start":1,"column_end":80}},{"value":"/ let my_s = S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":484418,"byte_end":484436,"line_start":566,"line_end":566,"column_start":1,"column_end":19}},{"value":"/     time: time.clone(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":484437,"byte_end":484464,"line_start":567,"line_end":567,"column_start":1,"column_end":28}},{"value":"/ };","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":484465,"byte_end":484471,"line_start":568,"line_end":568,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":484472,"byte_end":484475,"line_start":569,"line_end":569,"column_start":1,"column_end":4}},{"value":"/ let as_string = serde_json::to_string(&my_s)?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":484476,"byte_end":484526,"line_start":570,"line_end":570,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(as_string, r#\"{\"time\":1526522699918}\"#);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":484527,"byte_end":484582,"line_start":571,"line_end":571,"column_start":1,"column_end":56}},{"value":"/ let my_s: S = serde_json::from_str(&as_string)?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":484583,"byte_end":484635,"line_start":572,"line_end":572,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(my_s.time, time);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":484636,"byte_end":484668,"line_start":573,"line_end":573,"column_start":1,"column_end":33}},{"value":"/ # Ok::<(), serde_json::Error>(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":484669,"byte_end":484706,"line_start":574,"line_end":574,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":484707,"byte_end":484714,"line_start":575,"line_end":575,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2010},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":485671,"byte_end":485680,"line_start":606,"line_end":606,"column_start":12,"column_end":21},"name":"serialize","qualname":"::naive::datetime::serde::ts_milliseconds::serialize","value":"fn serialize<S>(&NaiveDateTime, S) -> Result<S::Ok, S::Error> where\nS: ser::Serializer","parent":null,"children":[],"decl_id":null,"docs":" Serialize a datetime into an integer number of milliseconds since the epoch","sig":null,"attributes":[{"value":"/ Serialize a datetime into an integer number of milliseconds since the epoch","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":484851,"byte_end":484930,"line_start":583,"line_end":583,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":484935,"byte_end":484938,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ Intended for use with `serde`s `serialize_with` attribute.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":484943,"byte_end":485005,"line_start":585,"line_end":585,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":485010,"byte_end":485013,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ # Example:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":485018,"byte_end":485032,"line_start":587,"line_end":587,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":485037,"byte_end":485040,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":485045,"byte_end":485056,"line_start":589,"line_end":589,"column_start":5,"column_end":16}},{"value":"/ # use chrono::{NaiveDate, NaiveDateTime};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":485061,"byte_end":485106,"line_start":590,"line_end":590,"column_start":5,"column_end":50}},{"value":"/ # use serde_derive::Serialize;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":485111,"byte_end":485145,"line_start":591,"line_end":591,"column_start":5,"column_end":39}},{"value":"/ use chrono::naive::serde::ts_milliseconds::serialize as to_milli_ts;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":485150,"byte_end":485222,"line_start":592,"line_end":592,"column_start":5,"column_end":77}},{"value":"/ #[derive(Serialize)]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":485227,"byte_end":485251,"line_start":593,"line_end":593,"column_start":5,"column_end":29}},{"value":"/ struct S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":485256,"byte_end":485270,"line_start":594,"line_end":594,"column_start":5,"column_end":19}},{"value":"/     #[serde(serialize_with = \"to_milli_ts\")]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":485275,"byte_end":485323,"line_start":595,"line_end":595,"column_start":5,"column_end":53}},{"value":"/     time: NaiveDateTime","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":485328,"byte_end":485355,"line_start":596,"line_end":596,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":485360,"byte_end":485365,"line_start":597,"line_end":597,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":485370,"byte_end":485373,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ let my_s = S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":485378,"byte_end":485396,"line_start":599,"line_end":599,"column_start":5,"column_end":23}},{"value":"/     time: NaiveDate::from_ymd(2018, 5, 17).and_hms_milli(02, 04, 59, 918),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":485401,"byte_end":485479,"line_start":600,"line_end":600,"column_start":5,"column_end":83}},{"value":"/ };","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":485484,"byte_end":485490,"line_start":601,"line_end":601,"column_start":5,"column_end":11}},{"value":"/ let as_string = serde_json::to_string(&my_s)?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":485495,"byte_end":485545,"line_start":602,"line_end":602,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(as_string, r#\"{\"time\":1526522699918}\"#);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":485550,"byte_end":485605,"line_start":603,"line_end":603,"column_start":5,"column_end":60}},{"value":"/ # Ok::<(), serde_json::Error>(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":485610,"byte_end":485647,"line_start":604,"line_end":604,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":485652,"byte_end":485659,"line_start":605,"line_end":605,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":2012},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":486507,"byte_end":486518,"line_start":632,"line_end":632,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::naive::datetime::serde::ts_milliseconds::deserialize","value":"fn deserialize<'de, D>(D) -> Result<NaiveDateTime, D::Error> where\nD: de::Deserializer","parent":null,"children":[],"decl_id":null,"docs":" Deserialize a `NaiveDateTime` from a milliseconds timestamp","sig":null,"attributes":[{"value":"/ Deserialize a `NaiveDateTime` from a milliseconds timestamp","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":485857,"byte_end":485920,"line_start":613,"line_end":613,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":485925,"byte_end":485928,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ Intended for use with `serde`s `deserialize_with` attribute.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":485933,"byte_end":485997,"line_start":615,"line_end":615,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":486002,"byte_end":486005,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ # Example:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":486010,"byte_end":486024,"line_start":617,"line_end":617,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":486029,"byte_end":486032,"line_start":618,"line_end":618,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":486037,"byte_end":486048,"line_start":619,"line_end":619,"column_start":5,"column_end":16}},{"value":"/ # use chrono::NaiveDateTime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":486053,"byte_end":486085,"line_start":620,"line_end":620,"column_start":5,"column_end":37}},{"value":"/ # use serde_derive::Deserialize;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":486090,"byte_end":486126,"line_start":621,"line_end":621,"column_start":5,"column_end":41}},{"value":"/ use chrono::naive::serde::ts_milliseconds::deserialize as from_milli_ts;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":486131,"byte_end":486207,"line_start":622,"line_end":622,"column_start":5,"column_end":81}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":486212,"byte_end":486238,"line_start":623,"line_end":623,"column_start":5,"column_end":31}},{"value":"/ struct S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":486243,"byte_end":486257,"line_start":624,"line_end":624,"column_start":5,"column_end":19}},{"value":"/     #[serde(deserialize_with = \"from_milli_ts\")]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":486262,"byte_end":486314,"line_start":625,"line_end":625,"column_start":5,"column_end":57}},{"value":"/     time: NaiveDateTime","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":486319,"byte_end":486346,"line_start":626,"line_end":626,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":486351,"byte_end":486356,"line_start":627,"line_end":627,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":486361,"byte_end":486364,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ let my_s: S = serde_json::from_str(r#\"{ \"time\": 1526522699918 }\"#)?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":486369,"byte_end":486441,"line_start":629,"line_end":629,"column_start":5,"column_end":77}},{"value":"/ # Ok::<(), serde_json::Error>(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":486446,"byte_end":486483,"line_start":630,"line_end":630,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":486488,"byte_end":486495,"line_start":631,"line_end":631,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":2027},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":488460,"byte_end":488482,"line_start":696,"line_end":696,"column_start":9,"column_end":31},"name":"ts_milliseconds_option","qualname":"::naive::datetime::serde::ts_milliseconds_option","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","parent":null,"children":[{"krate":0,"index":2028},{"krate":0,"index":2031},{"krate":0,"index":2032},{"krate":0,"index":2035},{"krate":0,"index":2038},{"krate":0,"index":2039},{"krate":0,"index":2041},{"krate":0,"index":2044},{"krate":0,"index":2046},{"krate":0,"index":2049},{"krate":0,"index":2051}],"decl_id":null,"docs":" Ser/de to/from optional timestamps in milliseconds","sig":null,"attributes":[{"value":"/ Ser/de to/from optional timestamps in milliseconds","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":487615,"byte_end":487669,"line_start":669,"line_end":669,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":487670,"byte_end":487673,"line_start":670,"line_end":670,"column_start":1,"column_end":4}},{"value":"/ Intended for use with `serde`'s `with` attribute.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":487674,"byte_end":487727,"line_start":671,"line_end":671,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":487728,"byte_end":487731,"line_start":672,"line_end":672,"column_start":1,"column_end":4}},{"value":"/ # Example:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":487732,"byte_end":487746,"line_start":673,"line_end":673,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":487747,"byte_end":487750,"line_start":674,"line_end":674,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":487751,"byte_end":487762,"line_start":675,"line_end":675,"column_start":1,"column_end":12}},{"value":"/ # use chrono::naive::{NaiveDate, NaiveDateTime};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":487763,"byte_end":487815,"line_start":676,"line_end":676,"column_start":1,"column_end":53}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":487816,"byte_end":487865,"line_start":677,"line_end":677,"column_start":1,"column_end":50}},{"value":"/ use chrono::naive::serde::ts_milliseconds_option;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":487866,"byte_end":487919,"line_start":678,"line_end":678,"column_start":1,"column_end":54}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":487920,"byte_end":487957,"line_start":679,"line_end":679,"column_start":1,"column_end":38}},{"value":"/ struct S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":487958,"byte_end":487972,"line_start":680,"line_end":680,"column_start":1,"column_end":15}},{"value":"/     #[serde(with = \"ts_milliseconds_option\")]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":487973,"byte_end":488022,"line_start":681,"line_end":681,"column_start":1,"column_end":50}},{"value":"/     time: Option<NaiveDateTime>","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":488023,"byte_end":488058,"line_start":682,"line_end":682,"column_start":1,"column_end":36}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":488059,"byte_end":488064,"line_start":683,"line_end":683,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":488065,"byte_end":488068,"line_start":684,"line_end":684,"column_start":1,"column_end":4}},{"value":"/ let time = Some(NaiveDate::from_ymd(2018, 5, 17).and_hms_milli(02, 04, 59, 918));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":488069,"byte_end":488154,"line_start":685,"line_end":685,"column_start":1,"column_end":86}},{"value":"/ let my_s = S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":488155,"byte_end":488173,"line_start":686,"line_end":686,"column_start":1,"column_end":19}},{"value":"/     time: time.clone(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":488174,"byte_end":488201,"line_start":687,"line_end":687,"column_start":1,"column_end":28}},{"value":"/ };","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":488202,"byte_end":488208,"line_start":688,"line_end":688,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":488209,"byte_end":488212,"line_start":689,"line_end":689,"column_start":1,"column_end":4}},{"value":"/ let as_string = serde_json::to_string(&my_s)?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":488213,"byte_end":488263,"line_start":690,"line_end":690,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(as_string, r#\"{\"time\":1526522699918}\"#);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":488264,"byte_end":488319,"line_start":691,"line_end":691,"column_start":1,"column_end":56}},{"value":"/ let my_s: S = serde_json::from_str(&as_string)?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":488320,"byte_end":488372,"line_start":692,"line_end":692,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(my_s.time, time);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":488373,"byte_end":488405,"line_start":693,"line_end":693,"column_start":1,"column_end":33}},{"value":"/ # Ok::<(), serde_json::Error>(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":488406,"byte_end":488443,"line_start":694,"line_end":694,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":488444,"byte_end":488451,"line_start":695,"line_end":695,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2044},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":489490,"byte_end":489499,"line_start":726,"line_end":726,"column_start":12,"column_end":21},"name":"serialize","qualname":"::naive::datetime::serde::ts_milliseconds_option::serialize","value":"fn serialize<S>(&Option<NaiveDateTime>, S) -> Result<S::Ok, S::Error> where\nS: ser::Serializer","parent":null,"children":[],"decl_id":null,"docs":" Serialize a datetime into an integer number of milliseconds since the epoch or none","sig":null,"attributes":[{"value":"/ Serialize a datetime into an integer number of milliseconds since the epoch or none","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":488628,"byte_end":488715,"line_start":703,"line_end":703,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":488720,"byte_end":488723,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ Intended for use with `serde`s `serialize_with` attribute.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":488728,"byte_end":488790,"line_start":705,"line_end":705,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":488795,"byte_end":488798,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ # Example:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":488803,"byte_end":488817,"line_start":707,"line_end":707,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":488822,"byte_end":488825,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":488830,"byte_end":488841,"line_start":709,"line_end":709,"column_start":5,"column_end":16}},{"value":"/ # use chrono::naive::{NaiveDate, NaiveDateTime};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":488846,"byte_end":488898,"line_start":710,"line_end":710,"column_start":5,"column_end":57}},{"value":"/ # use serde_derive::Serialize;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":488903,"byte_end":488937,"line_start":711,"line_end":711,"column_start":5,"column_end":39}},{"value":"/ use chrono::naive::serde::ts_milliseconds_option::serialize as to_milli_tsopt;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":488942,"byte_end":489024,"line_start":712,"line_end":712,"column_start":5,"column_end":87}},{"value":"/ #[derive(Serialize)]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":489029,"byte_end":489053,"line_start":713,"line_end":713,"column_start":5,"column_end":29}},{"value":"/ struct S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":489058,"byte_end":489072,"line_start":714,"line_end":714,"column_start":5,"column_end":19}},{"value":"/     #[serde(serialize_with = \"to_milli_tsopt\")]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":489077,"byte_end":489128,"line_start":715,"line_end":715,"column_start":5,"column_end":56}},{"value":"/     time: Option<NaiveDateTime>","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":489133,"byte_end":489168,"line_start":716,"line_end":716,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":489173,"byte_end":489178,"line_start":717,"line_end":717,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":489183,"byte_end":489186,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ let my_s = S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":489191,"byte_end":489209,"line_start":719,"line_end":719,"column_start":5,"column_end":23}},{"value":"/     time: Some(NaiveDate::from_ymd(2018, 5, 17).and_hms_milli(02, 04, 59, 918)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":489214,"byte_end":489298,"line_start":720,"line_end":720,"column_start":5,"column_end":89}},{"value":"/ };","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":489303,"byte_end":489309,"line_start":721,"line_end":721,"column_start":5,"column_end":11}},{"value":"/ let as_string = serde_json::to_string(&my_s)?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":489314,"byte_end":489364,"line_start":722,"line_end":722,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(as_string, r#\"{\"time\":1526522699918}\"#);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":489369,"byte_end":489424,"line_start":723,"line_end":723,"column_start":5,"column_end":60}},{"value":"/ # Ok::<(), serde_json::Error>(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":489429,"byte_end":489466,"line_start":724,"line_end":724,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":489471,"byte_end":489478,"line_start":725,"line_end":725,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":2046},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":490488,"byte_end":490499,"line_start":755,"line_end":755,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::naive::datetime::serde::ts_milliseconds_option::deserialize","value":"fn deserialize<'de, D>(D) -> Result<Option<NaiveDateTime>, D::Error> where\nD: de::Deserializer","parent":null,"children":[],"decl_id":null,"docs":" Deserialize a `NaiveDateTime` from a nanosecond timestamp or none","sig":null,"attributes":[{"value":"/ Deserialize a `NaiveDateTime` from a nanosecond timestamp or none","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":489788,"byte_end":489857,"line_start":736,"line_end":736,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":489862,"byte_end":489865,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ Intended for use with `serde`s `deserialize_with` attribute.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":489870,"byte_end":489934,"line_start":738,"line_end":738,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":489939,"byte_end":489942,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ # Example:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":489947,"byte_end":489961,"line_start":740,"line_end":740,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":489966,"byte_end":489969,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":489974,"byte_end":489985,"line_start":742,"line_end":742,"column_start":5,"column_end":16}},{"value":"/ # use chrono::naive::{NaiveDate, NaiveDateTime};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":489990,"byte_end":490042,"line_start":743,"line_end":743,"column_start":5,"column_end":57}},{"value":"/ # use serde_derive::Deserialize;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":490047,"byte_end":490083,"line_start":744,"line_end":744,"column_start":5,"column_end":41}},{"value":"/ use chrono::naive::serde::ts_milliseconds_option::deserialize as from_milli_tsopt;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":490088,"byte_end":490174,"line_start":745,"line_end":745,"column_start":5,"column_end":91}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":490179,"byte_end":490205,"line_start":746,"line_end":746,"column_start":5,"column_end":31}},{"value":"/ struct S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":490210,"byte_end":490224,"line_start":747,"line_end":747,"column_start":5,"column_end":19}},{"value":"/     #[serde(deserialize_with = \"from_milli_tsopt\")]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":490229,"byte_end":490284,"line_start":748,"line_end":748,"column_start":5,"column_end":60}},{"value":"/     time: Option<NaiveDateTime>","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":490289,"byte_end":490324,"line_start":749,"line_end":749,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":490329,"byte_end":490334,"line_start":750,"line_end":750,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":490339,"byte_end":490342,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ let my_s: S = serde_json::from_str(r#\"{ \"time\": 1526522699918355 }\"#)?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":490347,"byte_end":490422,"line_start":752,"line_end":752,"column_start":5,"column_end":80}},{"value":"/ # Ok::<(), serde_json::Error>(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":490427,"byte_end":490464,"line_start":753,"line_end":753,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":490469,"byte_end":490476,"line_start":754,"line_end":754,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":2061},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":492449,"byte_end":492459,"line_start":822,"line_end":822,"column_start":9,"column_end":19},"name":"ts_seconds","qualname":"::naive::datetime::serde::ts_seconds","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","parent":null,"children":[{"krate":0,"index":2062},{"krate":0,"index":2065},{"krate":0,"index":2066},{"krate":0,"index":2069},{"krate":0,"index":2072},{"krate":0,"index":2075},{"krate":0,"index":2078},{"krate":0,"index":2080},{"krate":0,"index":2083},{"krate":0,"index":2085}],"decl_id":null,"docs":" Used to serialize/deserialize from second-precision timestamps","sig":null,"attributes":[{"value":"/ Used to serialize/deserialize from second-precision timestamps","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":491711,"byte_end":491777,"line_start":797,"line_end":797,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":491778,"byte_end":491781,"line_start":798,"line_end":798,"column_start":1,"column_end":4}},{"value":"/ # Example:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":491782,"byte_end":491796,"line_start":799,"line_end":799,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":491797,"byte_end":491800,"line_start":800,"line_end":800,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":491801,"byte_end":491812,"line_start":801,"line_end":801,"column_start":1,"column_end":12}},{"value":"/ # use chrono::{NaiveDate, NaiveDateTime};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":491813,"byte_end":491858,"line_start":802,"line_end":802,"column_start":1,"column_end":46}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":491859,"byte_end":491908,"line_start":803,"line_end":803,"column_start":1,"column_end":50}},{"value":"/ use chrono::naive::serde::ts_seconds;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":491909,"byte_end":491950,"line_start":804,"line_end":804,"column_start":1,"column_end":42}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":491951,"byte_end":491988,"line_start":805,"line_end":805,"column_start":1,"column_end":38}},{"value":"/ struct S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":491989,"byte_end":492003,"line_start":806,"line_end":806,"column_start":1,"column_end":15}},{"value":"/     #[serde(with = \"ts_seconds\")]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":492004,"byte_end":492041,"line_start":807,"line_end":807,"column_start":1,"column_end":38}},{"value":"/     time: NaiveDateTime","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":492042,"byte_end":492069,"line_start":808,"line_end":808,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":492070,"byte_end":492075,"line_start":809,"line_end":809,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":492076,"byte_end":492079,"line_start":810,"line_end":810,"column_start":1,"column_end":4}},{"value":"/ let time = NaiveDate::from_ymd(2015, 5, 15).and_hms(10, 0, 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":492080,"byte_end":492146,"line_start":811,"line_end":811,"column_start":1,"column_end":67}},{"value":"/ let my_s = S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":492147,"byte_end":492165,"line_start":812,"line_end":812,"column_start":1,"column_end":19}},{"value":"/     time: time.clone(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":492166,"byte_end":492193,"line_start":813,"line_end":813,"column_start":1,"column_end":28}},{"value":"/ };","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":492194,"byte_end":492200,"line_start":814,"line_end":814,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":492201,"byte_end":492204,"line_start":815,"line_end":815,"column_start":1,"column_end":4}},{"value":"/ let as_string = serde_json::to_string(&my_s)?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":492205,"byte_end":492255,"line_start":816,"line_end":816,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(as_string, r#\"{\"time\":1431684000}\"#);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":492256,"byte_end":492308,"line_start":817,"line_end":817,"column_start":1,"column_end":53}},{"value":"/ let my_s: S = serde_json::from_str(&as_string)?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":492309,"byte_end":492361,"line_start":818,"line_end":818,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(my_s.time, time);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":492362,"byte_end":492394,"line_start":819,"line_end":819,"column_start":1,"column_end":33}},{"value":"/ # Ok::<(), serde_json::Error>(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":492395,"byte_end":492432,"line_start":820,"line_end":820,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":492433,"byte_end":492440,"line_start":821,"line_end":821,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2078},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":493354,"byte_end":493363,"line_start":852,"line_end":852,"column_start":12,"column_end":21},"name":"serialize","qualname":"::naive::datetime::serde::ts_seconds::serialize","value":"fn serialize<S>(&NaiveDateTime, S) -> Result<S::Ok, S::Error> where\nS: ser::Serializer","parent":null,"children":[],"decl_id":null,"docs":" Serialize a datetime into an integer number of seconds since the epoch","sig":null,"attributes":[{"value":"/ Serialize a datetime into an integer number of seconds since the epoch","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":492572,"byte_end":492646,"line_start":829,"line_end":829,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":492651,"byte_end":492654,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ Intended for use with `serde`s `serialize_with` attribute.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":492659,"byte_end":492721,"line_start":831,"line_end":831,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":492726,"byte_end":492729,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ # Example:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":492734,"byte_end":492748,"line_start":833,"line_end":833,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":492753,"byte_end":492756,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":492761,"byte_end":492772,"line_start":835,"line_end":835,"column_start":5,"column_end":16}},{"value":"/ # use chrono::{NaiveDate, NaiveDateTime};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":492777,"byte_end":492822,"line_start":836,"line_end":836,"column_start":5,"column_end":50}},{"value":"/ # use serde_derive::Serialize;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":492827,"byte_end":492861,"line_start":837,"line_end":837,"column_start":5,"column_end":39}},{"value":"/ use chrono::naive::serde::ts_seconds::serialize as to_ts;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":492866,"byte_end":492927,"line_start":838,"line_end":838,"column_start":5,"column_end":66}},{"value":"/ #[derive(Serialize)]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":492932,"byte_end":492956,"line_start":839,"line_end":839,"column_start":5,"column_end":29}},{"value":"/ struct S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":492961,"byte_end":492975,"line_start":840,"line_end":840,"column_start":5,"column_end":19}},{"value":"/     #[serde(serialize_with = \"to_ts\")]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":492980,"byte_end":493022,"line_start":841,"line_end":841,"column_start":5,"column_end":47}},{"value":"/     time: NaiveDateTime","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":493027,"byte_end":493054,"line_start":842,"line_end":842,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":493059,"byte_end":493064,"line_start":843,"line_end":843,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":493069,"byte_end":493072,"line_start":844,"line_end":844,"column_start":5,"column_end":8}},{"value":"/ let my_s = S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":493077,"byte_end":493095,"line_start":845,"line_end":845,"column_start":5,"column_end":23}},{"value":"/     time: NaiveDate::from_ymd(2015, 5, 15).and_hms(10, 0, 0),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":493100,"byte_end":493165,"line_start":846,"line_end":846,"column_start":5,"column_end":70}},{"value":"/ };","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":493170,"byte_end":493176,"line_start":847,"line_end":847,"column_start":5,"column_end":11}},{"value":"/ let as_string = serde_json::to_string(&my_s)?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":493181,"byte_end":493231,"line_start":848,"line_end":848,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(as_string, r#\"{\"time\":1431684000}\"#);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":493236,"byte_end":493288,"line_start":849,"line_end":849,"column_start":5,"column_end":57}},{"value":"/ # Ok::<(), serde_json::Error>(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":493293,"byte_end":493330,"line_start":850,"line_end":850,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":493335,"byte_end":493342,"line_start":851,"line_end":851,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":2080},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":494158,"byte_end":494169,"line_start":878,"line_end":878,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::naive::datetime::serde::ts_seconds::deserialize","value":"fn deserialize<'de, D>(D) -> Result<NaiveDateTime, D::Error> where\nD: de::Deserializer","parent":null,"children":[],"decl_id":null,"docs":" Deserialize a `NaiveDateTime` from a seconds timestamp","sig":null,"attributes":[{"value":"/ Deserialize a `NaiveDateTime` from a seconds timestamp","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":493533,"byte_end":493591,"line_start":859,"line_end":859,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":493596,"byte_end":493599,"line_start":860,"line_end":860,"column_start":5,"column_end":8}},{"value":"/ Intended for use with `serde`s `deserialize_with` attribute.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":493604,"byte_end":493668,"line_start":861,"line_end":861,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":493673,"byte_end":493676,"line_start":862,"line_end":862,"column_start":5,"column_end":8}},{"value":"/ # Example:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":493681,"byte_end":493695,"line_start":863,"line_end":863,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":493700,"byte_end":493703,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":493708,"byte_end":493719,"line_start":865,"line_end":865,"column_start":5,"column_end":16}},{"value":"/ # use chrono::NaiveDateTime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":493724,"byte_end":493756,"line_start":866,"line_end":866,"column_start":5,"column_end":37}},{"value":"/ # use serde_derive::Deserialize;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":493761,"byte_end":493797,"line_start":867,"line_end":867,"column_start":5,"column_end":41}},{"value":"/ use chrono::naive::serde::ts_seconds::deserialize as from_ts;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":493802,"byte_end":493867,"line_start":868,"line_end":868,"column_start":5,"column_end":70}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":493872,"byte_end":493898,"line_start":869,"line_end":869,"column_start":5,"column_end":31}},{"value":"/ struct S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":493903,"byte_end":493917,"line_start":870,"line_end":870,"column_start":5,"column_end":19}},{"value":"/     #[serde(deserialize_with = \"from_ts\")]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":493922,"byte_end":493968,"line_start":871,"line_end":871,"column_start":5,"column_end":51}},{"value":"/     time: NaiveDateTime","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":493973,"byte_end":494000,"line_start":872,"line_end":872,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":494005,"byte_end":494010,"line_start":873,"line_end":873,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":494015,"byte_end":494018,"line_start":874,"line_end":874,"column_start":5,"column_end":8}},{"value":"/ let my_s: S = serde_json::from_str(r#\"{ \"time\": 1431684000 }\"#)?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":494023,"byte_end":494092,"line_start":875,"line_end":875,"column_start":5,"column_end":74}},{"value":"/ # Ok::<(), serde_json::Error>(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":494097,"byte_end":494134,"line_start":876,"line_end":876,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":494139,"byte_end":494146,"line_start":877,"line_end":877,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":2095},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":495940,"byte_end":495957,"line_start":939,"line_end":939,"column_start":9,"column_end":26},"name":"ts_seconds_option","qualname":"::naive::datetime::serde::ts_seconds_option","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","parent":null,"children":[{"krate":0,"index":2096},{"krate":0,"index":2099},{"krate":0,"index":2100},{"krate":0,"index":2103},{"krate":0,"index":2106},{"krate":0,"index":2107},{"krate":0,"index":2109},{"krate":0,"index":2112},{"krate":0,"index":2114},{"krate":0,"index":2117},{"krate":0,"index":2119}],"decl_id":null,"docs":" Ser/de to/from optional timestamps in seconds","sig":null,"attributes":[{"value":"/ Ser/de to/from optional timestamps in seconds","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":495124,"byte_end":495173,"line_start":912,"line_end":912,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":495174,"byte_end":495177,"line_start":913,"line_end":913,"column_start":1,"column_end":4}},{"value":"/ Intended for use with `serde`'s `with` attribute.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":495178,"byte_end":495231,"line_start":914,"line_end":914,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":495232,"byte_end":495235,"line_start":915,"line_end":915,"column_start":1,"column_end":4}},{"value":"/ # Example:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":495236,"byte_end":495250,"line_start":916,"line_end":916,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":495251,"byte_end":495254,"line_start":917,"line_end":917,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":495255,"byte_end":495266,"line_start":918,"line_end":918,"column_start":1,"column_end":12}},{"value":"/ # use chrono::naive::{NaiveDate, NaiveDateTime};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":495267,"byte_end":495319,"line_start":919,"line_end":919,"column_start":1,"column_end":53}},{"value":"/ # use serde_derive::{Deserialize, Serialize};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":495320,"byte_end":495369,"line_start":920,"line_end":920,"column_start":1,"column_end":50}},{"value":"/ use chrono::naive::serde::ts_seconds_option;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":495370,"byte_end":495418,"line_start":921,"line_end":921,"column_start":1,"column_end":49}},{"value":"/ #[derive(Deserialize, Serialize)]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":495419,"byte_end":495456,"line_start":922,"line_end":922,"column_start":1,"column_end":38}},{"value":"/ struct S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":495457,"byte_end":495471,"line_start":923,"line_end":923,"column_start":1,"column_end":15}},{"value":"/     #[serde(with = \"ts_seconds_option\")]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":495472,"byte_end":495516,"line_start":924,"line_end":924,"column_start":1,"column_end":45}},{"value":"/     time: Option<NaiveDateTime>","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":495517,"byte_end":495552,"line_start":925,"line_end":925,"column_start":1,"column_end":36}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":495553,"byte_end":495558,"line_start":926,"line_end":926,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":495559,"byte_end":495562,"line_start":927,"line_end":927,"column_start":1,"column_end":4}},{"value":"/ let time = Some(NaiveDate::from_ymd(2018, 5, 17).and_hms(02, 04, 59));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":495563,"byte_end":495637,"line_start":928,"line_end":928,"column_start":1,"column_end":75}},{"value":"/ let my_s = S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":495638,"byte_end":495656,"line_start":929,"line_end":929,"column_start":1,"column_end":19}},{"value":"/     time: time.clone(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":495657,"byte_end":495684,"line_start":930,"line_end":930,"column_start":1,"column_end":28}},{"value":"/ };","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":495685,"byte_end":495691,"line_start":931,"line_end":931,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":495692,"byte_end":495695,"line_start":932,"line_end":932,"column_start":1,"column_end":4}},{"value":"/ let as_string = serde_json::to_string(&my_s)?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":495696,"byte_end":495746,"line_start":933,"line_end":933,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(as_string, r#\"{\"time\":1526522699}\"#);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":495747,"byte_end":495799,"line_start":934,"line_end":934,"column_start":1,"column_end":53}},{"value":"/ let my_s: S = serde_json::from_str(&as_string)?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":495800,"byte_end":495852,"line_start":935,"line_end":935,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(my_s.time, time);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":495853,"byte_end":495885,"line_start":936,"line_end":936,"column_start":1,"column_end":33}},{"value":"/ # Ok::<(), serde_json::Error>(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":495886,"byte_end":495923,"line_start":937,"line_end":937,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":495924,"byte_end":495931,"line_start":938,"line_end":938,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":2112},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":496919,"byte_end":496928,"line_start":969,"line_end":969,"column_start":12,"column_end":21},"name":"serialize","qualname":"::naive::datetime::serde::ts_seconds_option::serialize","value":"fn serialize<S>(&Option<NaiveDateTime>, S) -> Result<S::Ok, S::Error> where\nS: ser::Serializer","parent":null,"children":[],"decl_id":null,"docs":" Serialize a datetime into an integer number of seconds since the epoch or none","sig":null,"attributes":[{"value":"/ Serialize a datetime into an integer number of seconds since the epoch or none","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":496093,"byte_end":496175,"line_start":946,"line_end":946,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":496180,"byte_end":496183,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ Intended for use with `serde`s `serialize_with` attribute.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":496188,"byte_end":496250,"line_start":948,"line_end":948,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":496255,"byte_end":496258,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/ # Example:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":496263,"byte_end":496277,"line_start":950,"line_end":950,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":496282,"byte_end":496285,"line_start":951,"line_end":951,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":496290,"byte_end":496301,"line_start":952,"line_end":952,"column_start":5,"column_end":16}},{"value":"/ # use chrono::naive::{NaiveDate, NaiveDateTime};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":496306,"byte_end":496358,"line_start":953,"line_end":953,"column_start":5,"column_end":57}},{"value":"/ # use serde_derive::Serialize;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":496363,"byte_end":496397,"line_start":954,"line_end":954,"column_start":5,"column_end":39}},{"value":"/ use chrono::naive::serde::ts_seconds_option::serialize as to_tsopt;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":496402,"byte_end":496473,"line_start":955,"line_end":955,"column_start":5,"column_end":76}},{"value":"/ #[derive(Serialize)]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":496478,"byte_end":496502,"line_start":956,"line_end":956,"column_start":5,"column_end":29}},{"value":"/ struct S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":496507,"byte_end":496521,"line_start":957,"line_end":957,"column_start":5,"column_end":19}},{"value":"/     #[serde(serialize_with = \"to_tsopt\")]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":496526,"byte_end":496571,"line_start":958,"line_end":958,"column_start":5,"column_end":50}},{"value":"/     time: Option<NaiveDateTime>","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":496576,"byte_end":496611,"line_start":959,"line_end":959,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":496616,"byte_end":496621,"line_start":960,"line_end":960,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":496626,"byte_end":496629,"line_start":961,"line_end":961,"column_start":5,"column_end":8}},{"value":"/ let my_s = S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":496634,"byte_end":496652,"line_start":962,"line_end":962,"column_start":5,"column_end":23}},{"value":"/     time: Some(NaiveDate::from_ymd(2018, 5, 17).and_hms(02, 04, 59)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":496657,"byte_end":496730,"line_start":963,"line_end":963,"column_start":5,"column_end":78}},{"value":"/ };","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":496735,"byte_end":496741,"line_start":964,"line_end":964,"column_start":5,"column_end":11}},{"value":"/ let as_string = serde_json::to_string(&my_s)?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":496746,"byte_end":496796,"line_start":965,"line_end":965,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(as_string, r#\"{\"time\":1526522699}\"#);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":496801,"byte_end":496853,"line_start":966,"line_end":966,"column_start":5,"column_end":57}},{"value":"/ # Ok::<(), serde_json::Error>(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":496858,"byte_end":496895,"line_start":967,"line_end":967,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":496900,"byte_end":496907,"line_start":968,"line_end":968,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":2114},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":497883,"byte_end":497894,"line_start":998,"line_end":998,"column_start":12,"column_end":23},"name":"deserialize","qualname":"::naive::datetime::serde::ts_seconds_option::deserialize","value":"fn deserialize<'de, D>(D) -> Result<Option<NaiveDateTime>, D::Error> where\nD: de::Deserializer","parent":null,"children":[],"decl_id":null,"docs":" Deserialize a `NaiveDateTime` from a second timestamp or none","sig":null,"attributes":[{"value":"/ Deserialize a `NaiveDateTime` from a second timestamp or none","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":497210,"byte_end":497275,"line_start":979,"line_end":979,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":497280,"byte_end":497283,"line_start":980,"line_end":980,"column_start":5,"column_end":8}},{"value":"/ Intended for use with `serde`s `deserialize_with` attribute.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":497288,"byte_end":497352,"line_start":981,"line_end":981,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":497357,"byte_end":497360,"line_start":982,"line_end":982,"column_start":5,"column_end":8}},{"value":"/ # Example:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":497365,"byte_end":497379,"line_start":983,"line_end":983,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":497384,"byte_end":497387,"line_start":984,"line_end":984,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":497392,"byte_end":497403,"line_start":985,"line_end":985,"column_start":5,"column_end":16}},{"value":"/ # use chrono::naive::{NaiveDate, NaiveDateTime};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":497408,"byte_end":497460,"line_start":986,"line_end":986,"column_start":5,"column_end":57}},{"value":"/ # use serde_derive::Deserialize;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":497465,"byte_end":497501,"line_start":987,"line_end":987,"column_start":5,"column_end":41}},{"value":"/ use chrono::naive::serde::ts_seconds_option::deserialize as from_tsopt;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":497506,"byte_end":497581,"line_start":988,"line_end":988,"column_start":5,"column_end":80}},{"value":"/ #[derive(Deserialize)]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":497586,"byte_end":497612,"line_start":989,"line_end":989,"column_start":5,"column_end":31}},{"value":"/ struct S {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":497617,"byte_end":497631,"line_start":990,"line_end":990,"column_start":5,"column_end":19}},{"value":"/     #[serde(deserialize_with = \"from_tsopt\")]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":497636,"byte_end":497685,"line_start":991,"line_end":991,"column_start":5,"column_end":54}},{"value":"/     time: Option<NaiveDateTime>","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":497690,"byte_end":497725,"line_start":992,"line_end":992,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":497730,"byte_end":497735,"line_start":993,"line_end":993,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":497740,"byte_end":497743,"line_start":994,"line_end":994,"column_start":5,"column_end":8}},{"value":"/ let my_s: S = serde_json::from_str(r#\"{ \"time\": 1431684000 }\"#)?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":497748,"byte_end":497817,"line_start":995,"line_end":995,"column_start":5,"column_end":74}},{"value":"/ # Ok::<(), serde_json::Error>(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":497822,"byte_end":497859,"line_start":996,"line_end":996,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":497864,"byte_end":497871,"line_start":997,"line_end":997,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":2153},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":405862,"byte_end":405874,"line_start":44,"line_end":44,"column_start":11,"column_end":23},"name":"MIN_DATETIME","qualname":"::naive::datetime::MIN_DATETIME","value":"NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" The minimum possible `NaiveDateTime`.\n","sig":null,"attributes":[{"value":"/ The minimum possible `NaiveDateTime`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":405737,"byte_end":405778,"line_start":42,"line_end":42,"column_start":1,"column_end":42}},{"value":"deprecated(since = \"0.4.20\", note = \"Use NaiveDateTime::MIN instead\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":405779,"byte_end":405851,"line_start":43,"line_end":43,"column_start":1,"column_end":73}}]},{"kind":"Const","id":{"krate":0,"index":2154},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":406037,"byte_end":406049,"line_start":47,"line_end":47,"column_start":11,"column_end":23},"name":"MAX_DATETIME","qualname":"::naive::datetime::MAX_DATETIME","value":"NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" The maximum possible `NaiveDateTime`.\n","sig":null,"attributes":[{"value":"/ The maximum possible `NaiveDateTime`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":405912,"byte_end":405953,"line_start":45,"line_end":45,"column_start":1,"column_end":42}},{"value":"deprecated(since = \"0.4.20\", note = \"Use NaiveDateTime::MAX instead\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":405954,"byte_end":406026,"line_start":46,"line_end":46,"column_start":1,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":3884},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":407025,"byte_end":407038,"line_start":76,"line_end":76,"column_start":12,"column_end":25},"name":"NaiveDateTime","qualname":"::naive::datetime::NaiveDateTime","value":"NaiveDateTime {  }","parent":null,"children":[{"krate":0,"index":3885},{"krate":0,"index":3886}],"decl_id":null,"docs":" ISO 8601 combined date and time without timezone.","sig":null,"attributes":[{"value":"/ ISO 8601 combined date and time without timezone.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":406088,"byte_end":406141,"line_start":49,"line_end":49,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":406142,"byte_end":406145,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":406146,"byte_end":406159,"line_start":51,"line_end":51,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":406160,"byte_end":406163,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ `NaiveDateTime` is commonly created from [`NaiveDate`](./struct.NaiveDate.html).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":406164,"byte_end":406248,"line_start":53,"line_end":53,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":406249,"byte_end":406252,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":406253,"byte_end":406260,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":406261,"byte_end":406304,"line_start":56,"line_end":56,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":406305,"byte_end":406308,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2016, 7, 8).and_hms(9, 10, 11);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":406309,"byte_end":406388,"line_start":58,"line_end":58,"column_start":1,"column_end":80}},{"value":"/ # let _ = dt;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":406389,"byte_end":406406,"line_start":59,"line_end":59,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":406407,"byte_end":406414,"line_start":60,"line_end":60,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":406415,"byte_end":406418,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ You can use typical [date-like](../trait.Datelike.html) and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":406419,"byte_end":406482,"line_start":62,"line_end":62,"column_start":1,"column_end":64}},{"value":"/ [time-like](../trait.Timelike.html) methods,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":406483,"byte_end":406531,"line_start":63,"line_end":63,"column_start":1,"column_end":49}},{"value":"/ provided that relevant traits are in the scope.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":406532,"byte_end":406583,"line_start":64,"line_end":64,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":406584,"byte_end":406587,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":406588,"byte_end":406595,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/ # use chrono::{NaiveDate, NaiveDateTime};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":406596,"byte_end":406641,"line_start":67,"line_end":67,"column_start":1,"column_end":46}},{"value":"/ # let dt: NaiveDateTime = NaiveDate::from_ymd(2016, 7, 8).and_hms(9, 10, 11);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":406642,"byte_end":406723,"line_start":68,"line_end":68,"column_start":1,"column_end":82}},{"value":"/ use chrono::{Datelike, Timelike, Weekday};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":406724,"byte_end":406770,"line_start":69,"line_end":69,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":406771,"byte_end":406774,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(dt.weekday(), Weekday::Fri);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":406775,"byte_end":406818,"line_start":71,"line_end":71,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(dt.num_seconds_from_midnight(), 33011);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":406819,"byte_end":406873,"line_start":72,"line_end":72,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":406874,"byte_end":406881,"line_start":73,"line_end":73,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":2156},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":407698,"byte_end":407701,"line_start":99,"line_end":99,"column_start":12,"column_end":15},"name":"new","qualname":"<NaiveDateTime>::new","value":"fn new(NaiveDate, NaiveTime) -> NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` from date and time components.\n Equivalent to [`date.and_time(time)`](./struct.NaiveDate.html#method.and_time)\n and many other helper constructors on `NaiveDate`.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` from date and time components.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":407111,"byte_end":407173,"line_start":82,"line_end":82,"column_start":5,"column_end":67}},{"value":"/ Equivalent to [`date.and_time(time)`](./struct.NaiveDate.html#method.and_time)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":407178,"byte_end":407260,"line_start":83,"line_end":83,"column_start":5,"column_end":87}},{"value":"/ and many other helper constructors on `NaiveDate`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":407265,"byte_end":407319,"line_start":84,"line_end":84,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":407324,"byte_end":407327,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":407332,"byte_end":407345,"line_start":86,"line_end":86,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":407350,"byte_end":407353,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":407358,"byte_end":407365,"line_start":88,"line_end":88,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveTime, NaiveDateTime};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":407370,"byte_end":407424,"line_start":89,"line_end":89,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":407429,"byte_end":407432,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_ymd(2015, 6, 3);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":407437,"byte_end":407481,"line_start":91,"line_end":91,"column_start":5,"column_end":49}},{"value":"/ let t = NaiveTime::from_hms_milli(12, 34, 56, 789);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":407486,"byte_end":407541,"line_start":92,"line_end":92,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":407546,"byte_end":407549,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDateTime::new(d, t);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":407554,"byte_end":407592,"line_start":94,"line_end":94,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(dt.date(), d);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":407597,"byte_end":407626,"line_start":95,"line_end":95,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(dt.time(), t);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":407631,"byte_end":407660,"line_start":96,"line_end":96,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":407665,"byte_end":407672,"line_start":97,"line_end":97,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":407677,"byte_end":407686,"line_start":98,"line_end":98,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2157},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":408970,"byte_end":408984,"line_start":129,"line_end":129,"column_start":12,"column_end":26},"name":"from_timestamp","qualname":"<NaiveDateTime>::from_timestamp","value":"fn from_timestamp(i64, u32) -> NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` corresponding to a UTC date and time,\n from the number of non-leap seconds\n since the midnight UTC on January 1, 1970 (aka \"UNIX timestamp\")\n and the number of nanoseconds since the last whole non-leap second.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` corresponding to a UTC date and time,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":407803,"byte_end":407872,"line_start":103,"line_end":103,"column_start":5,"column_end":74}},{"value":"/ from the number of non-leap seconds","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":407877,"byte_end":407916,"line_start":104,"line_end":104,"column_start":5,"column_end":44}},{"value":"/ since the midnight UTC on January 1, 1970 (aka \"UNIX timestamp\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":407921,"byte_end":407989,"line_start":105,"line_end":105,"column_start":5,"column_end":73}},{"value":"/ and the number of nanoseconds since the last whole non-leap second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":407994,"byte_end":408065,"line_start":106,"line_end":106,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":408070,"byte_end":408073,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ For a non-naive version of this function see","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":408078,"byte_end":408126,"line_start":108,"line_end":108,"column_start":5,"column_end":53}},{"value":"/ [`TimeZone::timestamp`](../offset/trait.TimeZone.html#method.timestamp).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":408131,"byte_end":408207,"line_start":109,"line_end":109,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":408212,"byte_end":408215,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ The nanosecond part can exceed 1,000,000,000 in order to represent the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":408220,"byte_end":408294,"line_start":111,"line_end":111,"column_start":5,"column_end":79}},{"value":"/ [leap second](./struct.NaiveTime.html#leap-second-handling). (The true \"UNIX","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":408299,"byte_end":408379,"line_start":112,"line_end":112,"column_start":5,"column_end":85}},{"value":"/ timestamp\" cannot represent a leap second unambiguously.)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":408384,"byte_end":408445,"line_start":113,"line_end":113,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":408450,"byte_end":408453,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ Panics on the out-of-range number of seconds and/or invalid nanosecond.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":408458,"byte_end":408533,"line_start":115,"line_end":115,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":408538,"byte_end":408541,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":408546,"byte_end":408559,"line_start":117,"line_end":117,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":408564,"byte_end":408567,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":408572,"byte_end":408579,"line_start":119,"line_end":119,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDateTime, NaiveDate};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":408584,"byte_end":408627,"line_start":120,"line_end":120,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":408632,"byte_end":408635,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDateTime::from_timestamp(0, 42_000_000);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":408640,"byte_end":408698,"line_start":122,"line_end":122,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(dt, NaiveDate::from_ymd(1970, 1, 1).and_hms_milli(0, 0, 0, 42));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":408703,"byte_end":408782,"line_start":123,"line_end":123,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":408787,"byte_end":408790,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDateTime::from_timestamp(1_000_000_000, 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":408795,"byte_end":408856,"line_start":125,"line_end":125,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(dt, NaiveDate::from_ymd(2001, 9, 9).and_hms(1, 46, 40));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":408861,"byte_end":408932,"line_start":126,"line_end":126,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":408937,"byte_end":408944,"line_start":127,"line_end":127,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":408949,"byte_end":408958,"line_start":128,"line_end":128,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2158},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":410324,"byte_end":410342,"line_start":160,"line_end":160,"column_start":12,"column_end":30},"name":"from_timestamp_opt","qualname":"<NaiveDateTime>::from_timestamp_opt","value":"fn from_timestamp_opt(i64, u32) -> Option<NaiveDateTime>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` corresponding to a UTC date and time,\n from the number of non-leap seconds\n since the midnight UTC on January 1, 1970 (aka \"UNIX timestamp\")\n and the number of nanoseconds since the last whole non-leap second.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` corresponding to a UTC date and time,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":409169,"byte_end":409238,"line_start":134,"line_end":134,"column_start":5,"column_end":74}},{"value":"/ from the number of non-leap seconds","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":409243,"byte_end":409282,"line_start":135,"line_end":135,"column_start":5,"column_end":44}},{"value":"/ since the midnight UTC on January 1, 1970 (aka \"UNIX timestamp\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":409287,"byte_end":409355,"line_start":136,"line_end":136,"column_start":5,"column_end":73}},{"value":"/ and the number of nanoseconds since the last whole non-leap second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":409360,"byte_end":409431,"line_start":137,"line_end":137,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":409436,"byte_end":409439,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ The nanosecond part can exceed 1,000,000,000","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":409444,"byte_end":409492,"line_start":139,"line_end":139,"column_start":5,"column_end":53}},{"value":"/ in order to represent the [leap second](./struct.NaiveTime.html#leap-second-handling).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":409497,"byte_end":409587,"line_start":140,"line_end":140,"column_start":5,"column_end":95}},{"value":"/ (The true \"UNIX timestamp\" cannot represent a leap second unambiguously.)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":409592,"byte_end":409669,"line_start":141,"line_end":141,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":409674,"byte_end":409677,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on the out-of-range number of seconds and/or invalid nanosecond.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":409682,"byte_end":409765,"line_start":143,"line_end":143,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":409770,"byte_end":409773,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":409778,"byte_end":409791,"line_start":145,"line_end":145,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":409796,"byte_end":409799,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":409804,"byte_end":409811,"line_start":147,"line_end":147,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDateTime, NaiveDate};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":409816,"byte_end":409859,"line_start":148,"line_end":148,"column_start":5,"column_end":48}},{"value":"/ use std::i64;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":409864,"byte_end":409881,"line_start":149,"line_end":149,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":409886,"byte_end":409889,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ let from_timestamp_opt = NaiveDateTime::from_timestamp_opt;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":409894,"byte_end":409957,"line_start":151,"line_end":151,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":409962,"byte_end":409965,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ assert!(from_timestamp_opt(0, 0).is_some());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":409970,"byte_end":410018,"line_start":153,"line_end":153,"column_start":5,"column_end":53}},{"value":"/ assert!(from_timestamp_opt(0, 999_999_999).is_some());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":410023,"byte_end":410081,"line_start":154,"line_end":154,"column_start":5,"column_end":63}},{"value":"/ assert!(from_timestamp_opt(0, 1_500_000_000).is_some()); // leap second","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":410086,"byte_end":410161,"line_start":155,"line_end":155,"column_start":5,"column_end":80}},{"value":"/ assert!(from_timestamp_opt(0, 2_000_000_000).is_none());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":410166,"byte_end":410226,"line_start":156,"line_end":156,"column_start":5,"column_end":65}},{"value":"/ assert!(from_timestamp_opt(i64::MAX, 0).is_none());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":410231,"byte_end":410286,"line_start":157,"line_end":157,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":410291,"byte_end":410298,"line_start":158,"line_end":158,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":410303,"byte_end":410312,"line_start":159,"line_end":159,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2160},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":413705,"byte_end":413719,"line_start":234,"line_end":234,"column_start":12,"column_end":26},"name":"parse_from_str","qualname":"<NaiveDateTime>::parse_from_str","value":"fn parse_from_str(&str, &str) -> ParseResult<NaiveDateTime>","parent":null,"children":[],"decl_id":null,"docs":" Parses a string with the specified format string and returns a new `NaiveDateTime`.\n See the [`format::strftime` module](../format/strftime/index.html)\n on the supported escape sequences.","sig":null,"attributes":[{"value":"/ Parses a string with the specified format string and returns a new `NaiveDateTime`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":410852,"byte_end":410939,"line_start":173,"line_end":173,"column_start":5,"column_end":92}},{"value":"/ See the [`format::strftime` module](../format/strftime/index.html)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":410944,"byte_end":411014,"line_start":174,"line_end":174,"column_start":5,"column_end":75}},{"value":"/ on the supported escape sequences.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":411019,"byte_end":411057,"line_start":175,"line_end":175,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":411062,"byte_end":411065,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":411070,"byte_end":411083,"line_start":177,"line_end":177,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":411088,"byte_end":411091,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":411096,"byte_end":411103,"line_start":179,"line_end":179,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDateTime, NaiveDate};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":411108,"byte_end":411151,"line_start":180,"line_end":180,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":411156,"byte_end":411159,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ let parse_from_str = NaiveDateTime::parse_from_str;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":411164,"byte_end":411219,"line_start":182,"line_end":182,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":411224,"byte_end":411227,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(parse_from_str(\"2015-09-05 23:56:04\", \"%Y-%m-%d %H:%M:%S\"),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":411232,"byte_end":411306,"line_start":184,"line_end":184,"column_start":5,"column_end":79}},{"value":"/            Ok(NaiveDate::from_ymd(2015, 9, 5).and_hms(23, 56, 4)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":411311,"byte_end":411382,"line_start":185,"line_end":185,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(parse_from_str(\"5sep2015pm012345.6789\", \"%d%b%Y%p%I%M%S%.f\"),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":411387,"byte_end":411463,"line_start":186,"line_end":186,"column_start":5,"column_end":81}},{"value":"/            Ok(NaiveDate::from_ymd(2015, 9, 5).and_hms_micro(13, 23, 45, 678_900)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":411468,"byte_end":411555,"line_start":187,"line_end":187,"column_start":5,"column_end":92}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":411560,"byte_end":411567,"line_start":188,"line_end":188,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":411572,"byte_end":411575,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Offset is ignored for the purpose of parsing.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":411580,"byte_end":411629,"line_start":190,"line_end":190,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":411634,"byte_end":411637,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":411642,"byte_end":411649,"line_start":192,"line_end":192,"column_start":5,"column_end":12}},{"value":"/ # use chrono::{NaiveDateTime, NaiveDate};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":411654,"byte_end":411699,"line_start":193,"line_end":193,"column_start":5,"column_end":50}},{"value":"/ # let parse_from_str = NaiveDateTime::parse_from_str;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":411704,"byte_end":411761,"line_start":194,"line_end":194,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(parse_from_str(\"2014-5-17T12:34:56+09:30\", \"%Y-%m-%dT%H:%M:%S%z\"),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":411766,"byte_end":411847,"line_start":195,"line_end":195,"column_start":5,"column_end":86}},{"value":"/            Ok(NaiveDate::from_ymd(2014, 5, 17).and_hms(12, 34, 56)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":411852,"byte_end":411925,"line_start":196,"line_end":196,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":411930,"byte_end":411937,"line_start":197,"line_end":197,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":411942,"byte_end":411945,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ [Leap seconds](./struct.NaiveTime.html#leap-second-handling) are correctly handled by","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":411950,"byte_end":412039,"line_start":199,"line_end":199,"column_start":5,"column_end":94}},{"value":"/ treating any time of the form `hh:mm:60` as a leap second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":412044,"byte_end":412106,"line_start":200,"line_end":200,"column_start":5,"column_end":67}},{"value":"/ (This equally applies to the formatting, so the round trip is possible.)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":412111,"byte_end":412187,"line_start":201,"line_end":201,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":412192,"byte_end":412195,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":412200,"byte_end":412207,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/ # use chrono::{NaiveDateTime, NaiveDate};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":412212,"byte_end":412257,"line_start":204,"line_end":204,"column_start":5,"column_end":50}},{"value":"/ # let parse_from_str = NaiveDateTime::parse_from_str;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":412262,"byte_end":412319,"line_start":205,"line_end":205,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(parse_from_str(\"2015-07-01 08:59:60.123\", \"%Y-%m-%d %H:%M:%S%.f\"),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":412324,"byte_end":412405,"line_start":206,"line_end":206,"column_start":5,"column_end":86}},{"value":"/            Ok(NaiveDate::from_ymd(2015, 7, 1).and_hms_milli(8, 59, 59, 1_123)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":412410,"byte_end":412494,"line_start":207,"line_end":207,"column_start":5,"column_end":89}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":412499,"byte_end":412506,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":412511,"byte_end":412514,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ Missing seconds are assumed to be zero,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":412519,"byte_end":412562,"line_start":210,"line_end":210,"column_start":5,"column_end":48}},{"value":"/ but out-of-bound times or insufficient fields are errors otherwise.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":412567,"byte_end":412638,"line_start":211,"line_end":211,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":412643,"byte_end":412646,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":412651,"byte_end":412658,"line_start":213,"line_end":213,"column_start":5,"column_end":12}},{"value":"/ # use chrono::{NaiveDateTime, NaiveDate};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":412663,"byte_end":412708,"line_start":214,"line_end":214,"column_start":5,"column_end":50}},{"value":"/ # let parse_from_str = NaiveDateTime::parse_from_str;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":412713,"byte_end":412770,"line_start":215,"line_end":215,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(parse_from_str(\"94/9/4 7:15\", \"%y/%m/%d %H:%M\"),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":412775,"byte_end":412838,"line_start":216,"line_end":216,"column_start":5,"column_end":68}},{"value":"/            Ok(NaiveDate::from_ymd(1994, 9, 4).and_hms(7, 15, 0)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":412843,"byte_end":412913,"line_start":217,"line_end":217,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":412918,"byte_end":412921,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ assert!(parse_from_str(\"04m33s\", \"%Mm%Ss\").is_err());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":412926,"byte_end":412983,"line_start":219,"line_end":219,"column_start":5,"column_end":62}},{"value":"/ assert!(parse_from_str(\"94/9/4 12\", \"%y/%m/%d %H\").is_err());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":412988,"byte_end":413053,"line_start":220,"line_end":220,"column_start":5,"column_end":70}},{"value":"/ assert!(parse_from_str(\"94/9/4 17:60\", \"%y/%m/%d %H:%M\").is_err());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":413058,"byte_end":413129,"line_start":221,"line_end":221,"column_start":5,"column_end":76}},{"value":"/ assert!(parse_from_str(\"94/9/4 24:00:00\", \"%y/%m/%d %H:%M:%S\").is_err());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":413134,"byte_end":413211,"line_start":222,"line_end":222,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":413216,"byte_end":413223,"line_start":223,"line_end":223,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":413228,"byte_end":413231,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ All parsed fields should be consistent to each other, otherwise it's an error.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":413236,"byte_end":413318,"line_start":225,"line_end":225,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":413323,"byte_end":413326,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":413331,"byte_end":413338,"line_start":227,"line_end":227,"column_start":5,"column_end":12}},{"value":"/ # use chrono::NaiveDateTime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":413343,"byte_end":413375,"line_start":228,"line_end":228,"column_start":5,"column_end":37}},{"value":"/ # let parse_from_str = NaiveDateTime::parse_from_str;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":413380,"byte_end":413437,"line_start":229,"line_end":229,"column_start":5,"column_end":62}},{"value":"/ let fmt = \"%Y-%m-%d %H:%M:%S = UNIX timestamp %s\";","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":413442,"byte_end":413496,"line_start":230,"line_end":230,"column_start":5,"column_end":59}},{"value":"/ assert!(parse_from_str(\"2001-09-09 01:46:39 = UNIX timestamp 999999999\", fmt).is_ok());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":413501,"byte_end":413592,"line_start":231,"line_end":231,"column_start":5,"column_end":96}},{"value":"/ assert!(parse_from_str(\"1970-01-01 00:00:00 = UNIX timestamp 1\", fmt).is_err());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":413597,"byte_end":413681,"line_start":232,"line_end":232,"column_start":5,"column_end":89}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":413686,"byte_end":413693,"line_start":233,"line_end":233,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2161},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":414239,"byte_end":414243,"line_start":251,"line_end":251,"column_start":12,"column_end":16},"name":"date","qualname":"<NaiveDateTime>::date","value":"fn date(&Self) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Retrieves a date component.","sig":null,"attributes":[{"value":"/ Retrieves a date component.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":413952,"byte_end":413983,"line_start":240,"line_end":240,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":413988,"byte_end":413991,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":413996,"byte_end":414009,"line_start":242,"line_end":242,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":414014,"byte_end":414017,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":414022,"byte_end":414029,"line_start":244,"line_end":244,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":414034,"byte_end":414060,"line_start":245,"line_end":245,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":414065,"byte_end":414068,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(2016, 7, 8).and_hms(9, 10, 11);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":414073,"byte_end":414137,"line_start":247,"line_end":247,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(dt.date(), NaiveDate::from_ymd(2016, 7, 8));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":414142,"byte_end":414201,"line_start":248,"line_end":248,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":414206,"byte_end":414213,"line_start":249,"line_end":249,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":414218,"byte_end":414227,"line_start":250,"line_end":250,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2162},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":414594,"byte_end":414598,"line_start":266,"line_end":266,"column_start":12,"column_end":16},"name":"time","qualname":"<NaiveDateTime>::time","value":"fn time(&Self) -> NaiveTime","parent":null,"children":[],"decl_id":null,"docs":" Retrieves a time component.","sig":null,"attributes":[{"value":"/ Retrieves a time component.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":414295,"byte_end":414326,"line_start":255,"line_end":255,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":414331,"byte_end":414334,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":414339,"byte_end":414352,"line_start":257,"line_end":257,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":414357,"byte_end":414360,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":414365,"byte_end":414372,"line_start":259,"line_end":259,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveTime};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":414377,"byte_end":414416,"line_start":260,"line_end":260,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":414421,"byte_end":414424,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(2016, 7, 8).and_hms(9, 10, 11);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":414429,"byte_end":414493,"line_start":262,"line_end":262,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(dt.time(), NaiveTime::from_hms(9, 10, 11));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":414498,"byte_end":414556,"line_start":263,"line_end":263,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":414561,"byte_end":414568,"line_start":264,"line_end":264,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":414573,"byte_end":414582,"line_start":265,"line_end":265,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2163},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":415503,"byte_end":415512,"line_start":293,"line_end":293,"column_start":12,"column_end":21},"name":"timestamp","qualname":"<NaiveDateTime>::timestamp","value":"fn timestamp(&Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of non-leap seconds since the midnight on January 1, 1970.","sig":null,"attributes":[{"value":"/ Returns the number of non-leap seconds since the midnight on January 1, 1970.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":414650,"byte_end":414731,"line_start":270,"line_end":270,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":414736,"byte_end":414739,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ Note that this does *not* account for the timezone!","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":414744,"byte_end":414799,"line_start":272,"line_end":272,"column_start":5,"column_end":60}},{"value":"/ The true \"UNIX timestamp\" would count seconds since the midnight *UTC* on the epoch.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":414804,"byte_end":414892,"line_start":273,"line_end":273,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":414897,"byte_end":414900,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":414905,"byte_end":414918,"line_start":275,"line_end":275,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":414923,"byte_end":414926,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":414931,"byte_end":414938,"line_start":277,"line_end":277,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":414943,"byte_end":414969,"line_start":278,"line_end":278,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":414974,"byte_end":414977,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(1970, 1, 1).and_hms_milli(0, 0, 1, 980);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":414982,"byte_end":415055,"line_start":280,"line_end":280,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(dt.timestamp(), 1);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":415060,"byte_end":415094,"line_start":281,"line_end":281,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":415099,"byte_end":415102,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(2001, 9, 9).and_hms(1, 46, 40);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":415107,"byte_end":415171,"line_start":283,"line_end":283,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(dt.timestamp(), 1_000_000_000);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":415176,"byte_end":415222,"line_start":284,"line_end":284,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":415227,"byte_end":415230,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(1969, 12, 31).and_hms(23, 59, 59);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":415235,"byte_end":415302,"line_start":286,"line_end":286,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(dt.timestamp(), -1);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":415307,"byte_end":415342,"line_start":287,"line_end":287,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":415347,"byte_end":415350,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(-1, 1, 1).and_hms(0, 0, 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":415355,"byte_end":415415,"line_start":289,"line_end":289,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(dt.timestamp(), -62198755200);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":415420,"byte_end":415465,"line_start":290,"line_end":290,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":415470,"byte_end":415477,"line_start":291,"line_end":291,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":415482,"byte_end":415491,"line_start":292,"line_end":292,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2165},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":416888,"byte_end":416904,"line_start":325,"line_end":325,"column_start":12,"column_end":28},"name":"timestamp_millis","qualname":"<NaiveDateTime>::timestamp_millis","value":"fn timestamp_millis(&Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of non-leap *milliseconds* since midnight on January 1, 1970.","sig":null,"attributes":[{"value":"/ Returns the number of non-leap *milliseconds* since midnight on January 1, 1970.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":415814,"byte_end":415898,"line_start":300,"line_end":300,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":415903,"byte_end":415906,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ Note that this does *not* account for the timezone!","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":415911,"byte_end":415966,"line_start":302,"line_end":302,"column_start":5,"column_end":60}},{"value":"/ The true \"UNIX timestamp\" would count seconds since the midnight *UTC* on the epoch.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":415971,"byte_end":416059,"line_start":303,"line_end":303,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":416064,"byte_end":416067,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ Note also that this does reduce the number of years that can be","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":416072,"byte_end":416139,"line_start":305,"line_end":305,"column_start":5,"column_end":72}},{"value":"/ represented from ~584 Billion to ~584 Million. (If this is a problem,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":416144,"byte_end":416217,"line_start":306,"line_end":306,"column_start":5,"column_end":78}},{"value":"/ please file an issue to let me know what domain needs millisecond","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":416222,"byte_end":416291,"line_start":307,"line_end":307,"column_start":5,"column_end":74}},{"value":"/ precision over billions of years, I'm curious.)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":416296,"byte_end":416347,"line_start":308,"line_end":308,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":416352,"byte_end":416355,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":416360,"byte_end":416373,"line_start":310,"line_end":310,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":416378,"byte_end":416381,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":416386,"byte_end":416393,"line_start":312,"line_end":312,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":416398,"byte_end":416424,"line_start":313,"line_end":313,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":416429,"byte_end":416432,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(1970, 1, 1).and_hms_milli(0, 0, 1, 444);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":416437,"byte_end":416510,"line_start":315,"line_end":315,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(dt.timestamp_millis(), 1_444);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":416515,"byte_end":416560,"line_start":316,"line_end":316,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":416565,"byte_end":416568,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(2001, 9, 9).and_hms_milli(1, 46, 40, 555);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":416573,"byte_end":416648,"line_start":318,"line_end":318,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(dt.timestamp_millis(), 1_000_000_000_555);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":416653,"byte_end":416710,"line_start":319,"line_end":319,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":416715,"byte_end":416718,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(1969, 12, 31).and_hms_milli(23, 59, 59, 100);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":416723,"byte_end":416801,"line_start":321,"line_end":321,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(dt.timestamp_millis(), -900);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":416806,"byte_end":416850,"line_start":322,"line_end":322,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":416855,"byte_end":416862,"line_start":323,"line_end":323,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":416867,"byte_end":416876,"line_start":324,"line_end":324,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2166},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":417970,"byte_end":417986,"line_start":352,"line_end":352,"column_start":12,"column_end":28},"name":"timestamp_micros","qualname":"<NaiveDateTime>::timestamp_micros","value":"fn timestamp_micros(&Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of non-leap *microseconds* since midnight on January 1, 1970.","sig":null,"attributes":[{"value":"/ Returns the number of non-leap *microseconds* since midnight on January 1, 1970.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":417035,"byte_end":417119,"line_start":330,"line_end":330,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":417124,"byte_end":417127,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ Note that this does *not* account for the timezone!","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":417132,"byte_end":417187,"line_start":332,"line_end":332,"column_start":5,"column_end":60}},{"value":"/ The true \"UNIX timestamp\" would count seconds since the midnight *UTC* on the epoch.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":417192,"byte_end":417280,"line_start":333,"line_end":333,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":417285,"byte_end":417288,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ Note also that this does reduce the number of years that can be","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":417293,"byte_end":417360,"line_start":335,"line_end":335,"column_start":5,"column_end":72}},{"value":"/ represented from ~584 Billion to ~584 Thousand. (If this is a problem,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":417365,"byte_end":417439,"line_start":336,"line_end":336,"column_start":5,"column_end":79}},{"value":"/ please file an issue to let me know what domain needs microsecond","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":417444,"byte_end":417513,"line_start":337,"line_end":337,"column_start":5,"column_end":74}},{"value":"/ precision over millennia, I'm curious.)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":417518,"byte_end":417561,"line_start":338,"line_end":338,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":417566,"byte_end":417569,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":417574,"byte_end":417587,"line_start":340,"line_end":340,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":417592,"byte_end":417595,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":417600,"byte_end":417607,"line_start":342,"line_end":342,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":417612,"byte_end":417638,"line_start":343,"line_end":343,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":417643,"byte_end":417646,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(1970, 1, 1).and_hms_micro(0, 0, 1, 444);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":417651,"byte_end":417724,"line_start":345,"line_end":345,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(dt.timestamp_micros(), 1_000_444);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":417729,"byte_end":417778,"line_start":346,"line_end":346,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":417783,"byte_end":417786,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(2001, 9, 9).and_hms_micro(1, 46, 40, 555);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":417791,"byte_end":417866,"line_start":348,"line_end":348,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(dt.timestamp_micros(), 1_000_000_000_000_555);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":417871,"byte_end":417932,"line_start":349,"line_end":349,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":417937,"byte_end":417944,"line_start":350,"line_end":350,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":417949,"byte_end":417958,"line_start":351,"line_end":351,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2167},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":419457,"byte_end":419472,"line_start":391,"line_end":391,"column_start":12,"column_end":27},"name":"timestamp_nanos","qualname":"<NaiveDateTime>::timestamp_nanos","value":"fn timestamp_nanos(&Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of non-leap *nanoseconds* since midnight on January 1, 1970.","sig":null,"attributes":[{"value":"/ Returns the number of non-leap *nanoseconds* since midnight on January 1, 1970.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":418122,"byte_end":418205,"line_start":357,"line_end":357,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":418210,"byte_end":418213,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ Note that this does *not* account for the timezone!","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":418218,"byte_end":418273,"line_start":359,"line_end":359,"column_start":5,"column_end":60}},{"value":"/ The true \"UNIX timestamp\" would count seconds since the midnight *UTC* on the epoch.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":418278,"byte_end":418366,"line_start":360,"line_end":360,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":418371,"byte_end":418374,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":418379,"byte_end":418391,"line_start":362,"line_end":362,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":418396,"byte_end":418399,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ Note also that this does reduce the number of years that can be","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":418404,"byte_end":418471,"line_start":364,"line_end":364,"column_start":5,"column_end":72}},{"value":"/ represented from ~584 Billion to ~584 years. The dates that can be","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":418476,"byte_end":418546,"line_start":365,"line_end":365,"column_start":5,"column_end":75}},{"value":"/ represented as nanoseconds are between 1677-09-21T00:12:44.0 and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":418551,"byte_end":418619,"line_start":366,"line_end":366,"column_start":5,"column_end":73}},{"value":"/ 2262-04-11T23:47:16.854775804.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":418624,"byte_end":418658,"line_start":367,"line_end":367,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":418663,"byte_end":418666,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ (If this is a problem, please file an issue to let me know what domain","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":418671,"byte_end":418745,"line_start":369,"line_end":369,"column_start":5,"column_end":79}},{"value":"/ needs nanosecond precision over millennia, I'm curious.)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":418750,"byte_end":418810,"line_start":370,"line_end":370,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":418815,"byte_end":418818,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":418823,"byte_end":418836,"line_start":372,"line_end":372,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":418841,"byte_end":418844,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":418849,"byte_end":418856,"line_start":374,"line_end":374,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":418861,"byte_end":418904,"line_start":375,"line_end":375,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":418909,"byte_end":418912,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(1970, 1, 1).and_hms_nano(0, 0, 1, 444);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":418917,"byte_end":418989,"line_start":377,"line_end":377,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(dt.timestamp_nanos(), 1_000_000_444);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":418994,"byte_end":419046,"line_start":378,"line_end":378,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":419051,"byte_end":419054,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(2001, 9, 9).and_hms_nano(1, 46, 40, 555);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":419059,"byte_end":419133,"line_start":380,"line_end":380,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":419138,"byte_end":419141,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ const A_BILLION: i64 = 1_000_000_000;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":419146,"byte_end":419187,"line_start":382,"line_end":382,"column_start":5,"column_end":46}},{"value":"/ let nanos = dt.timestamp_nanos();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":419192,"byte_end":419229,"line_start":383,"line_end":383,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(nanos, 1_000_000_000_000_000_555);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":419234,"byte_end":419283,"line_start":384,"line_end":384,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":419288,"byte_end":419303,"line_start":385,"line_end":385,"column_start":5,"column_end":20}},{"value":"/     dt,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":419308,"byte_end":419319,"line_start":386,"line_end":386,"column_start":5,"column_end":16}},{"value":"/     NaiveDateTime::from_timestamp(nanos / A_BILLION, (nanos % A_BILLION) as u32)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":419324,"byte_end":419408,"line_start":387,"line_end":387,"column_start":5,"column_end":89}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":419413,"byte_end":419419,"line_start":388,"line_end":388,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":419424,"byte_end":419431,"line_start":389,"line_end":389,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":419436,"byte_end":419445,"line_start":390,"line_end":390,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2168},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":420248,"byte_end":420271,"line_start":413,"line_end":413,"column_start":12,"column_end":35},"name":"timestamp_subsec_millis","qualname":"<NaiveDateTime>::timestamp_subsec_millis","value":"fn timestamp_subsec_millis(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of milliseconds since the last whole non-leap second.","sig":null,"attributes":[{"value":"/ Returns the number of milliseconds since the last whole non-leap second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":419611,"byte_end":419687,"line_start":396,"line_end":396,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":419692,"byte_end":419695,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 0 to 999,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":419700,"byte_end":419742,"line_start":398,"line_end":398,"column_start":5,"column_end":47}},{"value":"/ or for [leap seconds](./struct.NaiveTime.html#leap-second-handling), to 1,999.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":419747,"byte_end":419829,"line_start":399,"line_end":399,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":419834,"byte_end":419837,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":419842,"byte_end":419855,"line_start":401,"line_end":401,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":419860,"byte_end":419863,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":419868,"byte_end":419875,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":419880,"byte_end":419906,"line_start":404,"line_end":404,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":419911,"byte_end":419914,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(2016, 7, 8).and_hms_nano(9, 10, 11, 123_456_789);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":419919,"byte_end":420001,"line_start":406,"line_end":406,"column_start":5,"column_end":87}},{"value":"/ assert_eq!(dt.timestamp_subsec_millis(), 123);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":420006,"byte_end":420056,"line_start":407,"line_end":407,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":420061,"byte_end":420064,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(2015, 7, 1).and_hms_nano(8, 59, 59, 1_234_567_890);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":420069,"byte_end":420153,"line_start":409,"line_end":409,"column_start":5,"column_end":89}},{"value":"/ assert_eq!(dt.timestamp_subsec_millis(), 1_234);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":420158,"byte_end":420210,"line_start":410,"line_end":410,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":420215,"byte_end":420222,"line_start":411,"line_end":411,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":420227,"byte_end":420236,"line_start":412,"line_end":412,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2169},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":421002,"byte_end":421025,"line_start":434,"line_end":434,"column_start":12,"column_end":35},"name":"timestamp_subsec_micros","qualname":"<NaiveDateTime>::timestamp_subsec_micros","value":"fn timestamp_subsec_micros(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of microseconds since the last whole non-leap second.","sig":null,"attributes":[{"value":"/ Returns the number of microseconds since the last whole non-leap second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":420349,"byte_end":420425,"line_start":417,"line_end":417,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":420430,"byte_end":420433,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 0 to 999,999,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":420438,"byte_end":420484,"line_start":419,"line_end":419,"column_start":5,"column_end":51}},{"value":"/ or for [leap seconds](./struct.NaiveTime.html#leap-second-handling), to 1,999,999.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":420489,"byte_end":420575,"line_start":420,"line_end":420,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":420580,"byte_end":420583,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":420588,"byte_end":420601,"line_start":422,"line_end":422,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":420606,"byte_end":420609,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":420614,"byte_end":420621,"line_start":424,"line_end":424,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":420626,"byte_end":420652,"line_start":425,"line_end":425,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":420657,"byte_end":420660,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(2016, 7, 8).and_hms_nano(9, 10, 11, 123_456_789);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":420665,"byte_end":420747,"line_start":427,"line_end":427,"column_start":5,"column_end":87}},{"value":"/ assert_eq!(dt.timestamp_subsec_micros(), 123_456);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":420752,"byte_end":420806,"line_start":428,"line_end":428,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":420811,"byte_end":420814,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(2015, 7, 1).and_hms_nano(8, 59, 59, 1_234_567_890);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":420819,"byte_end":420903,"line_start":430,"line_end":430,"column_start":5,"column_end":89}},{"value":"/ assert_eq!(dt.timestamp_subsec_micros(), 1_234_567);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":420908,"byte_end":420964,"line_start":431,"line_end":431,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":420969,"byte_end":420976,"line_start":432,"line_end":432,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":420981,"byte_end":420990,"line_start":433,"line_end":433,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2170},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":421765,"byte_end":421787,"line_start":455,"line_end":455,"column_start":12,"column_end":34},"name":"timestamp_subsec_nanos","qualname":"<NaiveDateTime>::timestamp_subsec_nanos","value":"fn timestamp_subsec_nanos(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of nanoseconds since the last whole non-leap second.","sig":null,"attributes":[{"value":"/ Returns the number of nanoseconds since the last whole non-leap second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":421099,"byte_end":421174,"line_start":438,"line_end":438,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":421179,"byte_end":421182,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 0 to 999,999,999,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":421187,"byte_end":421237,"line_start":440,"line_end":440,"column_start":5,"column_end":55}},{"value":"/ or for [leap seconds](./struct.NaiveTime.html#leap-second-handling), to 1,999,999,999.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":421242,"byte_end":421332,"line_start":441,"line_end":441,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":421337,"byte_end":421340,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":421345,"byte_end":421358,"line_start":443,"line_end":443,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":421363,"byte_end":421366,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":421371,"byte_end":421378,"line_start":445,"line_end":445,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":421383,"byte_end":421409,"line_start":446,"line_end":446,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":421414,"byte_end":421417,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(2016, 7, 8).and_hms_nano(9, 10, 11, 123_456_789);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":421422,"byte_end":421504,"line_start":448,"line_end":448,"column_start":5,"column_end":87}},{"value":"/ assert_eq!(dt.timestamp_subsec_nanos(), 123_456_789);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":421509,"byte_end":421566,"line_start":449,"line_end":449,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":421571,"byte_end":421574,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(2015, 7, 1).and_hms_nano(8, 59, 59, 1_234_567_890);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":421579,"byte_end":421663,"line_start":451,"line_end":451,"column_start":5,"column_end":89}},{"value":"/ assert_eq!(dt.timestamp_subsec_nanos(), 1_234_567_890);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":421668,"byte_end":421727,"line_start":452,"line_end":452,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":421732,"byte_end":421739,"line_start":453,"line_end":453,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":421744,"byte_end":421753,"line_start":454,"line_end":454,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2171},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":424886,"byte_end":424904,"line_start":524,"line_end":524,"column_start":12,"column_end":30},"name":"checked_add_signed","qualname":"<NaiveDateTime>::checked_add_signed","value":"fn checked_add_signed(Self, OldDuration) -> Option<NaiveDateTime>","parent":null,"children":[],"decl_id":null,"docs":" Adds given `Duration` to the current date and time.","sig":null,"attributes":[{"value":"/ Adds given `Duration` to the current date and time.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":421846,"byte_end":421901,"line_start":459,"line_end":459,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":421906,"byte_end":421909,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ As a part of Chrono's [leap second handling](./struct.NaiveTime.html#leap-second-handling),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":421914,"byte_end":422009,"line_start":461,"line_end":461,"column_start":5,"column_end":100}},{"value":"/ the addition assumes that **there is no leap second ever**,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":422014,"byte_end":422077,"line_start":462,"line_end":462,"column_start":5,"column_end":68}},{"value":"/ except when the `NaiveDateTime` itself represents a leap second","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":422082,"byte_end":422149,"line_start":463,"line_end":463,"column_start":5,"column_end":72}},{"value":"/ in which case the assumption becomes that **there is exactly a single leap second ever**.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":422154,"byte_end":422247,"line_start":464,"line_end":464,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":422252,"byte_end":422255,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when it will result in overflow.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":422260,"byte_end":422311,"line_start":466,"line_end":466,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":422316,"byte_end":422319,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":422324,"byte_end":422337,"line_start":468,"line_end":468,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":422342,"byte_end":422345,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":422350,"byte_end":422357,"line_start":470,"line_end":470,"column_start":5,"column_end":12}},{"value":"/ use chrono::{Duration, NaiveDate};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":422362,"byte_end":422400,"line_start":471,"line_end":471,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":422405,"byte_end":422408,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ let from_ymd = NaiveDate::from_ymd;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":422413,"byte_end":422452,"line_start":473,"line_end":473,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":422457,"byte_end":422460,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ let d = from_ymd(2016, 7, 8);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":422465,"byte_end":422498,"line_start":475,"line_end":475,"column_start":5,"column_end":38}},{"value":"/ let hms = |h, m, s| d.and_hms(h, m, s);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":422503,"byte_end":422546,"line_start":476,"line_end":476,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(hms(3, 5, 7).checked_add_signed(Duration::zero()),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":422551,"byte_end":422616,"line_start":477,"line_end":477,"column_start":5,"column_end":70}},{"value":"/            Some(hms(3, 5, 7)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":422621,"byte_end":422656,"line_start":478,"line_end":478,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(hms(3, 5, 7).checked_add_signed(Duration::seconds(1)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":422661,"byte_end":422730,"line_start":479,"line_end":479,"column_start":5,"column_end":74}},{"value":"/            Some(hms(3, 5, 8)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":422735,"byte_end":422770,"line_start":480,"line_end":480,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(hms(3, 5, 7).checked_add_signed(Duration::seconds(-1)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":422775,"byte_end":422845,"line_start":481,"line_end":481,"column_start":5,"column_end":75}},{"value":"/            Some(hms(3, 5, 6)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":422850,"byte_end":422885,"line_start":482,"line_end":482,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(hms(3, 5, 7).checked_add_signed(Duration::seconds(3600 + 60)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":422890,"byte_end":422967,"line_start":483,"line_end":483,"column_start":5,"column_end":82}},{"value":"/            Some(hms(4, 6, 7)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":422972,"byte_end":423007,"line_start":484,"line_end":484,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(hms(3, 5, 7).checked_add_signed(Duration::seconds(86_400)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":423012,"byte_end":423086,"line_start":485,"line_end":485,"column_start":5,"column_end":79}},{"value":"/            Some(from_ymd(2016, 7, 9).and_hms(3, 5, 7)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":423091,"byte_end":423151,"line_start":486,"line_end":486,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":423156,"byte_end":423159,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ let hmsm = |h, m, s, milli| d.and_hms_milli(h, m, s, milli);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":423164,"byte_end":423228,"line_start":488,"line_end":488,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(hmsm(3, 5, 7, 980).checked_add_signed(Duration::milliseconds(450)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":423233,"byte_end":423315,"line_start":489,"line_end":489,"column_start":5,"column_end":87}},{"value":"/            Some(hmsm(3, 5, 8, 430)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":423320,"byte_end":423361,"line_start":490,"line_end":490,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":423366,"byte_end":423373,"line_start":491,"line_end":491,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":423378,"byte_end":423381,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ Overflow returns `None`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":423386,"byte_end":423414,"line_start":493,"line_end":493,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":423419,"byte_end":423422,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":423427,"byte_end":423434,"line_start":495,"line_end":495,"column_start":5,"column_end":12}},{"value":"/ # use chrono::{Duration, NaiveDate};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":423439,"byte_end":423479,"line_start":496,"line_end":496,"column_start":5,"column_end":45}},{"value":"/ # let hms = |h, m, s| NaiveDate::from_ymd(2016, 7, 8).and_hms(h, m, s);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":423484,"byte_end":423559,"line_start":497,"line_end":497,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(hms(3, 5, 7).checked_add_signed(Duration::days(1_000_000_000)), None);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":423564,"byte_end":423649,"line_start":498,"line_end":498,"column_start":5,"column_end":90}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":423654,"byte_end":423661,"line_start":499,"line_end":499,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":423666,"byte_end":423669,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ Leap seconds are handled,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":423674,"byte_end":423703,"line_start":501,"line_end":501,"column_start":5,"column_end":34}},{"value":"/ but the addition assumes that it is the only leap second happened.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":423708,"byte_end":423778,"line_start":502,"line_end":502,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":423783,"byte_end":423786,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":423791,"byte_end":423798,"line_start":504,"line_end":504,"column_start":5,"column_end":12}},{"value":"/ # use chrono::{Duration, NaiveDate};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":423803,"byte_end":423843,"line_start":505,"line_end":505,"column_start":5,"column_end":45}},{"value":"/ # let from_ymd = NaiveDate::from_ymd;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":423848,"byte_end":423889,"line_start":506,"line_end":506,"column_start":5,"column_end":46}},{"value":"/ # let hmsm = |h, m, s, milli| from_ymd(2016, 7, 8).and_hms_milli(h, m, s, milli);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":423894,"byte_end":423979,"line_start":507,"line_end":507,"column_start":5,"column_end":90}},{"value":"/ let leap = hmsm(3, 5, 59, 1_300);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":423984,"byte_end":424021,"line_start":508,"line_end":508,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(leap.checked_add_signed(Duration::zero()),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":424026,"byte_end":424083,"line_start":509,"line_end":509,"column_start":5,"column_end":62}},{"value":"/            Some(hmsm(3, 5, 59, 1_300)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":424088,"byte_end":424132,"line_start":510,"line_end":510,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(leap.checked_add_signed(Duration::milliseconds(-500)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":424137,"byte_end":424206,"line_start":511,"line_end":511,"column_start":5,"column_end":74}},{"value":"/            Some(hmsm(3, 5, 59, 800)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":424211,"byte_end":424253,"line_start":512,"line_end":512,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(leap.checked_add_signed(Duration::milliseconds(500)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":424258,"byte_end":424326,"line_start":513,"line_end":513,"column_start":5,"column_end":73}},{"value":"/            Some(hmsm(3, 5, 59, 1_800)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":424331,"byte_end":424375,"line_start":514,"line_end":514,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(leap.checked_add_signed(Duration::milliseconds(800)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":424380,"byte_end":424448,"line_start":515,"line_end":515,"column_start":5,"column_end":73}},{"value":"/            Some(hmsm(3, 6, 0, 100)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":424453,"byte_end":424494,"line_start":516,"line_end":516,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(leap.checked_add_signed(Duration::seconds(10)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":424499,"byte_end":424561,"line_start":517,"line_end":517,"column_start":5,"column_end":67}},{"value":"/            Some(hmsm(3, 6, 9, 300)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":424566,"byte_end":424607,"line_start":518,"line_end":518,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(leap.checked_add_signed(Duration::seconds(-10)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":424612,"byte_end":424675,"line_start":519,"line_end":519,"column_start":5,"column_end":68}},{"value":"/            Some(hmsm(3, 5, 50, 300)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":424680,"byte_end":424722,"line_start":520,"line_end":520,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(leap.checked_add_signed(Duration::days(1)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":424727,"byte_end":424785,"line_start":521,"line_end":521,"column_start":5,"column_end":63}},{"value":"/            Some(from_ymd(2016, 7, 9).and_hms_milli(3, 5, 59, 300)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":424790,"byte_end":424862,"line_start":522,"line_end":522,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":424867,"byte_end":424874,"line_start":523,"line_end":523,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2172},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":428147,"byte_end":428165,"line_start":597,"line_end":597,"column_start":12,"column_end":30},"name":"checked_sub_signed","qualname":"<NaiveDateTime>::checked_sub_signed","value":"fn checked_sub_signed(Self, OldDuration) -> Option<NaiveDateTime>","parent":null,"children":[],"decl_id":null,"docs":" Subtracts given `Duration` from the current date and time.","sig":null,"attributes":[{"value":"/ Subtracts given `Duration` from the current date and time.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":425330,"byte_end":425392,"line_start":536,"line_end":536,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":425397,"byte_end":425400,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ As a part of Chrono's [leap second handling](./struct.NaiveTime.html#leap-second-handling),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":425405,"byte_end":425500,"line_start":538,"line_end":538,"column_start":5,"column_end":100}},{"value":"/ the subtraction assumes that **there is no leap second ever**,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":425505,"byte_end":425571,"line_start":539,"line_end":539,"column_start":5,"column_end":71}},{"value":"/ except when the `NaiveDateTime` itself represents a leap second","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":425576,"byte_end":425643,"line_start":540,"line_end":540,"column_start":5,"column_end":72}},{"value":"/ in which case the assumption becomes that **there is exactly a single leap second ever**.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":425648,"byte_end":425741,"line_start":541,"line_end":541,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":425746,"byte_end":425749,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when it will result in overflow.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":425754,"byte_end":425805,"line_start":543,"line_end":543,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":425810,"byte_end":425813,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":425818,"byte_end":425831,"line_start":545,"line_end":545,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":425836,"byte_end":425839,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":425844,"byte_end":425851,"line_start":547,"line_end":547,"column_start":5,"column_end":12}},{"value":"/ use chrono::{Duration, NaiveDate};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":425856,"byte_end":425894,"line_start":548,"line_end":548,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":425899,"byte_end":425902,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ let from_ymd = NaiveDate::from_ymd;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":425907,"byte_end":425946,"line_start":550,"line_end":550,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":425951,"byte_end":425954,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ let d = from_ymd(2016, 7, 8);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":425959,"byte_end":425992,"line_start":552,"line_end":552,"column_start":5,"column_end":38}},{"value":"/ let hms = |h, m, s| d.and_hms(h, m, s);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":425997,"byte_end":426040,"line_start":553,"line_end":553,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(hms(3, 5, 7).checked_sub_signed(Duration::zero()),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":426045,"byte_end":426110,"line_start":554,"line_end":554,"column_start":5,"column_end":70}},{"value":"/            Some(hms(3, 5, 7)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":426115,"byte_end":426150,"line_start":555,"line_end":555,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(hms(3, 5, 7).checked_sub_signed(Duration::seconds(1)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":426155,"byte_end":426224,"line_start":556,"line_end":556,"column_start":5,"column_end":74}},{"value":"/            Some(hms(3, 5, 6)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":426229,"byte_end":426264,"line_start":557,"line_end":557,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(hms(3, 5, 7).checked_sub_signed(Duration::seconds(-1)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":426269,"byte_end":426339,"line_start":558,"line_end":558,"column_start":5,"column_end":75}},{"value":"/            Some(hms(3, 5, 8)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":426344,"byte_end":426379,"line_start":559,"line_end":559,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(hms(3, 5, 7).checked_sub_signed(Duration::seconds(3600 + 60)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":426384,"byte_end":426461,"line_start":560,"line_end":560,"column_start":5,"column_end":82}},{"value":"/            Some(hms(2, 4, 7)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":426466,"byte_end":426501,"line_start":561,"line_end":561,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(hms(3, 5, 7).checked_sub_signed(Duration::seconds(86_400)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":426506,"byte_end":426580,"line_start":562,"line_end":562,"column_start":5,"column_end":79}},{"value":"/            Some(from_ymd(2016, 7, 7).and_hms(3, 5, 7)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":426585,"byte_end":426645,"line_start":563,"line_end":563,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":426650,"byte_end":426653,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ let hmsm = |h, m, s, milli| d.and_hms_milli(h, m, s, milli);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":426658,"byte_end":426722,"line_start":565,"line_end":565,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(hmsm(3, 5, 7, 450).checked_sub_signed(Duration::milliseconds(670)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":426727,"byte_end":426809,"line_start":566,"line_end":566,"column_start":5,"column_end":87}},{"value":"/            Some(hmsm(3, 5, 6, 780)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":426814,"byte_end":426855,"line_start":567,"line_end":567,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":426860,"byte_end":426867,"line_start":568,"line_end":568,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":426872,"byte_end":426875,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ Overflow returns `None`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":426880,"byte_end":426908,"line_start":570,"line_end":570,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":426913,"byte_end":426916,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":426921,"byte_end":426928,"line_start":572,"line_end":572,"column_start":5,"column_end":12}},{"value":"/ # use chrono::{Duration, NaiveDate};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":426933,"byte_end":426973,"line_start":573,"line_end":573,"column_start":5,"column_end":45}},{"value":"/ # let hms = |h, m, s| NaiveDate::from_ymd(2016, 7, 8).and_hms(h, m, s);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":426978,"byte_end":427053,"line_start":574,"line_end":574,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(hms(3, 5, 7).checked_sub_signed(Duration::days(1_000_000_000)), None);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":427058,"byte_end":427143,"line_start":575,"line_end":575,"column_start":5,"column_end":90}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":427148,"byte_end":427155,"line_start":576,"line_end":576,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":427160,"byte_end":427163,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ Leap seconds are handled,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":427168,"byte_end":427197,"line_start":578,"line_end":578,"column_start":5,"column_end":34}},{"value":"/ but the subtraction assumes that it is the only leap second happened.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":427202,"byte_end":427275,"line_start":579,"line_end":579,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":427280,"byte_end":427283,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":427288,"byte_end":427295,"line_start":581,"line_end":581,"column_start":5,"column_end":12}},{"value":"/ # use chrono::{Duration, NaiveDate};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":427300,"byte_end":427340,"line_start":582,"line_end":582,"column_start":5,"column_end":45}},{"value":"/ # let from_ymd = NaiveDate::from_ymd;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":427345,"byte_end":427386,"line_start":583,"line_end":583,"column_start":5,"column_end":46}},{"value":"/ # let hmsm = |h, m, s, milli| from_ymd(2016, 7, 8).and_hms_milli(h, m, s, milli);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":427391,"byte_end":427476,"line_start":584,"line_end":584,"column_start":5,"column_end":90}},{"value":"/ let leap = hmsm(3, 5, 59, 1_300);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":427481,"byte_end":427518,"line_start":585,"line_end":585,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(leap.checked_sub_signed(Duration::zero()),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":427523,"byte_end":427580,"line_start":586,"line_end":586,"column_start":5,"column_end":62}},{"value":"/            Some(hmsm(3, 5, 59, 1_300)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":427585,"byte_end":427629,"line_start":587,"line_end":587,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(leap.checked_sub_signed(Duration::milliseconds(200)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":427634,"byte_end":427702,"line_start":588,"line_end":588,"column_start":5,"column_end":73}},{"value":"/            Some(hmsm(3, 5, 59, 1_100)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":427707,"byte_end":427751,"line_start":589,"line_end":589,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(leap.checked_sub_signed(Duration::milliseconds(500)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":427756,"byte_end":427824,"line_start":590,"line_end":590,"column_start":5,"column_end":73}},{"value":"/            Some(hmsm(3, 5, 59, 800)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":427829,"byte_end":427871,"line_start":591,"line_end":591,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(leap.checked_sub_signed(Duration::seconds(60)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":427876,"byte_end":427938,"line_start":592,"line_end":592,"column_start":5,"column_end":67}},{"value":"/            Some(hmsm(3, 5, 0, 300)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":427943,"byte_end":427984,"line_start":593,"line_end":593,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(leap.checked_sub_signed(Duration::days(1)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":427989,"byte_end":428047,"line_start":594,"line_end":594,"column_start":5,"column_end":63}},{"value":"/            Some(from_ymd(2016, 7, 7).and_hms_milli(3, 6, 0, 300)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":428052,"byte_end":428123,"line_start":595,"line_end":595,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":428128,"byte_end":428135,"line_start":596,"line_end":596,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2173},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":430367,"byte_end":430388,"line_start":647,"line_end":647,"column_start":12,"column_end":33},"name":"signed_duration_since","qualname":"<NaiveDateTime>::signed_duration_since","value":"fn signed_duration_since(Self, NaiveDateTime) -> OldDuration","parent":null,"children":[],"decl_id":null,"docs":" Subtracts another `NaiveDateTime` from the current date and time.\n This does not overflow or underflow at all.","sig":null,"attributes":[{"value":"/ Subtracts another `NaiveDateTime` from the current date and time.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":428591,"byte_end":428660,"line_start":609,"line_end":609,"column_start":5,"column_end":74}},{"value":"/ This does not overflow or underflow at all.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":428665,"byte_end":428712,"line_start":610,"line_end":610,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":428717,"byte_end":428720,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ As a part of Chrono's [leap second handling](./struct.NaiveTime.html#leap-second-handling),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":428725,"byte_end":428820,"line_start":612,"line_end":612,"column_start":5,"column_end":100}},{"value":"/ the subtraction assumes that **there is no leap second ever**,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":428825,"byte_end":428891,"line_start":613,"line_end":613,"column_start":5,"column_end":71}},{"value":"/ except when any of the `NaiveDateTime`s themselves represents a leap second","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":428896,"byte_end":428975,"line_start":614,"line_end":614,"column_start":5,"column_end":84}},{"value":"/ in which case the assumption becomes that","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":428980,"byte_end":429025,"line_start":615,"line_end":615,"column_start":5,"column_end":50}},{"value":"/ **there are exactly one (or two) leap second(s) ever**.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":429030,"byte_end":429089,"line_start":616,"line_end":616,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":429094,"byte_end":429097,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":429102,"byte_end":429115,"line_start":618,"line_end":618,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":429120,"byte_end":429123,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":429128,"byte_end":429135,"line_start":620,"line_end":620,"column_start":5,"column_end":12}},{"value":"/ use chrono::{Duration, NaiveDate};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":429140,"byte_end":429178,"line_start":621,"line_end":621,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":429183,"byte_end":429186,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ let from_ymd = NaiveDate::from_ymd;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":429191,"byte_end":429230,"line_start":623,"line_end":623,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":429235,"byte_end":429238,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ let d = from_ymd(2016, 7, 8);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":429243,"byte_end":429276,"line_start":625,"line_end":625,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(d.and_hms(3, 5, 7).signed_duration_since(d.and_hms(2, 4, 6)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":429281,"byte_end":429357,"line_start":626,"line_end":626,"column_start":5,"column_end":81}},{"value":"/            Duration::seconds(3600 + 60 + 1));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":429362,"byte_end":429411,"line_start":627,"line_end":627,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":429416,"byte_end":429419,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ // July 8 is 190th day in the year 2016","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":429424,"byte_end":429467,"line_start":629,"line_end":629,"column_start":5,"column_end":48}},{"value":"/ let d0 = from_ymd(2016, 1, 1);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":429472,"byte_end":429506,"line_start":630,"line_end":630,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(d.and_hms_milli(0, 7, 6, 500).signed_duration_since(d0.and_hms(0, 0, 0)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":429511,"byte_end":429599,"line_start":631,"line_end":631,"column_start":5,"column_end":93}},{"value":"/            Duration::seconds(189 * 86_400 + 7 * 60 + 6) + Duration::milliseconds(500));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":429604,"byte_end":429695,"line_start":632,"line_end":632,"column_start":5,"column_end":96}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":429700,"byte_end":429707,"line_start":633,"line_end":633,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":429712,"byte_end":429715,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ Leap seconds are handled, but the subtraction assumes that","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":429720,"byte_end":429782,"line_start":635,"line_end":635,"column_start":5,"column_end":67}},{"value":"/ there were no other leap seconds happened.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":429787,"byte_end":429833,"line_start":636,"line_end":636,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":429838,"byte_end":429841,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":429846,"byte_end":429853,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"/ # use chrono::{Duration, NaiveDate};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":429858,"byte_end":429898,"line_start":639,"line_end":639,"column_start":5,"column_end":45}},{"value":"/ # let from_ymd = NaiveDate::from_ymd;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":429903,"byte_end":429944,"line_start":640,"line_end":640,"column_start":5,"column_end":46}},{"value":"/ let leap = from_ymd(2015, 6, 30).and_hms_milli(23, 59, 59, 1_500);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":429949,"byte_end":430019,"line_start":641,"line_end":641,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(leap.signed_duration_since(from_ymd(2015, 6, 30).and_hms(23, 0, 0)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":430024,"byte_end":430107,"line_start":642,"line_end":642,"column_start":5,"column_end":88}},{"value":"/            Duration::seconds(3600) + Duration::milliseconds(500));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":430112,"byte_end":430182,"line_start":643,"line_end":643,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(from_ymd(2015, 7, 1).and_hms(1, 0, 0).signed_duration_since(leap),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":430187,"byte_end":430268,"line_start":644,"line_end":644,"column_start":5,"column_end":86}},{"value":"/            Duration::seconds(3600) - Duration::milliseconds(500));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":430273,"byte_end":430343,"line_start":645,"line_end":645,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":430348,"byte_end":430355,"line_start":646,"line_end":646,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2174},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":431826,"byte_end":431843,"line_start":680,"line_end":680,"column_start":12,"column_end":29},"name":"format_with_items","qualname":"<NaiveDateTime>::format_with_items","value":"fn format_with_items<'a, I, B>(&Self, I) -> DelayedFormat<I> where\nI: Iterator<Item = B> + Clone, B: Borrow<Item>","parent":null,"children":[],"decl_id":null,"docs":" Formats the combined date and time with the specified formatting items.\n Otherwise it is the same as the ordinary [`format`](#method.format) method.","sig":null,"attributes":[{"value":"/ Formats the combined date and time with the specified formatting items.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":430537,"byte_end":430612,"line_start":651,"line_end":651,"column_start":5,"column_end":80}},{"value":"/ Otherwise it is the same as the ordinary [`format`](#method.format) method.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":430617,"byte_end":430696,"line_start":652,"line_end":652,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":430701,"byte_end":430704,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ The `Iterator` of items should be `Clone`able,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":430709,"byte_end":430759,"line_start":654,"line_end":654,"column_start":5,"column_end":55}},{"value":"/ since the resulting `DelayedFormat` value may be formatted multiple times.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":430764,"byte_end":430842,"line_start":655,"line_end":655,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":430847,"byte_end":430850,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":430855,"byte_end":430868,"line_start":657,"line_end":657,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":430873,"byte_end":430876,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":430881,"byte_end":430888,"line_start":659,"line_end":659,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":430893,"byte_end":430919,"line_start":660,"line_end":660,"column_start":5,"column_end":31}},{"value":"/ use chrono::format::strftime::StrftimeItems;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":430924,"byte_end":430972,"line_start":661,"line_end":661,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":430977,"byte_end":430980,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ let fmt = StrftimeItems::new(\"%Y-%m-%d %H:%M:%S\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":430985,"byte_end":431039,"line_start":663,"line_end":663,"column_start":5,"column_end":59}},{"value":"/ let dt = NaiveDate::from_ymd(2015, 9, 5).and_hms(23, 56, 4);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":431044,"byte_end":431108,"line_start":664,"line_end":664,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(dt.format_with_items(fmt.clone()).to_string(), \"2015-09-05 23:56:04\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":431113,"byte_end":431198,"line_start":665,"line_end":665,"column_start":5,"column_end":90}},{"value":"/ assert_eq!(dt.format(\"%Y-%m-%d %H:%M:%S\").to_string(),    \"2015-09-05 23:56:04\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":431203,"byte_end":431288,"line_start":666,"line_end":666,"column_start":5,"column_end":90}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":431293,"byte_end":431300,"line_start":667,"line_end":667,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":431305,"byte_end":431308,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ The resulting `DelayedFormat` can be formatted directly via the `Display` trait.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":431313,"byte_end":431397,"line_start":669,"line_end":669,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":431402,"byte_end":431405,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":431410,"byte_end":431417,"line_start":671,"line_end":671,"column_start":5,"column_end":12}},{"value":"/ # use chrono::NaiveDate;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":431422,"byte_end":431450,"line_start":672,"line_end":672,"column_start":5,"column_end":33}},{"value":"/ # use chrono::format::strftime::StrftimeItems;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":431455,"byte_end":431505,"line_start":673,"line_end":673,"column_start":5,"column_end":55}},{"value":"/ # let fmt = StrftimeItems::new(\"%Y-%m-%d %H:%M:%S\").clone();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":431510,"byte_end":431574,"line_start":674,"line_end":674,"column_start":5,"column_end":69}},{"value":"/ # let dt = NaiveDate::from_ymd(2015, 9, 5).and_hms(23, 56, 4);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":431579,"byte_end":431645,"line_start":675,"line_end":675,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(format!(\"{}\", dt.format_with_items(fmt)), \"2015-09-05 23:56:04\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":431650,"byte_end":431730,"line_start":676,"line_end":676,"column_start":5,"column_end":85}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":431735,"byte_end":431742,"line_start":677,"line_end":677,"column_start":5,"column_end":12}},{"value":"cfg(any(feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":431747,"byte_end":431800,"line_start":678,"line_end":678,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":431805,"byte_end":431814,"line_start":679,"line_end":679,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2178},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":433640,"byte_end":433646,"line_start":722,"line_end":722,"column_start":12,"column_end":18},"name":"format","qualname":"<NaiveDateTime>::format","value":"fn format<'a>(&Self, &'a str) -> DelayedFormat<StrftimeItems>","parent":null,"children":[],"decl_id":null,"docs":" Formats the combined date and time with the specified format string.\n See the [`format::strftime` module](../format/strftime/index.html)\n on the supported escape sequences.","sig":null,"attributes":[{"value":"/ Formats the combined date and time with the specified format string.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":432054,"byte_end":432126,"line_start":688,"line_end":688,"column_start":5,"column_end":77}},{"value":"/ See the [`format::strftime` module](../format/strftime/index.html)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":432131,"byte_end":432201,"line_start":689,"line_end":689,"column_start":5,"column_end":75}},{"value":"/ on the supported escape sequences.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":432206,"byte_end":432244,"line_start":690,"line_end":690,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":432249,"byte_end":432252,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/ This returns a `DelayedFormat`,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":432257,"byte_end":432292,"line_start":692,"line_end":692,"column_start":5,"column_end":40}},{"value":"/ which gets converted to a string only when actual formatting happens.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":432297,"byte_end":432370,"line_start":693,"line_end":693,"column_start":5,"column_end":78}},{"value":"/ You may use the `to_string` method to get a `String`,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":432375,"byte_end":432432,"line_start":694,"line_end":694,"column_start":5,"column_end":62}},{"value":"/ or just feed it into `print!` and other formatting macros.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":432437,"byte_end":432499,"line_start":695,"line_end":695,"column_start":5,"column_end":67}},{"value":"/ (In this way it avoids the redundant memory allocation.)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":432504,"byte_end":432564,"line_start":696,"line_end":696,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":432569,"byte_end":432572,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ A wrong format string does *not* issue an error immediately.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":432577,"byte_end":432641,"line_start":698,"line_end":698,"column_start":5,"column_end":69}},{"value":"/ Rather, converting or formatting the `DelayedFormat` fails.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":432646,"byte_end":432709,"line_start":699,"line_end":699,"column_start":5,"column_end":68}},{"value":"/ You are recommended to immediately use `DelayedFormat` for this reason.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":432714,"byte_end":432789,"line_start":700,"line_end":700,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":432794,"byte_end":432797,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":432802,"byte_end":432815,"line_start":702,"line_end":702,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":432820,"byte_end":432823,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":432828,"byte_end":432835,"line_start":704,"line_end":704,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":432840,"byte_end":432866,"line_start":705,"line_end":705,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":432871,"byte_end":432874,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(2015, 9, 5).and_hms(23, 56, 4);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":432879,"byte_end":432943,"line_start":707,"line_end":707,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(dt.format(\"%Y-%m-%d %H:%M:%S\").to_string(), \"2015-09-05 23:56:04\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":432948,"byte_end":433030,"line_start":708,"line_end":708,"column_start":5,"column_end":87}},{"value":"/ assert_eq!(dt.format(\"around %l %p on %b %-d\").to_string(), \"around 11 PM on Sep 5\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":433035,"byte_end":433124,"line_start":709,"line_end":709,"column_start":5,"column_end":94}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":433129,"byte_end":433136,"line_start":710,"line_end":710,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":433141,"byte_end":433144,"line_start":711,"line_end":711,"column_start":5,"column_end":8}},{"value":"/ The resulting `DelayedFormat` can be formatted directly via the `Display` trait.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":433149,"byte_end":433233,"line_start":712,"line_end":712,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":433238,"byte_end":433241,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":433246,"byte_end":433253,"line_start":714,"line_end":714,"column_start":5,"column_end":12}},{"value":"/ # use chrono::NaiveDate;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":433258,"byte_end":433286,"line_start":715,"line_end":715,"column_start":5,"column_end":33}},{"value":"/ # let dt = NaiveDate::from_ymd(2015, 9, 5).and_hms(23, 56, 4);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":433291,"byte_end":433357,"line_start":716,"line_end":716,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(format!(\"{}\", dt.format(\"%Y-%m-%d %H:%M:%S\")), \"2015-09-05 23:56:04\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":433362,"byte_end":433447,"line_start":717,"line_end":717,"column_start":5,"column_end":90}},{"value":"/ assert_eq!(format!(\"{}\", dt.format(\"around %l %p on %b %-d\")), \"around 11 PM on Sep 5\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":433452,"byte_end":433544,"line_start":718,"line_end":718,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":433549,"byte_end":433556,"line_start":719,"line_end":719,"column_start":5,"column_end":12}},{"value":"cfg(any(feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":433561,"byte_end":433614,"line_start":720,"line_end":720,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":433619,"byte_end":433628,"line_start":721,"line_end":721,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2180},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":434680,"byte_end":434698,"line_start":743,"line_end":743,"column_start":12,"column_end":30},"name":"and_local_timezone","qualname":"<NaiveDateTime>::and_local_timezone","value":"fn and_local_timezone<Tz>(&Self, Tz) -> LocalResult<DateTime<Tz>> where\nTz: TimeZone","parent":null,"children":[],"decl_id":null,"docs":" Converts the `NaiveDateTime` into the timezone-aware `DateTime<Tz>`\n with the provided timezone, if possible.","sig":null,"attributes":[{"value":"/ Converts the `NaiveDateTime` into the timezone-aware `DateTime<Tz>`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":433777,"byte_end":433848,"line_start":726,"line_end":726,"column_start":5,"column_end":76}},{"value":"/ with the provided timezone, if possible.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":433853,"byte_end":433897,"line_start":727,"line_end":727,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":433902,"byte_end":433905,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ This can fail in cases where the local time represented by the `NaiveDateTime`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":433910,"byte_end":433992,"line_start":729,"line_end":729,"column_start":5,"column_end":87}},{"value":"/ is not a valid local timestamp in the target timezone due to an offset transition","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":433997,"byte_end":434082,"line_start":730,"line_end":730,"column_start":5,"column_end":90}},{"value":"/ for example if the target timezone had a change from +00:00 to +01:00","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":434087,"byte_end":434160,"line_start":731,"line_end":731,"column_start":5,"column_end":78}},{"value":"/ occuring at 2015-09-05 22:59:59, then a local time of 2015-09-05 23:56:04","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":434165,"byte_end":434242,"line_start":732,"line_end":732,"column_start":5,"column_end":82}},{"value":"/ could never occur. Similarly, if the offset transitioned in the opposite direction","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":434247,"byte_end":434333,"line_start":733,"line_end":733,"column_start":5,"column_end":91}},{"value":"/ then there would be two local times of 2015-09-05 23:56:04, one at +00:00 and one","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":434338,"byte_end":434423,"line_start":734,"line_end":734,"column_start":5,"column_end":90}},{"value":"/ at +01:00.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":434428,"byte_end":434442,"line_start":735,"line_end":735,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":434447,"byte_end":434450,"line_start":736,"line_end":736,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":434455,"byte_end":434468,"line_start":737,"line_end":737,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":434473,"byte_end":434476,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":434481,"byte_end":434488,"line_start":739,"line_end":739,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Utc};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":434493,"byte_end":434526,"line_start":740,"line_end":740,"column_start":5,"column_end":38}},{"value":"/ let dt = NaiveDate::from_ymd(2015, 9, 5).and_hms(23, 56, 4).and_local_timezone(Utc).unwrap();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":434531,"byte_end":434628,"line_start":741,"line_end":741,"column_start":5,"column_end":102}},{"value":"/ assert_eq!(dt.timezone(), Utc);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":434633,"byte_end":434668,"line_start":742,"line_end":742,"column_start":5,"column_end":40}}]},{"kind":"Const","id":{"krate":0,"index":2182},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":434863,"byte_end":434866,"line_start":748,"line_end":748,"column_start":15,"column_end":18},"name":"MIN","qualname":"::naive::datetime::NaiveDateTime::MIN","value":"Self","parent":{"krate":0,"index":2155},"children":[],"decl_id":null,"docs":" The minimum possible `NaiveDateTime`.\n","sig":null,"attributes":[{"value":"/ The minimum possible `NaiveDateTime`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":434807,"byte_end":434848,"line_start":747,"line_end":747,"column_start":5,"column_end":46}}]},{"kind":"Const","id":{"krate":0,"index":2183},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":434988,"byte_end":434991,"line_start":750,"line_end":750,"column_start":15,"column_end":18},"name":"MAX","qualname":"::naive::datetime::NaiveDateTime::MAX","value":"Self","parent":{"krate":0,"index":2155},"children":[],"decl_id":null,"docs":" The maximum possible `NaiveDateTime`.\n","sig":null,"attributes":[{"value":"/ The maximum possible `NaiveDateTime`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":434932,"byte_end":434973,"line_start":749,"line_end":749,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2185},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":435499,"byte_end":435503,"line_start":767,"line_end":767,"column_start":8,"column_end":12},"name":"year","qualname":"<NaiveDateTime as traits::Datelike>::year","value":"fn year(&Self) -> i32","parent":{"krate":0,"index":3411},"children":[],"decl_id":{"krate":0,"index":3412},"docs":" Returns the year number in the [calendar date](./index.html#calendar-date).","sig":null,"attributes":[{"value":"/ Returns the year number in the [calendar date](./index.html#calendar-date).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":435094,"byte_end":435173,"line_start":754,"line_end":754,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":435178,"byte_end":435181,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ See also the [`NaiveDate::year`] method.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":435186,"byte_end":435230,"line_start":756,"line_end":756,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":435235,"byte_end":435238,"line_start":757,"line_end":757,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":435243,"byte_end":435256,"line_start":758,"line_end":758,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":435261,"byte_end":435264,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":435269,"byte_end":435276,"line_start":760,"line_end":760,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Datelike};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":435281,"byte_end":435334,"line_start":761,"line_end":761,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":435339,"byte_end":435342,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 25).and_hms(12, 34, 56);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":435347,"byte_end":435428,"line_start":763,"line_end":763,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(dt.year(), 2015);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":435433,"byte_end":435465,"line_start":764,"line_end":764,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":435470,"byte_end":435477,"line_start":765,"line_end":765,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":435482,"byte_end":435491,"line_start":766,"line_end":766,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2186},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":436018,"byte_end":436023,"line_start":786,"line_end":786,"column_start":8,"column_end":13},"name":"month","qualname":"<NaiveDateTime as traits::Datelike>::month","value":"fn month(&Self) -> u32","parent":{"krate":0,"index":3411},"children":[],"decl_id":{"krate":0,"index":3414},"docs":" Returns the month number starting from 1.","sig":null,"attributes":[{"value":"/ Returns the month number starting from 1.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":435556,"byte_end":435601,"line_start":771,"line_end":771,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":435606,"byte_end":435609,"line_start":772,"line_end":772,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 1 to 12.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":435614,"byte_end":435655,"line_start":773,"line_end":773,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":435660,"byte_end":435663,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ See also the [`NaiveDate::month`](./struct.NaiveDate.html#method.month) method.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":435668,"byte_end":435751,"line_start":775,"line_end":775,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":435756,"byte_end":435759,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":435764,"byte_end":435777,"line_start":777,"line_end":777,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":435782,"byte_end":435785,"line_start":778,"line_end":778,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":435790,"byte_end":435797,"line_start":779,"line_end":779,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Datelike};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":435802,"byte_end":435855,"line_start":780,"line_end":780,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":435860,"byte_end":435863,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 25).and_hms(12, 34, 56);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":435868,"byte_end":435949,"line_start":782,"line_end":782,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(dt.month(), 9);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":435954,"byte_end":435984,"line_start":783,"line_end":783,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":435989,"byte_end":435996,"line_start":784,"line_end":784,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":436001,"byte_end":436010,"line_start":785,"line_end":785,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2187},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":436542,"byte_end":436548,"line_start":805,"line_end":805,"column_start":8,"column_end":14},"name":"month0","qualname":"<NaiveDateTime as traits::Datelike>::month0","value":"fn month0(&Self) -> u32","parent":{"krate":0,"index":3411},"children":[],"decl_id":{"krate":0,"index":3415},"docs":" Returns the month number starting from 0.","sig":null,"attributes":[{"value":"/ Returns the month number starting from 0.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":436077,"byte_end":436122,"line_start":790,"line_end":790,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":436127,"byte_end":436130,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 0 to 11.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":436135,"byte_end":436176,"line_start":792,"line_end":792,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":436181,"byte_end":436184,"line_start":793,"line_end":793,"column_start":5,"column_end":8}},{"value":"/ See also the [`NaiveDate::month0`](./struct.NaiveDate.html#method.month0) method.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":436189,"byte_end":436274,"line_start":794,"line_end":794,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":436279,"byte_end":436282,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":436287,"byte_end":436300,"line_start":796,"line_end":796,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":436305,"byte_end":436308,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":436313,"byte_end":436320,"line_start":798,"line_end":798,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Datelike};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":436325,"byte_end":436378,"line_start":799,"line_end":799,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":436383,"byte_end":436386,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 25).and_hms(12, 34, 56);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":436391,"byte_end":436472,"line_start":801,"line_end":801,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(dt.month0(), 8);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":436477,"byte_end":436508,"line_start":802,"line_end":802,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":436513,"byte_end":436520,"line_start":803,"line_end":803,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":436525,"byte_end":436534,"line_start":804,"line_end":804,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2188},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":437103,"byte_end":437106,"line_start":824,"line_end":824,"column_start":8,"column_end":11},"name":"day","qualname":"<NaiveDateTime as traits::Datelike>::day","value":"fn day(&Self) -> u32","parent":{"krate":0,"index":3411},"children":[],"decl_id":{"krate":0,"index":3416},"docs":" Returns the day of month starting from 1.","sig":null,"attributes":[{"value":"/ Returns the day of month starting from 1.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":436603,"byte_end":436648,"line_start":809,"line_end":809,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":436653,"byte_end":436656,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 1 to 31. (The last day of month differs by months.)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":436661,"byte_end":436745,"line_start":811,"line_end":811,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":436750,"byte_end":436753,"line_start":812,"line_end":812,"column_start":5,"column_end":8}},{"value":"/ See also the [`NaiveDate::day`](./struct.NaiveDate.html#method.day) method.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":436758,"byte_end":436837,"line_start":813,"line_end":813,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":436842,"byte_end":436845,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":436850,"byte_end":436863,"line_start":815,"line_end":815,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":436868,"byte_end":436871,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":436876,"byte_end":436883,"line_start":817,"line_end":817,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Datelike};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":436888,"byte_end":436941,"line_start":818,"line_end":818,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":436946,"byte_end":436949,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 25).and_hms(12, 34, 56);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":436954,"byte_end":437035,"line_start":820,"line_end":820,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(dt.day(), 25);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":437040,"byte_end":437069,"line_start":821,"line_end":821,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":437074,"byte_end":437081,"line_start":822,"line_end":822,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":437086,"byte_end":437095,"line_start":823,"line_end":823,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2189},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":437661,"byte_end":437665,"line_start":843,"line_end":843,"column_start":8,"column_end":12},"name":"day0","qualname":"<NaiveDateTime as traits::Datelike>::day0","value":"fn day0(&Self) -> u32","parent":{"krate":0,"index":3411},"children":[],"decl_id":{"krate":0,"index":3417},"docs":" Returns the day of month starting from 0.","sig":null,"attributes":[{"value":"/ Returns the day of month starting from 0.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":437158,"byte_end":437203,"line_start":828,"line_end":828,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":437208,"byte_end":437211,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 0 to 30. (The last day of month differs by months.)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":437216,"byte_end":437300,"line_start":830,"line_end":830,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":437305,"byte_end":437308,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ See also the [`NaiveDate::day0`](./struct.NaiveDate.html#method.day0) method.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":437313,"byte_end":437394,"line_start":832,"line_end":832,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":437399,"byte_end":437402,"line_start":833,"line_end":833,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":437407,"byte_end":437420,"line_start":834,"line_end":834,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":437425,"byte_end":437428,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":437433,"byte_end":437440,"line_start":836,"line_end":836,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Datelike};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":437445,"byte_end":437498,"line_start":837,"line_end":837,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":437503,"byte_end":437506,"line_start":838,"line_end":838,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 25).and_hms(12, 34, 56);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":437511,"byte_end":437592,"line_start":839,"line_end":839,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(dt.day0(), 24);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":437597,"byte_end":437627,"line_start":840,"line_end":840,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":437632,"byte_end":437639,"line_start":841,"line_end":841,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":437644,"byte_end":437653,"line_start":842,"line_end":842,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2190},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":438229,"byte_end":438236,"line_start":862,"line_end":862,"column_start":8,"column_end":15},"name":"ordinal","qualname":"<NaiveDateTime as traits::Datelike>::ordinal","value":"fn ordinal(&Self) -> u32","parent":{"krate":0,"index":3411},"children":[],"decl_id":{"krate":0,"index":3418},"docs":" Returns the day of year starting from 1.","sig":null,"attributes":[{"value":"/ Returns the day of year starting from 1.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":437718,"byte_end":437762,"line_start":847,"line_end":847,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":437767,"byte_end":437770,"line_start":848,"line_end":848,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 1 to 366. (The last day of year differs by years.)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":437775,"byte_end":437858,"line_start":849,"line_end":849,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":437863,"byte_end":437866,"line_start":850,"line_end":850,"column_start":5,"column_end":8}},{"value":"/ See also the [`NaiveDate::ordinal`](./struct.NaiveDate.html#method.ordinal) method.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":437871,"byte_end":437958,"line_start":851,"line_end":851,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":437963,"byte_end":437966,"line_start":852,"line_end":852,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":437971,"byte_end":437984,"line_start":853,"line_end":853,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":437989,"byte_end":437992,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":437997,"byte_end":438004,"line_start":855,"line_end":855,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Datelike};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":438009,"byte_end":438062,"line_start":856,"line_end":856,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":438067,"byte_end":438070,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 25).and_hms(12, 34, 56);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":438075,"byte_end":438156,"line_start":858,"line_end":858,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(dt.ordinal(), 268);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":438161,"byte_end":438195,"line_start":859,"line_end":859,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":438200,"byte_end":438207,"line_start":860,"line_end":860,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":438212,"byte_end":438221,"line_start":861,"line_end":861,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2191},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":438806,"byte_end":438814,"line_start":881,"line_end":881,"column_start":8,"column_end":16},"name":"ordinal0","qualname":"<NaiveDateTime as traits::Datelike>::ordinal0","value":"fn ordinal0(&Self) -> u32","parent":{"krate":0,"index":3411},"children":[],"decl_id":{"krate":0,"index":3419},"docs":" Returns the day of year starting from 0.","sig":null,"attributes":[{"value":"/ Returns the day of year starting from 0.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":438292,"byte_end":438336,"line_start":866,"line_end":866,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":438341,"byte_end":438344,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 0 to 365. (The last day of year differs by years.)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":438349,"byte_end":438432,"line_start":868,"line_end":868,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":438437,"byte_end":438440,"line_start":869,"line_end":869,"column_start":5,"column_end":8}},{"value":"/ See also the [`NaiveDate::ordinal0`](./struct.NaiveDate.html#method.ordinal0) method.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":438445,"byte_end":438534,"line_start":870,"line_end":870,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":438539,"byte_end":438542,"line_start":871,"line_end":871,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":438547,"byte_end":438560,"line_start":872,"line_end":872,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":438565,"byte_end":438568,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":438573,"byte_end":438580,"line_start":874,"line_end":874,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Datelike};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":438585,"byte_end":438638,"line_start":875,"line_end":875,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":438643,"byte_end":438646,"line_start":876,"line_end":876,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 25).and_hms(12, 34, 56);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":438651,"byte_end":438732,"line_start":877,"line_end":877,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(dt.ordinal0(), 267);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":438737,"byte_end":438772,"line_start":878,"line_end":878,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":438777,"byte_end":438784,"line_start":879,"line_end":879,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":438789,"byte_end":438798,"line_start":880,"line_end":880,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2192},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":439288,"byte_end":439295,"line_start":898,"line_end":898,"column_start":8,"column_end":15},"name":"weekday","qualname":"<NaiveDateTime as traits::Datelike>::weekday","value":"fn weekday(&Self) -> Weekday","parent":{"krate":0,"index":3411},"children":[],"decl_id":{"krate":0,"index":3420},"docs":" Returns the day of week.","sig":null,"attributes":[{"value":"/ Returns the day of week.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":438871,"byte_end":438899,"line_start":885,"line_end":885,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":438904,"byte_end":438907,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ See also the [`NaiveDate::weekday`](./struct.NaiveDate.html#method.weekday) method.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":438912,"byte_end":438999,"line_start":887,"line_end":887,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":439004,"byte_end":439007,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":439012,"byte_end":439025,"line_start":889,"line_end":889,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":439030,"byte_end":439033,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":439038,"byte_end":439045,"line_start":891,"line_end":891,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Datelike, Weekday};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":439050,"byte_end":439112,"line_start":892,"line_end":892,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":439117,"byte_end":439120,"line_start":893,"line_end":893,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 25).and_hms(12, 34, 56);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":439125,"byte_end":439206,"line_start":894,"line_end":894,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(dt.weekday(), Weekday::Fri);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":439211,"byte_end":439254,"line_start":895,"line_end":895,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":439259,"byte_end":439266,"line_start":896,"line_end":896,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":439271,"byte_end":439280,"line_start":897,"line_end":897,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2193},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":439372,"byte_end":439380,"line_start":903,"line_end":903,"column_start":8,"column_end":16},"name":"iso_week","qualname":"<NaiveDateTime as traits::Datelike>::iso_week","value":"fn iso_week(&Self) -> IsoWeek","parent":{"krate":0,"index":3411},"children":[],"decl_id":{"krate":0,"index":3421},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":439355,"byte_end":439364,"line_start":902,"line_end":902,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2194},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":440080,"byte_end":440089,"line_start":923,"line_end":923,"column_start":8,"column_end":17},"name":"with_year","qualname":"<NaiveDateTime as traits::Datelike>::with_year","value":"fn with_year(&Self, i32) -> Option<NaiveDateTime>","parent":{"krate":0,"index":3411},"children":[],"decl_id":{"krate":0,"index":3422},"docs":" Makes a new `NaiveDateTime` with the year number changed.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` with the year number changed.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":439441,"byte_end":439502,"line_start":907,"line_end":907,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":439507,"byte_end":439510,"line_start":908,"line_end":908,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting `NaiveDateTime` would be invalid.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":439515,"byte_end":439586,"line_start":909,"line_end":909,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":439591,"byte_end":439594,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ See also the [`NaiveDate::with_year`] method.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":439599,"byte_end":439648,"line_start":911,"line_end":911,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":439653,"byte_end":439656,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":439661,"byte_end":439674,"line_start":913,"line_end":913,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":439679,"byte_end":439682,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":439687,"byte_end":439694,"line_start":915,"line_end":915,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Datelike};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":439699,"byte_end":439752,"line_start":916,"line_end":916,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":439757,"byte_end":439760,"line_start":917,"line_end":917,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 25).and_hms(12, 34, 56);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":439765,"byte_end":439846,"line_start":918,"line_end":918,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(dt.with_year(2016), Some(NaiveDate::from_ymd(2016, 9, 25).and_hms(12, 34, 56)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":439851,"byte_end":439946,"line_start":919,"line_end":919,"column_start":5,"column_end":100}},{"value":"/ assert_eq!(dt.with_year(-308), Some(NaiveDate::from_ymd(-308, 9, 25).and_hms(12, 34, 56)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":439951,"byte_end":440046,"line_start":920,"line_end":920,"column_start":5,"column_end":100}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":440051,"byte_end":440058,"line_start":921,"line_end":921,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":440063,"byte_end":440072,"line_start":922,"line_end":922,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2196},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":440905,"byte_end":440915,"line_start":944,"line_end":944,"column_start":8,"column_end":18},"name":"with_month","qualname":"<NaiveDateTime as traits::Datelike>::with_month","value":"fn with_month(&Self, u32) -> Option<NaiveDateTime>","parent":{"krate":0,"index":3411},"children":[],"decl_id":{"krate":0,"index":3423},"docs":" Makes a new `NaiveDateTime` with the month number (starting from 1) changed.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` with the month number (starting from 1) changed.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":440224,"byte_end":440304,"line_start":927,"line_end":927,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":440309,"byte_end":440312,"line_start":928,"line_end":928,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting `NaiveDateTime` would be invalid.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":440317,"byte_end":440388,"line_start":929,"line_end":929,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":440393,"byte_end":440396,"line_start":930,"line_end":930,"column_start":5,"column_end":8}},{"value":"/ See also the [`NaiveDate::with_month`] method.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":440401,"byte_end":440451,"line_start":931,"line_end":931,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":440456,"byte_end":440459,"line_start":932,"line_end":932,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":440464,"byte_end":440477,"line_start":933,"line_end":933,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":440482,"byte_end":440485,"line_start":934,"line_end":934,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":440490,"byte_end":440497,"line_start":935,"line_end":935,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Datelike};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":440502,"byte_end":440555,"line_start":936,"line_end":936,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":440560,"byte_end":440563,"line_start":937,"line_end":937,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 30).and_hms(12, 34, 56);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":440568,"byte_end":440649,"line_start":938,"line_end":938,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(dt.with_month(10), Some(NaiveDate::from_ymd(2015, 10, 30).and_hms(12, 34, 56)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":440654,"byte_end":440749,"line_start":939,"line_end":939,"column_start":5,"column_end":100}},{"value":"/ assert_eq!(dt.with_month(13), None); // no month 13","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":440754,"byte_end":440809,"line_start":940,"line_end":940,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(dt.with_month(2), None); // no February 30","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":440814,"byte_end":440871,"line_start":941,"line_end":941,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":440876,"byte_end":440883,"line_start":942,"line_end":942,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":440888,"byte_end":440897,"line_start":943,"line_end":943,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2198},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":441737,"byte_end":441748,"line_start":965,"line_end":965,"column_start":8,"column_end":19},"name":"with_month0","qualname":"<NaiveDateTime as traits::Datelike>::with_month0","value":"fn with_month0(&Self, u32) -> Option<NaiveDateTime>","parent":{"krate":0,"index":3411},"children":[],"decl_id":{"krate":0,"index":3424},"docs":" Makes a new `NaiveDateTime` with the month number (starting from 0) changed.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` with the month number (starting from 0) changed.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":441053,"byte_end":441133,"line_start":948,"line_end":948,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":441138,"byte_end":441141,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting `NaiveDateTime` would be invalid.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":441146,"byte_end":441217,"line_start":950,"line_end":950,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":441222,"byte_end":441225,"line_start":951,"line_end":951,"column_start":5,"column_end":8}},{"value":"/ See also the [`NaiveDate::with_month0`] method.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":441230,"byte_end":441281,"line_start":952,"line_end":952,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":441286,"byte_end":441289,"line_start":953,"line_end":953,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":441294,"byte_end":441307,"line_start":954,"line_end":954,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":441312,"byte_end":441315,"line_start":955,"line_end":955,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":441320,"byte_end":441327,"line_start":956,"line_end":956,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Datelike};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":441332,"byte_end":441385,"line_start":957,"line_end":957,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":441390,"byte_end":441393,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 30).and_hms(12, 34, 56);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":441398,"byte_end":441479,"line_start":959,"line_end":959,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(dt.with_month0(9), Some(NaiveDate::from_ymd(2015, 10, 30).and_hms(12, 34, 56)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":441484,"byte_end":441579,"line_start":960,"line_end":960,"column_start":5,"column_end":100}},{"value":"/ assert_eq!(dt.with_month0(12), None); // no month 13","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":441584,"byte_end":441640,"line_start":961,"line_end":961,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(dt.with_month0(1), None); // no February 30","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":441645,"byte_end":441703,"line_start":962,"line_end":962,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":441708,"byte_end":441715,"line_start":963,"line_end":963,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":441720,"byte_end":441729,"line_start":964,"line_end":964,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2200},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":442504,"byte_end":442512,"line_start":985,"line_end":985,"column_start":8,"column_end":16},"name":"with_day","qualname":"<NaiveDateTime as traits::Datelike>::with_day","value":"fn with_day(&Self, u32) -> Option<NaiveDateTime>","parent":{"krate":0,"index":3411},"children":[],"decl_id":{"krate":0,"index":3425},"docs":" Makes a new `NaiveDateTime` with the day of month (starting from 1) changed.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` with the day of month (starting from 1) changed.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":441889,"byte_end":441969,"line_start":969,"line_end":969,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":441974,"byte_end":441977,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting `NaiveDateTime` would be invalid.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":441982,"byte_end":442053,"line_start":971,"line_end":971,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":442058,"byte_end":442061,"line_start":972,"line_end":972,"column_start":5,"column_end":8}},{"value":"/ See also the [`NaiveDate::with_day`] method.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":442066,"byte_end":442114,"line_start":973,"line_end":973,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":442119,"byte_end":442122,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":442127,"byte_end":442140,"line_start":975,"line_end":975,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":442145,"byte_end":442148,"line_start":976,"line_end":976,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":442153,"byte_end":442160,"line_start":977,"line_end":977,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Datelike};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":442165,"byte_end":442218,"line_start":978,"line_end":978,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":442223,"byte_end":442226,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 8).and_hms(12, 34, 56);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":442231,"byte_end":442311,"line_start":980,"line_end":980,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(dt.with_day(30), Some(NaiveDate::from_ymd(2015, 9, 30).and_hms(12, 34, 56)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":442316,"byte_end":442408,"line_start":981,"line_end":981,"column_start":5,"column_end":97}},{"value":"/ assert_eq!(dt.with_day(31), None); // no September 31","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":442413,"byte_end":442470,"line_start":982,"line_end":982,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":442475,"byte_end":442482,"line_start":983,"line_end":983,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":442487,"byte_end":442496,"line_start":984,"line_end":984,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2202},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":443262,"byte_end":443271,"line_start":1005,"line_end":1005,"column_start":8,"column_end":17},"name":"with_day0","qualname":"<NaiveDateTime as traits::Datelike>::with_day0","value":"fn with_day0(&Self, u32) -> Option<NaiveDateTime>","parent":{"krate":0,"index":3411},"children":[],"decl_id":{"krate":0,"index":3426},"docs":" Makes a new `NaiveDateTime` with the day of month (starting from 0) changed.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` with the day of month (starting from 0) changed.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":442644,"byte_end":442724,"line_start":989,"line_end":989,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":442729,"byte_end":442732,"line_start":990,"line_end":990,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting `NaiveDateTime` would be invalid.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":442737,"byte_end":442808,"line_start":991,"line_end":991,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":442813,"byte_end":442816,"line_start":992,"line_end":992,"column_start":5,"column_end":8}},{"value":"/ See also the [`NaiveDate::with_day0`] method.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":442821,"byte_end":442870,"line_start":993,"line_end":993,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":442875,"byte_end":442878,"line_start":994,"line_end":994,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":442883,"byte_end":442896,"line_start":995,"line_end":995,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":442901,"byte_end":442904,"line_start":996,"line_end":996,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":442909,"byte_end":442916,"line_start":997,"line_end":997,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Datelike};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":442921,"byte_end":442974,"line_start":998,"line_end":998,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":442979,"byte_end":442982,"line_start":999,"line_end":999,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 8).and_hms(12, 34, 56);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":442987,"byte_end":443067,"line_start":1000,"line_end":1000,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(dt.with_day0(29), Some(NaiveDate::from_ymd(2015, 9, 30).and_hms(12, 34, 56)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":443072,"byte_end":443165,"line_start":1001,"line_end":1001,"column_start":5,"column_end":98}},{"value":"/ assert_eq!(dt.with_day0(30), None); // no September 31","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":443170,"byte_end":443228,"line_start":1002,"line_end":1002,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":443233,"byte_end":443240,"line_start":1003,"line_end":1003,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":443245,"byte_end":443254,"line_start":1004,"line_end":1004,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2204},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":444393,"byte_end":444405,"line_start":1032,"line_end":1032,"column_start":8,"column_end":20},"name":"with_ordinal","qualname":"<NaiveDateTime as traits::Datelike>::with_ordinal","value":"fn with_ordinal(&Self, u32) -> Option<NaiveDateTime>","parent":{"krate":0,"index":3411},"children":[],"decl_id":{"krate":0,"index":3427},"docs":" Makes a new `NaiveDateTime` with the day of year (starting from 1) changed.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` with the day of year (starting from 1) changed.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":443406,"byte_end":443485,"line_start":1009,"line_end":1009,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":443490,"byte_end":443493,"line_start":1010,"line_end":1010,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting `NaiveDateTime` would be invalid.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":443498,"byte_end":443569,"line_start":1011,"line_end":1011,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":443574,"byte_end":443577,"line_start":1012,"line_end":1012,"column_start":5,"column_end":8}},{"value":"/ See also the [`NaiveDate::with_ordinal`] method.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":443582,"byte_end":443634,"line_start":1013,"line_end":1013,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":443639,"byte_end":443642,"line_start":1014,"line_end":1014,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":443647,"byte_end":443660,"line_start":1015,"line_end":1015,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":443665,"byte_end":443668,"line_start":1016,"line_end":1016,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":443673,"byte_end":443680,"line_start":1017,"line_end":1017,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Datelike};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":443685,"byte_end":443738,"line_start":1018,"line_end":1018,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":443743,"byte_end":443746,"line_start":1019,"line_end":1019,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 8).and_hms(12, 34, 56);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":443751,"byte_end":443831,"line_start":1020,"line_end":1020,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(dt.with_ordinal(60),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":443836,"byte_end":443871,"line_start":1021,"line_end":1021,"column_start":5,"column_end":40}},{"value":"/            Some(NaiveDate::from_ymd(2015, 3, 1).and_hms(12, 34, 56)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":443876,"byte_end":443950,"line_start":1022,"line_end":1022,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(dt.with_ordinal(366), None); // 2015 had only 365 days","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":443955,"byte_end":444024,"line_start":1023,"line_end":1023,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":444029,"byte_end":444032,"line_start":1024,"line_end":1024,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2016, 9, 8).and_hms(12, 34, 56);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":444037,"byte_end":444117,"line_start":1025,"line_end":1025,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(dt.with_ordinal(60),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":444122,"byte_end":444157,"line_start":1026,"line_end":1026,"column_start":5,"column_end":40}},{"value":"/            Some(NaiveDate::from_ymd(2016, 2, 29).and_hms(12, 34, 56)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":444162,"byte_end":444237,"line_start":1027,"line_end":1027,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(dt.with_ordinal(366),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":444242,"byte_end":444278,"line_start":1028,"line_end":1028,"column_start":5,"column_end":41}},{"value":"/            Some(NaiveDate::from_ymd(2016, 12, 31).and_hms(12, 34, 56)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":444283,"byte_end":444359,"line_start":1029,"line_end":1029,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":444364,"byte_end":444371,"line_start":1030,"line_end":1030,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":444376,"byte_end":444385,"line_start":1031,"line_end":1031,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2206},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":445541,"byte_end":445554,"line_start":1059,"line_end":1059,"column_start":8,"column_end":21},"name":"with_ordinal0","qualname":"<NaiveDateTime as traits::Datelike>::with_ordinal0","value":"fn with_ordinal0(&Self, u32) -> Option<NaiveDateTime>","parent":{"krate":0,"index":3411},"children":[],"decl_id":{"krate":0,"index":3428},"docs":" Makes a new `NaiveDateTime` with the day of year (starting from 0) changed.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` with the day of year (starting from 0) changed.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":444549,"byte_end":444628,"line_start":1036,"line_end":1036,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":444633,"byte_end":444636,"line_start":1037,"line_end":1037,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting `NaiveDateTime` would be invalid.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":444641,"byte_end":444712,"line_start":1038,"line_end":1038,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":444717,"byte_end":444720,"line_start":1039,"line_end":1039,"column_start":5,"column_end":8}},{"value":"/ See also the [`NaiveDate::with_ordinal0`] method.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":444725,"byte_end":444778,"line_start":1040,"line_end":1040,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":444783,"byte_end":444786,"line_start":1041,"line_end":1041,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":444791,"byte_end":444804,"line_start":1042,"line_end":1042,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":444809,"byte_end":444812,"line_start":1043,"line_end":1043,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":444817,"byte_end":444824,"line_start":1044,"line_end":1044,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Datelike};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":444829,"byte_end":444882,"line_start":1045,"line_end":1045,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":444887,"byte_end":444890,"line_start":1046,"line_end":1046,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 8).and_hms(12, 34, 56);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":444895,"byte_end":444975,"line_start":1047,"line_end":1047,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(dt.with_ordinal0(59),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":444980,"byte_end":445016,"line_start":1048,"line_end":1048,"column_start":5,"column_end":41}},{"value":"/            Some(NaiveDate::from_ymd(2015, 3, 1).and_hms(12, 34, 56)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":445021,"byte_end":445095,"line_start":1049,"line_end":1049,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(dt.with_ordinal0(365), None); // 2015 had only 365 days","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":445100,"byte_end":445170,"line_start":1050,"line_end":1050,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":445175,"byte_end":445178,"line_start":1051,"line_end":1051,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2016, 9, 8).and_hms(12, 34, 56);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":445183,"byte_end":445263,"line_start":1052,"line_end":1052,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(dt.with_ordinal0(59),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":445268,"byte_end":445304,"line_start":1053,"line_end":1053,"column_start":5,"column_end":41}},{"value":"/            Some(NaiveDate::from_ymd(2016, 2, 29).and_hms(12, 34, 56)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":445309,"byte_end":445384,"line_start":1054,"line_end":1054,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(dt.with_ordinal0(365),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":445389,"byte_end":445426,"line_start":1055,"line_end":1055,"column_start":5,"column_end":42}},{"value":"/            Some(NaiveDate::from_ymd(2016, 12, 31).and_hms(12, 34, 56)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":445431,"byte_end":445507,"line_start":1056,"line_end":1056,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":445512,"byte_end":445519,"line_start":1057,"line_end":1057,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":445524,"byte_end":445533,"line_start":1058,"line_end":1058,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2209},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":446112,"byte_end":446116,"line_start":1078,"line_end":1078,"column_start":8,"column_end":12},"name":"hour","qualname":"<NaiveDateTime as traits::Timelike>::hour","value":"fn hour(&Self) -> u32","parent":{"krate":0,"index":3430},"children":[],"decl_id":{"krate":0,"index":3431},"docs":" Returns the hour number from 0 to 23.","sig":null,"attributes":[{"value":"/ Returns the hour number from 0 to 23.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":445737,"byte_end":445778,"line_start":1065,"line_end":1065,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":445783,"byte_end":445786,"line_start":1066,"line_end":1066,"column_start":5,"column_end":8}},{"value":"/ See also the [`NaiveTime::hour`] method.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":445791,"byte_end":445835,"line_start":1067,"line_end":1067,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":445840,"byte_end":445843,"line_start":1068,"line_end":1068,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":445848,"byte_end":445861,"line_start":1069,"line_end":1069,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":445866,"byte_end":445869,"line_start":1070,"line_end":1070,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":445874,"byte_end":445881,"line_start":1071,"line_end":1071,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Timelike};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":445886,"byte_end":445939,"line_start":1072,"line_end":1072,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":445944,"byte_end":445947,"line_start":1073,"line_end":1073,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 8).and_hms_milli(12, 34, 56, 789);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":445952,"byte_end":446043,"line_start":1074,"line_end":1074,"column_start":5,"column_end":96}},{"value":"/ assert_eq!(dt.hour(), 12);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":446048,"byte_end":446078,"line_start":1075,"line_end":1075,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":446083,"byte_end":446090,"line_start":1076,"line_end":1076,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":446095,"byte_end":446104,"line_start":1077,"line_end":1077,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2210},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":446550,"byte_end":446556,"line_start":1095,"line_end":1095,"column_start":8,"column_end":14},"name":"minute","qualname":"<NaiveDateTime as traits::Timelike>::minute","value":"fn minute(&Self) -> u32","parent":{"krate":0,"index":3430},"children":[],"decl_id":{"krate":0,"index":3433},"docs":" Returns the minute number from 0 to 59.","sig":null,"attributes":[{"value":"/ Returns the minute number from 0 to 59.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":446169,"byte_end":446212,"line_start":1082,"line_end":1082,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":446217,"byte_end":446220,"line_start":1083,"line_end":1083,"column_start":5,"column_end":8}},{"value":"/ See also the [`NaiveTime::minute`] method.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":446225,"byte_end":446271,"line_start":1084,"line_end":1084,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":446276,"byte_end":446279,"line_start":1085,"line_end":1085,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":446284,"byte_end":446297,"line_start":1086,"line_end":1086,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":446302,"byte_end":446305,"line_start":1087,"line_end":1087,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":446310,"byte_end":446317,"line_start":1088,"line_end":1088,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Timelike};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":446322,"byte_end":446375,"line_start":1089,"line_end":1089,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":446380,"byte_end":446383,"line_start":1090,"line_end":1090,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 8).and_hms_milli(12, 34, 56, 789);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":446388,"byte_end":446479,"line_start":1091,"line_end":1091,"column_start":5,"column_end":96}},{"value":"/ assert_eq!(dt.minute(), 34);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":446484,"byte_end":446516,"line_start":1092,"line_end":1092,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":446521,"byte_end":446528,"line_start":1093,"line_end":1093,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":446533,"byte_end":446542,"line_start":1094,"line_end":1094,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2211},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":446992,"byte_end":446998,"line_start":1112,"line_end":1112,"column_start":8,"column_end":14},"name":"second","qualname":"<NaiveDateTime as traits::Timelike>::second","value":"fn second(&Self) -> u32","parent":{"krate":0,"index":3430},"children":[],"decl_id":{"krate":0,"index":3434},"docs":" Returns the second number from 0 to 59.","sig":null,"attributes":[{"value":"/ Returns the second number from 0 to 59.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":446611,"byte_end":446654,"line_start":1099,"line_end":1099,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":446659,"byte_end":446662,"line_start":1100,"line_end":1100,"column_start":5,"column_end":8}},{"value":"/ See also the [`NaiveTime::second`] method.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":446667,"byte_end":446713,"line_start":1101,"line_end":1101,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":446718,"byte_end":446721,"line_start":1102,"line_end":1102,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":446726,"byte_end":446739,"line_start":1103,"line_end":1103,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":446744,"byte_end":446747,"line_start":1104,"line_end":1104,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":446752,"byte_end":446759,"line_start":1105,"line_end":1105,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Timelike};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":446764,"byte_end":446817,"line_start":1106,"line_end":1106,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":446822,"byte_end":446825,"line_start":1107,"line_end":1107,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 8).and_hms_milli(12, 34, 56, 789);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":446830,"byte_end":446921,"line_start":1108,"line_end":1108,"column_start":5,"column_end":96}},{"value":"/ assert_eq!(dt.second(), 56);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":446926,"byte_end":446958,"line_start":1109,"line_end":1109,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":446963,"byte_end":446970,"line_start":1110,"line_end":1110,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":446975,"byte_end":446984,"line_start":1111,"line_end":1111,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2212},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":447616,"byte_end":447626,"line_start":1131,"line_end":1131,"column_start":8,"column_end":18},"name":"nanosecond","qualname":"<NaiveDateTime as traits::Timelike>::nanosecond","value":"fn nanosecond(&Self) -> u32","parent":{"krate":0,"index":3430},"children":[],"decl_id":{"krate":0,"index":3435},"docs":" Returns the number of nanoseconds since the whole non-leap second.\n The range from 1,000,000,000 to 1,999,999,999 represents\n the [leap second](./struct.NaiveTime.html#leap-second-handling).","sig":null,"attributes":[{"value":"/ Returns the number of nanoseconds since the whole non-leap second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":447053,"byte_end":447123,"line_start":1116,"line_end":1116,"column_start":5,"column_end":75}},{"value":"/ The range from 1,000,000,000 to 1,999,999,999 represents","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":447128,"byte_end":447188,"line_start":1117,"line_end":1117,"column_start":5,"column_end":65}},{"value":"/ the [leap second](./struct.NaiveTime.html#leap-second-handling).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":447193,"byte_end":447261,"line_start":1118,"line_end":1118,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":447266,"byte_end":447269,"line_start":1119,"line_end":1119,"column_start":5,"column_end":8}},{"value":"/ See also the [`NaiveTime::nanosecond`] method.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":447274,"byte_end":447324,"line_start":1120,"line_end":1120,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":447329,"byte_end":447332,"line_start":1121,"line_end":1121,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":447337,"byte_end":447350,"line_start":1122,"line_end":1122,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":447355,"byte_end":447358,"line_start":1123,"line_end":1123,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":447363,"byte_end":447370,"line_start":1124,"line_end":1124,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Timelike};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":447375,"byte_end":447428,"line_start":1125,"line_end":1125,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":447433,"byte_end":447436,"line_start":1126,"line_end":1126,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 8).and_hms_milli(12, 34, 56, 789);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":447441,"byte_end":447532,"line_start":1127,"line_end":1127,"column_start":5,"column_end":96}},{"value":"/ assert_eq!(dt.nanosecond(), 789_000_000);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":447537,"byte_end":447582,"line_start":1128,"line_end":1128,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":447587,"byte_end":447594,"line_start":1129,"line_end":1129,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":447599,"byte_end":447608,"line_start":1130,"line_end":1130,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2213},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":448303,"byte_end":448312,"line_start":1152,"line_end":1152,"column_start":8,"column_end":17},"name":"with_hour","qualname":"<NaiveDateTime as traits::Timelike>::with_hour","value":"fn with_hour(&Self, u32) -> Option<NaiveDateTime>","parent":{"krate":0,"index":3430},"children":[],"decl_id":{"krate":0,"index":3436},"docs":" Makes a new `NaiveDateTime` with the hour number changed.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` with the hour number changed.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":447685,"byte_end":447746,"line_start":1135,"line_end":1135,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":447751,"byte_end":447754,"line_start":1136,"line_end":1136,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting `NaiveDateTime` would be invalid.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":447759,"byte_end":447830,"line_start":1137,"line_end":1137,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":447835,"byte_end":447838,"line_start":1138,"line_end":1138,"column_start":5,"column_end":8}},{"value":"/ See also the [`NaiveTime::with_hour`] method.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":447843,"byte_end":447892,"line_start":1139,"line_end":1139,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":447897,"byte_end":447900,"line_start":1140,"line_end":1140,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":447905,"byte_end":447918,"line_start":1141,"line_end":1141,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":447923,"byte_end":447926,"line_start":1142,"line_end":1142,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":447931,"byte_end":447938,"line_start":1143,"line_end":1143,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Timelike};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":447943,"byte_end":447996,"line_start":1144,"line_end":1144,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":448001,"byte_end":448004,"line_start":1145,"line_end":1145,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 8).and_hms_milli(12, 34, 56, 789);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":448009,"byte_end":448100,"line_start":1146,"line_end":1146,"column_start":5,"column_end":96}},{"value":"/ assert_eq!(dt.with_hour(7),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":448105,"byte_end":448136,"line_start":1147,"line_end":1147,"column_start":5,"column_end":36}},{"value":"/            Some(NaiveDate::from_ymd(2015, 9, 8).and_hms_milli(7, 34, 56, 789)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":448141,"byte_end":448225,"line_start":1148,"line_end":1148,"column_start":5,"column_end":89}},{"value":"/ assert_eq!(dt.with_hour(24), None);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":448230,"byte_end":448269,"line_start":1149,"line_end":1149,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":448274,"byte_end":448281,"line_start":1150,"line_end":1150,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":448286,"byte_end":448295,"line_start":1151,"line_end":1151,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2215},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":449083,"byte_end":449094,"line_start":1174,"line_end":1174,"column_start":8,"column_end":19},"name":"with_minute","qualname":"<NaiveDateTime as traits::Timelike>::with_minute","value":"fn with_minute(&Self, u32) -> Option<NaiveDateTime>","parent":{"krate":0,"index":3430},"children":[],"decl_id":{"krate":0,"index":3437},"docs":" Makes a new `NaiveDateTime` with the minute number changed.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` with the minute number changed.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":448447,"byte_end":448510,"line_start":1156,"line_end":1156,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":448515,"byte_end":448518,"line_start":1157,"line_end":1157,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting `NaiveDateTime` would be invalid.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":448523,"byte_end":448594,"line_start":1158,"line_end":1158,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":448599,"byte_end":448602,"line_start":1159,"line_end":1159,"column_start":5,"column_end":8}},{"value":"/ See also the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":448607,"byte_end":448623,"line_start":1160,"line_end":1160,"column_start":5,"column_end":21}},{"value":"/ [`NaiveTime::with_minute`] method.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":448628,"byte_end":448666,"line_start":1161,"line_end":1161,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":448671,"byte_end":448674,"line_start":1162,"line_end":1162,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":448679,"byte_end":448692,"line_start":1163,"line_end":1163,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":448697,"byte_end":448700,"line_start":1164,"line_end":1164,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":448705,"byte_end":448712,"line_start":1165,"line_end":1165,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Timelike};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":448717,"byte_end":448770,"line_start":1166,"line_end":1166,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":448775,"byte_end":448778,"line_start":1167,"line_end":1167,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 8).and_hms_milli(12, 34, 56, 789);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":448783,"byte_end":448874,"line_start":1168,"line_end":1168,"column_start":5,"column_end":96}},{"value":"/ assert_eq!(dt.with_minute(45),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":448879,"byte_end":448913,"line_start":1169,"line_end":1169,"column_start":5,"column_end":39}},{"value":"/            Some(NaiveDate::from_ymd(2015, 9, 8).and_hms_milli(12, 45, 56, 789)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":448918,"byte_end":449003,"line_start":1170,"line_end":1170,"column_start":5,"column_end":90}},{"value":"/ assert_eq!(dt.with_minute(60), None);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":449008,"byte_end":449049,"line_start":1171,"line_end":1171,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":449054,"byte_end":449061,"line_start":1172,"line_end":1172,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":449066,"byte_end":449075,"line_start":1173,"line_end":1173,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2217},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":449966,"byte_end":449977,"line_start":1197,"line_end":1197,"column_start":8,"column_end":19},"name":"with_second","qualname":"<NaiveDateTime as traits::Timelike>::with_second","value":"fn with_second(&Self, u32) -> Option<NaiveDateTime>","parent":{"krate":0,"index":3430},"children":[],"decl_id":{"krate":0,"index":3438},"docs":" Makes a new `NaiveDateTime` with the second number changed.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` with the second number changed.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":449229,"byte_end":449292,"line_start":1178,"line_end":1178,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":449297,"byte_end":449300,"line_start":1179,"line_end":1179,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting `NaiveDateTime` would be invalid. As","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":449305,"byte_end":449379,"line_start":1180,"line_end":1180,"column_start":5,"column_end":79}},{"value":"/ with the [`NaiveDateTime::second`] method, the input range is","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":449384,"byte_end":449449,"line_start":1181,"line_end":1181,"column_start":5,"column_end":70}},{"value":"/ restricted to 0 through 59.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":449454,"byte_end":449485,"line_start":1182,"line_end":1182,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":449490,"byte_end":449493,"line_start":1183,"line_end":1183,"column_start":5,"column_end":8}},{"value":"/ See also the [`NaiveTime::with_second`] method.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":449498,"byte_end":449549,"line_start":1184,"line_end":1184,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":449554,"byte_end":449557,"line_start":1185,"line_end":1185,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":449562,"byte_end":449575,"line_start":1186,"line_end":1186,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":449580,"byte_end":449583,"line_start":1187,"line_end":1187,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":449588,"byte_end":449595,"line_start":1188,"line_end":1188,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Timelike};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":449600,"byte_end":449653,"line_start":1189,"line_end":1189,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":449658,"byte_end":449661,"line_start":1190,"line_end":1190,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 8).and_hms_milli(12, 34, 56, 789);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":449666,"byte_end":449757,"line_start":1191,"line_end":1191,"column_start":5,"column_end":96}},{"value":"/ assert_eq!(dt.with_second(17),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":449762,"byte_end":449796,"line_start":1192,"line_end":1192,"column_start":5,"column_end":39}},{"value":"/            Some(NaiveDate::from_ymd(2015, 9, 8).and_hms_milli(12, 34, 17, 789)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":449801,"byte_end":449886,"line_start":1193,"line_end":1193,"column_start":5,"column_end":90}},{"value":"/ assert_eq!(dt.with_second(60), None);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":449891,"byte_end":449932,"line_start":1194,"line_end":1194,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":449937,"byte_end":449944,"line_start":1195,"line_end":1195,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":449949,"byte_end":449958,"line_start":1196,"line_end":1196,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2219},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":451098,"byte_end":451113,"line_start":1222,"line_end":1222,"column_start":8,"column_end":23},"name":"with_nanosecond","qualname":"<NaiveDateTime as traits::Timelike>::with_nanosecond","value":"fn with_nanosecond(&Self, u32) -> Option<NaiveDateTime>","parent":{"krate":0,"index":3430},"children":[],"decl_id":{"krate":0,"index":3439},"docs":" Makes a new `NaiveDateTime` with nanoseconds since the whole non-leap second changed.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` with nanoseconds since the whole non-leap second changed.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":450112,"byte_end":450201,"line_start":1201,"line_end":1201,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":450206,"byte_end":450209,"line_start":1202,"line_end":1202,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting `NaiveDateTime` would be invalid.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":450214,"byte_end":450285,"line_start":1203,"line_end":1203,"column_start":5,"column_end":76}},{"value":"/ As with the [`NaiveDateTime::nanosecond`] method,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":450290,"byte_end":450343,"line_start":1204,"line_end":1204,"column_start":5,"column_end":58}},{"value":"/ the input range can exceed 1,000,000,000 for leap seconds.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":450348,"byte_end":450410,"line_start":1205,"line_end":1205,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":450415,"byte_end":450418,"line_start":1206,"line_end":1206,"column_start":5,"column_end":8}},{"value":"/ See also the [`NaiveTime::with_nanosecond`] method.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":450423,"byte_end":450478,"line_start":1207,"line_end":1207,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":450483,"byte_end":450486,"line_start":1208,"line_end":1208,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":450491,"byte_end":450504,"line_start":1209,"line_end":1209,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":450509,"byte_end":450512,"line_start":1210,"line_end":1210,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":450517,"byte_end":450524,"line_start":1211,"line_end":1211,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Timelike};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":450529,"byte_end":450582,"line_start":1212,"line_end":1212,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":450587,"byte_end":450590,"line_start":1213,"line_end":1213,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 8).and_hms_milli(12, 34, 56, 789);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":450595,"byte_end":450686,"line_start":1214,"line_end":1214,"column_start":5,"column_end":96}},{"value":"/ assert_eq!(dt.with_nanosecond(333_333_333),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":450691,"byte_end":450738,"line_start":1215,"line_end":1215,"column_start":5,"column_end":52}},{"value":"/            Some(NaiveDate::from_ymd(2015, 9, 8).and_hms_nano(12, 34, 56, 333_333_333)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":450743,"byte_end":450835,"line_start":1216,"line_end":1216,"column_start":5,"column_end":97}},{"value":"/ assert_eq!(dt.with_nanosecond(1_333_333_333), // leap second","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":450840,"byte_end":450904,"line_start":1217,"line_end":1217,"column_start":5,"column_end":69}},{"value":"/            Some(NaiveDate::from_ymd(2015, 9, 8).and_hms_nano(12, 34, 56, 1_333_333_333)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":450909,"byte_end":451003,"line_start":1218,"line_end":1218,"column_start":5,"column_end":99}},{"value":"/ assert_eq!(dt.with_nanosecond(2_000_000_000), None);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":451008,"byte_end":451064,"line_start":1219,"line_end":1219,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":451069,"byte_end":451076,"line_start":1220,"line_end":1220,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":451081,"byte_end":451090,"line_start":1221,"line_end":1221,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2223},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":453621,"byte_end":453624,"line_start":1280,"line_end":1280,"column_start":8,"column_end":11},"name":"add","qualname":"<NaiveDateTime as std::ops::Add>::add","value":"fn add(Self, OldDuration) -> NaiveDateTime","parent":{"krate":2,"index":3247},"children":[],"decl_id":{"krate":2,"index":3250},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":453604,"byte_end":453613,"line_start":1279,"line_end":1279,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2225},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":453831,"byte_end":453841,"line_start":1287,"line_end":1287,"column_start":8,"column_end":18},"name":"add_assign","qualname":"<NaiveDateTime as std::ops::AddAssign>::add_assign","value":"fn add_assign(&mut Self, OldDuration)","parent":{"krate":2,"index":3278},"children":[],"decl_id":{"krate":2,"index":3280},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":453814,"byte_end":453823,"line_start":1286,"line_end":1286,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2228},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":456199,"byte_end":456202,"line_start":1344,"line_end":1344,"column_start":8,"column_end":11},"name":"sub","qualname":"<NaiveDateTime as std::ops::Sub>::sub","value":"fn sub(Self, OldDuration) -> NaiveDateTime","parent":{"krate":2,"index":3252},"children":[],"decl_id":{"krate":2,"index":3255},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":456182,"byte_end":456191,"line_start":1343,"line_end":1343,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2230},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":456409,"byte_end":456419,"line_start":1351,"line_end":1351,"column_start":8,"column_end":18},"name":"sub_assign","qualname":"<NaiveDateTime as std::ops::SubAssign>::sub_assign","value":"fn sub_assign(&mut Self, OldDuration)","parent":{"krate":2,"index":3282},"children":[],"decl_id":{"krate":2,"index":3284},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":456392,"byte_end":456401,"line_start":1350,"line_end":1350,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2233},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":458184,"byte_end":458187,"line_start":1399,"line_end":1399,"column_start":8,"column_end":11},"name":"sub","qualname":"<NaiveDateTime as std::ops::Sub>::sub","value":"fn sub(Self, NaiveDateTime) -> OldDuration","parent":{"krate":2,"index":3252},"children":[],"decl_id":{"krate":2,"index":3255},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":458167,"byte_end":458176,"line_start":1398,"line_end":1398,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2235},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":459349,"byte_end":459352,"line_start":1432,"line_end":1432,"column_start":8,"column_end":11},"name":"fmt","qualname":"<NaiveDateTime as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2237},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":460450,"byte_end":460453,"line_start":1463,"line_end":1463,"column_start":8,"column_end":11},"name":"fmt","qualname":"<NaiveDateTime as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10117},"children":[],"decl_id":{"krate":2,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2240},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":461221,"byte_end":461229,"line_start":1487,"line_end":1487,"column_start":8,"column_end":16},"name":"from_str","qualname":"<NaiveDateTime as std::str::FromStr>::from_str","value":"fn from_str(&str) -> ParseResult<NaiveDateTime>","parent":{"krate":2,"index":12767},"children":[],"decl_id":{"krate":2,"index":12769},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2243},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":462553,"byte_end":462560,"line_start":1527,"line_end":1527,"column_start":8,"column_end":15},"name":"default","qualname":"<NaiveDateTime as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3941},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":535081,"byte_end":535088,"line_start":21,"line_end":21,"column_start":12,"column_end":19},"name":"IsoWeek","qualname":"::naive::isoweek::IsoWeek","value":"IsoWeek {  }","parent":null,"children":[{"krate":0,"index":3942}],"decl_id":null,"docs":" ISO 8601 week.","sig":null,"attributes":[{"value":"/ ISO 8601 week.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":534603,"byte_end":534621,"line_start":13,"line_end":13,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":534622,"byte_end":534625,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This type, combined with [`Weekday`](../enum.Weekday.html),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":534626,"byte_end":534689,"line_start":15,"line_end":15,"column_start":1,"column_end":64}},{"value":"/ constitutes the ISO 8601 [week date](./struct.NaiveDate.html#week-date).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":534690,"byte_end":534766,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ One can retrieve this type from the existing [`Datelike`](../trait.Datelike.html) types","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":534767,"byte_end":534858,"line_start":17,"line_end":17,"column_start":1,"column_end":92}},{"value":"/ via the [`Datelike::iso_week`](../trait.Datelike.html#tymethod.iso_week) method.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":534859,"byte_end":534943,"line_start":18,"line_end":18,"column_start":1,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":2348},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":537049,"byte_end":537053,"line_start":74,"line_end":74,"column_start":12,"column_end":16},"name":"year","qualname":"<IsoWeek>::year","value":"fn year(&Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Returns the year number for this ISO week.","sig":null,"attributes":[{"value":"/ Returns the year number for this ISO week.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":536395,"byte_end":536441,"line_start":53,"line_end":53,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":536446,"byte_end":536449,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":536454,"byte_end":536467,"line_start":55,"line_end":55,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":536472,"byte_end":536475,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":536480,"byte_end":536487,"line_start":57,"line_end":57,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike, Weekday};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":536492,"byte_end":536539,"line_start":58,"line_end":58,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":536544,"byte_end":536547,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_isoywd(2015, 1, Weekday::Mon);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":536552,"byte_end":536610,"line_start":60,"line_end":60,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(d.iso_week().year(), 2015);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":536615,"byte_end":536657,"line_start":61,"line_end":61,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":536662,"byte_end":536669,"line_start":62,"line_end":62,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":536674,"byte_end":536677,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ This year number might not match the calendar year number.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":536682,"byte_end":536744,"line_start":64,"line_end":64,"column_start":5,"column_end":67}},{"value":"/ Continuing the example...","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":536749,"byte_end":536778,"line_start":65,"line_end":65,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":536783,"byte_end":536786,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":536791,"byte_end":536798,"line_start":67,"line_end":67,"column_start":5,"column_end":12}},{"value":"/ # use chrono::{NaiveDate, Datelike, Weekday};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":536803,"byte_end":536852,"line_start":68,"line_end":68,"column_start":5,"column_end":54}},{"value":"/ # let d = NaiveDate::from_isoywd(2015, 1, Weekday::Mon);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":536857,"byte_end":536917,"line_start":69,"line_end":69,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(d.year(), 2014);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":536922,"byte_end":536953,"line_start":70,"line_end":70,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(d, NaiveDate::from_ymd(2014, 12, 29));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":536958,"byte_end":537011,"line_start":71,"line_end":71,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":537016,"byte_end":537023,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":537028,"byte_end":537037,"line_start":73,"line_end":73,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2349},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":537501,"byte_end":537505,"line_start":91,"line_end":91,"column_start":12,"column_end":16},"name":"week","qualname":"<IsoWeek>::week","value":"fn week(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the ISO week number starting from 1.","sig":null,"attributes":[{"value":"/ Returns the ISO week number starting from 1.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":537104,"byte_end":537152,"line_start":78,"line_end":78,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":537157,"byte_end":537160,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 1 to 53. (The last week of year differs by years.)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":537165,"byte_end":537248,"line_start":80,"line_end":80,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":537253,"byte_end":537256,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":537261,"byte_end":537274,"line_start":82,"line_end":82,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":537279,"byte_end":537282,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":537287,"byte_end":537294,"line_start":84,"line_end":84,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike, Weekday};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":537299,"byte_end":537346,"line_start":85,"line_end":85,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":537351,"byte_end":537354,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_isoywd(2015, 15, Weekday::Mon);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":537359,"byte_end":537418,"line_start":87,"line_end":87,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(d.iso_week().week(), 15);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":537423,"byte_end":537463,"line_start":88,"line_end":88,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":537468,"byte_end":537475,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":537480,"byte_end":537489,"line_start":90,"line_end":90,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2350},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":537971,"byte_end":537976,"line_start":108,"line_end":108,"column_start":12,"column_end":17},"name":"week0","qualname":"<IsoWeek>::week0","value":"fn week0(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the ISO week number starting from 0.","sig":null,"attributes":[{"value":"/ Returns the ISO week number starting from 0.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":537573,"byte_end":537621,"line_start":95,"line_end":95,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":537626,"byte_end":537629,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 0 to 52. (The last week of year differs by years.)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":537634,"byte_end":537717,"line_start":97,"line_end":97,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":537722,"byte_end":537725,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":537730,"byte_end":537743,"line_start":99,"line_end":99,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":537748,"byte_end":537751,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":537756,"byte_end":537763,"line_start":101,"line_end":101,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike, Weekday};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":537768,"byte_end":537815,"line_start":102,"line_end":102,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":537820,"byte_end":537823,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_isoywd(2015, 15, Weekday::Mon);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":537828,"byte_end":537887,"line_start":104,"line_end":104,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(d.iso_week().week0(), 14);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":537892,"byte_end":537933,"line_start":105,"line_end":105,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":537938,"byte_end":537945,"line_start":106,"line_end":106,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":537950,"byte_end":537959,"line_start":107,"line_end":107,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2352},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":538939,"byte_end":538942,"line_start":135,"line_end":135,"column_start":8,"column_end":11},"name":"fmt","qualname":"<IsoWeek as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2433},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/serde.rs","byte_start":595503,"byte_end":595512,"line_start":9,"line_end":9,"column_start":8,"column_end":17},"name":"serialize","qualname":"<NaiveTime as serde::Serialize>::serialize","value":"fn serialize<S>(&Self, S) -> Result<S::Ok, S::Error> where S: ser::Serializer","parent":{"krate":22,"index":2149},"children":[],"decl_id":{"krate":22,"index":2150},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2445},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/serde.rs","byte_start":596103,"byte_end":596114,"line_start":35,"line_end":35,"column_start":8,"column_end":19},"name":"deserialize","qualname":"<NaiveTime as serde::Deserialize>::deserialize","value":"fn deserialize<D>(D) -> Result<Self, D::Error> where D: de::Deserializer","parent":{"krate":22,"index":1600},"children":[],"decl_id":{"krate":22,"index":1602},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3957},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":548066,"byte_end":548075,"line_start":192,"line_end":192,"column_start":12,"column_end":21},"name":"NaiveTime","qualname":"::naive::time::NaiveTime","value":"NaiveTime {  }","parent":null,"children":[{"krate":0,"index":3958},{"krate":0,"index":3959}],"decl_id":null,"docs":" ISO 8601 time without timezone.\n Allows for the nanosecond precision and optional leap second representation.","sig":null,"attributes":[{"value":"/ ISO 8601 time without timezone.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":540784,"byte_end":540819,"line_start":31,"line_end":31,"column_start":1,"column_end":36}},{"value":"/ Allows for the nanosecond precision and optional leap second representation.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":540820,"byte_end":540900,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":540901,"byte_end":540904,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Leap Second Handling","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":540905,"byte_end":540931,"line_start":34,"line_end":34,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":540932,"byte_end":540935,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Since 1960s, the manmade atomic clock has been so accurate that","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":540936,"byte_end":541003,"line_start":36,"line_end":36,"column_start":1,"column_end":68}},{"value":"/ it is much more accurate than Earth's own motion.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":541004,"byte_end":541057,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ It became desirable to define the civil time in terms of the atomic clock,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":541058,"byte_end":541136,"line_start":38,"line_end":38,"column_start":1,"column_end":79}},{"value":"/ but that risks the desynchronization of the civil time from Earth.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":541137,"byte_end":541207,"line_start":39,"line_end":39,"column_start":1,"column_end":71}},{"value":"/ To account for this, the designers of the Coordinated Universal Time (UTC)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":541208,"byte_end":541286,"line_start":40,"line_end":40,"column_start":1,"column_end":79}},{"value":"/ made that the UTC should be kept within 0.9 seconds of the observed Earth-bound time.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":541287,"byte_end":541376,"line_start":41,"line_end":41,"column_start":1,"column_end":90}},{"value":"/ When the mean solar day is longer than the ideal (86,400 seconds),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":541377,"byte_end":541447,"line_start":42,"line_end":42,"column_start":1,"column_end":71}},{"value":"/ the error slowly accumulates and it is necessary to add a **leap second**","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":541448,"byte_end":541525,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ to slow the UTC down a bit.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":541526,"byte_end":541557,"line_start":44,"line_end":44,"column_start":1,"column_end":32}},{"value":"/ (We may also remove a second to speed the UTC up a bit, but it never happened.)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":541558,"byte_end":541641,"line_start":45,"line_end":45,"column_start":1,"column_end":84}},{"value":"/ The leap second, if any, follows 23:59:59 of June 30 or December 31 in the UTC.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":541642,"byte_end":541725,"line_start":46,"line_end":46,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":541726,"byte_end":541729,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ Fast forward to the 21st century,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":541730,"byte_end":541767,"line_start":48,"line_end":48,"column_start":1,"column_end":38}},{"value":"/ we have seen 26 leap seconds from January 1972 to December 2015.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":541768,"byte_end":541836,"line_start":49,"line_end":49,"column_start":1,"column_end":69}},{"value":"/ Yes, 26 seconds. Probably you can read this paragraph within 26 seconds.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":541837,"byte_end":541913,"line_start":50,"line_end":50,"column_start":1,"column_end":77}},{"value":"/ But those 26 seconds, and possibly more in the future, are never predictable,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":541914,"byte_end":541995,"line_start":51,"line_end":51,"column_start":1,"column_end":82}},{"value":"/ and whether to add a leap second or not is known only before 6 months.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":541996,"byte_end":542070,"line_start":52,"line_end":52,"column_start":1,"column_end":75}},{"value":"/ Internet-based clocks (via NTP) do account for known leap seconds,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":542071,"byte_end":542141,"line_start":53,"line_end":53,"column_start":1,"column_end":71}},{"value":"/ but the system API normally doesn't (and often can't, with no network connection)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":542142,"byte_end":542227,"line_start":54,"line_end":54,"column_start":1,"column_end":86}},{"value":"/ and there is no reliable way to retrieve leap second information.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":542228,"byte_end":542297,"line_start":55,"line_end":55,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":542298,"byte_end":542301,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ Chrono does not try to accurately implement leap seconds; it is impossible.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":542302,"byte_end":542381,"line_start":57,"line_end":57,"column_start":1,"column_end":80}},{"value":"/ Rather, **it allows for leap seconds but behaves as if there are *no other* leap seconds.**","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":542382,"byte_end":542477,"line_start":58,"line_end":58,"column_start":1,"column_end":96}},{"value":"/ Various operations will ignore any possible leap second(s)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":542478,"byte_end":542540,"line_start":59,"line_end":59,"column_start":1,"column_end":63}},{"value":"/ except when any of the operands were actually leap seconds.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":542541,"byte_end":542604,"line_start":60,"line_end":60,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":542605,"byte_end":542608,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ If you cannot tolerate this behavior,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":542609,"byte_end":542650,"line_start":62,"line_end":62,"column_start":1,"column_end":42}},{"value":"/ you must use a separate `TimeZone` for the International Atomic Time (TAI).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":542651,"byte_end":542730,"line_start":63,"line_end":63,"column_start":1,"column_end":80}},{"value":"/ TAI is like UTC but has no leap seconds, and thus slightly differs from UTC.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":542731,"byte_end":542811,"line_start":64,"line_end":64,"column_start":1,"column_end":81}},{"value":"/ Chrono does not yet provide such implementation, but it is planned.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":542812,"byte_end":542883,"line_start":65,"line_end":65,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":542884,"byte_end":542887,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ## Representing Leap Seconds","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":542888,"byte_end":542920,"line_start":67,"line_end":67,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":542921,"byte_end":542924,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ The leap second is indicated via fractional seconds more than 1 second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":542925,"byte_end":543000,"line_start":69,"line_end":69,"column_start":1,"column_end":76}},{"value":"/ This makes possible to treat a leap second as the prior non-leap second","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":543001,"byte_end":543076,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/ if you don't care about sub-second accuracy.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":543077,"byte_end":543125,"line_start":71,"line_end":71,"column_start":1,"column_end":49}},{"value":"/ You should use the proper formatting to get the raw leap second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":543126,"byte_end":543194,"line_start":72,"line_end":72,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":543195,"byte_end":543198,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ All methods accepting fractional seconds will accept such values.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":543199,"byte_end":543268,"line_start":74,"line_end":74,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":543269,"byte_end":543272,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":543273,"byte_end":543280,"line_start":76,"line_end":76,"column_start":1,"column_end":8}},{"value":"/ use chrono::{NaiveDate, NaiveTime, Utc, TimeZone};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":543281,"byte_end":543335,"line_start":77,"line_end":77,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":543336,"byte_end":543339,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ let t = NaiveTime::from_hms_milli(8, 59, 59, 1_000);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":543340,"byte_end":543396,"line_start":79,"line_end":79,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":543397,"byte_end":543400,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ let dt1 = NaiveDate::from_ymd(2015, 7, 1).and_hms_micro(8, 59, 59, 1_000_000);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":543401,"byte_end":543483,"line_start":81,"line_end":81,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":543484,"byte_end":543487,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ let dt2 = Utc.ymd(2015, 6, 30).and_hms_nano(23, 59, 59, 1_000_000_000);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":543488,"byte_end":543563,"line_start":83,"line_end":83,"column_start":1,"column_end":76}},{"value":"/ # let _ = (t, dt1, dt2);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":543564,"byte_end":543592,"line_start":84,"line_end":84,"column_start":1,"column_end":29}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":543593,"byte_end":543600,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":543601,"byte_end":543604,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ Note that the leap second can happen anytime given an appropriate time zone;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":543605,"byte_end":543685,"line_start":87,"line_end":87,"column_start":1,"column_end":81}},{"value":"/ 2015-07-01 01:23:60 would be a proper leap second if UTC+01:24 had existed.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":543686,"byte_end":543765,"line_start":88,"line_end":88,"column_start":1,"column_end":80}},{"value":"/ Practically speaking, though, by the time of the first leap second on 1972-06-30,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":543766,"byte_end":543851,"line_start":89,"line_end":89,"column_start":1,"column_end":86}},{"value":"/ every time zone offset around the world has standardized to the 5-minute alignment.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":543852,"byte_end":543939,"line_start":90,"line_end":90,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":543940,"byte_end":543943,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ ## Date And Time Arithmetics","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":543944,"byte_end":543976,"line_start":92,"line_end":92,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":543977,"byte_end":543980,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ As a concrete example, let's assume that `03:00:60` and `04:00:60` are leap seconds.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":543981,"byte_end":544069,"line_start":94,"line_end":94,"column_start":1,"column_end":89}},{"value":"/ In reality, of course, leap seconds are separated by at least 6 months.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":544070,"byte_end":544145,"line_start":95,"line_end":95,"column_start":1,"column_end":76}},{"value":"/ We will also use some intuitive concise notations for the explanation.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":544146,"byte_end":544220,"line_start":96,"line_end":96,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":544221,"byte_end":544224,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ `Time + Duration`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":544225,"byte_end":544246,"line_start":98,"line_end":98,"column_start":1,"column_end":22}},{"value":"/ (short for [`NaiveTime::overflowing_add_signed`](#method.overflowing_add_signed)):","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":544247,"byte_end":544333,"line_start":99,"line_end":99,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":544334,"byte_end":544337,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ - `03:00:00 + 1s = 03:00:01`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":544338,"byte_end":544371,"line_start":101,"line_end":101,"column_start":1,"column_end":34}},{"value":"/ - `03:00:59 + 60s = 03:02:00`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":544372,"byte_end":544406,"line_start":102,"line_end":102,"column_start":1,"column_end":35}},{"value":"/ - `03:00:59 + 1s = 03:01:00`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":544407,"byte_end":544440,"line_start":103,"line_end":103,"column_start":1,"column_end":34}},{"value":"/ - `03:00:60 + 1s = 03:01:00`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":544441,"byte_end":544474,"line_start":104,"line_end":104,"column_start":1,"column_end":34}},{"value":"/   Note that the sum is identical to the previous.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":544475,"byte_end":544528,"line_start":105,"line_end":105,"column_start":1,"column_end":54}},{"value":"/ - `03:00:60 + 60s = 03:01:59`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":544529,"byte_end":544563,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/ - `03:00:60 + 61s = 03:02:00`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":544564,"byte_end":544598,"line_start":107,"line_end":107,"column_start":1,"column_end":35}},{"value":"/ - `03:00:60.1 + 0.8s = 03:00:60.9`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":544599,"byte_end":544638,"line_start":108,"line_end":108,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":544639,"byte_end":544642,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ `Time - Duration`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":544643,"byte_end":544664,"line_start":110,"line_end":110,"column_start":1,"column_end":22}},{"value":"/ (short for [`NaiveTime::overflowing_sub_signed`](#method.overflowing_sub_signed)):","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":544665,"byte_end":544751,"line_start":111,"line_end":111,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":544752,"byte_end":544755,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ - `03:00:00 - 1s = 02:59:59`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":544756,"byte_end":544789,"line_start":113,"line_end":113,"column_start":1,"column_end":34}},{"value":"/ - `03:01:00 - 1s = 03:00:59`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":544790,"byte_end":544823,"line_start":114,"line_end":114,"column_start":1,"column_end":34}},{"value":"/ - `03:01:00 - 60s = 03:00:00`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":544824,"byte_end":544858,"line_start":115,"line_end":115,"column_start":1,"column_end":35}},{"value":"/ - `03:00:60 - 60s = 03:00:00`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":544859,"byte_end":544893,"line_start":116,"line_end":116,"column_start":1,"column_end":35}},{"value":"/   Note that the result is identical to the previous.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":544894,"byte_end":544950,"line_start":117,"line_end":117,"column_start":1,"column_end":57}},{"value":"/ - `03:00:60.7 - 0.4s = 03:00:60.3`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":544951,"byte_end":544990,"line_start":118,"line_end":118,"column_start":1,"column_end":40}},{"value":"/ - `03:00:60.7 - 0.9s = 03:00:59.8`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":544991,"byte_end":545030,"line_start":119,"line_end":119,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":545031,"byte_end":545034,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ `Time - Time`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":545035,"byte_end":545052,"line_start":121,"line_end":121,"column_start":1,"column_end":18}},{"value":"/ (short for [`NaiveTime::signed_duration_since`](#method.signed_duration_since)):","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":545053,"byte_end":545137,"line_start":122,"line_end":122,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":545138,"byte_end":545141,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ - `04:00:00 - 03:00:00 = 3600s`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":545142,"byte_end":545178,"line_start":124,"line_end":124,"column_start":1,"column_end":37}},{"value":"/ - `03:01:00 - 03:00:00 = 60s`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":545179,"byte_end":545213,"line_start":125,"line_end":125,"column_start":1,"column_end":35}},{"value":"/ - `03:00:60 - 03:00:00 = 60s`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":545214,"byte_end":545248,"line_start":126,"line_end":126,"column_start":1,"column_end":35}},{"value":"/   Note that the difference is identical to the previous.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":545249,"byte_end":545309,"line_start":127,"line_end":127,"column_start":1,"column_end":61}},{"value":"/ - `03:00:60.6 - 03:00:59.4 = 1.2s`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":545310,"byte_end":545349,"line_start":128,"line_end":128,"column_start":1,"column_end":40}},{"value":"/ - `03:01:00 - 03:00:59.8 = 0.2s`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":545350,"byte_end":545387,"line_start":129,"line_end":129,"column_start":1,"column_end":38}},{"value":"/ - `03:01:00 - 03:00:60.5 = 0.5s`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":545388,"byte_end":545425,"line_start":130,"line_end":130,"column_start":1,"column_end":38}},{"value":"/   Note that the difference is larger than the previous,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":545426,"byte_end":545485,"line_start":131,"line_end":131,"column_start":1,"column_end":60}},{"value":"/   even though the leap second clearly follows the previous whole second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":545486,"byte_end":545562,"line_start":132,"line_end":132,"column_start":1,"column_end":77}},{"value":"/ - `04:00:60.9 - 03:00:60.1 =","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":545563,"byte_end":545595,"line_start":133,"line_end":133,"column_start":1,"column_end":33}},{"value":"/   (04:00:60.9 - 04:00:00) + (04:00:00 - 03:01:00) + (03:01:00 - 03:00:60.1) =","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":545596,"byte_end":545677,"line_start":134,"line_end":134,"column_start":1,"column_end":82}},{"value":"/   60.9s + 3540s + 0.9s = 3601.8s`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":545678,"byte_end":545716,"line_start":135,"line_end":135,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":545717,"byte_end":545720,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ In general,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":545721,"byte_end":545736,"line_start":137,"line_end":137,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":545737,"byte_end":545740,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ - `Time + Duration` unconditionally equals to `Duration + Time`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":545741,"byte_end":545809,"line_start":139,"line_end":139,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":545810,"byte_end":545813,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ - `Time - Duration` unconditionally equals to `Time + (-Duration)`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":545814,"byte_end":545885,"line_start":141,"line_end":141,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":545886,"byte_end":545889,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ - `Time1 - Time2` unconditionally equals to `-(Time2 - Time1)`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":545890,"byte_end":545957,"line_start":143,"line_end":143,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":545958,"byte_end":545961,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ - Associativity does not generally hold, because","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":545962,"byte_end":546014,"line_start":145,"line_end":145,"column_start":1,"column_end":53}},{"value":"/   `(Time + Duration1) - Duration2` no longer equals to `Time + (Duration1 - Duration2)`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":546015,"byte_end":546106,"line_start":146,"line_end":146,"column_start":1,"column_end":92}},{"value":"/   for two positive durations.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":546107,"byte_end":546140,"line_start":147,"line_end":147,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":546141,"byte_end":546144,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/     - As a special case, `(Time + Duration) - Duration` also does not equal to `Time`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":546145,"byte_end":546235,"line_start":149,"line_end":149,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":546236,"byte_end":546239,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/     - If you can assume that all durations have the same sign, however,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":546240,"byte_end":546315,"line_start":151,"line_end":151,"column_start":1,"column_end":76}},{"value":"/       then the associativity holds:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":546316,"byte_end":546355,"line_start":152,"line_end":152,"column_start":1,"column_end":40}},{"value":"/       `(Time + Duration1) + Duration2` equals to `Time + (Duration1 + Duration2)`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":546356,"byte_end":546441,"line_start":153,"line_end":153,"column_start":1,"column_end":86}},{"value":"/       for two positive durations.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":546442,"byte_end":546479,"line_start":154,"line_end":154,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":546480,"byte_end":546483,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ ## Reading And Writing Leap Seconds","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":546484,"byte_end":546523,"line_start":156,"line_end":156,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":546524,"byte_end":546527,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ The \"typical\" leap seconds on the minute boundary are","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":546528,"byte_end":546585,"line_start":158,"line_end":158,"column_start":1,"column_end":58}},{"value":"/ correctly handled both in the formatting and parsing.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":546586,"byte_end":546643,"line_start":159,"line_end":159,"column_start":1,"column_end":58}},{"value":"/ The leap second in the human-readable representation","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":546644,"byte_end":546700,"line_start":160,"line_end":160,"column_start":1,"column_end":57}},{"value":"/ will be represented as the second part being 60, as required by ISO 8601.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":546701,"byte_end":546778,"line_start":161,"line_end":161,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":546779,"byte_end":546782,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":546783,"byte_end":546790,"line_start":163,"line_end":163,"column_start":1,"column_end":8}},{"value":"/ use chrono::{Utc, TimeZone};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":546791,"byte_end":546823,"line_start":164,"line_end":164,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":546824,"byte_end":546827,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ let dt = Utc.ymd(2015, 6, 30).and_hms_milli(23, 59, 59, 1_000);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":546828,"byte_end":546895,"line_start":166,"line_end":166,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(format!(\"{:?}\", dt), \"2015-06-30T23:59:60Z\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":546896,"byte_end":546956,"line_start":167,"line_end":167,"column_start":1,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":546957,"byte_end":546964,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":546965,"byte_end":546968,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ There are hypothetical leap seconds not on the minute boundary","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":546969,"byte_end":547035,"line_start":170,"line_end":170,"column_start":1,"column_end":67}},{"value":"/ nevertheless supported by Chrono.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":547036,"byte_end":547073,"line_start":171,"line_end":171,"column_start":1,"column_end":38}},{"value":"/ They are allowed for the sake of completeness and consistency;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":547074,"byte_end":547140,"line_start":172,"line_end":172,"column_start":1,"column_end":67}},{"value":"/ there were several \"exotic\" time zone offsets with fractional minutes prior to UTC after all.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":547141,"byte_end":547238,"line_start":173,"line_end":173,"column_start":1,"column_end":98}},{"value":"/ For such cases the human-readable representation is ambiguous","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":547239,"byte_end":547304,"line_start":174,"line_end":174,"column_start":1,"column_end":66}},{"value":"/ and would be read back to the next non-leap second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":547305,"byte_end":547360,"line_start":175,"line_end":175,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":547361,"byte_end":547364,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":547365,"byte_end":547372,"line_start":177,"line_end":177,"column_start":1,"column_end":8}},{"value":"/ use chrono::{DateTime, Utc, TimeZone};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":547373,"byte_end":547415,"line_start":178,"line_end":178,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":547416,"byte_end":547419,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ let dt = Utc.ymd(2015, 6, 30).and_hms_milli(23, 56, 4, 1_000);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":547420,"byte_end":547486,"line_start":180,"line_end":180,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(format!(\"{:?}\", dt), \"2015-06-30T23:56:05Z\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":547487,"byte_end":547547,"line_start":181,"line_end":181,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":547548,"byte_end":547551,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ let dt = Utc.ymd(2015, 6, 30).and_hms(23, 56, 5);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":547552,"byte_end":547605,"line_start":183,"line_end":183,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(format!(\"{:?}\", dt), \"2015-06-30T23:56:05Z\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":547606,"byte_end":547666,"line_start":184,"line_end":184,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(DateTime::parse_from_rfc3339(\"2015-06-30T23:56:05Z\").unwrap(), dt);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":547667,"byte_end":547749,"line_start":185,"line_end":185,"column_start":1,"column_end":83}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":547750,"byte_end":547757,"line_start":186,"line_end":186,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":547758,"byte_end":547761,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ Since Chrono alone cannot determine any existence of leap seconds,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":547762,"byte_end":547832,"line_start":188,"line_end":188,"column_start":1,"column_end":71}},{"value":"/ **there is absolutely no guarantee that the leap second read has actually happened**.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":547833,"byte_end":547922,"line_start":189,"line_end":189,"column_start":1,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":2448},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":548731,"byte_end":548739,"line_start":217,"line_end":217,"column_start":12,"column_end":20},"name":"from_hms","qualname":"<NaiveTime>::from_hms","value":"fn from_hms(u32, u32, u32) -> NaiveTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveTime` from hour, minute and second.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveTime` from hour, minute and second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":548132,"byte_end":548189,"line_start":198,"line_end":198,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":548194,"byte_end":548197,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ No [leap second](#leap-second-handling) is allowed here;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":548202,"byte_end":548262,"line_start":200,"line_end":200,"column_start":5,"column_end":65}},{"value":"/ use `NaiveTime::from_hms_*` methods with a subsecond parameter instead.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":548267,"byte_end":548342,"line_start":201,"line_end":201,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":548347,"byte_end":548350,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ Panics on invalid hour, minute and/or second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":548355,"byte_end":548404,"line_start":203,"line_end":203,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":548409,"byte_end":548412,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":548417,"byte_end":548430,"line_start":205,"line_end":205,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":548435,"byte_end":548438,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":548443,"byte_end":548450,"line_start":207,"line_end":207,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveTime, Timelike};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":548455,"byte_end":548493,"line_start":208,"line_end":208,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":548498,"byte_end":548501,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ let t = NaiveTime::from_hms(23, 56, 4);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":548506,"byte_end":548549,"line_start":210,"line_end":210,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(t.hour(), 23);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":548554,"byte_end":548583,"line_start":211,"line_end":211,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(t.minute(), 56);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":548588,"byte_end":548619,"line_start":212,"line_end":212,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(t.second(), 4);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":548624,"byte_end":548654,"line_start":213,"line_end":213,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(t.nanosecond(), 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":548659,"byte_end":548693,"line_start":214,"line_end":214,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":548698,"byte_end":548705,"line_start":215,"line_end":215,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":548710,"byte_end":548719,"line_start":216,"line_end":216,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2449},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":549594,"byte_end":549606,"line_start":242,"line_end":242,"column_start":12,"column_end":24},"name":"from_hms_opt","qualname":"<NaiveTime>::from_hms_opt","value":"fn from_hms_opt(u32, u32, u32) -> Option<NaiveTime>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveTime` from hour, minute and second.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveTime` from hour, minute and second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":548868,"byte_end":548925,"line_start":221,"line_end":221,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":548930,"byte_end":548933,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ No [leap second](#leap-second-handling) is allowed here;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":548938,"byte_end":548998,"line_start":223,"line_end":223,"column_start":5,"column_end":65}},{"value":"/ use `NaiveTime::from_hms_*_opt` methods with a subsecond parameter instead.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":549003,"byte_end":549082,"line_start":224,"line_end":224,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":549087,"byte_end":549090,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on invalid hour, minute and/or second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":549095,"byte_end":549152,"line_start":226,"line_end":226,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":549157,"byte_end":549160,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":549165,"byte_end":549178,"line_start":228,"line_end":228,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":549183,"byte_end":549186,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":549191,"byte_end":549198,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveTime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":549203,"byte_end":549229,"line_start":231,"line_end":231,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":549234,"byte_end":549237,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ let from_hms_opt = NaiveTime::from_hms_opt;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":549242,"byte_end":549289,"line_start":233,"line_end":233,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":549294,"byte_end":549297,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ assert!(from_hms_opt(0, 0, 0).is_some());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":549302,"byte_end":549347,"line_start":235,"line_end":235,"column_start":5,"column_end":50}},{"value":"/ assert!(from_hms_opt(23, 59, 59).is_some());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":549352,"byte_end":549400,"line_start":236,"line_end":236,"column_start":5,"column_end":53}},{"value":"/ assert!(from_hms_opt(24, 0, 0).is_none());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":549405,"byte_end":549451,"line_start":237,"line_end":237,"column_start":5,"column_end":51}},{"value":"/ assert!(from_hms_opt(23, 60, 0).is_none());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":549456,"byte_end":549503,"line_start":238,"line_end":238,"column_start":5,"column_end":52}},{"value":"/ assert!(from_hms_opt(23, 59, 60).is_none());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":549508,"byte_end":549556,"line_start":239,"line_end":239,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":549561,"byte_end":549568,"line_start":240,"line_end":240,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":549573,"byte_end":549582,"line_start":241,"line_end":241,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2450},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":550345,"byte_end":550359,"line_start":265,"line_end":265,"column_start":12,"column_end":26},"name":"from_hms_milli","qualname":"<NaiveTime>::from_hms_milli","value":"fn from_hms_milli(u32, u32, u32, u32) -> NaiveTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveTime` from hour, minute, second and millisecond.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveTime` from hour, minute, second and millisecond.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":549728,"byte_end":549798,"line_start":246,"line_end":246,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":549803,"byte_end":549806,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ The millisecond part can exceed 1,000","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":549811,"byte_end":549852,"line_start":248,"line_end":248,"column_start":5,"column_end":46}},{"value":"/ in order to represent the [leap second](#leap-second-handling).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":549857,"byte_end":549924,"line_start":249,"line_end":249,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":549929,"byte_end":549932,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ Panics on invalid hour, minute, second and/or millisecond.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":549937,"byte_end":549999,"line_start":251,"line_end":251,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":550004,"byte_end":550007,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":550012,"byte_end":550025,"line_start":253,"line_end":253,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":550030,"byte_end":550033,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":550038,"byte_end":550045,"line_start":255,"line_end":255,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveTime, Timelike};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":550050,"byte_end":550088,"line_start":256,"line_end":256,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":550093,"byte_end":550096,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ let t = NaiveTime::from_hms_milli(23, 56, 4, 12);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":550101,"byte_end":550154,"line_start":258,"line_end":258,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(t.hour(), 23);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":550159,"byte_end":550188,"line_start":259,"line_end":259,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(t.minute(), 56);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":550193,"byte_end":550224,"line_start":260,"line_end":260,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(t.second(), 4);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":550229,"byte_end":550259,"line_start":261,"line_end":261,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(t.nanosecond(), 12_000_000);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":550264,"byte_end":550307,"line_start":262,"line_end":262,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":550312,"byte_end":550319,"line_start":263,"line_end":263,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":550324,"byte_end":550333,"line_start":264,"line_end":264,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2451},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":551417,"byte_end":551435,"line_start":292,"line_end":292,"column_start":12,"column_end":30},"name":"from_hms_milli_opt","qualname":"<NaiveTime>::from_hms_milli_opt","value":"fn from_hms_milli_opt(u32, u32, u32, u32) -> Option<NaiveTime>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveTime` from hour, minute, second and millisecond.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveTime` from hour, minute, second and millisecond.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":550513,"byte_end":550583,"line_start":269,"line_end":269,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":550588,"byte_end":550591,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ The millisecond part can exceed 1,000","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":550596,"byte_end":550637,"line_start":271,"line_end":271,"column_start":5,"column_end":46}},{"value":"/ in order to represent the [leap second](#leap-second-handling).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":550642,"byte_end":550709,"line_start":272,"line_end":272,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":550714,"byte_end":550717,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on invalid hour, minute, second and/or millisecond.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":550722,"byte_end":550792,"line_start":274,"line_end":274,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":550797,"byte_end":550800,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":550805,"byte_end":550818,"line_start":276,"line_end":276,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":550823,"byte_end":550826,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":550831,"byte_end":550838,"line_start":278,"line_end":278,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveTime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":550843,"byte_end":550869,"line_start":279,"line_end":279,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":550874,"byte_end":550877,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ let from_hmsm_opt = NaiveTime::from_hms_milli_opt;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":550882,"byte_end":550936,"line_start":281,"line_end":281,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":550941,"byte_end":550944,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ assert!(from_hmsm_opt(0, 0, 0, 0).is_some());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":550949,"byte_end":550998,"line_start":283,"line_end":283,"column_start":5,"column_end":54}},{"value":"/ assert!(from_hmsm_opt(23, 59, 59, 999).is_some());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":551003,"byte_end":551057,"line_start":284,"line_end":284,"column_start":5,"column_end":59}},{"value":"/ assert!(from_hmsm_opt(23, 59, 59, 1_999).is_some()); // a leap second after 23:59:59","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":551062,"byte_end":551150,"line_start":285,"line_end":285,"column_start":5,"column_end":93}},{"value":"/ assert!(from_hmsm_opt(24, 0, 0, 0).is_none());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":551155,"byte_end":551205,"line_start":286,"line_end":286,"column_start":5,"column_end":55}},{"value":"/ assert!(from_hmsm_opt(23, 60, 0, 0).is_none());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":551210,"byte_end":551261,"line_start":287,"line_end":287,"column_start":5,"column_end":56}},{"value":"/ assert!(from_hmsm_opt(23, 59, 60, 0).is_none());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":551266,"byte_end":551318,"line_start":288,"line_end":288,"column_start":5,"column_end":57}},{"value":"/ assert!(from_hmsm_opt(23, 59, 59, 2_000).is_none());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":551323,"byte_end":551379,"line_start":289,"line_end":289,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":551384,"byte_end":551391,"line_start":290,"line_end":290,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":551396,"byte_end":551405,"line_start":291,"line_end":291,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2453},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":552269,"byte_end":552283,"line_start":317,"line_end":317,"column_start":12,"column_end":26},"name":"from_hms_micro","qualname":"<NaiveTime>::from_hms_micro","value":"fn from_hms_micro(u32, u32, u32, u32) -> NaiveTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveTime` from hour, minute, second and microsecond.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveTime` from hour, minute, second and microsecond.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":551644,"byte_end":551714,"line_start":298,"line_end":298,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":551719,"byte_end":551722,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ The microsecond part can exceed 1,000,000","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":551727,"byte_end":551772,"line_start":300,"line_end":300,"column_start":5,"column_end":50}},{"value":"/ in order to represent the [leap second](#leap-second-handling).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":551777,"byte_end":551844,"line_start":301,"line_end":301,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":551849,"byte_end":551852,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ Panics on invalid hour, minute, second and/or microsecond.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":551857,"byte_end":551919,"line_start":303,"line_end":303,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":551924,"byte_end":551927,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":551932,"byte_end":551945,"line_start":305,"line_end":305,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":551950,"byte_end":551953,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":551958,"byte_end":551965,"line_start":307,"line_end":307,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveTime, Timelike};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":551970,"byte_end":552008,"line_start":308,"line_end":308,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":552013,"byte_end":552016,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ let t = NaiveTime::from_hms_micro(23, 56, 4, 12_345);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":552021,"byte_end":552078,"line_start":310,"line_end":310,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(t.hour(), 23);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":552083,"byte_end":552112,"line_start":311,"line_end":311,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(t.minute(), 56);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":552117,"byte_end":552148,"line_start":312,"line_end":312,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(t.second(), 4);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":552153,"byte_end":552183,"line_start":313,"line_end":313,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(t.nanosecond(), 12_345_000);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":552188,"byte_end":552231,"line_start":314,"line_end":314,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":552236,"byte_end":552243,"line_start":315,"line_end":315,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":552248,"byte_end":552257,"line_start":316,"line_end":316,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2454},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":553357,"byte_end":553375,"line_start":344,"line_end":344,"column_start":12,"column_end":30},"name":"from_hms_micro_opt","qualname":"<NaiveTime>::from_hms_micro_opt","value":"fn from_hms_micro_opt(u32, u32, u32, u32) -> Option<NaiveTime>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveTime` from hour, minute, second and microsecond.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveTime` from hour, minute, second and microsecond.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":552437,"byte_end":552507,"line_start":321,"line_end":321,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":552512,"byte_end":552515,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ The microsecond part can exceed 1,000,000","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":552520,"byte_end":552565,"line_start":323,"line_end":323,"column_start":5,"column_end":50}},{"value":"/ in order to represent the [leap second](#leap-second-handling).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":552570,"byte_end":552637,"line_start":324,"line_end":324,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":552642,"byte_end":552645,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on invalid hour, minute, second and/or microsecond.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":552650,"byte_end":552720,"line_start":326,"line_end":326,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":552725,"byte_end":552728,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":552733,"byte_end":552746,"line_start":328,"line_end":328,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":552751,"byte_end":552754,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":552759,"byte_end":552766,"line_start":330,"line_end":330,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveTime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":552771,"byte_end":552797,"line_start":331,"line_end":331,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":552802,"byte_end":552805,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ let from_hmsu_opt = NaiveTime::from_hms_micro_opt;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":552810,"byte_end":552864,"line_start":333,"line_end":333,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":552869,"byte_end":552872,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ assert!(from_hmsu_opt(0, 0, 0, 0).is_some());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":552877,"byte_end":552926,"line_start":335,"line_end":335,"column_start":5,"column_end":54}},{"value":"/ assert!(from_hmsu_opt(23, 59, 59, 999_999).is_some());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":552931,"byte_end":552989,"line_start":336,"line_end":336,"column_start":5,"column_end":63}},{"value":"/ assert!(from_hmsu_opt(23, 59, 59, 1_999_999).is_some()); // a leap second after 23:59:59","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":552994,"byte_end":553086,"line_start":337,"line_end":337,"column_start":5,"column_end":97}},{"value":"/ assert!(from_hmsu_opt(24, 0, 0, 0).is_none());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":553091,"byte_end":553141,"line_start":338,"line_end":338,"column_start":5,"column_end":55}},{"value":"/ assert!(from_hmsu_opt(23, 60, 0, 0).is_none());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":553146,"byte_end":553197,"line_start":339,"line_end":339,"column_start":5,"column_end":56}},{"value":"/ assert!(from_hmsu_opt(23, 59, 60, 0).is_none());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":553202,"byte_end":553254,"line_start":340,"line_end":340,"column_start":5,"column_end":57}},{"value":"/ assert!(from_hmsu_opt(23, 59, 59, 2_000_000).is_none());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":553259,"byte_end":553319,"line_start":341,"line_end":341,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":553324,"byte_end":553331,"line_start":342,"line_end":342,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":553336,"byte_end":553345,"line_start":343,"line_end":343,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2456},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":554183,"byte_end":554196,"line_start":367,"line_end":367,"column_start":12,"column_end":25},"name":"from_hms_nano","qualname":"<NaiveTime>::from_hms_nano","value":"fn from_hms_nano(u32, u32, u32, u32) -> NaiveTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveTime` from hour, minute, second and nanosecond.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveTime` from hour, minute, second and nanosecond.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":553554,"byte_end":553623,"line_start":348,"line_end":348,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":553628,"byte_end":553631,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ The nanosecond part can exceed 1,000,000,000","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":553636,"byte_end":553684,"line_start":350,"line_end":350,"column_start":5,"column_end":53}},{"value":"/ in order to represent the [leap second](#leap-second-handling).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":553689,"byte_end":553756,"line_start":351,"line_end":351,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":553761,"byte_end":553764,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Panics on invalid hour, minute, second and/or nanosecond.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":553769,"byte_end":553830,"line_start":353,"line_end":353,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":553835,"byte_end":553838,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":553843,"byte_end":553856,"line_start":355,"line_end":355,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":553861,"byte_end":553864,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":553869,"byte_end":553876,"line_start":357,"line_end":357,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveTime, Timelike};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":553881,"byte_end":553919,"line_start":358,"line_end":358,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":553924,"byte_end":553927,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ let t = NaiveTime::from_hms_nano(23, 56, 4, 12_345_678);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":553932,"byte_end":553992,"line_start":360,"line_end":360,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(t.hour(), 23);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":553997,"byte_end":554026,"line_start":361,"line_end":361,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(t.minute(), 56);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":554031,"byte_end":554062,"line_start":362,"line_end":362,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(t.second(), 4);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":554067,"byte_end":554097,"line_start":363,"line_end":363,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(t.nanosecond(), 12_345_678);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":554102,"byte_end":554145,"line_start":364,"line_end":364,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":554150,"byte_end":554157,"line_start":365,"line_end":365,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":554162,"byte_end":554171,"line_start":366,"line_end":366,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2457},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":555279,"byte_end":555296,"line_start":394,"line_end":394,"column_start":12,"column_end":29},"name":"from_hms_nano_opt","qualname":"<NaiveTime>::from_hms_nano_opt","value":"fn from_hms_nano_opt(u32, u32, u32, u32) -> Option<NaiveTime>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveTime` from hour, minute, second and nanosecond.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveTime` from hour, minute, second and nanosecond.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":554347,"byte_end":554416,"line_start":371,"line_end":371,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":554421,"byte_end":554424,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ The nanosecond part can exceed 1,000,000,000","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":554429,"byte_end":554477,"line_start":373,"line_end":373,"column_start":5,"column_end":53}},{"value":"/ in order to represent the [leap second](#leap-second-handling).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":554482,"byte_end":554549,"line_start":374,"line_end":374,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":554554,"byte_end":554557,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on invalid hour, minute, second and/or nanosecond.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":554562,"byte_end":554631,"line_start":376,"line_end":376,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":554636,"byte_end":554639,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":554644,"byte_end":554657,"line_start":378,"line_end":378,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":554662,"byte_end":554665,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":554670,"byte_end":554677,"line_start":380,"line_end":380,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveTime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":554682,"byte_end":554708,"line_start":381,"line_end":381,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":554713,"byte_end":554716,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ let from_hmsn_opt = NaiveTime::from_hms_nano_opt;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":554721,"byte_end":554774,"line_start":383,"line_end":383,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":554779,"byte_end":554782,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ assert!(from_hmsn_opt(0, 0, 0, 0).is_some());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":554787,"byte_end":554836,"line_start":385,"line_end":385,"column_start":5,"column_end":54}},{"value":"/ assert!(from_hmsn_opt(23, 59, 59, 999_999_999).is_some());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":554841,"byte_end":554903,"line_start":386,"line_end":386,"column_start":5,"column_end":67}},{"value":"/ assert!(from_hmsn_opt(23, 59, 59, 1_999_999_999).is_some()); // a leap second after 23:59:59","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":554908,"byte_end":555004,"line_start":387,"line_end":387,"column_start":5,"column_end":101}},{"value":"/ assert!(from_hmsn_opt(24, 0, 0, 0).is_none());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":555009,"byte_end":555059,"line_start":388,"line_end":388,"column_start":5,"column_end":55}},{"value":"/ assert!(from_hmsn_opt(23, 60, 0, 0).is_none());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":555064,"byte_end":555115,"line_start":389,"line_end":389,"column_start":5,"column_end":56}},{"value":"/ assert!(from_hmsn_opt(23, 59, 60, 0).is_none());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":555120,"byte_end":555172,"line_start":390,"line_end":390,"column_start":5,"column_end":57}},{"value":"/ assert!(from_hmsn_opt(23, 59, 59, 2_000_000_000).is_none());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":555177,"byte_end":555241,"line_start":391,"line_end":391,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":555246,"byte_end":555253,"line_start":392,"line_end":392,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":555258,"byte_end":555267,"line_start":393,"line_end":393,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2458},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":556232,"byte_end":556262,"line_start":421,"line_end":421,"column_start":12,"column_end":42},"name":"from_num_seconds_from_midnight","qualname":"<NaiveTime>::from_num_seconds_from_midnight","value":"fn from_num_seconds_from_midnight(u32, u32) -> NaiveTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveTime` from the number of seconds since midnight and nanosecond.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveTime` from the number of seconds since midnight and nanosecond.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":555577,"byte_end":555662,"line_start":402,"line_end":402,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":555667,"byte_end":555670,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ The nanosecond part can exceed 1,000,000,000","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":555675,"byte_end":555723,"line_start":404,"line_end":404,"column_start":5,"column_end":53}},{"value":"/ in order to represent the [leap second](#leap-second-handling).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":555728,"byte_end":555795,"line_start":405,"line_end":405,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":555800,"byte_end":555803,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ Panics on invalid number of seconds and/or nanosecond.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":555808,"byte_end":555866,"line_start":407,"line_end":407,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":555871,"byte_end":555874,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":555879,"byte_end":555892,"line_start":409,"line_end":409,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":555897,"byte_end":555900,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":555905,"byte_end":555912,"line_start":411,"line_end":411,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveTime, Timelike};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":555917,"byte_end":555955,"line_start":412,"line_end":412,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":555960,"byte_end":555963,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ let t = NaiveTime::from_num_seconds_from_midnight(86164, 12_345_678);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":555968,"byte_end":556041,"line_start":414,"line_end":414,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(t.hour(), 23);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":556046,"byte_end":556075,"line_start":415,"line_end":415,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(t.minute(), 56);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":556080,"byte_end":556111,"line_start":416,"line_end":416,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(t.second(), 4);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":556116,"byte_end":556146,"line_start":417,"line_end":417,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(t.nanosecond(), 12_345_678);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":556151,"byte_end":556194,"line_start":418,"line_end":418,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":556199,"byte_end":556206,"line_start":419,"line_end":419,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":556211,"byte_end":556220,"line_start":420,"line_end":420,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2459},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":557232,"byte_end":557266,"line_start":446,"line_end":446,"column_start":12,"column_end":46},"name":"from_num_seconds_from_midnight_opt","qualname":"<NaiveTime>::from_num_seconds_from_midnight_opt","value":"fn from_num_seconds_from_midnight_opt(u32, u32) -> Option<NaiveTime>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveTime` from the number of seconds since midnight and nanosecond.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveTime` from the number of seconds since midnight and nanosecond.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":556400,"byte_end":556485,"line_start":425,"line_end":425,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":556490,"byte_end":556493,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ The nanosecond part can exceed 1,000,000,000","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":556498,"byte_end":556546,"line_start":427,"line_end":427,"column_start":5,"column_end":53}},{"value":"/ in order to represent the [leap second](#leap-second-handling).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":556551,"byte_end":556618,"line_start":428,"line_end":428,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":556623,"byte_end":556626,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on invalid number of seconds and/or nanosecond.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":556631,"byte_end":556697,"line_start":430,"line_end":430,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":556702,"byte_end":556705,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":556710,"byte_end":556723,"line_start":432,"line_end":432,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":556728,"byte_end":556731,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":556736,"byte_end":556743,"line_start":434,"line_end":434,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveTime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":556748,"byte_end":556774,"line_start":435,"line_end":435,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":556779,"byte_end":556782,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ let from_nsecs_opt = NaiveTime::from_num_seconds_from_midnight_opt;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":556787,"byte_end":556858,"line_start":437,"line_end":437,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":556863,"byte_end":556866,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ assert!(from_nsecs_opt(0, 0).is_some());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":556871,"byte_end":556915,"line_start":439,"line_end":439,"column_start":5,"column_end":49}},{"value":"/ assert!(from_nsecs_opt(86399, 999_999_999).is_some());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":556920,"byte_end":556978,"line_start":440,"line_end":440,"column_start":5,"column_end":63}},{"value":"/ assert!(from_nsecs_opt(86399, 1_999_999_999).is_some()); // a leap second after 23:59:59","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":556983,"byte_end":557075,"line_start":441,"line_end":441,"column_start":5,"column_end":97}},{"value":"/ assert!(from_nsecs_opt(86_400, 0).is_none());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":557080,"byte_end":557129,"line_start":442,"line_end":442,"column_start":5,"column_end":54}},{"value":"/ assert!(from_nsecs_opt(86399, 2_000_000_000).is_none());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":557134,"byte_end":557194,"line_start":443,"line_end":443,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":557199,"byte_end":557206,"line_start":444,"line_end":444,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":557211,"byte_end":557220,"line_start":445,"line_end":445,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2460},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":559920,"byte_end":559934,"line_start":514,"line_end":514,"column_start":12,"column_end":26},"name":"parse_from_str","qualname":"<NaiveTime>::parse_from_str","value":"fn parse_from_str(&str, &str) -> ParseResult<NaiveTime>","parent":null,"children":[],"decl_id":null,"docs":" Parses a string with the specified format string and returns a new `NaiveTime`.\n See the [`format::strftime` module](../format/strftime/index.html)\n on the supported escape sequences.","sig":null,"attributes":[{"value":"/ Parses a string with the specified format string and returns a new `NaiveTime`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":557456,"byte_end":557539,"line_start":453,"line_end":453,"column_start":5,"column_end":88}},{"value":"/ See the [`format::strftime` module](../format/strftime/index.html)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":557544,"byte_end":557614,"line_start":454,"line_end":454,"column_start":5,"column_end":75}},{"value":"/ on the supported escape sequences.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":557619,"byte_end":557657,"line_start":455,"line_end":455,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":557662,"byte_end":557665,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":557670,"byte_end":557683,"line_start":457,"line_end":457,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":557688,"byte_end":557691,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":557696,"byte_end":557703,"line_start":459,"line_end":459,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveTime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":557708,"byte_end":557734,"line_start":460,"line_end":460,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":557739,"byte_end":557742,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ let parse_from_str = NaiveTime::parse_from_str;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":557747,"byte_end":557798,"line_start":462,"line_end":462,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":557803,"byte_end":557806,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(parse_from_str(\"23:56:04\", \"%H:%M:%S\"),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":557811,"byte_end":557865,"line_start":464,"line_end":464,"column_start":5,"column_end":59}},{"value":"/            Ok(NaiveTime::from_hms(23, 56, 4)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":557870,"byte_end":557921,"line_start":465,"line_end":465,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(parse_from_str(\"pm012345.6789\", \"%p%I%M%S%.f\"),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":557926,"byte_end":557988,"line_start":466,"line_end":466,"column_start":5,"column_end":67}},{"value":"/            Ok(NaiveTime::from_hms_micro(13, 23, 45, 678_900)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":557993,"byte_end":558060,"line_start":467,"line_end":467,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":558065,"byte_end":558072,"line_start":468,"line_end":468,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":558077,"byte_end":558080,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ Date and offset is ignored for the purpose of parsing.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":558085,"byte_end":558143,"line_start":470,"line_end":470,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":558148,"byte_end":558151,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":558156,"byte_end":558163,"line_start":472,"line_end":472,"column_start":5,"column_end":12}},{"value":"/ # use chrono::NaiveTime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":558168,"byte_end":558196,"line_start":473,"line_end":473,"column_start":5,"column_end":33}},{"value":"/ # let parse_from_str = NaiveTime::parse_from_str;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":558201,"byte_end":558254,"line_start":474,"line_end":474,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(parse_from_str(\"2014-5-17T12:34:56+09:30\", \"%Y-%m-%dT%H:%M:%S%z\"),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":558259,"byte_end":558340,"line_start":475,"line_end":475,"column_start":5,"column_end":86}},{"value":"/            Ok(NaiveTime::from_hms(12, 34, 56)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":558345,"byte_end":558397,"line_start":476,"line_end":476,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":558402,"byte_end":558409,"line_start":477,"line_end":477,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":558414,"byte_end":558417,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ [Leap seconds](#leap-second-handling) are correctly handled by","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":558422,"byte_end":558488,"line_start":479,"line_end":479,"column_start":5,"column_end":71}},{"value":"/ treating any time of the form `hh:mm:60` as a leap second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":558493,"byte_end":558555,"line_start":480,"line_end":480,"column_start":5,"column_end":67}},{"value":"/ (This equally applies to the formatting, so the round trip is possible.)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":558560,"byte_end":558636,"line_start":481,"line_end":481,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":558641,"byte_end":558644,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":558649,"byte_end":558656,"line_start":483,"line_end":483,"column_start":5,"column_end":12}},{"value":"/ # use chrono::NaiveTime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":558661,"byte_end":558689,"line_start":484,"line_end":484,"column_start":5,"column_end":33}},{"value":"/ # let parse_from_str = NaiveTime::parse_from_str;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":558694,"byte_end":558747,"line_start":485,"line_end":485,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(parse_from_str(\"08:59:60.123\", \"%H:%M:%S%.f\"),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":558752,"byte_end":558813,"line_start":486,"line_end":486,"column_start":5,"column_end":66}},{"value":"/            Ok(NaiveTime::from_hms_milli(8, 59, 59, 1_123)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":558818,"byte_end":558882,"line_start":487,"line_end":487,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":558887,"byte_end":558894,"line_start":488,"line_end":488,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":558899,"byte_end":558902,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ Missing seconds are assumed to be zero,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":558907,"byte_end":558950,"line_start":490,"line_end":490,"column_start":5,"column_end":48}},{"value":"/ but out-of-bound times or insufficient fields are errors otherwise.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":558955,"byte_end":559026,"line_start":491,"line_end":491,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":559031,"byte_end":559034,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":559039,"byte_end":559046,"line_start":493,"line_end":493,"column_start":5,"column_end":12}},{"value":"/ # use chrono::NaiveTime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":559051,"byte_end":559079,"line_start":494,"line_end":494,"column_start":5,"column_end":33}},{"value":"/ # let parse_from_str = NaiveTime::parse_from_str;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":559084,"byte_end":559137,"line_start":495,"line_end":495,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(parse_from_str(\"7:15\", \"%H:%M\"),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":559142,"byte_end":559189,"line_start":496,"line_end":496,"column_start":5,"column_end":52}},{"value":"/            Ok(NaiveTime::from_hms(7, 15, 0)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":559194,"byte_end":559244,"line_start":497,"line_end":497,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":559249,"byte_end":559252,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ assert!(parse_from_str(\"04m33s\", \"%Mm%Ss\").is_err());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":559257,"byte_end":559314,"line_start":499,"line_end":499,"column_start":5,"column_end":62}},{"value":"/ assert!(parse_from_str(\"12\", \"%H\").is_err());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":559319,"byte_end":559368,"line_start":500,"line_end":500,"column_start":5,"column_end":54}},{"value":"/ assert!(parse_from_str(\"17:60\", \"%H:%M\").is_err());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":559373,"byte_end":559428,"line_start":501,"line_end":501,"column_start":5,"column_end":60}},{"value":"/ assert!(parse_from_str(\"24:00:00\", \"%H:%M:%S\").is_err());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":559433,"byte_end":559494,"line_start":502,"line_end":502,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":559499,"byte_end":559506,"line_start":503,"line_end":503,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":559511,"byte_end":559514,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ All parsed fields should be consistent to each other, otherwise it's an error.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":559519,"byte_end":559601,"line_start":505,"line_end":505,"column_start":5,"column_end":87}},{"value":"/ Here `%H` is for 24-hour clocks, unlike `%I`,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":559606,"byte_end":559655,"line_start":506,"line_end":506,"column_start":5,"column_end":54}},{"value":"/ and thus can be independently determined without AM/PM.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":559660,"byte_end":559719,"line_start":507,"line_end":507,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":559724,"byte_end":559727,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":559732,"byte_end":559739,"line_start":509,"line_end":509,"column_start":5,"column_end":12}},{"value":"/ # use chrono::NaiveTime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":559744,"byte_end":559772,"line_start":510,"line_end":510,"column_start":5,"column_end":33}},{"value":"/ # let parse_from_str = NaiveTime::parse_from_str;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":559777,"byte_end":559830,"line_start":511,"line_end":511,"column_start":5,"column_end":58}},{"value":"/ assert!(parse_from_str(\"13:07 AM\", \"%H:%M %p\").is_err());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":559835,"byte_end":559896,"line_start":512,"line_end":512,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":559901,"byte_end":559908,"line_start":513,"line_end":513,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2461},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":560933,"byte_end":560955,"line_start":539,"line_end":539,"column_start":12,"column_end":34},"name":"overflowing_add_signed","qualname":"<NaiveTime>::overflowing_add_signed","value":"fn overflowing_add_signed(&Self, OldDuration) -> (NaiveTime, i64)","parent":null,"children":[],"decl_id":null,"docs":" Adds given `Duration` to the current time,\n and also returns the number of *seconds*\n in the integral number of days ignored from the addition.\n (We cannot return `Duration` because it is subject to overflow or underflow.)","sig":null,"attributes":[{"value":"/ Adds given `Duration` to the current time,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":560122,"byte_end":560168,"line_start":520,"line_end":520,"column_start":5,"column_end":51}},{"value":"/ and also returns the number of *seconds*","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":560173,"byte_end":560217,"line_start":521,"line_end":521,"column_start":5,"column_end":49}},{"value":"/ in the integral number of days ignored from the addition.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":560222,"byte_end":560283,"line_start":522,"line_end":522,"column_start":5,"column_end":66}},{"value":"/ (We cannot return `Duration` because it is subject to overflow or underflow.)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":560288,"byte_end":560369,"line_start":523,"line_end":523,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":560374,"byte_end":560377,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":560382,"byte_end":560395,"line_start":525,"line_end":525,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":560400,"byte_end":560403,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":560408,"byte_end":560415,"line_start":527,"line_end":527,"column_start":5,"column_end":12}},{"value":"/ use chrono::{Duration, NaiveTime};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":560420,"byte_end":560458,"line_start":528,"line_end":528,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":560463,"byte_end":560466,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ let from_hms = NaiveTime::from_hms;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":560471,"byte_end":560510,"line_start":530,"line_end":530,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":560515,"byte_end":560518,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(from_hms(3, 4, 5).overflowing_add_signed(Duration::hours(11)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":560523,"byte_end":560600,"line_start":532,"line_end":532,"column_start":5,"column_end":82}},{"value":"/            (from_hms(14, 4, 5), 0));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":560605,"byte_end":560645,"line_start":533,"line_end":533,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(from_hms(3, 4, 5).overflowing_add_signed(Duration::hours(23)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":560650,"byte_end":560727,"line_start":534,"line_end":534,"column_start":5,"column_end":82}},{"value":"/            (from_hms(2, 4, 5), 86_400));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":560732,"byte_end":560776,"line_start":535,"line_end":535,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(from_hms(3, 4, 5).overflowing_add_signed(Duration::hours(-7)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":560781,"byte_end":560858,"line_start":536,"line_end":536,"column_start":5,"column_end":82}},{"value":"/            (from_hms(20, 4, 5), -86_400));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":560863,"byte_end":560909,"line_start":537,"line_end":537,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":560914,"byte_end":560921,"line_start":538,"line_end":538,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2462},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":564363,"byte_end":564385,"line_start":622,"line_end":622,"column_start":12,"column_end":34},"name":"overflowing_sub_signed","qualname":"<NaiveTime>::overflowing_sub_signed","value":"fn overflowing_sub_signed(&Self, OldDuration) -> (NaiveTime, i64)","parent":null,"children":[],"decl_id":null,"docs":" Subtracts given `Duration` from the current time,\n and also returns the number of *seconds*\n in the integral number of days ignored from the subtraction.\n (We cannot return `Duration` because it is subject to overflow or underflow.)","sig":null,"attributes":[{"value":"/ Subtracts given `Duration` from the current time,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":563529,"byte_end":563582,"line_start":602,"line_end":602,"column_start":5,"column_end":58}},{"value":"/ and also returns the number of *seconds*","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":563587,"byte_end":563631,"line_start":603,"line_end":603,"column_start":5,"column_end":49}},{"value":"/ in the integral number of days ignored from the subtraction.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":563636,"byte_end":563700,"line_start":604,"line_end":604,"column_start":5,"column_end":69}},{"value":"/ (We cannot return `Duration` because it is subject to overflow or underflow.)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":563705,"byte_end":563786,"line_start":605,"line_end":605,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":563791,"byte_end":563794,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":563799,"byte_end":563812,"line_start":607,"line_end":607,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":563817,"byte_end":563820,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":563825,"byte_end":563832,"line_start":609,"line_end":609,"column_start":5,"column_end":12}},{"value":"/ use chrono::{Duration, NaiveTime};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":563837,"byte_end":563875,"line_start":610,"line_end":610,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":563880,"byte_end":563883,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ let from_hms = NaiveTime::from_hms;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":563888,"byte_end":563927,"line_start":612,"line_end":612,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":563932,"byte_end":563935,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(from_hms(3, 4, 5).overflowing_sub_signed(Duration::hours(2)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":563940,"byte_end":564016,"line_start":614,"line_end":614,"column_start":5,"column_end":81}},{"value":"/            (from_hms(1, 4, 5), 0));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":564021,"byte_end":564060,"line_start":615,"line_end":615,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(from_hms(3, 4, 5).overflowing_sub_signed(Duration::hours(17)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":564065,"byte_end":564142,"line_start":616,"line_end":616,"column_start":5,"column_end":82}},{"value":"/            (from_hms(10, 4, 5), 86_400));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":564147,"byte_end":564192,"line_start":617,"line_end":617,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(from_hms(3, 4, 5).overflowing_sub_signed(Duration::hours(-22)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":564197,"byte_end":564275,"line_start":618,"line_end":618,"column_start":5,"column_end":83}},{"value":"/            (from_hms(1, 4, 5), -86_400));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":564280,"byte_end":564325,"line_start":619,"line_end":619,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":564330,"byte_end":564337,"line_start":620,"line_end":620,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":564342,"byte_end":564351,"line_start":621,"line_end":621,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2463},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":567253,"byte_end":567274,"line_start":681,"line_end":681,"column_start":12,"column_end":33},"name":"signed_duration_since","qualname":"<NaiveTime>::signed_duration_since","value":"fn signed_duration_since(Self, NaiveTime) -> OldDuration","parent":null,"children":[],"decl_id":null,"docs":" Subtracts another `NaiveTime` from the current time.\n Returns a `Duration` within +/- 1 day.\n This does not overflow or underflow at all.","sig":null,"attributes":[{"value":"/ Subtracts another `NaiveTime` from the current time.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":564577,"byte_end":564633,"line_start":627,"line_end":627,"column_start":5,"column_end":61}},{"value":"/ Returns a `Duration` within +/- 1 day.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":564638,"byte_end":564680,"line_start":628,"line_end":628,"column_start":5,"column_end":47}},{"value":"/ This does not overflow or underflow at all.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":564685,"byte_end":564732,"line_start":629,"line_end":629,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":564737,"byte_end":564740,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ As a part of Chrono's [leap second handling](#leap-second-handling),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":564745,"byte_end":564817,"line_start":631,"line_end":631,"column_start":5,"column_end":77}},{"value":"/ the subtraction assumes that **there is no leap second ever**,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":564822,"byte_end":564888,"line_start":632,"line_end":632,"column_start":5,"column_end":71}},{"value":"/ except when any of the `NaiveTime`s themselves represents a leap second","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":564893,"byte_end":564968,"line_start":633,"line_end":633,"column_start":5,"column_end":80}},{"value":"/ in which case the assumption becomes that","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":564973,"byte_end":565018,"line_start":634,"line_end":634,"column_start":5,"column_end":50}},{"value":"/ **there are exactly one (or two) leap second(s) ever**.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":565023,"byte_end":565082,"line_start":635,"line_end":635,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":565087,"byte_end":565090,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":565095,"byte_end":565108,"line_start":637,"line_end":637,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":565113,"byte_end":565116,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":565121,"byte_end":565128,"line_start":639,"line_end":639,"column_start":5,"column_end":12}},{"value":"/ use chrono::{Duration, NaiveTime};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":565133,"byte_end":565171,"line_start":640,"line_end":640,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":565176,"byte_end":565179,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ let from_hmsm = NaiveTime::from_hms_milli;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":565184,"byte_end":565230,"line_start":642,"line_end":642,"column_start":5,"column_end":51}},{"value":"/ let since = NaiveTime::signed_duration_since;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":565235,"byte_end":565284,"line_start":643,"line_end":643,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":565289,"byte_end":565292,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(3, 5, 7, 900)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":565297,"byte_end":565368,"line_start":645,"line_end":645,"column_start":5,"column_end":76}},{"value":"/            Duration::zero());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":565373,"byte_end":565406,"line_start":646,"line_end":646,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(3, 5, 7, 875)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":565411,"byte_end":565482,"line_start":647,"line_end":647,"column_start":5,"column_end":76}},{"value":"/            Duration::milliseconds(25));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":565487,"byte_end":565530,"line_start":648,"line_end":648,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(3, 5, 6, 925)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":565535,"byte_end":565606,"line_start":649,"line_end":649,"column_start":5,"column_end":76}},{"value":"/            Duration::milliseconds(975));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":565611,"byte_end":565655,"line_start":650,"line_end":650,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(3, 5, 0, 900)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":565660,"byte_end":565731,"line_start":651,"line_end":651,"column_start":5,"column_end":76}},{"value":"/            Duration::seconds(7));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":565736,"byte_end":565773,"line_start":652,"line_end":652,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(3, 0, 7, 900)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":565778,"byte_end":565849,"line_start":653,"line_end":653,"column_start":5,"column_end":76}},{"value":"/            Duration::seconds(5 * 60));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":565854,"byte_end":565896,"line_start":654,"line_end":654,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(0, 5, 7, 900)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":565901,"byte_end":565972,"line_start":655,"line_end":655,"column_start":5,"column_end":76}},{"value":"/            Duration::seconds(3 * 3600));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":565977,"byte_end":566021,"line_start":656,"line_end":656,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(4, 5, 7, 900)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":566026,"byte_end":566097,"line_start":657,"line_end":657,"column_start":5,"column_end":76}},{"value":"/            Duration::seconds(-3600));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":566102,"byte_end":566143,"line_start":658,"line_end":658,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(2, 4, 6, 800)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":566148,"byte_end":566219,"line_start":659,"line_end":659,"column_start":5,"column_end":76}},{"value":"/            Duration::seconds(3600 + 60 + 1) + Duration::milliseconds(100));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":566224,"byte_end":566303,"line_start":660,"line_end":660,"column_start":5,"column_end":84}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":566308,"byte_end":566315,"line_start":661,"line_end":661,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":566320,"byte_end":566323,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ Leap seconds are handled, but the subtraction assumes that","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":566328,"byte_end":566390,"line_start":663,"line_end":663,"column_start":5,"column_end":67}},{"value":"/ there were no other leap seconds happened.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":566395,"byte_end":566441,"line_start":664,"line_end":664,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":566446,"byte_end":566449,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":566454,"byte_end":566461,"line_start":666,"line_end":666,"column_start":5,"column_end":12}},{"value":"/ # use chrono::{Duration, NaiveTime};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":566466,"byte_end":566506,"line_start":667,"line_end":667,"column_start":5,"column_end":45}},{"value":"/ # let from_hmsm = NaiveTime::from_hms_milli;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":566511,"byte_end":566559,"line_start":668,"line_end":668,"column_start":5,"column_end":53}},{"value":"/ # let since = NaiveTime::signed_duration_since;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":566564,"byte_end":566615,"line_start":669,"line_end":669,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(since(from_hmsm(3, 0, 59, 1_000), from_hmsm(3, 0, 59, 0)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":566620,"byte_end":566693,"line_start":670,"line_end":670,"column_start":5,"column_end":78}},{"value":"/            Duration::seconds(1));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":566698,"byte_end":566735,"line_start":671,"line_end":671,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(since(from_hmsm(3, 0, 59, 1_500), from_hmsm(3, 0, 59, 0)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":566740,"byte_end":566813,"line_start":672,"line_end":672,"column_start":5,"column_end":78}},{"value":"/            Duration::milliseconds(1500));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":566818,"byte_end":566863,"line_start":673,"line_end":673,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(since(from_hmsm(3, 0, 59, 1_000), from_hmsm(3, 0, 0, 0)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":566868,"byte_end":566940,"line_start":674,"line_end":674,"column_start":5,"column_end":77}},{"value":"/            Duration::seconds(60));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":566945,"byte_end":566983,"line_start":675,"line_end":675,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(since(from_hmsm(3, 0, 0, 0), from_hmsm(2, 59, 59, 1_000)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":566988,"byte_end":567061,"line_start":676,"line_end":676,"column_start":5,"column_end":78}},{"value":"/            Duration::seconds(1));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":567066,"byte_end":567103,"line_start":677,"line_end":677,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(since(from_hmsm(3, 0, 59, 1_000), from_hmsm(2, 59, 59, 1_000)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":567108,"byte_end":567186,"line_start":678,"line_end":678,"column_start":5,"column_end":83}},{"value":"/            Duration::seconds(61));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":567191,"byte_end":567229,"line_start":679,"line_end":679,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":567234,"byte_end":567241,"line_start":680,"line_end":680,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2467},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":569926,"byte_end":569943,"line_start":748,"line_end":748,"column_start":12,"column_end":29},"name":"format_with_items","qualname":"<NaiveTime>::format_with_items","value":"fn format_with_items<'a, I, B>(&Self, I) -> DelayedFormat<I> where\nI: Iterator<Item = B> + Clone, B: Borrow<Item>","parent":null,"children":[],"decl_id":null,"docs":" Formats the time with the specified formatting items.\n Otherwise it is the same as the ordinary [`format`](#method.format) method.","sig":null,"attributes":[{"value":"/ Formats the time with the specified formatting items.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":568751,"byte_end":568808,"line_start":719,"line_end":719,"column_start":5,"column_end":62}},{"value":"/ Otherwise it is the same as the ordinary [`format`](#method.format) method.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":568813,"byte_end":568892,"line_start":720,"line_end":720,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":568897,"byte_end":568900,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ The `Iterator` of items should be `Clone`able,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":568905,"byte_end":568955,"line_start":722,"line_end":722,"column_start":5,"column_end":55}},{"value":"/ since the resulting `DelayedFormat` value may be formatted multiple times.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":568960,"byte_end":569038,"line_start":723,"line_end":723,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":569043,"byte_end":569046,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":569051,"byte_end":569064,"line_start":725,"line_end":725,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":569069,"byte_end":569072,"line_start":726,"line_end":726,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":569077,"byte_end":569084,"line_start":727,"line_end":727,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveTime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":569089,"byte_end":569115,"line_start":728,"line_end":728,"column_start":5,"column_end":31}},{"value":"/ use chrono::format::strftime::StrftimeItems;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":569120,"byte_end":569168,"line_start":729,"line_end":729,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":569173,"byte_end":569176,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ let fmt = StrftimeItems::new(\"%H:%M:%S\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":569181,"byte_end":569226,"line_start":731,"line_end":731,"column_start":5,"column_end":50}},{"value":"/ let t = NaiveTime::from_hms(23, 56, 4);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":569231,"byte_end":569274,"line_start":732,"line_end":732,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(t.format_with_items(fmt.clone()).to_string(), \"23:56:04\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":569279,"byte_end":569352,"line_start":733,"line_end":733,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(t.format(\"%H:%M:%S\").to_string(),             \"23:56:04\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":569357,"byte_end":569430,"line_start":734,"line_end":734,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":569435,"byte_end":569442,"line_start":735,"line_end":735,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":569447,"byte_end":569450,"line_start":736,"line_end":736,"column_start":5,"column_end":8}},{"value":"/ The resulting `DelayedFormat` can be formatted directly via the `Display` trait.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":569455,"byte_end":569539,"line_start":737,"line_end":737,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":569544,"byte_end":569547,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":569552,"byte_end":569559,"line_start":739,"line_end":739,"column_start":5,"column_end":12}},{"value":"/ # use chrono::NaiveTime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":569564,"byte_end":569592,"line_start":740,"line_end":740,"column_start":5,"column_end":33}},{"value":"/ # use chrono::format::strftime::StrftimeItems;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":569597,"byte_end":569647,"line_start":741,"line_end":741,"column_start":5,"column_end":55}},{"value":"/ # let fmt = StrftimeItems::new(\"%H:%M:%S\").clone();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":569652,"byte_end":569707,"line_start":742,"line_end":742,"column_start":5,"column_end":60}},{"value":"/ # let t = NaiveTime::from_hms(23, 56, 4);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":569712,"byte_end":569757,"line_start":743,"line_end":743,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(format!(\"{}\", t.format_with_items(fmt)), \"23:56:04\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":569762,"byte_end":569830,"line_start":744,"line_end":744,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":569835,"byte_end":569842,"line_start":745,"line_end":745,"column_start":5,"column_end":12}},{"value":"cfg(any(feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":569847,"byte_end":569900,"line_start":746,"line_end":746,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":569905,"byte_end":569914,"line_start":747,"line_end":747,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2471},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":571760,"byte_end":571766,"line_start":792,"line_end":792,"column_start":12,"column_end":18},"name":"format","qualname":"<NaiveTime>::format","value":"fn format<'a>(&Self, &'a str) -> DelayedFormat<StrftimeItems>","parent":null,"children":[],"decl_id":null,"docs":" Formats the time with the specified format string.\n See the [`format::strftime` module](../format/strftime/index.html)\n on the supported escape sequences.","sig":null,"attributes":[{"value":"/ Formats the time with the specified format string.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":570139,"byte_end":570193,"line_start":756,"line_end":756,"column_start":5,"column_end":59}},{"value":"/ See the [`format::strftime` module](../format/strftime/index.html)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":570198,"byte_end":570268,"line_start":757,"line_end":757,"column_start":5,"column_end":75}},{"value":"/ on the supported escape sequences.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":570273,"byte_end":570311,"line_start":758,"line_end":758,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":570316,"byte_end":570319,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ This returns a `DelayedFormat`,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":570324,"byte_end":570359,"line_start":760,"line_end":760,"column_start":5,"column_end":40}},{"value":"/ which gets converted to a string only when actual formatting happens.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":570364,"byte_end":570437,"line_start":761,"line_end":761,"column_start":5,"column_end":78}},{"value":"/ You may use the `to_string` method to get a `String`,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":570442,"byte_end":570499,"line_start":762,"line_end":762,"column_start":5,"column_end":62}},{"value":"/ or just feed it into `print!` and other formatting macros.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":570504,"byte_end":570566,"line_start":763,"line_end":763,"column_start":5,"column_end":67}},{"value":"/ (In this way it avoids the redundant memory allocation.)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":570571,"byte_end":570631,"line_start":764,"line_end":764,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":570636,"byte_end":570639,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ A wrong format string does *not* issue an error immediately.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":570644,"byte_end":570708,"line_start":766,"line_end":766,"column_start":5,"column_end":69}},{"value":"/ Rather, converting or formatting the `DelayedFormat` fails.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":570713,"byte_end":570776,"line_start":767,"line_end":767,"column_start":5,"column_end":68}},{"value":"/ You are recommended to immediately use `DelayedFormat` for this reason.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":570781,"byte_end":570856,"line_start":768,"line_end":768,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":570861,"byte_end":570864,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":570869,"byte_end":570882,"line_start":770,"line_end":770,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":570887,"byte_end":570890,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":570895,"byte_end":570902,"line_start":772,"line_end":772,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveTime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":570907,"byte_end":570933,"line_start":773,"line_end":773,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":570938,"byte_end":570941,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ let t = NaiveTime::from_hms_nano(23, 56, 4, 12_345_678);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":570946,"byte_end":571006,"line_start":775,"line_end":775,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(t.format(\"%H:%M:%S\").to_string(), \"23:56:04\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":571011,"byte_end":571072,"line_start":776,"line_end":776,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(t.format(\"%H:%M:%S%.6f\").to_string(), \"23:56:04.012345\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":571077,"byte_end":571149,"line_start":777,"line_end":777,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(t.format(\"%-I:%M %p\").to_string(), \"11:56 PM\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":571154,"byte_end":571216,"line_start":778,"line_end":778,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":571221,"byte_end":571228,"line_start":779,"line_end":779,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":571233,"byte_end":571236,"line_start":780,"line_end":780,"column_start":5,"column_end":8}},{"value":"/ The resulting `DelayedFormat` can be formatted directly via the `Display` trait.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":571241,"byte_end":571325,"line_start":781,"line_end":781,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":571330,"byte_end":571333,"line_start":782,"line_end":782,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":571338,"byte_end":571345,"line_start":783,"line_end":783,"column_start":5,"column_end":12}},{"value":"/ # use chrono::NaiveTime;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":571350,"byte_end":571378,"line_start":784,"line_end":784,"column_start":5,"column_end":33}},{"value":"/ # let t = NaiveTime::from_hms_nano(23, 56, 4, 12_345_678);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":571383,"byte_end":571445,"line_start":785,"line_end":785,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(format!(\"{}\", t.format(\"%H:%M:%S\")), \"23:56:04\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":571450,"byte_end":571514,"line_start":786,"line_end":786,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(format!(\"{}\", t.format(\"%H:%M:%S%.6f\")), \"23:56:04.012345\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":571519,"byte_end":571594,"line_start":787,"line_end":787,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(format!(\"{}\", t.format(\"%-I:%M %p\")), \"11:56 PM\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":571599,"byte_end":571664,"line_start":788,"line_end":788,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":571669,"byte_end":571676,"line_start":789,"line_end":789,"column_start":5,"column_end":12}},{"value":"cfg(any(feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":571681,"byte_end":571734,"line_start":790,"line_end":790,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":571739,"byte_end":571748,"line_start":791,"line_end":791,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2477},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":572638,"byte_end":572642,"line_start":819,"line_end":819,"column_start":8,"column_end":12},"name":"hour","qualname":"<NaiveTime as traits::Timelike>::hour","value":"fn hour(&Self) -> u32","parent":{"krate":0,"index":3430},"children":[],"decl_id":{"krate":0,"index":3431},"docs":" Returns the hour number from 0 to 23.","sig":null,"attributes":[{"value":"/ Returns the hour number from 0 to 23.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":572326,"byte_end":572367,"line_start":808,"line_end":808,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":572372,"byte_end":572375,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":572380,"byte_end":572393,"line_start":810,"line_end":810,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":572398,"byte_end":572401,"line_start":811,"line_end":811,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":572406,"byte_end":572413,"line_start":812,"line_end":812,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveTime, Timelike};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":572418,"byte_end":572456,"line_start":813,"line_end":813,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":572461,"byte_end":572464,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveTime::from_hms(0, 0, 0).hour(), 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":572469,"byte_end":572524,"line_start":815,"line_end":815,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(NaiveTime::from_hms_nano(23, 56, 4, 12_345_678).hour(), 23);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":572529,"byte_end":572604,"line_start":816,"line_end":816,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":572609,"byte_end":572616,"line_start":817,"line_end":817,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":572621,"byte_end":572630,"line_start":818,"line_end":818,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2478},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":573009,"byte_end":573015,"line_start":834,"line_end":834,"column_start":8,"column_end":14},"name":"minute","qualname":"<NaiveTime as traits::Timelike>::minute","value":"fn minute(&Self) -> u32","parent":{"krate":0,"index":3430},"children":[],"decl_id":{"krate":0,"index":3433},"docs":" Returns the minute number from 0 to 59.","sig":null,"attributes":[{"value":"/ Returns the minute number from 0 to 59.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":572691,"byte_end":572734,"line_start":823,"line_end":823,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":572739,"byte_end":572742,"line_start":824,"line_end":824,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":572747,"byte_end":572760,"line_start":825,"line_end":825,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":572765,"byte_end":572768,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":572773,"byte_end":572780,"line_start":827,"line_end":827,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveTime, Timelike};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":572785,"byte_end":572823,"line_start":828,"line_end":828,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":572828,"byte_end":572831,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveTime::from_hms(0, 0, 0).minute(), 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":572836,"byte_end":572893,"line_start":830,"line_end":830,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(NaiveTime::from_hms_nano(23, 56, 4, 12_345_678).minute(), 56);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":572898,"byte_end":572975,"line_start":831,"line_end":831,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":572980,"byte_end":572987,"line_start":832,"line_end":832,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":572992,"byte_end":573001,"line_start":833,"line_end":833,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2479},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":573846,"byte_end":573852,"line_start":860,"line_end":860,"column_start":8,"column_end":14},"name":"second","qualname":"<NaiveTime as traits::Timelike>::second","value":"fn second(&Self) -> u32","parent":{"krate":0,"index":3430},"children":[],"decl_id":{"krate":0,"index":3434},"docs":" Returns the second number from 0 to 59.","sig":null,"attributes":[{"value":"/ Returns the second number from 0 to 59.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":573064,"byte_end":573107,"line_start":838,"line_end":838,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":573112,"byte_end":573115,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":573120,"byte_end":573133,"line_start":840,"line_end":840,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":573138,"byte_end":573141,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":573146,"byte_end":573153,"line_start":842,"line_end":842,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveTime, Timelike};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":573158,"byte_end":573196,"line_start":843,"line_end":843,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":573201,"byte_end":573204,"line_start":844,"line_end":844,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveTime::from_hms(0, 0, 0).second(), 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":573209,"byte_end":573266,"line_start":845,"line_end":845,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(NaiveTime::from_hms_nano(23, 56, 4, 12_345_678).second(), 4);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":573271,"byte_end":573347,"line_start":846,"line_end":846,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":573352,"byte_end":573359,"line_start":847,"line_end":847,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":573364,"byte_end":573367,"line_start":848,"line_end":848,"column_start":5,"column_end":8}},{"value":"/ This method never returns 60 even when it is a leap second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":573372,"byte_end":573435,"line_start":849,"line_end":849,"column_start":5,"column_end":68}},{"value":"/ ([Why?](#leap-second-handling))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":573440,"byte_end":573475,"line_start":850,"line_end":850,"column_start":5,"column_end":40}},{"value":"/ Use the proper [formatting method](#method.format) to get a human-readable representation.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":573480,"byte_end":573574,"line_start":851,"line_end":851,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":573579,"byte_end":573582,"line_start":852,"line_end":852,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":573587,"byte_end":573594,"line_start":853,"line_end":853,"column_start":5,"column_end":12}},{"value":"/ # use chrono::{NaiveTime, Timelike};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":573599,"byte_end":573639,"line_start":854,"line_end":854,"column_start":5,"column_end":45}},{"value":"/ let leap = NaiveTime::from_hms_milli(23, 59, 59, 1_000);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":573644,"byte_end":573704,"line_start":855,"line_end":855,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(leap.second(), 59);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":573709,"byte_end":573743,"line_start":856,"line_end":856,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(leap.format(\"%H:%M:%S\").to_string(), \"23:59:60\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":573748,"byte_end":573812,"line_start":857,"line_end":857,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":573817,"byte_end":573824,"line_start":858,"line_end":858,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":573829,"byte_end":573838,"line_start":859,"line_end":859,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2480},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":574909,"byte_end":574919,"line_start":888,"line_end":888,"column_start":8,"column_end":18},"name":"nanosecond","qualname":"<NaiveTime as traits::Timelike>::nanosecond","value":"fn nanosecond(&Self) -> u32","parent":{"krate":0,"index":3430},"children":[],"decl_id":{"krate":0,"index":3435},"docs":" Returns the number of nanoseconds since the whole non-leap second.\n The range from 1,000,000,000 to 1,999,999,999 represents\n the [leap second](#leap-second-handling).","sig":null,"attributes":[{"value":"/ Returns the number of nanoseconds since the whole non-leap second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":573901,"byte_end":573971,"line_start":864,"line_end":864,"column_start":5,"column_end":75}},{"value":"/ The range from 1,000,000,000 to 1,999,999,999 represents","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":573976,"byte_end":574036,"line_start":865,"line_end":865,"column_start":5,"column_end":65}},{"value":"/ the [leap second](#leap-second-handling).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":574041,"byte_end":574086,"line_start":866,"line_end":866,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":574091,"byte_end":574094,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":574099,"byte_end":574112,"line_start":868,"line_end":868,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":574117,"byte_end":574120,"line_start":869,"line_end":869,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":574125,"byte_end":574132,"line_start":870,"line_end":870,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveTime, Timelike};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":574137,"byte_end":574175,"line_start":871,"line_end":871,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":574180,"byte_end":574183,"line_start":872,"line_end":872,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveTime::from_hms(0, 0, 0).nanosecond(), 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":574188,"byte_end":574249,"line_start":873,"line_end":873,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(NaiveTime::from_hms_nano(23, 56, 4, 12_345_678).nanosecond(), 12_345_678);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":574254,"byte_end":574343,"line_start":874,"line_end":874,"column_start":5,"column_end":94}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":574348,"byte_end":574355,"line_start":875,"line_end":875,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":574360,"byte_end":574363,"line_start":876,"line_end":876,"column_start":5,"column_end":8}},{"value":"/ Leap seconds may have seemingly out-of-range return values.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":574368,"byte_end":574431,"line_start":877,"line_end":877,"column_start":5,"column_end":68}},{"value":"/ You can reduce the range with `time.nanosecond() % 1_000_000_000`, or","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":574436,"byte_end":574509,"line_start":878,"line_end":878,"column_start":5,"column_end":78}},{"value":"/ use the proper [formatting method](#method.format) to get a human-readable representation.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":574514,"byte_end":574608,"line_start":879,"line_end":879,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":574613,"byte_end":574616,"line_start":880,"line_end":880,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":574621,"byte_end":574628,"line_start":881,"line_end":881,"column_start":5,"column_end":12}},{"value":"/ # use chrono::{NaiveTime, Timelike};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":574633,"byte_end":574673,"line_start":882,"line_end":882,"column_start":5,"column_end":45}},{"value":"/ let leap = NaiveTime::from_hms_milli(23, 59, 59, 1_000);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":574678,"byte_end":574738,"line_start":883,"line_end":883,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(leap.nanosecond(), 1_000_000_000);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":574743,"byte_end":574792,"line_start":884,"line_end":884,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(leap.format(\"%H:%M:%S%.9f\").to_string(), \"23:59:60.000000000\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":574797,"byte_end":574875,"line_start":885,"line_end":885,"column_start":5,"column_end":83}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":574880,"byte_end":574887,"line_start":886,"line_end":886,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":574892,"byte_end":574901,"line_start":887,"line_end":887,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2481},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":575434,"byte_end":575443,"line_start":906,"line_end":906,"column_start":8,"column_end":17},"name":"with_hour","qualname":"<NaiveTime as traits::Timelike>::with_hour","value":"fn with_hour(&Self, u32) -> Option<NaiveTime>","parent":{"krate":0,"index":3430},"children":[],"decl_id":{"krate":0,"index":3436},"docs":" Makes a new `NaiveTime` with the hour number changed.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveTime` with the hour number changed.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":574965,"byte_end":575022,"line_start":892,"line_end":892,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":575027,"byte_end":575030,"line_start":893,"line_end":893,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting `NaiveTime` would be invalid.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":575035,"byte_end":575102,"line_start":894,"line_end":894,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":575107,"byte_end":575110,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":575115,"byte_end":575128,"line_start":896,"line_end":896,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":575133,"byte_end":575136,"line_start":897,"line_end":897,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":575141,"byte_end":575148,"line_start":898,"line_end":898,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveTime, Timelike};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":575153,"byte_end":575191,"line_start":899,"line_end":899,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":575196,"byte_end":575199,"line_start":900,"line_end":900,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveTime::from_hms_nano(23, 56, 4, 12_345_678);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":575204,"byte_end":575265,"line_start":901,"line_end":901,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(dt.with_hour(7), Some(NaiveTime::from_hms_nano(7, 56, 4, 12_345_678)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":575270,"byte_end":575356,"line_start":902,"line_end":902,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(dt.with_hour(24), None);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":575361,"byte_end":575400,"line_start":903,"line_end":903,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":575405,"byte_end":575412,"line_start":904,"line_end":904,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":575417,"byte_end":575426,"line_start":905,"line_end":905,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2482},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":576125,"byte_end":576136,"line_start":928,"line_end":928,"column_start":8,"column_end":19},"name":"with_minute","qualname":"<NaiveTime as traits::Timelike>::with_minute","value":"fn with_minute(&Self, u32) -> Option<NaiveTime>","parent":{"krate":0,"index":3430},"children":[],"decl_id":{"krate":0,"index":3437},"docs":" Makes a new `NaiveTime` with the minute number changed.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveTime` with the minute number changed.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":575648,"byte_end":575707,"line_start":914,"line_end":914,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":575712,"byte_end":575715,"line_start":915,"line_end":915,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting `NaiveTime` would be invalid.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":575720,"byte_end":575787,"line_start":916,"line_end":916,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":575792,"byte_end":575795,"line_start":917,"line_end":917,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":575800,"byte_end":575813,"line_start":918,"line_end":918,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":575818,"byte_end":575821,"line_start":919,"line_end":919,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":575826,"byte_end":575833,"line_start":920,"line_end":920,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveTime, Timelike};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":575838,"byte_end":575876,"line_start":921,"line_end":921,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":575881,"byte_end":575884,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveTime::from_hms_nano(23, 56, 4, 12_345_678);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":575889,"byte_end":575950,"line_start":923,"line_end":923,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(dt.with_minute(45), Some(NaiveTime::from_hms_nano(23, 45, 4, 12_345_678)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":575955,"byte_end":576045,"line_start":924,"line_end":924,"column_start":5,"column_end":95}},{"value":"/ assert_eq!(dt.with_minute(60), None);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":576050,"byte_end":576091,"line_start":925,"line_end":925,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":576096,"byte_end":576103,"line_start":926,"line_end":926,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":576108,"byte_end":576117,"line_start":927,"line_end":927,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2483},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":576948,"byte_end":576959,"line_start":952,"line_end":952,"column_start":8,"column_end":19},"name":"with_second","qualname":"<NaiveTime as traits::Timelike>::with_second","value":"fn with_second(&Self, u32) -> Option<NaiveTime>","parent":{"krate":0,"index":3430},"children":[],"decl_id":{"krate":0,"index":3438},"docs":" Makes a new `NaiveTime` with the second number changed.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveTime` with the second number changed.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":576360,"byte_end":576419,"line_start":936,"line_end":936,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":576424,"byte_end":576427,"line_start":937,"line_end":937,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting `NaiveTime` would be invalid.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":576432,"byte_end":576499,"line_start":938,"line_end":938,"column_start":5,"column_end":72}},{"value":"/ As with the [`second`](#method.second) method,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":576504,"byte_end":576554,"line_start":939,"line_end":939,"column_start":5,"column_end":55}},{"value":"/ the input range is restricted to 0 through 59.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":576559,"byte_end":576609,"line_start":940,"line_end":940,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":576614,"byte_end":576617,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":576622,"byte_end":576635,"line_start":942,"line_end":942,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":576640,"byte_end":576643,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":576648,"byte_end":576655,"line_start":944,"line_end":944,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveTime, Timelike};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":576660,"byte_end":576698,"line_start":945,"line_end":945,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":576703,"byte_end":576706,"line_start":946,"line_end":946,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveTime::from_hms_nano(23, 56, 4, 12_345_678);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":576711,"byte_end":576772,"line_start":947,"line_end":947,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(dt.with_second(17), Some(NaiveTime::from_hms_nano(23, 56, 17, 12_345_678)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":576777,"byte_end":576868,"line_start":948,"line_end":948,"column_start":5,"column_end":96}},{"value":"/ assert_eq!(dt.with_second(60), None);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":576873,"byte_end":576914,"line_start":949,"line_end":949,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":576919,"byte_end":576926,"line_start":950,"line_end":950,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":576931,"byte_end":576940,"line_start":951,"line_end":951,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2484},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":578402,"byte_end":578417,"line_start":989,"line_end":989,"column_start":8,"column_end":23},"name":"with_nanosecond","qualname":"<NaiveTime as traits::Timelike>::with_nanosecond","value":"fn with_nanosecond(&Self, u32) -> Option<NaiveTime>","parent":{"krate":0,"index":3430},"children":[],"decl_id":{"krate":0,"index":3439},"docs":" Makes a new `NaiveTime` with nanoseconds since the whole non-leap second changed.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveTime` with nanoseconds since the whole non-leap second changed.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":577157,"byte_end":577242,"line_start":960,"line_end":960,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":577247,"byte_end":577250,"line_start":961,"line_end":961,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting `NaiveTime` would be invalid.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":577255,"byte_end":577322,"line_start":962,"line_end":962,"column_start":5,"column_end":72}},{"value":"/ As with the [`nanosecond`](#method.nanosecond) method,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":577327,"byte_end":577385,"line_start":963,"line_end":963,"column_start":5,"column_end":63}},{"value":"/ the input range can exceed 1,000,000,000 for leap seconds.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":577390,"byte_end":577452,"line_start":964,"line_end":964,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":577457,"byte_end":577460,"line_start":965,"line_end":965,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":577465,"byte_end":577478,"line_start":966,"line_end":966,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":577483,"byte_end":577486,"line_start":967,"line_end":967,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":577491,"byte_end":577498,"line_start":968,"line_end":968,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveTime, Timelike};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":577503,"byte_end":577541,"line_start":969,"line_end":969,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":577546,"byte_end":577549,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveTime::from_hms_nano(23, 56, 4, 12_345_678);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":577554,"byte_end":577615,"line_start":971,"line_end":971,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(dt.with_nanosecond(333_333_333),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":577620,"byte_end":577667,"line_start":972,"line_end":972,"column_start":5,"column_end":52}},{"value":"/            Some(NaiveTime::from_hms_nano(23, 56, 4, 333_333_333)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":577672,"byte_end":577743,"line_start":973,"line_end":973,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(dt.with_nanosecond(2_000_000_000), None);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":577748,"byte_end":577804,"line_start":974,"line_end":974,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":577809,"byte_end":577816,"line_start":975,"line_end":975,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":577821,"byte_end":577824,"line_start":976,"line_end":976,"column_start":5,"column_end":8}},{"value":"/ Leap seconds can theoretically follow *any* whole second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":577829,"byte_end":577890,"line_start":977,"line_end":977,"column_start":5,"column_end":66}},{"value":"/ The following would be a proper leap second at the time zone offset of UTC-00:03:57","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":577895,"byte_end":577982,"line_start":978,"line_end":978,"column_start":5,"column_end":92}},{"value":"/ (there are several historical examples comparable to this \"non-sense\" offset),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":577987,"byte_end":578069,"line_start":979,"line_end":979,"column_start":5,"column_end":87}},{"value":"/ and therefore is allowed.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":578074,"byte_end":578103,"line_start":980,"line_end":980,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":578108,"byte_end":578111,"line_start":981,"line_end":981,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":578116,"byte_end":578123,"line_start":982,"line_end":982,"column_start":5,"column_end":12}},{"value":"/ # use chrono::{NaiveTime, Timelike};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":578128,"byte_end":578168,"line_start":983,"line_end":983,"column_start":5,"column_end":45}},{"value":"/ # let dt = NaiveTime::from_hms_nano(23, 56, 4, 12_345_678);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":578173,"byte_end":578236,"line_start":984,"line_end":984,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(dt.with_nanosecond(1_333_333_333),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":578241,"byte_end":578290,"line_start":985,"line_end":985,"column_start":5,"column_end":54}},{"value":"/            Some(NaiveTime::from_hms_nano(23, 56, 4, 1_333_333_333)));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":578295,"byte_end":578368,"line_start":986,"line_end":986,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":578373,"byte_end":578380,"line_start":987,"line_end":987,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":578385,"byte_end":578394,"line_start":988,"line_end":988,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2485},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":579131,"byte_end":579156,"line_start":1011,"line_end":1011,"column_start":8,"column_end":33},"name":"num_seconds_from_midnight","qualname":"<NaiveTime as traits::Timelike>::num_seconds_from_midnight","value":"fn num_seconds_from_midnight(&Self) -> u32","parent":{"krate":0,"index":3430},"children":[],"decl_id":{"krate":0,"index":3440},"docs":" Returns the number of non-leap seconds past the last midnight.","sig":null,"attributes":[{"value":"/ Returns the number of non-leap seconds past the last midnight.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":578588,"byte_end":578654,"line_start":996,"line_end":996,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":578659,"byte_end":578662,"line_start":997,"line_end":997,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":578667,"byte_end":578680,"line_start":998,"line_end":998,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":578685,"byte_end":578688,"line_start":999,"line_end":999,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":578693,"byte_end":578700,"line_start":1000,"line_end":1000,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveTime, Timelike};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":578705,"byte_end":578743,"line_start":1001,"line_end":1001,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":578748,"byte_end":578751,"line_start":1002,"line_end":1002,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveTime::from_hms(1, 2, 3).num_seconds_from_midnight(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":578756,"byte_end":578828,"line_start":1003,"line_end":1003,"column_start":5,"column_end":77}},{"value":"/            3723);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":578833,"byte_end":578854,"line_start":1004,"line_end":1004,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(NaiveTime::from_hms_nano(23, 56, 4, 12_345_678).num_seconds_from_midnight(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":578859,"byte_end":578950,"line_start":1005,"line_end":1005,"column_start":5,"column_end":96}},{"value":"/            86164);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":578955,"byte_end":578977,"line_start":1006,"line_end":1006,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(NaiveTime::from_hms_milli(23, 59, 59, 1_000).num_seconds_from_midnight(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":578982,"byte_end":579070,"line_start":1007,"line_end":1007,"column_start":5,"column_end":93}},{"value":"/            86399);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":579075,"byte_end":579097,"line_start":1008,"line_end":1008,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":579102,"byte_end":579109,"line_start":1009,"line_end":1009,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":579114,"byte_end":579123,"line_start":1010,"line_end":1010,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2488},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":581933,"byte_end":581936,"line_start":1069,"line_end":1069,"column_start":8,"column_end":11},"name":"add","qualname":"<NaiveTime as std::ops::Add>::add","value":"fn add(Self, OldDuration) -> NaiveTime","parent":{"krate":2,"index":3247},"children":[],"decl_id":{"krate":2,"index":3250},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":581916,"byte_end":581925,"line_start":1068,"line_end":1068,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2490},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":582093,"byte_end":582103,"line_start":1076,"line_end":1076,"column_start":8,"column_end":18},"name":"add_assign","qualname":"<NaiveTime as std::ops::AddAssign>::add_assign","value":"fn add_assign(&mut Self, OldDuration)","parent":{"krate":2,"index":3278},"children":[],"decl_id":{"krate":2,"index":3280},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":582076,"byte_end":582085,"line_start":1075,"line_end":1075,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2493},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":584491,"byte_end":584494,"line_start":1130,"line_end":1130,"column_start":8,"column_end":11},"name":"sub","qualname":"<NaiveTime as std::ops::Sub>::sub","value":"fn sub(Self, OldDuration) -> NaiveTime","parent":{"krate":2,"index":3252},"children":[],"decl_id":{"krate":2,"index":3255},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":584474,"byte_end":584483,"line_start":1129,"line_end":1129,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2495},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":584651,"byte_end":584661,"line_start":1137,"line_end":1137,"column_start":8,"column_end":18},"name":"sub_assign","qualname":"<NaiveTime as std::ops::SubAssign>::sub_assign","value":"fn sub_assign(&mut Self, OldDuration)","parent":{"krate":2,"index":3282},"children":[],"decl_id":{"krate":2,"index":3284},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":584634,"byte_end":584643,"line_start":1136,"line_end":1136,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2498},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":587065,"byte_end":587068,"line_start":1191,"line_end":1191,"column_start":8,"column_end":11},"name":"sub","qualname":"<NaiveTime as std::ops::Sub>::sub","value":"fn sub(Self, NaiveTime) -> OldDuration","parent":{"krate":2,"index":3252},"children":[],"decl_id":{"krate":2,"index":3255},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":587048,"byte_end":587057,"line_start":1190,"line_end":1190,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2500},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":588412,"byte_end":588415,"line_start":1225,"line_end":1225,"column_start":8,"column_end":11},"name":"fmt","qualname":"<NaiveTime as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2502},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":590270,"byte_end":590273,"line_start":1275,"line_end":1275,"column_start":8,"column_end":11},"name":"fmt","qualname":"<NaiveTime as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10117},"children":[],"decl_id":{"krate":2,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2505},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":591077,"byte_end":591085,"line_start":1302,"line_end":1302,"column_start":8,"column_end":16},"name":"from_str","qualname":"<NaiveTime as std::str::FromStr>::from_str","value":"fn from_str(&str) -> ParseResult<NaiveTime>","parent":{"krate":2,"index":12767},"children":[],"decl_id":{"krate":2,"index":12769},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2508},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":591945,"byte_end":591952,"line_start":1332,"line_end":1332,"column_start":8,"column_end":15},"name":"default","qualname":"<NaiveTime as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2538},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/mod.rs","byte_start":299219,"byte_end":299224,"line_start":36,"line_end":36,"column_start":9,"column_end":14},"name":"serde","qualname":"::naive::serde","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/mod.rs","parent":null,"children":[{"krate":0,"index":2539}],"decl_id":null,"docs":" Serialization/Deserialization of naive types in alternate formats","sig":null,"attributes":[{"value":"/ Serialization/Deserialization of naive types in alternate formats","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/mod.rs","byte_start":298832,"byte_end":298901,"line_start":27,"line_end":27,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/mod.rs","byte_start":298902,"byte_end":298905,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The various modules in here are intended to be used with serde's [`with`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/mod.rs","byte_start":298906,"byte_end":298982,"line_start":29,"line_end":29,"column_start":1,"column_end":77}},{"value":"/ annotation][1] to serialize as something other than the default [RFC","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/mod.rs","byte_start":298983,"byte_end":299055,"line_start":30,"line_end":30,"column_start":1,"column_end":73}},{"value":"/ 3339][2] format.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/mod.rs","byte_start":299056,"byte_end":299076,"line_start":31,"line_end":31,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/mod.rs","byte_start":299077,"byte_end":299080,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [1]: https://serde.rs/attributes.html#field-attributes","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/mod.rs","byte_start":299081,"byte_end":299139,"line_start":33,"line_end":33,"column_start":1,"column_end":59}},{"value":"/ [2]: https://tools.ietf.org/html/rfc3339","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/mod.rs","byte_start":299140,"byte_end":299184,"line_start":34,"line_end":34,"column_start":1,"column_end":45}},{"value":"cfg(feature = \"serde\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/mod.rs","byte_start":299185,"byte_end":299210,"line_start":35,"line_end":35,"column_start":1,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":2556},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"offset","qualname":"::offset","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","parent":null,"children":[{"krate":0,"index":2557},{"krate":0,"index":2560},{"krate":0,"index":2561},{"krate":0,"index":2564},{"krate":0,"index":2567},{"krate":0,"index":2570},{"krate":0,"index":2573},{"krate":0,"index":2574},{"krate":0,"index":2577},{"krate":0,"index":2580},{"krate":0,"index":2583},{"krate":0,"index":2586},{"krate":0,"index":2587},{"krate":0,"index":2590},{"krate":0,"index":2593},{"krate":0,"index":2678},{"krate":0,"index":2681},{"krate":0,"index":3092},{"krate":0,"index":3093},{"krate":0,"index":3095},{"krate":0,"index":3149},{"krate":0,"index":3150},{"krate":0,"index":4298},{"krate":0,"index":4309},{"krate":0,"index":4312},{"krate":0,"index":4314},{"krate":0,"index":4318},{"krate":0,"index":4321},{"krate":0,"index":4323},{"krate":0,"index":4325},{"krate":0,"index":4328},{"krate":0,"index":3152},{"krate":0,"index":3160},{"krate":0,"index":3167},{"krate":0,"index":3170},{"krate":0,"index":3172}],"decl_id":null,"docs":" The time zone, which calculates offsets from the local time to UTC.","sig":null,"attributes":[{"value":"/ The time zone, which calculates offsets from the local time to UTC.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":596922,"byte_end":596993,"line_start":4,"line_end":4,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":596994,"byte_end":596997,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ There are four operations provided by the `TimeZone` trait:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":596998,"byte_end":597061,"line_start":6,"line_end":6,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":597062,"byte_end":597065,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ 1. Converting the local `NaiveDateTime` to `DateTime<Tz>`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":597066,"byte_end":597127,"line_start":8,"line_end":8,"column_start":1,"column_end":62}},{"value":"/ 2. Converting the UTC `NaiveDateTime` to `DateTime<Tz>`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":597128,"byte_end":597187,"line_start":9,"line_end":9,"column_start":1,"column_end":60}},{"value":"/ 3. Converting `DateTime<Tz>` to the local `NaiveDateTime`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":597188,"byte_end":597249,"line_start":10,"line_end":10,"column_start":1,"column_end":62}},{"value":"/ 4. Constructing `DateTime<Tz>` objects from various offsets","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":597250,"byte_end":597313,"line_start":11,"line_end":11,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":597314,"byte_end":597317,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ 1 is used for constructors. 2 is used for the `with_timezone` method of date and time types.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":597318,"byte_end":597414,"line_start":13,"line_end":13,"column_start":1,"column_end":97}},{"value":"/ 3 is used for other methods, e.g. `year()` or `format()`, and provided by an associated type","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":597415,"byte_end":597511,"line_start":14,"line_end":14,"column_start":1,"column_end":97}},{"value":"/ which implements `Offset` (which then passed to `TimeZone` for actual implementations).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":597512,"byte_end":597603,"line_start":15,"line_end":15,"column_start":1,"column_end":92}},{"value":"/ Technically speaking `TimeZone` has a total knowledge about given timescale,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":597604,"byte_end":597684,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ but `Offset` is used as a cache to avoid the repeated conversion","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":597685,"byte_end":597753,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"/ and provides implementations for 1 and 3.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":597754,"byte_end":597799,"line_start":18,"line_end":18,"column_start":1,"column_end":46}},{"value":"/ An `TimeZone` instance can be reconstructed from the corresponding `Offset` instance.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":597800,"byte_end":597889,"line_start":19,"line_end":19,"column_start":1,"column_end":90}}]},{"kind":"Struct","id":{"krate":0,"index":3977},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":618713,"byte_end":618724,"line_start":27,"line_end":27,"column_start":12,"column_end":23},"name":"FixedOffset","qualname":"::offset::fixed::FixedOffset","value":"FixedOffset {  }","parent":null,"children":[{"krate":0,"index":3978}],"decl_id":null,"docs":" The time zone with fixed offset, from UTC-23:59:59 to UTC+23:59:59.","sig":null,"attributes":[{"value":"/ The time zone with fixed offset, from UTC-23:59:59 to UTC+23:59:59.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":618266,"byte_end":618337,"line_start":19,"line_end":19,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":618338,"byte_end":618341,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Using the [`TimeZone`](./trait.TimeZone.html) methods","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":618342,"byte_end":618399,"line_start":21,"line_end":21,"column_start":1,"column_end":58}},{"value":"/ on a `FixedOffset` struct is the preferred way to construct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":618400,"byte_end":618463,"line_start":22,"line_end":22,"column_start":1,"column_end":64}},{"value":"/ `DateTime<FixedOffset>` instances. See the [`east`](#method.east) and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":618464,"byte_end":618537,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"/ [`west`](#method.west) methods for examples.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":618538,"byte_end":618586,"line_start":24,"line_end":24,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2637},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":619326,"byte_end":619330,"line_start":46,"line_end":46,"column_start":12,"column_end":16},"name":"east","qualname":"<FixedOffset>::east","value":"fn east(i32) -> FixedOffset","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `FixedOffset` for the Eastern Hemisphere with given timezone difference.\n The negative `secs` means the Western Hemisphere.","sig":null,"attributes":[{"value":"/ Makes a new `FixedOffset` for the Eastern Hemisphere with given timezone difference.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":618779,"byte_end":618867,"line_start":32,"line_end":32,"column_start":5,"column_end":93}},{"value":"/ The negative `secs` means the Western Hemisphere.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":618872,"byte_end":618925,"line_start":33,"line_end":33,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":618930,"byte_end":618933,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ Panics on the out-of-bound `secs`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":618938,"byte_end":618976,"line_start":35,"line_end":35,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":618981,"byte_end":618984,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":618989,"byte_end":619002,"line_start":37,"line_end":37,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":619007,"byte_end":619010,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":619015,"byte_end":619022,"line_start":39,"line_end":39,"column_start":5,"column_end":12}},{"value":"/ use chrono::{FixedOffset, TimeZone};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":619027,"byte_end":619067,"line_start":40,"line_end":40,"column_start":5,"column_end":45}},{"value":"/ let hour = 3600;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":619072,"byte_end":619092,"line_start":41,"line_end":41,"column_start":5,"column_end":25}},{"value":"/ let datetime = FixedOffset::east(5 * hour).ymd(2016, 11, 08)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":619097,"byte_end":619161,"line_start":42,"line_end":42,"column_start":5,"column_end":69}},{"value":"/                                           .and_hms(0, 0, 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":619166,"byte_end":619230,"line_start":43,"line_end":43,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(&datetime.to_rfc3339(), \"2016-11-08T00:00:00+05:00\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":619235,"byte_end":619302,"line_start":44,"line_end":44,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":619307,"byte_end":619314,"line_start":45,"line_end":45,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2638},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":619665,"byte_end":619673,"line_start":54,"line_end":54,"column_start":12,"column_end":20},"name":"east_opt","qualname":"<FixedOffset>::east_opt","value":"fn east_opt(i32) -> Option<FixedOffset>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `FixedOffset` for the Eastern Hemisphere with given timezone difference.\n The negative `secs` means the Western Hemisphere.","sig":null,"attributes":[{"value":"/ Makes a new `FixedOffset` for the Eastern Hemisphere with given timezone difference.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":619448,"byte_end":619536,"line_start":50,"line_end":50,"column_start":5,"column_end":93}},{"value":"/ The negative `secs` means the Western Hemisphere.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":619541,"byte_end":619594,"line_start":51,"line_end":51,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":619599,"byte_end":619602,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on the out-of-bound `secs`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":619607,"byte_end":619653,"line_start":53,"line_end":53,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2639},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":620413,"byte_end":620417,"line_start":76,"line_end":76,"column_start":12,"column_end":16},"name":"west","qualname":"<FixedOffset>::west","value":"fn west(i32) -> FixedOffset","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `FixedOffset` for the Western Hemisphere with given timezone difference.\n The negative `secs` means the Eastern Hemisphere.","sig":null,"attributes":[{"value":"/ Makes a new `FixedOffset` for the Western Hemisphere with given timezone difference.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":619866,"byte_end":619954,"line_start":62,"line_end":62,"column_start":5,"column_end":93}},{"value":"/ The negative `secs` means the Eastern Hemisphere.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":619959,"byte_end":620012,"line_start":63,"line_end":63,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":620017,"byte_end":620020,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Panics on the out-of-bound `secs`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":620025,"byte_end":620063,"line_start":65,"line_end":65,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":620068,"byte_end":620071,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":620076,"byte_end":620089,"line_start":67,"line_end":67,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":620094,"byte_end":620097,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":620102,"byte_end":620109,"line_start":69,"line_end":69,"column_start":5,"column_end":12}},{"value":"/ use chrono::{FixedOffset, TimeZone};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":620114,"byte_end":620154,"line_start":70,"line_end":70,"column_start":5,"column_end":45}},{"value":"/ let hour = 3600;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":620159,"byte_end":620179,"line_start":71,"line_end":71,"column_start":5,"column_end":25}},{"value":"/ let datetime = FixedOffset::west(5 * hour).ymd(2016, 11, 08)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":620184,"byte_end":620248,"line_start":72,"line_end":72,"column_start":5,"column_end":69}},{"value":"/                                           .and_hms(0, 0, 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":620253,"byte_end":620317,"line_start":73,"line_end":73,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(&datetime.to_rfc3339(), \"2016-11-08T00:00:00-05:00\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":620322,"byte_end":620389,"line_start":74,"line_end":74,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":620394,"byte_end":620401,"line_start":75,"line_end":75,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2640},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":620752,"byte_end":620760,"line_start":84,"line_end":84,"column_start":12,"column_end":20},"name":"west_opt","qualname":"<FixedOffset>::west_opt","value":"fn west_opt(i32) -> Option<FixedOffset>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `FixedOffset` for the Western Hemisphere with given timezone difference.\n The negative `secs` means the Eastern Hemisphere.","sig":null,"attributes":[{"value":"/ Makes a new `FixedOffset` for the Western Hemisphere with given timezone difference.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":620535,"byte_end":620623,"line_start":80,"line_end":80,"column_start":5,"column_end":93}},{"value":"/ The negative `secs` means the Eastern Hemisphere.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":620628,"byte_end":620681,"line_start":81,"line_end":81,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":620686,"byte_end":620689,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on the out-of-bound `secs`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":620694,"byte_end":620740,"line_start":83,"line_end":83,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2641},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":621059,"byte_end":621074,"line_start":94,"line_end":94,"column_start":12,"column_end":27},"name":"local_minus_utc","qualname":"<FixedOffset>::local_minus_utc","value":"fn local_minus_utc(&Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of seconds to add to convert from UTC to the local time.\n","sig":null,"attributes":[{"value":"/ Returns the number of seconds to add to convert from UTC to the local time.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":620954,"byte_end":621033,"line_start":92,"line_end":92,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":621038,"byte_end":621047,"line_start":93,"line_end":93,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2642},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":621236,"byte_end":621251,"line_start":100,"line_end":100,"column_start":12,"column_end":27},"name":"utc_minus_local","qualname":"<FixedOffset>::utc_minus_local","value":"fn utc_minus_local(&Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of seconds to add to convert from the local time to UTC.\n","sig":null,"attributes":[{"value":"/ Returns the number of seconds to add to convert from the local time to UTC.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":621131,"byte_end":621210,"line_start":98,"line_end":98,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":621215,"byte_end":621224,"line_start":99,"line_end":99,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2645},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":621378,"byte_end":621389,"line_start":108,"line_end":108,"column_start":8,"column_end":19},"name":"from_offset","qualname":"<FixedOffset as offset::TimeZone>::from_offset","value":"fn from_offset(&FixedOffset) -> FixedOffset","parent":{"krate":0,"index":3172},"children":[],"decl_id":{"krate":0,"index":3186},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2646},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":621459,"byte_end":621481,"line_start":112,"line_end":112,"column_start":8,"column_end":30},"name":"offset_from_local_date","qualname":"<FixedOffset as offset::TimeZone>::offset_from_local_date","value":"fn offset_from_local_date(&Self, &NaiveDate) -> LocalResult<FixedOffset>","parent":{"krate":0,"index":3172},"children":[],"decl_id":{"krate":0,"index":3187},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2647},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":621587,"byte_end":621613,"line_start":115,"line_end":115,"column_start":8,"column_end":34},"name":"offset_from_local_datetime","qualname":"<FixedOffset as offset::TimeZone>::offset_from_local_datetime","value":"fn offset_from_local_datetime(&Self, &NaiveDateTime)\n-> LocalResult<FixedOffset>","parent":{"krate":0,"index":3172},"children":[],"decl_id":{"krate":0,"index":3188},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2648},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":621724,"byte_end":621744,"line_start":119,"line_end":119,"column_start":8,"column_end":28},"name":"offset_from_utc_date","qualname":"<FixedOffset as offset::TimeZone>::offset_from_utc_date","value":"fn offset_from_utc_date(&Self, &NaiveDate) -> FixedOffset","parent":{"krate":0,"index":3172},"children":[],"decl_id":{"krate":0,"index":3193},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2649},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":621814,"byte_end":621838,"line_start":122,"line_end":122,"column_start":8,"column_end":32},"name":"offset_from_utc_datetime","qualname":"<FixedOffset as offset::TimeZone>::offset_from_utc_datetime","value":"fn offset_from_utc_datetime(&Self, &NaiveDateTime) -> FixedOffset","parent":{"krate":0,"index":3172},"children":[],"decl_id":{"krate":0,"index":3194},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2651},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":621945,"byte_end":621948,"line_start":128,"line_end":128,"column_start":8,"column_end":11},"name":"fix","qualname":"<FixedOffset as offset::Offset>::fix","value":"fn fix(&Self) -> FixedOffset","parent":{"krate":0,"index":3170},"children":[],"decl_id":{"krate":0,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2653},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":622037,"byte_end":622040,"line_start":134,"line_end":134,"column_start":8,"column_end":11},"name":"fmt","qualname":"<FixedOffset as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2655},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":622546,"byte_end":622549,"line_start":148,"line_end":148,"column_start":8,"column_end":11},"name":"fmt","qualname":"<FixedOffset as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10117},"children":[],"decl_id":{"krate":2,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2660},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":623367,"byte_end":623370,"line_start":172,"line_end":172,"column_start":8,"column_end":11},"name":"add","qualname":"<NaiveTime as std::ops::Add>::add","value":"fn add(Self, FixedOffset) -> NaiveTime","parent":{"krate":2,"index":3247},"children":[],"decl_id":{"krate":2,"index":3250},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":623350,"byte_end":623359,"line_start":171,"line_end":171,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2663},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":623564,"byte_end":623567,"line_start":181,"line_end":181,"column_start":8,"column_end":11},"name":"sub","qualname":"<NaiveTime as std::ops::Sub>::sub","value":"fn sub(Self, FixedOffset) -> NaiveTime","parent":{"krate":2,"index":3252},"children":[],"decl_id":{"krate":2,"index":3255},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":623547,"byte_end":623556,"line_start":180,"line_end":180,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2666},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":623770,"byte_end":623773,"line_start":190,"line_end":190,"column_start":8,"column_end":11},"name":"add","qualname":"<NaiveDateTime as std::ops::Add>::add","value":"fn add(Self, FixedOffset) -> NaiveDateTime","parent":{"krate":2,"index":3247},"children":[],"decl_id":{"krate":2,"index":3250},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":623753,"byte_end":623762,"line_start":189,"line_end":189,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2669},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":623979,"byte_end":623982,"line_start":199,"line_end":199,"column_start":8,"column_end":11},"name":"sub","qualname":"<NaiveDateTime as std::ops::Sub>::sub","value":"fn sub(Self, FixedOffset) -> NaiveDateTime","parent":{"krate":2,"index":3252},"children":[],"decl_id":{"krate":2,"index":3255},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":623962,"byte_end":623971,"line_start":198,"line_end":198,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2673},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":624201,"byte_end":624204,"line_start":208,"line_end":208,"column_start":8,"column_end":11},"name":"add","qualname":"<DateTime<Tz> as std::ops::Add>::add","value":"fn add(Self, FixedOffset) -> DateTime<Tz>","parent":{"krate":2,"index":3247},"children":[],"decl_id":{"krate":2,"index":3250},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":624184,"byte_end":624193,"line_start":207,"line_end":207,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2677},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":624421,"byte_end":624424,"line_start":217,"line_end":217,"column_start":8,"column_end":11},"name":"sub","qualname":"<DateTime<Tz> as std::ops::Sub>::sub","value":"fn sub(Self, FixedOffset) -> DateTime<Tz>","parent":{"krate":2,"index":3252},"children":[],"decl_id":{"krate":2,"index":3255},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":624404,"byte_end":624413,"line_start":216,"line_end":216,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":4280},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/mod.rs","byte_start":626750,"byte_end":626755,"line_start":55,"line_end":55,"column_start":12,"column_end":17},"name":"Local","qualname":"::offset::local::Local","value":"","parent":null,"children":[],"decl_id":null,"docs":" The local timescale. This is implemented via the standard `time` crate.","sig":null,"attributes":[{"value":"/ The local timescale. This is implemented via the standard `time` crate.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/mod.rs","byte_start":626225,"byte_end":626300,"line_start":39,"line_end":39,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/mod.rs","byte_start":626301,"byte_end":626304,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Using the [`TimeZone`](./trait.TimeZone.html) methods","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/mod.rs","byte_start":626305,"byte_end":626362,"line_start":41,"line_end":41,"column_start":1,"column_end":58}},{"value":"/ on the Local struct is the preferred way to construct `DateTime<Local>`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/mod.rs","byte_start":626363,"byte_end":626438,"line_start":42,"line_end":42,"column_start":1,"column_end":76}},{"value":"/ instances.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/mod.rs","byte_start":626439,"byte_end":626453,"line_start":43,"line_end":43,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/mod.rs","byte_start":626454,"byte_end":626457,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/mod.rs","byte_start":626458,"byte_end":626471,"line_start":45,"line_end":45,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/mod.rs","byte_start":626472,"byte_end":626475,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/mod.rs","byte_start":626476,"byte_end":626483,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/ use chrono::{Local, DateTime, TimeZone};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/mod.rs","byte_start":626484,"byte_end":626528,"line_start":48,"line_end":48,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/mod.rs","byte_start":626529,"byte_end":626532,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ let dt: DateTime<Local> = Local::now();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/mod.rs","byte_start":626533,"byte_end":626576,"line_start":50,"line_end":50,"column_start":1,"column_end":44}},{"value":"/ let dt: DateTime<Local> = Local.timestamp(0, 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/mod.rs","byte_start":626577,"byte_end":626629,"line_start":51,"line_end":51,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/mod.rs","byte_start":626630,"byte_end":626637,"line_start":52,"line_end":52,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3076},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/mod.rs","byte_start":626846,"byte_end":626851,"line_start":59,"line_end":59,"column_start":12,"column_end":17},"name":"today","qualname":"<Local>::today","value":"fn today() -> Date<Local>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Date` which corresponds to the current date.\n","sig":null,"attributes":[{"value":"/ Returns a `Date` which corresponds to the current date.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/mod.rs","byte_start":626775,"byte_end":626834,"line_start":58,"line_end":58,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3077},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/mod.rs","byte_start":627147,"byte_end":627150,"line_start":69,"line_end":69,"column_start":12,"column_end":15},"name":"now","qualname":"<Local>::now","value":"fn now() -> DateTime<Local>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `DateTime` which corresponds to the current date and time.\n","sig":null,"attributes":[{"value":"/ Returns a `DateTime` which corresponds to the current date and time.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/mod.rs","byte_start":626910,"byte_end":626982,"line_start":63,"line_end":63,"column_start":5,"column_end":77}},{"value":"cfg(not(all(target_arch = \"wasm32\", feature = \"wasmbind\",\nnot(any(target_os = \"emscripten\", target_os = \"wasi\")))))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/mod.rs","byte_start":626987,"byte_end":627135,"line_start":64,"line_end":68,"column_start":5,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":3080},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/mod.rs","byte_start":627828,"byte_end":627839,"line_start":92,"line_end":92,"column_start":8,"column_end":19},"name":"from_offset","qualname":"<Local as offset::TimeZone>::from_offset","value":"fn from_offset(&FixedOffset) -> Local","parent":{"krate":0,"index":3172},"children":[],"decl_id":{"krate":0,"index":3186},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3081},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/mod.rs","byte_start":627995,"byte_end":628017,"line_start":97,"line_end":97,"column_start":8,"column_end":30},"name":"offset_from_local_date","qualname":"<Local as offset::TimeZone>::offset_from_local_date","value":"fn offset_from_local_date(&Self, &NaiveDate) -> LocalResult<FixedOffset>","parent":{"krate":0,"index":3172},"children":[],"decl_id":{"krate":0,"index":3187},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3083},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/mod.rs","byte_start":628151,"byte_end":628177,"line_start":101,"line_end":101,"column_start":8,"column_end":34},"name":"offset_from_local_datetime","qualname":"<Local as offset::TimeZone>::offset_from_local_datetime","value":"fn offset_from_local_datetime(&Self, &NaiveDateTime)\n-> LocalResult<FixedOffset>","parent":{"krate":0,"index":3172},"children":[],"decl_id":{"krate":0,"index":3188},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3085},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/mod.rs","byte_start":628327,"byte_end":628347,"line_start":105,"line_end":105,"column_start":8,"column_end":28},"name":"offset_from_utc_date","qualname":"<Local as offset::TimeZone>::offset_from_utc_date","value":"fn offset_from_utc_date(&Self, &NaiveDate) -> FixedOffset","parent":{"krate":0,"index":3172},"children":[],"decl_id":{"krate":0,"index":3193},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3086},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/mod.rs","byte_start":628445,"byte_end":628469,"line_start":109,"line_end":109,"column_start":8,"column_end":32},"name":"offset_from_utc_datetime","qualname":"<Local as offset::TimeZone>::offset_from_utc_datetime","value":"fn offset_from_utc_datetime(&Self, &NaiveDateTime) -> FixedOffset","parent":{"krate":0,"index":3172},"children":[],"decl_id":{"krate":0,"index":3194},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3087},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/mod.rs","byte_start":628625,"byte_end":628640,"line_start":114,"line_end":114,"column_start":8,"column_end":23},"name":"from_local_date","qualname":"<Local as offset::TimeZone>::from_local_date","value":"fn from_local_date(&Self, &NaiveDate) -> LocalResult<Date<Local>>","parent":{"krate":0,"index":3172},"children":[],"decl_id":{"krate":0,"index":3189},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3089},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/mod.rs","byte_start":629811,"byte_end":629830,"line_start":140,"line_end":140,"column_start":8,"column_end":27},"name":"from_local_datetime","qualname":"<Local as offset::TimeZone>::from_local_datetime","value":"fn from_local_datetime(&Self, &NaiveDateTime) -> LocalResult<DateTime<Local>>","parent":{"krate":0,"index":3172},"children":[],"decl_id":{"krate":0,"index":3191},"docs":"","sig":null,"attributes":[{"value":"cfg(not(all(target_arch = \"wasm32\", feature = \"wasmbind\",\nnot(any(target_os = \"emscripten\", target_os = \"wasi\")))))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/mod.rs","byte_start":629655,"byte_end":629803,"line_start":135,"line_end":139,"column_start":5,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":3090},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/mod.rs","byte_start":629952,"byte_end":629965,"line_start":144,"line_end":144,"column_start":8,"column_end":21},"name":"from_utc_date","qualname":"<Local as offset::TimeZone>::from_utc_date","value":"fn from_utc_date(&Self, &NaiveDate) -> Date<Local>","parent":{"krate":0,"index":3172},"children":[],"decl_id":{"krate":0,"index":3195},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3091},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/mod.rs","byte_start":630708,"byte_end":630725,"line_start":165,"line_end":165,"column_start":8,"column_end":25},"name":"from_utc_datetime","qualname":"<Local as offset::TimeZone>::from_utc_datetime","value":"fn from_utc_datetime(&Self, &NaiveDateTime) -> DateTime<Local>","parent":{"krate":0,"index":3172},"children":[],"decl_id":{"krate":0,"index":3196},"docs":"","sig":null,"attributes":[{"value":"cfg(not(all(target_arch = \"wasm32\", feature = \"wasmbind\",\nnot(any(target_os = \"emscripten\", target_os = \"wasi\")))))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/mod.rs","byte_start":630552,"byte_end":630700,"line_start":160,"line_end":164,"column_start":5,"column_end":9}}]},{"kind":"Struct","id":{"krate":0,"index":4287},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":733322,"byte_end":733325,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"Utc","qualname":"::offset::utc::Utc","value":"","parent":null,"children":[],"decl_id":null,"docs":" The UTC time zone. This is the most efficient time zone when you don't need the local time.\n It is also used as an offset (which is also a dummy type).","sig":null,"attributes":[{"value":"/ The UTC time zone. This is the most efficient time zone when you don't need the local time.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":732607,"byte_end":732702,"line_start":25,"line_end":25,"column_start":1,"column_end":96}},{"value":"/ It is also used as an offset (which is also a dummy type).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":732703,"byte_end":732765,"line_start":26,"line_end":26,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":732766,"byte_end":732769,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Using the [`TimeZone`](./trait.TimeZone.html) methods","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":732770,"byte_end":732827,"line_start":28,"line_end":28,"column_start":1,"column_end":58}},{"value":"/ on the UTC struct is the preferred way to construct `DateTime<Utc>`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":732828,"byte_end":732899,"line_start":29,"line_end":29,"column_start":1,"column_end":72}},{"value":"/ instances.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":732900,"byte_end":732914,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":732915,"byte_end":732918,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":732919,"byte_end":732932,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":732933,"byte_end":732936,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":732937,"byte_end":732944,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ use chrono::{DateTime, TimeZone, NaiveDateTime, Utc};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":732945,"byte_end":733002,"line_start":35,"line_end":35,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":733003,"byte_end":733006,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ let dt = DateTime::<Utc>::from_utc(NaiveDateTime::from_timestamp(61, 0), Utc);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":733007,"byte_end":733089,"line_start":37,"line_end":37,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":733090,"byte_end":733093,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Utc.timestamp(61, 0), dt);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":733094,"byte_end":733135,"line_start":39,"line_end":39,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(Utc.ymd(1970, 1, 1).and_hms(0, 1, 1), dt);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":733136,"byte_end":733193,"line_start":40,"line_end":40,"column_start":1,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":733194,"byte_end":733201,"line_start":41,"line_end":41,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3134},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":733440,"byte_end":733445,"line_start":49,"line_end":49,"column_start":12,"column_end":17},"name":"today","qualname":"<Utc>::today","value":"fn today() -> Date<Utc>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Date` which corresponds to the current date.\n","sig":null,"attributes":[{"value":"/ Returns a `Date` which corresponds to the current date.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":733369,"byte_end":733428,"line_start":48,"line_end":48,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3135},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":733737,"byte_end":733740,"line_start":59,"line_end":59,"column_start":12,"column_end":15},"name":"now","qualname":"<Utc>::now","value":"fn now() -> DateTime<Utc>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `DateTime` which corresponds to the current date and time.\n","sig":null,"attributes":[{"value":"/ Returns a `DateTime` which corresponds to the current date and time.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":733500,"byte_end":733572,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"cfg(not(all(target_arch = \"wasm32\", feature = \"wasmbind\",\nnot(any(target_os = \"emscripten\", target_os = \"wasi\")))))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":733577,"byte_end":733725,"line_start":54,"line_end":58,"column_start":5,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":3138},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":734425,"byte_end":734436,"line_start":81,"line_end":81,"column_start":8,"column_end":19},"name":"from_offset","qualname":"<Utc as offset::TimeZone>::from_offset","value":"fn from_offset(&Utc) -> Utc","parent":{"krate":0,"index":3172},"children":[],"decl_id":{"krate":0,"index":3186},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3139},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":734486,"byte_end":734508,"line_start":85,"line_end":85,"column_start":8,"column_end":30},"name":"offset_from_local_date","qualname":"<Utc as offset::TimeZone>::offset_from_local_date","value":"fn offset_from_local_date(&Self, &NaiveDate) -> LocalResult<Utc>","parent":{"krate":0,"index":3172},"children":[],"decl_id":{"krate":0,"index":3187},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3140},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":734604,"byte_end":734630,"line_start":88,"line_end":88,"column_start":8,"column_end":34},"name":"offset_from_local_datetime","qualname":"<Utc as offset::TimeZone>::offset_from_local_datetime","value":"fn offset_from_local_datetime(&Self, &NaiveDateTime) -> LocalResult<Utc>","parent":{"krate":0,"index":3172},"children":[],"decl_id":{"krate":0,"index":3188},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3141},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":734731,"byte_end":734751,"line_start":92,"line_end":92,"column_start":8,"column_end":28},"name":"offset_from_utc_date","qualname":"<Utc as offset::TimeZone>::offset_from_utc_date","value":"fn offset_from_utc_date(&Self, &NaiveDate) -> Utc","parent":{"krate":0,"index":3172},"children":[],"decl_id":{"krate":0,"index":3193},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3142},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":734811,"byte_end":734835,"line_start":95,"line_end":95,"column_start":8,"column_end":32},"name":"offset_from_utc_datetime","qualname":"<Utc as offset::TimeZone>::offset_from_utc_datetime","value":"fn offset_from_utc_datetime(&Self, &NaiveDateTime) -> Utc","parent":{"krate":0,"index":3172},"children":[],"decl_id":{"krate":0,"index":3194},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3144},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":734924,"byte_end":734927,"line_start":101,"line_end":101,"column_start":8,"column_end":11},"name":"fix","qualname":"<Utc as offset::Offset>::fix","value":"fn fix(&Self) -> FixedOffset","parent":{"krate":0,"index":3170},"children":[],"decl_id":{"krate":0,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3146},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":735023,"byte_end":735026,"line_start":107,"line_end":107,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Utc as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3148},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":735142,"byte_end":735145,"line_start":113,"line_end":113,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Utc as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10117},"children":[],"decl_id":{"krate":2,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4300},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":598543,"byte_end":598547,"line_start":44,"line_end":44,"column_start":5,"column_end":9},"name":"None","qualname":"::offset::LocalResult::None","value":"LocalResult::None","parent":{"krate":0,"index":4298},"children":[],"decl_id":null,"docs":" Given local time representation is invalid.\n This can occur when, for example, the positive timezone transition.\n","sig":null,"attributes":[{"value":"/ Given local time representation is invalid.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":598415,"byte_end":598462,"line_start":42,"line_end":42,"column_start":5,"column_end":52}},{"value":"/ This can occur when, for example, the positive timezone transition.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":598467,"byte_end":598538,"line_start":43,"line_end":43,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4302},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":598621,"byte_end":598627,"line_start":46,"line_end":46,"column_start":5,"column_end":11},"name":"Single","qualname":"::offset::LocalResult::Single","value":"LocalResult::Single(T)","parent":{"krate":0,"index":4298},"children":[],"decl_id":null,"docs":" Given local time representation has a single unique result.\n","sig":null,"attributes":[{"value":"/ Given local time representation has a single unique result.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":598553,"byte_end":598616,"line_start":45,"line_end":45,"column_start":5,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":4304},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":598628,"byte_end":598629,"line_start":46,"line_end":46,"column_start":12,"column_end":13},"name":"0","qualname":"::offset::LocalResult::Single::0","value":"T","parent":{"krate":0,"index":4302},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4305},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":598793,"byte_end":598802,"line_start":49,"line_end":49,"column_start":5,"column_end":14},"name":"Ambiguous","qualname":"::offset::LocalResult::Ambiguous","value":"LocalResult::Ambiguous(T, T)","parent":{"krate":0,"index":4298},"children":[],"decl_id":null,"docs":" Given local time representation has multiple results and thus ambiguous.\n This can occur when, for example, the negative timezone transition.\n","sig":null,"attributes":[{"value":"/ Given local time representation has multiple results and thus ambiguous.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":598636,"byte_end":598712,"line_start":47,"line_end":47,"column_start":5,"column_end":81}},{"value":"/ This can occur when, for example, the negative timezone transition.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":598717,"byte_end":598788,"line_start":48,"line_end":48,"column_start":5,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":4307},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":598803,"byte_end":598804,"line_start":49,"line_end":49,"column_start":15,"column_end":16},"name":"0","qualname":"::offset::LocalResult::Ambiguous::0","value":"T","parent":{"krate":0,"index":4305},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4308},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":598814,"byte_end":598815,"line_start":49,"line_end":49,"column_start":26,"column_end":27},"name":"1","qualname":"::offset::LocalResult::Ambiguous::1","value":"T","parent":{"krate":0,"index":4305},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4298},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":598394,"byte_end":598405,"line_start":41,"line_end":41,"column_start":10,"column_end":21},"name":"LocalResult","qualname":"::offset::LocalResult","value":"enum LocalResult<T> { None, Single(T), Ambiguous(T, T), }","parent":null,"children":[{"krate":0,"index":4300},{"krate":0,"index":4302},{"krate":0,"index":4305}],"decl_id":null,"docs":" The conversion result from the local time to the timezone-aware datetime types.\n","sig":null,"attributes":[{"value":"/ The conversion result from the local time to the timezone-aware datetime types.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":598250,"byte_end":598333,"line_start":39,"line_end":39,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":3154},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":598952,"byte_end":598958,"line_start":54,"line_end":54,"column_start":12,"column_end":18},"name":"single","qualname":"<LocalResult<T>>::single","value":"fn single(Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some` only when the conversion result is unique, or `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `Some` only when the conversion result is unique, or `None` otherwise.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":598858,"byte_end":598940,"line_start":53,"line_end":53,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":3155},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":599186,"byte_end":599194,"line_start":62,"line_end":62,"column_start":12,"column_end":20},"name":"earliest","qualname":"<LocalResult<T>>::earliest","value":"fn earliest(Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some` for the earliest possible conversion result, or `None` if none.\n","sig":null,"attributes":[{"value":"/ Returns `Some` for the earliest possible conversion result, or `None` if none.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":599092,"byte_end":599174,"line_start":61,"line_end":61,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":3156},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":599451,"byte_end":599457,"line_start":70,"line_end":70,"column_start":12,"column_end":18},"name":"latest","qualname":"<LocalResult<T>>::latest","value":"fn latest(Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some` for the latest possible conversion result, or `None` if none.\n","sig":null,"attributes":[{"value":"/ Returns `Some` for the latest possible conversion result, or `None` if none.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":599359,"byte_end":599439,"line_start":69,"line_end":69,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":3157},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":599704,"byte_end":599707,"line_start":78,"line_end":78,"column_start":12,"column_end":15},"name":"map","qualname":"<LocalResult<T>>::map","value":"fn map<U, F>(Self, F) -> LocalResult<U> where F: FnMut(T) -> U","parent":null,"children":[],"decl_id":null,"docs":" Maps a `LocalResult<T>` into `LocalResult<U>` with given function.\n","sig":null,"attributes":[{"value":"/ Maps a `LocalResult<T>` into `LocalResult<U>` with given function.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":599622,"byte_end":599692,"line_start":77,"line_end":77,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":3162},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":600282,"byte_end":600290,"line_start":93,"line_end":93,"column_start":12,"column_end":20},"name":"and_time","qualname":"<LocalResult<Date<Tz>>>::and_time","value":"fn and_time(Self, NaiveTime) -> LocalResult<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date and given `NaiveTime`.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the current date and given `NaiveTime`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":600057,"byte_end":600128,"line_start":88,"line_end":88,"column_start":5,"column_end":76}},{"value":"/ The offset in the current date is preserved.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":600133,"byte_end":600181,"line_start":89,"line_end":89,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":600186,"byte_end":600189,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ Propagates any error. Ambiguous result would be discarded.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":600194,"byte_end":600256,"line_start":91,"line_end":91,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":600261,"byte_end":600270,"line_start":92,"line_end":92,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3163},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":600785,"byte_end":600796,"line_start":107,"line_end":107,"column_start":12,"column_end":23},"name":"and_hms_opt","qualname":"<LocalResult<Date<Tz>>>::and_hms_opt","value":"fn and_hms_opt(Self, u32, u32, u32) -> LocalResult<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute and second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the current date, hour, minute and second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":600557,"byte_end":600631,"line_start":102,"line_end":102,"column_start":5,"column_end":79}},{"value":"/ The offset in the current date is preserved.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":600636,"byte_end":600684,"line_start":103,"line_end":103,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":600689,"byte_end":600692,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ Propagates any error. Ambiguous result would be discarded.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":600697,"byte_end":600759,"line_start":105,"line_end":105,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":600764,"byte_end":600773,"line_start":106,"line_end":106,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3164},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":601416,"byte_end":601433,"line_start":122,"line_end":122,"column_start":12,"column_end":29},"name":"and_hms_milli_opt","qualname":"<LocalResult<Date<Tz>>>::and_hms_milli_opt","value":"fn and_hms_milli_opt(Self, u32, u32, u32, u32) -> LocalResult<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute, second and millisecond.\n The millisecond part can exceed 1,000 in order to represent the leap second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the current date, hour, minute, second and millisecond.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":601090,"byte_end":601177,"line_start":116,"line_end":116,"column_start":5,"column_end":92}},{"value":"/ The millisecond part can exceed 1,000 in order to represent the leap second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":601182,"byte_end":601262,"line_start":117,"line_end":117,"column_start":5,"column_end":85}},{"value":"/ The offset in the current date is preserved.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":601267,"byte_end":601315,"line_start":118,"line_end":118,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":601320,"byte_end":601323,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ Propagates any error. Ambiguous result would be discarded.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":601328,"byte_end":601390,"line_start":120,"line_end":120,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":601395,"byte_end":601404,"line_start":121,"line_end":121,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3165},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":602132,"byte_end":602149,"line_start":143,"line_end":143,"column_start":12,"column_end":29},"name":"and_hms_micro_opt","qualname":"<LocalResult<Date<Tz>>>::and_hms_micro_opt","value":"fn and_hms_micro_opt(Self, u32, u32, u32, u32) -> LocalResult<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute, second and microsecond.\n The microsecond part can exceed 1,000,000 in order to represent the leap second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the current date, hour, minute, second and microsecond.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":601802,"byte_end":601889,"line_start":137,"line_end":137,"column_start":5,"column_end":92}},{"value":"/ The microsecond part can exceed 1,000,000 in order to represent the leap second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":601894,"byte_end":601978,"line_start":138,"line_end":138,"column_start":5,"column_end":89}},{"value":"/ The offset in the current date is preserved.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":601983,"byte_end":602031,"line_start":139,"line_end":139,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":602036,"byte_end":602039,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Propagates any error. Ambiguous result would be discarded.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":602044,"byte_end":602106,"line_start":141,"line_end":141,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":602111,"byte_end":602120,"line_start":142,"line_end":142,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3166},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":602850,"byte_end":602866,"line_start":164,"line_end":164,"column_start":12,"column_end":28},"name":"and_hms_nano_opt","qualname":"<LocalResult<Date<Tz>>>::and_hms_nano_opt","value":"fn and_hms_nano_opt(Self, u32, u32, u32, u32) -> LocalResult<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute, second and nanosecond.\n The nanosecond part can exceed 1,000,000,000 in order to represent the leap second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the current date, hour, minute, second and nanosecond.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":602518,"byte_end":602604,"line_start":158,"line_end":158,"column_start":5,"column_end":91}},{"value":"/ The nanosecond part can exceed 1,000,000,000 in order to represent the leap second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":602609,"byte_end":602696,"line_start":159,"line_end":159,"column_start":5,"column_end":92}},{"value":"/ The offset in the current date is preserved.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":602701,"byte_end":602749,"line_start":160,"line_end":160,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":602754,"byte_end":602757,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Propagates any error. Ambiguous result would be discarded.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":602762,"byte_end":602824,"line_start":162,"line_end":162,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":602829,"byte_end":602838,"line_start":163,"line_end":163,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3169},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":603354,"byte_end":603360,"line_start":182,"line_end":182,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<LocalResult<T>>::unwrap","value":"fn unwrap(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the single unique conversion result, or panics accordingly.\n","sig":null,"attributes":[{"value":"/ Returns the single unique conversion result, or panics accordingly.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":603271,"byte_end":603342,"line_start":181,"line_end":181,"column_start":5,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":3170},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":603715,"byte_end":603721,"line_start":194,"line_end":194,"column_start":11,"column_end":17},"name":"Offset","qualname":"::offset::Offset","value":"Offset: Sized + Clone + fmt::Debug","parent":null,"children":[{"krate":0,"index":3171}],"decl_id":null,"docs":" The offset from the local time to UTC.\n","sig":null,"attributes":[{"value":"/ The offset from the local time to UTC.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":603662,"byte_end":603704,"line_start":193,"line_end":193,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3171},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":603827,"byte_end":603830,"line_start":196,"line_end":196,"column_start":8,"column_end":11},"name":"fix","qualname":"::offset::Offset::fix","value":"fn fix(&Self) -> FixedOffset","parent":{"krate":0,"index":3170},"children":[],"decl_id":null,"docs":" Returns the fixed offset from UTC to the local time stored.\n","sig":null,"attributes":[{"value":"/ Returns the fixed offset from UTC to the local time stored.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":603756,"byte_end":603819,"line_start":195,"line_end":195,"column_start":5,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":3172},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":604029,"byte_end":604037,"line_start":203,"line_end":203,"column_start":11,"column_end":19},"name":"TimeZone","qualname":"::offset::TimeZone","value":"TimeZone: Sized + Clone","parent":null,"children":[{"krate":0,"index":3173},{"krate":0,"index":3174},{"krate":0,"index":3175},{"krate":0,"index":3176},{"krate":0,"index":3177},{"krate":0,"index":3178},{"krate":0,"index":3179},{"krate":0,"index":3180},{"krate":0,"index":3181},{"krate":0,"index":3182},{"krate":0,"index":3183},{"krate":0,"index":3184},{"krate":0,"index":3185},{"krate":0,"index":3186},{"krate":0,"index":3187},{"krate":0,"index":3188},{"krate":0,"index":3189},{"krate":0,"index":3191},{"krate":0,"index":3193},{"krate":0,"index":3194},{"krate":0,"index":3195},{"krate":0,"index":3196}],"decl_id":null,"docs":" The time zone.","sig":null,"attributes":[{"value":"/ The time zone.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":603857,"byte_end":603875,"line_start":199,"line_end":199,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":603876,"byte_end":603879,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ The methods here are the primarily constructors for [`Date`](../struct.Date.html) and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":603880,"byte_end":603969,"line_start":201,"line_end":201,"column_start":1,"column_end":90}},{"value":"/ [`DateTime`](../struct.DateTime.html) types.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":603970,"byte_end":604018,"line_start":202,"line_end":202,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":3173},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":604260,"byte_end":604266,"line_start":207,"line_end":207,"column_start":10,"column_end":16},"name":"Offset","qualname":"::offset::TimeZone::Offset","value":"type Offset: Offset;","parent":{"krate":0,"index":3172},"children":[],"decl_id":null,"docs":" An associated offset type.\n This type is used to store the actual offset in date and time types.\n The original `TimeZone` value can be recovered via `TimeZone::from_offset`.\n","sig":null,"attributes":[{"value":"/ An associated offset type.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":604059,"byte_end":604089,"line_start":204,"line_end":204,"column_start":5,"column_end":35}},{"value":"/ This type is used to store the actual offset in date and time types.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":604094,"byte_end":604166,"line_start":205,"line_end":205,"column_start":5,"column_end":77}},{"value":"/ The original `TimeZone` value can be recovered via `TimeZone::from_offset`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":604171,"byte_end":604250,"line_start":206,"line_end":206,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":3174},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":604881,"byte_end":604884,"line_start":224,"line_end":224,"column_start":8,"column_end":11},"name":"ymd","qualname":"::offset::TimeZone::ymd","value":"fn ymd(&Self, i32, u32, u32) -> Date<Self>","parent":{"krate":0,"index":3172},"children":[],"decl_id":null,"docs":" Makes a new `Date` from year, month, day and the current time zone.\n This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.","sig":null,"attributes":[{"value":"/ Makes a new `Date` from year, month, day and the current time zone.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":604281,"byte_end":604352,"line_start":209,"line_end":209,"column_start":5,"column_end":76}},{"value":"/ This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":604357,"byte_end":604436,"line_start":210,"line_end":210,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":604441,"byte_end":604444,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ The time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":604449,"byte_end":604542,"line_start":212,"line_end":212,"column_start":5,"column_end":98}},{"value":"/ but it will propagate to the `DateTime` values constructed via this date.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":604547,"byte_end":604624,"line_start":213,"line_end":213,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":604629,"byte_end":604632,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ Panics on the out-of-range date, invalid month and/or day.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":604637,"byte_end":604699,"line_start":215,"line_end":215,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":604704,"byte_end":604707,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":604712,"byte_end":604725,"line_start":217,"line_end":217,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":604730,"byte_end":604733,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":604738,"byte_end":604745,"line_start":219,"line_end":219,"column_start":5,"column_end":12}},{"value":"/ use chrono::{Utc, TimeZone};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":604750,"byte_end":604782,"line_start":220,"line_end":220,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":604787,"byte_end":604790,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Utc.ymd(2015, 5, 15).to_string(), \"2015-05-15UTC\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":604795,"byte_end":604861,"line_start":222,"line_end":222,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":604866,"byte_end":604873,"line_start":223,"line_end":223,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3175},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":605698,"byte_end":605705,"line_start":244,"line_end":244,"column_start":8,"column_end":15},"name":"ymd_opt","qualname":"::offset::TimeZone::ymd_opt","value":"fn ymd_opt(&Self, i32, u32, u32) -> LocalResult<Date<Self>>","parent":{"krate":0,"index":3172},"children":[],"decl_id":null,"docs":" Makes a new `Date` from year, month, day and the current time zone.\n This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.","sig":null,"attributes":[{"value":"/ Makes a new `Date` from year, month, day and the current time zone.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":605000,"byte_end":605071,"line_start":228,"line_end":228,"column_start":5,"column_end":76}},{"value":"/ This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":605076,"byte_end":605155,"line_start":229,"line_end":229,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":605160,"byte_end":605163,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ The time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":605168,"byte_end":605261,"line_start":231,"line_end":231,"column_start":5,"column_end":98}},{"value":"/ but it will propagate to the `DateTime` values constructed via this date.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":605266,"byte_end":605343,"line_start":232,"line_end":232,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":605348,"byte_end":605351,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on the out-of-range date, invalid month and/or day.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":605356,"byte_end":605426,"line_start":234,"line_end":234,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":605431,"byte_end":605434,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":605439,"byte_end":605452,"line_start":236,"line_end":236,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":605457,"byte_end":605460,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":605465,"byte_end":605472,"line_start":238,"line_end":238,"column_start":5,"column_end":12}},{"value":"/ use chrono::{Utc, LocalResult, TimeZone};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":605477,"byte_end":605522,"line_start":239,"line_end":239,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":605527,"byte_end":605530,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Utc.ymd_opt(2015, 5, 15).unwrap().to_string(), \"2015-05-15UTC\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":605535,"byte_end":605614,"line_start":241,"line_end":241,"column_start":5,"column_end":84}},{"value":"/ assert_eq!(Utc.ymd_opt(2000, 0, 0), LocalResult::None);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":605619,"byte_end":605678,"line_start":242,"line_end":242,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":605683,"byte_end":605690,"line_start":243,"line_end":243,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3176},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":606552,"byte_end":606554,"line_start":266,"line_end":266,"column_start":8,"column_end":10},"name":"yo","qualname":"::offset::TimeZone::yo","value":"fn yo(&Self, i32, u32) -> Date<Self>","parent":{"krate":0,"index":3172},"children":[],"decl_id":null,"docs":" Makes a new `Date` from year, day of year (DOY or \"ordinal\") and the current time zone.\n This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.","sig":null,"attributes":[{"value":"/ Makes a new `Date` from year, day of year (DOY or \"ordinal\") and the current time zone.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":605942,"byte_end":606033,"line_start":251,"line_end":251,"column_start":5,"column_end":96}},{"value":"/ This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":606038,"byte_end":606117,"line_start":252,"line_end":252,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":606122,"byte_end":606125,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ The time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":606130,"byte_end":606223,"line_start":254,"line_end":254,"column_start":5,"column_end":98}},{"value":"/ but it will propagate to the `DateTime` values constructed via this date.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":606228,"byte_end":606305,"line_start":255,"line_end":255,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":606310,"byte_end":606313,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ Panics on the out-of-range date and/or invalid DOY.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":606318,"byte_end":606373,"line_start":257,"line_end":257,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":606378,"byte_end":606381,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":606386,"byte_end":606399,"line_start":259,"line_end":259,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":606404,"byte_end":606407,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":606412,"byte_end":606419,"line_start":261,"line_end":261,"column_start":5,"column_end":12}},{"value":"/ use chrono::{Utc, TimeZone};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":606424,"byte_end":606456,"line_start":262,"line_end":262,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":606461,"byte_end":606464,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Utc.yo(2015, 135).to_string(), \"2015-05-15UTC\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":606469,"byte_end":606532,"line_start":264,"line_end":264,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":606537,"byte_end":606544,"line_start":265,"line_end":265,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3177},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":607105,"byte_end":607111,"line_start":277,"line_end":277,"column_start":8,"column_end":14},"name":"yo_opt","qualname":"::offset::TimeZone::yo_opt","value":"fn yo_opt(&Self, i32, u32) -> LocalResult<Date<Self>>","parent":{"krate":0,"index":3172},"children":[],"decl_id":null,"docs":" Makes a new `Date` from year, day of year (DOY or \"ordinal\") and the current time zone.\n This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.","sig":null,"attributes":[{"value":"/ Makes a new `Date` from year, day of year (DOY or \"ordinal\") and the current time zone.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":606658,"byte_end":606749,"line_start":270,"line_end":270,"column_start":5,"column_end":96}},{"value":"/ This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":606754,"byte_end":606833,"line_start":271,"line_end":271,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":606838,"byte_end":606841,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ The time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":606846,"byte_end":606939,"line_start":273,"line_end":273,"column_start":5,"column_end":98}},{"value":"/ but it will propagate to the `DateTime` values constructed via this date.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":606944,"byte_end":607021,"line_start":274,"line_end":274,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":607026,"byte_end":607029,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on the out-of-range date and/or invalid DOY.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":607034,"byte_end":607097,"line_start":276,"line_end":276,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3178},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":608087,"byte_end":608093,"line_start":301,"line_end":301,"column_start":8,"column_end":14},"name":"isoywd","qualname":"::offset::TimeZone::isoywd","value":"fn isoywd(&Self, i32, u32, Weekday) -> Date<Self>","parent":{"krate":0,"index":3172},"children":[],"decl_id":null,"docs":" Makes a new `Date` from ISO week date (year and week number), day of the week (DOW) and\n the current time zone.\n This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\n The resulting `Date` may have a different year from the input year.","sig":null,"attributes":[{"value":"/ Makes a new `Date` from ISO week date (year and week number), day of the week (DOW) and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":607336,"byte_end":607427,"line_start":284,"line_end":284,"column_start":5,"column_end":96}},{"value":"/ the current time zone.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":607432,"byte_end":607458,"line_start":285,"line_end":285,"column_start":5,"column_end":31}},{"value":"/ This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":607463,"byte_end":607542,"line_start":286,"line_end":286,"column_start":5,"column_end":84}},{"value":"/ The resulting `Date` may have a different year from the input year.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":607547,"byte_end":607618,"line_start":287,"line_end":287,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":607623,"byte_end":607626,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ The time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":607631,"byte_end":607724,"line_start":289,"line_end":289,"column_start":5,"column_end":98}},{"value":"/ but it will propagate to the `DateTime` values constructed via this date.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":607729,"byte_end":607806,"line_start":290,"line_end":290,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":607811,"byte_end":607814,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ Panics on the out-of-range date and/or invalid week number.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":607819,"byte_end":607882,"line_start":292,"line_end":292,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":607887,"byte_end":607890,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":607895,"byte_end":607908,"line_start":294,"line_end":294,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":607913,"byte_end":607916,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":607921,"byte_end":607928,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/ use chrono::{Utc, Weekday, TimeZone};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":607933,"byte_end":607974,"line_start":297,"line_end":297,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":607979,"byte_end":607982,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Utc.isoywd(2015, 20, Weekday::Fri).to_string(), \"2015-05-15UTC\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":607987,"byte_end":608067,"line_start":299,"line_end":299,"column_start":5,"column_end":85}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":608072,"byte_end":608079,"line_start":300,"line_end":300,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3179},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":608784,"byte_end":608794,"line_start":314,"line_end":314,"column_start":8,"column_end":18},"name":"isoywd_opt","qualname":"::offset::TimeZone::isoywd_opt","value":"fn isoywd_opt(&Self, i32, u32, Weekday) -> LocalResult<Date<Self>>","parent":{"krate":0,"index":3172},"children":[],"decl_id":null,"docs":" Makes a new `Date` from ISO week date (year and week number), day of the week (DOW) and\n the current time zone.\n This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\n The resulting `Date` may have a different year from the input year.","sig":null,"attributes":[{"value":"/ Makes a new `Date` from ISO week date (year and week number), day of the week (DOW) and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":608222,"byte_end":608313,"line_start":305,"line_end":305,"column_start":5,"column_end":96}},{"value":"/ the current time zone.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":608318,"byte_end":608344,"line_start":306,"line_end":306,"column_start":5,"column_end":31}},{"value":"/ This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":608349,"byte_end":608428,"line_start":307,"line_end":307,"column_start":5,"column_end":84}},{"value":"/ The resulting `Date` may have a different year from the input year.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":608433,"byte_end":608504,"line_start":308,"line_end":308,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":608509,"byte_end":608512,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ The time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":608517,"byte_end":608610,"line_start":310,"line_end":310,"column_start":5,"column_end":98}},{"value":"/ but it will propagate to the `DateTime` values constructed via this date.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":608615,"byte_end":608692,"line_start":311,"line_end":311,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":608697,"byte_end":608700,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on the out-of-range date and/or invalid week number.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":608705,"byte_end":608776,"line_start":313,"line_end":313,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3180},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":609617,"byte_end":609626,"line_start":335,"line_end":335,"column_start":8,"column_end":17},"name":"timestamp","qualname":"::offset::TimeZone::timestamp","value":"fn timestamp(&Self, i64, u32) -> DateTime<Self>","parent":{"krate":0,"index":3172},"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the number of non-leap seconds\n since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\")\n and the number of nanoseconds since the last whole non-leap second.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the number of non-leap seconds","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":609044,"byte_end":609106,"line_start":321,"line_end":321,"column_start":5,"column_end":67}},{"value":"/ since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":609111,"byte_end":609171,"line_start":322,"line_end":322,"column_start":5,"column_end":65}},{"value":"/ and the number of nanoseconds since the last whole non-leap second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":609176,"byte_end":609247,"line_start":323,"line_end":323,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":609252,"byte_end":609255,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ Panics on the out-of-range number of seconds and/or invalid nanosecond,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":609260,"byte_end":609335,"line_start":325,"line_end":325,"column_start":5,"column_end":80}},{"value":"/ for a non-panicking version see [`timestamp_opt`](#method.timestamp_opt).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":609340,"byte_end":609417,"line_start":326,"line_end":326,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":609422,"byte_end":609425,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":609430,"byte_end":609443,"line_start":328,"line_end":328,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":609448,"byte_end":609451,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":609456,"byte_end":609463,"line_start":330,"line_end":330,"column_start":5,"column_end":12}},{"value":"/ use chrono::{Utc, TimeZone};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":609468,"byte_end":609500,"line_start":331,"line_end":331,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":609505,"byte_end":609508,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Utc.timestamp(1431648000, 0).to_string(), \"2015-05-15 00:00:00 UTC\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":609513,"byte_end":609597,"line_start":333,"line_end":333,"column_start":5,"column_end":89}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":609602,"byte_end":609609,"line_start":334,"line_end":334,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3181},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":610109,"byte_end":610122,"line_start":345,"line_end":345,"column_start":8,"column_end":21},"name":"timestamp_opt","qualname":"::offset::TimeZone::timestamp_opt","value":"fn timestamp_opt(&Self, i64, u32) -> LocalResult<DateTime<Self>>","parent":{"krate":0,"index":3172},"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the number of non-leap seconds\n since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\")\n and the number of nanoseconds since the last whole non-leap second.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the number of non-leap seconds","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":609737,"byte_end":609799,"line_start":339,"line_end":339,"column_start":5,"column_end":67}},{"value":"/ since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":609804,"byte_end":609864,"line_start":340,"line_end":340,"column_start":5,"column_end":65}},{"value":"/ and the number of nanoseconds since the last whole non-leap second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":609869,"byte_end":609940,"line_start":341,"line_end":341,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":609945,"byte_end":609948,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ Returns `LocalResult::None` on out-of-range number of seconds and/or","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":609953,"byte_end":610025,"line_start":343,"line_end":343,"column_start":5,"column_end":77}},{"value":"/ invalid nanosecond, otherwise always returns `LocalResult::Single`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":610030,"byte_end":610101,"line_start":344,"line_end":344,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3182},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":610860,"byte_end":610876,"line_start":365,"line_end":365,"column_start":8,"column_end":24},"name":"timestamp_millis","qualname":"::offset::TimeZone::timestamp_millis","value":"fn timestamp_millis(&Self, i64) -> DateTime<Self>","parent":{"krate":0,"index":3172},"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the number of non-leap milliseconds\n since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\").","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the number of non-leap milliseconds","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":610383,"byte_end":610450,"line_start":352,"line_end":352,"column_start":5,"column_end":72}},{"value":"/ since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\").","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":610455,"byte_end":610516,"line_start":353,"line_end":353,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":610521,"byte_end":610524,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ Panics on out-of-range number of milliseconds for a non-panicking","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":610529,"byte_end":610598,"line_start":355,"line_end":355,"column_start":5,"column_end":74}},{"value":"/ version see [`timestamp_millis_opt`](#method.timestamp_millis_opt).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":610603,"byte_end":610674,"line_start":356,"line_end":356,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":610679,"byte_end":610682,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":610687,"byte_end":610700,"line_start":358,"line_end":358,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":610705,"byte_end":610708,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":610713,"byte_end":610720,"line_start":360,"line_end":360,"column_start":5,"column_end":12}},{"value":"/ use chrono::{Utc, TimeZone};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":610725,"byte_end":610757,"line_start":361,"line_end":361,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":610762,"byte_end":610765,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Utc.timestamp_millis(1431648000).timestamp(), 1431648);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":610770,"byte_end":610840,"line_start":363,"line_end":363,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":610845,"byte_end":610852,"line_start":364,"line_end":364,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3183},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":611605,"byte_end":611625,"line_start":386,"line_end":386,"column_start":8,"column_end":28},"name":"timestamp_millis_opt","qualname":"::offset::TimeZone::timestamp_millis_opt","value":"fn timestamp_millis_opt(&Self, i64) -> LocalResult<DateTime<Self>>","parent":{"krate":0,"index":3172},"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the number of non-leap milliseconds\n since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\").","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the number of non-leap milliseconds","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":610979,"byte_end":611046,"line_start":369,"line_end":369,"column_start":5,"column_end":72}},{"value":"/ since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\").","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":611051,"byte_end":611112,"line_start":370,"line_end":370,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":611117,"byte_end":611120,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":611125,"byte_end":611128,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ Returns `LocalResult::None` on out-of-range number of milliseconds","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":611133,"byte_end":611203,"line_start":373,"line_end":373,"column_start":5,"column_end":75}},{"value":"/ and/or invalid nanosecond, otherwise always returns","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":611208,"byte_end":611263,"line_start":374,"line_end":374,"column_start":5,"column_end":60}},{"value":"/ `LocalResult::Single`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":611268,"byte_end":611294,"line_start":375,"line_end":375,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":611299,"byte_end":611302,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":611307,"byte_end":611320,"line_start":377,"line_end":377,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":611325,"byte_end":611328,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":611333,"byte_end":611340,"line_start":379,"line_end":379,"column_start":5,"column_end":12}},{"value":"/ use chrono::{Utc, TimeZone, LocalResult};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":611345,"byte_end":611390,"line_start":380,"line_end":380,"column_start":5,"column_end":50}},{"value":"/ match Utc.timestamp_millis_opt(1431648000) {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":611395,"byte_end":611443,"line_start":381,"line_end":381,"column_start":5,"column_end":53}},{"value":"/     LocalResult::Single(dt) => assert_eq!(dt.timestamp(), 1431648),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":611448,"byte_end":611519,"line_start":382,"line_end":382,"column_start":5,"column_end":76}},{"value":"/     _ => panic!(\"Incorrect timestamp_millis\"),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":611524,"byte_end":611574,"line_start":383,"line_end":383,"column_start":5,"column_end":55}},{"value":"/ };","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":611579,"byte_end":611585,"line_start":384,"line_end":384,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":611590,"byte_end":611597,"line_start":385,"line_end":385,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3184},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":612325,"byte_end":612340,"line_start":408,"line_end":408,"column_start":8,"column_end":23},"name":"timestamp_nanos","qualname":"::offset::TimeZone::timestamp_nanos","value":"fn timestamp_nanos(&Self, i64) -> DateTime<Self>","parent":{"krate":0,"index":3172},"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the number of non-leap nanoseconds\n since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\").","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the number of non-leap nanoseconds","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":611904,"byte_end":611970,"line_start":395,"line_end":395,"column_start":5,"column_end":71}},{"value":"/ since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\").","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":611975,"byte_end":612036,"line_start":396,"line_end":396,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":612041,"byte_end":612044,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ Unlike [`timestamp_millis`](#method.timestamp_millis), this never","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":612049,"byte_end":612118,"line_start":398,"line_end":398,"column_start":5,"column_end":74}},{"value":"/ panics.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":612123,"byte_end":612134,"line_start":399,"line_end":399,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":612139,"byte_end":612142,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":612147,"byte_end":612160,"line_start":401,"line_end":401,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":612165,"byte_end":612168,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":612173,"byte_end":612180,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"/ use chrono::{Utc, TimeZone};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":612185,"byte_end":612217,"line_start":404,"line_end":404,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":612222,"byte_end":612225,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Utc.timestamp_nanos(1431648000000000).timestamp(), 1431648);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":612230,"byte_end":612305,"line_start":406,"line_end":406,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":612310,"byte_end":612317,"line_start":407,"line_end":407,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3185},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":613113,"byte_end":613130,"line_start":428,"line_end":428,"column_start":8,"column_end":25},"name":"datetime_from_str","qualname":"::offset::TimeZone::datetime_from_str","value":"fn datetime_from_str(&Self, &str, &str) -> ParseResult<DateTime<Self>>","parent":{"krate":0,"index":3172},"children":[],"decl_id":null,"docs":" Parses a string with the specified format string and returns a\n `DateTime` with the current offset.","sig":null,"attributes":[{"value":"/ Parses a string with the specified format string and returns a","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":612623,"byte_end":612689,"line_start":417,"line_end":417,"column_start":5,"column_end":71}},{"value":"/ `DateTime` with the current offset.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":612694,"byte_end":612733,"line_start":418,"line_end":418,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":612738,"byte_end":612741,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ See the [`crate::format::strftime`] module on the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":612746,"byte_end":612799,"line_start":420,"line_end":420,"column_start":5,"column_end":58}},{"value":"/ supported escape sequences.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":612804,"byte_end":612835,"line_start":421,"line_end":421,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":612840,"byte_end":612843,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ If the to-be-parsed string includes an offset, it *must* match the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":612848,"byte_end":612918,"line_start":423,"line_end":423,"column_start":5,"column_end":75}},{"value":"/ offset of the TimeZone, otherwise an error will be returned.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":612923,"byte_end":612987,"line_start":424,"line_end":424,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":612992,"byte_end":612995,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ See also [`DateTime::parse_from_str`] which gives a [`DateTime`] with","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":613000,"byte_end":613073,"line_start":426,"line_end":426,"column_start":5,"column_end":78}},{"value":"/ parsed [`FixedOffset`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":613078,"byte_end":613105,"line_start":427,"line_end":427,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":3186},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":613401,"byte_end":613412,"line_start":435,"line_end":435,"column_start":8,"column_end":19},"name":"from_offset","qualname":"::offset::TimeZone::from_offset","value":"fn from_offset(&Self::Offset) -> Self","parent":{"krate":0,"index":3172},"children":[],"decl_id":null,"docs":" Reconstructs the time zone from the offset.\n","sig":null,"attributes":[{"value":"/ Reconstructs the time zone from the offset.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":613346,"byte_end":613393,"line_start":434,"line_end":434,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3187},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":613524,"byte_end":613546,"line_start":438,"line_end":438,"column_start":8,"column_end":30},"name":"offset_from_local_date","qualname":"::offset::TimeZone::offset_from_local_date","value":"fn offset_from_local_date(&Self, &NaiveDate) -> LocalResult<Self::Offset>","parent":{"krate":0,"index":3172},"children":[],"decl_id":null,"docs":" Creates the offset(s) for given local `NaiveDate` if possible.\n","sig":null,"attributes":[{"value":"/ Creates the offset(s) for given local `NaiveDate` if possible.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":613450,"byte_end":613516,"line_start":437,"line_end":437,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":3188},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":613686,"byte_end":613712,"line_start":441,"line_end":441,"column_start":8,"column_end":34},"name":"offset_from_local_datetime","qualname":"::offset::TimeZone::offset_from_local_datetime","value":"fn offset_from_local_datetime(&Self, &NaiveDateTime)\n-> LocalResult<Self::Offset>","parent":{"krate":0,"index":3172},"children":[],"decl_id":null,"docs":" Creates the offset(s) for given local `NaiveDateTime` if possible.\n","sig":null,"attributes":[{"value":"/ Creates the offset(s) for given local `NaiveDateTime` if possible.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":613608,"byte_end":613678,"line_start":440,"line_end":440,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":3189},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":613906,"byte_end":613921,"line_start":445,"line_end":445,"column_start":8,"column_end":23},"name":"from_local_date","qualname":"::offset::TimeZone::from_local_date","value":"fn from_local_date(&Self, &NaiveDate) -> LocalResult<Date<Self>>","parent":{"krate":0,"index":3172},"children":[],"decl_id":null,"docs":" Converts the local `NaiveDate` to the timezone-aware `Date` if possible.\n","sig":null,"attributes":[{"value":"/ Converts the local `NaiveDate` to the timezone-aware `Date` if possible.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":613778,"byte_end":613854,"line_start":443,"line_end":443,"column_start":5,"column_end":81}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":613859,"byte_end":613898,"line_start":444,"line_end":444,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":3191},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":614317,"byte_end":614336,"line_start":454,"line_end":454,"column_start":8,"column_end":27},"name":"from_local_datetime","qualname":"::offset::TimeZone::from_local_datetime","value":"fn from_local_datetime(&Self, &NaiveDateTime) -> LocalResult<DateTime<Self>>","parent":{"krate":0,"index":3172},"children":[],"decl_id":null,"docs":" Converts the local `NaiveDateTime` to the timezone-aware `DateTime` if possible.\n","sig":null,"attributes":[{"value":"/ Converts the local `NaiveDateTime` to the timezone-aware `DateTime` if possible.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":614181,"byte_end":614265,"line_start":452,"line_end":452,"column_start":5,"column_end":89}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":614270,"byte_end":614309,"line_start":453,"line_end":453,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":3193},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":614610,"byte_end":614630,"line_start":460,"line_end":460,"column_start":8,"column_end":28},"name":"offset_from_utc_date","qualname":"::offset::TimeZone::offset_from_utc_date","value":"fn offset_from_utc_date(&Self, &NaiveDate) -> Self::Offset","parent":{"krate":0,"index":3172},"children":[],"decl_id":null,"docs":" Creates the offset for given UTC `NaiveDate`. This cannot fail.\n","sig":null,"attributes":[{"value":"/ Creates the offset for given UTC `NaiveDate`. This cannot fail.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":614535,"byte_end":614602,"line_start":459,"line_end":459,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":3194},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":614756,"byte_end":614780,"line_start":463,"line_end":463,"column_start":8,"column_end":32},"name":"offset_from_utc_datetime","qualname":"::offset::TimeZone::offset_from_utc_datetime","value":"fn offset_from_utc_datetime(&Self, &NaiveDateTime) -> Self::Offset","parent":{"krate":0,"index":3172},"children":[],"decl_id":null,"docs":" Creates the offset for given UTC `NaiveDateTime`. This cannot fail.\n","sig":null,"attributes":[{"value":"/ Creates the offset for given UTC `NaiveDateTime`. This cannot fail.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":614677,"byte_end":614748,"line_start":462,"line_end":462,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3195},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":615031,"byte_end":615044,"line_start":468,"line_end":468,"column_start":8,"column_end":21},"name":"from_utc_date","qualname":"::offset::TimeZone::from_utc_date","value":"fn from_utc_date(&Self, &NaiveDate) -> Date<Self>","parent":{"krate":0,"index":3172},"children":[],"decl_id":null,"docs":" Converts the UTC `NaiveDate` to the local time.\n The UTC is continuous and thus this cannot fail (but can give the duplicate local time).\n","sig":null,"attributes":[{"value":"/ Converts the UTC `NaiveDate` to the local time.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":614831,"byte_end":614882,"line_start":465,"line_end":465,"column_start":5,"column_end":56}},{"value":"/ The UTC is continuous and thus this cannot fail (but can give the duplicate local time).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":614887,"byte_end":614979,"line_start":466,"line_end":466,"column_start":5,"column_end":97}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":614984,"byte_end":615023,"line_start":467,"line_end":467,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":3196},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":615361,"byte_end":615378,"line_start":475,"line_end":475,"column_start":8,"column_end":25},"name":"from_utc_datetime","qualname":"::offset::TimeZone::from_utc_datetime","value":"fn from_utc_datetime(&Self, &NaiveDateTime) -> DateTime<Self>","parent":{"krate":0,"index":3172},"children":[],"decl_id":null,"docs":" Converts the UTC `NaiveDateTime` to the local time.\n The UTC is continuous and thus this cannot fail (but can give the duplicate local time).\n","sig":null,"attributes":[{"value":"/ Converts the UTC `NaiveDateTime` to the local time.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":615157,"byte_end":615212,"line_start":472,"line_end":472,"column_start":5,"column_end":60}},{"value":"/ The UTC is continuous and thus this cannot fail (but can give the duplicate local time).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":615217,"byte_end":615309,"line_start":473,"line_end":473,"column_start":5,"column_end":97}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":615314,"byte_end":615353,"line_start":474,"line_end":474,"column_start":5,"column_end":44}}]},{"kind":"Trait","id":{"krate":0,"index":3248},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":735931,"byte_end":735942,"line_start":20,"line_end":20,"column_start":11,"column_end":22},"name":"SubsecRound","qualname":"::round::SubsecRound","value":"SubsecRound","parent":null,"children":[{"krate":0,"index":3249},{"krate":0,"index":3250}],"decl_id":null,"docs":" Extension trait for subsecond rounding or truncation to a maximum number\n of digits. Rounding can be used to decrease the error variance when\n serializing/persisting to lower precision. Truncation is the default\n behavior in Chrono display formatting.  Either can be used to guarantee\n equality (e.g. for testing) when round-tripping through a lower precision\n format.\n","sig":null,"attributes":[{"value":"/ Extension trait for subsecond rounding or truncation to a maximum number","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":735533,"byte_end":735609,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ of digits. Rounding can be used to decrease the error variance when","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":735610,"byte_end":735681,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/ serializing/persisting to lower precision. Truncation is the default","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":735682,"byte_end":735754,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/ behavior in Chrono display formatting.  Either can be used to guarantee","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":735755,"byte_end":735830,"line_start":17,"line_end":17,"column_start":1,"column_end":76}},{"value":"/ equality (e.g. for testing) when round-tripping through a lower precision","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":735831,"byte_end":735908,"line_start":18,"line_end":18,"column_start":1,"column_end":78}},{"value":"/ format.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":735909,"byte_end":735920,"line_start":19,"line_end":19,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3249},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":736472,"byte_end":736485,"line_start":32,"line_end":32,"column_start":8,"column_end":21},"name":"round_subsecs","qualname":"::round::SubsecRound::round_subsecs","value":"fn round_subsecs(Self, u16) -> Self","parent":{"krate":0,"index":3248},"children":[],"decl_id":null,"docs":" Return a copy rounded to the specified number of subsecond digits. With\n 9 or more digits, self is returned unmodified. Halfway values are\n rounded up (away from zero).","sig":null,"attributes":[{"value":"/ Return a copy rounded to the specified number of subsecond digits. With","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":735949,"byte_end":736024,"line_start":21,"line_end":21,"column_start":5,"column_end":80}},{"value":"/ 9 or more digits, self is returned unmodified. Halfway values are","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":736029,"byte_end":736098,"line_start":22,"line_end":22,"column_start":5,"column_end":74}},{"value":"/ rounded up (away from zero).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":736103,"byte_end":736135,"line_start":23,"line_end":23,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":736140,"byte_end":736143,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":736148,"byte_end":736161,"line_start":25,"line_end":25,"column_start":5,"column_end":18}},{"value":"/ ``` rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":736166,"byte_end":736178,"line_start":26,"line_end":26,"column_start":5,"column_end":17}},{"value":"/ # use chrono::{DateTime, SubsecRound, Timelike, TimeZone, Utc};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":736183,"byte_end":736250,"line_start":27,"line_end":27,"column_start":5,"column_end":72}},{"value":"/ let dt = Utc.ymd(2018, 1, 11).and_hms_milli(12, 0, 0, 154);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":736255,"byte_end":736318,"line_start":28,"line_end":28,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(dt.round_subsecs(2).nanosecond(), 150_000_000);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":736323,"byte_end":736385,"line_start":29,"line_end":29,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(dt.round_subsecs(1).nanosecond(), 200_000_000);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":736390,"byte_end":736452,"line_start":30,"line_end":30,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":736457,"byte_end":736464,"line_start":31,"line_end":31,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3250},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":736988,"byte_end":737001,"line_start":44,"line_end":44,"column_start":8,"column_end":21},"name":"trunc_subsecs","qualname":"::round::SubsecRound::trunc_subsecs","value":"fn trunc_subsecs(Self, u16) -> Self","parent":{"krate":0,"index":3248},"children":[],"decl_id":null,"docs":" Return a copy truncated to the specified number of subsecond\n digits. With 9 or more digits, self is returned unmodified.","sig":null,"attributes":[{"value":"/ Return a copy truncated to the specified number of subsecond","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":736519,"byte_end":736583,"line_start":34,"line_end":34,"column_start":5,"column_end":69}},{"value":"/ digits. With 9 or more digits, self is returned unmodified.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":736588,"byte_end":736651,"line_start":35,"line_end":35,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":736656,"byte_end":736659,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":736664,"byte_end":736677,"line_start":37,"line_end":37,"column_start":5,"column_end":18}},{"value":"/ ``` rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":736682,"byte_end":736694,"line_start":38,"line_end":38,"column_start":5,"column_end":17}},{"value":"/ # use chrono::{DateTime, SubsecRound, Timelike, TimeZone, Utc};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":736699,"byte_end":736766,"line_start":39,"line_end":39,"column_start":5,"column_end":72}},{"value":"/ let dt = Utc.ymd(2018, 1, 11).and_hms_milli(12, 0, 0, 154);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":736771,"byte_end":736834,"line_start":40,"line_end":40,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(dt.trunc_subsecs(2).nanosecond(), 150_000_000);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":736839,"byte_end":736901,"line_start":41,"line_end":41,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(dt.trunc_subsecs(1).nanosecond(), 100_000_000);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":736906,"byte_end":736968,"line_start":42,"line_end":42,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":736973,"byte_end":736980,"line_start":43,"line_end":43,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3253},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":737147,"byte_end":737160,"line_start":51,"line_end":51,"column_start":8,"column_end":21},"name":"round_subsecs","qualname":"<T as round::SubsecRound>::round_subsecs","value":"fn round_subsecs(Self, u16) -> T","parent":{"krate":0,"index":3248},"children":[],"decl_id":{"krate":0,"index":3249},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3254},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":737628,"byte_end":737641,"line_start":66,"line_end":66,"column_start":8,"column_end":21},"name":"trunc_subsecs","qualname":"<T as round::SubsecRound>::trunc_subsecs","value":"fn trunc_subsecs(Self, u16) -> T","parent":{"krate":0,"index":3248},"children":[],"decl_id":{"krate":0,"index":3250},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3256},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":738740,"byte_end":738753,"line_start":101,"line_end":101,"column_start":11,"column_end":24},"name":"DurationRound","qualname":"::round::DurationRound","value":"DurationRound: Sized","parent":null,"children":[{"krate":0,"index":3257},{"krate":0,"index":3258},{"krate":0,"index":3259}],"decl_id":null,"docs":" Extension trait for rounding or truncating a DateTime by a Duration.","sig":null,"attributes":[{"value":"/ Extension trait for rounding or truncating a DateTime by a Duration.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":738327,"byte_end":738399,"line_start":94,"line_end":94,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":738400,"byte_end":738403,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ # Limitations","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":738404,"byte_end":738421,"line_start":96,"line_end":96,"column_start":1,"column_end":18}},{"value":"/ Both rounding and truncating are done via [`Duration::num_nanoseconds`] and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":738422,"byte_end":738501,"line_start":97,"line_end":97,"column_start":1,"column_end":80}},{"value":"/ [`DateTime::timestamp_nanos`]. This means that they will fail if either the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":738502,"byte_end":738581,"line_start":98,"line_end":98,"column_start":1,"column_end":80}},{"value":"/ `Duration` or the `DateTime` are too big to represented as nanoseconds. They","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":738582,"byte_end":738662,"line_start":99,"line_end":99,"column_start":1,"column_end":81}},{"value":"/ will also fail if the `Duration` is bigger than the timestamp.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":738663,"byte_end":738729,"line_start":100,"line_end":100,"column_start":1,"column_end":67}}]},{"kind":"Type","id":{"krate":0,"index":3257},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":738866,"byte_end":738869,"line_start":104,"line_end":104,"column_start":10,"column_end":13},"name":"Err","qualname":"::round::DurationRound::Err","value":"type Err: std::error::Error;","parent":{"krate":0,"index":3256},"children":[],"decl_id":null,"docs":" Error that can occur in rounding or truncating\n","sig":null,"attributes":[{"value":"/ Error that can occur in rounding or truncating","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":738767,"byte_end":738817,"line_start":102,"line_end":102,"column_start":5,"column_end":55}},{"value":"cfg(any(feature = \"std\", test))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":738822,"byte_end":738856,"line_start":103,"line_end":103,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":3258},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":739572,"byte_end":739586,"line_start":125,"line_end":125,"column_start":8,"column_end":22},"name":"duration_round","qualname":"::round::DurationRound::duration_round","value":"fn duration_round(Self, Duration) -> Result<Self, Self::Err>","parent":{"krate":0,"index":3256},"children":[],"decl_id":null,"docs":" Return a copy rounded by Duration.","sig":null,"attributes":[{"value":"/ Return a copy rounded by Duration.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":739036,"byte_end":739074,"line_start":110,"line_end":110,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":739079,"byte_end":739082,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":739087,"byte_end":739100,"line_start":112,"line_end":112,"column_start":5,"column_end":18}},{"value":"/ ``` rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":739105,"byte_end":739117,"line_start":113,"line_end":113,"column_start":5,"column_end":17}},{"value":"/ # use chrono::{DateTime, DurationRound, Duration, TimeZone, Utc};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":739122,"byte_end":739191,"line_start":114,"line_end":114,"column_start":5,"column_end":74}},{"value":"/ let dt = Utc.ymd(2018, 1, 11).and_hms_milli(12, 0, 0, 154);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":739196,"byte_end":739259,"line_start":115,"line_end":115,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":739264,"byte_end":739279,"line_start":116,"line_end":116,"column_start":5,"column_end":20}},{"value":"/     dt.duration_round(Duration::milliseconds(10)).unwrap().to_string(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":739284,"byte_end":739359,"line_start":117,"line_end":117,"column_start":5,"column_end":80}},{"value":"/     \"2018-01-11 12:00:00.150 UTC\"","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":739364,"byte_end":739401,"line_start":118,"line_end":118,"column_start":5,"column_end":42}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":739406,"byte_end":739412,"line_start":119,"line_end":119,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":739417,"byte_end":739432,"line_start":120,"line_end":120,"column_start":5,"column_end":20}},{"value":"/     dt.duration_round(Duration::days(1)).unwrap().to_string(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":739437,"byte_end":739503,"line_start":121,"line_end":121,"column_start":5,"column_end":71}},{"value":"/     \"2018-01-12 00:00:00 UTC\"","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":739508,"byte_end":739541,"line_start":122,"line_end":122,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":739546,"byte_end":739552,"line_start":123,"line_end":123,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":739557,"byte_end":739564,"line_start":124,"line_end":124,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3259},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":740184,"byte_end":740198,"line_start":142,"line_end":142,"column_start":8,"column_end":22},"name":"duration_trunc","qualname":"::round::DurationRound::duration_trunc","value":"fn duration_trunc(Self, Duration) -> Result<Self, Self::Err>","parent":{"krate":0,"index":3256},"children":[],"decl_id":null,"docs":" Return a copy truncated by Duration.","sig":null,"attributes":[{"value":"/ Return a copy truncated by Duration.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":739646,"byte_end":739686,"line_start":127,"line_end":127,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":739691,"byte_end":739694,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":739699,"byte_end":739712,"line_start":129,"line_end":129,"column_start":5,"column_end":18}},{"value":"/ ``` rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":739717,"byte_end":739729,"line_start":130,"line_end":130,"column_start":5,"column_end":17}},{"value":"/ # use chrono::{DateTime, DurationRound, Duration, TimeZone, Utc};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":739734,"byte_end":739803,"line_start":131,"line_end":131,"column_start":5,"column_end":74}},{"value":"/ let dt = Utc.ymd(2018, 1, 11).and_hms_milli(12, 0, 0, 154);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":739808,"byte_end":739871,"line_start":132,"line_end":132,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":739876,"byte_end":739891,"line_start":133,"line_end":133,"column_start":5,"column_end":20}},{"value":"/     dt.duration_trunc(Duration::milliseconds(10)).unwrap().to_string(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":739896,"byte_end":739971,"line_start":134,"line_end":134,"column_start":5,"column_end":80}},{"value":"/     \"2018-01-11 12:00:00.150 UTC\"","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":739976,"byte_end":740013,"line_start":135,"line_end":135,"column_start":5,"column_end":42}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":740018,"byte_end":740024,"line_start":136,"line_end":136,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":740029,"byte_end":740044,"line_start":137,"line_end":137,"column_start":5,"column_end":20}},{"value":"/     dt.duration_trunc(Duration::days(1)).unwrap().to_string(),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":740049,"byte_end":740115,"line_start":138,"line_end":138,"column_start":5,"column_end":71}},{"value":"/     \"2018-01-11 00:00:00 UTC\"","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":740120,"byte_end":740153,"line_start":139,"line_end":139,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":740158,"byte_end":740164,"line_start":140,"line_end":140,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":740169,"byte_end":740176,"line_start":141,"line_end":141,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3264},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":740492,"byte_end":740506,"line_start":151,"line_end":151,"column_start":8,"column_end":22},"name":"duration_round","qualname":"<DateTime<Tz> as round::DurationRound>::duration_round","value":"fn duration_round(Self, Duration) -> Result<Self, Self::Err>","parent":{"krate":0,"index":3256},"children":[],"decl_id":{"krate":0,"index":3258},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3265},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":740635,"byte_end":740649,"line_start":155,"line_end":155,"column_start":8,"column_end":22},"name":"duration_trunc","qualname":"<DateTime<Tz> as round::DurationRound>::duration_trunc","value":"fn duration_trunc(Self, Duration) -> Result<Self, Self::Err>","parent":{"krate":0,"index":3256},"children":[],"decl_id":{"krate":0,"index":3259},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3268},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":740850,"byte_end":740864,"line_start":163,"line_end":163,"column_start":8,"column_end":22},"name":"duration_round","qualname":"<NaiveDateTime as round::DurationRound>::duration_round","value":"fn duration_round(Self, Duration) -> Result<Self, Self::Err>","parent":{"krate":0,"index":3256},"children":[],"decl_id":{"krate":0,"index":3258},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3269},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":740979,"byte_end":740993,"line_start":167,"line_end":167,"column_start":8,"column_end":22},"name":"duration_trunc","qualname":"<NaiveDateTime as round::DurationRound>::duration_trunc","value":"fn duration_trunc(Self, Duration) -> Result<Self, Self::Err>","parent":{"krate":0,"index":3256},"children":[],"decl_id":{"krate":0,"index":3259},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4333},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":743801,"byte_end":743825,"line_start":254,"line_end":254,"column_start":5,"column_end":29},"name":"DurationExceedsTimestamp","qualname":"::round::RoundingError::DurationExceedsTimestamp","value":"RoundingError::DurationExceedsTimestamp","parent":{"krate":0,"index":4332},"children":[],"decl_id":null,"docs":" Error when the Duration exceeds the Duration from or until the Unix epoch.","sig":null,"attributes":[{"value":"/ Error when the Duration exceeds the Duration from or until the Unix epoch.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":743386,"byte_end":743464,"line_start":243,"line_end":243,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":743469,"byte_end":743472,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ ``` rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":743477,"byte_end":743489,"line_start":245,"line_end":245,"column_start":5,"column_end":17}},{"value":"/ # use chrono::{DateTime, DurationRound, Duration, RoundingError, TimeZone, Utc};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":743494,"byte_end":743578,"line_start":246,"line_end":246,"column_start":5,"column_end":89}},{"value":"/ let dt = Utc.ymd(1970, 12, 12).and_hms(0, 0, 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":743583,"byte_end":743635,"line_start":247,"line_end":247,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":743640,"byte_end":743643,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":743648,"byte_end":743663,"line_start":249,"line_end":249,"column_start":5,"column_end":20}},{"value":"/     dt.duration_round(Duration::days(365)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":743668,"byte_end":743715,"line_start":250,"line_end":250,"column_start":5,"column_end":52}},{"value":"/     Err(RoundingError::DurationExceedsTimestamp),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":743720,"byte_end":743773,"line_start":251,"line_end":251,"column_start":5,"column_end":58}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":743778,"byte_end":743784,"line_start":252,"line_end":252,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":743789,"byte_end":743796,"line_start":253,"line_end":253,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4335},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":744252,"byte_end":744272,"line_start":267,"line_end":267,"column_start":5,"column_end":25},"name":"DurationExceedsLimit","qualname":"::round::RoundingError::DurationExceedsLimit","value":"RoundingError::DurationExceedsLimit","parent":{"krate":0,"index":4332},"children":[],"decl_id":null,"docs":" Error when `Duration.num_nanoseconds` exceeds the limit.","sig":null,"attributes":[{"value":"/ Error when `Duration.num_nanoseconds` exceeds the limit.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":743832,"byte_end":743892,"line_start":256,"line_end":256,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":743897,"byte_end":743900,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ ``` rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":743905,"byte_end":743917,"line_start":258,"line_end":258,"column_start":5,"column_end":17}},{"value":"/ # use chrono::{DateTime, DurationRound, Duration, RoundingError, TimeZone, Utc};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":743922,"byte_end":744006,"line_start":259,"line_end":259,"column_start":5,"column_end":89}},{"value":"/ let dt = Utc.ymd(2260, 12, 31).and_hms_nano(23, 59, 59, 1_75_500_000);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":744011,"byte_end":744085,"line_start":260,"line_end":260,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":744090,"byte_end":744093,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":744098,"byte_end":744113,"line_start":262,"line_end":262,"column_start":5,"column_end":20}},{"value":"/     dt.duration_round(Duration::days(300 * 365)),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":744118,"byte_end":744171,"line_start":263,"line_end":263,"column_start":5,"column_end":58}},{"value":"/     Err(RoundingError::DurationExceedsLimit)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":744176,"byte_end":744224,"line_start":264,"line_end":264,"column_start":5,"column_end":53}},{"value":"/ );","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":744229,"byte_end":744235,"line_start":265,"line_end":265,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":744240,"byte_end":744247,"line_start":266,"line_end":266,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4337},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":744637,"byte_end":744658,"line_start":277,"line_end":277,"column_start":5,"column_end":26},"name":"TimestampExceedsLimit","qualname":"::round::RoundingError::TimestampExceedsLimit","value":"RoundingError::TimestampExceedsLimit","parent":{"krate":0,"index":4332},"children":[],"decl_id":null,"docs":" Error when `DateTime.timestamp_nanos` exceeds the limit.","sig":null,"attributes":[{"value":"/ Error when `DateTime.timestamp_nanos` exceeds the limit.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":744279,"byte_end":744339,"line_start":269,"line_end":269,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":744344,"byte_end":744347,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ ``` rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":744352,"byte_end":744364,"line_start":271,"line_end":271,"column_start":5,"column_end":17}},{"value":"/ # use chrono::{DateTime, DurationRound, Duration, RoundingError, TimeZone, Utc};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":744369,"byte_end":744453,"line_start":272,"line_end":272,"column_start":5,"column_end":89}},{"value":"/ let dt = Utc.ymd(2300, 12, 12).and_hms(0, 0, 0);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":744458,"byte_end":744510,"line_start":273,"line_end":273,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":744515,"byte_end":744518,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(dt.duration_round(Duration::days(1)), Err(RoundingError::TimestampExceedsLimit),);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":744523,"byte_end":744620,"line_start":275,"line_end":275,"column_start":5,"column_end":102}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":744625,"byte_end":744632,"line_start":276,"line_end":276,"column_start":5,"column_end":12}}]},{"kind":"Enum","id":{"krate":0,"index":4332},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":743366,"byte_end":743379,"line_start":242,"line_end":242,"column_start":10,"column_end":23},"name":"RoundingError","qualname":"::round::RoundingError","value":"enum RoundingError {\n    DurationExceedsTimestamp,\n    DurationExceedsLimit,\n    TimestampExceedsLimit,\n}","parent":null,"children":[{"krate":0,"index":4333},{"krate":0,"index":4335},{"krate":0,"index":4337}],"decl_id":null,"docs":" An error from rounding by `Duration`","sig":null,"attributes":[{"value":"/ An error from rounding by `Duration`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":743240,"byte_end":743280,"line_start":238,"line_end":238,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":743281,"byte_end":743284,"line_start":239,"line_end":239,"column_start":1,"column_end":4}},{"value":"/ See: [`DurationRound`]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":743285,"byte_end":743311,"line_start":240,"line_end":240,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":3275},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":744708,"byte_end":744711,"line_start":281,"line_end":281,"column_start":8,"column_end":11},"name":"fmt","qualname":"<RoundingError as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10117},"children":[],"decl_id":{"krate":2,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3277},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":745325,"byte_end":745336,"line_start":299,"line_end":299,"column_start":8,"column_end":19},"name":"description","qualname":"<RoundingError as std::error::Error>::description","value":"fn description(&Self) -> &str","parent":{"krate":1,"index":2569},"children":[],"decl_id":{"krate":1,"index":2573},"docs":"","sig":null,"attributes":[{"value":"allow(deprecated)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":745297,"byte_end":745317,"line_start":298,"line_end":298,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4351},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":757713,"byte_end":757716,"line_start":16,"line_end":16,"column_start":5,"column_end":8},"name":"Mon","qualname":"::weekday::Weekday::Mon","value":"Weekday::Mon","parent":{"krate":0,"index":4350},"children":[],"decl_id":null,"docs":" Monday.\n","sig":null,"attributes":[{"value":"/ Monday.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":757697,"byte_end":757708,"line_start":15,"line_end":15,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4354},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":757743,"byte_end":757746,"line_start":18,"line_end":18,"column_start":5,"column_end":8},"name":"Tue","qualname":"::weekday::Weekday::Tue","value":"Weekday::Tue","parent":{"krate":0,"index":4350},"children":[],"decl_id":null,"docs":" Tuesday.\n","sig":null,"attributes":[{"value":"/ Tuesday.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":757726,"byte_end":757738,"line_start":17,"line_end":17,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4357},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":757775,"byte_end":757778,"line_start":20,"line_end":20,"column_start":5,"column_end":8},"name":"Wed","qualname":"::weekday::Weekday::Wed","value":"Weekday::Wed","parent":{"krate":0,"index":4350},"children":[],"decl_id":null,"docs":" Wednesday.\n","sig":null,"attributes":[{"value":"/ Wednesday.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":757756,"byte_end":757770,"line_start":19,"line_end":19,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4360},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":757806,"byte_end":757809,"line_start":22,"line_end":22,"column_start":5,"column_end":8},"name":"Thu","qualname":"::weekday::Weekday::Thu","value":"Weekday::Thu","parent":{"krate":0,"index":4350},"children":[],"decl_id":null,"docs":" Thursday.\n","sig":null,"attributes":[{"value":"/ Thursday.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":757788,"byte_end":757801,"line_start":21,"line_end":21,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4363},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":757835,"byte_end":757838,"line_start":24,"line_end":24,"column_start":5,"column_end":8},"name":"Fri","qualname":"::weekday::Weekday::Fri","value":"Weekday::Fri","parent":{"krate":0,"index":4350},"children":[],"decl_id":null,"docs":" Friday.\n","sig":null,"attributes":[{"value":"/ Friday.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":757819,"byte_end":757830,"line_start":23,"line_end":23,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4366},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":757866,"byte_end":757869,"line_start":26,"line_end":26,"column_start":5,"column_end":8},"name":"Sat","qualname":"::weekday::Weekday::Sat","value":"Weekday::Sat","parent":{"krate":0,"index":4350},"children":[],"decl_id":null,"docs":" Saturday.\n","sig":null,"attributes":[{"value":"/ Saturday.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":757848,"byte_end":757861,"line_start":25,"line_end":25,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4369},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":757895,"byte_end":757898,"line_start":28,"line_end":28,"column_start":5,"column_end":8},"name":"Sun","qualname":"::weekday::Weekday::Sun","value":"Weekday::Sun","parent":{"krate":0,"index":4350},"children":[],"decl_id":null,"docs":" Sunday.\n","sig":null,"attributes":[{"value":"/ Sunday.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":757879,"byte_end":757890,"line_start":27,"line_end":27,"column_start":5,"column_end":16}}]},{"kind":"Enum","id":{"krate":0,"index":4350},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":757683,"byte_end":757690,"line_start":14,"line_end":14,"column_start":10,"column_end":17},"name":"Weekday","qualname":"::weekday::Weekday","value":"enum Weekday { Mon = , Tue = , Wed = , Thu = , Fri = , Sat = , Sun = , }","parent":null,"children":[{"krate":0,"index":4351},{"krate":0,"index":4354},{"krate":0,"index":4357},{"krate":0,"index":4360},{"krate":0,"index":4363},{"krate":0,"index":4366},{"krate":0,"index":4369}],"decl_id":null,"docs":" The day of week.","sig":null,"attributes":[{"value":"/ The day of week.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":757217,"byte_end":757237,"line_start":6,"line_end":6,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":757238,"byte_end":757241,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The order of the days of week depends on the context.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":757242,"byte_end":757299,"line_start":8,"line_end":8,"column_start":1,"column_end":58}},{"value":"/ (This is why this type does *not* implement `PartialOrd` or `Ord` traits.)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":757300,"byte_end":757378,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"/ One should prefer `*_from_monday` or `*_from_sunday` methods to get the correct result.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":757379,"byte_end":757470,"line_start":10,"line_end":10,"column_start":1,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":3293},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":758217,"byte_end":758221,"line_start":38,"line_end":38,"column_start":12,"column_end":16},"name":"succ","qualname":"<Weekday>::succ","value":"fn succ(&Self) -> Weekday","parent":null,"children":[],"decl_id":null,"docs":" The next day in the week.","sig":null,"attributes":[{"value":"/ The next day in the week.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":757926,"byte_end":757955,"line_start":32,"line_end":32,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":757960,"byte_end":757963,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ `w`:        | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":757968,"byte_end":758039,"line_start":34,"line_end":34,"column_start":5,"column_end":76}},{"value":"/ ----------- | ----- | ----- | ----- | ----- | ----- | ----- | -----","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":758044,"byte_end":758115,"line_start":35,"line_end":35,"column_start":5,"column_end":76}},{"value":"/ `w.succ()`: | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun` | `Mon`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":758120,"byte_end":758191,"line_start":36,"line_end":36,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":758196,"byte_end":758205,"line_start":37,"line_end":37,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3294},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":758874,"byte_end":758878,"line_start":56,"line_end":56,"column_start":12,"column_end":16},"name":"pred","qualname":"<Weekday>::pred","value":"fn pred(&Self) -> Weekday","parent":null,"children":[],"decl_id":null,"docs":" The previous day in the week.","sig":null,"attributes":[{"value":"/ The previous day in the week.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":758579,"byte_end":758612,"line_start":50,"line_end":50,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":758617,"byte_end":758620,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ `w`:        | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":758625,"byte_end":758696,"line_start":52,"line_end":52,"column_start":5,"column_end":76}},{"value":"/ ----------- | ----- | ----- | ----- | ----- | ----- | ----- | -----","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":758701,"byte_end":758772,"line_start":53,"line_end":53,"column_start":5,"column_end":76}},{"value":"/ `w.pred()`: | `Sun` | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":758777,"byte_end":758848,"line_start":54,"line_end":54,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":758853,"byte_end":758862,"line_start":55,"line_end":55,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3295},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":759620,"byte_end":759638,"line_start":74,"line_end":74,"column_start":12,"column_end":30},"name":"number_from_monday","qualname":"<Weekday>::number_from_monday","value":"fn number_from_monday(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns a day-of-week number starting from Monday = 1. (ISO 8601 weekday number)","sig":null,"attributes":[{"value":"/ Returns a day-of-week number starting from Monday = 1. (ISO 8601 weekday number)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":759236,"byte_end":759320,"line_start":68,"line_end":68,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":759325,"byte_end":759328,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ `w`:                      | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":759333,"byte_end":759418,"line_start":70,"line_end":70,"column_start":5,"column_end":90}},{"value":"/ ------------------------- | ----- | ----- | ----- | ----- | ----- | ----- | -----","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":759423,"byte_end":759508,"line_start":71,"line_end":71,"column_start":5,"column_end":90}},{"value":"/ `w.number_from_monday()`: | 1     | 2     | 3     | 4     | 5     | 6     | 7","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":759513,"byte_end":759594,"line_start":72,"line_end":72,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":759599,"byte_end":759608,"line_start":73,"line_end":73,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3296},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":760273,"byte_end":760291,"line_start":92,"line_end":92,"column_start":12,"column_end":30},"name":"number_from_sunday","qualname":"<Weekday>::number_from_sunday","value":"fn number_from_sunday(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns a day-of-week number starting from Sunday = 1.","sig":null,"attributes":[{"value":"/ Returns a day-of-week number starting from Sunday = 1.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":759915,"byte_end":759973,"line_start":86,"line_end":86,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":759978,"byte_end":759981,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ `w`:                      | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":759986,"byte_end":760071,"line_start":88,"line_end":88,"column_start":5,"column_end":90}},{"value":"/ ------------------------- | ----- | ----- | ----- | ----- | ----- | ----- | -----","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":760076,"byte_end":760161,"line_start":89,"line_end":89,"column_start":5,"column_end":90}},{"value":"/ `w.number_from_sunday()`: | 2     | 3     | 4     | 5     | 6     | 7     | 1","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":760166,"byte_end":760247,"line_start":90,"line_end":90,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":760252,"byte_end":760261,"line_start":91,"line_end":91,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3297},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":760932,"byte_end":760952,"line_start":110,"line_end":110,"column_start":12,"column_end":32},"name":"num_days_from_monday","qualname":"<Weekday>::num_days_from_monday","value":"fn num_days_from_monday(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns a day-of-week number starting from Monday = 0.","sig":null,"attributes":[{"value":"/ Returns a day-of-week number starting from Monday = 0.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":760568,"byte_end":760626,"line_start":104,"line_end":104,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":760631,"byte_end":760634,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ `w`:                        | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":760639,"byte_end":760726,"line_start":106,"line_end":106,"column_start":5,"column_end":92}},{"value":"/ --------------------------- | ----- | ----- | ----- | ----- | ----- | ----- | -----","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":760731,"byte_end":760818,"line_start":107,"line_end":107,"column_start":5,"column_end":92}},{"value":"/ `w.num_days_from_monday()`: | 0     | 1     | 2     | 3     | 4     | 5     | 6","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":760823,"byte_end":760906,"line_start":108,"line_end":108,"column_start":5,"column_end":88}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":760911,"byte_end":760920,"line_start":109,"line_end":109,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3298},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":761593,"byte_end":761613,"line_start":128,"line_end":128,"column_start":12,"column_end":32},"name":"num_days_from_sunday","qualname":"<Weekday>::num_days_from_sunday","value":"fn num_days_from_sunday(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns a day-of-week number starting from Sunday = 0.","sig":null,"attributes":[{"value":"/ Returns a day-of-week number starting from Sunday = 0.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":761229,"byte_end":761287,"line_start":122,"line_end":122,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":761292,"byte_end":761295,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ `w`:                        | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":761300,"byte_end":761387,"line_start":124,"line_end":124,"column_start":5,"column_end":92}},{"value":"/ --------------------------- | ----- | ----- | ----- | ----- | ----- | ----- | -----","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":761392,"byte_end":761479,"line_start":125,"line_end":125,"column_start":5,"column_end":92}},{"value":"/ `w.num_days_from_sunday()`: | 1     | 2     | 3     | 4     | 5     | 6     | 0","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":761484,"byte_end":761567,"line_start":126,"line_end":126,"column_start":5,"column_end":88}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":761572,"byte_end":761581,"line_start":127,"line_end":127,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3300},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":761927,"byte_end":761930,"line_start":142,"line_end":142,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Weekday as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10117},"children":[],"decl_id":{"krate":2,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3302},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":762596,"byte_end":762604,"line_start":160,"line_end":160,"column_start":8,"column_end":16},"name":"from_i64","qualname":"<Weekday as num_traits::FromPrimitive>::from_i64","value":"fn from_i64(i64) -> Option<Weekday>","parent":{"krate":25,"index":337},"children":[],"decl_id":{"krate":25,"index":342},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":762579,"byte_end":762588,"line_start":159,"line_end":159,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3303},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":762972,"byte_end":762980,"line_start":174,"line_end":174,"column_start":8,"column_end":16},"name":"from_u64","qualname":"<Weekday as num_traits::FromPrimitive>::from_u64","value":"fn from_u64(u64) -> Option<Weekday>","parent":{"krate":25,"index":337},"children":[],"decl_id":{"krate":25,"index":348},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":762955,"byte_end":762964,"line_start":173,"line_end":173,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":4386},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":763440,"byte_end":763457,"line_start":190,"line_end":190,"column_start":12,"column_end":29},"name":"ParseWeekdayError","qualname":"::weekday::ParseWeekdayError","value":"ParseWeekdayError {  }","parent":null,"children":[{"krate":0,"index":4387}],"decl_id":null,"docs":" An error resulting from reading `Weekday` value with `FromStr`.\n","sig":null,"attributes":[{"value":"/ An error resulting from reading `Weekday` value with `FromStr`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":763329,"byte_end":763396,"line_start":188,"line_end":188,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3306},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":763612,"byte_end":763615,"line_start":198,"line_end":198,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ParseWeekdayError as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10117},"children":[],"decl_id":{"krate":2,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3308},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":763768,"byte_end":763771,"line_start":204,"line_end":204,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ParseWeekdayError as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3324},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":764138,"byte_end":764147,"line_start":218,"line_end":218,"column_start":12,"column_end":21},"name":"serialize","qualname":"<Weekday as serde::Serialize>::serialize","value":"fn serialize<S>(&Self, S) -> Result<S::Ok, S::Error> where S: ser::Serializer","parent":{"krate":22,"index":2149},"children":[],"decl_id":{"krate":22,"index":2150},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3337},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":764826,"byte_end":764837,"line_start":244,"line_end":244,"column_start":12,"column_end":23},"name":"deserialize","qualname":"<Weekday as serde::Deserialize>::deserialize","value":"fn deserialize<D>(D) -> Result<Self, D::Error> where D: de::Deserializer","parent":{"krate":22,"index":1600},"children":[],"decl_id":{"krate":22,"index":1602},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4398},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":767935,"byte_end":767942,"line_start":35,"line_end":35,"column_start":5,"column_end":12},"name":"January","qualname":"::month::Month::January","value":"Month::January","parent":{"krate":0,"index":4397},"children":[],"decl_id":null,"docs":" January\n","sig":null,"attributes":[{"value":"/ January","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":767919,"byte_end":767930,"line_start":34,"line_end":34,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4401},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":767969,"byte_end":767977,"line_start":37,"line_end":37,"column_start":5,"column_end":13},"name":"February","qualname":"::month::Month::February","value":"Month::February","parent":{"krate":0,"index":4397},"children":[],"decl_id":null,"docs":" February\n","sig":null,"attributes":[{"value":"/ February","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":767952,"byte_end":767964,"line_start":36,"line_end":36,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4404},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":768001,"byte_end":768006,"line_start":39,"line_end":39,"column_start":5,"column_end":10},"name":"March","qualname":"::month::Month::March","value":"Month::March","parent":{"krate":0,"index":4397},"children":[],"decl_id":null,"docs":" March\n","sig":null,"attributes":[{"value":"/ March","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":767987,"byte_end":767996,"line_start":38,"line_end":38,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4407},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":768030,"byte_end":768035,"line_start":41,"line_end":41,"column_start":5,"column_end":10},"name":"April","qualname":"::month::Month::April","value":"Month::April","parent":{"krate":0,"index":4397},"children":[],"decl_id":null,"docs":" April\n","sig":null,"attributes":[{"value":"/ April","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":768016,"byte_end":768025,"line_start":40,"line_end":40,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4410},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":768057,"byte_end":768060,"line_start":43,"line_end":43,"column_start":5,"column_end":8},"name":"May","qualname":"::month::Month::May","value":"Month::May","parent":{"krate":0,"index":4397},"children":[],"decl_id":null,"docs":" May\n","sig":null,"attributes":[{"value":"/ May","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":768045,"byte_end":768052,"line_start":42,"line_end":42,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4413},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":768083,"byte_end":768087,"line_start":45,"line_end":45,"column_start":5,"column_end":9},"name":"June","qualname":"::month::Month::June","value":"Month::June","parent":{"krate":0,"index":4397},"children":[],"decl_id":null,"docs":" June\n","sig":null,"attributes":[{"value":"/ June","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":768070,"byte_end":768078,"line_start":44,"line_end":44,"column_start":5,"column_end":13}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4416},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":768110,"byte_end":768114,"line_start":47,"line_end":47,"column_start":5,"column_end":9},"name":"July","qualname":"::month::Month::July","value":"Month::July","parent":{"krate":0,"index":4397},"children":[],"decl_id":null,"docs":" July\n","sig":null,"attributes":[{"value":"/ July","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":768097,"byte_end":768105,"line_start":46,"line_end":46,"column_start":5,"column_end":13}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4419},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":768139,"byte_end":768145,"line_start":49,"line_end":49,"column_start":5,"column_end":11},"name":"August","qualname":"::month::Month::August","value":"Month::August","parent":{"krate":0,"index":4397},"children":[],"decl_id":null,"docs":" August\n","sig":null,"attributes":[{"value":"/ August","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":768124,"byte_end":768134,"line_start":48,"line_end":48,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4422},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":768173,"byte_end":768182,"line_start":51,"line_end":51,"column_start":5,"column_end":14},"name":"September","qualname":"::month::Month::September","value":"Month::September","parent":{"krate":0,"index":4397},"children":[],"decl_id":null,"docs":" September\n","sig":null,"attributes":[{"value":"/ September","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":768155,"byte_end":768168,"line_start":50,"line_end":50,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4425},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":768208,"byte_end":768215,"line_start":53,"line_end":53,"column_start":5,"column_end":12},"name":"October","qualname":"::month::Month::October","value":"Month::October","parent":{"krate":0,"index":4397},"children":[],"decl_id":null,"docs":" October\n","sig":null,"attributes":[{"value":"/ October","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":768192,"byte_end":768203,"line_start":52,"line_end":52,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4428},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":768242,"byte_end":768250,"line_start":55,"line_end":55,"column_start":5,"column_end":13},"name":"November","qualname":"::month::Month::November","value":"Month::November","parent":{"krate":0,"index":4397},"children":[],"decl_id":null,"docs":" November\n","sig":null,"attributes":[{"value":"/ November","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":768225,"byte_end":768237,"line_start":54,"line_end":54,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4431},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":768278,"byte_end":768286,"line_start":57,"line_end":57,"column_start":5,"column_end":13},"name":"December","qualname":"::month::Month::December","value":"Month::December","parent":{"krate":0,"index":4397},"children":[],"decl_id":null,"docs":" December\n","sig":null,"attributes":[{"value":"/ December","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":768261,"byte_end":768273,"line_start":56,"line_end":56,"column_start":5,"column_end":17}}]},{"kind":"Enum","id":{"krate":0,"index":4397},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":767907,"byte_end":767912,"line_start":33,"line_end":33,"column_start":10,"column_end":15},"name":"Month","qualname":"::month::Month","value":"enum Month {\n    January = ,\n    February = ,\n    March = ,\n    April = ,\n    May = ,\n    June = ,\n    July = ,\n    August = ,\n    September = ,\n    October = ,\n    November = ,\n    December = ,\n}","parent":null,"children":[{"krate":0,"index":4398},{"krate":0,"index":4401},{"krate":0,"index":4404},{"krate":0,"index":4407},{"krate":0,"index":4410},{"krate":0,"index":4413},{"krate":0,"index":4416},{"krate":0,"index":4419},{"krate":0,"index":4422},{"krate":0,"index":4425},{"krate":0,"index":4428},{"krate":0,"index":4431}],"decl_id":null,"docs":" The month of the year.","sig":null,"attributes":[{"value":"/ The month of the year.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":766722,"byte_end":766748,"line_start":6,"line_end":6,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":766749,"byte_end":766752,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This enum is just a convenience implementation.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":766753,"byte_end":766804,"line_start":8,"line_end":8,"column_start":1,"column_end":52}},{"value":"/ The month in dates created by DateLike objects does not return this enum.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":766805,"byte_end":766882,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":766883,"byte_end":766886,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ It is possible to convert from a date to a month independently","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":766887,"byte_end":766953,"line_start":11,"line_end":11,"column_start":1,"column_end":67}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":766954,"byte_end":766961,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"/ use num_traits::FromPrimitive;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":766962,"byte_end":766996,"line_start":13,"line_end":13,"column_start":1,"column_end":35}},{"value":"/ use chrono::prelude::*;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":766997,"byte_end":767024,"line_start":14,"line_end":14,"column_start":1,"column_end":28}},{"value":"/ let date = Utc.ymd(2019, 10, 28).and_hms(9, 10, 11);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":767025,"byte_end":767081,"line_start":15,"line_end":15,"column_start":1,"column_end":57}},{"value":"/ // `2019-10-28T09:10:11Z`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":767082,"byte_end":767111,"line_start":16,"line_end":16,"column_start":1,"column_end":30}},{"value":"/ let month = Month::from_u32(date.month());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":767112,"byte_end":767158,"line_start":17,"line_end":17,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(month, Some(Month::October))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":767159,"byte_end":767202,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":767203,"byte_end":767210,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ Or from a Month to an integer usable by dates","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":767211,"byte_end":767260,"line_start":20,"line_end":20,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":767261,"byte_end":767268,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # use chrono::prelude::*;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":767269,"byte_end":767298,"line_start":22,"line_end":22,"column_start":1,"column_end":30}},{"value":"/ let month = Month::January;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":767299,"byte_end":767330,"line_start":23,"line_end":23,"column_start":1,"column_end":32}},{"value":"/ let dt = Utc.ymd(2019, month.number_from_month(), 28).and_hms(9, 10, 11);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":767331,"byte_end":767408,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ assert_eq!((dt.year(), dt.month(), dt.day()), (2019, 1, 28));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":767409,"byte_end":767474,"line_start":25,"line_end":25,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":767475,"byte_end":767482,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ Allows mapping from and to month, from 1-January to 12-December.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":767483,"byte_end":767551,"line_start":27,"line_end":27,"column_start":1,"column_end":69}},{"value":"/ Can be Serialized/Deserialized with serde","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":767552,"byte_end":767597,"line_start":28,"line_end":28,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":3351},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":768563,"byte_end":768567,"line_start":67,"line_end":67,"column_start":12,"column_end":16},"name":"succ","qualname":"<Month>::succ","value":"fn succ(&Self) -> Month","parent":null,"children":[],"decl_id":null,"docs":" The next month.","sig":null,"attributes":[{"value":"/ The next month.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":768313,"byte_end":768332,"line_start":61,"line_end":61,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":768337,"byte_end":768340,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ `m`:        | `January`  | `February` | `...` | `December`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":768345,"byte_end":768407,"line_start":63,"line_end":63,"column_start":5,"column_end":67}},{"value":"/ ----------- | ---------  | ---------- | --- | ---------","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":768412,"byte_end":768471,"line_start":64,"line_end":64,"column_start":5,"column_end":64}},{"value":"/ `m.succ()`: | `February` | `March`    | `...` | `January`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":768476,"byte_end":768537,"line_start":65,"line_end":65,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":768542,"byte_end":768551,"line_start":66,"line_end":66,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3352},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":769416,"byte_end":769420,"line_start":90,"line_end":90,"column_start":12,"column_end":16},"name":"pred","qualname":"<Month>::pred","value":"fn pred(&Self) -> Month","parent":null,"children":[],"decl_id":null,"docs":" The previous month.","sig":null,"attributes":[{"value":"/ The previous month.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":769161,"byte_end":769184,"line_start":84,"line_end":84,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":769189,"byte_end":769192,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ `m`:        | `January`  | `February` | `...` | `December`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":769197,"byte_end":769259,"line_start":86,"line_end":86,"column_start":5,"column_end":67}},{"value":"/ ----------- | ---------  | ---------- | --- | ---------","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":769264,"byte_end":769323,"line_start":87,"line_end":87,"column_start":5,"column_end":64}},{"value":"/ `m.pred()`: | `December` | `January`  | `...` | `November`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":769328,"byte_end":769390,"line_start":88,"line_end":88,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":769395,"byte_end":769404,"line_start":89,"line_end":89,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3353},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":770331,"byte_end":770348,"line_start":113,"line_end":113,"column_start":12,"column_end":29},"name":"number_from_month","qualname":"<Month>::number_from_month","value":"fn number_from_month(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns a month-of-year number starting from January = 1.","sig":null,"attributes":[{"value":"/ Returns a month-of-year number starting from January = 1.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":770014,"byte_end":770075,"line_start":107,"line_end":107,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":770080,"byte_end":770083,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ `m`:                     | `January` | `February` | `...` | `December`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":770088,"byte_end":770162,"line_start":109,"line_end":109,"column_start":5,"column_end":79}},{"value":"/ -------------------------| --------- | ---------- | --- | -----","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":770167,"byte_end":770234,"line_start":110,"line_end":110,"column_start":5,"column_end":72}},{"value":"/ `m.number_from_month()`: | 1         | 2          | `...` | 12","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":770239,"byte_end":770305,"line_start":111,"line_end":111,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":770310,"byte_end":770319,"line_start":112,"line_end":112,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3354},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":770958,"byte_end":770962,"line_start":137,"line_end":137,"column_start":12,"column_end":16},"name":"name","qualname":"<Month>::name","value":"fn name(&Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Get the name of the month","sig":null,"attributes":[{"value":"/ Get the name of the month","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":770797,"byte_end":770826,"line_start":130,"line_end":130,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":770831,"byte_end":770834,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":770839,"byte_end":770846,"line_start":132,"line_end":132,"column_start":5,"column_end":12}},{"value":"/ use chrono::Month;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":770851,"byte_end":770873,"line_start":133,"line_end":133,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":770878,"byte_end":770881,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Month::January.name(), \"January\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":770886,"byte_end":770934,"line_start":135,"line_end":135,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":770939,"byte_end":770946,"line_start":136,"line_end":136,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3356},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":771955,"byte_end":771963,"line_start":163,"line_end":163,"column_start":8,"column_end":16},"name":"from_u64","qualname":"<Month as num_traits::FromPrimitive>::from_u64","value":"fn from_u64(u64) -> Option<Month>","parent":{"krate":25,"index":337},"children":[],"decl_id":{"krate":25,"index":348},"docs":" Returns an Option<Month> from a i64, assuming a 1-index, January = 1.","sig":null,"attributes":[{"value":"/ Returns an Option<Month> from a i64, assuming a 1-index, January = 1.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":771548,"byte_end":771621,"line_start":156,"line_end":156,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":771626,"byte_end":771629,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ `Month::from_i64(n: i64)`: | `1`                  | `2`                   | ... | `12`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":771634,"byte_end":771724,"line_start":158,"line_end":158,"column_start":5,"column_end":95}},{"value":"/ ---------------------------| -------------------- | --------------------- | ... | -----","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":771729,"byte_end":771820,"line_start":159,"line_end":159,"column_start":5,"column_end":96}},{"value":"/ ``:                        | Some(Month::January) | Some(Month::February) | ... | Some(Month::December)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":771825,"byte_end":771932,"line_start":160,"line_end":160,"column_start":5,"column_end":112}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":771938,"byte_end":771947,"line_start":162,"line_end":162,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3357},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":772052,"byte_end":772060,"line_start":168,"line_end":168,"column_start":8,"column_end":16},"name":"from_i64","qualname":"<Month as num_traits::FromPrimitive>::from_i64","value":"fn from_i64(i64) -> Option<Month>","parent":{"krate":25,"index":337},"children":[],"decl_id":{"krate":25,"index":342},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":772035,"byte_end":772044,"line_start":167,"line_end":167,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3358},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":772149,"byte_end":772157,"line_start":173,"line_end":173,"column_start":8,"column_end":16},"name":"from_u32","qualname":"<Month as num_traits::FromPrimitive>::from_u32","value":"fn from_u32(u32) -> Option<Month>","parent":{"krate":25,"index":337},"children":[],"decl_id":{"krate":25,"index":347},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":772132,"byte_end":772141,"line_start":172,"line_end":172,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":4448},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":772814,"byte_end":772820,"line_start":194,"line_end":194,"column_start":12,"column_end":18},"name":"Months","qualname":"::month::Months","value":"","parent":null,"children":[],"decl_id":null,"docs":" A duration in calendar months\n","sig":null,"attributes":[{"value":"/ A duration in calendar months","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":772706,"byte_end":772739,"line_start":192,"line_end":192,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":3360},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":772921,"byte_end":772924,"line_start":198,"line_end":198,"column_start":12,"column_end":15},"name":"new","qualname":"<Months>::new","value":"fn new(u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Months` from a number of months\n","sig":null,"attributes":[{"value":"/ Construct a new `Months` from a number of months","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":772857,"byte_end":772909,"line_start":197,"line_end":197,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":4468},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":773083,"byte_end":773098,"line_start":205,"line_end":205,"column_start":12,"column_end":27},"name":"ParseMonthError","qualname":"::month::ParseMonthError","value":"ParseMonthError {  }","parent":null,"children":[{"krate":0,"index":4469}],"decl_id":null,"docs":" An error resulting from reading `<Month>` value with `FromStr`.\n","sig":null,"attributes":[{"value":"/ An error resulting from reading `<Month>` value with `FromStr`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":772972,"byte_end":773039,"line_start":203,"line_end":203,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":3362},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":773176,"byte_end":773179,"line_start":210,"line_end":210,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ParseMonthError as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3378},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":773443,"byte_end":773452,"line_start":223,"line_end":223,"column_start":12,"column_end":21},"name":"serialize","qualname":"<Month as serde::Serialize>::serialize","value":"fn serialize<S>(&Self, S) -> Result<S::Ok, S::Error> where S: ser::Serializer","parent":{"krate":22,"index":2149},"children":[],"decl_id":{"krate":22,"index":2150},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3391},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":774136,"byte_end":774147,"line_start":249,"line_end":249,"column_start":12,"column_end":23},"name":"deserialize","qualname":"<Month as serde::Deserialize>::deserialize","value":"fn deserialize<D>(D) -> Result<Self, D::Error> where D: de::Deserializer","parent":{"krate":22,"index":1600},"children":[],"decl_id":{"krate":22,"index":1602},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3411},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":777392,"byte_end":777400,"line_start":4,"line_end":4,"column_start":11,"column_end":19},"name":"Datelike","qualname":"::traits::Datelike","value":"Datelike: Sized","parent":null,"children":[{"krate":0,"index":3412},{"krate":0,"index":3413},{"krate":0,"index":3414},{"krate":0,"index":3415},{"krate":0,"index":3416},{"krate":0,"index":3417},{"krate":0,"index":3418},{"krate":0,"index":3419},{"krate":0,"index":3420},{"krate":0,"index":3421},{"krate":0,"index":3422},{"krate":0,"index":3423},{"krate":0,"index":3424},{"krate":0,"index":3425},{"krate":0,"index":3426},{"krate":0,"index":3427},{"krate":0,"index":3428},{"krate":0,"index":3429}],"decl_id":null,"docs":" The common set of methods for date component.\n","sig":null,"attributes":[{"value":"/ The common set of methods for date component.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":777332,"byte_end":777381,"line_start":3,"line_end":3,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3412},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":777518,"byte_end":777522,"line_start":6,"line_end":6,"column_start":8,"column_end":12},"name":"year","qualname":"::traits::Datelike::year","value":"fn year(&Self) -> i32","parent":{"krate":0,"index":3411},"children":[],"decl_id":null,"docs":" Returns the year number in the [calendar date](./naive/struct.NaiveDate.html#calendar-date).\n","sig":null,"attributes":[{"value":"/ Returns the year number in the [calendar date](./naive/struct.NaiveDate.html#calendar-date).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":777414,"byte_end":777510,"line_start":5,"line_end":5,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":3413},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":777731,"byte_end":777738,"line_start":11,"line_end":11,"column_start":8,"column_end":15},"name":"year_ce","qualname":"::traits::Datelike::year_ce","value":"fn year_ce(&Self) -> (bool, u32)","parent":{"krate":0,"index":3411},"children":[],"decl_id":null,"docs":" Returns the absolute year number starting from 1 with a boolean flag,\n which is false when the year predates the epoch (BCE/BC) and true otherwise (CE/AD).\n","sig":null,"attributes":[{"value":"/ Returns the absolute year number starting from 1 with a boolean flag,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":777543,"byte_end":777616,"line_start":8,"line_end":8,"column_start":5,"column_end":78}},{"value":"/ which is false when the year predates the epoch (BCE/BC) and true otherwise (CE/AD).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":777621,"byte_end":777709,"line_start":9,"line_end":9,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":777714,"byte_end":777723,"line_start":10,"line_end":10,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3414},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":778033,"byte_end":778038,"line_start":23,"line_end":23,"column_start":8,"column_end":13},"name":"month","qualname":"::traits::Datelike::month","value":"fn month(&Self) -> u32","parent":{"krate":0,"index":3411},"children":[],"decl_id":null,"docs":" Returns the month number starting from 1.","sig":null,"attributes":[{"value":"/ Returns the month number starting from 1.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":777926,"byte_end":777971,"line_start":20,"line_end":20,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":777976,"byte_end":777979,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 1 to 12.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":777984,"byte_end":778025,"line_start":22,"line_end":22,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":3415},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":778166,"byte_end":778172,"line_start":28,"line_end":28,"column_start":8,"column_end":14},"name":"month0","qualname":"::traits::Datelike::month0","value":"fn month0(&Self) -> u32","parent":{"krate":0,"index":3411},"children":[],"decl_id":null,"docs":" Returns the month number starting from 0.","sig":null,"attributes":[{"value":"/ Returns the month number starting from 0.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":778059,"byte_end":778104,"line_start":25,"line_end":25,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":778109,"byte_end":778112,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 0 to 11.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":778117,"byte_end":778158,"line_start":27,"line_end":27,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":3416},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":778343,"byte_end":778346,"line_start":33,"line_end":33,"column_start":8,"column_end":11},"name":"day","qualname":"::traits::Datelike::day","value":"fn day(&Self) -> u32","parent":{"krate":0,"index":3411},"children":[],"decl_id":null,"docs":" Returns the day of month starting from 1.","sig":null,"attributes":[{"value":"/ Returns the day of month starting from 1.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":778193,"byte_end":778238,"line_start":30,"line_end":30,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":778243,"byte_end":778246,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 1 to 31. (The last day of month differs by months.)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":778251,"byte_end":778335,"line_start":32,"line_end":32,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":3417},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":778517,"byte_end":778521,"line_start":38,"line_end":38,"column_start":8,"column_end":12},"name":"day0","qualname":"::traits::Datelike::day0","value":"fn day0(&Self) -> u32","parent":{"krate":0,"index":3411},"children":[],"decl_id":null,"docs":" Returns the day of month starting from 0.","sig":null,"attributes":[{"value":"/ Returns the day of month starting from 0.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":778367,"byte_end":778412,"line_start":35,"line_end":35,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":778417,"byte_end":778420,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 0 to 30. (The last day of month differs by months.)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":778425,"byte_end":778509,"line_start":37,"line_end":37,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":3418},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":778690,"byte_end":778697,"line_start":43,"line_end":43,"column_start":8,"column_end":15},"name":"ordinal","qualname":"::traits::Datelike::ordinal","value":"fn ordinal(&Self) -> u32","parent":{"krate":0,"index":3411},"children":[],"decl_id":null,"docs":" Returns the day of year starting from 1.","sig":null,"attributes":[{"value":"/ Returns the day of year starting from 1.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":778542,"byte_end":778586,"line_start":40,"line_end":40,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":778591,"byte_end":778594,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 1 to 366. (The last day of year differs by years.)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":778599,"byte_end":778682,"line_start":42,"line_end":42,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":3419},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":778866,"byte_end":778874,"line_start":48,"line_end":48,"column_start":8,"column_end":16},"name":"ordinal0","qualname":"::traits::Datelike::ordinal0","value":"fn ordinal0(&Self) -> u32","parent":{"krate":0,"index":3411},"children":[],"decl_id":null,"docs":" Returns the day of year starting from 0.","sig":null,"attributes":[{"value":"/ Returns the day of year starting from 0.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":778718,"byte_end":778762,"line_start":45,"line_end":45,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":778767,"byte_end":778770,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 0 to 365. (The last day of year differs by years.)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":778775,"byte_end":778858,"line_start":47,"line_end":47,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":3420},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":778931,"byte_end":778938,"line_start":51,"line_end":51,"column_start":8,"column_end":15},"name":"weekday","qualname":"::traits::Datelike::weekday","value":"fn weekday(&Self) -> Weekday","parent":{"krate":0,"index":3411},"children":[],"decl_id":null,"docs":" Returns the day of week.\n","sig":null,"attributes":[{"value":"/ Returns the day of week.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":778895,"byte_end":778923,"line_start":50,"line_end":50,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":3421},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":778996,"byte_end":779004,"line_start":54,"line_end":54,"column_start":8,"column_end":16},"name":"iso_week","qualname":"::traits::Datelike::iso_week","value":"fn iso_week(&Self) -> IsoWeek","parent":{"krate":0,"index":3411},"children":[],"decl_id":null,"docs":" Returns the ISO week.\n","sig":null,"attributes":[{"value":"/ Returns the ISO week.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":778963,"byte_end":778988,"line_start":53,"line_end":53,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3422},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":779162,"byte_end":779171,"line_start":59,"line_end":59,"column_start":8,"column_end":17},"name":"with_year","qualname":"::traits::Datelike::with_year","value":"fn with_year(&Self, i32) -> Option<Self>","parent":{"krate":0,"index":3411},"children":[],"decl_id":null,"docs":" Makes a new value with the year number changed.","sig":null,"attributes":[{"value":"/ Makes a new value with the year number changed.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":779029,"byte_end":779080,"line_start":56,"line_end":56,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":779085,"byte_end":779088,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting value would be invalid.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":779093,"byte_end":779154,"line_start":58,"line_end":58,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3423},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":779364,"byte_end":779374,"line_start":64,"line_end":64,"column_start":8,"column_end":18},"name":"with_month","qualname":"::traits::Datelike::with_month","value":"fn with_month(&Self, u32) -> Option<Self>","parent":{"krate":0,"index":3411},"children":[],"decl_id":null,"docs":" Makes a new value with the month number (starting from 1) changed.","sig":null,"attributes":[{"value":"/ Makes a new value with the month number (starting from 1) changed.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":779212,"byte_end":779282,"line_start":61,"line_end":61,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":779287,"byte_end":779290,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting value would be invalid.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":779295,"byte_end":779356,"line_start":63,"line_end":63,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3424},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":779568,"byte_end":779579,"line_start":69,"line_end":69,"column_start":8,"column_end":19},"name":"with_month0","qualname":"::traits::Datelike::with_month0","value":"fn with_month0(&Self, u32) -> Option<Self>","parent":{"krate":0,"index":3411},"children":[],"decl_id":null,"docs":" Makes a new value with the month number (starting from 0) changed.","sig":null,"attributes":[{"value":"/ Makes a new value with the month number (starting from 0) changed.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":779416,"byte_end":779486,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":779491,"byte_end":779494,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting value would be invalid.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":779499,"byte_end":779560,"line_start":68,"line_end":68,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3425},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":779774,"byte_end":779782,"line_start":74,"line_end":74,"column_start":8,"column_end":16},"name":"with_day","qualname":"::traits::Datelike::with_day","value":"fn with_day(&Self, u32) -> Option<Self>","parent":{"krate":0,"index":3411},"children":[],"decl_id":null,"docs":" Makes a new value with the day of month (starting from 1) changed.","sig":null,"attributes":[{"value":"/ Makes a new value with the day of month (starting from 1) changed.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":779622,"byte_end":779692,"line_start":71,"line_end":71,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":779697,"byte_end":779700,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting value would be invalid.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":779705,"byte_end":779766,"line_start":73,"line_end":73,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3426},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":779974,"byte_end":779983,"line_start":79,"line_end":79,"column_start":8,"column_end":17},"name":"with_day0","qualname":"::traits::Datelike::with_day0","value":"fn with_day0(&Self, u32) -> Option<Self>","parent":{"krate":0,"index":3411},"children":[],"decl_id":null,"docs":" Makes a new value with the day of month (starting from 0) changed.","sig":null,"attributes":[{"value":"/ Makes a new value with the day of month (starting from 0) changed.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":779822,"byte_end":779892,"line_start":76,"line_end":76,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":779897,"byte_end":779900,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting value would be invalid.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":779905,"byte_end":779966,"line_start":78,"line_end":78,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3427},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":780175,"byte_end":780187,"line_start":84,"line_end":84,"column_start":8,"column_end":20},"name":"with_ordinal","qualname":"::traits::Datelike::with_ordinal","value":"fn with_ordinal(&Self, u32) -> Option<Self>","parent":{"krate":0,"index":3411},"children":[],"decl_id":null,"docs":" Makes a new value with the day of year (starting from 1) changed.","sig":null,"attributes":[{"value":"/ Makes a new value with the day of year (starting from 1) changed.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":780024,"byte_end":780093,"line_start":81,"line_end":81,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":780098,"byte_end":780101,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting value would be invalid.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":780106,"byte_end":780167,"line_start":83,"line_end":83,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3428},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":780382,"byte_end":780395,"line_start":89,"line_end":89,"column_start":8,"column_end":21},"name":"with_ordinal0","qualname":"::traits::Datelike::with_ordinal0","value":"fn with_ordinal0(&Self, u32) -> Option<Self>","parent":{"krate":0,"index":3411},"children":[],"decl_id":null,"docs":" Makes a new value with the day of year (starting from 0) changed.","sig":null,"attributes":[{"value":"/ Makes a new value with the day of year (starting from 0) changed.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":780231,"byte_end":780300,"line_start":86,"line_end":86,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":780305,"byte_end":780308,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting value would be invalid.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":780313,"byte_end":780374,"line_start":88,"line_end":88,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3429},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":780954,"byte_end":780970,"line_start":103,"line_end":103,"column_start":8,"column_end":24},"name":"num_days_from_ce","qualname":"::traits::Datelike::num_days_from_ce","value":"fn num_days_from_ce(&Self) -> i32","parent":{"krate":0,"index":3411},"children":[],"decl_id":null,"docs":" Counts the days in the proleptic Gregorian calendar, with January 1, Year 1 (CE) as day 1.","sig":null,"attributes":[{"value":"/ Counts the days in the proleptic Gregorian calendar, with January 1, Year 1 (CE) as day 1.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":780440,"byte_end":780534,"line_start":91,"line_end":91,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":780539,"byte_end":780542,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":780547,"byte_end":780561,"line_start":93,"line_end":93,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":780566,"byte_end":780569,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":780574,"byte_end":780581,"line_start":95,"line_end":95,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":780586,"byte_end":780624,"line_start":96,"line_end":96,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":780629,"byte_end":780632,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(1970, 1, 1).num_days_from_ce(), 719_163);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":780637,"byte_end":780713,"line_start":98,"line_end":98,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2, 1, 1).num_days_from_ce(), 366);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":780718,"byte_end":780787,"line_start":99,"line_end":99,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(NaiveDate::from_ymd(1, 1, 1).num_days_from_ce(), 1);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":780792,"byte_end":780859,"line_start":100,"line_end":100,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(NaiveDate::from_ymd(0, 1, 1).num_days_from_ce(), -365);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":780864,"byte_end":780934,"line_start":101,"line_end":101,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":780939,"byte_end":780946,"line_start":102,"line_end":102,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":3430},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":781628,"byte_end":781636,"line_start":122,"line_end":122,"column_start":11,"column_end":19},"name":"Timelike","qualname":"::traits::Timelike","value":"Timelike: Sized","parent":null,"children":[{"krate":0,"index":3431},{"krate":0,"index":3432},{"krate":0,"index":3433},{"krate":0,"index":3434},{"krate":0,"index":3435},{"krate":0,"index":3436},{"krate":0,"index":3437},{"krate":0,"index":3438},{"krate":0,"index":3439},{"krate":0,"index":3440}],"decl_id":null,"docs":" The common set of methods for time component.\n","sig":null,"attributes":[{"value":"/ The common set of methods for time component.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":781568,"byte_end":781617,"line_start":121,"line_end":121,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3431},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":781699,"byte_end":781703,"line_start":124,"line_end":124,"column_start":8,"column_end":12},"name":"hour","qualname":"::traits::Timelike::hour","value":"fn hour(&Self) -> u32","parent":{"krate":0,"index":3430},"children":[],"decl_id":null,"docs":" Returns the hour number from 0 to 23.\n","sig":null,"attributes":[{"value":"/ Returns the hour number from 0 to 23.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":781650,"byte_end":781691,"line_start":123,"line_end":123,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":3432},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":781854,"byte_end":781860,"line_start":129,"line_end":129,"column_start":8,"column_end":14},"name":"hour12","qualname":"::traits::Timelike::hour12","value":"fn hour12(&Self) -> (bool, u32)","parent":{"krate":0,"index":3430},"children":[],"decl_id":null,"docs":" Returns the hour number from 1 to 12 with a boolean flag,\n which is false for AM and true for PM.\n","sig":null,"attributes":[{"value":"/ Returns the hour number from 1 to 12 with a boolean flag,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":781724,"byte_end":781785,"line_start":126,"line_end":126,"column_start":5,"column_end":66}},{"value":"/ which is false for AM and true for PM.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":781790,"byte_end":781832,"line_start":127,"line_end":127,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":781837,"byte_end":781846,"line_start":128,"line_end":128,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3433},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":782104,"byte_end":782110,"line_start":139,"line_end":139,"column_start":8,"column_end":14},"name":"minute","qualname":"::traits::Timelike::minute","value":"fn minute(&Self) -> u32","parent":{"krate":0,"index":3430},"children":[],"decl_id":null,"docs":" Returns the minute number from 0 to 59.\n","sig":null,"attributes":[{"value":"/ Returns the minute number from 0 to 59.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":782053,"byte_end":782096,"line_start":138,"line_end":138,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3434},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":782182,"byte_end":782188,"line_start":142,"line_end":142,"column_start":8,"column_end":14},"name":"second","qualname":"::traits::Timelike::second","value":"fn second(&Self) -> u32","parent":{"krate":0,"index":3430},"children":[],"decl_id":null,"docs":" Returns the second number from 0 to 59.\n","sig":null,"attributes":[{"value":"/ Returns the second number from 0 to 59.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":782131,"byte_end":782174,"line_start":141,"line_end":141,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3435},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":782431,"byte_end":782441,"line_start":147,"line_end":147,"column_start":8,"column_end":18},"name":"nanosecond","qualname":"::traits::Timelike::nanosecond","value":"fn nanosecond(&Self) -> u32","parent":{"krate":0,"index":3430},"children":[],"decl_id":null,"docs":" Returns the number of nanoseconds since the whole non-leap second.\n The range from 1,000,000,000 to 1,999,999,999 represents\n the [leap second](./naive/struct.NaiveTime.html#leap-second-handling).\n","sig":null,"attributes":[{"value":"/ Returns the number of nanoseconds since the whole non-leap second.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":782209,"byte_end":782279,"line_start":144,"line_end":144,"column_start":5,"column_end":75}},{"value":"/ The range from 1,000,000,000 to 1,999,999,999 represents","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":782284,"byte_end":782344,"line_start":145,"line_end":145,"column_start":5,"column_end":65}},{"value":"/ the [leap second](./naive/struct.NaiveTime.html#leap-second-handling).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":782349,"byte_end":782423,"line_start":146,"line_end":146,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":3436},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":782595,"byte_end":782604,"line_start":152,"line_end":152,"column_start":8,"column_end":17},"name":"with_hour","qualname":"::traits::Timelike::with_hour","value":"fn with_hour(&Self, u32) -> Option<Self>","parent":{"krate":0,"index":3430},"children":[],"decl_id":null,"docs":" Makes a new value with the hour number changed.","sig":null,"attributes":[{"value":"/ Makes a new value with the hour number changed.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":782462,"byte_end":782513,"line_start":149,"line_end":149,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":782518,"byte_end":782521,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting value would be invalid.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":782526,"byte_end":782587,"line_start":151,"line_end":151,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3437},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":782780,"byte_end":782791,"line_start":157,"line_end":157,"column_start":8,"column_end":19},"name":"with_minute","qualname":"::traits::Timelike::with_minute","value":"fn with_minute(&Self, u32) -> Option<Self>","parent":{"krate":0,"index":3430},"children":[],"decl_id":null,"docs":" Makes a new value with the minute number changed.","sig":null,"attributes":[{"value":"/ Makes a new value with the minute number changed.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":782645,"byte_end":782698,"line_start":154,"line_end":154,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":782703,"byte_end":782706,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting value would be invalid.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":782711,"byte_end":782772,"line_start":156,"line_end":156,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3438},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":783078,"byte_end":783089,"line_start":164,"line_end":164,"column_start":8,"column_end":19},"name":"with_second","qualname":"::traits::Timelike::with_second","value":"fn with_second(&Self, u32) -> Option<Self>","parent":{"krate":0,"index":3430},"children":[],"decl_id":null,"docs":" Makes a new value with the second number changed.","sig":null,"attributes":[{"value":"/ Makes a new value with the second number changed.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":782831,"byte_end":782884,"line_start":159,"line_end":159,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":782889,"byte_end":782892,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting value would be invalid.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":782897,"byte_end":782958,"line_start":161,"line_end":161,"column_start":5,"column_end":66}},{"value":"/ As with the [`second`](#tymethod.second) method,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":782963,"byte_end":783015,"line_start":162,"line_end":162,"column_start":5,"column_end":57}},{"value":"/ the input range is restricted to 0 through 59.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":783020,"byte_end":783070,"line_start":163,"line_end":163,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":3439},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":783422,"byte_end":783437,"line_start":171,"line_end":171,"column_start":8,"column_end":23},"name":"with_nanosecond","qualname":"::traits::Timelike::with_nanosecond","value":"fn with_nanosecond(&Self, u32) -> Option<Self>","parent":{"krate":0,"index":3430},"children":[],"decl_id":null,"docs":" Makes a new value with nanoseconds since the whole non-leap second changed.","sig":null,"attributes":[{"value":"/ Makes a new value with nanoseconds since the whole non-leap second changed.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":783129,"byte_end":783208,"line_start":166,"line_end":166,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":783213,"byte_end":783216,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting value would be invalid.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":783221,"byte_end":783282,"line_start":168,"line_end":168,"column_start":5,"column_end":66}},{"value":"/ As with the [`nanosecond`](#tymethod.nanosecond) method,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":783287,"byte_end":783347,"line_start":169,"line_end":169,"column_start":5,"column_end":65}},{"value":"/ the input range can exceed 1,000,000,000 for leap seconds.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":783352,"byte_end":783414,"line_start":170,"line_end":170,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3440},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":783566,"byte_end":783591,"line_start":175,"line_end":175,"column_start":8,"column_end":33},"name":"num_seconds_from_midnight","qualname":"::traits::Timelike::num_seconds_from_midnight","value":"fn num_seconds_from_midnight(&Self) -> u32","parent":{"krate":0,"index":3430},"children":[],"decl_id":null,"docs":" Returns the number of non-leap seconds past the last midnight.\n","sig":null,"attributes":[{"value":"/ Returns the number of non-leap seconds past the last midnight.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":783478,"byte_end":783544,"line_start":173,"line_end":173,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":783549,"byte_end":783558,"line_start":174,"line_end":174,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":3448},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":22650,"byte_end":22655,"line_start":518,"line_end":518,"column_start":9,"column_end":14},"name":"serde","qualname":"::serde","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","parent":null,"children":[{"krate":0,"index":3449}],"decl_id":null,"docs":" Serialization/Deserialization in alternate formats","sig":null,"attributes":[{"value":"/ Serialization/Deserialization in alternate formats","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":22278,"byte_end":22332,"line_start":509,"line_end":509,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":22333,"byte_end":22336,"line_start":510,"line_end":510,"column_start":1,"column_end":4}},{"value":"/ The various modules in here are intended to be used with serde's [`with`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":22337,"byte_end":22413,"line_start":511,"line_end":511,"column_start":1,"column_end":77}},{"value":"/ annotation][1] to serialize as something other than the default [RFC","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":22414,"byte_end":22486,"line_start":512,"line_end":512,"column_start":1,"column_end":73}},{"value":"/ 3339][2] format.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":22487,"byte_end":22507,"line_start":513,"line_end":513,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":22508,"byte_end":22511,"line_start":514,"line_end":514,"column_start":1,"column_end":4}},{"value":"/ [1]: https://serde.rs/attributes.html#field-attributes","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":22512,"byte_end":22570,"line_start":515,"line_end":515,"column_start":1,"column_end":59}},{"value":"/ [2]: https://tools.ietf.org/html/rfc3339","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":22571,"byte_end":22615,"line_start":516,"line_end":516,"column_start":1,"column_end":45}},{"value":"cfg(feature = \"serde\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":22616,"byte_end":22641,"line_start":517,"line_end":517,"column_start":1,"column_end":26}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":25800,"byte_end":25804,"line_start":72,"line_end":72,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":34496,"byte_end":34500,"line_start":310,"line_end":310,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":36592,"byte_end":36596,"line_start":378,"line_end":378,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":190},{"krate":0,"index":192},{"krate":0,"index":194},{"krate":0,"index":196},{"krate":0,"index":198},{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":38431,"byte_end":38435,"line_start":453,"line_end":453,"column_start":29,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":38515,"byte_end":38519,"line_start":454,"line_end":454,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":38624,"byte_end":38628,"line_start":456,"line_end":456,"column_start":60,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":38748,"byte_end":38752,"line_start":462,"line_end":462,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":38795,"byte_end":38799,"line_start":464,"line_end":464,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":38951,"byte_end":38955,"line_start":470,"line_end":470,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":39090,"byte_end":39094,"line_start":476,"line_end":476,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":39233,"byte_end":39237,"line_start":482,"line_end":482,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":224},{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":39467,"byte_end":39471,"line_start":491,"line_end":491,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":39684,"byte_end":39688,"line_start":498,"line_end":498,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":231},{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":39918,"byte_end":39922,"line_start":507,"line_end":507,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":40132,"byte_end":40136,"line_start":514,"line_end":514,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":238},{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":40321,"byte_end":40325,"line_start":523,"line_end":523,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":40499,"byte_end":40503,"line_start":529,"line_end":529,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":245}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":84097,"byte_end":84105,"line_start":30,"line_end":30,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":400}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":84353,"byte_end":84366,"line_start":39,"line_end":39,"column_start":50,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":84699,"byte_end":84714,"line_start":52,"line_end":52,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":85370,"byte_end":85378,"line_start":74,"line_end":74,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":420}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":85800,"byte_end":85808,"line_start":89,"line_end":89,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":424}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":86329,"byte_end":86337,"line_start":106,"line_end":106,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":429}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":89388,"byte_end":89415,"line_start":207,"line_end":207,"column_start":36,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":93386,"byte_end":93419,"line_start":334,"line_end":334,"column_start":36,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":507},{"krate":0,"index":509}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":97156,"byte_end":97184,"line_start":458,"line_end":458,"column_start":36,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":550}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":101164,"byte_end":101198,"line_start":584,"line_end":584,"column_start":36,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":582},{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":586},{"krate":0,"index":588}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":104956,"byte_end":104984,"line_start":708,"line_end":708,"column_start":36,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":630}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":109433,"byte_end":109467,"line_start":844,"line_end":844,"column_start":36,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":664},{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":668},{"krate":0,"index":670}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":113079,"byte_end":113102,"line_start":968,"line_end":968,"column_start":36,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":707},{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":711}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":116742,"byte_end":116771,"line_start":1088,"line_end":1088,"column_start":36,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":743},{"krate":0,"index":744},{"krate":0,"index":745},{"krate":0,"index":747},{"krate":0,"index":749}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":47068,"byte_end":47076,"line_start":98,"line_end":98,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":755},{"krate":0,"index":756},{"krate":0,"index":757},{"krate":0,"index":758},{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":767},{"krate":0,"index":768},{"krate":0,"index":769},{"krate":0,"index":771},{"krate":0,"index":772},{"krate":0,"index":773},{"krate":0,"index":775},{"krate":0,"index":776},{"krate":0,"index":777},{"krate":0,"index":778},{"krate":0,"index":779}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":57187,"byte_end":57195,"line_start":384,"line_end":384,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":781}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":57339,"byte_end":57347,"line_start":391,"line_end":391,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":783}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":57469,"byte_end":57477,"line_start":397,"line_end":397,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":785}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":57712,"byte_end":57720,"line_start":404,"line_end":404,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":787}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":58226,"byte_end":58234,"line_start":416,"line_end":416,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":789}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":58644,"byte_end":58652,"line_start":426,"line_end":426,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":791}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":59104,"byte_end":59112,"line_start":438,"line_end":438,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":793}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":59560,"byte_end":59568,"line_start":450,"line_end":450,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":795}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":60006,"byte_end":60014,"line_start":462,"line_end":462,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":797}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":60730,"byte_end":60738,"line_start":480,"line_end":480,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":803},{"krate":0,"index":805},{"krate":0,"index":807}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":63367,"byte_end":63375,"line_start":542,"line_end":542,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":810},{"krate":0,"index":812},{"krate":0,"index":814},{"krate":0,"index":821},{"krate":0,"index":825}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":69018,"byte_end":69026,"line_start":695,"line_end":695,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":829},{"krate":0,"index":830},{"krate":0,"index":831},{"krate":0,"index":832},{"krate":0,"index":833},{"krate":0,"index":834},{"krate":0,"index":835},{"krate":0,"index":836},{"krate":0,"index":837},{"krate":0,"index":838},{"krate":0,"index":840},{"krate":0,"index":842},{"krate":0,"index":844},{"krate":0,"index":846},{"krate":0,"index":848},{"krate":0,"index":850}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":70883,"byte_end":70891,"line_start":769,"line_end":769,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":854},{"krate":0,"index":855},{"krate":0,"index":856},{"krate":0,"index":857},{"krate":0,"index":858},{"krate":0,"index":860},{"krate":0,"index":862},{"krate":0,"index":864}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":71931,"byte_end":71939,"line_start":809,"line_end":809,"column_start":29,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":72019,"byte_end":72027,"line_start":810,"line_end":810,"column_start":36,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":72136,"byte_end":72144,"line_start":812,"line_end":812,"column_start":64,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":873}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":72276,"byte_end":72284,"line_start":818,"line_end":818,"column_start":27,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":72357,"byte_end":72365,"line_start":820,"line_end":820,"column_start":65,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":879}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":73104,"byte_end":73112,"line_start":841,"line_end":841,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":882}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":73259,"byte_end":73267,"line_start":847,"line_end":847,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":885}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":73410,"byte_end":73418,"line_start":853,"line_end":853,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":889},{"krate":0,"index":890}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":73660,"byte_end":73668,"line_start":862,"line_end":862,"column_start":47,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":893}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":73987,"byte_end":73995,"line_start":872,"line_end":872,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":896},{"krate":0,"index":897}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":74237,"byte_end":74245,"line_start":881,"line_end":881,"column_start":47,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":900}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":74564,"byte_end":74572,"line_start":891,"line_end":891,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":903},{"krate":0,"index":904}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":74761,"byte_end":74769,"line_start":900,"line_end":900,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":907}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":74943,"byte_end":74951,"line_start":906,"line_end":906,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":910}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":75584,"byte_end":75592,"line_start":926,"line_end":926,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":912},{"krate":0,"index":913}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":76266,"byte_end":76274,"line_start":946,"line_end":946,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":916},{"krate":0,"index":917}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":76519,"byte_end":76527,"line_start":955,"line_end":955,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":920}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":77179,"byte_end":77187,"line_start":975,"line_end":975,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":922}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":77386,"byte_end":77396,"line_start":982,"line_end":982,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":925}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":124184,"byte_end":124199,"line_start":157,"line_end":157,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1012}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":124289,"byte_end":124304,"line_start":163,"line_end":163,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1014}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":124410,"byte_end":124425,"line_start":169,"line_end":169,"column_start":13,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":124450,"byte_end":124465,"line_start":171,"line_end":171,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1017}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":130447,"byte_end":130457,"line_start":339,"line_end":339,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1026}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":132005,"byte_end":132015,"line_start":385,"line_end":385,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1030}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":132797,"byte_end":132807,"line_start":401,"line_end":401,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1032}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":159053,"byte_end":159059,"line_start":128,"line_end":128,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1162},{"krate":0,"index":1163},{"krate":0,"index":1164},{"krate":0,"index":1165},{"krate":0,"index":1166},{"krate":0,"index":1167},{"krate":0,"index":1168},{"krate":0,"index":1169},{"krate":0,"index":1170},{"krate":0,"index":1171},{"krate":0,"index":1172},{"krate":0,"index":1173},{"krate":0,"index":1174},{"krate":0,"index":1175},{"krate":0,"index":1176},{"krate":0,"index":1177},{"krate":0,"index":1178},{"krate":0,"index":1179},{"krate":0,"index":1180},{"krate":0,"index":1181},{"krate":0,"index":1182},{"krate":0,"index":1183},{"krate":0,"index":1184},{"krate":0,"index":1192},{"krate":0,"index":1193},{"krate":0,"index":1204},{"krate":0,"index":1205},{"krate":0,"index":1206}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parse.rs","byte_start":229101,"byte_end":229109,"line_start":478,"line_end":478,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1320},{"krate":0,"index":1321}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/strftime.rs","byte_start":279856,"byte_end":279869,"line_start":213,"line_end":213,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1417},{"krate":0,"index":1418}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/strftime.rs","byte_start":281256,"byte_end":281269,"line_start":256,"line_end":256,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1424},{"krate":0,"index":1425}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":148344,"byte_end":148357,"line_start":764,"line_end":764,"column_start":62,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":1435},{"krate":0,"index":1436}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":150352,"byte_end":150365,"line_start":827,"line_end":827,"column_start":79,"column_end":92},"value":"","parent":null,"children":[{"krate":0,"index":1442}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":151646,"byte_end":151653,"line_start":873,"line_end":873,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1444},{"krate":0,"index":1445}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":153605,"byte_end":153610,"line_start":947,"line_end":947,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1447},{"krate":0,"index":1448}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":301405,"byte_end":301414,"line_start":62,"line_end":62,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1567},{"krate":0,"index":1568},{"krate":0,"index":1569}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":307153,"byte_end":307162,"line_start":207,"line_end":207,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1573},{"krate":0,"index":1574},{"krate":0,"index":1575},{"krate":0,"index":1576},{"krate":0,"index":1577},{"krate":0,"index":1578},{"krate":0,"index":1579},{"krate":0,"index":1580},{"krate":0,"index":1581},{"krate":0,"index":1582},{"krate":0,"index":1583},{"krate":0,"index":1584},{"krate":0,"index":1585},{"krate":0,"index":1586},{"krate":0,"index":1587},{"krate":0,"index":1588},{"krate":0,"index":1589},{"krate":0,"index":1590},{"krate":0,"index":1591},{"krate":0,"index":1593},{"krate":0,"index":1594},{"krate":0,"index":1596},{"krate":0,"index":1597},{"krate":0,"index":1599},{"krate":0,"index":1600},{"krate":0,"index":1602},{"krate":0,"index":1603},{"krate":0,"index":1604},{"krate":0,"index":1605},{"krate":0,"index":1606},{"krate":0,"index":1607},{"krate":0,"index":1609},{"krate":0,"index":1610},{"krate":0,"index":1612},{"krate":0,"index":1613},{"krate":0,"index":1614},{"krate":0,"index":1615},{"krate":0,"index":1619},{"krate":0,"index":1621},{"krate":0,"index":1622},{"krate":0,"index":1623},{"krate":0,"index":1624},{"krate":0,"index":1625}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":348448,"byte_end":348457,"line_start":1280,"line_end":1280,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1627},{"krate":0,"index":1628},{"krate":0,"index":1629},{"krate":0,"index":1630},{"krate":0,"index":1631},{"krate":0,"index":1632},{"krate":0,"index":1633},{"krate":0,"index":1634},{"krate":0,"index":1635},{"krate":0,"index":1636},{"krate":0,"index":1637},{"krate":0,"index":1638},{"krate":0,"index":1639},{"krate":0,"index":1640},{"krate":0,"index":1641},{"krate":0,"index":1642}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":360673,"byte_end":360682,"line_start":1644,"line_end":1644,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1644},{"krate":0,"index":1645}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":360901,"byte_end":360910,"line_start":1653,"line_end":1653,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1647}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":361037,"byte_end":361046,"line_start":1660,"line_end":1660,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1649},{"krate":0,"index":1650}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":362052,"byte_end":362061,"line_start":1688,"line_end":1688,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1652},{"krate":0,"index":1653}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":364032,"byte_end":364041,"line_start":1736,"line_end":1736,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1655},{"krate":0,"index":1656}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":364260,"byte_end":364269,"line_start":1745,"line_end":1745,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1658}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":365445,"byte_end":365454,"line_start":1776,"line_end":1776,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1660},{"krate":0,"index":1661}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":365807,"byte_end":365828,"line_start":1791,"line_end":1791,"column_start":19,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1663},{"krate":0,"index":1664},{"krate":0,"index":1665}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":366429,"byte_end":366450,"line_start":1811,"line_end":1811,"column_start":28,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":366484,"byte_end":366505,"line_start":1813,"line_end":1813,"column_start":30,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1668}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":366886,"byte_end":366908,"line_start":1829,"line_end":1829,"column_start":19,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1670},{"krate":0,"index":1671},{"krate":0,"index":1672}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":367435,"byte_end":367457,"line_start":1847,"line_end":1847,"column_start":28,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":367491,"byte_end":367513,"line_start":1849,"line_end":1849,"column_start":30,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1675}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":368825,"byte_end":368834,"line_start":1886,"line_end":1886,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1677}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":370090,"byte_end":370099,"line_start":1921,"line_end":1921,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1679}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":370699,"byte_end":370708,"line_start":1943,"line_end":1943,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1681},{"krate":0,"index":1682}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":371543,"byte_end":371552,"line_start":1974,"line_end":1974,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1685}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":375023,"byte_end":375032,"line_start":2069,"line_end":2069,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1701}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":375308,"byte_end":375321,"line_start":2078,"line_end":2078,"column_start":54,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":1710}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":375623,"byte_end":375639,"line_start":2090,"line_end":2090,"column_start":36,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1715},{"krate":0,"index":1716},{"krate":0,"index":1717}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":376308,"byte_end":376317,"line_start":2114,"line_end":2114,"column_start":40,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1721}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":467204,"byte_end":467217,"line_start":11,"line_end":11,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1835}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":467461,"byte_end":467474,"line_start":20,"line_end":20,"column_start":50,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1844}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":467744,"byte_end":467764,"line_start":32,"line_end":32,"column_start":32,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1849},{"krate":0,"index":1850},{"krate":0,"index":1851}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":468132,"byte_end":468145,"line_start":47,"line_end":47,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1855}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":471159,"byte_end":471186,"line_start":146,"line_end":146,"column_start":36,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1883},{"krate":0,"index":1884},{"krate":0,"index":1885},{"krate":0,"index":1888}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":475173,"byte_end":475206,"line_start":269,"line_end":269,"column_start":36,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":1917},{"krate":0,"index":1918},{"krate":0,"index":1919},{"krate":0,"index":1921},{"krate":0,"index":1923}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":478946,"byte_end":478974,"line_start":392,"line_end":392,"column_start":36,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":1951},{"krate":0,"index":1952},{"krate":0,"index":1953},{"krate":0,"index":1956}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":483005,"byte_end":483039,"line_start":518,"line_end":518,"column_start":36,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":1985},{"krate":0,"index":1986},{"krate":0,"index":1987},{"krate":0,"index":1989},{"krate":0,"index":1991}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":486769,"byte_end":486797,"line_start":641,"line_end":641,"column_start":36,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":2019},{"krate":0,"index":2020},{"krate":0,"index":2021},{"krate":0,"index":2024}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":490762,"byte_end":490796,"line_start":764,"line_end":764,"column_start":36,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":2053},{"krate":0,"index":2054},{"krate":0,"index":2055},{"krate":0,"index":2057},{"krate":0,"index":2059}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":494410,"byte_end":494433,"line_start":887,"line_end":887,"column_start":36,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2087},{"krate":0,"index":2088},{"krate":0,"index":2089},{"krate":0,"index":2092}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":498147,"byte_end":498176,"line_start":1007,"line_end":1007,"column_start":36,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":2121},{"krate":0,"index":2122},{"krate":0,"index":2123},{"krate":0,"index":2125},{"krate":0,"index":2127}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":501243,"byte_end":501253,"line_start":1113,"line_end":1113,"column_start":55,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":2147}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":501543,"byte_end":501553,"line_start":1121,"line_end":1121,"column_start":57,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":2151}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":407091,"byte_end":407104,"line_start":81,"line_end":81,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2156},{"krate":0,"index":2157},{"krate":0,"index":2158},{"krate":0,"index":2160},{"krate":0,"index":2161},{"krate":0,"index":2162},{"krate":0,"index":2163},{"krate":0,"index":2165},{"krate":0,"index":2166},{"krate":0,"index":2167},{"krate":0,"index":2168},{"krate":0,"index":2169},{"krate":0,"index":2170},{"krate":0,"index":2171},{"krate":0,"index":2172},{"krate":0,"index":2173},{"krate":0,"index":2174},{"krate":0,"index":2178},{"krate":0,"index":2180},{"krate":0,"index":2182},{"krate":0,"index":2183}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":435074,"byte_end":435087,"line_start":753,"line_end":753,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2185},{"krate":0,"index":2186},{"krate":0,"index":2187},{"krate":0,"index":2188},{"krate":0,"index":2189},{"krate":0,"index":2190},{"krate":0,"index":2191},{"krate":0,"index":2192},{"krate":0,"index":2193},{"krate":0,"index":2194},{"krate":0,"index":2196},{"krate":0,"index":2198},{"krate":0,"index":2200},{"krate":0,"index":2202},{"krate":0,"index":2204},{"krate":0,"index":2206}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":445717,"byte_end":445730,"line_start":1064,"line_end":1064,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2209},{"krate":0,"index":2210},{"krate":0,"index":2211},{"krate":0,"index":2212},{"krate":0,"index":2213},{"krate":0,"index":2215},{"krate":0,"index":2217},{"krate":0,"index":2219}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":453550,"byte_end":453563,"line_start":1276,"line_end":1276,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2222},{"krate":0,"index":2223}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":453794,"byte_end":453807,"line_start":1285,"line_end":1285,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2225}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":456128,"byte_end":456141,"line_start":1340,"line_end":1340,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2227},{"krate":0,"index":2228}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":456372,"byte_end":456385,"line_start":1349,"line_end":1349,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2230}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":458115,"byte_end":458128,"line_start":1395,"line_end":1395,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2232},{"krate":0,"index":2233}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":459326,"byte_end":459339,"line_start":1431,"line_end":1431,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2235}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":460427,"byte_end":460440,"line_start":1462,"line_end":1462,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2237}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":461170,"byte_end":461183,"line_start":1484,"line_end":1484,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2239},{"krate":0,"index":2240}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":462530,"byte_end":462543,"line_start":1526,"line_end":1526,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2243}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/internals.rs","byte_start":508284,"byte_end":508293,"line_start":113,"line_end":113,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2289},{"krate":0,"index":2290},{"krate":0,"index":2291},{"krate":0,"index":2292},{"krate":0,"index":2293}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/internals.rs","byte_start":509232,"byte_end":509241,"line_start":150,"line_end":150,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2295}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/internals.rs","byte_start":517371,"byte_end":517373,"line_start":271,"line_end":271,"column_start":6,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":2305},{"krate":0,"index":2306},{"krate":0,"index":2307},{"krate":0,"index":2308},{"krate":0,"index":2309},{"krate":0,"index":2310},{"krate":0,"index":2311},{"krate":0,"index":2312},{"krate":0,"index":2313},{"krate":0,"index":2314},{"krate":0,"index":2315},{"krate":0,"index":2316}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/internals.rs","byte_start":519451,"byte_end":519453,"line_start":355,"line_end":355,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2318}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/internals.rs","byte_start":520066,"byte_end":520069,"line_start":376,"line_end":376,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":2320},{"krate":0,"index":2321},{"krate":0,"index":2322},{"krate":0,"index":2323},{"krate":0,"index":2324},{"krate":0,"index":2325},{"krate":0,"index":2326},{"krate":0,"index":2327},{"krate":0,"index":2328},{"krate":0,"index":2329}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/internals.rs","byte_start":522048,"byte_end":522051,"line_start":460,"line_end":460,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2331}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":536381,"byte_end":536388,"line_start":52,"line_end":52,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2348},{"krate":0,"index":2349},{"krate":0,"index":2350}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":538922,"byte_end":538929,"line_start":134,"line_end":134,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2352}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/serde.rs","byte_start":595484,"byte_end":595493,"line_start":8,"line_end":8,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2433}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/serde.rs","byte_start":595713,"byte_end":595729,"line_start":19,"line_end":19,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2439},{"krate":0,"index":2440},{"krate":0,"index":2441}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/serde.rs","byte_start":596084,"byte_end":596093,"line_start":34,"line_end":34,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2445}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":548116,"byte_end":548125,"line_start":197,"line_end":197,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2448},{"krate":0,"index":2449},{"krate":0,"index":2450},{"krate":0,"index":2451},{"krate":0,"index":2453},{"krate":0,"index":2454},{"krate":0,"index":2456},{"krate":0,"index":2457},{"krate":0,"index":2458},{"krate":0,"index":2459},{"krate":0,"index":2460},{"krate":0,"index":2461},{"krate":0,"index":2462},{"krate":0,"index":2463},{"krate":0,"index":2467},{"krate":0,"index":2471},{"krate":0,"index":2473},{"krate":0,"index":2474},{"krate":0,"index":2475}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":572310,"byte_end":572319,"line_start":807,"line_end":807,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2477},{"krate":0,"index":2478},{"krate":0,"index":2479},{"krate":0,"index":2480},{"krate":0,"index":2481},{"krate":0,"index":2482},{"krate":0,"index":2483},{"krate":0,"index":2484},{"krate":0,"index":2485}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":581870,"byte_end":581879,"line_start":1065,"line_end":1065,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2487},{"krate":0,"index":2488}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":582060,"byte_end":582069,"line_start":1074,"line_end":1074,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2490}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":584428,"byte_end":584437,"line_start":1126,"line_end":1126,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2492},{"krate":0,"index":2493}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":584618,"byte_end":584627,"line_start":1135,"line_end":1135,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2495}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":587000,"byte_end":587009,"line_start":1187,"line_end":1187,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2497},{"krate":0,"index":2498}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":588393,"byte_end":588402,"line_start":1224,"line_end":1224,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2500}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":590251,"byte_end":590260,"line_start":1274,"line_end":1274,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2502}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":591030,"byte_end":591039,"line_start":1299,"line_end":1299,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2504},{"krate":0,"index":2505}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":591926,"byte_end":591935,"line_start":1331,"line_end":1331,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2508}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":618761,"byte_end":618772,"line_start":31,"line_end":31,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2637},{"krate":0,"index":2638},{"krate":0,"index":2639},{"krate":0,"index":2640},{"krate":0,"index":2641},{"krate":0,"index":2642}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":621325,"byte_end":621336,"line_start":105,"line_end":105,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2644},{"krate":0,"index":2645},{"krate":0,"index":2646},{"krate":0,"index":2647},{"krate":0,"index":2648},{"krate":0,"index":2649}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":621924,"byte_end":621935,"line_start":127,"line_end":127,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2651}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":622016,"byte_end":622027,"line_start":133,"line_end":133,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2653}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":622525,"byte_end":622536,"line_start":147,"line_end":147,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2655}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":623304,"byte_end":623313,"line_start":168,"line_end":168,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2659},{"krate":0,"index":2660}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":623501,"byte_end":623510,"line_start":177,"line_end":177,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2662},{"krate":0,"index":2663}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":623699,"byte_end":623712,"line_start":186,"line_end":186,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2665},{"krate":0,"index":2666}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":623908,"byte_end":623921,"line_start":195,"line_end":195,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2668},{"krate":0,"index":2669}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":624132,"byte_end":624140,"line_start":204,"line_end":204,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2672},{"krate":0,"index":2673}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":624352,"byte_end":624360,"line_start":213,"line_end":213,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2676},{"krate":0,"index":2677}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/unix.rs","byte_start":638021,"byte_end":638027,"line_start":41,"line_end":41,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2756}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/unix.rs","byte_start":639345,"byte_end":639351,"line_start":68,"line_end":68,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2759}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/unix.rs","byte_start":640687,"byte_end":640692,"line_start":112,"line_end":112,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2766}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/unix.rs","byte_start":640961,"byte_end":640966,"line_start":122,"line_end":122,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2768}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/tz_info/timezone.rs","byte_start":646941,"byte_end":646949,"line_start":24,"line_end":24,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2842},{"krate":0,"index":2843},{"krate":0,"index":2845},{"krate":0,"index":2846},{"krate":0,"index":2847},{"krate":0,"index":2848},{"krate":0,"index":2849},{"krate":0,"index":2850},{"krate":0,"index":2851},{"krate":0,"index":2852}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/tz_info/timezone.rs","byte_start":651490,"byte_end":651501,"line_start":154,"line_end":154,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2855},{"krate":0,"index":2856},{"krate":0,"index":2857},{"krate":0,"index":2858},{"krate":0,"index":2859},{"krate":0,"index":2860}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/tz_info/timezone.rs","byte_start":663556,"byte_end":663566,"line_start":440,"line_end":440,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2862},{"krate":0,"index":2863}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/tz_info/timezone.rs","byte_start":664076,"byte_end":664086,"line_start":461,"line_end":461,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2865},{"krate":0,"index":2866}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/tz_info/timezone.rs","byte_start":664558,"byte_end":664570,"line_start":480,"line_end":480,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2868},{"krate":0,"index":2870},{"krate":0,"index":2871}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/tz_info/timezone.rs","byte_start":665816,"byte_end":665828,"line_start":527,"line_end":527,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2873}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/tz_info/timezone.rs","byte_start":665992,"byte_end":666004,"line_start":534,"line_end":534,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2875}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/tz_info/timezone.rs","byte_start":666415,"byte_end":666428,"line_start":551,"line_end":551,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2877},{"krate":0,"index":2878},{"krate":0,"index":2879},{"krate":0,"index":2880},{"krate":0,"index":2881}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/tz_info/parser.rs","byte_start":685639,"byte_end":685644,"line_start":124,"line_end":124,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2951},{"krate":0,"index":2952}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/tz_info/parser.rs","byte_start":687268,"byte_end":687274,"line_start":174,"line_end":174,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2954}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/tz_info/parser.rs","byte_start":688996,"byte_end":689002,"line_start":225,"line_end":225,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2957},{"krate":0,"index":2958},{"krate":0,"index":2959},{"krate":0,"index":2960},{"krate":0,"index":2961},{"krate":0,"index":2963},{"krate":0,"index":2964},{"krate":0,"index":2965},{"krate":0,"index":2966},{"krate":0,"index":2969},{"krate":0,"index":2971}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/tz_info/rule.rs","byte_start":692875,"byte_end":692889,"line_start":19,"line_end":19,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3011},{"krate":0,"index":3012},{"krate":0,"index":3013}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/tz_info/rule.rs","byte_start":695923,"byte_end":695937,"line_start":99,"line_end":99,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3015}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/tz_info/rule.rs","byte_start":696059,"byte_end":696073,"line_start":105,"line_end":105,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3017}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/tz_info/rule.rs","byte_start":696782,"byte_end":696795,"line_start":128,"line_end":128,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":3019},{"krate":0,"index":3020},{"krate":0,"index":3021}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/tz_info/rule.rs","byte_start":711217,"byte_end":711224,"line_start":467,"line_end":467,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3031},{"krate":0,"index":3032},{"krate":0,"index":3033},{"krate":0,"index":3034},{"krate":0,"index":3035},{"krate":0,"index":3036}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/tz_info/rule.rs","byte_start":717107,"byte_end":717118,"line_start":631,"line_end":631,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3038}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/tz_info/mod.rs","byte_start":643871,"byte_end":643876,"line_start":53,"line_end":53,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3055}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/tz_info/mod.rs","byte_start":644989,"byte_end":644994,"line_start":77,"line_end":77,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/tz_info/mod.rs","byte_start":645024,"byte_end":645029,"line_start":79,"line_end":79,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3059}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/tz_info/mod.rs","byte_start":645135,"byte_end":645140,"line_start":85,"line_end":85,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3061}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/tz_info/mod.rs","byte_start":645258,"byte_end":645263,"line_start":91,"line_end":91,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3063}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/tz_info/mod.rs","byte_start":645379,"byte_end":645384,"line_start":97,"line_end":97,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3065}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/mod.rs","byte_start":626763,"byte_end":626768,"line_start":57,"line_end":57,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3076},{"krate":0,"index":3077}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/mod.rs","byte_start":627781,"byte_end":627786,"line_start":89,"line_end":89,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3079},{"krate":0,"index":3080},{"krate":0,"index":3081},{"krate":0,"index":3083},{"krate":0,"index":3085},{"krate":0,"index":3086},{"krate":0,"index":3087},{"krate":0,"index":3089},{"krate":0,"index":3090},{"krate":0,"index":3091}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":733359,"byte_end":733362,"line_start":47,"line_end":47,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":3134},{"krate":0,"index":3135}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":734388,"byte_end":734391,"line_start":78,"line_end":78,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3137},{"krate":0,"index":3138},{"krate":0,"index":3139},{"krate":0,"index":3140},{"krate":0,"index":3141},{"krate":0,"index":3142}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":734911,"byte_end":734914,"line_start":100,"line_end":100,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3144}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":735010,"byte_end":735013,"line_start":106,"line_end":106,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3146}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":735129,"byte_end":735132,"line_start":112,"line_end":112,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3148}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":598837,"byte_end":598848,"line_start":52,"line_end":52,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3154},{"krate":0,"index":3155},{"krate":0,"index":3156},{"krate":0,"index":3157}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":600029,"byte_end":600040,"line_start":87,"line_end":87,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3162},{"krate":0,"index":3163},{"krate":0,"index":3164},{"krate":0,"index":3165},{"krate":0,"index":3166}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":603250,"byte_end":603261,"line_start":180,"line_end":180,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3169}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":737057,"byte_end":737058,"line_start":47,"line_end":47,"column_start":25,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3253},{"krate":0,"index":3254}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":740439,"byte_end":740447,"line_start":148,"line_end":148,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3263},{"krate":0,"index":3264},{"krate":0,"index":3265}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":740796,"byte_end":740809,"line_start":160,"line_end":160,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3267},{"krate":0,"index":3268},{"krate":0,"index":3269}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":744685,"byte_end":744698,"line_start":280,"line_end":280,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3275}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":745277,"byte_end":745290,"line_start":297,"line_end":297,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3277}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":757912,"byte_end":757919,"line_start":31,"line_end":31,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3293},{"krate":0,"index":3294},{"krate":0,"index":3295},{"krate":0,"index":3296},{"krate":0,"index":3297},{"krate":0,"index":3298}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":761910,"byte_end":761917,"line_start":141,"line_end":141,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3300}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":762565,"byte_end":762572,"line_start":158,"line_end":158,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3302},{"krate":0,"index":3303}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":763541,"byte_end":763558,"line_start":195,"line_end":195,"column_start":28,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":763585,"byte_end":763602,"line_start":197,"line_end":197,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3306}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":763741,"byte_end":763758,"line_start":203,"line_end":203,"column_start":21,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3308}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":764117,"byte_end":764124,"line_start":217,"line_end":217,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3324}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":764378,"byte_end":764392,"line_start":228,"line_end":228,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3330},{"krate":0,"index":3331},{"krate":0,"index":3332}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":764805,"byte_end":764812,"line_start":243,"line_end":243,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3337}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":768301,"byte_end":768306,"line_start":60,"line_end":60,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3351},{"krate":0,"index":3352},{"krate":0,"index":3353},{"krate":0,"index":3354}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":771536,"byte_end":771541,"line_start":155,"line_end":155,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3356},{"krate":0,"index":3357},{"krate":0,"index":3358}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":772844,"byte_end":772850,"line_start":196,"line_end":196,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":3360}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":773151,"byte_end":773166,"line_start":209,"line_end":209,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3362}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":773424,"byte_end":773429,"line_start":222,"line_end":222,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3378}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":773687,"byte_end":773699,"line_start":233,"line_end":233,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3384},{"krate":0,"index":3385},{"krate":0,"index":3386}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":774117,"byte_end":774122,"line_start":248,"line_end":248,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3391}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21539,"byte_end":21545,"line_start":476,"line_end":476,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":942}},{"kind":"Mod","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":147423,"byte_end":147431,"line_start":741,"line_end":741,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":1390}},{"kind":"Mod","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21678,"byte_end":21683,"line_start":482,"line_end":482,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1456}},{"kind":"Mod","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21786,"byte_end":21792,"line_start":486,"line_end":486,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":2556}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":25800,"byte_end":25804,"line_start":72,"line_end":72,"column_start":20,"column_end":24},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":3450},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":34496,"byte_end":34500,"line_start":310,"line_end":310,"column_start":20,"column_end":24},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":3450},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":36592,"byte_end":36596,"line_start":378,"line_end":378,"column_start":33,"column_end":37},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":3450},"to":{"krate":0,"index":3411}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":38431,"byte_end":38435,"line_start":453,"line_end":453,"column_start":29,"column_end":33},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":3450},"to":{"krate":2,"index":3189}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":38515,"byte_end":38519,"line_start":454,"line_end":454,"column_start":36,"column_end":40},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":3450},"to":{"krate":2,"index":3179}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":38624,"byte_end":38628,"line_start":456,"line_end":456,"column_start":60,"column_end":64},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":3450},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":38748,"byte_end":38752,"line_start":462,"line_end":462,"column_start":27,"column_end":31},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":3450},"to":{"krate":2,"index":2836}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":38795,"byte_end":38799,"line_start":464,"line_end":464,"column_start":35,"column_end":39},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":3450},"to":{"krate":2,"index":2877}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":38951,"byte_end":38955,"line_start":470,"line_end":470,"column_start":28,"column_end":32},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":3450},"to":{"krate":2,"index":2867}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":39090,"byte_end":39094,"line_start":476,"line_end":476,"column_start":35,"column_end":39},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":3450},"to":{"krate":2,"index":10324}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":39233,"byte_end":39237,"line_start":482,"line_end":482,"column_start":41,"column_end":45},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":3450},"to":{"krate":2,"index":3247}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":39467,"byte_end":39471,"line_start":491,"line_end":491,"column_start":47,"column_end":51},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":3450},"to":{"krate":2,"index":3278}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":39684,"byte_end":39688,"line_start":498,"line_end":498,"column_start":41,"column_end":45},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":3450},"to":{"krate":2,"index":3252}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":39918,"byte_end":39922,"line_start":507,"line_end":507,"column_start":47,"column_end":51},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":3450},"to":{"krate":2,"index":3282}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":40132,"byte_end":40136,"line_start":514,"line_end":514,"column_start":38,"column_end":42},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":3450},"to":{"krate":2,"index":3252}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":40321,"byte_end":40325,"line_start":523,"line_end":523,"column_start":35,"column_end":39},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":3450},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":40499,"byte_end":40503,"line_start":529,"line_end":529,"column_start":37,"column_end":41},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":3450},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":84097,"byte_end":84105,"line_start":30,"line_end":30,"column_start":39,"column_end":47},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":3497},"to":{"krate":22,"index":2149}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":84353,"byte_end":84366,"line_start":39,"line_end":39,"column_start":50,"column_end":63},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":402},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":84699,"byte_end":84714,"line_start":52,"line_end":52,"column_start":32,"column_end":47},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":410},"to":{"krate":22,"index":1686}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":85370,"byte_end":85378,"line_start":74,"line_end":74,"column_start":36,"column_end":44},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":3497},"to":{"krate":22,"index":1600}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":85800,"byte_end":85808,"line_start":89,"line_end":89,"column_start":36,"column_end":44},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":3497},"to":{"krate":22,"index":1600}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":86329,"byte_end":86337,"line_start":106,"line_end":106,"column_start":36,"column_end":44},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":3497},"to":{"krate":22,"index":1600}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":89388,"byte_end":89415,"line_start":207,"line_end":207,"column_start":36,"column_end":63},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":3461},"to":{"krate":22,"index":1686}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":93386,"byte_end":93419,"line_start":334,"line_end":334,"column_start":36,"column_end":69},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":499},"to":{"krate":22,"index":1686}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":97156,"byte_end":97184,"line_start":458,"line_end":458,"column_start":36,"column_end":64},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":3465},"to":{"krate":22,"index":1686}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":101164,"byte_end":101198,"line_start":584,"line_end":584,"column_start":36,"column_end":70},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":578},"to":{"krate":22,"index":1686}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":104956,"byte_end":104984,"line_start":708,"line_end":708,"column_start":36,"column_end":64},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":3469},"to":{"krate":22,"index":1686}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":109433,"byte_end":109467,"line_start":844,"line_end":844,"column_start":36,"column_end":70},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":660},"to":{"krate":22,"index":1686}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":113079,"byte_end":113102,"line_start":968,"line_end":968,"column_start":36,"column_end":59},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":3457},"to":{"krate":22,"index":1686}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/serde.rs","byte_start":116742,"byte_end":116771,"line_start":1088,"line_end":1088,"column_start":36,"column_end":65},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":739},"to":{"krate":22,"index":1686}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":47068,"byte_end":47076,"line_start":98,"line_end":98,"column_start":20,"column_end":28},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":3497},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":57187,"byte_end":57195,"line_start":384,"line_end":384,"column_start":18,"column_end":26},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":3497},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":57339,"byte_end":57347,"line_start":391,"line_end":391,"column_start":18,"column_end":26},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":3497},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":57469,"byte_end":57477,"line_start":397,"line_end":397,"column_start":18,"column_end":26},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":3497},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":57712,"byte_end":57720,"line_start":404,"line_end":404,"column_start":30,"column_end":38},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":3497},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":58226,"byte_end":58234,"line_start":416,"line_end":416,"column_start":30,"column_end":38},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":3497},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":58644,"byte_end":58652,"line_start":426,"line_end":426,"column_start":38,"column_end":46},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":3497},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":59104,"byte_end":59112,"line_start":438,"line_end":438,"column_start":38,"column_end":46},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":3497},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":59560,"byte_end":59568,"line_start":450,"line_end":450,"column_start":32,"column_end":40},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":3497},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":60006,"byte_end":60014,"line_start":462,"line_end":462,"column_start":32,"column_end":40},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":3497},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":60730,"byte_end":60738,"line_start":480,"line_end":480,"column_start":6,"column_end":14},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":3497},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":63367,"byte_end":63375,"line_start":542,"line_end":542,"column_start":20,"column_end":28},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":3497},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":69018,"byte_end":69026,"line_start":695,"line_end":695,"column_start":33,"column_end":41},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":3497},"to":{"krate":0,"index":3411}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":70883,"byte_end":70891,"line_start":769,"line_end":769,"column_start":33,"column_end":41},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":3497},"to":{"krate":0,"index":3430}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":71931,"byte_end":71939,"line_start":809,"line_end":809,"column_start":29,"column_end":37},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":3497},"to":{"krate":2,"index":3189}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":72019,"byte_end":72027,"line_start":810,"line_end":810,"column_start":36,"column_end":44},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":3497},"to":{"krate":2,"index":3179}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":72136,"byte_end":72144,"line_start":812,"line_end":812,"column_start":64,"column_end":72},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":3497},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":72276,"byte_end":72284,"line_start":818,"line_end":818,"column_start":27,"column_end":35},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":3497},"to":{"krate":2,"index":2836}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":72357,"byte_end":72365,"line_start":820,"line_end":820,"column_start":65,"column_end":73},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":3497},"to":{"krate":2,"index":2877}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":73104,"byte_end":73112,"line_start":841,"line_end":841,"column_start":28,"column_end":36},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":3497},"to":{"krate":2,"index":2867}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":73259,"byte_end":73267,"line_start":847,"line_end":847,"column_start":35,"column_end":43},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":3497},"to":{"krate":2,"index":10324}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":73410,"byte_end":73418,"line_start":853,"line_end":853,"column_start":41,"column_end":49},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":3497},"to":{"krate":2,"index":3247}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":73660,"byte_end":73668,"line_start":862,"line_end":862,"column_start":47,"column_end":55},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":3497},"to":{"krate":2,"index":3278}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":73987,"byte_end":73995,"line_start":872,"line_end":872,"column_start":41,"column_end":49},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":3497},"to":{"krate":2,"index":3252}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":74237,"byte_end":74245,"line_start":881,"line_end":881,"column_start":47,"column_end":55},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":3497},"to":{"krate":2,"index":3282}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":74564,"byte_end":74572,"line_start":891,"line_end":891,"column_start":42,"column_end":50},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":3497},"to":{"krate":2,"index":3252}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":74761,"byte_end":74769,"line_start":900,"line_end":900,"column_start":35,"column_end":43},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":3497},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":74943,"byte_end":74951,"line_start":906,"line_end":906,"column_start":37,"column_end":45},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":3497},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":75584,"byte_end":75592,"line_start":926,"line_end":926,"column_start":23,"column_end":31},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":3497},"to":{"krate":2,"index":12767}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":76266,"byte_end":76274,"line_start":946,"line_end":946,"column_start":23,"column_end":31},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":3497},"to":{"krate":2,"index":12767}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":76519,"byte_end":76527,"line_start":955,"line_end":955,"column_start":27,"column_end":35},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":3497},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":77179,"byte_end":77187,"line_start":975,"line_end":975,"column_start":27,"column_end":35},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":3497},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":77386,"byte_end":77396,"line_start":982,"line_end":982,"column_start":43,"column_end":53},"kind":{"Impl":{"id":63}},"from":{"krate":1,"index":11819},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":124184,"byte_end":124199,"line_start":157,"line_end":157,"column_start":16,"column_end":31},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1009},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":124289,"byte_end":124304,"line_start":163,"line_end":163,"column_start":20,"column_end":35},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1009},"to":{"krate":2,"index":2831}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":124410,"byte_end":124425,"line_start":169,"line_end":169,"column_start":13,"column_end":28},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1009},"to":{"krate":2,"index":2836}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":124450,"byte_end":124465,"line_start":171,"line_end":171,"column_start":21,"column_end":36},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1009},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":130447,"byte_end":130457,"line_start":339,"line_end":339,"column_start":6,"column_end":16},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":3711},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":132005,"byte_end":132015,"line_start":385,"line_end":385,"column_start":23,"column_end":33},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":3711},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":132797,"byte_end":132807,"line_start":401,"line_end":401,"column_start":16,"column_end":26},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":3711},"to":{"krate":1,"index":2569}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":159053,"byte_end":159059,"line_start":128,"line_end":128,"column_start":6,"column_end":12},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":3754},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parse.rs","byte_start":229101,"byte_end":229109,"line_start":478,"line_end":478,"column_start":23,"column_end":31},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":3497},"to":{"krate":2,"index":12767}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/strftime.rs","byte_start":279856,"byte_end":279869,"line_start":213,"line_end":213,"column_start":10,"column_end":23},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":3790},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/strftime.rs","byte_start":281256,"byte_end":281269,"line_start":256,"line_end":256,"column_start":23,"column_end":36},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":3790},"to":{"krate":2,"index":8474}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":148344,"byte_end":148357,"line_start":764,"line_end":764,"column_start":62,"column_end":75},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":3809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":150352,"byte_end":150365,"line_start":827,"line_end":827,"column_start":79,"column_end":92},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":3809},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":151646,"byte_end":151653,"line_start":873,"line_end":873,"column_start":18,"column_end":25},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":4350},"to":{"krate":2,"index":12767}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":153605,"byte_end":153610,"line_start":947,"line_end":947,"column_start":18,"column_end":23},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":4397},"to":{"krate":2,"index":12767}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":301405,"byte_end":301414,"line_start":62,"line_end":62,"column_start":6,"column_end":15},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":3818},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":307153,"byte_end":307162,"line_start":207,"line_end":207,"column_start":6,"column_end":15},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":3823},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":348448,"byte_end":348457,"line_start":1280,"line_end":1280,"column_start":19,"column_end":28},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":3823},"to":{"krate":0,"index":3411}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":360673,"byte_end":360682,"line_start":1644,"line_end":1644,"column_start":27,"column_end":36},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":3823},"to":{"krate":2,"index":3247}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":360901,"byte_end":360910,"line_start":1653,"line_end":1653,"column_start":33,"column_end":42},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":3823},"to":{"krate":2,"index":3278}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":361037,"byte_end":361046,"line_start":1660,"line_end":1660,"column_start":22,"column_end":31},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":3823},"to":{"krate":2,"index":3247}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":362052,"byte_end":362061,"line_start":1688,"line_end":1688,"column_start":22,"column_end":31},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":3823},"to":{"krate":2,"index":3252}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":364032,"byte_end":364041,"line_start":1736,"line_end":1736,"column_start":27,"column_end":36},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":3823},"to":{"krate":2,"index":3252}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":364260,"byte_end":364269,"line_start":1745,"line_end":1745,"column_start":33,"column_end":42},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":3823},"to":{"krate":2,"index":3282}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":365445,"byte_end":365454,"line_start":1776,"line_end":1776,"column_start":25,"column_end":34},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":3823},"to":{"krate":2,"index":3252}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":365807,"byte_end":365828,"line_start":1791,"line_end":1791,"column_start":19,"column_end":40},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":3842},"to":{"krate":2,"index":8474}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":366429,"byte_end":366450,"line_start":1811,"line_end":1811,"column_start":28,"column_end":49},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":3842},"to":{"krate":2,"index":8348}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":366484,"byte_end":366505,"line_start":1813,"line_end":1813,"column_start":30,"column_end":51},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":3842},"to":{"krate":2,"index":8323}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":366886,"byte_end":366908,"line_start":1829,"line_end":1829,"column_start":19,"column_end":41},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":3863},"to":{"krate":2,"index":8474}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":367435,"byte_end":367457,"line_start":1847,"line_end":1847,"column_start":28,"column_end":50},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":3863},"to":{"krate":2,"index":8348}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":367491,"byte_end":367513,"line_start":1849,"line_end":1849,"column_start":30,"column_end":52},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":3863},"to":{"krate":2,"index":8323}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":368825,"byte_end":368834,"line_start":1886,"line_end":1886,"column_start":21,"column_end":30},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":3823},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":370090,"byte_end":370099,"line_start":1921,"line_end":1921,"column_start":23,"column_end":32},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":3823},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":370699,"byte_end":370708,"line_start":1943,"line_end":1943,"column_start":23,"column_end":32},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":3823},"to":{"krate":2,"index":12767}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":371543,"byte_end":371552,"line_start":1974,"line_end":1974,"column_start":18,"column_end":27},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":3823},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":375023,"byte_end":375032,"line_start":2069,"line_end":2069,"column_start":29,"column_end":38},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":3823},"to":{"krate":22,"index":2149}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":375308,"byte_end":375321,"line_start":2078,"line_end":2078,"column_start":54,"column_end":67},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1703},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":375623,"byte_end":375639,"line_start":2090,"line_end":2090,"column_start":36,"column_end":52},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1711},"to":{"krate":22,"index":1686}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":376308,"byte_end":376317,"line_start":2114,"line_end":2114,"column_start":40,"column_end":49},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":3823},"to":{"krate":22,"index":1600}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":467204,"byte_end":467217,"line_start":11,"line_end":11,"column_start":25,"column_end":38},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":3884},"to":{"krate":22,"index":2149}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":467461,"byte_end":467474,"line_start":20,"line_end":20,"column_start":50,"column_end":63},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1837},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":467744,"byte_end":467764,"line_start":32,"line_end":32,"column_start":32,"column_end":52},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1845},"to":{"krate":22,"index":1686}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":468132,"byte_end":468145,"line_start":47,"line_end":47,"column_start":36,"column_end":49},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":3884},"to":{"krate":22,"index":1600}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":471159,"byte_end":471186,"line_start":146,"line_end":146,"column_start":36,"column_end":63},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1879},"to":{"krate":22,"index":1686}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":475173,"byte_end":475206,"line_start":269,"line_end":269,"column_start":36,"column_end":69},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1913},"to":{"krate":22,"index":1686}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":478946,"byte_end":478974,"line_start":392,"line_end":392,"column_start":36,"column_end":64},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1947},"to":{"krate":22,"index":1686}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":483005,"byte_end":483039,"line_start":518,"line_end":518,"column_start":36,"column_end":70},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1981},"to":{"krate":22,"index":1686}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":486769,"byte_end":486797,"line_start":641,"line_end":641,"column_start":36,"column_end":64},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":2015},"to":{"krate":22,"index":1686}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":490762,"byte_end":490796,"line_start":764,"line_end":764,"column_start":36,"column_end":70},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":2049},"to":{"krate":22,"index":1686}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":494410,"byte_end":494433,"line_start":887,"line_end":887,"column_start":36,"column_end":59},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":2083},"to":{"krate":22,"index":1686}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":498147,"byte_end":498176,"line_start":1007,"line_end":1007,"column_start":36,"column_end":65},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":2117},"to":{"krate":22,"index":1686}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":501243,"byte_end":501253,"line_start":1113,"line_end":1113,"column_start":55,"column_end":65},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":2133},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/serde.rs","byte_start":501543,"byte_end":501553,"line_start":1121,"line_end":1121,"column_start":57,"column_end":67},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":2133},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":407091,"byte_end":407104,"line_start":81,"line_end":81,"column_start":6,"column_end":19},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":3884},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":435074,"byte_end":435087,"line_start":753,"line_end":753,"column_start":19,"column_end":32},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":3884},"to":{"krate":0,"index":3411}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":445717,"byte_end":445730,"line_start":1064,"line_end":1064,"column_start":19,"column_end":32},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":3884},"to":{"krate":0,"index":3430}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":453550,"byte_end":453563,"line_start":1276,"line_end":1276,"column_start":27,"column_end":40},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":3884},"to":{"krate":2,"index":3247}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":453794,"byte_end":453807,"line_start":1285,"line_end":1285,"column_start":33,"column_end":46},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":3884},"to":{"krate":2,"index":3278}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":456128,"byte_end":456141,"line_start":1340,"line_end":1340,"column_start":27,"column_end":40},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":3884},"to":{"krate":2,"index":3252}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":456372,"byte_end":456385,"line_start":1349,"line_end":1349,"column_start":33,"column_end":46},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":3884},"to":{"krate":2,"index":3282}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":458115,"byte_end":458128,"line_start":1395,"line_end":1395,"column_start":29,"column_end":42},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":3884},"to":{"krate":2,"index":3252}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":459326,"byte_end":459339,"line_start":1431,"line_end":1431,"column_start":21,"column_end":34},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":3884},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":460427,"byte_end":460440,"line_start":1462,"line_end":1462,"column_start":23,"column_end":36},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":3884},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":461170,"byte_end":461183,"line_start":1484,"line_end":1484,"column_start":23,"column_end":36},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":3884},"to":{"krate":2,"index":12767}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":462530,"byte_end":462543,"line_start":1526,"line_end":1526,"column_start":18,"column_end":31},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":3884},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/internals.rs","byte_start":508284,"byte_end":508293,"line_start":113,"line_end":113,"column_start":6,"column_end":15},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":3904},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/internals.rs","byte_start":509232,"byte_end":509241,"line_start":150,"line_end":150,"column_start":21,"column_end":30},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":3904},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/internals.rs","byte_start":517371,"byte_end":517373,"line_start":271,"line_end":271,"column_start":6,"column_end":8},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":3917},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/internals.rs","byte_start":519451,"byte_end":519453,"line_start":355,"line_end":355,"column_start":21,"column_end":23},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":3917},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/internals.rs","byte_start":520066,"byte_end":520069,"line_start":376,"line_end":376,"column_start":6,"column_end":9},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":3929},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/internals.rs","byte_start":522048,"byte_end":522051,"line_start":460,"line_end":460,"column_start":21,"column_end":24},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":3929},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":536381,"byte_end":536388,"line_start":52,"line_end":52,"column_start":6,"column_end":13},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":3941},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":538922,"byte_end":538929,"line_start":134,"line_end":134,"column_start":21,"column_end":28},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":3941},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/serde.rs","byte_start":595484,"byte_end":595493,"line_start":8,"line_end":8,"column_start":25,"column_end":34},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":3957},"to":{"krate":22,"index":2149}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/serde.rs","byte_start":595713,"byte_end":595729,"line_start":19,"line_end":19,"column_start":32,"column_end":48},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":2435},"to":{"krate":22,"index":1686}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/serde.rs","byte_start":596084,"byte_end":596093,"line_start":34,"line_end":34,"column_start":36,"column_end":45},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":3957},"to":{"krate":22,"index":1600}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":548116,"byte_end":548125,"line_start":197,"line_end":197,"column_start":6,"column_end":15},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":3957},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":572310,"byte_end":572319,"line_start":807,"line_end":807,"column_start":19,"column_end":28},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":3957},"to":{"krate":0,"index":3430}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":581870,"byte_end":581879,"line_start":1065,"line_end":1065,"column_start":27,"column_end":36},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":3957},"to":{"krate":2,"index":3247}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":582060,"byte_end":582069,"line_start":1074,"line_end":1074,"column_start":33,"column_end":42},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":3957},"to":{"krate":2,"index":3278}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":584428,"byte_end":584437,"line_start":1126,"line_end":1126,"column_start":27,"column_end":36},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":3957},"to":{"krate":2,"index":3252}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":584618,"byte_end":584627,"line_start":1135,"line_end":1135,"column_start":33,"column_end":42},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":3957},"to":{"krate":2,"index":3282}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":587000,"byte_end":587009,"line_start":1187,"line_end":1187,"column_start":25,"column_end":34},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":3957},"to":{"krate":2,"index":3252}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":588393,"byte_end":588402,"line_start":1224,"line_end":1224,"column_start":21,"column_end":30},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":3957},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":590251,"byte_end":590260,"line_start":1274,"line_end":1274,"column_start":23,"column_end":32},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":3957},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":591030,"byte_end":591039,"line_start":1299,"line_end":1299,"column_start":23,"column_end":32},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":3957},"to":{"krate":2,"index":12767}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":591926,"byte_end":591935,"line_start":1331,"line_end":1331,"column_start":18,"column_end":27},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":3957},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":618761,"byte_end":618772,"line_start":31,"line_end":31,"column_start":6,"column_end":17},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":3977},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":621325,"byte_end":621336,"line_start":105,"line_end":105,"column_start":19,"column_end":30},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":3977},"to":{"krate":0,"index":3172}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":621924,"byte_end":621935,"line_start":127,"line_end":127,"column_start":17,"column_end":28},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":3977},"to":{"krate":0,"index":3170}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":622016,"byte_end":622027,"line_start":133,"line_end":133,"column_start":21,"column_end":32},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":3977},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":622525,"byte_end":622536,"line_start":147,"line_end":147,"column_start":23,"column_end":34},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":3977},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":623304,"byte_end":623313,"line_start":168,"line_end":168,"column_start":27,"column_end":36},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":3957},"to":{"krate":2,"index":3247}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":623501,"byte_end":623510,"line_start":177,"line_end":177,"column_start":27,"column_end":36},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":3957},"to":{"krate":2,"index":3252}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":623699,"byte_end":623712,"line_start":186,"line_end":186,"column_start":27,"column_end":40},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":3884},"to":{"krate":2,"index":3247}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":623908,"byte_end":623921,"line_start":195,"line_end":195,"column_start":27,"column_end":40},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":3884},"to":{"krate":2,"index":3252}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":624132,"byte_end":624140,"line_start":204,"line_end":204,"column_start":41,"column_end":49},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":3497},"to":{"krate":2,"index":3247}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":624352,"byte_end":624360,"line_start":213,"line_end":213,"column_start":41,"column_end":49},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":3497},"to":{"krate":2,"index":3252}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/unix.rs","byte_start":638021,"byte_end":638027,"line_start":41,"line_end":41,"column_start":18,"column_end":24},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":2749},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/unix.rs","byte_start":639345,"byte_end":639351,"line_start":68,"line_end":68,"column_start":6,"column_end":12},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":2749},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/unix.rs","byte_start":640687,"byte_end":640692,"line_start":112,"line_end":112,"column_start":18,"column_end":23},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":2760},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/unix.rs","byte_start":640961,"byte_end":640966,"line_start":122,"line_end":122,"column_start":6,"column_end":11},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":2760},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/tz_info/timezone.rs","byte_start":646941,"byte_end":646949,"line_start":24,"line_end":24,"column_start":6,"column_end":14},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":3997},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/tz_info/timezone.rs","byte_start":651490,"byte_end":651501,"line_start":154,"line_end":154,"column_start":10,"column_end":21},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":4013},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/tz_info/timezone.rs","byte_start":663556,"byte_end":663566,"line_start":440,"line_end":440,"column_start":6,"column_end":16},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":4038},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/tz_info/timezone.rs","byte_start":664076,"byte_end":664086,"line_start":461,"line_end":461,"column_start":6,"column_end":16},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":4053},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/tz_info/timezone.rs","byte_start":664558,"byte_end":664570,"line_start":480,"line_end":480,"column_start":6,"column_end":18},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":4068},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/tz_info/timezone.rs","byte_start":665816,"byte_end":665828,"line_start":527,"line_end":527,"column_start":21,"column_end":33},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":4068},"to":{"krate":2,"index":3076}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/tz_info/timezone.rs","byte_start":665992,"byte_end":666004,"line_start":534,"line_end":534,"column_start":21,"column_end":33},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":4068},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/tz_info/timezone.rs","byte_start":666415,"byte_end":666428,"line_start":551,"line_end":551,"column_start":6,"column_end":19},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":4083},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/tz_info/parser.rs","byte_start":685639,"byte_end":685644,"line_start":124,"line_end":124,"column_start":10,"column_end":15},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":2938},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/tz_info/parser.rs","byte_start":687268,"byte_end":687274,"line_start":174,"line_end":174,"column_start":6,"column_end":12},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":4099},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/tz_info/parser.rs","byte_start":688996,"byte_end":689002,"line_start":225,"line_end":225,"column_start":10,"column_end":16},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":4109},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/tz_info/rule.rs","byte_start":692875,"byte_end":692889,"line_start":19,"line_end":19,"column_start":6,"column_end":20},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":4145},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/tz_info/rule.rs","byte_start":695923,"byte_end":695937,"line_start":99,"line_end":99,"column_start":30,"column_end":44},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":4145},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/tz_info/rule.rs","byte_start":696059,"byte_end":696073,"line_start":105,"line_end":105,"column_start":30,"column_end":44},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":4145},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/tz_info/rule.rs","byte_start":696782,"byte_end":696795,"line_start":128,"line_end":128,"column_start":6,"column_end":19},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":4164},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/tz_info/rule.rs","byte_start":711217,"byte_end":711224,"line_start":467,"line_end":467,"column_start":6,"column_end":13},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":4183},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/tz_info/rule.rs","byte_start":717107,"byte_end":717118,"line_start":631,"line_end":631,"column_start":6,"column_end":17},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":4206},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/tz_info/mod.rs","byte_start":643871,"byte_end":643876,"line_start":53,"line_end":53,"column_start":23,"column_end":28},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":4229},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/tz_info/mod.rs","byte_start":644989,"byte_end":644994,"line_start":77,"line_end":77,"column_start":23,"column_end":28},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":4229},"to":{"krate":1,"index":2569}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/tz_info/mod.rs","byte_start":645024,"byte_end":645029,"line_start":79,"line_end":79,"column_start":26,"column_end":31},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":4229},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/tz_info/mod.rs","byte_start":645135,"byte_end":645140,"line_start":85,"line_end":85,"column_start":30,"column_end":35},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":4229},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/tz_info/mod.rs","byte_start":645258,"byte_end":645263,"line_start":91,"line_end":91,"column_start":32,"column_end":37},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":4229},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/tz_info/mod.rs","byte_start":645379,"byte_end":645384,"line_start":97,"line_end":97,"column_start":26,"column_end":31},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":4229},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/mod.rs","byte_start":626763,"byte_end":626768,"line_start":57,"line_end":57,"column_start":6,"column_end":11},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":4280},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/local/mod.rs","byte_start":627781,"byte_end":627786,"line_start":89,"line_end":89,"column_start":19,"column_end":24},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":4280},"to":{"krate":0,"index":3172}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":733359,"byte_end":733362,"line_start":47,"line_end":47,"column_start":6,"column_end":9},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":4287},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":734388,"byte_end":734391,"line_start":78,"line_end":78,"column_start":19,"column_end":22},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":4287},"to":{"krate":0,"index":3172}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":734911,"byte_end":734914,"line_start":100,"line_end":100,"column_start":17,"column_end":20},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":4287},"to":{"krate":0,"index":3170}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":735010,"byte_end":735013,"line_start":106,"line_end":106,"column_start":21,"column_end":24},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":4287},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":735129,"byte_end":735132,"line_start":112,"line_end":112,"column_start":23,"column_end":26},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":4287},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":598837,"byte_end":598848,"line_start":52,"line_end":52,"column_start":9,"column_end":20},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":4298},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":600029,"byte_end":600040,"line_start":87,"line_end":87,"column_start":20,"column_end":31},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":4298},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":603250,"byte_end":603261,"line_start":180,"line_end":180,"column_start":21,"column_end":32},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":4298},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":603723,"byte_end":603728,"line_start":194,"line_end":194,"column_start":19,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":3184},"to":{"krate":0,"index":3170}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":603731,"byte_end":603736,"line_start":194,"line_end":194,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":2801},"to":{"krate":0,"index":3170}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":603744,"byte_end":603749,"line_start":194,"line_end":194,"column_start":40,"column_end":45},"kind":"SuperTrait","from":{"krate":2,"index":10110},"to":{"krate":0,"index":3170}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":604039,"byte_end":604044,"line_start":203,"line_end":203,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":3184},"to":{"krate":0,"index":3172}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":604047,"byte_end":604052,"line_start":203,"line_end":203,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":2801},"to":{"krate":0,"index":3172}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":737057,"byte_end":737058,"line_start":47,"line_end":47,"column_start":25,"column_end":26},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":3252},"to":{"krate":0,"index":3248}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":738755,"byte_end":738760,"line_start":101,"line_end":101,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":3184},"to":{"krate":0,"index":3256}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":740439,"byte_end":740447,"line_start":148,"line_end":148,"column_start":38,"column_end":46},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":3497},"to":{"krate":0,"index":3256}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":740796,"byte_end":740809,"line_start":160,"line_end":160,"column_start":24,"column_end":37},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":3884},"to":{"krate":0,"index":3256}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":744685,"byte_end":744698,"line_start":280,"line_end":280,"column_start":23,"column_end":36},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":4332},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":745277,"byte_end":745290,"line_start":297,"line_end":297,"column_start":28,"column_end":41},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":4332},"to":{"krate":1,"index":2569}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":757912,"byte_end":757919,"line_start":31,"line_end":31,"column_start":6,"column_end":13},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":4350},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":761910,"byte_end":761917,"line_start":141,"line_end":141,"column_start":23,"column_end":30},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":4350},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":762565,"byte_end":762572,"line_start":158,"line_end":158,"column_start":36,"column_end":43},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":4350},"to":{"krate":25,"index":337}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":763541,"byte_end":763558,"line_start":195,"line_end":195,"column_start":28,"column_end":45},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":4386},"to":{"krate":1,"index":2569}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":763585,"byte_end":763602,"line_start":197,"line_end":197,"column_start":23,"column_end":40},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":4386},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":763741,"byte_end":763758,"line_start":203,"line_end":203,"column_start":21,"column_end":38},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":4386},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":764117,"byte_end":764124,"line_start":217,"line_end":217,"column_start":29,"column_end":36},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":4350},"to":{"krate":22,"index":2149}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":764378,"byte_end":764392,"line_start":228,"line_end":228,"column_start":36,"column_end":50},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":3326},"to":{"krate":22,"index":1686}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":764805,"byte_end":764812,"line_start":243,"line_end":243,"column_start":40,"column_end":47},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":4350},"to":{"krate":22,"index":1600}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":768301,"byte_end":768306,"line_start":60,"line_end":60,"column_start":6,"column_end":11},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":4397},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":771536,"byte_end":771541,"line_start":155,"line_end":155,"column_start":36,"column_end":41},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":4397},"to":{"krate":25,"index":337}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":772844,"byte_end":772850,"line_start":196,"line_end":196,"column_start":6,"column_end":12},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":4448},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":773151,"byte_end":773166,"line_start":209,"line_end":209,"column_start":21,"column_end":36},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":4468},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":773424,"byte_end":773429,"line_start":222,"line_end":222,"column_start":29,"column_end":34},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":4397},"to":{"krate":22,"index":2149}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":773687,"byte_end":773699,"line_start":233,"line_end":233,"column_start":36,"column_end":48},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":3380},"to":{"krate":22,"index":1686}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":774117,"byte_end":774122,"line_start":248,"line_end":248,"column_start":40,"column_end":45},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":4397},"to":{"krate":22,"index":1600}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":777402,"byte_end":777407,"line_start":4,"line_end":4,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":3184},"to":{"krate":0,"index":3411}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":781638,"byte_end":781643,"line_start":122,"line_end":122,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":3184},"to":{"krate":0,"index":3430}}]}