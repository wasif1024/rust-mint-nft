{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0","program":"/Users/air/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","tarpc","--edition=2021","/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"full\"","--cfg","feature=\"serde\"","--cfg","feature=\"serde-transport\"","--cfg","feature=\"serde-transport-bincode\"","--cfg","feature=\"serde-transport-json\"","--cfg","feature=\"serde1\"","--cfg","feature=\"tcp\"","--cfg","feature=\"tokio-serde\"","--cfg","feature=\"tokio1\"","-C","metadata=a0a8b679b024e987","-C","extra-filename=-a0a8b679b024e987","--out-dir","/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps","-L","dependency=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps","--extern","anyhow=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libanyhow-2564598dd0179760.rmeta","--extern","fnv=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libfnv-f25a658672136e71.rmeta","--extern","futures=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libfutures-bb2ed1f7aae44160.rmeta","--extern","humantime=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libhumantime-f456991332bd1e16.rmeta","--extern","opentelemetry=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libopentelemetry-ff072a3e1a16c9b2.rmeta","--extern","pin_project=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libpin_project-76a7ed2c810e0c63.rmeta","--extern","rand=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/librand-eabd4006b5f81187.rmeta","--extern","serde=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libserde-2e6e0464b7ba0e58.rmeta","--extern","static_assertions=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libstatic_assertions-05d88755797e15dc.rmeta","--extern","tarpc_plugins=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libtarpc_plugins-3834382b7e8031b6.dylib","--extern","thiserror=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libthiserror-1556a11d29ffccd0.rmeta","--extern","tokio=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libtokio-7b04bdd9b09c183b.rmeta","--extern","tokio_serde=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libtokio_serde-f3f9585d99c102d7.rmeta","--extern","tokio_util=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libtokio_util-25cb5aef8b8cd920.rmeta","--extern","tracing=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libtracing-3e600055b7b49bc0.rmeta","--extern","tracing_opentelemetry=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libtracing_opentelemetry-a8349424f4395e46.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/air/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/libtarpc-a0a8b679b024e987.rmeta"},"prelude":{"crate_id":{"name":"tarpc","disambiguator":[5979539736155112925,0]},"crate_root":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src","external_crates":[{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[4485569597606079733,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[9994580471200982198,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13944031075627487246,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5133993387825513881,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[14116380118705386640,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6269322086078963025,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16152481959168563413,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7897074911849024150,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[7299104579826168146,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2669544452907545777,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[14288251452253695433,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[13943810077905921301,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[2237926517141734526,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[5541021343498733002,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[7188895526679788668,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[15555671723428220450,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[13375000548276363576,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[8920282723255285566,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[2397004371161247654,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","num":20,"id":{"name":"serde","disambiguator":[18037409615073048381,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","num":21,"id":{"name":"serde_derive","disambiguator":[8793957035152621601,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","num":22,"id":{"name":"tokio_serde","disambiguator":[9728024849886982296,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","num":23,"id":{"name":"bytes","disambiguator":[17363037860664117862,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","num":24,"id":{"name":"futures_core","disambiguator":[17540173836599093021,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","num":25,"id":{"name":"futures_sink","disambiguator":[9497018450691456923,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","num":26,"id":{"name":"pin_project","disambiguator":[11643931288000257756,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","num":27,"id":{"name":"pin_project_internal","disambiguator":[11184116565769031121,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","num":28,"id":{"name":"educe","disambiguator":[9130888636738417666,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","num":29,"id":{"name":"bincode","disambiguator":[603451381343205188,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","num":30,"id":{"name":"serde_json","disambiguator":[7410007352207060638,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","num":31,"id":{"name":"itoa","disambiguator":[13453871069554125092,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","num":32,"id":{"name":"ryu","disambiguator":[1775256181276514738,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","num":33,"id":{"name":"futures","disambiguator":[4215796304466336491,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","num":34,"id":{"name":"futures_util","disambiguator":[1827647315185954280,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","num":35,"id":{"name":"pin_utils","disambiguator":[8174305404796104042,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","num":36,"id":{"name":"futures_macro","disambiguator":[6235696014418951871,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","num":37,"id":{"name":"futures_task","disambiguator":[5950390365963764595,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","num":38,"id":{"name":"pin_project_lite","disambiguator":[16214617887468495849,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","num":39,"id":{"name":"futures_channel","disambiguator":[3240050653023664947,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","num":40,"id":{"name":"slab","disambiguator":[17204978413451154944,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","num":41,"id":{"name":"futures_io","disambiguator":[10931676305668356181,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","num":42,"id":{"name":"memchr","disambiguator":[14228028058314693917,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","num":43,"id":{"name":"futures_executor","disambiguator":[16152098228864937488,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","num":44,"id":{"name":"tokio","disambiguator":[2962388683323727077,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","num":45,"id":{"name":"parking_lot","disambiguator":[14966253135049045735,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","num":46,"id":{"name":"instant","disambiguator":[9036241402852550211,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","num":47,"id":{"name":"cfg_if","disambiguator":[13273704638852766021,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","num":48,"id":{"name":"lock_api","disambiguator":[10127763897422863905,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","num":49,"id":{"name":"scopeguard","disambiguator":[12042798599719570489,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","num":50,"id":{"name":"parking_lot_core","disambiguator":[8453746460189032009,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","num":51,"id":{"name":"smallvec","disambiguator":[5856184447480448040,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","num":52,"id":{"name":"libc","disambiguator":[2594694148884002105,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","num":53,"id":{"name":"mio","disambiguator":[7927576646673556845,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","num":54,"id":{"name":"log","disambiguator":[14675233967093799413,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","num":55,"id":{"name":"once_cell","disambiguator":[3525325367007617747,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","num":56,"id":{"name":"tokio_macros","disambiguator":[11852345796106455181,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","num":57,"id":{"name":"num_cpus","disambiguator":[5214853325863455532,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","num":58,"id":{"name":"signal_hook_registry","disambiguator":[15936637214480815235,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","num":59,"id":{"name":"tokio_util","disambiguator":[6165144550484402838,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","num":60,"id":{"name":"opentelemetry","disambiguator":[1761513670781041481,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","num":61,"id":{"name":"async_trait","disambiguator":[4301135406358876038,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","num":62,"id":{"name":"percent_encoding","disambiguator":[6578133466888099768,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","num":63,"id":{"name":"rand","disambiguator":[5737921661166445283,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","num":64,"id":{"name":"rand_core","disambiguator":[16845283938616561134,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","num":65,"id":{"name":"getrandom","disambiguator":[11134963274789204374,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","num":66,"id":{"name":"rand_chacha","disambiguator":[14300429071441946605,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","num":67,"id":{"name":"ppv_lite86","disambiguator":[10001865238345273388,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","num":68,"id":{"name":"thiserror","disambiguator":[18020888330255438696,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","num":69,"id":{"name":"thiserror_impl","disambiguator":[1864002684930853046,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","num":70,"id":{"name":"lazy_static","disambiguator":[15480920620595466049,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","num":71,"id":{"name":"crossbeam_channel","disambiguator":[13496712704375229448,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","num":72,"id":{"name":"crossbeam_utils","disambiguator":[1339298624939999906,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","num":73,"id":{"name":"tracing_opentelemetry","disambiguator":[9023576918707819415,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","num":74,"id":{"name":"tracing_core","disambiguator":[11049412947218707615,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","num":75,"id":{"name":"tracing_subscriber","disambiguator":[2178132933805356472,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","num":76,"id":{"name":"sharded_slab","disambiguator":[12592785086580649038,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","num":77,"id":{"name":"thread_local","disambiguator":[1435084233914952919,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client/in_flight_requests.rs","num":78,"id":{"name":"tracing","disambiguator":[15319995027613217254,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","num":79,"id":{"name":"tracing_attributes","disambiguator":[10017155599886563945,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","num":80,"id":{"name":"tarpc_plugins","disambiguator":[4918956234860257629,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client/in_flight_requests.rs","num":81,"id":{"name":"fnv","disambiguator":[11069884770607205786,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/context.rs","num":82,"id":{"name":"static_assertions","disambiguator":[15436247859040228103,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","num":83,"id":{"name":"anyhow","disambiguator":[4833928089903627396,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","num":84,"id":{"name":"humantime","disambiguator":[8720009476459348097,0]}}],"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":182,"byte_end":15716,"line_start":6,"line_end":421,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":20,"index":0},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":8979,"byte_end":8984,"line_start":209,"line_end":209,"column_start":9,"column_end":14},"alias_span":null,"name":"serde","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":22,"index":0},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":9031,"byte_end":9042,"line_start":212,"line_end":212,"column_start":9,"column_end":20},"alias_span":null,"name":"tokio_serde","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":80,"index":127},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":9232,"byte_end":9244,"line_start":221,"line_end":221,"column_start":24,"column_end":36},"alias_span":null,"name":"derive_serde","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":80,"index":128},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":9987,"byte_end":9994,"line_start":245,"line_end":245,"column_start":24,"column_end":31},"alias_span":null,"name":"service","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":80,"index":141},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":11668,"byte_end":11674,"line_start":301,"line_end":301,"column_start":24,"column_end":30},"alias_span":null,"name":"server","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1157},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":11801,"byte_end":11810,"line_start":309,"line_end":309,"column_start":35,"column_end":44},"alias_span":null,"name":"Transport","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":182,"byte_end":15716,"line_start":6,"line_end":421,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":184},{"krate":0,"index":263},{"krate":0,"index":266},{"krate":0,"index":269},{"krate":0,"index":272},{"krate":0,"index":500},{"krate":0,"index":566},{"krate":0,"index":1089},{"krate":0,"index":1167},{"krate":0,"index":1221},{"krate":0,"index":1224},{"krate":0,"index":1227},{"krate":0,"index":1228},{"krate":0,"index":1229},{"krate":0,"index":1232},{"krate":0,"index":1235},{"krate":0,"index":1238},{"krate":0,"index":3763},{"krate":0,"index":3770},{"krate":0,"index":3777},{"krate":0,"index":3760},{"krate":0,"index":3866},{"krate":0,"index":3871},{"krate":0,"index":3878},{"krate":0,"index":3858},{"krate":0,"index":3861},{"krate":0,"index":3863},{"krate":0,"index":3947},{"krate":0,"index":3951},{"krate":0,"index":3958},{"krate":0,"index":3926},{"krate":0,"index":3929},{"krate":0,"index":3932},{"krate":0,"index":3934},{"krate":0,"index":3938},{"krate":0,"index":3940},{"krate":0,"index":3943},{"krate":0,"index":4028},{"krate":0,"index":4030},{"krate":0,"index":4044},{"krate":0,"index":4004},{"krate":0,"index":4005},{"krate":0,"index":4014},{"krate":0,"index":4016},{"krate":0,"index":4018},{"krate":0,"index":4019},{"krate":0,"index":4022},{"krate":0,"index":4023},{"krate":0,"index":4025},{"krate":0,"index":1241},{"krate":0,"index":1244},{"krate":0,"index":1251}],"decl_id":null,"docs":" *Disclaimer*: This is not an official Google product.","sig":null,"attributes":[{"value":"/ *Disclaimer*: This is not an official Google product.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":182,"byte_end":239,"line_start":6,"line_end":6,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":240,"byte_end":243,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ tarpc is an RPC framework for rust with a focus on ease of use. Defining a","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":244,"byte_end":322,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/ service can be done in just a few lines of code, and most of the boilerplate of","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":323,"byte_end":406,"line_start":9,"line_end":9,"column_start":1,"column_end":84}},{"value":"/ writing a server is taken care of for you.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":407,"byte_end":453,"line_start":10,"line_end":10,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":454,"byte_end":457,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [Documentation](https://docs.rs/crate/tarpc/)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":458,"byte_end":507,"line_start":12,"line_end":12,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":508,"byte_end":511,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ## What is an RPC framework?","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":512,"byte_end":544,"line_start":14,"line_end":14,"column_start":1,"column_end":33}},{"value":"/ \"RPC\" stands for \"Remote Procedure Call,\" a function call where the work of","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":545,"byte_end":624,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ producing the return value is being done somewhere else. When an rpc function is","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":625,"byte_end":709,"line_start":16,"line_end":16,"column_start":1,"column_end":85}},{"value":"/ invoked, behind the scenes the function contacts some other process somewhere","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":710,"byte_end":791,"line_start":17,"line_end":17,"column_start":1,"column_end":82}},{"value":"/ and asks them to evaluate the function instead. The original function then","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":792,"byte_end":870,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ returns the value produced by the other process.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":871,"byte_end":923,"line_start":19,"line_end":19,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":924,"byte_end":927,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ RPC frameworks are a fundamental building block of most microservices-oriented","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":928,"byte_end":1010,"line_start":21,"line_end":21,"column_start":1,"column_end":83}},{"value":"/ architectures. Two well-known ones are [gRPC](http://www.grpc.io) and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":1011,"byte_end":1084,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/ [Cap'n Proto](https://capnproto.org/).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":1085,"byte_end":1127,"line_start":23,"line_end":23,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":1128,"byte_end":1131,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ tarpc differentiates itself from other RPC frameworks by defining the schema in code,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":1132,"byte_end":1221,"line_start":25,"line_end":25,"column_start":1,"column_end":90}},{"value":"/ rather than in a separate language such as .proto. This means there's no separate compilation","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":1222,"byte_end":1319,"line_start":26,"line_end":26,"column_start":1,"column_end":98}},{"value":"/ process, and no context switching between different languages.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":1320,"byte_end":1386,"line_start":27,"line_end":27,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":1387,"byte_end":1390,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Some other features of tarpc:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":1391,"byte_end":1424,"line_start":29,"line_end":29,"column_start":1,"column_end":34}},{"value":"/ - Pluggable transport: any type implementing `Stream<Item = Request> + Sink<Response>` can be","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":1425,"byte_end":1522,"line_start":30,"line_end":30,"column_start":1,"column_end":98}},{"value":"/   used as a transport to connect the client and server.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":1523,"byte_end":1582,"line_start":31,"line_end":31,"column_start":1,"column_end":60}},{"value":"/ - `Send + 'static` optional: if the transport doesn't require it, neither does tarpc!","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":1583,"byte_end":1672,"line_start":32,"line_end":32,"column_start":1,"column_end":90}},{"value":"/ - Cascading cancellation: dropping a request will send a cancellation message to the server.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":1673,"byte_end":1769,"line_start":33,"line_end":33,"column_start":1,"column_end":97}},{"value":"/   The server will cease any unfinished work on the request, subsequently cancelling any of its","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":1770,"byte_end":1868,"line_start":34,"line_end":34,"column_start":1,"column_end":99}},{"value":"/   own requests, repeating for the entire chain of transitive dependencies.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":1869,"byte_end":1947,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ - Configurable deadlines and deadline propagation: request deadlines default to 10s if","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":1948,"byte_end":2038,"line_start":36,"line_end":36,"column_start":1,"column_end":91}},{"value":"/   unspecified. The server will automatically cease work when the deadline has passed. Any","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":2039,"byte_end":2132,"line_start":37,"line_end":37,"column_start":1,"column_end":94}},{"value":"/   requests sent by the server that use the request context will propagate the request deadline.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":2133,"byte_end":2232,"line_start":38,"line_end":38,"column_start":1,"column_end":100}},{"value":"/   For example, if a server is handling a request with a 10s deadline, does 2s of work, then","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":2233,"byte_end":2328,"line_start":39,"line_end":39,"column_start":1,"column_end":96}},{"value":"/   sends a request to another server, that server will see an 8s deadline.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":2329,"byte_end":2406,"line_start":40,"line_end":40,"column_start":1,"column_end":78}},{"value":"/ - Distributed tracing: tarpc is instrumented with","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":2407,"byte_end":2460,"line_start":41,"line_end":41,"column_start":1,"column_end":54}},{"value":"/   [tracing](https://github.com/tokio-rs/tracing) primitives extended with","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":2461,"byte_end":2538,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/   [OpenTelemetry](https://opentelemetry.io/) traces. Using a compatible tracing subscriber like","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":2539,"byte_end":2638,"line_start":43,"line_end":43,"column_start":1,"column_end":100}},{"value":"/   [Jaeger](https://github.com/open-telemetry/opentelemetry-rust/tree/main/opentelemetry-jaeger),","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":2639,"byte_end":2739,"line_start":44,"line_end":44,"column_start":1,"column_end":101}},{"value":"/   each RPC can be traced through the client, server, and other dependencies downstream of the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":2740,"byte_end":2837,"line_start":45,"line_end":45,"column_start":1,"column_end":98}},{"value":"/   server. Even for applications not connected to a distributed tracing collector, the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":2838,"byte_end":2927,"line_start":46,"line_end":46,"column_start":1,"column_end":90}},{"value":"/   instrumentation can also be ingested by regular loggers like","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":2928,"byte_end":2994,"line_start":47,"line_end":47,"column_start":1,"column_end":67}},{"value":"/   [env_logger](https://github.com/env-logger-rs/env_logger/).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":2995,"byte_end":3060,"line_start":48,"line_end":48,"column_start":1,"column_end":66}},{"value":"/ - Serde serialization: enabling the `serde1` Cargo feature will make service requests and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":3061,"byte_end":3154,"line_start":49,"line_end":49,"column_start":1,"column_end":94}},{"value":"/   responses `Serialize + Deserialize`. It's entirely optional, though: in-memory transports can","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":3155,"byte_end":3254,"line_start":50,"line_end":50,"column_start":1,"column_end":100}},{"value":"/   be used, as well, so the price of serialization doesn't have to be paid when it's not needed.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":3255,"byte_end":3354,"line_start":51,"line_end":51,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":3355,"byte_end":3358,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ## Usage","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":3359,"byte_end":3371,"line_start":53,"line_end":53,"column_start":1,"column_end":13}},{"value":"/ Add to your `Cargo.toml` dependencies:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":3372,"byte_end":3414,"line_start":54,"line_end":54,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":3415,"byte_end":3418,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":3419,"byte_end":3430,"line_start":56,"line_end":56,"column_start":1,"column_end":12}},{"value":"/ tarpc = \"0.29\"","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":3431,"byte_end":3449,"line_start":57,"line_end":57,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":3450,"byte_end":3457,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":3458,"byte_end":3461,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The `tarpc::service` attribute expands to a collection of items that form an rpc service.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":3462,"byte_end":3555,"line_start":60,"line_end":60,"column_start":1,"column_end":94}},{"value":"/ These generated types make it easy and ergonomic to write servers with less boilerplate.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":3556,"byte_end":3648,"line_start":61,"line_end":61,"column_start":1,"column_end":93}},{"value":"/ Simply implement the generated service trait, and you're off to the races!","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":3649,"byte_end":3727,"line_start":62,"line_end":62,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":3728,"byte_end":3731,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":3732,"byte_end":3746,"line_start":64,"line_end":64,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":3747,"byte_end":3750,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ This example uses [tokio](https://tokio.rs), so add the following dependencies to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":3751,"byte_end":3836,"line_start":66,"line_end":66,"column_start":1,"column_end":86}},{"value":"/ your `Cargo.toml`:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":3837,"byte_end":3859,"line_start":67,"line_end":67,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":3860,"byte_end":3863,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":3864,"byte_end":3875,"line_start":69,"line_end":69,"column_start":1,"column_end":12}},{"value":"/ anyhow = \"1.0\"","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":3876,"byte_end":3894,"line_start":70,"line_end":70,"column_start":1,"column_end":19}},{"value":"/ futures = \"0.3\"","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":3895,"byte_end":3914,"line_start":71,"line_end":71,"column_start":1,"column_end":20}},{"value":"/ tarpc = { version = \"0.29\", features = [\"tokio1\"] }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":3915,"byte_end":3970,"line_start":72,"line_end":72,"column_start":1,"column_end":56}},{"value":"/ tokio = { version = \"1.0\", features = [\"macros\"] }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":3971,"byte_end":4025,"line_start":73,"line_end":73,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":4026,"byte_end":4033,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":4034,"byte_end":4037,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ In the following example, we use an in-process channel for communication between","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":4038,"byte_end":4122,"line_start":76,"line_end":76,"column_start":1,"column_end":85}},{"value":"/ client and server. In real code, you will likely communicate over the network.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":4123,"byte_end":4205,"line_start":77,"line_end":77,"column_start":1,"column_end":83}},{"value":"/ For a more real-world example, see [example-service](example-service).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":4206,"byte_end":4280,"line_start":78,"line_end":78,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":4281,"byte_end":4284,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ First, let's set up the dependencies and service definition.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":4285,"byte_end":4349,"line_start":80,"line_end":80,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":4350,"byte_end":4353,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":4354,"byte_end":4365,"line_start":82,"line_end":82,"column_start":1,"column_end":12}},{"value":"/ # extern crate futures;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":4366,"byte_end":4393,"line_start":83,"line_end":83,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":4394,"byte_end":4397,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ use futures::{","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":4398,"byte_end":4416,"line_start":85,"line_end":85,"column_start":1,"column_end":19}},{"value":"/     future::{self, Ready},","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":4417,"byte_end":4447,"line_start":86,"line_end":86,"column_start":1,"column_end":31}},{"value":"/     prelude::*,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":4448,"byte_end":4467,"line_start":87,"line_end":87,"column_start":1,"column_end":20}},{"value":"/ };","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":4468,"byte_end":4474,"line_start":88,"line_end":88,"column_start":1,"column_end":7}},{"value":"/ use tarpc::{","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":4475,"byte_end":4491,"line_start":89,"line_end":89,"column_start":1,"column_end":17}},{"value":"/     client, context,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":4492,"byte_end":4516,"line_start":90,"line_end":90,"column_start":1,"column_end":25}},{"value":"/     server::{self, incoming::Incoming, Channel},","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":4517,"byte_end":4569,"line_start":91,"line_end":91,"column_start":1,"column_end":53}},{"value":"/ };","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":4570,"byte_end":4576,"line_start":92,"line_end":92,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":4577,"byte_end":4580,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ // This is the service definition. It looks a lot like a trait definition.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":4581,"byte_end":4659,"line_start":94,"line_end":94,"column_start":1,"column_end":79}},{"value":"/ // It defines one RPC, hello, which takes one arg, name, and returns a String.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":4660,"byte_end":4742,"line_start":95,"line_end":95,"column_start":1,"column_end":83}},{"value":"/ #[tarpc::service]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":4743,"byte_end":4764,"line_start":96,"line_end":96,"column_start":1,"column_end":22}},{"value":"/ trait World {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":4765,"byte_end":4782,"line_start":97,"line_end":97,"column_start":1,"column_end":18}},{"value":"/     /// Returns a greeting for name.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":4783,"byte_end":4823,"line_start":98,"line_end":98,"column_start":1,"column_end":41}},{"value":"/     async fn hello(name: String) -> String;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":4824,"byte_end":4871,"line_start":99,"line_end":99,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":4872,"byte_end":4877,"line_start":100,"line_end":100,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":4878,"byte_end":4885,"line_start":101,"line_end":101,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":4886,"byte_end":4889,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ This service definition generates a trait called `World`. Next we need to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":4890,"byte_end":4967,"line_start":103,"line_end":103,"column_start":1,"column_end":78}},{"value":"/ implement it for our Server struct.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":4968,"byte_end":5007,"line_start":104,"line_end":104,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":5008,"byte_end":5011,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":5012,"byte_end":5023,"line_start":106,"line_end":106,"column_start":1,"column_end":12}},{"value":"/ # extern crate futures;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":5024,"byte_end":5051,"line_start":107,"line_end":107,"column_start":1,"column_end":28}},{"value":"/ # use futures::{","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":5052,"byte_end":5072,"line_start":108,"line_end":108,"column_start":1,"column_end":21}},{"value":"/ #     future::{self, Ready},","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":5073,"byte_end":5105,"line_start":109,"line_end":109,"column_start":1,"column_end":33}},{"value":"/ #     prelude::*,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":5106,"byte_end":5127,"line_start":110,"line_end":110,"column_start":1,"column_end":22}},{"value":"/ # };","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":5128,"byte_end":5136,"line_start":111,"line_end":111,"column_start":1,"column_end":9}},{"value":"/ # use tarpc::{","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":5137,"byte_end":5155,"line_start":112,"line_end":112,"column_start":1,"column_end":19}},{"value":"/ #     client, context,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":5156,"byte_end":5182,"line_start":113,"line_end":113,"column_start":1,"column_end":27}},{"value":"/ #     server::{self, incoming::Incoming},","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":5183,"byte_end":5228,"line_start":114,"line_end":114,"column_start":1,"column_end":46}},{"value":"/ # };","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":5229,"byte_end":5237,"line_start":115,"line_end":115,"column_start":1,"column_end":9}},{"value":"/ # // This is the service definition. It looks a lot like a trait definition.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":5238,"byte_end":5318,"line_start":116,"line_end":116,"column_start":1,"column_end":81}},{"value":"/ # // It defines one RPC, hello, which takes one arg, name, and returns a String.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":5319,"byte_end":5403,"line_start":117,"line_end":117,"column_start":1,"column_end":85}},{"value":"/ # #[tarpc::service]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":5404,"byte_end":5427,"line_start":118,"line_end":118,"column_start":1,"column_end":24}},{"value":"/ # trait World {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":5428,"byte_end":5447,"line_start":119,"line_end":119,"column_start":1,"column_end":20}},{"value":"/ #     /// Returns a greeting for name.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":5448,"byte_end":5490,"line_start":120,"line_end":120,"column_start":1,"column_end":43}},{"value":"/ #     async fn hello(name: String) -> String;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":5491,"byte_end":5540,"line_start":121,"line_end":121,"column_start":1,"column_end":50}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":5541,"byte_end":5548,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/ // This is the type that implements the generated World trait. It is the business logic","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":5549,"byte_end":5640,"line_start":123,"line_end":123,"column_start":1,"column_end":92}},{"value":"/ // and is used to start the server.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":5641,"byte_end":5680,"line_start":124,"line_end":124,"column_start":1,"column_end":40}},{"value":"/ #[derive(Clone)]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":5681,"byte_end":5701,"line_start":125,"line_end":125,"column_start":1,"column_end":21}},{"value":"/ struct HelloServer;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":5702,"byte_end":5725,"line_start":126,"line_end":126,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":5726,"byte_end":5729,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ impl World for HelloServer {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":5730,"byte_end":5762,"line_start":128,"line_end":128,"column_start":1,"column_end":33}},{"value":"/     // Each defined rpc generates two items in the trait, a fn that serves the RPC, and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":5763,"byte_end":5854,"line_start":129,"line_end":129,"column_start":1,"column_end":92}},{"value":"/     // an associated type representing the future output by the fn.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":5855,"byte_end":5926,"line_start":130,"line_end":130,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":5927,"byte_end":5930,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/     type HelloFut = Ready<String>;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":5931,"byte_end":5969,"line_start":132,"line_end":132,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":5970,"byte_end":5973,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/     fn hello(self, _: context::Context, name: String) -> Self::HelloFut {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":5974,"byte_end":6051,"line_start":134,"line_end":134,"column_start":1,"column_end":78}},{"value":"/         future::ready(format!(\"Hello, {name}!\"))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":6052,"byte_end":6104,"line_start":135,"line_end":135,"column_start":1,"column_end":53}},{"value":"/     }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":6105,"byte_end":6114,"line_start":136,"line_end":136,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":6115,"byte_end":6120,"line_start":137,"line_end":137,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":6121,"byte_end":6128,"line_start":138,"line_end":138,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":6129,"byte_end":6132,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ Lastly let's write our `main` that will start the server. While this example uses an","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":6133,"byte_end":6221,"line_start":140,"line_end":140,"column_start":1,"column_end":89}},{"value":"/ [in-process channel](transport::channel), tarpc also ships a generic [`serde_transport`]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":6222,"byte_end":6314,"line_start":141,"line_end":141,"column_start":1,"column_end":93}},{"value":"/ behind the `serde-transport` feature, with additional [TCP](serde_transport::tcp) functionality","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":6315,"byte_end":6414,"line_start":142,"line_end":142,"column_start":1,"column_end":100}},{"value":"/ available behind the `tcp` feature.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":6415,"byte_end":6454,"line_start":143,"line_end":143,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":6455,"byte_end":6458,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":6459,"byte_end":6470,"line_start":145,"line_end":145,"column_start":1,"column_end":12}},{"value":"/ # extern crate futures;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":6471,"byte_end":6498,"line_start":146,"line_end":146,"column_start":1,"column_end":28}},{"value":"/ # use futures::{","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":6499,"byte_end":6519,"line_start":147,"line_end":147,"column_start":1,"column_end":21}},{"value":"/ #     future::{self, Ready},","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":6520,"byte_end":6552,"line_start":148,"line_end":148,"column_start":1,"column_end":33}},{"value":"/ #     prelude::*,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":6553,"byte_end":6574,"line_start":149,"line_end":149,"column_start":1,"column_end":22}},{"value":"/ # };","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":6575,"byte_end":6583,"line_start":150,"line_end":150,"column_start":1,"column_end":9}},{"value":"/ # use tarpc::{","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":6584,"byte_end":6602,"line_start":151,"line_end":151,"column_start":1,"column_end":19}},{"value":"/ #     client, context,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":6603,"byte_end":6629,"line_start":152,"line_end":152,"column_start":1,"column_end":27}},{"value":"/ #     server::{self, Channel},","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":6630,"byte_end":6664,"line_start":153,"line_end":153,"column_start":1,"column_end":35}},{"value":"/ # };","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":6665,"byte_end":6673,"line_start":154,"line_end":154,"column_start":1,"column_end":9}},{"value":"/ # // This is the service definition. It looks a lot like a trait definition.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":6674,"byte_end":6754,"line_start":155,"line_end":155,"column_start":1,"column_end":81}},{"value":"/ # // It defines one RPC, hello, which takes one arg, name, and returns a String.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":6755,"byte_end":6839,"line_start":156,"line_end":156,"column_start":1,"column_end":85}},{"value":"/ # #[tarpc::service]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":6840,"byte_end":6863,"line_start":157,"line_end":157,"column_start":1,"column_end":24}},{"value":"/ # trait World {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":6864,"byte_end":6883,"line_start":158,"line_end":158,"column_start":1,"column_end":20}},{"value":"/ #     /// Returns a greeting for name.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":6884,"byte_end":6926,"line_start":159,"line_end":159,"column_start":1,"column_end":43}},{"value":"/ #     async fn hello(name: String) -> String;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":6927,"byte_end":6976,"line_start":160,"line_end":160,"column_start":1,"column_end":50}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":6977,"byte_end":6984,"line_start":161,"line_end":161,"column_start":1,"column_end":8}},{"value":"/ # // This is the type that implements the generated World trait. It is the business logic","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":6985,"byte_end":7078,"line_start":162,"line_end":162,"column_start":1,"column_end":94}},{"value":"/ # // and is used to start the server.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":7079,"byte_end":7120,"line_start":163,"line_end":163,"column_start":1,"column_end":42}},{"value":"/ # #[derive(Clone)]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":7121,"byte_end":7143,"line_start":164,"line_end":164,"column_start":1,"column_end":23}},{"value":"/ # struct HelloServer;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":7144,"byte_end":7169,"line_start":165,"line_end":165,"column_start":1,"column_end":26}},{"value":"/ # impl World for HelloServer {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":7170,"byte_end":7204,"line_start":166,"line_end":166,"column_start":1,"column_end":35}},{"value":"/ #     // Each defined rpc generates two items in the trait, a fn that serves the RPC, and","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":7205,"byte_end":7298,"line_start":167,"line_end":167,"column_start":1,"column_end":94}},{"value":"/ #     // an associated type representing the future output by the fn.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":7299,"byte_end":7372,"line_start":168,"line_end":168,"column_start":1,"column_end":74}},{"value":"/ #     type HelloFut = Ready<String>;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":7373,"byte_end":7413,"line_start":169,"line_end":169,"column_start":1,"column_end":41}},{"value":"/ #     fn hello(self, _: context::Context, name: String) -> Self::HelloFut {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":7414,"byte_end":7493,"line_start":170,"line_end":170,"column_start":1,"column_end":80}},{"value":"/ #         future::ready(format!(\"Hello, {name}!\"))","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":7494,"byte_end":7548,"line_start":171,"line_end":171,"column_start":1,"column_end":55}},{"value":"/ #     }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":7549,"byte_end":7560,"line_start":172,"line_end":172,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":7561,"byte_end":7568,"line_start":173,"line_end":173,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(not(feature = \"tokio1\"))]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":7569,"byte_end":7606,"line_start":174,"line_end":174,"column_start":1,"column_end":38}},{"value":"/ # fn main() {}","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":7607,"byte_end":7625,"line_start":175,"line_end":175,"column_start":1,"column_end":19}},{"value":"/ # #[cfg(feature = \"tokio1\")]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":7626,"byte_end":7658,"line_start":176,"line_end":176,"column_start":1,"column_end":33}},{"value":"/ #[tokio::main]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":7659,"byte_end":7677,"line_start":177,"line_end":177,"column_start":1,"column_end":19}},{"value":"/ async fn main() -> anyhow::Result<()> {","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":7678,"byte_end":7721,"line_start":178,"line_end":178,"column_start":1,"column_end":44}},{"value":"/     let (client_transport, server_transport) = tarpc::transport::channel::unbounded();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":7722,"byte_end":7812,"line_start":179,"line_end":179,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":7813,"byte_end":7816,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/     let server = server::BaseChannel::with_defaults(server_transport);","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":7817,"byte_end":7891,"line_start":181,"line_end":181,"column_start":1,"column_end":75}},{"value":"/     tokio::spawn(server.execute(HelloServer.serve()));","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":7892,"byte_end":7950,"line_start":182,"line_end":182,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":7951,"byte_end":7954,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/     // WorldClient is generated by the #[tarpc::service] attribute. It has a constructor `new`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":7955,"byte_end":8053,"line_start":184,"line_end":184,"column_start":1,"column_end":99}},{"value":"/     // that takes a config and any Transport as input.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":8054,"byte_end":8112,"line_start":185,"line_end":185,"column_start":1,"column_end":59}},{"value":"/     let mut client = WorldClient::new(client::Config::default(), client_transport).spawn();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":8113,"byte_end":8208,"line_start":186,"line_end":186,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":8209,"byte_end":8212,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/     // The client has an RPC method for each RPC defined in the annotated trait. It takes the same","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":8213,"byte_end":8315,"line_start":188,"line_end":188,"column_start":1,"column_end":103}},{"value":"/     // args as defined, with the addition of a Context, which is always the first arg. The Context","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":8316,"byte_end":8418,"line_start":189,"line_end":189,"column_start":1,"column_end":103}},{"value":"/     // specifies a deadline and trace information which can be helpful in debugging requests.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":8419,"byte_end":8516,"line_start":190,"line_end":190,"column_start":1,"column_end":98}},{"value":"/     let hello = client.hello(context::current(), \"Stim\".to_string()).await?;","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":8517,"byte_end":8597,"line_start":191,"line_end":191,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":8598,"byte_end":8601,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/     println!(\"{hello}\");","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":8602,"byte_end":8630,"line_start":193,"line_end":193,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":8631,"byte_end":8634,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":8635,"byte_end":8649,"line_start":195,"line_end":195,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":8650,"byte_end":8655,"line_start":196,"line_end":196,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":8656,"byte_end":8663,"line_start":197,"line_end":197,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":8664,"byte_end":8667,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ ## Service Documentation","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":8668,"byte_end":8696,"line_start":199,"line_end":199,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":8697,"byte_end":8700,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ Use `cargo doc` as you normally would to see the documentation created for all","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":8701,"byte_end":8783,"line_start":201,"line_end":201,"column_start":1,"column_end":83}},{"value":"/ items expanded by a `service!` invocation.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":8784,"byte_end":8830,"line_start":202,"line_end":202,"column_start":1,"column_end":47}},{"value":"deny(missing_docs)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":8831,"byte_end":8853,"line_start":203,"line_end":203,"column_start":1,"column_end":23}},{"value":"allow(clippy :: type_complexity)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":8854,"byte_end":8888,"line_start":204,"line_end":204,"column_start":1,"column_end":35}}]},{"kind":"Mod","id":{"krate":0,"index":9},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"serde_transport","qualname":"::serde_transport","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":1327},{"krate":0,"index":1263},{"krate":0,"index":52},{"krate":0,"index":58},{"krate":0,"index":68},{"krate":0,"index":83},{"krate":0,"index":89},{"krate":0,"index":96}],"decl_id":null,"docs":" A generic Serde-based `Transport` that can serialize anything supported by `tokio-serde` via any medium that implements `AsyncRead` and `AsyncWrite`.\n","sig":null,"attributes":[{"value":"cfg(feature = \"serde-transport\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":9045,"byte_end":9080,"line_start":214,"line_end":214,"column_start":1,"column_end":36}},{"value":"/ A generic Serde-based `Transport` that can serialize anything supported by `tokio-serde` via any medium that implements `AsyncRead` and `AsyncWrite`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","byte_start":15901,"byte_end":16054,"line_start":7,"line_end":7,"column_start":1,"column_end":154}},{"value":"deny(missing_docs)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","byte_start":16056,"byte_end":16078,"line_start":9,"line_end":9,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":1327},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","byte_start":16481,"byte_end":16490,"line_start":21,"line_end":21,"column_start":12,"column_end":21},"name":"Transport","qualname":"::serde_transport::Transport","value":"Transport {  }","parent":null,"children":[{"krate":0,"index":1332}],"decl_id":null,"docs":" A transport that serializes to, and deserializes from, a byte stream.\n","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","byte_start":16455,"byte_end":16469,"line_start":20,"line_end":20,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":1293},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","byte_start":16481,"byte_end":16490,"line_start":21,"line_end":21,"column_start":12,"column_end":21},"name":"__Transport","qualname":"::serde_transport::_::__Transport","value":"__Transport {  }","parent":null,"children":[{"krate":0,"index":1299},{"krate":0,"index":1300}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","byte_start":16455,"byte_end":16469,"line_start":20,"line_end":20,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","byte_start":16772,"byte_end":16779,"line_start":28,"line_end":28,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Transport<S, Item, SinkItem, Codec>>::get_ref","value":"fn get_ref(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner transport over which messages are sent and received.\n","sig":null,"attributes":[{"value":"/ Returns the inner transport over which messages are sent and received.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","byte_start":16686,"byte_end":16760,"line_start":27,"line_end":27,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","byte_start":17266,"byte_end":17275,"line_start":44,"line_end":44,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Transport<S, Item, SinkItem, Codec> as futures::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<io::Result<Item>>>","parent":{"krate":24,"index":96},"children":[],"decl_id":{"krate":24,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","byte_start":17888,"byte_end":17898,"line_start":63,"line_end":63,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"<Transport<S, Item, SinkItem, Codec> as futures::Sink>::poll_ready","value":"fn poll_ready(Pin<&mut Self>, &mut Context) -> Poll<io::Result<()>>","parent":{"krate":25,"index":17},"children":[],"decl_id":{"krate":25,"index":20},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","byte_start":18119,"byte_end":18129,"line_start":70,"line_end":70,"column_start":8,"column_end":18},"name":"start_send","qualname":"<Transport<S, Item, SinkItem, Codec> as futures::Sink>::start_send","value":"fn start_send(Pin<&mut Self>, SinkItem) -> io::Result<()>","parent":{"krate":25,"index":17},"children":[],"decl_id":{"krate":25,"index":21},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","byte_start":18340,"byte_end":18350,"line_start":77,"line_end":77,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<Transport<S, Item, SinkItem, Codec> as futures::Sink>::poll_flush","value":"fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<io::Result<()>>","parent":{"krate":25,"index":17},"children":[],"decl_id":{"krate":25,"index":22},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","byte_start":18571,"byte_end":18581,"line_start":84,"line_end":84,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<Transport<S, Item, SinkItem, Codec> as futures::Sink>::poll_close","value":"fn poll_close(Pin<&mut Self>, &mut Context) -> Poll<io::Result<()>>","parent":{"krate":25,"index":17},"children":[],"decl_id":{"krate":25,"index":23},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":83},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","byte_start":18886,"byte_end":18889,"line_start":93,"line_end":93,"column_start":8,"column_end":11},"name":"new","qualname":"::serde_transport::new","value":"fn new<S, Item, SinkItem, Codec>(Framed<S, LengthDelimitedCodec>, Codec)\n-> Transport<S, Item, SinkItem, Codec> where S: AsyncWrite + AsyncRead,\nItem: for<'de> Deserialize, SinkItem: Serialize, Codec: Serializer<SinkItem> +\nDeserializer<Item>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new transport from a framed transport and a serialization codec.\n","sig":null,"attributes":[{"value":"/ Constructs a new transport from a framed transport and a serialization codec.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","byte_start":18797,"byte_end":18878,"line_start":92,"line_end":92,"column_start":1,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","byte_start":19505,"byte_end":19509,"line_start":115,"line_end":115,"column_start":8,"column_end":12},"name":"from","qualname":"<Transport<S, Item, SinkItem, Codec> as std::convert::From>::from","value":"fn from((S, Codec)) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":96},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","byte_start":19749,"byte_end":19752,"line_start":123,"line_end":123,"column_start":9,"column_end":12},"name":"tcp","qualname":"::serde_transport::tcp","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":113},{"krate":0,"index":116},{"krate":0,"index":119},{"krate":0,"index":122},{"krate":0,"index":129},{"krate":0,"index":1403},{"krate":0,"index":1333},{"krate":0,"index":135},{"krate":0,"index":144},{"krate":0,"index":151},{"krate":0,"index":159},{"krate":0,"index":1489},{"krate":0,"index":1418},{"krate":0,"index":1412},{"krate":0,"index":168},{"krate":0,"index":176}],"decl_id":null,"docs":" TCP support for generic transport using Tokio.\n","sig":null,"attributes":[{"value":"cfg(feature = \"tcp\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","byte_start":19619,"byte_end":19642,"line_start":120,"line_end":120,"column_start":1,"column_end":24}},{"value":"/ TCP support for generic transport using Tokio.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","byte_start":19690,"byte_end":19740,"line_start":122,"line_end":122,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","byte_start":20304,"byte_end":20313,"line_start":142,"line_end":142,"column_start":16,"column_end":25},"name":"peer_addr","qualname":"<Transport<TcpStream, Item, SinkItem, Codec>>::peer_addr","value":"fn peer_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the peer address of the underlying TcpStream.\n","sig":null,"attributes":[{"value":"/ Returns the peer address of the underlying TcpStream.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","byte_start":20231,"byte_end":20288,"line_start":141,"line_end":141,"column_start":9,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","byte_start":20496,"byte_end":20506,"line_start":146,"line_end":146,"column_start":16,"column_end":26},"name":"local_addr","qualname":"<Transport<TcpStream, Item, SinkItem, Codec>>::local_addr","value":"fn local_addr(&Self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the local address of the underlying TcpStream.\n","sig":null,"attributes":[{"value":"/ Returns the local address of the underlying TcpStream.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","byte_start":20422,"byte_end":20480,"line_start":145,"line_end":145,"column_start":9,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":1403},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","byte_start":20732,"byte_end":20739,"line_start":153,"line_end":153,"column_start":16,"column_end":23},"name":"Connect","qualname":"::serde_transport::tcp::Connect","value":"Connect {  }","parent":null,"children":[{"krate":0,"index":1411},{"krate":0,"index":1408},{"krate":0,"index":1409},{"krate":0,"index":1410}],"decl_id":null,"docs":" A connection Future that also exposes the length-delimited framing config.\n","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","byte_start":20702,"byte_end":20716,"line_start":152,"line_end":152,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":1369},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","byte_start":20732,"byte_end":20739,"line_start":153,"line_end":153,"column_start":16,"column_end":23},"name":"__Connect","qualname":"::serde_transport::tcp::_::__Connect","value":"__Connect {  }","parent":null,"children":[{"krate":0,"index":1375},{"krate":0,"index":1376}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","byte_start":20702,"byte_end":20716,"line_start":152,"line_end":152,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","byte_start":21347,"byte_end":21351,"line_start":171,"line_end":171,"column_start":12,"column_end":16},"name":"poll","qualname":"<Connect<T, Item, SinkItem, CodecFn> as futures::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","byte_start":21760,"byte_end":21766,"line_start":179,"line_end":179,"column_start":16,"column_end":22},"name":"config","qualname":"<Connect<T, Item, SinkItem, CodecFn>>::config","value":"fn config(&Self) -> &length_delimited::Builder","parent":null,"children":[],"decl_id":null,"docs":" Returns an immutable reference to the length-delimited codec's config.\n","sig":null,"attributes":[{"value":"/ Returns an immutable reference to the length-delimited codec's config.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","byte_start":21670,"byte_end":21744,"line_start":178,"line_end":178,"column_start":9,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","byte_start":21937,"byte_end":21947,"line_start":184,"line_end":184,"column_start":16,"column_end":26},"name":"config_mut","qualname":"<Connect<T, Item, SinkItem, CodecFn>>::config_mut","value":"fn config_mut(&mut Self) -> &mut length_delimited::Builder","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the length-delimited codec's config.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the length-delimited codec's config.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","byte_start":21850,"byte_end":21921,"line_start":183,"line_end":183,"column_start":9,"column_end":80}}]},{"kind":"Function","id":{"krate":0,"index":151},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","byte_start":22124,"byte_end":22131,"line_start":190,"line_end":190,"column_start":12,"column_end":19},"name":"connect","qualname":"::serde_transport::tcp::connect","value":"fn connect<A, Item, SinkItem, Codec, CodecFn>(A, CodecFn)\n-> Connect</*impl Trait*/, Item, SinkItem, CodecFn> where A: ToSocketAddrs,\nItem: for<'de> Deserialize, SinkItem: Serialize, Codec: Serializer<SinkItem> +\nDeserializer<Item>, CodecFn: Fn() -> Codec","parent":null,"children":[],"decl_id":null,"docs":" Connects to `addr`, wrapping the connection in a TCP transport.\n","sig":null,"attributes":[{"value":"/ Connects to `addr`, wrapping the connection in a TCP transport.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","byte_start":22045,"byte_end":22112,"line_start":189,"line_end":189,"column_start":5,"column_end":72}}]},{"kind":"Function","id":{"krate":0,"index":159},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","byte_start":22781,"byte_end":22787,"line_start":210,"line_end":210,"column_start":18,"column_end":24},"name":"listen","qualname":"::serde_transport::tcp::listen","value":"async fn listen<A, Item, SinkItem, Codec, CodecFn>(A, CodecFn)\n-> /*impl Trait*/ where A: ToSocketAddrs, Item: for<'de> Deserialize,\nCodec: Serializer<SinkItem> + Deserializer<Item>, CodecFn: Fn() -> Codec","parent":null,"children":[],"decl_id":null,"docs":" Listens on `addr`, wrapping accepted connections in TCP transports.\n","sig":null,"attributes":[{"value":"/ Listens on `addr`, wrapping accepted connections in TCP transports.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","byte_start":22692,"byte_end":22763,"line_start":209,"line_end":209,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":1489},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","byte_start":23532,"byte_end":23540,"line_start":234,"line_end":234,"column_start":16,"column_end":24},"name":"Incoming","qualname":"::serde_transport::tcp::Incoming","value":"Incoming {  }","parent":null,"children":[{"krate":0,"index":1494},{"krate":0,"index":1495},{"krate":0,"index":1496},{"krate":0,"index":1497},{"krate":0,"index":1498}],"decl_id":null,"docs":" A [`TcpListener`] that wraps connections in [transports](Transport).\n","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","byte_start":23481,"byte_end":23495,"line_start":232,"line_end":232,"column_start":5,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":1456},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","byte_start":23532,"byte_end":23540,"line_start":234,"line_end":234,"column_start":16,"column_end":24},"name":"__Incoming","qualname":"::serde_transport::tcp::_::__Incoming","value":"__Incoming {  }","parent":null,"children":[{"krate":0,"index":1462}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","byte_start":23481,"byte_end":23495,"line_start":232,"line_end":232,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","byte_start":23930,"byte_end":23940,"line_start":244,"line_end":244,"column_start":16,"column_end":26},"name":"local_addr","qualname":"<Incoming<Item, SinkItem, Codec, CodecFn>>::local_addr","value":"fn local_addr(&Self) -> SocketAddr","parent":null,"children":[],"decl_id":null,"docs":" Returns the address being listened on.\n","sig":null,"attributes":[{"value":"/ Returns the address being listened on.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","byte_start":23872,"byte_end":23914,"line_start":243,"line_end":243,"column_start":9,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","byte_start":24101,"byte_end":24107,"line_start":249,"line_end":249,"column_start":16,"column_end":22},"name":"config","qualname":"<Incoming<Item, SinkItem, Codec, CodecFn>>::config","value":"fn config(&Self) -> &length_delimited::Builder","parent":null,"children":[],"decl_id":null,"docs":" Returns an immutable reference to the length-delimited codec's config.\n","sig":null,"attributes":[{"value":"/ Returns an immutable reference to the length-delimited codec's config.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","byte_start":24011,"byte_end":24085,"line_start":248,"line_end":248,"column_start":9,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","byte_start":24278,"byte_end":24288,"line_start":254,"line_end":254,"column_start":16,"column_end":26},"name":"config_mut","qualname":"<Incoming<Item, SinkItem, Codec, CodecFn>>::config_mut","value":"fn config_mut(&mut Self) -> &mut length_delimited::Builder","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the length-delimited codec's config.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the length-delimited codec's config.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","byte_start":24191,"byte_end":24262,"line_start":253,"line_end":253,"column_start":9,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","byte_start":24740,"byte_end":24749,"line_start":268,"line_end":268,"column_start":12,"column_end":21},"name":"poll_next","qualname":"<Incoming<Item, SinkItem, Codec, CodecFn> as futures::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":24,"index":96},"children":[],"decl_id":{"krate":24,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":184},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"trace","qualname":"::trace","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","parent":null,"children":[{"krate":0,"index":185},{"krate":0,"index":188},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":199},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":206},{"krate":0,"index":209},{"krate":0,"index":1516},{"krate":0,"index":1520},{"krate":0,"index":1526},{"krate":0,"index":1499},{"krate":0,"index":1501},{"krate":0,"index":1503},{"krate":0,"index":1504},{"krate":0,"index":1507},{"krate":0,"index":1508},{"krate":0,"index":1510},{"krate":0,"index":1513},{"krate":0,"index":1515},{"krate":0,"index":1586},{"krate":0,"index":1588},{"krate":0,"index":1602},{"krate":0,"index":1571},{"krate":0,"index":1573},{"krate":0,"index":1574},{"krate":0,"index":1577},{"krate":0,"index":1578},{"krate":0,"index":1580},{"krate":0,"index":1583},{"krate":0,"index":1585},{"krate":0,"index":1647},{"krate":0,"index":1650},{"krate":0,"index":1656},{"krate":0,"index":1632},{"krate":0,"index":1634},{"krate":0,"index":1635},{"krate":0,"index":1638},{"krate":0,"index":1639},{"krate":0,"index":1641},{"krate":0,"index":1644},{"krate":0,"index":1646},{"krate":0,"index":1689},{"krate":0,"index":1694},{"krate":0,"index":1700},{"krate":0,"index":1675},{"krate":0,"index":1677},{"krate":0,"index":1678},{"krate":0,"index":1680},{"krate":0,"index":1681},{"krate":0,"index":1683},{"krate":0,"index":1686},{"krate":0,"index":1688},{"krate":0,"index":212},{"krate":0,"index":214},{"krate":0,"index":218},{"krate":0,"index":222},{"krate":0,"index":224},{"krate":0,"index":226},{"krate":0,"index":228},{"krate":0,"index":230},{"krate":0,"index":232},{"krate":0,"index":234},{"krate":0,"index":236},{"krate":0,"index":238},{"krate":0,"index":241},{"krate":0,"index":243},{"krate":0,"index":245},{"krate":0,"index":247},{"krate":0,"index":1739},{"krate":0,"index":1741},{"krate":0,"index":249},{"krate":0,"index":251},{"krate":0,"index":253},{"krate":0,"index":255},{"krate":0,"index":257}],"decl_id":null,"docs":" Provides building blocks for tracing distributed programs.","sig":null,"attributes":[{"value":"deny(missing_docs, missing_debug_implementations)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":29009,"byte_end":29062,"line_start":7,"line_end":7,"column_start":1,"column_end":54}},{"value":"/ Provides building blocks for tracing distributed programs.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":29064,"byte_end":29126,"line_start":9,"line_end":9,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":29127,"byte_end":29130,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ A trace is logically a tree of causally-related events called spans. Traces are tracked via a","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":29131,"byte_end":29228,"line_start":11,"line_end":11,"column_start":1,"column_end":98}},{"value":"/ [context](Context) that identifies the current trace, span, and parent of the current span.  In","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":29229,"byte_end":29328,"line_start":12,"line_end":12,"column_start":1,"column_end":100}},{"value":"/ distributed systems, a context can be sent from client to server to connect events occurring on","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":29329,"byte_end":29428,"line_start":13,"line_end":13,"column_start":1,"column_end":100}},{"value":"/ either side.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":29429,"byte_end":29445,"line_start":14,"line_end":14,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":29446,"byte_end":29449,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This crate's design is based on [opencensus","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":29450,"byte_end":29497,"line_start":16,"line_end":16,"column_start":1,"column_end":48}},{"value":"/ tracing](https://opencensus.io/core-concepts/tracing/).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":29498,"byte_end":29557,"line_start":17,"line_end":17,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1516},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":30190,"byte_end":30197,"line_start":34,"line_end":34,"column_start":12,"column_end":19},"name":"Context","qualname":"::trace::Context","value":"Context { trace_id, span_id, sampling_decision }","parent":null,"children":[{"krate":0,"index":1517},{"krate":0,"index":1518},{"krate":0,"index":1519}],"decl_id":null,"docs":" A context for tracing the execution of processes, distributed or otherwise.","sig":null,"attributes":[{"value":"/ A context for tracing the execution of processes, distributed or otherwise.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":29767,"byte_end":29846,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":29847,"byte_end":29850,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Consists of a span identifying an event, an optional parent span identifying a causal event","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":29851,"byte_end":29946,"line_start":30,"line_end":30,"column_start":1,"column_end":96}},{"value":"/ that triggered the current span, and a trace with which all related spans are associated.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":29947,"byte_end":30040,"line_start":31,"line_end":31,"column_start":1,"column_end":94}}]},{"kind":"Field","id":{"krate":0,"index":1517},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":30379,"byte_end":30387,"line_start":37,"line_end":37,"column_start":9,"column_end":17},"name":"trace_id","qualname":"::trace::Context::trace_id","value":"trace::TraceId","parent":{"krate":0,"index":1516},"children":[],"decl_id":null,"docs":" An identifier of the trace associated with the current context. A trace ID is typically\n created at a root span and passed along through all causal events.\n","sig":null,"attributes":[{"value":"/ An identifier of the trace associated with the current context. A trace ID is typically","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":30204,"byte_end":30295,"line_start":35,"line_end":35,"column_start":5,"column_end":96}},{"value":"/ created at a root span and passed along through all causal events.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":30300,"byte_end":30370,"line_start":36,"line_end":36,"column_start":5,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":1518},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":30678,"byte_end":30685,"line_start":41,"line_end":41,"column_start":9,"column_end":16},"name":"span_id","qualname":"::trace::Context::span_id","value":"trace::SpanId","parent":{"krate":0,"index":1516},"children":[],"decl_id":null,"docs":" An identifier of the current span. In typical RPC usage, a span is created by a client\n before making an RPC, and the span ID is sent to the server. The server is free to create\n its own spans, for which it sets the client's span as the parent span.\n","sig":null,"attributes":[{"value":"/ An identifier of the current span. In typical RPC usage, a span is created by a client","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":30402,"byte_end":30492,"line_start":38,"line_end":38,"column_start":5,"column_end":95}},{"value":"/ before making an RPC, and the span ID is sent to the server. The server is free to create","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":30497,"byte_end":30590,"line_start":39,"line_end":39,"column_start":5,"column_end":98}},{"value":"/ its own spans, for which it sets the client's span as the parent span.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":30595,"byte_end":30669,"line_start":40,"line_end":40,"column_start":5,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":1519},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":31359,"byte_end":31376,"line_start":49,"line_end":49,"column_start":9,"column_end":26},"name":"sampling_decision","qualname":"::trace::Context::sampling_decision","value":"trace::SamplingDecision","parent":{"krate":0,"index":1516},"children":[],"decl_id":null,"docs":" Indicates whether a sampler has already decided whether or not to sample the trace\n associated with the Context. If `sampling_decision` is None, then a decision has not yet\n been made. Downstream samplers do not need to abide by \"no sample\" decisions--for example,\n an upstream client may choose to never sample, which may not make sense for the client's\n dependencies. On the other hand, if an upstream process has chosen to sample this trace,\n then the downstream samplers are expected to respect that decision and also sample the\n trace. Otherwise, the full trace would not be able to be reconstructed.\n","sig":null,"attributes":[{"value":"/ Indicates whether a sampler has already decided whether or not to sample the trace","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":30699,"byte_end":30785,"line_start":42,"line_end":42,"column_start":5,"column_end":91}},{"value":"/ associated with the Context. If `sampling_decision` is None, then a decision has not yet","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":30790,"byte_end":30882,"line_start":43,"line_end":43,"column_start":5,"column_end":97}},{"value":"/ been made. Downstream samplers do not need to abide by \"no sample\" decisions--for example,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":30887,"byte_end":30981,"line_start":44,"line_end":44,"column_start":5,"column_end":99}},{"value":"/ an upstream client may choose to never sample, which may not make sense for the client's","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":30986,"byte_end":31078,"line_start":45,"line_end":45,"column_start":5,"column_end":97}},{"value":"/ dependencies. On the other hand, if an upstream process has chosen to sample this trace,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":31083,"byte_end":31175,"line_start":46,"line_end":46,"column_start":5,"column_end":97}},{"value":"/ then the downstream samplers are expected to respect that decision and also sample the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":31180,"byte_end":31270,"line_start":47,"line_end":47,"column_start":5,"column_end":95}},{"value":"/ trace. Otherwise, the full trace would not be able to be reconstructed.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":31275,"byte_end":31350,"line_start":48,"line_end":48,"column_start":5,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":1586},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":31656,"byte_end":31663,"line_start":56,"line_end":56,"column_start":12,"column_end":19},"name":"TraceId","qualname":"::trace::TraceId","value":"","parent":null,"children":[],"decl_id":null,"docs":" A 128-bit UUID identifying a trace. All spans caused by the same originating span share the\n same trace ID.\n","sig":null,"attributes":[{"value":"/ A 128-bit UUID identifying a trace. All spans caused by the same originating span share the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":31399,"byte_end":31494,"line_start":52,"line_end":52,"column_start":1,"column_end":96}},{"value":"/ same trace ID.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":31495,"byte_end":31513,"line_start":53,"line_end":53,"column_start":1,"column_end":19}}]},{"kind":"Struct","id":{"krate":0,"index":1647},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":31974,"byte_end":31980,"line_start":61,"line_end":61,"column_start":12,"column_end":18},"name":"SpanId","qualname":"::trace::SpanId","value":"","parent":null,"children":[],"decl_id":null,"docs":" A 64-bit identifier of a span within a trace. The identifier is unique within the span's trace.\n","sig":null,"attributes":[{"value":"/ A 64-bit identifier of a span within a trace. The identifier is unique within the span's trace.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":31732,"byte_end":31831,"line_start":58,"line_end":58,"column_start":1,"column_end":100}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1690},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":32814,"byte_end":32821,"line_start":74,"line_end":74,"column_start":5,"column_end":12},"name":"Sampled","qualname":"::trace::SamplingDecision::Sampled","value":"SamplingDecision::Sampled","parent":{"krate":0,"index":1689},"children":[],"decl_id":null,"docs":" The associated span was sampled by its creating process. Child spans must also be sampled.\n","sig":null,"attributes":[{"value":"/ The associated span was sampled by its creating process. Child spans must also be sampled.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":32715,"byte_end":32809,"line_start":73,"line_end":73,"column_start":5,"column_end":99}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1692},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":32896,"byte_end":32905,"line_start":76,"line_end":76,"column_start":5,"column_end":14},"name":"Unsampled","qualname":"::trace::SamplingDecision::Unsampled","value":"SamplingDecision::Unsampled","parent":{"krate":0,"index":1689},"children":[],"decl_id":null,"docs":" The associated span was not sampled by its creating process.\n","sig":null,"attributes":[{"value":"/ The associated span was not sampled by its creating process.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":32827,"byte_end":32891,"line_start":75,"line_end":75,"column_start":5,"column_end":69}}]},{"kind":"Enum","id":{"krate":0,"index":1689},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":32692,"byte_end":32708,"line_start":72,"line_end":72,"column_start":10,"column_end":26},"name":"SamplingDecision","qualname":"::trace::SamplingDecision","value":"enum SamplingDecision { Sampled, Unsampled, }","parent":null,"children":[{"krate":0,"index":1690},{"krate":0,"index":1692}],"decl_id":null,"docs":" Indicates whether a sampler has decided whether or not to sample the trace associated with the\n Context. Downstream samplers do not need to abide by \"no sample\" decisions--for example, an\n upstream client may choose to never sample, which may not make sense for the client's\n dependencies. On the other hand, if an upstream process has chosen to sample this trace, then\n the downstream samplers are expected to respect that decision and also sample the trace.\n Otherwise, the full trace would not be able to be reconstructed reliably.\n","sig":null,"attributes":[{"value":"/ Indicates whether a sampler has decided whether or not to sample the trace associated with the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":31988,"byte_end":32086,"line_start":63,"line_end":63,"column_start":1,"column_end":99}},{"value":"/ Context. Downstream samplers do not need to abide by \"no sample\" decisions--for example, an","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":32087,"byte_end":32182,"line_start":64,"line_end":64,"column_start":1,"column_end":96}},{"value":"/ upstream client may choose to never sample, which may not make sense for the client's","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":32183,"byte_end":32272,"line_start":65,"line_end":65,"column_start":1,"column_end":90}},{"value":"/ dependencies. On the other hand, if an upstream process has chosen to sample this trace, then","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":32273,"byte_end":32370,"line_start":66,"line_end":66,"column_start":1,"column_end":98}},{"value":"/ the downstream samplers are expected to respect that decision and also sample the trace.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":32371,"byte_end":32463,"line_start":67,"line_end":67,"column_start":1,"column_end":93}},{"value":"/ Otherwise, the full trace would not be able to be reconstructed reliably.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":32464,"byte_end":32541,"line_start":68,"line_end":68,"column_start":1,"column_end":78}},{"value":"repr(u8)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":32671,"byte_end":32682,"line_start":71,"line_end":71,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":33412,"byte_end":33418,"line_start":93,"line_end":93,"column_start":12,"column_end":18},"name":"random","qualname":"<TraceId>::random","value":"fn random<R>(&mut R) -> Self where R: Rng","parent":null,"children":[],"decl_id":null,"docs":" Returns a random trace ID that can be assumed to be globally unique if `rng` generates\n actually-random numbers.\n","sig":null,"attributes":[{"value":"/ Returns a random trace ID that can be assumed to be globally unique if `rng` generates","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":33277,"byte_end":33367,"line_start":91,"line_end":91,"column_start":5,"column_end":95}},{"value":"/ actually-random numbers.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":33372,"byte_end":33400,"line_start":92,"line_end":92,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":33560,"byte_end":33567,"line_start":98,"line_end":98,"column_start":12,"column_end":19},"name":"is_none","qualname":"<TraceId>::is_none","value":"fn is_none(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true iff the trace ID is 0.\n","sig":null,"attributes":[{"value":"/ Returns true iff the trace ID is 0.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":33509,"byte_end":33548,"line_start":97,"line_end":97,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":33728,"byte_end":33734,"line_start":105,"line_end":105,"column_start":12,"column_end":18},"name":"random","qualname":"<SpanId>::random","value":"fn random<R>(&mut R) -> Self where R: Rng","parent":null,"children":[],"decl_id":null,"docs":" Returns a random span ID that can be assumed to be unique within a single trace.\n","sig":null,"attributes":[{"value":"/ Returns a random span ID that can be assumed to be unique within a single trace.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":33632,"byte_end":33716,"line_start":104,"line_end":104,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":33873,"byte_end":33880,"line_start":110,"line_end":110,"column_start":12,"column_end":19},"name":"is_none","qualname":"<SpanId>::is_none","value":"fn is_none(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true iff the span ID is 0.\n","sig":null,"attributes":[{"value":"/ Returns true iff the span ID is 0.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":33823,"byte_end":33861,"line_start":109,"line_end":109,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":33964,"byte_end":33968,"line_start":116,"line_end":116,"column_start":8,"column_end":12},"name":"from","qualname":"<u128 as std::convert::From>::from","value":"fn from(TraceId) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":34063,"byte_end":34067,"line_start":122,"line_end":122,"column_start":8,"column_end":12},"name":"from","qualname":"<TraceId as std::convert::From>::from","value":"fn from(u128) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":34161,"byte_end":34165,"line_start":128,"line_end":128,"column_start":8,"column_end":12},"name":"from","qualname":"<u64 as std::convert::From>::from","value":"fn from(SpanId) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":34255,"byte_end":34259,"line_start":134,"line_end":134,"column_start":8,"column_end":12},"name":"from","qualname":"<SpanId as std::convert::From>::from","value":"fn from(u64) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":34377,"byte_end":34381,"line_start":140,"line_end":140,"column_start":8,"column_end":12},"name":"from","qualname":"<TraceId as std::convert::From>::from","value":"fn from(opentelemetry::trace::TraceId) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":34565,"byte_end":34569,"line_start":146,"line_end":146,"column_start":8,"column_end":12},"name":"from","qualname":"<opentelemetry::trace::TraceId as std::convert::From>::from","value":"fn from(TraceId) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":34729,"byte_end":34733,"line_start":152,"line_end":152,"column_start":8,"column_end":12},"name":"from","qualname":"<SpanId as std::convert::From>::from","value":"fn from(opentelemetry::trace::SpanId) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":34911,"byte_end":34915,"line_start":158,"line_end":158,"column_start":8,"column_end":12},"name":"from","qualname":"<opentelemetry::trace::SpanId as std::convert::From>::from","value":"fn from(SpanId) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":35093,"byte_end":35101,"line_start":166,"line_end":166,"column_start":8,"column_end":16},"name":"try_from","qualname":"<Context as std::convert::TryFrom>::try_from","value":"fn try_from(&tracing::Span) -> Result<Self, NoActiveSpan>","parent":{"krate":2,"index":3092},"children":[],"decl_id":{"krate":2,"index":3095},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":35408,"byte_end":35412,"line_start":177,"line_end":177,"column_start":8,"column_end":12},"name":"from","qualname":"<Context as std::convert::From>::from","value":"fn from(opentelemetry::trace::SpanRef) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":35794,"byte_end":35798,"line_start":188,"line_end":188,"column_start":8,"column_end":12},"name":"from","qualname":"<opentelemetry::trace::TraceFlags as std::convert::From>::from","value":"fn from(SamplingDecision) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":36129,"byte_end":36133,"line_start":197,"line_end":197,"column_start":8,"column_end":12},"name":"from","qualname":"<SamplingDecision as std::convert::From>::from","value":"fn from(&opentelemetry::trace::SpanContext) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":36380,"byte_end":36387,"line_start":207,"line_end":207,"column_start":8,"column_end":15},"name":"default","qualname":"<SamplingDecision as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1739},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":36547,"byte_end":36559,"line_start":214,"line_end":214,"column_start":12,"column_end":24},"name":"NoActiveSpan","qualname":"::trace::NoActiveSpan","value":"","parent":null,"children":[],"decl_id":null,"docs":" Returned when a [`Context`] cannot be constructed from a [`Span`](tracing::Span).\n","sig":null,"attributes":[{"value":"/ Returned when a [`Context`] cannot be constructed from a [`Span`](tracing::Span).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":36433,"byte_end":36518,"line_start":212,"line_end":212,"column_start":1,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":36601,"byte_end":36604,"line_start":217,"line_end":217,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TraceId as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut Formatter) -> Result<(), fmt::Error>","parent":{"krate":2,"index":10117},"children":[],"decl_id":{"krate":2,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":36758,"byte_end":36761,"line_start":224,"line_end":224,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TraceId as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut Formatter) -> Result<(), fmt::Error>","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":36916,"byte_end":36919,"line_start":231,"line_end":231,"column_start":8,"column_end":11},"name":"fmt","qualname":"<SpanId as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut Formatter) -> Result<(), fmt::Error>","parent":{"krate":2,"index":10117},"children":[],"decl_id":{"krate":2,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":37072,"byte_end":37075,"line_start":238,"line_end":238,"column_start":8,"column_end":11},"name":"fmt","qualname":"<SpanId as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut Formatter) -> Result<(), fmt::Error>","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":272},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"client","qualname":"::client","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","parent":null,"children":[{"krate":0,"index":273},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":331},{"krate":0,"index":334},{"krate":0,"index":337},{"krate":0,"index":340},{"krate":0,"index":343},{"krate":0,"index":346},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":354},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":362},{"krate":0,"index":365},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":372},{"krate":0,"index":375},{"krate":0,"index":378},{"krate":0,"index":381},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":389},{"krate":0,"index":392},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":399},{"krate":0,"index":402},{"krate":0,"index":1866},{"krate":0,"index":1869},{"krate":0,"index":1871},{"krate":0,"index":405},{"krate":0,"index":407},{"krate":0,"index":412},{"krate":0,"index":418},{"krate":0,"index":422},{"krate":0,"index":1905},{"krate":0,"index":1911},{"krate":0,"index":423},{"krate":0,"index":427},{"krate":0,"index":430},{"krate":0,"index":2001},{"krate":0,"index":2002},{"krate":0,"index":2008},{"krate":0,"index":1978},{"krate":0,"index":1983},{"krate":0,"index":1985},{"krate":0,"index":1987},{"krate":0,"index":1989},{"krate":0,"index":1991},{"krate":0,"index":1992},{"krate":0,"index":1995},{"krate":0,"index":1996},{"krate":0,"index":1998},{"krate":0,"index":436},{"krate":0,"index":438},{"krate":0,"index":443},{"krate":0,"index":446},{"krate":0,"index":2124},{"krate":0,"index":2061},{"krate":0,"index":2056},{"krate":0,"index":2133},{"krate":0,"index":2135},{"krate":0,"index":2141},{"krate":0,"index":2144},{"krate":0,"index":450},{"krate":0,"index":486},{"krate":0,"index":2389},{"krate":0,"index":2397},{"krate":0,"index":2401},{"krate":0,"index":2404},{"krate":0,"index":2406},{"krate":0,"index":2408},{"krate":0,"index":2411},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":495},{"krate":0,"index":497}],"decl_id":null,"docs":" Provides a client that connects to a server and sends multiplexed requests.\n","sig":null,"attributes":[{"value":"/ Provides a client that connects to a server and sends multiplexed requests.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":37853,"byte_end":37932,"line_start":7,"line_end":7,"column_start":1,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":1755},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client/in_flight_requests.rs","byte_start":70966,"byte_end":70987,"line_start":35,"line_end":35,"column_start":12,"column_end":33},"name":"DeadlineExceededError","qualname":"::client::in_flight_requests::DeadlineExceededError","value":"","parent":null,"children":[],"decl_id":null,"docs":" The request exceeded its deadline.\n","sig":null,"attributes":[{"value":"/ The request exceeded its deadline.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client/in_flight_requests.rs","byte_start":70817,"byte_end":70855,"line_start":31,"line_end":31,"column_start":1,"column_end":39}},{"value":"non_exhaustive","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client/in_flight_requests.rs","byte_start":70891,"byte_end":70908,"line_start":33,"line_end":33,"column_start":1,"column_end":18}},{"value":"error(\"the request exceeded its deadline\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client/in_flight_requests.rs","byte_start":70909,"byte_end":70954,"line_start":34,"line_end":34,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":1866},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":38516,"byte_end":38522,"line_start":31,"line_end":31,"column_start":12,"column_end":18},"name":"Config","qualname":"::client::Config","value":"Config { max_in_flight_requests, pending_request_buffer }","parent":null,"children":[{"krate":0,"index":1867},{"krate":0,"index":1868}],"decl_id":null,"docs":" Settings that control the behavior of the client.\n","sig":null,"attributes":[{"value":"/ Settings that control the behavior of the client.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":38409,"byte_end":38462,"line_start":28,"line_end":28,"column_start":1,"column_end":54}},{"value":"non_exhaustive","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":38487,"byte_end":38504,"line_start":30,"line_end":30,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1867},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":38714,"byte_end":38736,"line_start":35,"line_end":35,"column_start":9,"column_end":31},"name":"max_in_flight_requests","qualname":"::client::Config::max_in_flight_requests","value":"usize","parent":{"krate":0,"index":1866},"children":[],"decl_id":null,"docs":" The number of requests that can be in flight at once.\n `max_in_flight_requests` controls the size of the map used by the client\n for storing pending requests.\n","sig":null,"attributes":[{"value":"/ The number of requests that can be in flight at once.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":38529,"byte_end":38586,"line_start":32,"line_end":32,"column_start":5,"column_end":62}},{"value":"/ `max_in_flight_requests` controls the size of the map used by the client","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":38591,"byte_end":38667,"line_start":33,"line_end":33,"column_start":5,"column_end":81}},{"value":"/ for storing pending requests.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":38672,"byte_end":38705,"line_start":34,"line_end":34,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":1868},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":38970,"byte_end":38992,"line_start":39,"line_end":39,"column_start":9,"column_end":31},"name":"pending_request_buffer","qualname":"::client::Config::pending_request_buffer","value":"usize","parent":{"krate":0,"index":1866},"children":[],"decl_id":null,"docs":" The number of requests that can be buffered client-side before being sent.\n `pending_requests_buffer` controls the size of the channel clients use\n to communicate with the request dispatch task.\n","sig":null,"attributes":[{"value":"/ The number of requests that can be buffered client-side before being sent.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":38749,"byte_end":38827,"line_start":36,"line_end":36,"column_start":5,"column_end":83}},{"value":"/ `pending_requests_buffer` controls the size of the channel clients use","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":38832,"byte_end":38906,"line_start":37,"line_end":37,"column_start":5,"column_end":79}},{"value":"/ to communicate with the request dispatch task.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":38911,"byte_end":38961,"line_start":38,"line_end":38,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":39037,"byte_end":39044,"line_start":43,"line_end":43,"column_start":8,"column_end":15},"name":"default","qualname":"<Config as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":407},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":39327,"byte_end":39336,"line_start":53,"line_end":53,"column_start":12,"column_end":21},"name":"NewClient","qualname":"::client::NewClient","value":"NewClient { client, dispatch }","parent":null,"children":[{"krate":0,"index":410},{"krate":0,"index":411}],"decl_id":null,"docs":" A channel and dispatch pair. The dispatch drives the sending and receiving of requests\n and must be polled continuously or spawned.\n","sig":null,"attributes":[{"value":"/ A channel and dispatch pair. The dispatch drives the sending and receiving of requests","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":39177,"byte_end":39267,"line_start":51,"line_end":51,"column_start":1,"column_end":91}},{"value":"/ and must be polled continuously or spawned.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":39268,"byte_end":39315,"line_start":52,"line_end":52,"column_start":1,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":410},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":39377,"byte_end":39383,"line_start":55,"line_end":55,"column_start":9,"column_end":15},"name":"client","qualname":"::client::NewClient::client","value":"C","parent":{"krate":0,"index":407},"children":[],"decl_id":null,"docs":" The new client.\n","sig":null,"attributes":[{"value":"/ The new client.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":39349,"byte_end":39368,"line_start":54,"line_end":54,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":411},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":39427,"byte_end":39435,"line_start":57,"line_end":57,"column_start":9,"column_end":17},"name":"dispatch","qualname":"::client::NewClient::dispatch","value":"D","parent":{"krate":0,"index":407},"children":[],"decl_id":null,"docs":" The client's dispatch.\n","sig":null,"attributes":[{"value":"/ The client's dispatch.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":39392,"byte_end":39418,"line_start":56,"line_end":56,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":416},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":39752,"byte_end":39757,"line_start":68,"line_end":68,"column_start":12,"column_end":17},"name":"spawn","qualname":"<NewClient<C, D>>::spawn","value":"fn spawn(Self) -> C","parent":null,"children":[],"decl_id":null,"docs":" Helper method to spawn the dispatch on the default executor.\n","sig":null,"attributes":[{"value":"/ Helper method to spawn the dispatch on the default executor.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":39591,"byte_end":39655,"line_start":65,"line_end":65,"column_start":5,"column_end":69}},{"value":"cfg(feature = \"tokio1\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":39660,"byte_end":39686,"line_start":66,"line_end":66,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":421},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":40059,"byte_end":40062,"line_start":79,"line_end":79,"column_start":8,"column_end":11},"name":"fmt","qualname":"<NewClient<C, D> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1905},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":40389,"byte_end":40396,"line_start":91,"line_end":91,"column_start":12,"column_end":19},"name":"Channel","qualname":"::client::Channel","value":"Channel {  }","parent":null,"children":[{"krate":0,"index":1908},{"krate":0,"index":1909},{"krate":0,"index":1910}],"decl_id":null,"docs":" Handles communication from the client to request dispatch.\n","sig":null,"attributes":[{"value":"/ Handles communication from the client to request dispatch.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":40298,"byte_end":40360,"line_start":89,"line_end":89,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":40717,"byte_end":40722,"line_start":100,"line_end":100,"column_start":8,"column_end":13},"name":"clone","qualname":"<Channel<Req, Resp> as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1915},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":41439,"byte_end":41443,"line_start":121,"line_end":121,"column_start":18,"column_end":22},"name":"call","qualname":"<Channel<Req, Resp>>::call","value":"async fn call<'_, '_>(&'_ Self, context::Context, &'_ str, Req)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Sends a request to the dispatch task to forward to the server, returning a [`Future`] that\n resolves to the response.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2049},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":43701,"byte_end":43713,"line_start":177,"line_end":177,"column_start":5,"column_end":17},"name":"Disconnected","qualname":"::client::RpcError::Disconnected","value":"RpcError::Disconnected","parent":{"krate":0,"index":2001},"children":[],"decl_id":null,"docs":" The client disconnected from the server.\n","sig":null,"attributes":[{"value":"/ The client disconnected from the server.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":43596,"byte_end":43640,"line_start":175,"line_end":175,"column_start":5,"column_end":49}},{"value":"error(\"the client disconnected from the server\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":43645,"byte_end":43696,"line_start":176,"line_end":176,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2051},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":43812,"byte_end":43828,"line_start":180,"line_end":180,"column_start":5,"column_end":21},"name":"DeadlineExceeded","qualname":"::client::RpcError::DeadlineExceeded","value":"RpcError::DeadlineExceeded","parent":{"krate":0,"index":2001},"children":[],"decl_id":null,"docs":" The request exceeded its deadline.\n","sig":null,"attributes":[{"value":"/ The request exceeded its deadline.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":43719,"byte_end":43757,"line_start":178,"line_end":178,"column_start":5,"column_end":43}},{"value":"error(\"the request exceeded its deadline\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":43762,"byte_end":43807,"line_start":179,"line_end":179,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2053},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":43935,"byte_end":43941,"line_start":183,"line_end":183,"column_start":5,"column_end":11},"name":"Server","qualname":"::client::RpcError::Server","value":"RpcError::Server(ServerError)","parent":{"krate":0,"index":2001},"children":[],"decl_id":null,"docs":" The server aborted request processing.\n","sig":null,"attributes":[{"value":"/ The server aborted request processing.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":43834,"byte_end":43876,"line_start":181,"line_end":181,"column_start":5,"column_end":47}},{"value":"error(\"the server aborted request processing\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":43881,"byte_end":43930,"line_start":182,"line_end":182,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2055},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":43950,"byte_end":43961,"line_start":183,"line_end":183,"column_start":20,"column_end":31},"name":"0","qualname":"::client::RpcError::Server::0","value":"ServerError","parent":{"krate":0,"index":2053},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"from","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":43942,"byte_end":43949,"line_start":183,"line_end":183,"column_start":12,"column_end":19}}]},{"kind":"Enum","id":{"krate":0,"index":2001},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":43581,"byte_end":43589,"line_start":174,"line_end":174,"column_start":10,"column_end":18},"name":"RpcError","qualname":"::client::RpcError","value":"enum RpcError { Disconnected, DeadlineExceeded, Server(ServerError), }","parent":null,"children":[{"krate":0,"index":2049},{"krate":0,"index":2051},{"krate":0,"index":2053}],"decl_id":null,"docs":" An error that can occur in the processing of an RPC. This is not request-specific errors but\n rather cross-cutting errors that can always occur.\n","sig":null,"attributes":[{"value":"/ An error that can occur in the processing of an RPC. This is not request-specific errors but","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":43279,"byte_end":43375,"line_start":170,"line_end":170,"column_start":1,"column_end":97}},{"value":"/ rather cross-cutting errors that can always occur.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":43376,"byte_end":43430,"line_start":171,"line_end":171,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":437},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":44022,"byte_end":44026,"line_start":187,"line_end":187,"column_start":8,"column_end":12},"name":"from","qualname":"<RpcError as std::convert::From>::from","value":"fn from(DeadlineExceededError) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":446},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":45965,"byte_end":45968,"line_start":229,"line_end":229,"column_start":8,"column_end":11},"name":"new","qualname":"::client::new","value":"fn new<Req, Resp, C>(Config, C)\n-> NewClient<Channel<Req, Resp>, RequestDispatch<Req, Resp, C>> where\nC: Transport<ClientMessage<Req>, Response<Resp>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a channel and dispatcher that manages the lifecycle of requests initiated by the\n channel.\n","sig":null,"attributes":[{"value":"/ Returns a channel and dispatcher that manages the lifecycle of requests initiated by the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":45852,"byte_end":45944,"line_start":227,"line_end":227,"column_start":1,"column_end":93}},{"value":"/ channel.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":45945,"byte_end":45957,"line_start":228,"line_end":228,"column_start":1,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":2124},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":46944,"byte_end":46959,"line_start":260,"line_end":260,"column_start":12,"column_end":27},"name":"RequestDispatch","qualname":"::client::RequestDispatch","value":"RequestDispatch {  }","parent":null,"children":[{"krate":0,"index":2132},{"krate":0,"index":2128},{"krate":0,"index":2129},{"krate":0,"index":2130},{"krate":0,"index":2131}],"decl_id":null,"docs":" Handles the lifecycle of requests, writing requests to the wire, managing cancellations,\n and dispatching responses to the appropriate channel.\n","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":46901,"byte_end":46915,"line_start":258,"line_end":258,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":2095},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":46944,"byte_end":46959,"line_start":260,"line_end":260,"column_start":12,"column_end":27},"name":"__RequestDispatch","qualname":"::client::_::__RequestDispatch","value":"__RequestDispatch {  }","parent":null,"children":[{"krate":0,"index":2100},{"krate":0,"index":2101}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":46901,"byte_end":46915,"line_start":258,"line_end":258,"column_start":1,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2147},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":47755,"byte_end":47759,"line_start":282,"line_end":282,"column_start":5,"column_end":9},"name":"Read","qualname":"::client::ChannelError::Read","value":"ChannelError::Read(E)","parent":{"krate":0,"index":2133},"children":[],"decl_id":null,"docs":" Could not read from the transport.\n","sig":null,"attributes":[{"value":"/ Could not read from the transport.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":47662,"byte_end":47700,"line_start":280,"line_end":280,"column_start":5,"column_end":43}},{"value":"error(\"could not read from the transport\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":47705,"byte_end":47750,"line_start":281,"line_end":281,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":2149},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":47770,"byte_end":47771,"line_start":282,"line_end":282,"column_start":20,"column_end":21},"name":"0","qualname":"::client::ChannelError::Read::0","value":"E","parent":{"krate":0,"index":2147},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"source","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":47760,"byte_end":47769,"line_start":282,"line_end":282,"column_start":10,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2150},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":47885,"byte_end":47890,"line_start":285,"line_end":285,"column_start":5,"column_end":10},"name":"Ready","qualname":"::client::ChannelError::Ready","value":"ChannelError::Ready(E)","parent":{"krate":0,"index":2133},"children":[],"decl_id":null,"docs":" Could not ready the transport for writes.\n","sig":null,"attributes":[{"value":"/ Could not ready the transport for writes.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":47778,"byte_end":47823,"line_start":283,"line_end":283,"column_start":5,"column_end":50}},{"value":"error(\"could not ready the transport for writes\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":47828,"byte_end":47880,"line_start":284,"line_end":284,"column_start":5,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":2152},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":47901,"byte_end":47902,"line_start":285,"line_end":285,"column_start":21,"column_end":22},"name":"0","qualname":"::client::ChannelError::Ready::0","value":"E","parent":{"krate":0,"index":2150},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"source","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":47891,"byte_end":47900,"line_start":285,"line_end":285,"column_start":11,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2153},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":48000,"byte_end":48005,"line_start":288,"line_end":288,"column_start":5,"column_end":10},"name":"Write","qualname":"::client::ChannelError::Write","value":"ChannelError::Write(E)","parent":{"krate":0,"index":2133},"children":[],"decl_id":null,"docs":" Could not write to the transport.\n","sig":null,"attributes":[{"value":"/ Could not write to the transport.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":47909,"byte_end":47946,"line_start":286,"line_end":286,"column_start":5,"column_end":42}},{"value":"error(\"could not write to the transport\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":47951,"byte_end":47995,"line_start":287,"line_end":287,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":2155},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":48016,"byte_end":48017,"line_start":288,"line_end":288,"column_start":21,"column_end":22},"name":"0","qualname":"::client::ChannelError::Write::0","value":"E","parent":{"krate":0,"index":2153},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"source","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":48006,"byte_end":48015,"line_start":288,"line_end":288,"column_start":11,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2156},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":48109,"byte_end":48114,"line_start":291,"line_end":291,"column_start":5,"column_end":10},"name":"Flush","qualname":"::client::ChannelError::Flush","value":"ChannelError::Flush(E)","parent":{"krate":0,"index":2133},"children":[],"decl_id":null,"docs":" Could not flush the transport.\n","sig":null,"attributes":[{"value":"/ Could not flush the transport.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":48024,"byte_end":48058,"line_start":289,"line_end":289,"column_start":5,"column_end":39}},{"value":"error(\"could not flush the transport\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":48063,"byte_end":48104,"line_start":290,"line_end":290,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":2158},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":48125,"byte_end":48126,"line_start":291,"line_end":291,"column_start":21,"column_end":22},"name":"0","qualname":"::client::ChannelError::Flush::0","value":"E","parent":{"krate":0,"index":2156},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"source","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":48115,"byte_end":48124,"line_start":291,"line_end":291,"column_start":11,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2159},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":48252,"byte_end":48257,"line_start":294,"line_end":294,"column_start":5,"column_end":10},"name":"Close","qualname":"::client::ChannelError::Close","value":"ChannelError::Close(E)","parent":{"krate":0,"index":2133},"children":[],"decl_id":null,"docs":" Could not close the write end of the transport.\n","sig":null,"attributes":[{"value":"/ Could not close the write end of the transport.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":48133,"byte_end":48184,"line_start":292,"line_end":292,"column_start":5,"column_end":56}},{"value":"error(\"could not close the write end of the transport\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":48189,"byte_end":48247,"line_start":293,"line_end":293,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":2161},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":48268,"byte_end":48269,"line_start":294,"line_end":294,"column_start":21,"column_end":22},"name":"0","qualname":"::client::ChannelError::Close::0","value":"E","parent":{"krate":0,"index":2159},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"source","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":48258,"byte_end":48267,"line_start":294,"line_end":294,"column_start":11,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2162},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":48365,"byte_end":48370,"line_start":297,"line_end":297,"column_start":5,"column_end":10},"name":"Timer","qualname":"::client::ChannelError::Timer","value":"ChannelError::Timer(tokio::time::error::Error)","parent":{"krate":0,"index":2133},"children":[],"decl_id":null,"docs":" Could not poll expired requests.\n","sig":null,"attributes":[{"value":"/ Could not poll expired requests.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":48276,"byte_end":48312,"line_start":295,"line_end":295,"column_start":5,"column_end":41}},{"value":"error(\"could not poll expired requests\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":48317,"byte_end":48360,"line_start":296,"line_end":296,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":2164},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":48381,"byte_end":48406,"line_start":297,"line_end":297,"column_start":21,"column_end":46},"name":"0","qualname":"::client::ChannelError::Timer::0","value":"tokio::time::error::Error","parent":{"krate":0,"index":2162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"source","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":48371,"byte_end":48380,"line_start":297,"line_end":297,"column_start":11,"column_end":20}}]},{"kind":"Enum","id":{"krate":0,"index":2133},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":47596,"byte_end":47608,"line_start":276,"line_end":276,"column_start":10,"column_end":22},"name":"ChannelError","qualname":"::client::ChannelError","value":"enum ChannelError<E> where E: Error + Send + Sync + 'static {\n    Read(E),\n    Ready(E),\n    Write(E),\n    Flush(E),\n    Close(E),\n    Timer(tokio::time::error::Error),\n}","parent":null,"children":[{"krate":0,"index":2147},{"krate":0,"index":2150},{"krate":0,"index":2153},{"krate":0,"index":2156},{"krate":0,"index":2159},{"krate":0,"index":2162}],"decl_id":null,"docs":" Critical errors that result in a Channel disconnecting.\n","sig":null,"attributes":[{"value":"/ Critical errors that result in a Channel disconnecting.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":47492,"byte_end":47551,"line_start":274,"line_end":274,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":57913,"byte_end":57917,"line_start":563,"line_end":563,"column_start":8,"column_end":12},"name":"poll","qualname":"<RequestDispatch<Req, Resp, C> as futures::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context)\n-> Poll<Result<(), ChannelError<C::Error>>>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":500},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/context.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"context","qualname":"::context","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/context.rs","parent":null,"children":[{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":505},{"krate":0,"index":508},{"krate":0,"index":511},{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":522},{"krate":0,"index":525},{"krate":0,"index":2418},{"krate":0,"index":2420},{"krate":0,"index":2434},{"krate":0,"index":2413},{"krate":0,"index":2415},{"krate":0,"index":2416},{"krate":0,"index":528},{"krate":0,"index":2497},{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":2501},{"krate":0,"index":2504},{"krate":0,"index":556},{"krate":0,"index":558},{"krate":0,"index":562},{"krate":0,"index":564}],"decl_id":null,"docs":" Provides a request context that carries a deadline and trace context. This context is sent from\n client to server and is used by the server to enforce response deadlines.\n","sig":null,"attributes":[{"value":"/ Provides a request context that carries a deadline and trace context. This context is sent from","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/context.rs","byte_start":74945,"byte_end":75044,"line_start":7,"line_end":7,"column_start":1,"column_end":100}},{"value":"/ client to server and is used by the server to enforce response deadlines.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/context.rs","byte_start":75045,"byte_end":75122,"line_start":8,"line_end":8,"column_start":1,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":2418},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/context.rs","byte_start":75840,"byte_end":75847,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"Context","qualname":"::context::Context","value":"Context { deadline, trace_context }","parent":null,"children":[{"krate":0,"index":2496},{"krate":0,"index":2419}],"decl_id":null,"docs":" A request context that carries request-scoped information like deadlines and trace information.\n It is sent from client to server and is used by the server to enforce response deadlines.","sig":null,"attributes":[{"value":"/ A request context that carries request-scoped information like deadlines and trace information.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/context.rs","byte_start":75362,"byte_end":75461,"line_start":19,"line_end":19,"column_start":1,"column_end":100}},{"value":"/ It is sent from client to server and is used by the server to enforce response deadlines.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/context.rs","byte_start":75462,"byte_end":75555,"line_start":20,"line_end":20,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/context.rs","byte_start":75556,"byte_end":75559,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The context should not be stored directly in a server implementation, because the context will","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/context.rs","byte_start":75560,"byte_end":75658,"line_start":22,"line_end":22,"column_start":1,"column_end":99}},{"value":"/ be different for each request in scope.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/context.rs","byte_start":75659,"byte_end":75702,"line_start":23,"line_end":23,"column_start":1,"column_end":44}},{"value":"non_exhaustive","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/context.rs","byte_start":75733,"byte_end":75750,"line_start":25,"line_end":25,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":2496},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/context.rs","byte_start":76220,"byte_end":76228,"line_start":33,"line_end":33,"column_start":9,"column_end":17},"name":"deadline","qualname":"::context::Context::deadline","value":"std::time::SystemTime","parent":{"krate":0,"index":2418},"children":[],"decl_id":null,"docs":" When the client expects the request to be complete by. The server should cancel the request\n if it is not complete by this time.\n","sig":null,"attributes":[{"value":"/ When the client expects the request to be complete by. The server should cancel the request","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/context.rs","byte_start":75854,"byte_end":75949,"line_start":28,"line_end":28,"column_start":5,"column_end":100}},{"value":"/ if it is not complete by this time.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/context.rs","byte_start":75954,"byte_end":75993,"line_start":29,"line_end":29,"column_start":5,"column_end":44}},{"value":"serde(default = \"ten_seconds_from_now\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/context.rs","byte_start":76029,"byte_end":76068,"line_start":30,"line_end":30,"column_start":36,"column_end":75}},{"value":"serde(with = \"absolute_to_relative_time\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/context.rs","byte_start":76168,"byte_end":76209,"line_start":32,"line_end":32,"column_start":36,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":2419},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/context.rs","byte_start":76568,"byte_end":76581,"line_start":38,"line_end":38,"column_start":9,"column_end":22},"name":"trace_context","qualname":"::context::Context::trace_context","value":"trace::Context","parent":{"krate":0,"index":2418},"children":[],"decl_id":null,"docs":" Uniquely identifies requests originating from the same source.\n When a service handles a request by making requests itself, those requests should\n include the same `trace_id` as that included on the original request. This way,\n users can trace related actions across a distributed system.\n","sig":null,"attributes":[{"value":"/ Uniquely identifies requests originating from the same source.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/context.rs","byte_start":76246,"byte_end":76312,"line_start":34,"line_end":34,"column_start":5,"column_end":71}},{"value":"/ When a service handles a request by making requests itself, those requests should","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/context.rs","byte_start":76317,"byte_end":76402,"line_start":35,"line_end":35,"column_start":5,"column_end":90}},{"value":"/ include the same `trace_id` as that included on the original request. This way,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/context.rs","byte_start":76407,"byte_end":76490,"line_start":36,"line_end":36,"column_start":5,"column_end":88}},{"value":"/ users can trace related actions across a distributed system.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/context.rs","byte_start":76495,"byte_end":76559,"line_start":37,"line_end":37,"column_start":5,"column_end":69}}]},{"kind":"Function","id":{"krate":0,"index":555},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/context.rs","byte_start":78533,"byte_end":78540,"line_start":96,"line_end":96,"column_start":8,"column_end":15},"name":"current","qualname":"::context::current","value":"fn current() -> Context","parent":null,"children":[],"decl_id":null,"docs":" Returns the context for the current request, or a default Context if no request is active.\n","sig":null,"attributes":[{"value":"/ Returns the context for the current request, or a default Context if no request is active.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/context.rs","byte_start":78431,"byte_end":78525,"line_start":95,"line_end":95,"column_start":1,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":559},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/context.rs","byte_start":78855,"byte_end":78862,"line_start":111,"line_end":111,"column_start":12,"column_end":19},"name":"current","qualname":"<Context>::current","value":"fn current() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the context for the current request, or a default Context if no request is active.\n","sig":null,"attributes":[{"value":"/ Returns the context for the current request, or a default Context if no request is active.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/context.rs","byte_start":78749,"byte_end":78843,"line_start":110,"line_end":110,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":561},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/context.rs","byte_start":79310,"byte_end":79318,"line_start":126,"line_end":126,"column_start":12,"column_end":20},"name":"trace_id","qualname":"<Context>::trace_id","value":"fn trace_id(&Self) -> &TraceId","parent":null,"children":[],"decl_id":null,"docs":" Returns the ID of the request-scoped trace.\n","sig":null,"attributes":[{"value":"/ Returns the ID of the request-scoped trace.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/context.rs","byte_start":79251,"byte_end":79298,"line_start":125,"line_end":125,"column_start":5,"column_end":52}}]},{"kind":"Mod","id":{"krate":0,"index":566},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"server","qualname":"::server","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","parent":null,"children":[{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":572},{"krate":0,"index":575},{"krate":0,"index":578},{"krate":0,"index":581},{"krate":0,"index":584},{"krate":0,"index":587},{"krate":0,"index":590},{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":598},{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":605},{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":613},{"krate":0,"index":616},{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":623},{"krate":0,"index":626},{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":632},{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":639},{"krate":0,"index":642},{"krate":0,"index":645},{"krate":0,"index":697},{"krate":0,"index":888},{"krate":0,"index":926},{"krate":0,"index":3161},{"krate":0,"index":3163},{"krate":0,"index":3165},{"krate":0,"index":979},{"krate":0,"index":981},{"krate":0,"index":986},{"krate":0,"index":992},{"krate":0,"index":3228},{"krate":0,"index":3167},{"krate":0,"index":1000},{"krate":0,"index":1014},{"krate":0,"index":3357},{"krate":0,"index":3362},{"krate":0,"index":1019},{"krate":0,"index":3365},{"krate":0,"index":3367},{"krate":0,"index":3373},{"krate":0,"index":3383},{"krate":0,"index":1030},{"krate":0,"index":1037},{"krate":0,"index":1046},{"krate":0,"index":1051},{"krate":0,"index":3570},{"krate":0,"index":3529},{"krate":0,"index":1061},{"krate":0,"index":1073},{"krate":0,"index":3575},{"krate":0,"index":3580},{"krate":0,"index":1076},{"krate":0,"index":1085}],"decl_id":null,"docs":" Provides a server that concurrently handles many connections sending multiplexed requests.\n","sig":null,"attributes":[{"value":"/ Provides a server that concurrently handles many connections sending multiplexed requests.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":80543,"byte_end":80637,"line_start":7,"line_end":7,"column_start":1,"column_end":95}}]},{"kind":"Mod","id":{"krate":0,"index":697},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"limits","qualname":"::server::limits","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits.rs","parent":null,"children":[{"krate":0,"index":698},{"krate":0,"index":822}],"decl_id":null,"docs":" Provides functionality to apply server limits.\n","sig":null,"attributes":[{"value":"/ Provides functionality to apply server limits.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":81167,"byte_end":81217,"line_start":30,"line_end":30,"column_start":1,"column_end":51}}]},{"kind":"Mod","id":{"krate":0,"index":698},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/channels_per_key.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"channels_per_key","qualname":"::server::limits::channels_per_key","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/channels_per_key.rs","parent":null,"children":[{"krate":0,"index":699},{"krate":0,"index":700},{"krate":0,"index":701},{"krate":0,"index":704},{"krate":0,"index":707},{"krate":0,"index":710},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":718},{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":725},{"krate":0,"index":726},{"krate":0,"index":729},{"krate":0,"index":732},{"krate":0,"index":733},{"krate":0,"index":736},{"krate":0,"index":739},{"krate":0,"index":742},{"krate":0,"index":743},{"krate":0,"index":745},{"krate":0,"index":748},{"krate":0,"index":751},{"krate":0,"index":754},{"krate":0,"index":755},{"krate":0,"index":758},{"krate":0,"index":761},{"krate":0,"index":2657},{"krate":0,"index":2592},{"krate":0,"index":2587},{"krate":0,"index":2719},{"krate":0,"index":2671},{"krate":0,"index":2667},{"krate":0,"index":2724},{"krate":0,"index":2728},{"krate":0,"index":764},{"krate":0,"index":767},{"krate":0,"index":772},{"krate":0,"index":781},{"krate":0,"index":785},{"krate":0,"index":794},{"krate":0,"index":800},{"krate":0,"index":805},{"krate":0,"index":816}],"decl_id":null,"docs":" Provides functionality to limit the number of active channels.\n","sig":null,"attributes":[{"value":"/ Provides functionality to limit the number of active channels.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits.rs","byte_start":122937,"byte_end":123003,"line_start":1,"line_end":1,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":2657},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/channels_per_key.rs","byte_start":124022,"byte_end":124039,"line_start":28,"line_end":28,"column_start":12,"column_end":29},"name":"MaxChannelsPerKey","qualname":"::server::limits::channels_per_key::MaxChannelsPerKey","value":"MaxChannelsPerKey {  }","parent":null,"children":[{"krate":0,"index":2666},{"krate":0,"index":2661},{"krate":0,"index":2662},{"krate":0,"index":2663},{"krate":0,"index":2664},{"krate":0,"index":2665}],"decl_id":null,"docs":" An [`Incoming`](crate::server::incoming::Incoming) stream that drops new channels based on\n per-key limits.","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/channels_per_key.rs","byte_start":123979,"byte_end":123993,"line_start":26,"line_end":26,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":2628},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/channels_per_key.rs","byte_start":124022,"byte_end":124039,"line_start":28,"line_end":28,"column_start":12,"column_end":29},"name":"__MaxChannelsPerKey","qualname":"::server::limits::channels_per_key::_::__MaxChannelsPerKey","value":"__MaxChannelsPerKey {  }","parent":null,"children":[{"krate":0,"index":2633},{"krate":0,"index":2634}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/channels_per_key.rs","byte_start":123979,"byte_end":123993,"line_start":26,"line_end":26,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":2719},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/channels_per_key.rs","byte_start":124397,"byte_end":124411,"line_start":44,"line_end":44,"column_start":12,"column_end":26},"name":"TrackedChannel","qualname":"::server::limits::channels_per_key::TrackedChannel","value":"TrackedChannel {  }","parent":null,"children":[{"krate":0,"index":2723},{"krate":0,"index":2722}],"decl_id":null,"docs":" A channel that is tracked by [`MaxChannelsPerKey`].\n","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/channels_per_key.rs","byte_start":124354,"byte_end":124368,"line_start":42,"line_end":42,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":2695},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/channels_per_key.rs","byte_start":124397,"byte_end":124411,"line_start":44,"line_end":44,"column_start":12,"column_end":26},"name":"__TrackedChannel","qualname":"::server::limits::channels_per_key::_::__TrackedChannel","value":"__TrackedChannel {  }","parent":null,"children":[{"krate":0,"index":2699},{"krate":0,"index":2700}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/channels_per_key.rs","byte_start":124354,"byte_end":124368,"line_start":42,"line_end":42,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":771},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/channels_per_key.rs","byte_start":124873,"byte_end":124882,"line_start":69,"line_end":69,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TrackedChannel<C, K> as futures::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":24,"index":96},"children":[],"decl_id":{"krate":24,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":777},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/channels_per_key.rs","byte_start":125115,"byte_end":125125,"line_start":80,"line_end":80,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"<TrackedChannel<C, K> as futures::Sink>::poll_ready","value":"fn poll_ready(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":25,"index":17},"children":[],"decl_id":{"krate":25,"index":20},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":778},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/channels_per_key.rs","byte_start":125263,"byte_end":125273,"line_start":84,"line_end":84,"column_start":8,"column_end":18},"name":"start_send","qualname":"<TrackedChannel<C, K> as futures::Sink>::start_send","value":"fn start_send(Pin<&mut Self>, I) -> Result<(), Self::Error>","parent":{"krate":25,"index":17},"children":[],"decl_id":{"krate":25,"index":21},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":779},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/channels_per_key.rs","byte_start":125398,"byte_end":125408,"line_start":88,"line_end":88,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<TrackedChannel<C, K> as futures::Sink>::poll_flush","value":"fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":25,"index":17},"children":[],"decl_id":{"krate":25,"index":22},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":780},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/channels_per_key.rs","byte_start":125546,"byte_end":125556,"line_start":92,"line_end":92,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<TrackedChannel<C, K> as futures::Sink>::poll_close","value":"fn poll_close(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":25,"index":17},"children":[],"decl_id":{"krate":25,"index":23},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":784},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/channels_per_key.rs","byte_start":125743,"byte_end":125749,"line_start":98,"line_end":98,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<TrackedChannel<C, K> as std::convert::AsRef>::as_ref","value":"fn as_ref(&Self) -> &C","parent":{"krate":2,"index":3076},"children":[],"decl_id":{"krate":2,"index":3078},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":791},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/channels_per_key.rs","byte_start":125953,"byte_end":125959,"line_start":111,"line_end":111,"column_start":8,"column_end":14},"name":"config","qualname":"<TrackedChannel<C, K> as server::Channel>::config","value":"fn config(&Self) -> &server::Config","parent":{"krate":0,"index":1019},"children":[],"decl_id":{"krate":0,"index":1023},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":792},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/channels_per_key.rs","byte_start":126030,"byte_end":126048,"line_start":115,"line_end":115,"column_start":8,"column_end":26},"name":"in_flight_requests","qualname":"<TrackedChannel<C, K> as server::Channel>::in_flight_requests","value":"fn in_flight_requests(&Self) -> usize","parent":{"krate":0,"index":1019},"children":[],"decl_id":{"krate":0,"index":1024},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":793},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/channels_per_key.rs","byte_start":126121,"byte_end":126130,"line_start":119,"line_end":119,"column_start":8,"column_end":17},"name":"transport","qualname":"<TrackedChannel<C, K> as server::Channel>::transport","value":"fn transport(&Self) -> &Self::Transport","parent":{"krate":0,"index":1019},"children":[],"decl_id":{"krate":0,"index":1025},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":797},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/channels_per_key.rs","byte_start":126280,"byte_end":126287,"line_start":126,"line_end":126,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<TrackedChannel<C, K>>::get_ref","value":"fn get_ref(&Self) -> &C","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner channel.\n","sig":null,"attributes":[{"value":"/ Returns the inner channel.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/channels_per_key.rs","byte_start":126238,"byte_end":126268,"line_start":125,"line_end":125,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":821},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/channels_per_key.rs","byte_start":130445,"byte_end":130454,"line_start":256,"line_end":256,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<MaxChannelsPerKey<S, K, F> as futures::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context)\n-> Poll<Option<TrackedChannel<S::Item, K>>>","parent":{"krate":24,"index":96},"children":[],"decl_id":{"krate":24,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":822},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/requests_per_channel.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"requests_per_channel","qualname":"::server::limits::requests_per_channel","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/requests_per_channel.rs","parent":null,"children":[{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":828},{"krate":0,"index":831},{"krate":0,"index":834},{"krate":0,"index":837},{"krate":0,"index":838},{"krate":0,"index":839},{"krate":0,"index":842},{"krate":0,"index":843},{"krate":0,"index":846},{"krate":0,"index":847},{"krate":0,"index":850},{"krate":0,"index":2901},{"krate":0,"index":2862},{"krate":0,"index":2859},{"krate":0,"index":853},{"krate":0,"index":856},{"krate":0,"index":859},{"krate":0,"index":863},{"krate":0,"index":870},{"krate":0,"index":873},{"krate":0,"index":2979},{"krate":0,"index":2940},{"krate":0,"index":2937},{"krate":0,"index":881},{"krate":0,"index":884}],"decl_id":null,"docs":" Provides a [channel](crate::server::Channel) that limits the number of in-flight requests.\n","sig":null,"attributes":[{"value":"/ Provides a [channel](crate::server::Channel) that limits the number of in-flight requests.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits.rs","byte_start":123031,"byte_end":123125,"line_start":4,"line_end":4,"column_start":1,"column_end":95}}]},{"kind":"Struct","id":{"krate":0,"index":2901},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/requests_per_channel.rs","byte_start":138012,"byte_end":138023,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"name":"MaxRequests","qualname":"::server::limits::requests_per_channel::MaxRequests","value":"MaxRequests {  }","parent":null,"children":[{"krate":0,"index":2903},{"krate":0,"index":2904}],"decl_id":null,"docs":" A [`Channel`] that limits the number of concurrent requests by throttling.","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/requests_per_channel.rs","byte_start":137969,"byte_end":137983,"line_start":20,"line_end":20,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":2882},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/requests_per_channel.rs","byte_start":138012,"byte_end":138023,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"name":"__MaxRequests","qualname":"::server::limits::requests_per_channel::_::__MaxRequests","value":"__MaxRequests {  }","parent":null,"children":[{"krate":0,"index":2885},{"krate":0,"index":2886}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/requests_per_channel.rs","byte_start":137969,"byte_end":137983,"line_start":20,"line_end":20,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":855},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/requests_per_channel.rs","byte_start":138163,"byte_end":138170,"line_start":30,"line_end":30,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<MaxRequests<C>>::get_ref","value":"fn get_ref(&Self) -> &C","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner channel.\n","sig":null,"attributes":[{"value":"/ Returns the inner channel.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/requests_per_channel.rs","byte_start":138121,"byte_end":138151,"line_start":29,"line_end":29,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":858},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/requests_per_channel.rs","byte_start":138406,"byte_end":138409,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<MaxRequests<C>>::new","value":"fn new(C, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `MaxRequests` that wraps the given channel and limits concurrent requests to\n `max_in_flight_requests`.\n","sig":null,"attributes":[{"value":"/ Returns a new `MaxRequests` that wraps the given channel and limits concurrent requests to","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/requests_per_channel.rs","byte_start":138266,"byte_end":138360,"line_start":39,"line_end":39,"column_start":5,"column_end":99}},{"value":"/ `max_in_flight_requests`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/requests_per_channel.rs","byte_start":138365,"byte_end":138394,"line_start":40,"line_end":40,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":862},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/requests_per_channel.rs","byte_start":138660,"byte_end":138669,"line_start":55,"line_end":55,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<MaxRequests<C> as futures::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":24,"index":96},"children":[],"decl_id":{"krate":24,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":866},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/requests_per_channel.rs","byte_start":139873,"byte_end":139883,"line_start":89,"line_end":89,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"<MaxRequests<C> as futures::Sink>::poll_ready","value":"fn poll_ready(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":25,"index":17},"children":[],"decl_id":{"krate":25,"index":20},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":867},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/requests_per_channel.rs","byte_start":140017,"byte_end":140027,"line_start":93,"line_end":93,"column_start":8,"column_end":18},"name":"start_send","qualname":"<MaxRequests<C> as futures::Sink>::start_send","value":"fn start_send(Pin<&mut Self>, Response<<C as Channel>::Resp>)\n-> Result<(), Self::Error>","parent":{"krate":25,"index":17},"children":[],"decl_id":{"krate":25,"index":21},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":868},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/requests_per_channel.rs","byte_start":140200,"byte_end":140210,"line_start":100,"line_end":100,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<MaxRequests<C> as futures::Sink>::poll_flush","value":"fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":25,"index":17},"children":[],"decl_id":{"krate":25,"index":22},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":869},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/requests_per_channel.rs","byte_start":140344,"byte_end":140354,"line_start":104,"line_end":104,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<MaxRequests<C> as futures::Sink>::poll_close","value":"fn poll_close(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":25,"index":17},"children":[],"decl_id":{"krate":25,"index":23},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":872},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/requests_per_channel.rs","byte_start":140528,"byte_end":140534,"line_start":110,"line_end":110,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<MaxRequests<C> as std::convert::AsRef>::as_ref","value":"fn as_ref(&Self) -> &C","parent":{"krate":2,"index":3076},"children":[],"decl_id":{"krate":2,"index":3078},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":878},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/requests_per_channel.rs","byte_start":140768,"byte_end":140786,"line_start":123,"line_end":123,"column_start":8,"column_end":26},"name":"in_flight_requests","qualname":"<MaxRequests<C> as server::Channel>::in_flight_requests","value":"fn in_flight_requests(&Self) -> usize","parent":{"krate":0,"index":1019},"children":[],"decl_id":{"krate":0,"index":1024},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":879},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/requests_per_channel.rs","byte_start":140859,"byte_end":140865,"line_start":127,"line_end":127,"column_start":8,"column_end":14},"name":"config","qualname":"<MaxRequests<C> as server::Channel>::config","value":"fn config(&Self) -> &Config","parent":{"krate":0,"index":1019},"children":[],"decl_id":{"krate":0,"index":1023},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":880},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/requests_per_channel.rs","byte_start":140928,"byte_end":140937,"line_start":131,"line_end":131,"column_start":8,"column_end":17},"name":"transport","qualname":"<MaxRequests<C> as server::Channel>::transport","value":"fn transport(&Self) -> &Self::Transport","parent":{"krate":0,"index":1019},"children":[],"decl_id":{"krate":0,"index":1025},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2979},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/requests_per_channel.rs","byte_start":141185,"byte_end":141206,"line_start":140,"line_end":140,"column_start":12,"column_end":33},"name":"MaxRequestsPerChannel","qualname":"::server::limits::requests_per_channel::MaxRequestsPerChannel","value":"MaxRequestsPerChannel {  }","parent":null,"children":[{"krate":0,"index":2982},{"krate":0,"index":2981}],"decl_id":null,"docs":" An [`Incoming`](crate::server::incoming::Incoming) stream of channels that enforce limits on\n the number of in-flight requests.\n","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/requests_per_channel.rs","byte_start":141142,"byte_end":141156,"line_start":138,"line_end":138,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":2960},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/requests_per_channel.rs","byte_start":141185,"byte_end":141206,"line_start":140,"line_end":140,"column_start":12,"column_end":33},"name":"__MaxRequestsPerChannel","qualname":"::server::limits::requests_per_channel::_::__MaxRequestsPerChannel","value":"__MaxRequestsPerChannel {  }","parent":null,"children":[{"krate":0,"index":2963},{"krate":0,"index":2964}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/requests_per_channel.rs","byte_start":141142,"byte_end":141156,"line_start":138,"line_end":138,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":887},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/requests_per_channel.rs","byte_start":141686,"byte_end":141695,"line_start":166,"line_end":166,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<MaxRequestsPerChannel<S> as futures::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":24,"index":96},"children":[],"decl_id":{"krate":24,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":888},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/incoming.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"incoming","qualname":"::server::incoming","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/incoming.rs","parent":null,"children":[{"krate":0,"index":889},{"krate":0,"index":890},{"krate":0,"index":891},{"krate":0,"index":894},{"krate":0,"index":897},{"krate":0,"index":900},{"krate":0,"index":901},{"krate":0,"index":902},{"krate":0,"index":905},{"krate":0,"index":906},{"krate":0,"index":908},{"krate":0,"index":909},{"krate":0,"index":912},{"krate":0,"index":915},{"krate":0,"index":923}],"decl_id":null,"docs":" Provides helper methods for streams of Channels.\n","sig":null,"attributes":[{"value":"/ Provides helper methods for streams of Channels.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":81235,"byte_end":81287,"line_start":33,"line_end":33,"column_start":1,"column_end":53}}]},{"kind":"Trait","id":{"krate":0,"index":915},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/incoming.rs","byte_start":147740,"byte_end":147748,"line_start":12,"line_end":12,"column_start":11,"column_end":19},"name":"Incoming","qualname":"::server::incoming::Incoming","value":"Incoming<C>","parent":null,"children":[{"krate":0,"index":917},{"krate":0,"index":920},{"krate":0,"index":921}],"decl_id":null,"docs":" An extension trait for [streams](futures::prelude::Stream) of [`Channels`](Channel).\n","sig":null,"attributes":[{"value":"/ An extension trait for [streams](futures::prelude::Stream) of [`Channels`](Channel).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/incoming.rs","byte_start":147641,"byte_end":147729,"line_start":11,"line_end":11,"column_start":1,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":917},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/incoming.rs","byte_start":147860,"byte_end":147880,"line_start":18,"line_end":18,"column_start":8,"column_end":28},"name":"max_channels_per_key","qualname":"::server::incoming::Incoming::max_channels_per_key","value":"fn max_channels_per_key<K, KF>(Self, u32, KF)\n-> MaxChannelsPerKey<Self, K, KF> where K: fmt::Display + Eq + Hash + Clone +\nUnpin, KF: for<'_> Fn(&'_ C) -> K","parent":{"krate":0,"index":915},"children":[],"decl_id":null,"docs":" Enforces channel per-key limits.\n","sig":null,"attributes":[{"value":"/ Enforces channel per-key limits.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/incoming.rs","byte_start":147816,"byte_end":147852,"line_start":17,"line_end":17,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":920},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/incoming.rs","byte_start":148168,"byte_end":148203,"line_start":27,"line_end":27,"column_start":8,"column_end":43},"name":"max_concurrent_requests_per_channel","qualname":"::server::incoming::Incoming::max_concurrent_requests_per_channel","value":"fn max_concurrent_requests_per_channel(Self, usize)\n-> MaxRequestsPerChannel<Self>","parent":{"krate":0,"index":915},"children":[],"decl_id":null,"docs":" Caps the number of concurrent requests per channel.\n","sig":null,"attributes":[{"value":"/ Caps the number of concurrent requests per channel.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/incoming.rs","byte_start":148105,"byte_end":148160,"line_start":26,"line_end":26,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":921},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/incoming.rs","byte_start":148625,"byte_end":148632,"line_start":36,"line_end":36,"column_start":8,"column_end":15},"name":"execute","qualname":"::server::incoming::Incoming::execute","value":"fn execute<S>(Self, S) -> TokioServerExecutor<Self, S> where S: Serve<C::Req,\nResp = C::Resp>","parent":{"krate":0,"index":915},"children":[],"decl_id":null,"docs":" [Executes](Channel::execute) each incoming channel. Each channel will be handled\n concurrently by spawning on tokio's default executor, and each request will be also\n be spawned on tokio's default executor.\n","sig":null,"attributes":[{"value":"/ [Executes](Channel::execute) each incoming channel. Each channel will be handled","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/incoming.rs","byte_start":148308,"byte_end":148392,"line_start":31,"line_end":31,"column_start":5,"column_end":89}},{"value":"/ concurrently by spawning on tokio's default executor, and each request will be also","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/incoming.rs","byte_start":148397,"byte_end":148484,"line_start":32,"line_end":32,"column_start":5,"column_end":92}},{"value":"/ be spawned on tokio's default executor.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/incoming.rs","byte_start":148489,"byte_end":148532,"line_start":33,"line_end":33,"column_start":5,"column_end":48}},{"value":"cfg(feature = \"tokio1\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/incoming.rs","byte_start":148537,"byte_end":148563,"line_start":34,"line_end":34,"column_start":5,"column_end":31}}]},{"kind":"Mod","id":{"krate":0,"index":926},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/tokio.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tokio","qualname":"::server::tokio","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/tokio.rs","parent":null,"children":[{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":931},{"krate":0,"index":934},{"krate":0,"index":937},{"krate":0,"index":938},{"krate":0,"index":939},{"krate":0,"index":942},{"krate":0,"index":943},{"krate":0,"index":946},{"krate":0,"index":3035},{"krate":0,"index":2987},{"krate":0,"index":2983},{"krate":0,"index":949},{"krate":0,"index":3092},{"krate":0,"index":3044},{"krate":0,"index":3040},{"krate":0,"index":953},{"krate":0,"index":958},{"krate":0,"index":963},{"krate":0,"index":967},{"krate":0,"index":973}],"decl_id":null,"docs":" Provides convenience functionality for tokio-enabled applications.\n","sig":null,"attributes":[{"value":"/ Provides convenience functionality for tokio-enabled applications.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":81307,"byte_end":81377,"line_start":36,"line_end":36,"column_start":1,"column_end":71}},{"value":"cfg(feature = \"tokio1\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":81378,"byte_end":81404,"line_start":37,"line_end":37,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":3035},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/tokio.rs","byte_start":149283,"byte_end":149302,"line_start":11,"line_end":11,"column_start":12,"column_end":31},"name":"TokioServerExecutor","qualname":"::server::tokio::TokioServerExecutor","value":"TokioServerExecutor {  }","parent":null,"children":[{"krate":0,"index":3039},{"krate":0,"index":3038}],"decl_id":null,"docs":" A future that drives the server by [spawning](tokio::spawn) a [`TokioChannelExecutor`](TokioChannelExecutor)\n for each new channel. Returned by\n [`Incoming::execute`](crate::server::incoming::Incoming::execute).\n","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/tokio.rs","byte_start":149240,"byte_end":149254,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3011},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/tokio.rs","byte_start":149283,"byte_end":149302,"line_start":11,"line_end":11,"column_start":12,"column_end":31},"name":"__TokioServerExecutor","qualname":"::server::tokio::_::__TokioServerExecutor","value":"__TokioServerExecutor {  }","parent":null,"children":[{"krate":0,"index":3015},{"krate":0,"index":3016}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/tokio.rs","byte_start":149240,"byte_end":149254,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3092},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/tokio.rs","byte_start":149751,"byte_end":149771,"line_start":28,"line_end":28,"column_start":12,"column_end":32},"name":"TokioChannelExecutor","qualname":"::server::tokio::TokioChannelExecutor","value":"TokioChannelExecutor {  }","parent":null,"children":[{"krate":0,"index":3096},{"krate":0,"index":3095}],"decl_id":null,"docs":" A future that drives the server by [spawning](tokio::spawn) each [response\n handler](super::InFlightRequest::execute) on tokio's default executor. Returned by\n [`Channel::execute`](crate::server::Channel::execute).\n","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/tokio.rs","byte_start":149708,"byte_end":149722,"line_start":26,"line_end":26,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3068},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/tokio.rs","byte_start":149751,"byte_end":149771,"line_start":28,"line_end":28,"column_start":12,"column_end":32},"name":"__TokioChannelExecutor","qualname":"::server::tokio::_::__TokioChannelExecutor","value":"__TokioChannelExecutor {  }","parent":null,"children":[{"krate":0,"index":3072},{"krate":0,"index":3073}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/tokio.rs","byte_start":149708,"byte_end":149722,"line_start":26,"line_end":26,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":965},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/tokio.rs","byte_start":150480,"byte_end":150487,"line_start":56,"line_end":56,"column_start":12,"column_end":19},"name":"execute","qualname":"<Requests<C>>::execute","value":"fn execute<S>(Self, S) -> TokioChannelExecutor<Self, S> where S: Serve<C::Req,\nResp = C::Resp> + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Executes all requests using the given service function. Requests are handled concurrently\n by [spawning](::tokio::spawn) each handler on tokio's default executor.\n","sig":null,"attributes":[{"value":"/ Executes all requests using the given service function. Requests are handled concurrently","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/tokio.rs","byte_start":150295,"byte_end":150388,"line_start":54,"line_end":54,"column_start":5,"column_end":98}},{"value":"/ by [spawning](::tokio::spawn) each handler on tokio's default executor.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/tokio.rs","byte_start":150393,"byte_end":150468,"line_start":55,"line_end":55,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":972},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/tokio.rs","byte_start":150976,"byte_end":150980,"line_start":75,"line_end":75,"column_start":8,"column_end":12},"name":"poll","qualname":"<TokioServerExecutor<St, Se> as futures::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<()>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":977},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/tokio.rs","byte_start":151538,"byte_end":151542,"line_start":94,"line_end":94,"column_start":8,"column_end":12},"name":"poll","qualname":"<TokioChannelExecutor<Requests<C>, S> as futures::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13541},"children":[],"decl_id":{"krate":2,"index":13543},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3161},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":81569,"byte_end":81575,"line_start":43,"line_end":43,"column_start":12,"column_end":18},"name":"Config","qualname":"::server::Config","value":"Config { pending_response_buffer }","parent":null,"children":[{"krate":0,"index":3162}],"decl_id":null,"docs":" Settings that control the behavior of [channels](Channel).\n","sig":null,"attributes":[{"value":"/ Settings that control the behavior of [channels](Channel).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":81471,"byte_end":81533,"line_start":41,"line_end":41,"column_start":1,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":3162},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":81850,"byte_end":81873,"line_start":47,"line_end":47,"column_start":9,"column_end":32},"name":"pending_response_buffer","qualname":"::server::Config::pending_response_buffer","value":"usize","parent":{"krate":0,"index":3161},"children":[],"decl_id":null,"docs":" Controls the buffer size of the in-process channel over which a server's handlers send\n responses to the [`Channel`]. In other words, this is the number of responses that can sit\n in the outbound queue before request handlers begin blocking.\n","sig":null,"attributes":[{"value":"/ Controls the buffer size of the in-process channel over which a server's handlers send","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":81582,"byte_end":81672,"line_start":44,"line_end":44,"column_start":5,"column_end":95}},{"value":"/ responses to the [`Channel`]. In other words, this is the number of responses that can sit","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":81677,"byte_end":81771,"line_start":45,"line_end":45,"column_start":5,"column_end":99}},{"value":"/ in the outbound queue before request handlers begin blocking.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":81776,"byte_end":81841,"line_start":46,"line_end":46,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":980},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":81918,"byte_end":81925,"line_start":51,"line_end":51,"column_start":8,"column_end":15},"name":"default","qualname":"<Config as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":982},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":82117,"byte_end":82124,"line_start":60,"line_end":60,"column_start":12,"column_end":19},"name":"channel","qualname":"<Config>::channel","value":"fn channel<Req, Resp, T>(Self, T) -> BaseChannel<Req, Resp, T> where\nT: Transport<Response<Resp>, ClientMessage<Req>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a channel backed by `transport` and configured with `self`.\n","sig":null,"attributes":[{"value":"/ Returns a channel backed by `transport` and configured with `self`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":82034,"byte_end":82105,"line_start":59,"line_end":59,"column_start":5,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":986},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":82388,"byte_end":82393,"line_start":69,"line_end":69,"column_start":11,"column_end":16},"name":"Serve","qualname":"::server::Serve","value":"Serve<Req>","parent":null,"children":[{"krate":0,"index":988},{"krate":0,"index":989},{"krate":0,"index":990},{"krate":0,"index":991}],"decl_id":null,"docs":" Equivalent to a `FnOnce(Req) -> impl Future<Output = Resp>`.\n","sig":null,"attributes":[{"value":"/ Equivalent to a `FnOnce(Req) -> impl Future<Output = Resp>`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":82313,"byte_end":82377,"line_start":68,"line_end":68,"column_start":1,"column_end":65}}]},{"kind":"Type","id":{"krate":0,"index":988},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":82436,"byte_end":82440,"line_start":71,"line_end":71,"column_start":10,"column_end":14},"name":"Resp","qualname":"::server::Serve::Resp","value":"type Resp;","parent":{"krate":0,"index":986},"children":[],"decl_id":null,"docs":" Type of response.\n","sig":null,"attributes":[{"value":"/ Type of response.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":82405,"byte_end":82426,"line_start":70,"line_end":70,"column_start":5,"column_end":26}}]},{"kind":"Type","id":{"krate":0,"index":989},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":82485,"byte_end":82488,"line_start":74,"line_end":74,"column_start":10,"column_end":13},"name":"Fut","qualname":"::server::Serve::Fut","value":"type Fut: Future<Output = Self::Resp>;","parent":{"krate":0,"index":986},"children":[],"decl_id":null,"docs":" Type of response future.\n","sig":null,"attributes":[{"value":"/ Type of response future.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":82447,"byte_end":82475,"line_start":73,"line_end":73,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":990},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":82576,"byte_end":82582,"line_start":77,"line_end":77,"column_start":8,"column_end":14},"name":"method","qualname":"::server::Serve::method","value":"fn method(&Self, &Req) -> Option<&'static str>","parent":{"krate":0,"index":986},"children":[],"decl_id":null,"docs":" Extracts a method name from the request.\n","sig":null,"attributes":[{"value":"/ Extracts a method name from the request.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":82524,"byte_end":82568,"line_start":76,"line_end":76,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":991},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":82697,"byte_end":82702,"line_start":82,"line_end":82,"column_start":8,"column_end":13},"name":"serve","qualname":"::server::Serve::serve","value":"fn serve(Self, context::Context, Req) -> Self::Fut","parent":{"krate":0,"index":986},"children":[],"decl_id":null,"docs":" Responds to a single request.\n","sig":null,"attributes":[{"value":"/ Responds to a single request.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":82656,"byte_end":82689,"line_start":81,"line_end":81,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":999},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":82935,"byte_end":82940,"line_start":93,"line_end":93,"column_start":8,"column_end":13},"name":"serve","qualname":"<F as server::Serve>::serve","value":"fn serve(Self, context::Context, Req) -> Self::Fut","parent":{"krate":0,"index":986},"children":[],"decl_id":{"krate":0,"index":991},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3228},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":83703,"byte_end":83714,"line_start":109,"line_end":109,"column_start":12,"column_end":23},"name":"BaseChannel","qualname":"::server::BaseChannel","value":"BaseChannel {  }","parent":null,"children":[{"krate":0,"index":3232},{"krate":0,"index":3235},{"krate":0,"index":3233},{"krate":0,"index":3234}],"decl_id":null,"docs":" BaseChannel is the standard implementation of a [`Channel`].","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":83677,"byte_end":83691,"line_start":108,"line_end":108,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3199},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":83703,"byte_end":83714,"line_start":109,"line_end":109,"column_start":12,"column_end":23},"name":"__BaseChannel","qualname":"::server::_::__BaseChannel","value":"__BaseChannel {  }","parent":null,"children":[{"krate":0,"index":3204},{"krate":0,"index":3205}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":83677,"byte_end":83691,"line_start":108,"line_end":108,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1004},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":84239,"byte_end":84242,"line_start":125,"line_end":125,"column_start":12,"column_end":15},"name":"new","qualname":"<BaseChannel<Req, Resp, T>>::new","value":"fn new(Config, T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new channel backed by `transport` and configured with `config`.\n","sig":null,"attributes":[{"value":"/ Creates a new channel backed by `transport` and configured with `config`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":84150,"byte_end":84227,"line_start":124,"line_end":124,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1005},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":84573,"byte_end":84586,"line_start":135,"line_end":135,"column_start":12,"column_end":25},"name":"with_defaults","qualname":"<BaseChannel<Req, Resp, T>>::with_defaults","value":"fn with_defaults(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new channel backed by `transport` and configured with the defaults.\n","sig":null,"attributes":[{"value":"/ Creates a new channel backed by `transport` and configured with the defaults.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":84480,"byte_end":84561,"line_start":134,"line_end":134,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":1006},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":84756,"byte_end":84763,"line_start":140,"line_end":140,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<BaseChannel<Req, Resp, T>>::get_ref","value":"fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner transport over which messages are sent and received.\n","sig":null,"attributes":[{"value":"/ Returns the inner transport over which messages are sent and received.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":84670,"byte_end":84744,"line_start":139,"line_end":139,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1007},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":84909,"byte_end":84920,"line_start":145,"line_end":145,"column_start":12,"column_end":23},"name":"get_pin_ref","qualname":"<BaseChannel<Req, Resp, T>>::get_pin_ref","value":"fn get_pin_ref(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner transport over which messages are sent and received.\n","sig":null,"attributes":[{"value":"/ Returns the inner transport over which messages are sent and received.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":84823,"byte_end":84897,"line_start":144,"line_end":144,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1018},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":86831,"byte_end":86834,"line_start":201,"line_end":201,"column_start":8,"column_end":11},"name":"fmt","qualname":"<BaseChannel<Req, Resp, T> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3357},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":86997,"byte_end":87011,"line_start":208,"line_end":208,"column_start":12,"column_end":26},"name":"TrackedRequest","qualname":"::server::TrackedRequest","value":"TrackedRequest { request, abort_registration, span }","parent":null,"children":[{"krate":0,"index":3359},{"krate":0,"index":3360},{"krate":0,"index":3361}],"decl_id":null,"docs":" A request tracked by a [`Channel`].\n","sig":null,"attributes":[{"value":"/ A request tracked by a [`Channel`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":86929,"byte_end":86968,"line_start":206,"line_end":206,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":3359},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":87067,"byte_end":87074,"line_start":210,"line_end":210,"column_start":9,"column_end":16},"name":"request","qualname":"::server::TrackedRequest::request","value":"Request<Req>","parent":{"krate":0,"index":3357},"children":[],"decl_id":null,"docs":" The request sent by the client.\n","sig":null,"attributes":[{"value":"/ The request sent by the client.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":87023,"byte_end":87058,"line_start":209,"line_end":209,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":3360},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":87214,"byte_end":87232,"line_start":213,"line_end":213,"column_start":9,"column_end":27},"name":"abort_registration","qualname":"::server::TrackedRequest::abort_registration","value":"futures::future::AbortRegistration","parent":{"krate":0,"index":3357},"children":[],"decl_id":null,"docs":" A registration to abort a future when the [`Channel`] that produced this request stops\n tracking it.\n","sig":null,"attributes":[{"value":"/ A registration to abort a future when the [`Channel`] that produced this request stops","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":87094,"byte_end":87184,"line_start":211,"line_end":211,"column_start":5,"column_end":95}},{"value":"/ tracking it.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":87189,"byte_end":87205,"line_start":212,"line_end":212,"column_start":5,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":3361},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":87328,"byte_end":87332,"line_start":215,"line_end":215,"column_start":9,"column_end":13},"name":"span","qualname":"::server::TrackedRequest::span","value":"tracing::Span","parent":{"krate":0,"index":3357},"children":[],"decl_id":null,"docs":" A span representing the server processing of this request.\n","sig":null,"attributes":[{"value":"/ A span representing the server processing of this request.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":87257,"byte_end":87319,"line_start":214,"line_end":214,"column_start":5,"column_end":67}}]},{"kind":"Trait","id":{"krate":0,"index":1019},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":89340,"byte_end":89347,"line_start":241,"line_end":241,"column_start":11,"column_end":18},"name":"Channel","qualname":"::server::Channel","value":"Channel","parent":null,"children":[{"krate":0,"index":1020},{"krate":0,"index":1021},{"krate":0,"index":1022},{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":1025},{"krate":0,"index":1026},{"krate":0,"index":1027},{"krate":0,"index":1028}],"decl_id":null,"docs":" The server end of an open connection with a client, receiving requests from, and sending\n responses to, the client. `Channel` is a [`Transport`] with request lifecycle management.","sig":null,"attributes":[{"value":"/ The server end of an open connection with a client, receiving requests from, and sending","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":87343,"byte_end":87435,"line_start":218,"line_end":218,"column_start":1,"column_end":93}},{"value":"/ responses to, the client. `Channel` is a [`Transport`] with request lifecycle management.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":87436,"byte_end":87529,"line_start":219,"line_end":219,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":87530,"byte_end":87533,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/ The ways to use a Channel, in order of simplest to most complex, is:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":87534,"byte_end":87606,"line_start":221,"line_end":221,"column_start":1,"column_end":73}},{"value":"/ 1. [`Channel::execute`] - Requires the `tokio1` feature. This method is best for those who","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":87607,"byte_end":87701,"line_start":222,"line_end":222,"column_start":1,"column_end":95}},{"value":"/    do not have specific scheduling needs and whose services are `Send + 'static`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":87702,"byte_end":87787,"line_start":223,"line_end":223,"column_start":1,"column_end":86}},{"value":"/ 2. [`Channel::requests`] - This method is best for those who need direct access to individual","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":87788,"byte_end":87885,"line_start":224,"line_end":224,"column_start":1,"column_end":98}},{"value":"/    requests, or are not using `tokio`, or want control over [futures](Future) scheduling.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":87886,"byte_end":87979,"line_start":225,"line_end":225,"column_start":1,"column_end":94}},{"value":"/    [`Requests`] is a stream of [`InFlightRequests`](InFlightRequest), each which has an","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":87980,"byte_end":88071,"line_start":226,"line_end":226,"column_start":1,"column_end":92}},{"value":"/    [`execute`](InFlightRequest::execute) method. If using `execute`, request processing will","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":88072,"byte_end":88168,"line_start":227,"line_end":227,"column_start":1,"column_end":97}},{"value":"/    automatically cease when either the request deadline is reached or when a corresponding","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":88169,"byte_end":88263,"line_start":228,"line_end":228,"column_start":1,"column_end":95}},{"value":"/    cancellation message is received by the Channel.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":88264,"byte_end":88319,"line_start":229,"line_end":229,"column_start":1,"column_end":56}},{"value":"/ 3. [`Stream::next`](futures::stream::StreamExt::next) /","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":88320,"byte_end":88379,"line_start":230,"line_end":230,"column_start":1,"column_end":60}},{"value":"/    [`Sink::send`](futures::sink::SinkExt::send) - A user is free to manually read requests","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":88380,"byte_end":88474,"line_start":231,"line_end":231,"column_start":1,"column_end":95}},{"value":"/    from, and send responses into, a Channel in lieu of the previous methods. Channels stream","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":88475,"byte_end":88571,"line_start":232,"line_end":232,"column_start":1,"column_end":97}},{"value":"/    [`TrackedRequests`](TrackedRequest), which, in addition to the request itself, contains the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":88572,"byte_end":88670,"line_start":233,"line_end":233,"column_start":1,"column_end":99}},{"value":"/    server [`Span`] and request lifetime [`AbortRegistration`]. Wrapping response","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":88671,"byte_end":88755,"line_start":234,"line_end":234,"column_start":1,"column_end":85}},{"value":"/    logic in an [`Abortable`] future using the abort registration will ensure that the response","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":88756,"byte_end":88854,"line_start":235,"line_end":235,"column_start":1,"column_end":99}},{"value":"/    does not execute longer than the request deadline. The `Channel` itself will clean up","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":88855,"byte_end":88947,"line_start":236,"line_end":236,"column_start":1,"column_end":93}},{"value":"/    request state once either the deadline expires, or a cancellation message is received, or a","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":88948,"byte_end":89046,"line_start":237,"line_end":237,"column_start":1,"column_end":99}},{"value":"/    response is sent. Because there is no guarantee that a cancellation message will ever be","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":89047,"byte_end":89142,"line_start":238,"line_end":238,"column_start":1,"column_end":96}},{"value":"/    received for a request, or that requests come with reasonably short deadlines, services","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":89143,"byte_end":89237,"line_start":239,"line_end":239,"column_start":1,"column_end":95}},{"value":"/    should strive to clean up Channel resources by sending a response for every request.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":89238,"byte_end":89329,"line_start":240,"line_end":240,"column_start":1,"column_end":92}}]},{"kind":"Type","id":{"krate":0,"index":1020},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":89491,"byte_end":89494,"line_start":246,"line_end":246,"column_start":10,"column_end":13},"name":"Req","qualname":"::server::Channel::Req","value":"type Req;","parent":{"krate":0,"index":1019},"children":[],"decl_id":null,"docs":" Type of request item.\n","sig":null,"attributes":[{"value":"/ Type of request item.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":89456,"byte_end":89481,"line_start":245,"line_end":245,"column_start":5,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":1021},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":89542,"byte_end":89546,"line_start":249,"line_end":249,"column_start":10,"column_end":14},"name":"Resp","qualname":"::server::Channel::Resp","value":"type Resp;","parent":{"krate":0,"index":1019},"children":[],"decl_id":null,"docs":" Type of response sink item.\n","sig":null,"attributes":[{"value":"/ Type of response sink item.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":89501,"byte_end":89532,"line_start":248,"line_end":248,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":1022},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":89589,"byte_end":89598,"line_start":252,"line_end":252,"column_start":10,"column_end":19},"name":"Transport","qualname":"::server::Channel::Transport","value":"type Transport;","parent":{"krate":0,"index":1019},"children":[],"decl_id":null,"docs":" The wrapped transport.\n","sig":null,"attributes":[{"value":"/ The wrapped transport.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":89553,"byte_end":89579,"line_start":251,"line_end":251,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1023},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":89646,"byte_end":89652,"line_start":255,"line_end":255,"column_start":8,"column_end":14},"name":"config","qualname":"::server::Channel::config","value":"fn config(&Self) -> &Config","parent":{"krate":0,"index":1019},"children":[],"decl_id":null,"docs":" Configuration of the channel.\n","sig":null,"attributes":[{"value":"/ Configuration of the channel.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":89605,"byte_end":89638,"line_start":254,"line_end":254,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1024},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":89748,"byte_end":89766,"line_start":258,"line_end":258,"column_start":8,"column_end":26},"name":"in_flight_requests","qualname":"::server::Channel::in_flight_requests","value":"fn in_flight_requests(&Self) -> usize","parent":{"krate":0,"index":1019},"children":[],"decl_id":null,"docs":" Returns the number of in-flight requests over this channel.\n","sig":null,"attributes":[{"value":"/ Returns the number of in-flight requests over this channel.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":89677,"byte_end":89740,"line_start":257,"line_end":257,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1025},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":89846,"byte_end":89855,"line_start":261,"line_end":261,"column_start":8,"column_end":17},"name":"transport","qualname":"::server::Channel::transport","value":"fn transport(&Self) -> &Self::Transport","parent":{"krate":0,"index":1019},"children":[],"decl_id":null,"docs":" Returns the transport underlying the channel.\n","sig":null,"attributes":[{"value":"/ Returns the transport underlying the channel.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":89789,"byte_end":89838,"line_start":260,"line_end":260,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1026},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":90280,"byte_end":90303,"line_start":270,"line_end":270,"column_start":8,"column_end":31},"name":"max_concurrent_requests","qualname":"::server::Channel::max_concurrent_requests","value":"fn max_concurrent_requests(Self, usize)\n-> limits::requests_per_channel::MaxRequests<Self> where Self: Sized","parent":{"krate":0,"index":1019},"children":[],"decl_id":null,"docs":" Caps the number of concurrent requests to `limit`. An error will be returned for requests\n over the concurrency limit.","sig":null,"attributes":[{"value":"/ Caps the number of concurrent requests to `limit`. An error will be returned for requests","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":89889,"byte_end":89982,"line_start":263,"line_end":263,"column_start":5,"column_end":98}},{"value":"/ over the concurrency limit.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":89987,"byte_end":90018,"line_start":264,"line_end":264,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":90023,"byte_end":90026,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ Note that this is a very","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":90031,"byte_end":90059,"line_start":266,"line_end":266,"column_start":5,"column_end":33}},{"value":"/ simplistic throttling heuristic. It is easy to set a number that is too low for the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":90064,"byte_end":90151,"line_start":267,"line_end":267,"column_start":5,"column_end":92}},{"value":"/ resources available to the server. For production use cases, a more advanced throttler is","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":90156,"byte_end":90249,"line_start":268,"line_end":268,"column_start":5,"column_end":98}},{"value":"/ likely needed.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":90254,"byte_end":90272,"line_start":269,"line_end":269,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":1027},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":90852,"byte_end":90860,"line_start":286,"line_end":286,"column_start":8,"column_end":16},"name":"requests","qualname":"::server::Channel::requests","value":"fn requests(Self) -> Requests<Self> where Self: Sized","parent":{"krate":0,"index":1019},"children":[],"decl_id":null,"docs":" Returns a stream of requests that automatically handle request cancellation and response\n routing.","sig":null,"attributes":[{"value":"/ Returns a stream of requests that automatically handle request cancellation and response","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":90514,"byte_end":90606,"line_start":280,"line_end":280,"column_start":5,"column_end":97}},{"value":"/ routing.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":90611,"byte_end":90623,"line_start":281,"line_end":281,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":90628,"byte_end":90631,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ This is a terminal operation. After calling `requests`, the channel cannot be retrieved,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":90636,"byte_end":90728,"line_start":283,"line_end":283,"column_start":5,"column_end":97}},{"value":"/ and the only way to complete requests is via [`Requests::execute`] or","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":90733,"byte_end":90806,"line_start":284,"line_end":284,"column_start":5,"column_end":78}},{"value":"/ [`InFlightRequest::execute`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":90811,"byte_end":90844,"line_start":285,"line_end":285,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1028},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":91455,"byte_end":91462,"line_start":304,"line_end":304,"column_start":8,"column_end":15},"name":"execute","qualname":"::server::Channel::execute","value":"fn execute<S>(Self, S) -> self::tokio::TokioChannelExecutor<Requests<Self>, S>\nwhere Self: Sized, S: Serve<Self::Req, Resp = Self::Resp> + Send + 'static,\nS::Fut: Send, Self::Req: Send + 'static, Self::Resp: Send + 'static","parent":{"krate":0,"index":1019},"children":[],"decl_id":null,"docs":" Runs the channel until completion by executing all requests using the given service\n function. Request handlers are run concurrently by [spawning](::tokio::spawn) on tokio's\n default executor.\n","sig":null,"attributes":[{"value":"/ Runs the channel until completion by executing all requests using the given service","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":91152,"byte_end":91239,"line_start":299,"line_end":299,"column_start":5,"column_end":92}},{"value":"/ function. Request handlers are run concurrently by [spawning](::tokio::spawn) on tokio's","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":91244,"byte_end":91336,"line_start":300,"line_end":300,"column_start":5,"column_end":97}},{"value":"/ default executor.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":91341,"byte_end":91362,"line_start":301,"line_end":301,"column_start":5,"column_end":26}},{"value":"cfg(feature = \"tokio1\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":91367,"byte_end":91393,"line_start":302,"line_end":302,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3386},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":92077,"byte_end":92086,"line_start":324,"line_end":324,"column_start":5,"column_end":14},"name":"Transport","qualname":"::server::ChannelError::Transport","value":"ChannelError::Transport(E)","parent":{"krate":0,"index":3365},"children":[],"decl_id":null,"docs":" An error occurred reading from, or writing to, the transport.\n","sig":null,"attributes":[{"value":"/ An error occurred reading from, or writing to, the transport.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":91951,"byte_end":92016,"line_start":322,"line_end":322,"column_start":5,"column_end":70}},{"value":"error(\"an error occurred in the transport: {0}\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":92021,"byte_end":92072,"line_start":323,"line_end":323,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":3388},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":92097,"byte_end":92098,"line_start":324,"line_end":324,"column_start":25,"column_end":26},"name":"0","qualname":"::server::ChannelError::Transport::0","value":"E","parent":{"krate":0,"index":3386},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"source","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":92087,"byte_end":92096,"line_start":324,"line_end":324,"column_start":15,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3389},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":92233,"byte_end":92238,"line_start":327,"line_end":327,"column_start":5,"column_end":10},"name":"Timer","qualname":"::server::ChannelError::Timer","value":"ChannelError::Timer(::tokio::time::error::Error)","parent":{"krate":0,"index":3365},"children":[],"decl_id":null,"docs":" An error occurred while polling expired requests.\n","sig":null,"attributes":[{"value":"/ An error occurred while polling expired requests.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":92105,"byte_end":92158,"line_start":325,"line_end":325,"column_start":5,"column_end":58}},{"value":"error(\"an error occurred while polling expired requests: {0}\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":92163,"byte_end":92228,"line_start":326,"line_end":326,"column_start":5,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":3391},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":92249,"byte_end":92276,"line_start":327,"line_end":327,"column_start":21,"column_end":48},"name":"0","qualname":"::server::ChannelError::Timer::0","value":"tokio::time::error::Error","parent":{"krate":0,"index":3389},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"source","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":92239,"byte_end":92248,"line_start":327,"line_end":327,"column_start":11,"column_end":20}}]},{"kind":"Enum","id":{"krate":0,"index":3365},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":91885,"byte_end":91897,"line_start":318,"line_end":318,"column_start":10,"column_end":22},"name":"ChannelError","qualname":"::server::ChannelError","value":"enum ChannelError<E> where E: Error + Send + Sync + 'static {\n    Transport(E),\n    Timer(::tokio::time::error::Error),\n}","parent":null,"children":[{"krate":0,"index":3386},{"krate":0,"index":3389}],"decl_id":null,"docs":" Critical errors that result in a Channel disconnecting.\n","sig":null,"attributes":[{"value":"/ Critical errors that result in a Channel disconnecting.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":91781,"byte_end":91840,"line_start":316,"line_end":316,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1035},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":92477,"byte_end":92486,"line_start":336,"line_end":336,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<BaseChannel<Req, Resp, T> as futures::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":24,"index":96},"children":[],"decl_id":{"krate":24,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1042},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":95509,"byte_end":95519,"line_start":414,"line_end":414,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"<BaseChannel<Req, Resp, T> as futures::Sink>::poll_ready","value":"fn poll_ready(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":25,"index":17},"children":[],"decl_id":{"krate":25,"index":20},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1043},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":95729,"byte_end":95739,"line_start":421,"line_end":421,"column_start":8,"column_end":18},"name":"start_send","qualname":"<BaseChannel<Req, Resp, T> as futures::Sink>::start_send","value":"fn start_send(Pin<&mut Self>, Response<Resp>) -> Result<(), Self::Error>","parent":{"krate":25,"index":17},"children":[],"decl_id":{"krate":25,"index":21},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1044},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":96368,"byte_end":96378,"line_start":440,"line_end":440,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<BaseChannel<Req, Resp, T> as futures::Sink>::poll_flush","value":"fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":25,"index":17},"children":[],"decl_id":{"krate":25,"index":22},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1045},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":96627,"byte_end":96637,"line_start":448,"line_end":448,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<BaseChannel<Req, Resp, T> as futures::Sink>::poll_close","value":"fn poll_close(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":25,"index":17},"children":[],"decl_id":{"krate":25,"index":23},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1050},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":96909,"byte_end":96915,"line_start":457,"line_end":457,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<BaseChannel<Req, Resp, T> as std::convert::AsRef>::as_ref","value":"fn as_ref(&Self) -> &T","parent":{"krate":2,"index":3076},"children":[],"decl_id":{"krate":2,"index":3078},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1058},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":97166,"byte_end":97172,"line_start":470,"line_end":470,"column_start":8,"column_end":14},"name":"config","qualname":"<BaseChannel<Req, Resp, T> as server::Channel>::config","value":"fn config(&Self) -> &Config","parent":{"krate":0,"index":1019},"children":[],"decl_id":{"krate":0,"index":1023},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1059},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":97228,"byte_end":97246,"line_start":474,"line_end":474,"column_start":8,"column_end":26},"name":"in_flight_requests","qualname":"<BaseChannel<Req, Resp, T> as server::Channel>::in_flight_requests","value":"fn in_flight_requests(&Self) -> usize","parent":{"krate":0,"index":1019},"children":[],"decl_id":{"krate":0,"index":1024},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1060},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":97317,"byte_end":97326,"line_start":478,"line_end":478,"column_start":8,"column_end":17},"name":"transport","qualname":"<BaseChannel<Req, Resp, T> as server::Channel>::transport","value":"fn transport(&Self) -> &Self::Transport","parent":{"krate":0,"index":1019},"children":[],"decl_id":{"krate":0,"index":1025},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3570},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":97568,"byte_end":97576,"line_start":486,"line_end":486,"column_start":12,"column_end":20},"name":"Requests","qualname":"::server::Requests","value":"Requests {  }","parent":null,"children":[{"krate":0,"index":3574},{"krate":0,"index":3572},{"krate":0,"index":3573}],"decl_id":null,"docs":" A stream of requests coming over a channel. `Requests` also drives the sending of responses, so\n it must be continually polled to ensure progress.\n","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":97542,"byte_end":97556,"line_start":485,"line_end":485,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3551},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":97568,"byte_end":97576,"line_start":486,"line_end":486,"column_start":12,"column_end":20},"name":"__Requests","qualname":"::server::_::__Requests","value":"__Requests {  }","parent":null,"children":[{"krate":0,"index":3554},{"krate":0,"index":3555}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":97542,"byte_end":97556,"line_start":485,"line_end":485,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1063},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":97988,"byte_end":98003,"line_start":503,"line_end":503,"column_start":12,"column_end":27},"name":"channel_pin_mut","qualname":"<Requests<C>>::channel_pin_mut","value":"fn channel_pin_mut<'a>(&'a mut Pin<&mut Self>) -> Pin<&'a mut C>","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner channel over which messages are sent and received.\n","sig":null,"attributes":[{"value":"/ Returns the inner channel over which messages are sent and received.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":97904,"byte_end":97976,"line_start":502,"line_end":502,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1065},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":98193,"byte_end":98214,"line_start":508,"line_end":508,"column_start":12,"column_end":33},"name":"pending_responses_mut","qualname":"<Requests<C>>::pending_responses_mut","value":"fn pending_responses_mut<'a>(&'a mut Pin<&mut Self>)\n-> &'a mut mpsc::Receiver<Response<C::Resp>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner channel over which messages are sent and received.\n","sig":null,"attributes":[{"value":"/ Returns the inner channel over which messages are sent and received.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":98109,"byte_end":98181,"line_start":507,"line_end":507,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1075},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":101500,"byte_end":101503,"line_start":595,"line_end":595,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Requests<C> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10110},"children":[],"decl_id":{"krate":2,"index":10111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3575},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":101674,"byte_end":101689,"line_start":602,"line_end":602,"column_start":12,"column_end":27},"name":"InFlightRequest","qualname":"::server::InFlightRequest","value":"InFlightRequest {  }","parent":null,"children":[{"krate":0,"index":3578},{"krate":0,"index":3579}],"decl_id":null,"docs":" A request produced by [Channel::requests].\n","sig":null,"attributes":[{"value":"/ A request produced by [Channel::requests].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":101599,"byte_end":101645,"line_start":600,"line_end":600,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1079},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":101883,"byte_end":101886,"line_start":609,"line_end":609,"column_start":12,"column_end":15},"name":"get","qualname":"<InFlightRequest<Req, Res>>::get","value":"fn get(&Self) -> &Request<Req>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the request.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the request.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":101832,"byte_end":101871,"line_start":608,"line_end":608,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1080},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":102639,"byte_end":102646,"line_start":624,"line_end":624,"column_start":18,"column_end":25},"name":"execute","qualname":"<InFlightRequest<Req, Res>>::execute","value":"async fn execute<S>(Self, S) -> /*impl Trait*/ where S: Serve<Req, Resp = Res>","parent":null,"children":[],"decl_id":null,"docs":" Returns a [future](Future) that executes the request using the given [service\n function](Serve). The service function's output is automatically sent back to the [Channel]\n that yielded this request. The request will be executed in the scope of this request's\n context.","sig":null,"attributes":[{"value":"/ Returns a [future](Future) that executes the request using the given [service","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":101954,"byte_end":102035,"line_start":613,"line_end":613,"column_start":5,"column_end":86}},{"value":"/ function](Serve). The service function's output is automatically sent back to the [Channel]","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":102040,"byte_end":102135,"line_start":614,"line_end":614,"column_start":5,"column_end":100}},{"value":"/ that yielded this request. The request will be executed in the scope of this request's","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":102140,"byte_end":102230,"line_start":615,"line_end":615,"column_start":5,"column_end":95}},{"value":"/ context.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":102235,"byte_end":102247,"line_start":616,"line_end":616,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":102252,"byte_end":102255,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ The returned future will stop executing when the first of the following conditions is met:","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":102260,"byte_end":102354,"line_start":618,"line_end":618,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":102359,"byte_end":102362,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ 1. The channel that yielded this request receives a [cancellation","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":102367,"byte_end":102436,"line_start":620,"line_end":620,"column_start":5,"column_end":74}},{"value":"/    message](ClientMessage::Cancel) for this request.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":102441,"byte_end":102497,"line_start":621,"line_end":621,"column_start":5,"column_end":61}},{"value":"/ 2. The request [deadline](crate::context::Context::deadline) is reached.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":102502,"byte_end":102578,"line_start":622,"line_end":622,"column_start":5,"column_end":81}},{"value":"/ 3. The service function completes.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":102583,"byte_end":102621,"line_start":623,"line_end":623,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1088},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":103935,"byte_end":103944,"line_start":669,"line_end":669,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Requests<C> as futures::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":24,"index":96},"children":[],"decl_id":{"krate":24,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1089},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/transport.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"transport","qualname":"::transport","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/transport.rs","parent":null,"children":[{"krate":0,"index":1090},{"krate":0,"index":1152}],"decl_id":null,"docs":" Provides a [`Transport`](sealed::Transport) trait as well as implementations.","sig":null,"attributes":[{"value":"/ Provides a [`Transport`](sealed::Transport) trait as well as implementations.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/transport.rs","byte_start":152350,"byte_end":152431,"line_start":7,"line_end":7,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/transport.rs","byte_start":152432,"byte_end":152435,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ The rpc crate is transport- and protocol-agnostic. Any transport that impls [`Transport`](sealed::Transport)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/transport.rs","byte_start":152436,"byte_end":152548,"line_start":9,"line_end":9,"column_start":1,"column_end":113}},{"value":"/ can be plugged in, using whatever protocol it wants.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/transport.rs","byte_start":152549,"byte_end":152605,"line_start":10,"line_end":10,"column_start":1,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":1090},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/transport/channel.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"channel","qualname":"::transport::channel","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/transport/channel.rs","parent":null,"children":[{"krate":0,"index":1091},{"krate":0,"index":1092},{"krate":0,"index":1093},{"krate":0,"index":1096},{"krate":0,"index":1099},{"krate":0,"index":1102},{"krate":0,"index":1103},{"krate":0,"index":1106},{"krate":0,"index":1109},{"krate":0,"index":3680},{"krate":0,"index":3681},{"krate":0,"index":3686},{"krate":0,"index":3688},{"krate":0,"index":1112},{"krate":0,"index":3693},{"krate":0,"index":3698},{"krate":0,"index":1115},{"krate":0,"index":1121},{"krate":0,"index":1122},{"krate":0,"index":1131},{"krate":0,"index":3755},{"krate":0,"index":3706},{"krate":0,"index":3702},{"krate":0,"index":1134},{"krate":0,"index":1140}],"decl_id":null,"docs":" Transports backed by in-memory channels.\n","sig":null,"attributes":[{"value":"/ Transports backed by in-memory channels.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/transport/channel.rs","byte_start":153782,"byte_end":153826,"line_start":7,"line_end":7,"column_start":1,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3690},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/transport/channel.rs","byte_start":154207,"byte_end":154211,"line_start":19,"line_end":19,"column_start":5,"column_end":9},"name":"Send","qualname":"::transport::channel::ChannelError::Send","value":"ChannelError::Send(Box<dyn Error + Send + Sync + 'static>)","parent":{"krate":0,"index":3680},"children":[],"decl_id":null,"docs":" An error occurred sending over the channel.\n","sig":null,"attributes":[{"value":"/ An error occurred sending over the channel.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/transport/channel.rs","byte_start":154096,"byte_end":154143,"line_start":17,"line_end":17,"column_start":5,"column_end":52}},{"value":"error(\"an error occurred sending over the channel\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/transport/channel.rs","byte_start":154148,"byte_end":154202,"line_start":18,"line_end":18,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":3692},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/transport/channel.rs","byte_start":154222,"byte_end":154260,"line_start":19,"line_end":19,"column_start":20,"column_end":58},"name":"0","qualname":"::transport::channel::ChannelError::Send::0","value":"std::boxed::Box<(dyn std::error::Error + std::marker::Send + std::marker::Sync + 'static)>","parent":{"krate":0,"index":3690},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"source","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/transport/channel.rs","byte_start":154212,"byte_end":154221,"line_start":19,"line_end":19,"column_start":10,"column_end":19}}]},{"kind":"Enum","id":{"krate":0,"index":3680},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/transport/channel.rs","byte_start":154077,"byte_end":154089,"line_start":16,"line_end":16,"column_start":10,"column_end":22},"name":"ChannelError","qualname":"::transport::channel::ChannelError","value":"enum ChannelError { Send(Box<dyn Error + Send + Sync + 'static>), }","parent":null,"children":[{"krate":0,"index":3690}],"decl_id":null,"docs":" Errors that occur in the sending or receiving of messages over a channel.\n","sig":null,"attributes":[{"value":"/ Errors that occur in the sending or receiving of messages over a channel.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/transport/channel.rs","byte_start":153955,"byte_end":154032,"line_start":14,"line_end":14,"column_start":1,"column_end":78}}]},{"kind":"Function","id":{"krate":0,"index":1112},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/transport/channel.rs","byte_start":154382,"byte_end":154391,"line_start":24,"line_end":24,"column_start":8,"column_end":17},"name":"unbounded","qualname":"::transport::channel::unbounded","value":"fn unbounded<SinkItem, Item>()\n-> (UnboundedChannel<SinkItem, Item>, UnboundedChannel<Item, SinkItem>)","parent":null,"children":[],"decl_id":null,"docs":" Returns two unbounded channel peers. Each [`Stream`] yields items sent through the other's\n [`Sink`].\n","sig":null,"attributes":[{"value":"/ Returns two unbounded channel peers. Each [`Stream`] yields items sent through the other's","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/transport/channel.rs","byte_start":154266,"byte_end":154360,"line_start":22,"line_end":22,"column_start":1,"column_end":95}},{"value":"/ [`Sink`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/transport/channel.rs","byte_start":154361,"byte_end":154374,"line_start":23,"line_end":23,"column_start":1,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":3693},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/transport/channel.rs","byte_start":154869,"byte_end":154885,"line_start":39,"line_end":39,"column_start":12,"column_end":28},"name":"UnboundedChannel","qualname":"::transport::channel::UnboundedChannel","value":"UnboundedChannel {  }","parent":null,"children":[{"krate":0,"index":3696},{"krate":0,"index":3697}],"decl_id":null,"docs":" A bi-directional channel backed by an [`UnboundedSender`](mpsc::UnboundedSender)\n and [`UnboundedReceiver`](mpsc::UnboundedReceiver).\n","sig":null,"attributes":[{"value":"/ A bi-directional channel backed by an [`UnboundedSender`](mpsc::UnboundedSender)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/transport/channel.rs","byte_start":154700,"byte_end":154784,"line_start":36,"line_end":36,"column_start":1,"column_end":85}},{"value":"/ and [`UnboundedReceiver`](mpsc::UnboundedReceiver).","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/transport/channel.rs","byte_start":154785,"byte_end":154840,"line_start":37,"line_end":37,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1119},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/transport/channel.rs","byte_start":155106,"byte_end":155115,"line_start":47,"line_end":47,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<UnboundedChannel<Item, SinkItem> as futures::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context)\n-> Poll<Option<Result<Item, ChannelError>>>","parent":{"krate":24,"index":96},"children":[],"decl_id":{"krate":24,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1126},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/transport/channel.rs","byte_start":155510,"byte_end":155520,"line_start":60,"line_end":60,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"<UnboundedChannel<Item, SinkItem> as futures::Sink>::poll_ready","value":"fn poll_ready(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":25,"index":17},"children":[],"decl_id":{"krate":25,"index":20},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1127},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/transport/channel.rs","byte_start":155764,"byte_end":155774,"line_start":68,"line_end":68,"column_start":8,"column_end":18},"name":"start_send","qualname":"<UnboundedChannel<Item, SinkItem> as futures::Sink>::start_send","value":"fn start_send(Pin<&mut Self>, SinkItem) -> Result<(), Self::Error>","parent":{"krate":25,"index":17},"children":[],"decl_id":{"krate":25,"index":21},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1129},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/transport/channel.rs","byte_start":155964,"byte_end":155974,"line_start":74,"line_end":74,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<UnboundedChannel<Item, SinkItem> as futures::Sink>::poll_flush","value":"fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":25,"index":17},"children":[],"decl_id":{"krate":25,"index":22},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1130},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/transport/channel.rs","byte_start":156144,"byte_end":156154,"line_start":79,"line_end":79,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<UnboundedChannel<Item, SinkItem> as futures::Sink>::poll_close","value":"fn poll_close(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":25,"index":17},"children":[],"decl_id":{"krate":25,"index":23},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1131},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/transport/channel.rs","byte_start":156459,"byte_end":156466,"line_start":87,"line_end":87,"column_start":8,"column_end":15},"name":"bounded","qualname":"::transport::channel::bounded","value":"fn bounded<SinkItem, Item>(usize)\n-> (Channel<SinkItem, Item>, Channel<Item, SinkItem>)","parent":null,"children":[],"decl_id":null,"docs":" Returns two channel peers with buffer equal to `capacity`. Each [`Stream`] yields items sent\n through the other's [`Sink`].\n","sig":null,"attributes":[{"value":"/ Returns two channel peers with buffer equal to `capacity`. Each [`Stream`] yields items sent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/transport/channel.rs","byte_start":156321,"byte_end":156417,"line_start":85,"line_end":85,"column_start":1,"column_end":97}},{"value":"/ through the other's [`Sink`].","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/transport/channel.rs","byte_start":156418,"byte_end":156451,"line_start":86,"line_end":86,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":3755},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/transport/channel.rs","byte_start":156942,"byte_end":156949,"line_start":99,"line_end":99,"column_start":12,"column_end":19},"name":"Channel","qualname":"::transport::channel::Channel","value":"Channel {  }","parent":null,"children":[{"krate":0,"index":3758},{"krate":0,"index":3759}],"decl_id":null,"docs":" A bi-directional channel backed by a [`Sender`](futures::channel::mpsc::Sender)\n and [`Receiver`](futures::channel::mpsc::Receiver).\n","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/transport/channel.rs","byte_start":156899,"byte_end":156913,"line_start":97,"line_end":97,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3730},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/transport/channel.rs","byte_start":156942,"byte_end":156949,"line_start":99,"line_end":99,"column_start":12,"column_end":19},"name":"__Channel","qualname":"::transport::channel::_::__Channel","value":"__Channel {  }","parent":null,"children":[{"krate":0,"index":3734},{"krate":0,"index":3735},{"krate":0,"index":3736}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/transport/channel.rs","byte_start":156899,"byte_end":156913,"line_start":97,"line_end":97,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1138},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/transport/channel.rs","byte_start":157201,"byte_end":157210,"line_start":109,"line_end":109,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Channel<Item, SinkItem> as futures::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context)\n-> Poll<Option<Result<Item, ChannelError>>>","parent":{"krate":24,"index":96},"children":[],"decl_id":{"krate":24,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1144},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/transport/channel.rs","byte_start":157507,"byte_end":157517,"line_start":120,"line_end":120,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"<Channel<Item, SinkItem> as futures::Sink>::poll_ready","value":"fn poll_ready(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":25,"index":17},"children":[],"decl_id":{"krate":25,"index":20},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1146},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/transport/channel.rs","byte_start":157736,"byte_end":157746,"line_start":127,"line_end":127,"column_start":8,"column_end":18},"name":"start_send","qualname":"<Channel<Item, SinkItem> as futures::Sink>::start_send","value":"fn start_send(Pin<&mut Self>, SinkItem) -> Result<(), Self::Error>","parent":{"krate":25,"index":17},"children":[],"decl_id":{"krate":25,"index":21},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1148},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/transport/channel.rs","byte_start":157955,"byte_end":157965,"line_start":134,"line_end":134,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<Channel<Item, SinkItem> as futures::Sink>::poll_flush","value":"fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":25,"index":17},"children":[],"decl_id":{"krate":25,"index":22},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1150},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/transport/channel.rs","byte_start":158184,"byte_end":158194,"line_start":141,"line_end":141,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<Channel<Item, SinkItem> as futures::Sink>::poll_close","value":"fn poll_close(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":25,"index":17},"children":[],"decl_id":{"krate":25,"index":23},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1157},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/transport.rs","byte_start":152788,"byte_end":152797,"line_start":19,"line_end":19,"column_start":15,"column_end":24},"name":"Transport","qualname":"::transport::sealed::Transport","value":"Transport<SinkItem, Item>","parent":null,"children":[{"krate":0,"index":1160}],"decl_id":null,"docs":" A bidirectional stream ([`Sink`] + [`Stream`]) of messages.\n","sig":null,"attributes":[{"value":"/ A bidirectional stream ([`Sink`] + [`Stream`]) of messages.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/transport.rs","byte_start":152710,"byte_end":152773,"line_start":18,"line_end":18,"column_start":5,"column_end":68}}]},{"kind":"Type","id":{"krate":0,"index":1160},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/transport.rs","byte_start":153275,"byte_end":153289,"line_start":28,"line_end":28,"column_start":14,"column_end":28},"name":"TransportError","qualname":"::transport::sealed::Transport::TransportError","value":"type TransportError: Error + Send + Sync + 'static;","parent":{"krate":0,"index":1157},"children":[],"decl_id":null,"docs":" Associated type where clauses are not elaborated; this associated type allows users\n bounding types by Transport to avoid having to explicitly add `T::Error: Error` to their\n bounds.\n","sig":null,"attributes":[{"value":"/ Associated type where clauses are not elaborated; this associated type allows users","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/transport.rs","byte_start":153053,"byte_end":153140,"line_start":25,"line_end":25,"column_start":9,"column_end":96}},{"value":"/ bounding types by Transport to avoid having to explicitly add `T::Error: Error` to their","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/transport.rs","byte_start":153149,"byte_end":153241,"line_start":26,"line_end":26,"column_start":9,"column_end":101}},{"value":"/ bounds.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/transport.rs","byte_start":153250,"byte_end":153261,"line_start":27,"line_end":27,"column_start":9,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3765},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":12342,"byte_end":12349,"line_start":323,"line_end":323,"column_start":5,"column_end":12},"name":"Request","qualname":"::ClientMessage::Request","value":"ClientMessage::Request(Request<T>)","parent":{"krate":0,"index":3763},"children":[],"decl_id":null,"docs":" A request initiated by a user. The server responds to a request by invoking a\n service-provided request handler.  The handler completes with a [`response`](Response), which\n the server sends back to the client.\n","sig":null,"attributes":[{"value":"/ A request initiated by a user. The server responds to a request by invoking a","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":12109,"byte_end":12190,"line_start":320,"line_end":320,"column_start":5,"column_end":86}},{"value":"/ service-provided request handler.  The handler completes with a [`response`](Response), which","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":12195,"byte_end":12292,"line_start":321,"line_end":321,"column_start":5,"column_end":102}},{"value":"/ the server sends back to the client.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":12297,"byte_end":12337,"line_start":322,"line_end":322,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":3767},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":12350,"byte_end":12360,"line_start":323,"line_end":323,"column_start":13,"column_end":23},"name":"0","qualname":"::ClientMessage::Request::0","value":"Request<T>","parent":{"krate":0,"index":3765},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3768},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":12784,"byte_end":12790,"line_start":331,"line_end":331,"column_start":5,"column_end":11},"name":"Cancel","qualname":"::ClientMessage::Cancel","value":"ClientMessage::Cancel { trace_context, request_id }","parent":{"krate":0,"index":3763},"children":[],"decl_id":null,"docs":" A command to cancel an in-flight request, automatically sent by the client when a response\n future is dropped.","sig":null,"attributes":[{"value":"/ A command to cancel an in-flight request, automatically sent by the client when a response","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":12367,"byte_end":12461,"line_start":324,"line_end":324,"column_start":5,"column_end":99}},{"value":"/ future is dropped.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":12466,"byte_end":12488,"line_start":325,"line_end":325,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":12493,"byte_end":12496,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ When received, the server will immediately cancel the main task (top-level future) of the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":12501,"byte_end":12594,"line_start":327,"line_end":327,"column_start":5,"column_end":98}},{"value":"/ request handler for the associated request. Any tasks spawned by the request handler will","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":12599,"byte_end":12692,"line_start":328,"line_end":328,"column_start":5,"column_end":98}},{"value":"/ not be canceled, because the framework layer does not","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":12697,"byte_end":12754,"line_start":329,"line_end":329,"column_start":5,"column_end":62}},{"value":"/ know about them.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":12759,"byte_end":12779,"line_start":330,"line_end":330,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":3857},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":13028,"byte_end":13041,"line_start":335,"line_end":335,"column_start":9,"column_end":22},"name":"trace_context","qualname":"::ClientMessage::Cancel::trace_context","value":"trace::Context","parent":{"krate":0,"index":3768},"children":[],"decl_id":null,"docs":" The trace context associates the message with a specific chain of causally-related actions,\n possibly orchestrated across many distributed systems.\n","sig":null,"attributes":[{"value":"/ The trace context associates the message with a specific chain of causally-related actions,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":12801,"byte_end":12896,"line_start":332,"line_end":332,"column_start":9,"column_end":104}},{"value":"/ possibly orchestrated across many distributed systems.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":12905,"byte_end":12963,"line_start":333,"line_end":333,"column_start":9,"column_end":67}},{"value":"serde(default)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":13003,"byte_end":13017,"line_start":334,"line_end":334,"column_start":40,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":3769},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":13112,"byte_end":13122,"line_start":337,"line_end":337,"column_start":9,"column_end":19},"name":"request_id","qualname":"::ClientMessage::Cancel::request_id","value":"u64","parent":{"krate":0,"index":3768},"children":[],"decl_id":null,"docs":" The ID of the request to cancel.\n","sig":null,"attributes":[{"value":"/ The ID of the request to cancel.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":13067,"byte_end":13103,"line_start":336,"line_end":336,"column_start":9,"column_end":45}}]},{"kind":"Enum","id":{"krate":0,"index":3763},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":12086,"byte_end":12099,"line_start":319,"line_end":319,"column_start":10,"column_end":23},"name":"ClientMessage","qualname":"::ClientMessage","value":"enum ClientMessage<T> {\n    Request(Request<T>),\n    Cancel {\n            trace_context: trace::Context,\n            request_id: u64,\n        },\n}","parent":null,"children":[{"krate":0,"index":3765},{"krate":0,"index":3768}],"decl_id":null,"docs":" A message from a client to a server.\n","sig":null,"attributes":[{"value":"/ A message from a client to a server.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":11923,"byte_end":11963,"line_start":315,"line_end":315,"column_start":1,"column_end":41}},{"value":"non_exhaustive","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":12059,"byte_end":12076,"line_start":318,"line_end":318,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":3866},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":13317,"byte_end":13324,"line_start":345,"line_end":345,"column_start":12,"column_end":19},"name":"Request","qualname":"::Request","value":"Request { context, id, message }","parent":null,"children":[{"krate":0,"index":3868},{"krate":0,"index":3869},{"krate":0,"index":3870}],"decl_id":null,"docs":" A request from a client to a server.\n","sig":null,"attributes":[{"value":"/ A request from a client to a server.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":13139,"byte_end":13179,"line_start":341,"line_end":341,"column_start":1,"column_end":41}},{"value":"non_exhaustive","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":13210,"byte_end":13227,"line_start":343,"line_end":343,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":3868},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":13405,"byte_end":13412,"line_start":347,"line_end":347,"column_start":9,"column_end":16},"name":"context","qualname":"::Request::context","value":"context::Context","parent":{"krate":0,"index":3866},"children":[],"decl_id":null,"docs":" Trace context, deadline, and other cross-cutting concerns.\n","sig":null,"attributes":[{"value":"/ Trace context, deadline, and other cross-cutting concerns.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":13334,"byte_end":13396,"line_start":346,"line_end":346,"column_start":5,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":3869},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":13528,"byte_end":13530,"line_start":349,"line_end":349,"column_start":9,"column_end":11},"name":"id","qualname":"::Request::id","value":"u64","parent":{"krate":0,"index":3866},"children":[],"decl_id":null,"docs":" Uniquely identifies the request across all requests sent over a single channel.\n","sig":null,"attributes":[{"value":"/ Uniquely identifies the request across all requests sent over a single channel.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":13436,"byte_end":13519,"line_start":348,"line_end":348,"column_start":5,"column_end":88}}]},{"kind":"Field","id":{"krate":0,"index":3870},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":13571,"byte_end":13578,"line_start":351,"line_end":351,"column_start":9,"column_end":16},"name":"message","qualname":"::Request::message","value":"T","parent":{"krate":0,"index":3866},"children":[],"decl_id":null,"docs":" The request body.\n","sig":null,"attributes":[{"value":"/ The request body.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":13541,"byte_end":13562,"line_start":350,"line_end":350,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":3947},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":13780,"byte_end":13788,"line_start":358,"line_end":358,"column_start":12,"column_end":20},"name":"Response","qualname":"::Response","value":"Response { request_id, message }","parent":null,"children":[{"krate":0,"index":3949},{"krate":0,"index":3950}],"decl_id":null,"docs":" A response from a server to a client.\n","sig":null,"attributes":[{"value":"/ A response from a server to a client.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":13586,"byte_end":13627,"line_start":354,"line_end":354,"column_start":1,"column_end":42}},{"value":"non_exhaustive","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":13673,"byte_end":13690,"line_start":356,"line_end":356,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":3949},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":13852,"byte_end":13862,"line_start":360,"line_end":360,"column_start":9,"column_end":19},"name":"request_id","qualname":"::Response::request_id","value":"u64","parent":{"krate":0,"index":3947},"children":[],"decl_id":null,"docs":" The ID of the request being responded to.\n","sig":null,"attributes":[{"value":"/ The ID of the request being responded to.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":13798,"byte_end":13843,"line_start":359,"line_end":359,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":3950},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":13939,"byte_end":13946,"line_start":362,"line_end":362,"column_start":9,"column_end":16},"name":"message","qualname":"::Response::message","value":"std::result::Result<T, ServerError>","parent":{"krate":0,"index":3947},"children":[],"decl_id":null,"docs":" The response body, or an error if the request failed.\n","sig":null,"attributes":[{"value":"/ The response body, or an error if the request failed.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":13873,"byte_end":13930,"line_start":361,"line_end":361,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":4028},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":14271,"byte_end":14282,"line_start":370,"line_end":370,"column_start":12,"column_end":23},"name":"ServerError","qualname":"::ServerError","value":"ServerError { kind, detail }","parent":null,"children":[{"krate":0,"index":4106},{"krate":0,"index":4029}],"decl_id":null,"docs":" An error indicating the server aborted the request early, e.g., due to request throttling.\n","sig":null,"attributes":[{"value":"/ An error indicating the server aborted the request early, e.g., due to request throttling.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":13975,"byte_end":14069,"line_start":365,"line_end":365,"column_start":1,"column_end":95}},{"value":"error(\"{kind:?}: {detail}\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":14133,"byte_end":14163,"line_start":367,"line_end":367,"column_start":1,"column_end":31}},{"value":"non_exhaustive","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":14164,"byte_end":14181,"line_start":368,"line_end":368,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":4106},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":14618,"byte_end":14622,"line_start":380,"line_end":380,"column_start":9,"column_end":13},"name":"kind","qualname":"::ServerError::kind","value":"std::io::ErrorKind","parent":{"krate":0,"index":4028},"children":[],"decl_id":null,"docs":" The type of error that occurred to fail the request.\n","sig":null,"attributes":[{"value":"serde(serialize_with = \"util::serde::serialize_io_error_kind_as_u32\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":14337,"byte_end":14406,"line_start":373,"line_end":373,"column_start":9,"column_end":78}},{"value":"serde(deserialize_with = \"util::serde::deserialize_io_error_kind_from_u32\")","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":14466,"byte_end":14541,"line_start":377,"line_end":377,"column_start":9,"column_end":84}},{"value":"/ The type of error that occurred to fail the request.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":14553,"byte_end":14609,"line_start":379,"line_end":379,"column_start":5,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":4029},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":14719,"byte_end":14725,"line_start":382,"line_end":382,"column_start":9,"column_end":15},"name":"detail","qualname":"::ServerError::detail","value":"std::string::String","parent":{"krate":0,"index":4028},"children":[],"decl_id":null,"docs":" A message describing more detail about the error that occurred.\n","sig":null,"attributes":[{"value":"/ A message describing more detail about the error that occurred.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":14643,"byte_end":14710,"line_start":381,"line_end":381,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1243},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":14817,"byte_end":14825,"line_start":387,"line_end":387,"column_start":12,"column_end":20},"name":"deadline","qualname":"<Request<T>>::deadline","value":"fn deadline(&Self) -> &SystemTime","parent":null,"children":[],"decl_id":null,"docs":" Returns the deadline for this request.\n","sig":null,"attributes":[{"value":"/ Returns the deadline for this request.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":14763,"byte_end":14805,"line_start":386,"line_end":386,"column_start":5,"column_end":47}}]}],"impls":[{"id":5,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","byte_start":16644,"byte_end":16653,"line_start":26,"line_end":26,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","byte_start":16897,"byte_end":16906,"line_start":33,"line_end":33,"column_start":55,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":65},{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","byte_start":17562,"byte_end":17571,"line_start":52,"line_end":52,"column_start":63,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":77},{"krate":0,"index":79},{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","byte_start":19307,"byte_end":19316,"line_start":108,"line_end":108,"column_start":53,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","byte_start":20091,"byte_end":20100,"line_start":137,"line_end":137,"column_start":48,"column_end":57},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","byte_start":20177,"byte_end":20186,"line_start":140,"line_end":140,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":133},{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","byte_start":20993,"byte_end":21000,"line_start":161,"line_end":161,"column_start":56,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":142},{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","byte_start":21624,"byte_end":21631,"line_start":177,"line_end":177,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":149},{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","byte_start":23821,"byte_end":23829,"line_start":242,"line_end":242,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","byte_start":24434,"byte_end":24442,"line_start":259,"line_end":259,"column_start":53,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":182},{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":32915,"byte_end":32922,"line_start":79,"line_end":79,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":33263,"byte_end":33270,"line_start":90,"line_end":90,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":215},{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":33619,"byte_end":33625,"line_start":103,"line_end":103,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":219},{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":34046,"byte_end":34053,"line_start":121,"line_end":121,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":34239,"byte_end":34245,"line_start":133,"line_end":133,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":34360,"byte_end":34367,"line_start":139,"line_end":139,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":34548,"byte_end":34555,"line_start":145,"line_end":145,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":34713,"byte_end":34719,"line_start":151,"line_end":151,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":34895,"byte_end":34901,"line_start":157,"line_end":157,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":35044,"byte_end":35051,"line_start":163,"line_end":163,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":239},{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":35391,"byte_end":35398,"line_start":176,"line_end":176,"column_start":50,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":35774,"byte_end":35784,"line_start":187,"line_end":187,"column_start":55,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":36103,"byte_end":36119,"line_start":196,"line_end":196,"column_start":51,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":36354,"byte_end":36370,"line_start":206,"line_end":206,"column_start":18,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":248}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":36584,"byte_end":36591,"line_start":216,"line_end":216,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":36741,"byte_end":36748,"line_start":223,"line_end":223,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":252}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":36900,"byte_end":36906,"line_start":230,"line_end":230,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":37056,"byte_end":37062,"line_start":237,"line_end":237,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client/in_flight_requests.rs","byte_start":70642,"byte_end":70658,"line_start":22,"line_end":22,"column_start":24,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client/in_flight_requests.rs","byte_start":71434,"byte_end":71450,"line_start":51,"line_end":51,"column_start":12,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":39021,"byte_end":39027,"line_start":42,"line_end":42,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":39457,"byte_end":39466,"line_start":60,"line_end":60,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":40034,"byte_end":40043,"line_start":78,"line_end":78,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":40689,"byte_end":40696,"line_start":99,"line_end":99,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":426}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":40953,"byte_end":40960,"line_start":109,"line_end":109,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1915}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":44004,"byte_end":44012,"line_start":186,"line_end":186,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":437}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":44118,"byte_end":44131,"line_start":192,"line_end":192,"column_start":12,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":44847,"byte_end":44860,"line_start":210,"line_end":210,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":445}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":48431,"byte_end":48446,"line_start":300,"line_end":300,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":454},{"krate":0,"index":456},{"krate":0,"index":458},{"krate":0,"index":460},{"krate":0,"index":461},{"krate":0,"index":463},{"krate":0,"index":465},{"krate":0,"index":467},{"krate":0,"index":469},{"krate":0,"index":471},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":481},{"krate":0,"index":483},{"krate":0,"index":485}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":57759,"byte_end":57774,"line_start":557,"line_end":557,"column_start":31,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":490},{"krate":0,"index":491}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":60144,"byte_end":60163,"line_start":621,"line_end":621,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":494}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":60311,"byte_end":60327,"line_start":628,"line_end":628,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":496}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":60457,"byte_end":60473,"line_start":634,"line_end":634,"column_start":17,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":498},{"krate":0,"index":499}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/context.rs","byte_start":78646,"byte_end":78654,"line_start":103,"line_end":103,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":557}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/context.rs","byte_start":78735,"byte_end":78742,"line_start":109,"line_end":109,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":559},{"krate":0,"index":561}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/context.rs","byte_start":79693,"byte_end":79697,"line_start":138,"line_end":138,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":565}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/in_flight_requests.rs","byte_start":116422,"byte_end":116438,"line_start":36,"line_end":36,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":692}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/in_flight_requests.rs","byte_start":119540,"byte_end":119556,"line_start":122,"line_end":122,"column_start":15,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":695}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/channels_per_key.rs","byte_start":124599,"byte_end":124606,"line_start":56,"line_end":56,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":766}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/channels_per_key.rs","byte_start":124784,"byte_end":124798,"line_start":63,"line_end":63,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":770},{"krate":0,"index":771}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/channels_per_key.rs","byte_start":125035,"byte_end":125049,"line_start":74,"line_end":74,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":776},{"krate":0,"index":777},{"krate":0,"index":778},{"krate":0,"index":779},{"krate":0,"index":780}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/channels_per_key.rs","byte_start":125713,"byte_end":125727,"line_start":97,"line_end":97,"column_start":25,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":784}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/channels_per_key.rs","byte_start":125817,"byte_end":125831,"line_start":103,"line_end":103,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":788},{"krate":0,"index":789},{"krate":0,"index":790},{"krate":0,"index":791},{"krate":0,"index":792},{"krate":0,"index":793}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/channels_per_key.rs","byte_start":126211,"byte_end":126225,"line_start":124,"line_end":124,"column_start":12,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":797},{"krate":0,"index":798}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/channels_per_key.rs","byte_start":126508,"byte_end":126525,"line_start":136,"line_end":136,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":804}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/channels_per_key.rs","byte_start":127070,"byte_end":127087,"line_start":156,"line_end":156,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":809},{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":814},{"krate":0,"index":815}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/channels_per_key.rs","byte_start":130268,"byte_end":130285,"line_start":248,"line_end":248,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":820},{"krate":0,"index":821}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/requests_per_channel.rs","byte_start":138100,"byte_end":138111,"line_start":28,"line_end":28,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":855}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/requests_per_channel.rs","byte_start":138223,"byte_end":138234,"line_start":35,"line_end":35,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":858}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/requests_per_channel.rs","byte_start":138576,"byte_end":138587,"line_start":49,"line_end":49,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":861},{"krate":0,"index":862}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/requests_per_channel.rs","byte_start":139799,"byte_end":139810,"line_start":83,"line_end":83,"column_start":50,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":869}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/requests_per_channel.rs","byte_start":140504,"byte_end":140515,"line_start":109,"line_end":109,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":872}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/requests_per_channel.rs","byte_start":140599,"byte_end":140610,"line_start":115,"line_end":115,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":875},{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":879},{"krate":0,"index":880}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/requests_per_channel.rs","byte_start":141283,"byte_end":141304,"line_start":146,"line_end":146,"column_start":9,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":883}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/requests_per_channel.rs","byte_start":141546,"byte_end":141567,"line_start":159,"line_end":159,"column_start":20,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":886},{"krate":0,"index":887}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/incoming.rs","byte_start":148824,"byte_end":148825,"line_start":44,"line_end":44,"column_start":28,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/tokio.rs","byte_start":149364,"byte_end":149383,"line_start":17,"line_end":17,"column_start":12,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":952}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/tokio.rs","byte_start":149833,"byte_end":149852,"line_start":34,"line_end":34,"column_start":12,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":956}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/tokio.rs","byte_start":149994,"byte_end":150014,"line_start":40,"line_end":40,"column_start":12,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":961}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/tokio.rs","byte_start":150198,"byte_end":150206,"line_start":48,"line_end":48,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":965}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/tokio.rs","byte_start":150703,"byte_end":150722,"line_start":64,"line_end":64,"column_start":28,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":971},{"krate":0,"index":972}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/tokio.rs","byte_start":151299,"byte_end":151319,"line_start":84,"line_end":84,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":976},{"krate":0,"index":977}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":81902,"byte_end":81908,"line_start":50,"line_end":50,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":980}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":82021,"byte_end":82027,"line_start":58,"line_end":58,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":982}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":82798,"byte_end":82799,"line_start":85,"line_end":85,"column_start":40,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":997},{"krate":0,"index":998},{"krate":0,"index":999}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":84058,"byte_end":84069,"line_start":120,"line_end":120,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1004},{"krate":0,"index":1005},{"krate":0,"index":1006},{"krate":0,"index":1007},{"krate":0,"index":1008},{"krate":0,"index":1010},{"krate":0,"index":1012}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":86796,"byte_end":86807,"line_start":200,"line_end":200,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1018}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":92312,"byte_end":92323,"line_start":330,"line_end":330,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1034},{"krate":0,"index":1035}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":95351,"byte_end":95362,"line_start":407,"line_end":407,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1041},{"krate":0,"index":1042},{"krate":0,"index":1043},{"krate":0,"index":1044},{"krate":0,"index":1045}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":96874,"byte_end":96885,"line_start":456,"line_end":456,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1050}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":97004,"byte_end":97015,"line_start":462,"line_end":462,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1055},{"krate":0,"index":1056},{"krate":0,"index":1057},{"krate":0,"index":1058},{"krate":0,"index":1059},{"krate":0,"index":1060}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":97864,"byte_end":97872,"line_start":498,"line_end":498,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1063},{"krate":0,"index":1065},{"krate":0,"index":1067},{"krate":0,"index":1069},{"krate":0,"index":1070},{"krate":0,"index":1071}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":101457,"byte_end":101465,"line_start":591,"line_end":591,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1075}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":101800,"byte_end":101815,"line_start":607,"line_end":607,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1079},{"krate":0,"index":1080}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":103823,"byte_end":103831,"line_start":663,"line_end":663,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1087},{"krate":0,"index":1088}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/transport/channel.rs","byte_start":155019,"byte_end":155035,"line_start":44,"line_end":44,"column_start":33,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1118},{"krate":0,"index":1119}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/transport/channel.rs","byte_start":155436,"byte_end":155452,"line_start":57,"line_end":57,"column_start":41,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1125},{"krate":0,"index":1126},{"krate":0,"index":1127},{"krate":0,"index":1129},{"krate":0,"index":1130}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/transport/channel.rs","byte_start":157123,"byte_end":157130,"line_start":106,"line_end":106,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1137},{"krate":0,"index":1138}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/transport/channel.rs","byte_start":157442,"byte_end":157449,"line_start":117,"line_end":117,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1143},{"krate":0,"index":1144},{"krate":0,"index":1146},{"krate":0,"index":1148},{"krate":0,"index":1150}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/transport.rs","byte_start":153390,"byte_end":153391,"line_start":31,"line_end":31,"column_start":62,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1166}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/util.rs","byte_start":160813,"byte_end":160823,"line_start":23,"line_end":23,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1213}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/util.rs","byte_start":161197,"byte_end":161204,"line_start":35,"line_end":35,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1220}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":14746,"byte_end":14753,"line_start":385,"line_end":385,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1243}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":15236,"byte_end":15240,"line_start":403,"line_end":403,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1254},{"krate":0,"index":1258}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":9148,"byte_end":9163,"line_start":216,"line_end":216,"column_start":9,"column_end":24},"ref_id":{"krate":0,"index":9}},{"kind":"Mod","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":9174,"byte_end":9179,"line_start":218,"line_end":218,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":184}},{"kind":"Mod","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":11685,"byte_end":11691,"line_start":303,"line_end":303,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":272}},{"kind":"Mod","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":11701,"byte_end":11708,"line_start":304,"line_end":304,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":500}},{"kind":"Mod","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":11718,"byte_end":11724,"line_start":305,"line_end":305,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":566}},{"kind":"Mod","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":81226,"byte_end":81232,"line_start":31,"line_end":31,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":697}},{"kind":"Mod","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits.rs","byte_start":123012,"byte_end":123028,"line_start":2,"line_end":2,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":698}},{"kind":"Mod","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits.rs","byte_start":123134,"byte_end":123154,"line_start":5,"line_end":5,"column_start":9,"column_end":29},"ref_id":{"krate":0,"index":822}},{"kind":"Mod","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":81296,"byte_end":81304,"line_start":34,"line_end":34,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":888}},{"kind":"Mod","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":81463,"byte_end":81468,"line_start":39,"line_end":39,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":926}},{"kind":"Mod","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":11734,"byte_end":11743,"line_start":306,"line_end":306,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":1089}},{"kind":"Mod","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/transport.rs","byte_start":152615,"byte_end":152622,"line_start":12,"line_end":12,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1090}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","byte_start":16644,"byte_end":16653,"line_start":26,"line_end":26,"column_start":32,"column_end":41},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1327},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","byte_start":16897,"byte_end":16906,"line_start":33,"line_end":33,"column_start":55,"column_end":64},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1327},"to":{"krate":24,"index":96}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","byte_start":17562,"byte_end":17571,"line_start":52,"line_end":52,"column_start":63,"column_end":72},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1327},"to":{"krate":25,"index":17}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","byte_start":19307,"byte_end":19316,"line_start":108,"line_end":108,"column_start":53,"column_end":62},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1327},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","byte_start":20091,"byte_end":20100,"line_start":137,"line_end":137,"column_start":48,"column_end":57},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1327},"to":{"krate":0,"index":124}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","byte_start":20177,"byte_end":20186,"line_start":140,"line_end":140,"column_start":33,"column_end":42},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1327},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","byte_start":20993,"byte_end":21000,"line_start":161,"line_end":161,"column_start":56,"column_end":63},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1403},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","byte_start":21624,"byte_end":21631,"line_start":177,"line_end":177,"column_start":38,"column_end":45},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1403},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","byte_start":23821,"byte_end":23829,"line_start":242,"line_end":242,"column_start":42,"column_end":50},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1489},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/serde_transport.rs","byte_start":24434,"byte_end":24442,"line_start":259,"line_end":259,"column_start":53,"column_end":61},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1489},"to":{"krate":24,"index":96}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":32915,"byte_end":32922,"line_start":79,"line_end":79,"column_start":6,"column_end":13},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1516},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":33263,"byte_end":33270,"line_start":90,"line_end":90,"column_start":6,"column_end":13},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1586},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":33619,"byte_end":33625,"line_start":103,"line_end":103,"column_start":6,"column_end":12},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1647},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":34046,"byte_end":34053,"line_start":121,"line_end":121,"column_start":21,"column_end":28},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1586},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":34239,"byte_end":34245,"line_start":133,"line_end":133,"column_start":20,"column_end":26},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1647},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":34360,"byte_end":34367,"line_start":139,"line_end":139,"column_start":46,"column_end":53},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1586},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":34548,"byte_end":34555,"line_start":145,"line_end":145,"column_start":46,"column_end":53},"kind":{"Impl":{"id":41}},"from":{"krate":60,"index":3018},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":34713,"byte_end":34719,"line_start":151,"line_end":151,"column_start":45,"column_end":51},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1647},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":34895,"byte_end":34901,"line_start":157,"line_end":157,"column_start":45,"column_end":51},"kind":{"Impl":{"id":43}},"from":{"krate":60,"index":3034},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":35044,"byte_end":35051,"line_start":163,"line_end":163,"column_start":34,"column_end":41},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1516},"to":{"krate":2,"index":3092}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":35391,"byte_end":35398,"line_start":176,"line_end":176,"column_start":50,"column_end":57},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1516},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":35774,"byte_end":35784,"line_start":187,"line_end":187,"column_start":55,"column_end":65},"kind":{"Impl":{"id":46}},"from":{"krate":60,"index":2998},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":36103,"byte_end":36119,"line_start":196,"line_end":196,"column_start":51,"column_end":67},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1689},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":36354,"byte_end":36370,"line_start":206,"line_end":206,"column_start":18,"column_end":34},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1689},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":36584,"byte_end":36591,"line_start":216,"line_end":216,"column_start":23,"column_end":30},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1586},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":36741,"byte_end":36748,"line_start":223,"line_end":223,"column_start":21,"column_end":28},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1586},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":36900,"byte_end":36906,"line_start":230,"line_end":230,"column_start":23,"column_end":29},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1647},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/trace.rs","byte_start":37056,"byte_end":37062,"line_start":237,"line_end":237,"column_start":21,"column_end":27},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1647},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client/in_flight_requests.rs","byte_start":70642,"byte_end":70658,"line_start":22,"line_end":22,"column_start":24,"column_end":40},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1743},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client/in_flight_requests.rs","byte_start":71434,"byte_end":71450,"line_start":51,"line_end":51,"column_start":12,"column_end":28},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1743},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":39021,"byte_end":39027,"line_start":42,"line_end":42,"column_start":18,"column_end":24},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1866},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":39457,"byte_end":39466,"line_start":60,"line_end":60,"column_start":15,"column_end":24},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":407},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":40034,"byte_end":40043,"line_start":78,"line_end":78,"column_start":27,"column_end":36},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":407},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":40689,"byte_end":40696,"line_start":99,"line_end":99,"column_start":27,"column_end":34},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1905},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":40953,"byte_end":40960,"line_start":109,"line_end":109,"column_start":17,"column_end":24},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1905},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":44004,"byte_end":44012,"line_start":186,"line_end":186,"column_start":38,"column_end":46},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":2001},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":44118,"byte_end":44131,"line_start":192,"line_end":192,"column_start":12,"column_end":25},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":430},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":44847,"byte_end":44860,"line_start":210,"line_end":210,"column_start":21,"column_end":34},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":430},"to":{"krate":2,"index":3422}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":48431,"byte_end":48446,"line_start":300,"line_end":300,"column_start":20,"column_end":35},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":2124},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":57759,"byte_end":57774,"line_start":557,"line_end":557,"column_start":31,"column_end":46},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":2124},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":60144,"byte_end":60163,"line_start":621,"line_end":621,"column_start":6,"column_end":25},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":2401},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":60311,"byte_end":60327,"line_start":628,"line_end":628,"column_start":6,"column_end":22},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":2408},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/client.rs","byte_start":60457,"byte_end":60473,"line_start":634,"line_end":634,"column_start":17,"column_end":33},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":2408},"to":{"krate":24,"index":96}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/context.rs","byte_start":78646,"byte_end":78654,"line_start":103,"line_end":103,"column_start":18,"column_end":26},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":2501},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/context.rs","byte_start":78735,"byte_end":78742,"line_start":109,"line_end":109,"column_start":6,"column_end":13},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":2418},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/context.rs","byte_start":79693,"byte_end":79697,"line_start":138,"line_end":138,"column_start":27,"column_end":31},"kind":{"Impl":{"id":86}},"from":{"krate":78,"index":503},"to":{"krate":0,"index":562}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/in_flight_requests.rs","byte_start":116422,"byte_end":116438,"line_start":36,"line_end":36,"column_start":6,"column_end":22},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":2506},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/in_flight_requests.rs","byte_start":119540,"byte_end":119556,"line_start":122,"line_end":122,"column_start":15,"column_end":31},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":2506},"to":{"krate":2,"index":3422}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/channels_per_key.rs","byte_start":124599,"byte_end":124606,"line_start":56,"line_end":56,"column_start":18,"column_end":25},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":2724},"to":{"krate":2,"index":3422}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/channels_per_key.rs","byte_start":124784,"byte_end":124798,"line_start":63,"line_end":63,"column_start":23,"column_end":37},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":2719},"to":{"krate":24,"index":96}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/channels_per_key.rs","byte_start":125035,"byte_end":125049,"line_start":74,"line_end":74,"column_start":27,"column_end":41},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":2719},"to":{"krate":25,"index":17}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/channels_per_key.rs","byte_start":125713,"byte_end":125727,"line_start":97,"line_end":97,"column_start":25,"column_end":39},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":2719},"to":{"krate":2,"index":3076}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/channels_per_key.rs","byte_start":125817,"byte_end":125831,"line_start":103,"line_end":103,"column_start":24,"column_end":38},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":2719},"to":{"krate":0,"index":1019}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/channels_per_key.rs","byte_start":126211,"byte_end":126225,"line_start":124,"line_end":124,"column_start":12,"column_end":26},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":2719},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/channels_per_key.rs","byte_start":126508,"byte_end":126525,"line_start":136,"line_end":136,"column_start":15,"column_end":32},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":2657},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/channels_per_key.rs","byte_start":127070,"byte_end":127087,"line_start":156,"line_end":156,"column_start":15,"column_end":32},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":2657},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/channels_per_key.rs","byte_start":130268,"byte_end":130285,"line_start":248,"line_end":248,"column_start":26,"column_end":43},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":2657},"to":{"krate":24,"index":96}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/requests_per_channel.rs","byte_start":138100,"byte_end":138111,"line_start":28,"line_end":28,"column_start":9,"column_end":20},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":2901},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/requests_per_channel.rs","byte_start":138223,"byte_end":138234,"line_start":35,"line_end":35,"column_start":9,"column_end":20},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":2901},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/requests_per_channel.rs","byte_start":138576,"byte_end":138587,"line_start":49,"line_end":49,"column_start":20,"column_end":31},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":2901},"to":{"krate":24,"index":96}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/requests_per_channel.rs","byte_start":139799,"byte_end":139810,"line_start":83,"line_end":83,"column_start":50,"column_end":61},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":2901},"to":{"krate":25,"index":17}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/requests_per_channel.rs","byte_start":140504,"byte_end":140515,"line_start":109,"line_end":109,"column_start":22,"column_end":33},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":2901},"to":{"krate":2,"index":3076}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/requests_per_channel.rs","byte_start":140599,"byte_end":140610,"line_start":115,"line_end":115,"column_start":21,"column_end":32},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":2901},"to":{"krate":0,"index":1019}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/requests_per_channel.rs","byte_start":141283,"byte_end":141304,"line_start":146,"line_end":146,"column_start":9,"column_end":30},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":2979},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/limits/requests_per_channel.rs","byte_start":141546,"byte_end":141567,"line_start":159,"line_end":159,"column_start":20,"column_end":41},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":2979},"to":{"krate":24,"index":96}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/incoming.rs","byte_start":148824,"byte_end":148825,"line_start":44,"line_end":44,"column_start":28,"column_end":29},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":924},"to":{"krate":0,"index":915}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/tokio.rs","byte_start":149364,"byte_end":149383,"line_start":17,"line_end":17,"column_start":12,"column_end":31},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":3035},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/tokio.rs","byte_start":149833,"byte_end":149852,"line_start":34,"line_end":34,"column_start":12,"column_end":31},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":3035},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/tokio.rs","byte_start":149994,"byte_end":150014,"line_start":40,"line_end":40,"column_start":12,"column_end":32},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":3092},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/tokio.rs","byte_start":150198,"byte_end":150206,"line_start":48,"line_end":48,"column_start":9,"column_end":17},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":3570},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/tokio.rs","byte_start":150703,"byte_end":150722,"line_start":64,"line_end":64,"column_start":28,"column_end":47},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":3035},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server/tokio.rs","byte_start":151299,"byte_end":151319,"line_start":84,"line_end":84,"column_start":23,"column_end":43},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":3092},"to":{"krate":2,"index":13541}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":81902,"byte_end":81908,"line_start":50,"line_end":50,"column_start":18,"column_end":24},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":3161},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":82021,"byte_end":82027,"line_start":58,"line_end":58,"column_start":6,"column_end":12},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":3161},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":82798,"byte_end":82799,"line_start":85,"line_end":85,"column_start":40,"column_end":41},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":996},"to":{"krate":0,"index":986}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":84058,"byte_end":84069,"line_start":120,"line_end":120,"column_start":20,"column_end":31},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":3228},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":86796,"byte_end":86807,"line_start":200,"line_end":200,"column_start":35,"column_end":46},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":3228},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":92312,"byte_end":92323,"line_start":330,"line_end":330,"column_start":31,"column_end":42},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":3228},"to":{"krate":24,"index":96}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":95351,"byte_end":95362,"line_start":407,"line_end":407,"column_start":45,"column_end":56},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":3228},"to":{"krate":25,"index":17}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":96874,"byte_end":96885,"line_start":456,"line_end":456,"column_start":33,"column_end":44},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":3228},"to":{"krate":2,"index":3076}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":97004,"byte_end":97015,"line_start":462,"line_end":462,"column_start":32,"column_end":43},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":3228},"to":{"krate":0,"index":1019}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":97864,"byte_end":97872,"line_start":498,"line_end":498,"column_start":9,"column_end":17},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":3570},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":101457,"byte_end":101465,"line_start":591,"line_end":591,"column_start":24,"column_end":32},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":3570},"to":{"krate":2,"index":10110}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":101800,"byte_end":101815,"line_start":607,"line_end":607,"column_start":16,"column_end":31},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":3575},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/server.rs","byte_start":103823,"byte_end":103831,"line_start":663,"line_end":663,"column_start":20,"column_end":28},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":3570},"to":{"krate":24,"index":96}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/transport/channel.rs","byte_start":155019,"byte_end":155035,"line_start":44,"line_end":44,"column_start":33,"column_end":49},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":3693},"to":{"krate":24,"index":96}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/transport/channel.rs","byte_start":155436,"byte_end":155452,"line_start":57,"line_end":57,"column_start":41,"column_end":57},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":3693},"to":{"krate":25,"index":17}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/transport/channel.rs","byte_start":157123,"byte_end":157130,"line_start":106,"line_end":106,"column_start":33,"column_end":40},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":3755},"to":{"krate":24,"index":96}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/transport/channel.rs","byte_start":157442,"byte_end":157449,"line_start":117,"line_end":117,"column_start":41,"column_end":48},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":3755},"to":{"krate":25,"index":17}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/transport.rs","byte_start":153390,"byte_end":153391,"line_start":31,"line_end":31,"column_start":62,"column_end":63},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":1162},"to":{"krate":0,"index":1157}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/util.rs","byte_start":160813,"byte_end":160823,"line_start":23,"line_end":23,"column_start":20,"column_end":30},"kind":{"Impl":{"id":180}},"from":{"krate":1,"index":11819},"to":{"krate":0,"index":1210}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/util.rs","byte_start":161197,"byte_end":161204,"line_start":35,"line_end":35,"column_start":27,"column_end":34},"kind":{"Impl":{"id":181}},"from":{"krate":1,"index":1306},"to":{"krate":0,"index":1214}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":14746,"byte_end":14753,"line_start":385,"line_end":385,"column_start":9,"column_end":16},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":3866},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/tarpc-0.29.0/src/lib.rs","byte_start":15236,"byte_end":15240,"line_start":403,"line_end":403,"column_start":31,"column_end":35},"kind":{"Impl":{"id":193}},"from":{"krate":2,"index":50105},"to":{"krate":0,"index":1244}}]}