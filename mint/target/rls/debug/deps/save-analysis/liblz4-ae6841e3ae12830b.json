{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0","program":"/Users/air/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","lz4","--edition=2018","/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=ae6841e3ae12830b","-C","extra-filename=-ae6841e3ae12830b","--out-dir","/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps","-L","dependency=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps","--extern","libc=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/liblibc-49d6f90793305e95.rmeta","--extern","lz4_sys=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/liblz4_sys-4a4e38506c808ff5.rmeta","--cap-lints","allow","-L","native=/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/build/lz4-sys-964bfe153c374c32/out","--error-format=json","--sysroot","/Users/air/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/air/Documents/programmingwork/blockchain/solana/rust-mint-nft/mint/target/rls/debug/deps/liblz4-ae6841e3ae12830b.rmeta"},"prelude":{"crate_id":{"name":"lz4","disambiguator":[15505325846085872267,0]},"crate_root":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src","external_crates":[{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[4485569597606079733,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[9994580471200982198,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[13944031075627487246,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5133993387825513881,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[14116380118705386640,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6269322086078963025,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[16152481959168563413,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7897074911849024150,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[7299104579826168146,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2669544452907545777,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[14288251452253695433,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[13943810077905921301,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[2237926517141734526,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[5541021343498733002,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[7188895526679788668,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[15555671723428220450,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[13375000548276363576,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[8920282723255285566,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[2397004371161247654,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/lib.rs","num":20,"id":{"name":"libc","disambiguator":[2594694148884002105,0]}},{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/lib.rs","num":21,"id":{"name":"lz4_sys","disambiguator":[5600370284552196768,0]}}],"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/lib.rs","byte_start":0,"byte_end":752,"line_start":1,"line_end":36,"column_start":1,"column_end":21}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/liblz4.rs","byte_start":898,"byte_end":899,"line_start":8,"line_end":8,"column_start":18,"column_end":19},"alias_span":null,"name":"*","value":"ContentChecksum, LZ4F_createDecompressionContext, LZ4F_freeDecompressionContext, LZ4F_compressUpdate, LZ4F_createCompressionContext, LZ4_compress_HC, LZ4F_compressBegin, LZ4_compress_fast, BlockSize, LZ4F_flush, LZ4F_decompress, LZ4FCompressionContext, LZ4F_isError, LZ4F_compressEnd, LZ4_decompress_safe, LZ4_compressBound, LZ4FDecompressionContext, LZ4FPreferences, BlockMode, LZ4_versionNumber, LZ4F_VERSION, LZ4F_getErrorName, LZ4FErrorCode, LZ4F_freeCompressionContext, LZ4F_compressBound, LZ4FFrameInfo, LZ4_compress_default","parent":{"krate":0,"index":5}},{"kind":"Use","ref_id":{"krate":0,"index":167},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/lib.rs","byte_start":126,"byte_end":133,"line_start":11,"line_end":11,"column_start":25,"column_end":32},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":193},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/lib.rs","byte_start":159,"byte_end":166,"line_start":12,"line_end":12,"column_start":25,"column_end":32},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":182},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/lib.rs","byte_start":192,"byte_end":206,"line_start":13,"line_end":13,"column_start":25,"column_end":39},"alias_span":null,"name":"EncoderBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":31},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/lib.rs","byte_start":231,"byte_end":238,"line_start":14,"line_end":14,"column_start":24,"column_end":31},"alias_span":null,"name":"version","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":90},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/lib.rs","byte_start":263,"byte_end":272,"line_start":15,"line_end":15,"column_start":24,"column_end":33},"alias_span":null,"name":"BlockMode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":70},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/lib.rs","byte_start":297,"byte_end":306,"line_start":16,"line_end":16,"column_start":24,"column_end":33},"alias_span":null,"name":"BlockSize","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":100},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/lib.rs","byte_start":331,"byte_end":346,"line_start":17,"line_end":17,"column_start":24,"column_end":39},"alias_span":null,"name":"ContentChecksum","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/lib.rs","byte_start":0,"byte_end":752,"line_start":1,"line_end":36,"column_start":1,"column_end":21},"name":"","qualname":"::","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":32},{"krate":0,"index":66},{"krate":0,"index":109},{"krate":0,"index":130},{"krate":0,"index":133},{"krate":0,"index":136},{"krate":0,"index":139},{"krate":0,"index":142},{"krate":0,"index":145},{"krate":0,"index":148},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":155}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":5},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/liblz4.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"liblz4","qualname":"::liblz4","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/liblz4.rs","parent":null,"children":[{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":158},{"krate":0,"index":161},{"krate":0,"index":25},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":31}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":158},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/liblz4.rs","byte_start":930,"byte_end":938,"line_start":11,"line_end":11,"column_start":12,"column_end":20},"name":"LZ4Error","qualname":"::liblz4::LZ4Error","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/liblz4.rs","byte_start":984,"byte_end":987,"line_start":14,"line_end":14,"column_start":8,"column_end":11},"name":"fmt","qualname":"<LZ4Error as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut Formatter) -> Result<(), ::std::fmt::Error>","parent":{"krate":2,"index":10117},"children":[],"decl_id":{"krate":2,"index":10118},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/liblz4.rs","byte_start":1149,"byte_end":1160,"line_start":20,"line_end":20,"column_start":8,"column_end":19},"name":"description","qualname":"<LZ4Error as std::error::Error>::description","value":"fn description(&Self) -> &str","parent":{"krate":1,"index":2569},"children":[],"decl_id":{"krate":1,"index":2573},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/liblz4.rs","byte_start":1208,"byte_end":1213,"line_start":24,"line_end":24,"column_start":8,"column_end":13},"name":"cause","qualname":"<LZ4Error as std::error::Error>::cause","value":"fn cause(&Self) -> Option<&dyn ::std::error::Error>","parent":{"krate":1,"index":2569},"children":[],"decl_id":{"krate":1,"index":2574},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":30},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/liblz4.rs","byte_start":1290,"byte_end":1301,"line_start":29,"line_end":29,"column_start":8,"column_end":19},"name":"check_error","qualname":"::liblz4::check_error","value":"fn check_error(LZ4FErrorCode) -> Result<usize, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":31},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/liblz4.rs","byte_start":1777,"byte_end":1784,"line_start":46,"line_end":46,"column_start":8,"column_end":15},"name":"version","qualname":"::liblz4::version","value":"fn version() -> i32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":167},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/decoder.rs","byte_start":2134,"byte_end":2141,"line_start":14,"line_end":14,"column_start":12,"column_end":19},"name":"Decoder","qualname":"::decoder::Decoder","value":"Decoder {  }","parent":null,"children":[{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/decoder.rs","byte_start":2458,"byte_end":2461,"line_start":27,"line_end":27,"column_start":12,"column_end":15},"name":"new","qualname":"<Decoder<R>>::new","value":"fn new(R) -> Result<Decoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder which will have its output written to the given\n output stream. The output stream can be re-acquired by calling\n `finish()`\n","sig":null,"attributes":[{"value":"/ Creates a new encoder which will have its output written to the given","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/decoder.rs","byte_start":2283,"byte_end":2356,"line_start":24,"line_end":24,"column_start":5,"column_end":78}},{"value":"/ output stream. The output stream can be re-acquired by calling","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/decoder.rs","byte_start":2361,"byte_end":2427,"line_start":25,"line_end":25,"column_start":5,"column_end":71}},{"value":"/ `finish()`","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/decoder.rs","byte_start":2432,"byte_end":2446,"line_start":26,"line_end":26,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/decoder.rs","byte_start":2811,"byte_end":2817,"line_start":40,"line_end":40,"column_start":12,"column_end":18},"name":"reader","qualname":"<Decoder<R>>::reader","value":"fn reader(&Self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Immutable reader reference.\n","sig":null,"attributes":[{"value":"/ Immutable reader reference.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/decoder.rs","byte_start":2768,"byte_end":2799,"line_start":39,"line_end":39,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/decoder.rs","byte_start":2867,"byte_end":2873,"line_start":44,"line_end":44,"column_start":12,"column_end":18},"name":"finish","qualname":"<Decoder<R>>::finish","value":"fn finish(Self) -> (R, Result<()>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/decoder.rs","byte_start":3242,"byte_end":3246,"line_start":59,"line_end":59,"column_start":8,"column_end":12},"name":"read","qualname":"<Decoder<R> as std::io::Read>::read","value":"fn read(&mut Self, &mut [u8]) -> Result<usize>","parent":{"krate":1,"index":4540},"children":[],"decl_id":{"krate":1,"index":4541},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":182},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/encoder.rs","byte_start":11314,"byte_end":11328,"line_start":14,"line_end":14,"column_start":12,"column_end":26},"name":"EncoderBuilder","qualname":"::encoder::EncoderBuilder","value":"EncoderBuilder {  }","parent":null,"children":[{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":193},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/encoder.rs","byte_start":11654,"byte_end":11661,"line_start":26,"line_end":26,"column_start":12,"column_end":19},"name":"Encoder","qualname":"::encoder::Encoder","value":"Encoder {  }","parent":null,"children":[{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/encoder.rs","byte_start":11775,"byte_end":11778,"line_start":34,"line_end":34,"column_start":12,"column_end":15},"name":"new","qualname":"<EncoderBuilder>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/encoder.rs","byte_start":12076,"byte_end":12086,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"block_size","qualname":"<EncoderBuilder>::block_size","value":"fn block_size(&mut Self, BlockSize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/encoder.rs","byte_start":12205,"byte_end":12215,"line_start":50,"line_end":50,"column_start":12,"column_end":22},"name":"block_mode","qualname":"<EncoderBuilder>::block_mode","value":"fn block_mode(&mut Self, BlockMode) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/encoder.rs","byte_start":12334,"byte_end":12342,"line_start":55,"line_end":55,"column_start":12,"column_end":20},"name":"checksum","qualname":"<EncoderBuilder>::checksum","value":"fn checksum(&mut Self, ContentChecksum) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/encoder.rs","byte_start":12461,"byte_end":12466,"line_start":60,"line_end":60,"column_start":12,"column_end":17},"name":"level","qualname":"<EncoderBuilder>::level","value":"fn level(&mut Self, u32) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/encoder.rs","byte_start":12564,"byte_end":12574,"line_start":65,"line_end":65,"column_start":12,"column_end":22},"name":"auto_flush","qualname":"<EncoderBuilder>::auto_flush","value":"fn auto_flush(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/encoder.rs","byte_start":12787,"byte_end":12802,"line_start":72,"line_end":72,"column_start":12,"column_end":27},"name":"favor_dec_speed","qualname":"<EncoderBuilder>::favor_dec_speed","value":"fn favor_dec_speed(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Favor decompression speed over compression ratio. Requires compression\n level >=10.\n","sig":null,"attributes":[{"value":"/ Favor decompression speed over compression ratio. Requires compression","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/encoder.rs","byte_start":12681,"byte_end":12755,"line_start":70,"line_end":70,"column_start":5,"column_end":79}},{"value":"/ level >=10.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/encoder.rs","byte_start":12760,"byte_end":12775,"line_start":71,"line_end":71,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/encoder.rs","byte_start":12931,"byte_end":12936,"line_start":77,"line_end":77,"column_start":12,"column_end":17},"name":"build","qualname":"<EncoderBuilder>::build","value":"fn build<W>(&Self, W) -> Result<Encoder<W>> where W: Write","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/encoder.rs","byte_start":14766,"byte_end":14772,"line_start":132,"line_end":132,"column_start":12,"column_end":18},"name":"writer","qualname":"<Encoder<W>>::writer","value":"fn writer(&Self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Immutable writer reference.\n","sig":null,"attributes":[{"value":"/ Immutable writer reference.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/encoder.rs","byte_start":14723,"byte_end":14754,"line_start":131,"line_end":131,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/encoder.rs","byte_start":15017,"byte_end":15023,"line_start":139,"line_end":139,"column_start":12,"column_end":18},"name":"finish","qualname":"<Encoder<W>>::finish","value":"fn finish(Self) -> (W, Result<()>)","parent":null,"children":[],"decl_id":null,"docs":" This function is used to flag that this session of compression is done\n with. The stream is finished up (final bytes are written), and then the\n wrapped writer is returned.\n","sig":null,"attributes":[{"value":"/ This function is used to flag that this session of compression is done","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/encoder.rs","byte_start":14815,"byte_end":14889,"line_start":136,"line_end":136,"column_start":5,"column_end":79}},{"value":"/ with. The stream is finished up (final bytes are written), and then the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/encoder.rs","byte_start":14894,"byte_end":14969,"line_start":137,"line_end":137,"column_start":5,"column_end":80}},{"value":"/ wrapped writer is returned.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/encoder.rs","byte_start":14974,"byte_end":15005,"line_start":138,"line_end":138,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/encoder.rs","byte_start":15173,"byte_end":15178,"line_start":146,"line_end":146,"column_start":8,"column_end":13},"name":"write","qualname":"<Encoder<W> as std::io::Write>::write","value":"fn write(&mut Self, &[u8]) -> Result<usize>","parent":{"krate":1,"index":4597},"children":[],"decl_id":{"krate":1,"index":4598},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/encoder.rs","byte_start":15887,"byte_end":15892,"line_start":167,"line_end":167,"column_start":8,"column_end":13},"name":"flush","qualname":"<Encoder<W> as std::io::Write>::flush","value":"fn flush(&mut Self) -> Result<()>","parent":{"krate":1,"index":4597},"children":[],"decl_id":{"krate":1,"index":4602},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":109},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/block/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"block","qualname":"::block","value":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/block/mod.rs","parent":null,"children":[{"krate":0,"index":110},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":118},{"krate":0,"index":121},{"krate":0,"index":202},{"krate":0,"index":211},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129}],"decl_id":null,"docs":" This module provides access to the block mode functions of the lz4 C library.\n It somehow resembles the [Python-lz4](http://python-lz4.readthedocs.io/en/stable/lz4.block.html) api,\n but using Rust's Option type, the function parameters have been a little simplified.\n As does python-lz4, this module supports prepending the compressed buffer with a u32 value\n representing the size of the original, uncompressed data.","sig":null,"attributes":[{"value":"/ This module provides access to the block mode functions of the lz4 C library.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/block/mod.rs","byte_start":18602,"byte_end":18683,"line_start":1,"line_end":1,"column_start":1,"column_end":82}},{"value":"/ It somehow resembles the [Python-lz4](http://python-lz4.readthedocs.io/en/stable/lz4.block.html) api,","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/block/mod.rs","byte_start":18684,"byte_end":18789,"line_start":2,"line_end":2,"column_start":1,"column_end":106}},{"value":"/ but using Rust's Option type, the function parameters have been a little simplified.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/block/mod.rs","byte_start":18790,"byte_end":18878,"line_start":3,"line_end":3,"column_start":1,"column_end":89}},{"value":"/ As does python-lz4, this module supports prepending the compressed buffer with a u32 value","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/block/mod.rs","byte_start":18879,"byte_end":18973,"line_start":4,"line_end":4,"column_start":1,"column_end":95}},{"value":"/ representing the size of the original, uncompressed data.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/block/mod.rs","byte_start":18974,"byte_end":19035,"line_start":5,"line_end":5,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/block/mod.rs","byte_start":19036,"byte_end":19039,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/block/mod.rs","byte_start":19040,"byte_end":19054,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/block/mod.rs","byte_start":19055,"byte_end":19062,"line_start":8,"line_end":8,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/block/mod.rs","byte_start":19063,"byte_end":19066,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ use lz4::block::{compress,decompress};","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/block/mod.rs","byte_start":19067,"byte_end":19109,"line_start":10,"line_end":10,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/block/mod.rs","byte_start":19110,"byte_end":19113,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ let v = vec![0u8; 1024];","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/block/mod.rs","byte_start":19114,"byte_end":19142,"line_start":12,"line_end":12,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/block/mod.rs","byte_start":19143,"byte_end":19146,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ let comp_with_prefix = compress(&v, None, true).unwrap();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/block/mod.rs","byte_start":19147,"byte_end":19208,"line_start":14,"line_end":14,"column_start":1,"column_end":62}},{"value":"/ let comp_wo_prefix = compress(&v, None, false).unwrap();","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/block/mod.rs","byte_start":19209,"byte_end":19269,"line_start":15,"line_end":15,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/block/mod.rs","byte_start":19270,"byte_end":19273,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(v, decompress(&comp_with_prefix, None).unwrap());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/block/mod.rs","byte_start":19274,"byte_end":19338,"line_start":17,"line_end":17,"column_start":1,"column_end":65}},{"value":"/ assert_eq!(v, decompress(&comp_wo_prefix, Some(1024)).unwrap());","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/block/mod.rs","byte_start":19339,"byte_end":19407,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/ ```","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/block/mod.rs","byte_start":19408,"byte_end":19415,"line_start":19,"line_end":19,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":203},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/block/mod.rs","byte_start":19648,"byte_end":19663,"line_start":29,"line_end":29,"column_start":5,"column_end":20},"name":"HIGHCOMPRESSION","qualname":"::block::CompressionMode::HIGHCOMPRESSION","value":"CompressionMode::HIGHCOMPRESSION(i32)","parent":{"krate":0,"index":202},"children":[],"decl_id":null,"docs":" High compression with compression parameter\n","sig":null,"attributes":[{"value":"/ High compression with compression parameter","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/block/mod.rs","byte_start":19596,"byte_end":19643,"line_start":28,"line_end":28,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":205},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/block/mod.rs","byte_start":19664,"byte_end":19667,"line_start":29,"line_end":29,"column_start":21,"column_end":24},"name":"0","qualname":"::block::CompressionMode::HIGHCOMPRESSION::0","value":"i32","parent":{"krate":0,"index":203},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":206},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/block/mod.rs","byte_start":19725,"byte_end":19729,"line_start":31,"line_end":31,"column_start":5,"column_end":9},"name":"FAST","qualname":"::block::CompressionMode::FAST","value":"CompressionMode::FAST(i32)","parent":{"krate":0,"index":202},"children":[],"decl_id":null,"docs":" Fast compression with acceleration paramet\n","sig":null,"attributes":[{"value":"/ Fast compression with acceleration paramet","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/block/mod.rs","byte_start":19674,"byte_end":19720,"line_start":30,"line_end":30,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":208},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/block/mod.rs","byte_start":19730,"byte_end":19733,"line_start":31,"line_end":31,"column_start":10,"column_end":13},"name":"0","qualname":"::block::CompressionMode::FAST::0","value":"i32","parent":{"krate":0,"index":206},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":209},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/block/mod.rs","byte_start":19768,"byte_end":19775,"line_start":33,"line_end":33,"column_start":5,"column_end":12},"name":"DEFAULT","qualname":"::block::CompressionMode::DEFAULT","value":"CompressionMode::DEFAULT","parent":{"krate":0,"index":202},"children":[],"decl_id":null,"docs":" Default compression\n","sig":null,"attributes":[{"value":"/ Default compression","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/block/mod.rs","byte_start":19740,"byte_end":19763,"line_start":32,"line_end":32,"column_start":5,"column_end":28}}]},{"kind":"Enum","id":{"krate":0,"index":202},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/block/mod.rs","byte_start":19574,"byte_end":19589,"line_start":27,"line_end":27,"column_start":10,"column_end":25},"name":"CompressionMode","qualname":"::block::CompressionMode","value":"enum CompressionMode { HIGHCOMPRESSION(i32), FAST(i32), DEFAULT, }","parent":null,"children":[{"krate":0,"index":203},{"krate":0,"index":206},{"krate":0,"index":209}],"decl_id":null,"docs":" Represents the compression mode do be used.\n","sig":null,"attributes":[{"value":"/ Represents the compression mode do be used.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/block/mod.rs","byte_start":19500,"byte_end":19547,"line_start":25,"line_end":25,"column_start":1,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":124},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/block/mod.rs","byte_start":20024,"byte_end":20038,"line_start":39,"line_end":39,"column_start":8,"column_end":22},"name":"compress_bound","qualname":"::block::compress_bound","value":"fn compress_bound(usize) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns the size of the buffer that is guaranteed to hold the result of\n compressing `uncompressed_size` bytes of in data. Returns std::io::Error\n with ErrorKind::InvalidInput if input data is too long to be compressed by lz4.\n","sig":null,"attributes":[{"value":"/ Returns the size of the buffer that is guaranteed to hold the result of","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/block/mod.rs","byte_start":19780,"byte_end":19855,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"/ compressing `uncompressed_size` bytes of in data. Returns std::io::Error","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/block/mod.rs","byte_start":19856,"byte_end":19932,"line_start":37,"line_end":37,"column_start":1,"column_end":77}},{"value":"/ with ErrorKind::InvalidInput if input data is too long to be compressed by lz4.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/block/mod.rs","byte_start":19933,"byte_end":20016,"line_start":38,"line_end":38,"column_start":1,"column_end":84}}]},{"kind":"Function","id":{"krate":0,"index":125},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/block/mod.rs","byte_start":20956,"byte_end":20964,"line_start":62,"line_end":62,"column_start":8,"column_end":16},"name":"compress","qualname":"::block::compress","value":"fn compress(&[u8], Option<CompressionMode>, bool) -> Result<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Compresses the full src buffer using the specified CompressionMode, where None and Some(Default)\n are treated equally. If prepend_size is set, the source length will be prepended to the output\n buffer.","sig":null,"attributes":[{"value":"/ Compresses the full src buffer using the specified CompressionMode, where None and Some(Default)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/block/mod.rs","byte_start":20443,"byte_end":20543,"line_start":53,"line_end":53,"column_start":1,"column_end":101}},{"value":"/ are treated equally. If prepend_size is set, the source length will be prepended to the output","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/block/mod.rs","byte_start":20544,"byte_end":20642,"line_start":54,"line_end":54,"column_start":1,"column_end":99}},{"value":"/ buffer.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/block/mod.rs","byte_start":20643,"byte_end":20654,"line_start":55,"line_end":55,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/block/mod.rs","byte_start":20655,"byte_end":20658,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/block/mod.rs","byte_start":20659,"byte_end":20662,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/block/mod.rs","byte_start":20663,"byte_end":20675,"line_start":58,"line_end":58,"column_start":1,"column_end":13}},{"value":"/ Returns std::io::Error with ErrorKind::InvalidInput if the src buffer is too long.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/block/mod.rs","byte_start":20676,"byte_end":20762,"line_start":59,"line_end":59,"column_start":1,"column_end":87}},{"value":"/ Returns std::io::Error with ErrorKind::Other if the compression failed inside the C library. If","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/block/mod.rs","byte_start":20763,"byte_end":20862,"line_start":60,"line_end":60,"column_start":1,"column_end":100}},{"value":"/ this happens, the C api was not able to provide more information about the cause.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/block/mod.rs","byte_start":20863,"byte_end":20948,"line_start":61,"line_end":61,"column_start":1,"column_end":86}}]},{"kind":"Function","id":{"krate":0,"index":126},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/block/mod.rs","byte_start":22063,"byte_end":22081,"line_start":93,"line_end":93,"column_start":8,"column_end":26},"name":"compress_to_buffer","qualname":"::block::compress_to_buffer","value":"fn compress_to_buffer(&[u8], Option<CompressionMode>, bool, &mut [u8])\n-> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Compresses the full `src` buffer using the specified CompressionMode, where None and Some(Default)\n are treated equally, writing compressed bytes to `buffer`.","sig":null,"attributes":[{"value":"/ Compresses the full `src` buffer using the specified CompressionMode, where None and Some(Default)","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/block/mod.rs","byte_start":21686,"byte_end":21788,"line_start":87,"line_end":87,"column_start":1,"column_end":103}},{"value":"/ are treated equally, writing compressed bytes to `buffer`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/block/mod.rs","byte_start":21789,"byte_end":21851,"line_start":88,"line_end":88,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/block/mod.rs","byte_start":21852,"byte_end":21855,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/block/mod.rs","byte_start":21856,"byte_end":21868,"line_start":90,"line_end":90,"column_start":1,"column_end":13}},{"value":"/ Returns std::io::Error with ErrorKind::InvalidInput if the src buffer is too long.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/block/mod.rs","byte_start":21869,"byte_end":21955,"line_start":91,"line_end":91,"column_start":1,"column_end":87}},{"value":"/ Returns std::io::Error with ErrorKind::Other if the compression data does not find in `buffer`.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/block/mod.rs","byte_start":21956,"byte_end":22055,"line_start":92,"line_end":92,"column_start":1,"column_end":100}}]},{"kind":"Function","id":{"krate":0,"index":128},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/block/mod.rs","byte_start":25597,"byte_end":25607,"line_start":209,"line_end":209,"column_start":8,"column_end":18},"name":"decompress","qualname":"::block::decompress","value":"fn decompress(&[u8], Option<i32>) -> Result<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Decompresses the src buffer. If uncompressed_size is None, the source length will be read from\n the start of the input buffer.","sig":null,"attributes":[{"value":"/ Decompresses the src buffer. If uncompressed_size is None, the source length will be read from","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/block/mod.rs","byte_start":25118,"byte_end":25216,"line_start":199,"line_end":199,"column_start":1,"column_end":99}},{"value":"/ the start of the input buffer.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/block/mod.rs","byte_start":25217,"byte_end":25251,"line_start":200,"line_end":200,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/block/mod.rs","byte_start":25252,"byte_end":25255,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/block/mod.rs","byte_start":25256,"byte_end":25259,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/block/mod.rs","byte_start":25260,"byte_end":25272,"line_start":203,"line_end":203,"column_start":1,"column_end":13}},{"value":"/ Returns std::io::Error with ErrorKind::InvalidInput if the src buffer is too short, the","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/block/mod.rs","byte_start":25273,"byte_end":25364,"line_start":204,"line_end":204,"column_start":1,"column_end":92}},{"value":"/ provided (or parsed) uncompressed_size is to large or negative.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/block/mod.rs","byte_start":25365,"byte_end":25432,"line_start":205,"line_end":205,"column_start":1,"column_end":68}},{"value":"/ Returns std::io::Error with ErrorKind::InvalidData if the decompression failed inside the C","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/block/mod.rs","byte_start":25433,"byte_end":25528,"line_start":206,"line_end":206,"column_start":1,"column_end":96}},{"value":"/ library. This is most likely due to malformed input.","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/block/mod.rs","byte_start":25529,"byte_end":25585,"line_start":207,"line_end":207,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/block/mod.rs","byte_start":25586,"byte_end":25589,"line_start":208,"line_end":208,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":129},"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/block/mod.rs","byte_start":25865,"byte_end":25885,"line_start":218,"line_end":218,"column_start":8,"column_end":28},"name":"decompress_to_buffer","qualname":"::block::decompress_to_buffer","value":"fn decompress_to_buffer(&[u8], Option<i32>, &mut [u8]) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/liblz4.rs","byte_start":966,"byte_end":974,"line_start":13,"line_end":13,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":26}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/liblz4.rs","byte_start":1131,"byte_end":1139,"line_start":19,"line_end":19,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":28},{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/decoder.rs","byte_start":2266,"byte_end":2273,"line_start":23,"line_end":23,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/decoder.rs","byte_start":3222,"byte_end":3229,"line_start":58,"line_end":58,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/decoder.rs","byte_start":4840,"byte_end":4854,"line_start":105,"line_end":105,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/decoder.rs","byte_start":5126,"byte_end":5140,"line_start":113,"line_end":113,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/encoder.rs","byte_start":11747,"byte_end":11761,"line_start":33,"line_end":33,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/encoder.rs","byte_start":13927,"byte_end":13934,"line_start":104,"line_end":104,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/encoder.rs","byte_start":15153,"byte_end":15160,"line_start":145,"line_end":145,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":103},{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/encoder.rs","byte_start":16414,"byte_end":16428,"line_start":187,"line_end":187,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/encoder.rs","byte_start":16696,"byte_end":16710,"line_start":195,"line_end":195,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/lib.rs","byte_start":50,"byte_end":56,"line_start":4,"line_end":4,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":5}},{"kind":"Mod","span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/lib.rs","byte_start":94,"byte_end":99,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":109}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/liblz4.rs","byte_start":966,"byte_end":974,"line_start":13,"line_end":13,"column_start":18,"column_end":26},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":158},"to":{"krate":2,"index":10117}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/liblz4.rs","byte_start":1131,"byte_end":1139,"line_start":19,"line_end":19,"column_start":30,"column_end":38},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":158},"to":{"krate":1,"index":2569}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/decoder.rs","byte_start":2266,"byte_end":2273,"line_start":23,"line_end":23,"column_start":15,"column_end":22},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":167},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/decoder.rs","byte_start":3222,"byte_end":3229,"line_start":58,"line_end":58,"column_start":24,"column_end":31},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":167},"to":{"krate":1,"index":4540}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/decoder.rs","byte_start":4840,"byte_end":4854,"line_start":105,"line_end":105,"column_start":6,"column_end":20},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":163},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/decoder.rs","byte_start":5126,"byte_end":5140,"line_start":113,"line_end":113,"column_start":15,"column_end":29},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":163},"to":{"krate":2,"index":3422}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/encoder.rs","byte_start":11747,"byte_end":11761,"line_start":33,"line_end":33,"column_start":6,"column_end":20},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":182},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/encoder.rs","byte_start":13927,"byte_end":13934,"line_start":104,"line_end":104,"column_start":16,"column_end":23},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":193},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/encoder.rs","byte_start":15153,"byte_end":15160,"line_start":145,"line_end":145,"column_start":26,"column_end":33},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":193},"to":{"krate":1,"index":4597}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/encoder.rs","byte_start":16414,"byte_end":16428,"line_start":187,"line_end":187,"column_start":6,"column_end":20},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":178},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/air/.cargo/registry/src/github.com-1ecc6299db9ec823/lz4-1.24.0/src/encoder.rs","byte_start":16696,"byte_end":16710,"line_start":195,"line_end":195,"column_start":15,"column_end":29},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":178},"to":{"krate":2,"index":3422}}]}